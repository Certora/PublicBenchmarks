(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-fun x5667 (Real) Real)
(declare-fun x3691 () Bool)
(declare-fun x2621 (Real) Real)
(declare-fun x5698 () Real)
(declare-fun x5856 () Real)
(declare-fun x1336 () Real)
(declare-fun x6054 () Real)
(declare-fun x5150 () Real)
(declare-fun x3933 () Bool)
(declare-fun x4249 () Real)
(declare-fun x3346 () Bool)
(declare-fun x6156 () Bool)
(declare-fun x5720 () Real)
(declare-fun x1114 () Real)
(declare-fun x5126 () Real)
(declare-fun x306 () Real)
(declare-fun x6164 () Real)
(declare-fun x4634 () Real)
(declare-fun x4303 () Real)
(declare-fun x4670 () Real)
(declare-fun x3020 () Bool)
(declare-fun x4346 () Bool)
(declare-fun x431 () Real)
(declare-fun x4302 () Real)
(declare-fun x2211 () Real)
(declare-fun x5096 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x2117 () Bool)
(declare-fun x5008 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x3649 () Bool)
(declare-fun x86 () Bool)
(declare-fun x661 () Real)
(declare-fun x4343 () Real)
(declare-fun x54 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x1978 () Real)
(declare-fun x1194 () Bool)
(declare-fun x748 () Bool)
(declare-fun x2887 () Real)
(declare-fun x39 () Bool)
(declare-fun x4930 () Bool)
(declare-fun x892 () Bool)
(declare-fun x5521 () Bool)
(declare-fun x331 () Real)
(declare-fun x82 () Real)
(declare-fun x2533 () Bool)
(declare-fun x1895 (Real) Real)
(declare-fun x3420 () Real)
(declare-fun x3639 () Real)
(declare-fun x5827 () Real)
(declare-fun x3775 () Real)
(declare-fun x3838 () Bool)
(declare-fun x4625 () Real)
(declare-fun x3424 () Real)
(declare-fun x508 (Real) Real)
(declare-fun x4981 (Real) Real)
(declare-fun x441 () Bool)
(declare-fun x1324 () Real)
(declare-fun x1277 () Bool)
(declare-fun x5335 (Real) Real)
(declare-fun x5284 () Bool)
(declare-fun x1343 () Real)
(declare-fun x3031 () Bool)
(declare-fun x3633 () Real)
(declare-fun x3173 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x956 () Real)
(declare-fun x4958 () Bool)
(declare-fun x3400 () Bool)
(declare-fun x1439 () Real)
(declare-fun x5655 (Real) Real)
(declare-fun x5168 () Bool)
(declare-fun x5222 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x2763 () Bool)
(declare-fun x917 () Real)
(declare-fun x5793 () Real)
(declare-fun x3176 () Real)
(declare-fun x3298 () Bool)
(declare-fun x3595 () Real)
(declare-fun x2948 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x2173 () Real)
(declare-fun x2108 () Bool)
(declare-fun x1474 (Real) Real)
(declare-fun x4914 () Bool)
(declare-fun x2443 () Real)
(declare-fun x4514 () Real)
(declare-fun x290 () Bool)
(declare-fun x2766 () Bool)
(declare-fun x3968 () Real)
(declare-fun x2035 () Real)
(declare-fun x5862 () Real)
(declare-fun x5327 () Real)
(declare-fun x3557 () Real)
(declare-fun x802 () Real)
(declare-fun x612 () Bool)
(declare-fun x765 () Real)
(declare-fun x2878 () Real)
(declare-fun x259 () Bool)
(declare-fun x479 () Bool)
(declare-fun x4410 () Bool)
(declare-fun x58 () Bool)
(declare-fun x1534 () Real)
(declare-fun x3351 () Bool)
(declare-fun x2841 () Real)
(declare-fun x5 (Real Real) Real)
(declare-fun x3742 () Real)
(declare-fun x3855 () Bool)
(declare-fun x5694 () Real)
(declare-fun x2554 () Real)
(declare-fun x764 () Real)
(declare-fun x3869 () Bool)
(declare-fun x2506 () Bool)
(declare-fun x4554 () Real)
(declare-fun x1837 () Bool)
(declare-fun x2033 () Real)
(declare-fun x652 () Real)
(declare-fun x1574 () Real)
(declare-fun x950 () Bool)
(declare-fun x975 () Bool)
(declare-fun x561 () Real)
(declare-fun x5867 () Bool)
(declare-fun x4314 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x2069 () Real)
(declare-fun x4140 () Real)
(declare-fun x655 () Real)
(declare-fun x1217 () Real)
(declare-fun x727 () Bool)
(declare-fun x199 () Real)
(declare-fun x5028 () Real)
(declare-fun x4949 (Real) Real)
(declare-fun x276 () Real)
(declare-fun x5652 () Bool)
(declare-fun x2803 () Bool)
(declare-fun x483 () Real)
(declare-fun x2882 () Bool)
(declare-fun x291 () Real)
(declare-fun x1251 () Real)
(declare-fun x3345 () Real)
(declare-fun x4080 () Real)
(declare-fun x1340 () Real)
(declare-fun x1036 () Real)
(declare-fun x817 () Real)
(declare-fun x4686 () Bool)
(declare-fun x477 () Bool)
(declare-fun x4684 () Bool)
(declare-fun x367 () Bool)
(declare-fun x3149 () Real)
(declare-fun x960 () Real)
(declare-fun x426 () Bool)
(declare-fun x6168 (Real) Real)
(declare-fun x5124 () Real)
(declare-fun x666 () Real)
(declare-fun x2304 () Bool)
(declare-fun x332 () Real)
(declare-fun x3693 () Real)
(declare-fun x698 (Real) Real)
(declare-fun x142 () Bool)
(declare-fun x1930 () Real)
(declare-fun x4300 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x2294 () Bool)
(declare-fun x859 () Bool)
(declare-fun x2564 () Bool)
(declare-fun x531 () Bool)
(declare-fun x3884 () Real)
(declare-fun x1611 () Bool)
(declare-fun x1780 () Real)
(declare-fun x257 () Bool)
(declare-fun x3131 () Real)
(declare-fun x6094 () Real)
(declare-fun x4012 (Real) Real)
(declare-fun x1871 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x2002 () Real)
(declare-fun x200 () Real)
(declare-fun x3034 () Real)
(declare-fun x3394 () Bool)
(declare-fun x2233 () Real)
(declare-fun x4963 () Bool)
(declare-fun x3695 () Real)
(declare-fun x2313 () Bool)
(declare-fun x5164 () Real)
(declare-fun x2969 () Real)
(declare-fun x1811 () Real)
(declare-fun x5047 () Real)
(declare-fun x1719 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x3456 () Real)
(declare-fun x6175 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x5843 (Real) Real)
(declare-fun x676 () Bool)
(declare-fun x5503 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x4596 () Real)
(declare-fun x5305 () Real)
(declare-fun x3396 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x2577 () Real)
(declare-fun x5908 () Bool)
(declare-fun x2047 () Bool)
(declare-fun x903 () Bool)
(declare-fun x3105 () Bool)
(declare-fun x2056 () Real)
(declare-fun x3223 () Real)
(declare-fun x5718 () Bool)
(declare-fun x931 () Bool)
(declare-fun x1525 () Real)
(declare-fun x6082 () Real)
(declare-fun x5458 () Bool)
(declare-fun x3279 () Bool)
(declare-fun x2136 () Real)
(declare-fun x3675 () Real)
(declare-fun x2606 () Bool)
(declare-fun x2959 () Bool)
(declare-fun x2759 () Real)
(declare-fun x3051 () Bool)
(declare-fun x5382 () Bool)
(declare-fun x3867 () Real)
(declare-fun x4764 () Real)
(declare-fun x5664 (Real) Real)
(declare-fun x6081 () Bool)
(declare-fun x762 () Real)
(declare-fun x168 () Bool)
(declare-fun x5340 () Bool)
(declare-fun x1419 () Real)
(declare-fun x555 () Bool)
(declare-fun x2559 () Real)
(declare-fun x3903 () Bool)
(declare-fun x747 () Bool)
(declare-fun x4663 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x2124 () Real)
(declare-fun x5757 () Real)
(declare-fun x5978 () Bool)
(declare-fun x2901 () Bool)
(declare-fun x5258 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x2087 () Real)
(declare-fun x4241 () Real)
(declare-fun x4284 () Real)
(declare-fun x486 () Real)
(declare-fun x961 () Bool)
(declare-fun x357 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x4026 () Real)
(declare-fun x2551 () Bool)
(declare-fun x17 () Bool)
(declare-fun x5161 () Bool)
(declare-fun x1881 () Real)
(declare-fun x5961 () Real)
(declare-fun x475 () Bool)
(declare-fun x5067 () Real)
(declare-fun x6171 () Real)
(declare-fun x2274 () Real)
(declare-fun x3916 () Bool)
(declare-fun x2555 () Real)
(declare-fun x4891 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x2060 () Real)
(declare-fun x5215 () Bool)
(declare-fun x4827 () Real)
(declare-fun x3238 () Bool)
(declare-fun x4235 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x4651 () Bool)
(declare-fun x4449 () Bool)
(declare-fun x6121 () Bool)
(declare-fun x3685 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x267 () Real)
(declare-fun x4040 () Real)
(declare-fun x447 () Real)
(declare-fun x6101 () Bool)
(declare-fun x6069 () Real)
(declare-fun x3959 () Bool)
(declare-fun x1119 () Real)
(declare-fun x5848 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x3940 () Real)
(declare-fun x1745 () Real)
(declare-fun x3674 () Real)
(declare-fun x1730 () Bool)
(declare-fun x5841 () Real)
(declare-fun x3534 () Bool)
(declare-fun x4387 () Bool)
(declare-fun x5476 () Real)
(declare-fun x2518 () Bool)
(declare-fun x4824 () Bool)
(declare-fun x768 () Real)
(declare-fun x3502 () Real)
(declare-fun x5930 (Real) Real)
(declare-fun x2461 () Real)
(declare-fun x275 (Real) Real)
(declare-fun x2307 () Real)
(declare-fun x1928 () Real)
(declare-fun x2677 () Bool)
(declare-fun x5457 () Bool)
(declare-fun x5177 () Real)
(declare-fun x3408 () Real)
(declare-fun x3048 () Real)
(declare-fun x5571 () Real)
(declare-fun x404 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x2610 () Real)
(declare-fun x2973 () Bool)
(declare-fun x5296 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x435 () Bool)
(declare-fun x4758 () Bool)
(declare-fun x4931 () Real)
(declare-fun x3619 () Real)
(declare-fun x2888 () Real)
(declare-fun x1464 () Bool)
(declare-fun x4527 () Real)
(declare-fun x3085 () Real)
(declare-fun x3310 () Real)
(declare-fun x3459 () Real)
(declare-fun x3860 () Real)
(declare-fun x5196 () Real)
(declare-fun x5275 () Bool)
(declare-fun x1139 () Real)
(declare-fun x1159 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x385 () Real)
(declare-fun x5909 () Bool)
(declare-fun x1679 () Bool)
(declare-fun x3435 () Bool)
(declare-fun x3911 () Real)
(declare-fun x2993 () Real)
(declare-fun x5846 () Bool)
(declare-fun x4141 () Real)
(declare-fun x532 () Real)
(declare-fun x4645 () Real)
(declare-fun x3985 () Bool)
(declare-fun x2359 (Real) Real)
(declare-fun x3979 () Real)
(declare-fun x5956 () Real)
(declare-fun x5647 () Bool)
(declare-fun x5468 () Real)
(declare-fun x3870 () Bool)
(declare-fun x1597 (Real) Real)
(declare-fun x3702 () Real)
(declare-fun x3671 () Real)
(declare-fun x2107 () Real)
(declare-fun x190 () Bool)
(declare-fun x5104 () Bool)
(declare-fun x3464 () Bool)
(declare-fun x8 () Real)
(declare-fun x5440 () Bool)
(declare-fun x4810 () Real)
(declare-fun x2698 () Bool)
(declare-fun x4616 () Bool)
(declare-fun x4371 () Real)
(declare-fun x4276 () Bool)
(declare-fun x4094 () Real)
(declare-fun x3915 () Bool)
(declare-fun x157 () Bool)
(declare-fun x6173 () Real)
(declare-fun x3033 () Bool)
(declare-fun x481 () Real)
(declare-fun x3055 () Bool)
(declare-fun x310 () Real)
(declare-fun x535 () Real)
(declare-fun x3567 () Real)
(declare-fun x809 () Real)
(declare-fun x5518 () Real)
(declare-fun x5868 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x21 () Bool)
(declare-fun x1054 () Real)
(declare-fun x5509 (Real) Real)
(declare-fun x4694 () Bool)
(declare-fun x6047 () Real)
(declare-fun x6133 () Real)
(declare-fun x6010 () Bool)
(declare-fun x4598 () Real)
(declare-fun x1300 () Bool)
(declare-fun x2694 () Real)
(declare-fun x5512 () Bool)
(declare-fun x1166 () Real)
(declare-fun x2490 () Real)
(declare-fun x5032 (Real) Real)
(declare-fun x2080 () Bool)
(declare-fun x3476 () Real)
(declare-fun x5883 () Bool)
(declare-fun x2860 () Real)
(declare-fun x227 () Bool)
(declare-fun x2844 () Real)
(declare-fun x4494 () Bool)
(declare-fun x3058 () Real)
(declare-fun x2150 () Real)
(declare-fun x5171 () Bool)
(declare-fun x521 () Bool)
(declare-fun x468 () Bool)
(declare-fun x2883 () Bool)
(declare-fun x4922 () Bool)
(declare-fun x256 () Bool)
(declare-fun x3378 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x4973 () Real)
(declare-fun x6136 () Real)
(declare-fun x4852 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x1888 () Real)
(declare-fun x1990 () Bool)
(declare-fun x5112 () Real)
(declare-fun x5806 () Bool)
(declare-fun x578 () Real)
(declare-fun x221 () Real)
(declare-fun x938 () Bool)
(declare-fun x3471 (Real) Real)
(declare-fun x2641 () Real)
(declare-fun x3601 () Real)
(declare-fun x5990 () Real)
(declare-fun x4656 () Real)
(declare-fun x4188 () Real)
(declare-fun x1164 () Bool)
(declare-fun x1270 (Real) Real)
(declare-fun x5944 (Real) Real)
(declare-fun x708 () Bool)
(declare-fun x5749 () Real)
(declare-fun x4066 () Bool)
(declare-fun x2982 () Bool)
(declare-fun x5926 () Real)
(declare-fun x1818 () Real)
(declare-fun x1057 () Bool)
(declare-fun x4383 () Real)
(declare-fun x3877 () Real)
(declare-fun x2058 () Bool)
(declare-fun x110 () Bool)
(declare-fun x2940 () Real)
(declare-fun x4743 () Bool)
(declare-fun x5591 () Real)
(declare-fun x1370 () Bool)
(declare-fun x81 () Real)
(declare-fun x4652 () Real)
(declare-fun x5635 () Bool)
(declare-fun x5814 () Real)
(declare-fun x203 () Real)
(declare-fun x5722 () Bool)
(declare-fun x4726 () Real)
(declare-fun x3235 () Bool)
(declare-fun x839 () Bool)
(declare-fun x255 () Bool)
(declare-fun x5516 (Real) Real)
(declare-fun x2684 () Bool)
(declare-fun x2498 () Real)
(declare-fun x5904 () Real)
(declare-fun x5545 () Real)
(declare-fun x166 () Real)
(declare-fun x5366 () Bool)
(declare-fun x3274 () Real)
(declare-fun x3150 () Real)
(declare-fun x5892 () Real)
(declare-fun x613 () Bool)
(declare-fun x2293 () Real)
(declare-fun x1257 () Real)
(declare-fun x6091 () Real)
(declare-fun x3026 () Real)
(declare-fun x3297 (Real) Real)
(declare-fun x1144 () Bool)
(declare-fun x3533 () Bool)
(declare-fun x2046 () Real)
(declare-fun x2893 () Bool)
(declare-fun x1938 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x371 () Real)
(declare-fun x5976 () Bool)
(declare-fun x1008 () Real)
(declare-fun x445 () Bool)
(declare-fun x3741 () Real)
(declare-fun x5194 () Real)
(declare-fun x1088 () Real)
(declare-fun x3182 () Bool)
(declare-fun x5482 () Real)
(declare-fun x3082 () Bool)
(declare-fun x2903 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x3093 () Bool)
(declare-fun x3118 () Real)
(declare-fun x4552 () Bool)
(declare-fun x4551 () Bool)
(declare-fun x4649 () Bool)
(declare-fun x5567 () Bool)
(declare-fun x5245 () Real)
(declare-fun x1239 () Bool)
(declare-fun x3100 () Bool)
(declare-fun x2837 () Bool)
(declare-fun x5877 () Real)
(declare-fun x6141 () Bool)
(declare-fun x794 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x589 () Bool)
(declare-fun x4251 () Real)
(declare-fun x1856 (Real) Real)
(declare-fun x5323 () Bool)
(declare-fun x189 () Bool)
(declare-fun x4442 () Bool)
(declare-fun x3573 () Bool)
(declare-fun x1670 () Real)
(declare-fun x4563 () Real)
(declare-fun x4521 () Real)
(declare-fun x545 () Bool)
(declare-fun x4227 () Real)
(declare-fun x3898 () Bool)
(declare-fun x2793 () Real)
(declare-fun x5680 () Real)
(declare-fun x4361 () Real)
(declare-fun x4262 () Bool)
(declare-fun x3335 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x5649 () Real)
(declare-fun x3806 () Real)
(declare-fun x1198 () Real)
(declare-fun x5411 () Real)
(declare-fun x3873 () Real)
(declare-fun x1757 () Bool)
(declare-fun x5398 () Bool)
(declare-fun x3189 () Bool)
(declare-fun x5223 () Bool)
(declare-fun x4878 () Bool)
(declare-fun x2275 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x5677 () Bool)
(declare-fun x3084 () Real)
(declare-fun x5282 () Bool)
(declare-fun x4319 (Real) Real)
(declare-fun x5343 () Bool)
(declare-fun x4864 () Bool)
(declare-fun x1803 () Real)
(declare-fun x509 () Bool)
(declare-fun x4881 () Bool)
(declare-fun x2936 () Bool)
(declare-fun x4821 () Bool)
(declare-fun x3323 () Real)
(declare-fun x4576 () Real)
(declare-fun x3072 () Bool)
(declare-fun x493 () Bool)
(declare-fun x5290 () Real)
(declare-fun x2817 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x990 () Bool)
(declare-fun x863 () Real)
(declare-fun x4790 () Real)
(declare-fun x2827 () Real)
(declare-fun x4754 () Bool)
(declare-fun x3339 () Real)
(declare-fun x1248 () Real)
(declare-fun x4500 () Real)
(declare-fun x5085 () Real)
(declare-fun x4874 () Real)
(declare-fun x5562 () Bool)
(declare-fun x1236 () Real)
(declare-fun x4819 () Bool)
(declare-fun x5789 () Bool)
(declare-fun x5352 () Bool)
(declare-fun x3698 () Real)
(declare-fun x988 () Real)
(declare-fun x1919 () Real)
(declare-fun x4910 () Bool)
(declare-fun x5232 () Bool)
(declare-fun x3780 () Bool)
(declare-fun x6085 () Real)
(declare-fun x5612 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x2259 () Real)
(declare-fun x2492 () Real)
(declare-fun x6108 () Real)
(declare-fun x977 () Bool)
(declare-fun x3094 () Real)
(declare-fun x4115 (Real) Real)
(declare-fun x5190 () Real)
(declare-fun x5314 () Real)
(declare-fun x2538 () Real)
(declare-fun x124 (Real) Real)
(declare-fun x5654 () Bool)
(declare-fun x4353 () Real)
(declare-fun x3774 () Bool)
(declare-fun x4008 () Real)
(declare-fun x339 () Real)
(declare-fun x875 () Real)
(declare-fun x5555 () Real)
(declare-fun x3191 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x3578 () Bool)
(declare-fun x6119 () Bool)
(declare-fun x5855 () Bool)
(declare-fun x816 () Real)
(declare-fun x1005 () Bool)
(declare-fun x1373 () Real)
(declare-fun x5644 () Bool)
(declare-fun x4666 () Real)
(declare-fun x2761 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x5741 () Bool)
(declare-fun x353 () Bool)
(declare-fun x2695 () Bool)
(declare-fun x322 () Bool)
(declare-fun x4438 () Real)
(declare-fun x959 () Real)
(declare-fun x5175 () Real)
(declare-fun x5988 (Real) Real)
(declare-fun x623 () Real)
(declare-fun x1961 () Bool)
(declare-fun x4643 () Real)
(declare-fun x705 (Real) Real)
(declare-fun x2476 () Real)
(declare-fun x643 () Bool)
(declare-fun x4189 () Bool)
(declare-fun x4715 () Bool)
(declare-fun x2528 (Real) Real)
(declare-fun x1756 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x5564 () Bool)
(declare-fun x4584 () Bool)
(declare-fun x6120 () Bool)
(declare-fun x3142 () Bool)
(declare-fun x4739 (Real) Real)
(declare-fun x3349 () Real)
(declare-fun x5911 () Real)
(declare-fun x3426 () Bool)
(declare-fun x3984 () Bool)
(declare-fun x5784 () Real)
(declare-fun x1922 () Bool)
(declare-fun x4381 () Real)
(declare-fun x3897 () Real)
(declare-fun x1415 (Real) Real)
(declare-fun x5823 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x1391 () Real)
(declare-fun x1607 () Real)
(declare-fun x5270 () Real)
(declare-fun x2123 () Bool)
(declare-fun x700 () Bool)
(declare-fun x5896 () Real)
(declare-fun x979 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x13 () Real)
(declare-fun x5811 () Bool)
(declare-fun x4320 () Bool)
(declare-fun x5634 () Bool)
(declare-fun x5322 () Bool)
(declare-fun x6151 () Bool)
(declare-fun x2212 () Real)
(declare-fun x2404 () Bool)
(declare-fun x3537 () Real)
(declare-fun x3376 () Bool)
(declare-fun x5532 () Bool)
(declare-fun x2798 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x3998 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x2611 (Real) Real)
(declare-fun x5775 () Bool)
(declare-fun x1682 () Real)
(declare-fun x6124 () Real)
(declare-fun x1026 () Bool)
(declare-fun x4816 () Bool)
(declare-fun x5376 () Real)
(declare-fun x5723 (Real) Real)
(declare-fun x1284 () Real)
(declare-fun x5406 () Real)
(declare-fun x916 () Real)
(declare-fun x459 () Real)
(declare-fun x4773 () Real)
(declare-fun x6088 () Bool)
(declare-fun x463 () Real)
(declare-fun x4988 () Bool)
(declare-fun x706 () Real)
(declare-fun x3699 () Real)
(declare-fun x1180 () Bool)
(declare-fun x5820 () Bool)
(declare-fun x5287 () Real)
(declare-fun x1761 () Bool)
(declare-fun x245 () Real)
(declare-fun x4517 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x5166 () Real)
(declare-fun x899 () Bool)
(declare-fun x5875 (Real) Real)
(declare-fun x618 () Real)
(declare-fun x622 () Bool)
(declare-fun x1937 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x5967 () Real)
(declare-fun x123 () Bool)
(declare-fun x2272 () Real)
(declare-fun x4395 () Bool)
(declare-fun x2636 () Bool)
(declare-fun x2686 () Real)
(declare-fun x3354 () Real)
(declare-fun x2839 () Real)
(declare-fun x3442 () Real)
(declare-fun x4170 () Bool)
(declare-fun x374 () Real)
(declare-fun x5004 () Bool)
(declare-fun x6098 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x3686 () Real)
(declare-fun x1102 () Real)
(declare-fun x4522 () Real)
(declare-fun x3941 () Real)
(declare-fun x5803 () Real)
(declare-fun x4938 () Bool)
(declare-fun x6061 () Real)
(declare-fun x2013 () Real)
(declare-fun x6005 () Real)
(declare-fun x4568 () Bool)
(declare-fun x3541 () Bool)
(declare-fun x3914 () Real)
(declare-fun x1639 () Real)
(declare-fun x5490 () Real)
(declare-fun x456 () Real)
(declare-fun x5079 (Real) Real)
(declare-fun x3283 () Bool)
(declare-fun x3623 () Real)
(declare-fun x356 () Real)
(declare-fun x2104 (Real) Real)
(declare-fun x4638 () Real)
(declare-fun x2727 () Real)
(declare-fun x4158 () Bool)
(declare-fun x2750 () Bool)
(declare-fun x4162 () Bool)
(declare-fun x1789 (Real) Real)
(declare-fun x3217 () Bool)
(declare-fun x4815 () Real)
(declare-fun x231 () Bool)
(declare-fun x113 () Bool)
(declare-fun x5252 () Real)
(declare-fun x5580 () Bool)
(declare-fun x56 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x3215 () Bool)
(declare-fun x991 () Bool)
(declare-fun x393 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x5350 () Real)
(declare-fun x312 () Real)
(declare-fun x516 () Real)
(declare-fun x4014 () Real)
(declare-fun x1694 () Bool)
(declare-fun x5404 () Real)
(declare-fun x4786 () Bool)
(declare-fun x5424 () Real)
(declare-fun x33 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x6074 () Bool)
(declare-fun x2375 () Bool)
(declare-fun x4359 () Real)
(declare-fun x2730 () Bool)
(declare-fun x5106 () Real)
(declare-fun x2163 () Bool)
(declare-fun x3574 () Bool)
(declare-fun x3861 () Bool)
(declare-fun x798 () Real)
(declare-fun x2933 () Bool)
(declare-fun x3516 () Real)
(declare-fun x2181 () Bool)
(declare-fun x4326 () Bool)
(declare-fun x2990 () Bool)
(declare-fun x6018 () Real)
(declare-fun x183 () Bool)
(declare-fun x180 () Real)
(declare-fun x4051 () Real)
(declare-fun x4759 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x4955 () Bool)
(declare-fun x883 () Real)
(declare-fun x3115 (Real) Real)
(declare-fun x1457 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x1573 (Real) Real)
(declare-fun x2593 () Real)
(declare-fun x4423 () Real)
(declare-fun x5306 () Real)
(declare-fun x1025 () Bool)
(declare-fun x4382 () Real)
(declare-fun x390 () Bool)
(declare-fun x5478 () Real)
(declare-fun x5165 () Real)
(declare-fun x268 () Bool)
(declare-fun x2497 () Real)
(declare-fun x1676 () Real)
(declare-fun x3874 () Real)
(declare-fun x2752 () Bool)
(declare-fun x5437 () Real)
(declare-fun x2442 () Bool)
(declare-fun x5640 () Bool)
(declare-fun x3858 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x6110 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x5148 () Real)
(declare-fun x5202 () Real)
(declare-fun x2144 () Real)
(declare-fun x3536 () Bool)
(declare-fun x389 () Real)
(declare-fun x1731 () Real)
(declare-fun x3840 () Real)
(declare-fun x3147 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x3827 () Real)
(declare-fun x3070 () Bool)
(declare-fun x3254 () Bool)
(declare-fun x2655 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x6078 () Real)
(declare-fun x3758 () Bool)
(declare-fun x3818 () Real)
(declare-fun x5030 () Bool)
(declare-fun x1649 () Real)
(declare-fun x1942 () Real)
(declare-fun x5870 () Real)
(declare-fun x2934 () Real)
(declare-fun x2093 () Bool)
(declare-fun x576 () Bool)
(declare-fun x2563 () Real)
(declare-fun x2961 () Bool)
(declare-fun x6066 () Real)
(declare-fun x5324 () Real)
(declare-fun x891 () Bool)
(declare-fun x5068 () Bool)
(declare-fun x4745 () Real)
(declare-fun x2832 () Bool)
(declare-fun x443 () Real)
(declare-fun x5434 () Real)
(declare-fun x4018 () Real)
(declare-fun x1650 () Real)
(declare-fun x2020 () Bool)
(declare-fun x5035 () Real)
(declare-fun x3469 () Bool)
(declare-fun x4317 (Real) Real)
(declare-fun x846 () Real)
(declare-fun x1852 () Real)
(declare-fun x32 (Real) Real)
(declare-fun x229 () Real)
(declare-fun x4894 () Bool)
(declare-fun x4087 () Bool)
(declare-fun x6099 () Real)
(declare-fun x608 () Real)
(declare-fun x5970 () Bool)
(declare-fun x4180 () Real)
(declare-fun x5076 () Real)
(declare-fun x1572 () Real)
(declare-fun x4054 () Real)
(declare-fun x5638 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x4231 () Real)
(declare-fun x1720 () Real)
(declare-fun x2340 () Bool)
(declare-fun x584 () Bool)
(declare-fun x1376 () Real)
(declare-fun x696 () Bool)
(declare-fun x3550 () Bool)
(declare-fun x5804 () Bool)
(declare-fun x5800 () Real)
(declare-fun x2569 () Real)
(declare-fun x5821 () Bool)
(declare-fun x1585 () Real)
(declare-fun x2303 () Real)
(declare-fun x1866 () Bool)
(declare-fun x797 () Bool)
(declare-fun x852 () Bool)
(declare-fun x3123 () Bool)
(declare-fun x4324 () Real)
(declare-fun x5980 () Real)
(declare-fun x3383 () Real)
(declare-fun x5997 () Real)
(declare-fun x1661 () Bool)
(declare-fun x2955 () Real)
(declare-fun x3190 () Bool)
(declare-fun x3379 () Bool)
(declare-fun x4562 () Real)
(declare-fun x3276 () Bool)
(declare-fun x5198 () Bool)
(declare-fun x6090 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x3973 () Bool)
(declare-fun x2216 () Bool)
(declare-fun x697 () Real)
(declare-fun x1778 () Real)
(declare-fun x3474 () Bool)
(declare-fun x4679 () Real)
(declare-fun x2622 () Real)
(declare-fun x1653 () Real)
(declare-fun x1979 () Real)
(declare-fun x4075 () Bool)
(declare-fun x935 () Real)
(declare-fun x5938 () Real)
(declare-fun x1107 () Real)
(declare-fun x153 () Real)
(declare-fun x1894 () Real)
(declare-fun x2091 () Bool)
(declare-fun x4338 () Bool)
(declare-fun x3760 (Real) Real)
(declare-fun x1662 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x5796 () Real)
(declare-fun x3799 () Real)
(declare-fun x3473 () Real)
(declare-fun x1052 () Bool)
(declare-fun x195 () Bool)
(declare-fun x5243 () Real)
(declare-fun x1840 () Bool)
(declare-fun x2510 (Real) Real)
(declare-fun x4888 () Bool)
(declare-fun x1273 () Real)
(declare-fun x6009 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x6086 (Real) Real)
(declare-fun x5725 () Bool)
(declare-fun x2499 () Bool)
(declare-fun x3808 () Bool)
(declare-fun x4457 (Real) Real)
(declare-fun x482 () Bool)
(declare-fun x3314 (Real) Real)
(declare-fun x838 () Bool)
(declare-fun x5837 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x4942 () Bool)
(declare-fun x3373 () Bool)
(declare-fun x1254 () Real)
(declare-fun x4281 () Real)
(declare-fun x738 () Bool)
(declare-fun x4212 () Real)
(declare-fun x1741 () Real)
(declare-fun x424 () Real)
(declare-fun x2050 () Bool)
(declare-fun x1680 () Real)
(declare-fun x4892 (Real) Real)
(declare-fun x4466 () Bool)
(declare-fun x2605 () Real)
(declare-fun x5356 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x2886 () Real)
(declare-fun x1520 () Real)
(declare-fun x2927 () Real)
(declare-fun x3707 () Real)
(declare-fun x1539 () Bool)
(declare-fun x1626 (Real) Real)
(declare-fun x791 () Bool)
(declare-fun x418 () Real)
(declare-fun x205 () Real)
(declare-fun x4045 () Real)
(declare-fun x1511 () Bool)
(declare-fun x4233 () Real)
(declare-fun x3292 () Real)
(declare-fun x3610 () Real)
(declare-fun x930 () Bool)
(declare-fun x5386 () Real)
(declare-fun x5615 (Real) Real)
(declare-fun x2337 () Bool)
(declare-fun x5611 () Real)
(declare-fun x2741 () Bool)
(declare-fun x4614 () Bool)
(declare-fun x2733 () Bool)
(declare-fun x6058 () Bool)
(declare-fun x3407 () Bool)
(declare-fun x3579 () Bool)
(declare-fun x5674 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x926 () Bool)
(declare-fun x2414 () Bool)
(declare-fun x5385 () Real)
(declare-fun x5381 () Bool)
(declare-fun x4493 () Bool)
(declare-fun x5354 () Real)
(declare-fun x5111 () Real)
(declare-fun x3683 () Real)
(declare-fun x3576 () Real)
(declare-fun x5364 () Real)
(declare-fun x4451 () Bool)
(declare-fun x3078 () Real)
(declare-fun x1849 () Real)
(declare-fun x4380 () Bool)
(declare-fun x3637 () Bool)
(declare-fun x898 () Bool)
(declare-fun x4986 () Real)
(declare-fun x3563 () Real)
(declare-fun x3291 () Bool)
(declare-fun x2669 () Real)
(declare-fun x3359 () Real)
(declare-fun x1435 () Bool)
(declare-fun x1359 () Real)
(declare-fun x4386 () Bool)
(declare-fun x4099 () Bool)
(declare-fun x615 () Real)
(declare-fun x3446 () Real)
(declare-fun x3244 () Real)
(declare-fun x2607 () Bool)
(declare-fun x12 () Real)
(declare-fun x2256 () Bool)
(declare-fun x1441 (Real) Real)
(declare-fun x3602 () Real)
(declare-fun x3181 () Real)
(declare-fun x5414 () Real)
(declare-fun x4928 () Real)
(declare-fun x4889 () Bool)
(declare-fun x2401 () Real)
(declare-fun x2271 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x665 () Real)
(declare-fun x3049 () Bool)
(declare-fun x5331 () Bool)
(declare-fun x1688 () Real)
(declare-fun x3414 () Real)
(declare-fun x1206 () Real)
(declare-fun x4046 () Real)
(declare-fun x3065 () Bool)
(declare-fun x619 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x1588 () Real)
(declare-fun x1950 () Bool)
(declare-fun x490 () Real)
(declare-fun x1629 () Real)
(declare-fun x1963 () Bool)
(declare-fun x2758 () Real)
(declare-fun x444 () Bool)
(declare-fun x4613 () Real)
(declare-fun x4112 () Real)
(declare-fun x4175 () Bool)
(declare-fun x5481 () Real)
(declare-fun x3709 (Real) Real)
(declare-fun x2760 () Bool)
(declare-fun x734 () Real)
(declare-fun x425 () Real)
(declare-fun x354 () Bool)
(declare-fun x1408 () Real)
(declare-fun x4427 () Real)
(declare-fun x57 () Bool)
(declare-fun x4469 () Real)
(declare-fun x5779 () Real)
(declare-fun x1433 () Bool)
(declare-fun x3721 () Real)
(declare-fun x6029 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x5101 () Real)
(declare-fun x4436 () Real)
(declare-fun x2779 () Bool)
(declare-fun x5928 (Real) Real)
(declare-fun x5994 () Real)
(declare-fun x1076 () Real)
(declare-fun x3767 () Real)
(declare-fun x5413 () Real)
(declare-fun x4143 () Real)
(declare-fun x557 () Real)
(declare-fun x326 () Bool)
(declare-fun x412 () Bool)
(declare-fun x5108 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x4294 () Real)
(declare-fun x4474 () Real)
(declare-fun x937 () Bool)
(declare-fun x3126 () Real)
(declare-fun x1616 () Bool)
(declare-fun x2225 () Real)
(declare-fun x3832 () Bool)
(declare-fun x2475 () Real)
(declare-fun x2323 () Real)
(declare-fun x3866 () Real)
(declare-fun x2716 () Real)
(declare-fun x4587 () Bool)
(declare-fun x4678 () Real)
(declare-fun x5927 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x5884 () Bool)
(declare-fun x4064 () Real)
(declare-fun x211 () Real)
(declare-fun x3953 () Bool)
(declare-fun x4718 () Real)
(declare-fun x2031 () Real)
(declare-fun x3294 () Bool)
(declare-fun x5918 () Real)
(declare-fun x594 (Real) Real)
(declare-fun x2983 () Real)
(declare-fun x1759 () Bool)
(declare-fun x1268 () Real)
(declare-fun x5501 () Real)
(declare-fun x3013 () Real)
(declare-fun x1561 () Real)
(declare-fun x108 () Bool)
(declare-fun x3457 () Real)
(declare-fun x2010 () Real)
(declare-fun x776 () Bool)
(declare-fun x193 () Real)
(declare-fun x5641 () Bool)
(declare-fun x3901 () Bool)
(declare-fun x2133 () Bool)
(declare-fun x1980 () Real)
(declare-fun x4572 () Real)
(declare-fun x6017 () Bool)
(declare-fun x2196 () Real)
(declare-fun x3357 () Real)
(declare-fun x591 (Real) Real)
(declare-fun x3006 () Bool)
(declare-fun x2267 () Real)
(declare-fun x1380 () Real)
(declare-fun x292 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x553 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x4384 () Bool)
(declare-fun x694 () Bool)
(declare-fun x728 () Bool)
(declare-fun x2480 () Bool)
(declare-fun x4729 () Real)
(declare-fun x1914 () Real)
(declare-fun x2618 () Real)
(declare-fun x5396 () Real)
(declare-fun x1648 () Real)
(declare-fun x5127 () Bool)
(declare-fun x5137 () Real)
(declare-fun x5834 () Real)
(declare-fun x6048 (Real) Real)
(declare-fun x1271 () Bool)
(declare-fun x2199 () Real)
(declare-fun x2924 () Real)
(declare-fun x2756 () Bool)
(declare-fun x3708 () Bool)
(declare-fun x1580 () Real)
(declare-fun x927 () Bool)
(declare-fun x5491 () Bool)
(declare-fun x5304 () Real)
(declare-fun x1716 () Real)
(declare-fun x1765 (Real) Real)
(declare-fun x1544 () Real)
(declare-fun x2978 () Bool)
(declare-fun x4435 () Bool)
(declare-fun x5822 () Real)
(declare-fun x5762 () Bool)
(declare-fun x755 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x5318 () Real)
(declare-fun x897 () Real)
(declare-fun x409 () Real)
(declare-fun x461 () Real)
(declare-fun x5879 () Bool)
(declare-fun x4534 () Bool)
(declare-fun x375 () Bool)
(declare-fun x3720 () Real)
(declare-fun x4668 () Real)
(declare-fun x890 () Bool)
(declare-fun x5687 () Bool)
(declare-fun x3300 () Real)
(declare-fun x5700 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x4822 () Real)
(declare-fun x1642 () Real)
(declare-fun x6025 () Bool)
(declare-fun x4545 () Real)
(declare-fun x428 () Bool)
(declare-fun x1651 () Real)
(declare-fun x1763 () Bool)
(declare-fun x3749 () Real)
(declare-fun x795 () Real)
(declare-fun x2057 () Real)
(declare-fun x1442 () Bool)
(declare-fun x2872 () Bool)
(declare-fun x6072 () Bool)
(declare-fun x5475 () Real)
(declare-fun x5002 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x736 () Bool)
(declare-fun x4120 () Real)
(declare-fun x3926 () Bool)
(declare-fun x4868 () Bool)
(declare-fun x4110 () Real)
(declare-fun x3439 () Bool)
(declare-fun x2351 () Real)
(declare-fun x684 () Bool)
(declare-fun x4809 () Bool)
(declare-fun x1077 () Real)
(declare-fun x5830 () Bool)
(declare-fun x4793 () Real)
(declare-fun x5397 () Bool)
(declare-fun x4875 () Real)
(declare-fun x5455 () Bool)
(declare-fun x6087 () Bool)
(declare-fun x295 () Bool)
(declare-fun x4987 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x3304 () Real)
(declare-fun x5266 () Bool)
(declare-fun x4192 (Real) Real)
(declare-fun x1029 () Bool)
(declare-fun x4640 (Real) Real)
(declare-fun x321 () Real)
(declare-fun x3593 () Real)
(declare-fun x2172 () Bool)
(declare-fun x104 () Real)
(declare-fun x4542 () Bool)
(declare-fun x6100 () Real)
(declare-fun x6030 () Real)
(declare-fun x876 () Real)
(declare-fun x5624 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x3577 () Real)
(declare-fun x3614 () Bool)
(declare-fun x4032 () Bool)
(declare-fun x3250 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x3647 () Real)
(declare-fun x4481 () Real)
(declare-fun x191 () Real)
(declare-fun x349 () Real)
(declare-fun x337 () Bool)
(declare-fun x502 () Bool)
(declare-fun x4269 () Bool)
(declare-fun x4154 () Bool)
(declare-fun x5581 () Bool)
(declare-fun x330 () Bool)
(declare-fun x3724 () Real)
(declare-fun x1674 () Real)
(declare-fun x3273 () Bool)
(declare-fun x3824 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x4298 () Bool)
(declare-fun x3512 () Bool)
(declare-fun x4867 () Bool)
(declare-fun x2724 () Real)
(declare-fun x156 () Bool)
(declare-fun x3317 () Bool)
(declare-fun x5115 () Real)
(declare-fun x6170 () Real)
(declare-fun x2712 () Real)
(declare-fun x5075 () Bool)
(declare-fun x5963 () Real)
(declare-fun x3114 () Bool)
(declare-fun x658 () Real)
(declare-fun x1552 () Bool)
(declare-fun x1785 () Bool)
(declare-fun x3122 () Real)
(declare-fun x134 () Bool)
(declare-fun x5526 () Real)
(declare-fun x814 () Bool)
(declare-fun x3492 () Bool)
(declare-fun x2482 () Bool)
(declare-fun x6129 () Bool)
(declare-fun x1034 () Real)
(declare-fun x2795 () Bool)
(declare-fun x3167 (Real) Real)
(declare-fun x1875 () Real)
(declare-fun x329 () Real)
(declare-fun x118 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x939 () Bool)
(declare-fun x5835 () Real)
(declare-fun x1630 () Bool)
(declare-fun x496 () Real)
(declare-fun x3584 () Bool)
(declare-fun x300 () Real)
(declare-fun x370 () Bool)
(declare-fun x5348 () Real)
(declare-fun x2773 () Bool)
(declare-fun x2044 () Real)
(declare-fun x487 () Bool)
(declare-fun x1624 () Real)
(declare-fun x5525 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x270 () Bool)
(declare-fun x5669 () Bool)
(declare-fun x645 () Bool)
(declare-fun x101 () Real)
(declare-fun x4772 () Real)
(declare-fun x70 () Real)
(declare-fun x4628 () Bool)
(declare-fun x744 () Real)
(declare-fun x4305 (Real) Real)
(declare-fun x3265 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x1219 () Real)
(declare-fun x4851 () Bool)
(declare-fun x2223 () Bool)
(declare-fun x4695 () Real)
(declare-fun x24 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x1148 () Real)
(declare-fun x2305 () Bool)
(declare-fun x4257 () Bool)
(declare-fun x25 () Real)
(declare-fun x3795 () Bool)
(declare-fun x2854 () Bool)
(declare-fun x5715 () Real)
(declare-fun x3132 () Real)
(declare-fun x6056 () Bool)
(declare-fun x1714 () Real)
(declare-fun x3603 () Bool)
(declare-fun x4285 () Bool)
(declare-fun x5377 () Real)
(declare-fun x3645 () Real)
(declare-fun x1861 () Bool)
(declare-fun x1925 () Bool)
(declare-fun x3497 () Real)
(declare-fun x4098 () Real)
(declare-fun x98 () Real)
(declare-fun x2156 () Real)
(declare-fun x575 () Real)
(declare-fun x3028 () Bool)
(declare-fun x1331 (Real) Real)
(declare-fun x140 () Real)
(declare-fun x4543 () Bool)
(declare-fun x4318 (Real) Real)
(declare-fun x1429 () Real)
(declare-fun x3992 () Real)
(declare-fun x1709 () Bool)
(declare-fun x1193 () Real)
(declare-fun x1683 () Bool)
(declare-fun x5391 () Bool)
(declare-fun x4374 () Bool)
(declare-fun x4856 () Bool)
(declare-fun x172 () Bool)
(declare-fun x5628 () Bool)
(declare-fun x2097 () Real)
(declare-fun x5495 () Bool)
(declare-fun x4702 () Real)
(declare-fun x1917 () Bool)
(declare-fun x3367 () Bool)
(declare-fun x4430 () Real)
(declare-fun x5180 () Real)
(declare-fun x5221 () Bool)
(declare-fun x3110 () Real)
(declare-fun x5528 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x3513 () Real)
(declare-fun x3872 () Real)
(declare-fun x4696 () Real)
(declare-fun x2024 () Real)
(declare-fun x3814 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x4516 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x573 () Bool)
(declare-fun x5959 () Real)
(declare-fun x895 () Real)
(declare-fun x20 () Bool)
(declare-fun x3528 () Real)
(declare-fun x947 () Real)
(declare-fun x5898 () Real)
(declare-fun x4537 (Real) Real)
(declare-fun x1692 () Real)
(declare-fun x2018 () Bool)
(declare-fun x217 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x3641 () Bool)
(declare-fun x3239 () Real)
(declare-fun x2379 () Bool)
(declare-fun x2284 () Bool)
(declare-fun x223 () Bool)
(declare-fun x630 () Bool)
(declare-fun x4838 (Real) Real)
(declare-fun x3445 () Real)
(declare-fun x4895 () Bool)
(declare-fun x1754 () Real)
(declare-fun x4713 () Real)
(declare-fun x3949 (Real) Real)
(declare-fun x505 () Bool)
(declare-fun x4803 (Real) Real)
(declare-fun x5913 () Real)
(declare-fun x1507 () Real)
(declare-fun x5602 () Real)
(declare-fun x2030 () Real)
(declare-fun x833 () Real)
(declare-fun x3763 () Bool)
(declare-fun x5554 () Bool)
(declare-fun x2616 () Real)
(declare-fun x4820 () Real)
(declare-fun x119 () Bool)
(declare-fun x5733 () Real)
(declare-fun x2799 () Real)
(declare-fun x2896 (Real) Real)
(declare-fun x5709 () Real)
(declare-fun x4464 () Bool)
(declare-fun x1160 () Real)
(declare-fun x6126 () Real)
(declare-fun x3650 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x3437 () Real)
(declare-fun x5696 () Real)
(declare-fun x4024 () Real)
(declare-fun x827 () Bool)
(declare-fun x3625 () Real)
(declare-fun x1632 () Real)
(declare-fun x243 () Real)
(declare-fun x1884 () Bool)
(declare-fun x6152 () Real)
(declare-fun x1199 () Real)
(declare-fun x808 () Bool)
(declare-fun x1238 () Real)
(declare-fun x5639 () Real)
(declare-fun x5756 () Real)
(declare-fun x4980 () Real)
(declare-fun x2699 () Real)
(declare-fun x2512 (Real) Real)
(declare-fun x4100 () Real)
(declare-fun x3075 () Real)
(declare-fun x3689 () Bool)
(declare-fun x3919 () Bool)
(declare-fun x3631 () Bool)
(declare-fun x5303 () Real)
(declare-fun x3454 () Real)
(declare-fun x1927 () Bool)
(declare-fun x3797 () Bool)
(declare-fun x2433 () Real)
(declare-fun x964 () Bool)
(declare-fun x5535 () Real)
(declare-fun x5470 () Real)
(declare-fun x3813 () Real)
(declare-fun x6055 () Real)
(declare-fun x2473 () Real)
(declare-fun x6122 () Real)
(declare-fun x1188 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x4784 () Real)
(declare-fun x4880 () Real)
(declare-fun x3965 (Real) Real)
(declare-fun x2282 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x2963 () Real)
(declare-fun x2449 () Bool)
(declare-fun x503 () Bool)
(declare-fun x2331 (Real) Real)
(declare-fun x2288 () Real)
(declare-fun x4205 () Bool)
(declare-fun x5152 (Real) Real)
(declare-fun x2015 (Real) Real)
(declare-fun x812 () Real)
(declare-fun x4168 () Bool)
(declare-fun x5388 () Real)
(declare-fun x704 () Real)
(declare-fun x6040 () Bool)
(declare-fun x3438 () Real)
(declare-fun x4538 () Real)
(declare-fun x2682 () Real)
(declare-fun x23 () Bool)
(declare-fun x2231 () Real)
(declare-fun x3932 () Bool)
(declare-fun x906 () Bool)
(declare-fun x5131 () Bool)
(declare-fun x2353 () Bool)
(declare-fun x722 () Bool)
(declare-fun x5453 () Real)
(declare-fun x2092 () Bool)
(declare-fun x3003 () Real)
(declare-fun x3171 () Real)
(declare-fun x1261 () Real)
(declare-fun x2365 () Bool)
(declare-fun x2420 () Real)
(declare-fun x1406 () Real)
(declare-fun x2432 () Bool)
(declare-fun x5027 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x4599 () Bool)
(declare-fun x62 () Real)
(declare-fun x5281 () Bool)
(declare-fun x132 () Real)
(declare-fun x732 () Bool)
(declare-fun x264 () Real)
(declare-fun x778 () Real)
(declare-fun x2170 () Bool)
(declare-fun x3732 () Real)
(declare-fun x4877 () Bool)
(declare-fun x1628 () Real)
(declare-fun x5339 () Real)
(declare-fun x2557 () Real)
(declare-fun x3526 () Bool)
(declare-fun x1609 () Real)
(declare-fun x4229 () Bool)
(declare-fun x3807 () Real)
(declare-fun x1860 () Real)
(declare-fun x3266 () Real)
(declare-fun x3236 () Real)
(declare-fun x2529 () Real)
(declare-fun x4454 () Real)
(declare-fun x3120 (Real) Real)
(declare-fun x2945 (Real) Real)
(declare-fun x603 () Bool)
(declare-fun x2954 () Real)
(declare-fun x1240 () Real)
(declare-fun x1762 () Real)
(declare-fun x4035 () Real)
(declare-fun x614 () Bool)
(declare-fun x282 () Bool)
(declare-fun x5357 () Real)
(declare-fun x2135 () Bool)
(declare-fun x4859 () Bool)
(declare-fun x2062 () Real)
(declare-fun x1910 () Real)
(declare-fun x1266 (Real) Real)
(declare-fun x2715 () Bool)
(declare-fun x3718 () Bool)
(declare-fun x5407 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x1000 () Real)
(declare-fun x3740 () Real)
(declare-fun x4982 (Real) Real)
(declare-fun x4738 () Real)
(declare-fun x5431 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x3490 () Real)
(declare-fun x5752 () Bool)
(declare-fun x5828 () Real)
(declare-fun x3302 () Real)
(declare-fun x182 () Real)
(declare-fun x6116 () Bool)
(declare-fun x5783 () Bool)
(declare-fun x835 () Real)
(declare-fun x6011 () Real)
(declare-fun x2074 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x5062 () Bool)
(declare-fun x6073 () Real)
(declare-fun x1068 () Bool)
(declare-fun x3452 () Real)
(declare-fun x1869 () Real)
(declare-fun x1374 () Real)
(declare-fun x1059 () Bool)
(declare-fun x4460 () Bool)
(declare-fun x1724 () Real)
(declare-fun x4662 () Bool)
(declare-fun x1334 () Real)
(declare-fun x192 () Real)
(declare-fun x3800 () Bool)
(declare-fun x3468 () Real)
(declare-fun x4278 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x224 () Real)
(declare-fun x89 () Bool)
(declare-fun x5121 () Bool)
(declare-fun x419 () Bool)
(declare-fun x2419 () Bool)
(declare-fun x5933 () Real)
(declare-fun x1537 () Bool)
(declare-fun x754 (Real) Real)
(declare-fun x5810 (Real) Real)
(declare-fun x5629 () Real)
(declare-fun x4010 () Bool)
(declare-fun x4952 (Real) Real)
(declare-fun x5824 () Bool)
(declare-fun x3024 () Bool)
(declare-fun x1667 () Real)
(declare-fun x4377 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x3282 () Bool)
(declare-fun x3361 () Real)
(declare-fun x2311 () Real)
(declare-fun x5510 () Bool)
(declare-fun x2834 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x3311 () Bool)
(declare-fun x5758 () Bool)
(declare-fun x4097 () Bool)
(declare-fun x5042 () Bool)
(declare-fun x175 () Bool)
(declare-fun x3022 () Real)
(declare-fun x4071 () Real)
(declare-fun x5642 () Real)
(declare-fun x4350 () Bool)
(declare-fun x63 () Bool)
(declare-fun x3747 () Real)
(declare-fun x1843 () Real)
(declare-fun x5006 () Bool)
(declare-fun x5507 () Bool)
(declare-fun x241 (Real) Real)
(declare-fun x2067 () Bool)
(declare-fun x2407 () Real)
(declare-fun x3107 () Bool)
(declare-fun x1129 () Real)
(declare-fun x4138 () Bool)
(declare-fun x793 () Real)
(declare-fun x3106 () Real)
(declare-fun x3451 () Real)
(declare-fun x5931 () Bool)
(declare-fun x5394 () Real)
(declare-fun x411 () Real)
(declare-fun x4485 () Bool)
(declare-fun x2434 () Real)
(declare-fun x1303 () Real)
(declare-fun x473 () Bool)
(declare-fun x1575 (Real) Real)
(declare-fun x2853 () Bool)
(declare-fun x2568 () Real)
(declare-fun x2460 () Bool)
(declare-fun x5791 () Real)
(declare-fun x1712 () Real)
(declare-fun x5949 () Real)
(declare-fun x4228 () Bool)
(declare-fun x1072 () Real)
(declare-fun x5798 () Real)
(declare-fun x1169 () Bool)
(declare-fun x5539 () Bool)
(declare-fun x3792 () Bool)
(declare-fun x2843 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x6114 () Bool)
(declare-fun x5046 () Bool)
(declare-fun x3853 () Real)
(declare-fun x1940 () Bool)
(declare-fun x3258 () Real)
(declare-fun x1569 () Real)
(declare-fun x3849 () Real)
(declare-fun x4833 (Real) Real)
(declare-fun x392 () Bool)
(declare-fun x5998 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x3444 (Real) Real)
(declare-fun x3455 () Real)
(declare-fun x5176 () Bool)
(declare-fun x2514 () Real)
(declare-fun x2210 (Real) Real)
(declare-fun x3199 () Bool)
(declare-fun x16 () Bool)
(declare-fun x6165 () Real)
(declare-fun x3829 () Bool)
(declare-fun x1877 () Real)
(declare-fun x6117 () Bool)
(declare-fun x4391 () Bool)
(declare-fun x3200 () Bool)
(declare-fun x4006 () Real)
(declare-fun x3251 () Real)
(declare-fun x2705 () Bool)
(declare-fun x632 () Bool)
(declare-fun x720 () Real)
(declare-fun x4268 () Bool)
(declare-fun x4841 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x3364 () Bool)
(declare-fun x3906 () Bool)
(declare-fun x5954 () Bool)
(declare-fun x703 () Real)
(declare-fun x1392 () Real)
(declare-fun x901 () Real)
(declare-fun x5917 () Real)
(declare-fun x2737 () Real)
(declare-fun x3395 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x4844 () Real)
(declare-fun x3899 () Bool)
(declare-fun x5295 () Bool)
(declare-fun x5420 () Bool)
(declare-fun x2214 () Real)
(declare-fun x4208 () Bool)
(declare-fun x5710 () Real)
(declare-fun x362 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x2451 () Real)
(declare-fun x4665 () Real)
(declare-fun x745 () Bool)
(declare-fun x2042 () Real)
(declare-fun x3405 () Real)
(declare-fun x6044 () Bool)
(declare-fun x460 () Real)
(declare-fun x6093 () Real)
(declare-fun x5276 () Real)
(declare-fun x2165 () Bool)
(declare-fun x97 () Bool)
(declare-fun x3216 () Bool)
(declare-fun x3196 () Real)
(declare-fun x4190 () Bool)
(declare-fun x5552 () Bool)
(declare-fun x5185 () Bool)
(declare-fun x5735 () Bool)
(declare-fun x1794 () Real)
(declare-fun x4411 () Real)
(declare-fun x4976 () Bool)
(declare-fun x4084 () Bool)
(declare-fun x4817 () Bool)
(declare-fun x4834 () Real)
(declare-fun x5599 () Bool)
(declare-fun x4618 () Bool)
(declare-fun x3061 () Real)
(declare-fun x4095 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x5678 () Real)
(declare-fun x1451 () Real)
(declare-fun x2036 () Bool)
(declare-fun x2821 () Real)
(declare-fun x5751 () Bool)
(declare-fun x2762 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x5409 () Real)
(declare-fun x662 () Bool)
(declare-fun x4447 () Real)
(declare-fun x4252 () Real)
(declare-fun x4127 () Real)
(declare-fun x3761 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x2232 () Bool)
(declare-fun x1733 () Real)
(declare-fun x5945 () Bool)
(declare-fun x843 () Bool)
(declare-fun x3712 () Real)
(declare-fun x726 () Bool)
(declare-fun x1853 () Real)
(declare-fun x1418 () Bool)
(declare-fun x4477 () Real)
(declare-fun x1171 () Real)
(declare-fun x4920 () Bool)
(declare-fun x781 () Bool)
(declare-fun x4795 () Real)
(declare-fun x570 () Real)
(declare-fun x4609 () Bool)
(declare-fun x4082 () Real)
(declare-fun x4654 () Bool)
(declare-fun x2772 () Bool)
(declare-fun x5863 () Real)
(declare-fun x5029 () Real)
(declare-fun x4434 () Real)
(declare-fun x2429 () Bool)
(declare-fun x5604 () Bool)
(declare-fun x3103 () Real)
(declare-fun x2356 () Real)
(declare-fun x5445 () Bool)
(declare-fun x1547 () Real)
(declare-fun x1308 () Bool)
(declare-fun x551 () Real)
(declare-fun x278 () Real)
(declare-fun x4258 () Bool)
(declare-fun x2281 () Real)
(declare-fun x2603 (Real) Real)
(declare-fun x5881 () Bool)
(declare-fun x2958 () Real)
(declare-fun x4002 (Real) Real)
(declare-fun x2005 () Real)
(declare-fun x3615 () Real)
(declare-fun x106 () Real)
(declare-fun x4135 () Bool)
(declare-fun x6041 () Bool)
(declare-fun x3881 () Bool)
(declare-fun x4843 () Bool)
(declare-fun x3253 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x537 () Bool)
(declare-fun x4062 () Bool)
(declare-fun x4993 () Real)
(declare-fun x3143 () Bool)
(declare-fun x2218 () Real)
(declare-fun x1316 () Bool)
(declare-fun x1985 (Real) Real)
(declare-fun x344 () Real)
(declare-fun x4862 () Bool)
(declare-fun x3920 () Bool)
(declare-fun x525 () Bool)
(declare-fun x5220 (Real) Real)
(declare-fun x3952 () Bool)
(declare-fun x879 () Real)
(declare-fun x5772 () Real)
(declare-fun x3371 () Bool)
(declare-fun x2599 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x3410 () Real)
(declare-fun x5849 () Bool)
(declare-fun x4049 (Real) Real)
(declare-fun x5524 () Real)
(declare-fun x4956 () Bool)
(declare-fun x2043 () Real)
(declare-fun x3488 () Bool)
(declare-fun x5744 () Real)
(declare-fun x5916 () Real)
(declare-fun x913 () Bool)
(declare-fun x342 () Bool)
(declare-fun x452 () Real)
(declare-fun x6105 (Real) Real)
(declare-fun x2192 () Bool)
(declare-fun x4900 () Bool)
(declare-fun x5078 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x5375 (Real) Real)
(declare-fun x2871 (Real) Real)
(declare-fun x4740 () Real)
(declare-fun x4309 () Bool)
(declare-fun x204 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x3482 () Real)
(declare-fun x2598 () Bool)
(declare-fun x5807 () Bool)
(declare-fun x1723 () Real)
(declare-fun x2811 () Real)
(declare-fun x981 () Bool)
(declare-fun x2649 () Real)
(declare-fun x4595 () Bool)
(declare-fun x5271 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x4721 () Real)
(declare-fun x2894 () Real)
(declare-fun x4629 () Real)
(declare-fun x1232 () Real)
(declare-fun x862 () Bool)
(declare-fun x3342 () Real)
(declare-fun x2953 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x3332 () Bool)
(declare-fun x1792 () Real)
(declare-fun x2167 () Real)
(declare-fun x574 () Bool)
(declare-fun x4524 () Real)
(declare-fun x2041 () Real)
(declare-fun x4547 () Bool)
(declare-fun x5043 () Bool)
(declare-fun x3679 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x3288 () Real)
(declare-fun x1640 () Real)
(declare-fun x3206 () Real)
(declare-fun x5739 () Bool)
(declare-fun x4642 () Real)
(declare-fun x5983 () Real)
(declare-fun x1997 () Real)
(declare-fun x1179 () Real)
(declare-fun x2588 () Bool)
(declare-fun x6064 (Real) Real)
(declare-fun x2155 () Bool)
(declare-fun x4842 () Real)
(declare-fun x801 () Bool)
(declare-fun x4203 () Bool)
(declare-fun x595 () Bool)
(declare-fun x3559 () Real)
(declare-fun x5991 () Bool)
(declare-fun x400 (Real) Real)
(declare-fun x4791 () Real)
(declare-fun x1726 () Bool)
(declare-fun x1031 () Real)
(declare-fun x4355 () Real)
(declare-fun x2213 () Real)
(declare-fun x3586 () Bool)
(declare-fun x4610 () Real)
(declare-fun x4505 () Real)
(declare-fun x3010 () Bool)
(declare-fun x4589 () Bool)
(declare-fun x5617 () Real)
(declare-fun x4114 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x3268 () Real)
(declare-fun x1558 () Bool)
(declare-fun x2374 () Real)
(declare-fun x6052 (Real) Real)
(declare-fun x5915 () Real)
(declare-fun x1440 () Real)
(declare-fun x5408 () Bool)
(declare-fun x30 () Real)
(declare-fun x472 () Real)
(declare-fun x4274 () Real)
(declare-fun x1056 () Real)
(declare-fun x5633 () Bool)
(declare-fun x1965 () Real)
(declare-fun x2014 () Bool)
(declare-fun x5794 () Bool)
(declare-fun x3385 () Bool)
(declare-fun x1784 (Real) Real)
(declare-fun x5341 () Bool)
(declare-fun x2286 () Bool)
(declare-fun x6007 (Real) Real)
(declare-fun x3781 () Real)
(declare-fun x679 () Bool)
(declare-fun x5359 () Bool)
(declare-fun x660 () Real)
(declare-fun x3817 () Real)
(declare-fun x4964 () Real)
(declare-fun x79 () Bool)
(declare-fun x1974 () Real)
(declare-fun x5116 () Real)
(declare-fun x3343 () Real)
(declare-fun x4153 () Real)
(declare-fun x4825 () Real)
(declare-fun x2804 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x4132 () Bool)
(declare-fun x3653 () Real)
(declare-fun x5117 () Real)
(declare-fun x4937 () Bool)
(declare-fun x4731 () Real)
(declare-fun x1932 () Real)
(declare-fun x5592 () Bool)
(declare-fun x5851 () Bool)
(declare-fun x2164 () Real)
(declare-fun x929 () Real)
(declare-fun x5438 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x3397 () Bool)
(declare-fun x323 () Real)
(declare-fun x1278 () Bool)
(declare-fun x219 () Real)
(declare-fun x2389 () Real)
(declare-fun x3366 () Bool)
(declare-fun x4811 (Real) Real)
(declare-fun x5334 () Real)
(declare-fun x2650 () Bool)
(declare-fun x4734 () Bool)
(declare-fun x3092 () Real)
(declare-fun x4585 () Real)
(declare-fun x777 () Real)
(declare-fun x1554 () Bool)
(declare-fun x3064 (Real) Real)
(declare-fun x155 () Real)
(declare-fun x6172 () Real)
(declare-fun x4061 () Real)
(declare-fun x6014 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x3839 () Real)
(declare-fun x3487 () Bool)
(declare-fun x4243 () Real)
(declare-fun x3231 () Bool)
(declare-fun x4741 () Bool)
(declare-fun x5278 (Real) Real)
(declare-fun x4806 () Real)
(declare-fun x61 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1903 () Real)
(declare-fun x4020 () Bool)
(declare-fun x1405 () Real)
(declare-fun x4508 () Real)
(declare-fun x4623 () Bool)
(declare-fun x2421 () Real)
(declare-fun x2269 () Real)
(declare-fun x5728 () Bool)
(declare-fun x671 () Real)
(declare-fun x5692 () Real)
(declare-fun x1996 () Bool)
(declare-fun x4513 () Bool)
(declare-fun x4653 () Real)
(declare-fun x4418 () Real)
(declare-fun x5614 () Bool)
(declare-fun x5935 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x924 () Real)
(declare-fun x4753 () Bool)
(declare-fun x2072 () Real)
(declare-fun x5714 () Bool)
(declare-fun x5590 () Real)
(declare-fun x821 () Bool)
(declare-fun x3925 () Bool)
(declare-fun x5902 () Real)
(declare-fun x3560 () Bool)
(declare-fun x5229 () Real)
(declare-fun x3503 () Real)
(declare-fun x3204 () Bool)
(declare-fun x3389 () Real)
(declare-fun x3917 () Real)
(declare-fun x1603 () Bool)
(declare-fun x5109 () Real)
(declare-fun x4789 () Real)
(declare-fun x4622 () Bool)
(declare-fun x4762 () Bool)
(declare-fun x5774 () Bool)
(declare-fun x4915 (Real) Real)
(declare-fun x1846 () Bool)
(declare-fun x5995 () Bool)
(declare-fun x2592 () Real)
(declare-fun x4385 () Real)
(declare-fun x1233 () Real)
(declare-fun x893 () Bool)
(declare-fun x5610 () Bool)
(declare-fun x5119 () Bool)
(declare-fun x2619 () Bool)
(declare-fun x5936 () Real)
(declare-fun x577 () Bool)
(declare-fun x5014 () Bool)
(declare-fun x760 () Bool)
(declare-fun x5622 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x2320 () Real)
(declare-fun x2696 () Real)
(declare-fun x1721 () Real)
(declare-fun x5825 () Bool)
(declare-fun x804 () Real)
(declare-fun x4927 () Real)
(declare-fun x2767 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x856 () Real)
(declare-fun x1647 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x4925 (Real) Real)
(declare-fun x91 () Real)
(declare-fun x869 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x5548 () Bool)
(declare-fun x4077 () Real)
(declare-fun x4549 () Bool)
(declare-fun x5657 () Bool)
(declare-fun x5895 () Real)
(declare-fun x2908 () Bool)
(declare-fun x469 () Real)
(declare-fun x3966 () Bool)
(declare-fun x3218 () Bool)
(declare-fun x963 () Bool)
(declare-fun x3622 () Bool)
(declare-fun x4191 () Bool)
(declare-fun x4344 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x116 () Real)
(declare-fun x562 () Bool)
(declare-fun x5802 () Real)
(declare-fun x1481 () Bool)
(declare-fun x347 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x2316 () Bool)
(declare-fun x474 () Bool)
(declare-fun x3628 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x3786 () Real)
(declare-fun x5792 () Bool)
(declare-fun x5572 (Real) Real)
(declare-fun x2775 () Real)
(declare-fun x6123 () Bool)
(declare-fun x3530 () Bool)
(declare-fun x650 () Bool)
(declare-fun x2417 () Real)
(declare-fun x887 () Bool)
(declare-fun x4594 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x4295 () Bool)
(declare-fun x915 () Bool)
(declare-fun x3277 (Real) Real)
(declare-fun x667 () Real)
(declare-fun x3056 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x5210 () Real)
(declare-fun x1515 () Real)
(declare-fun x363 () Bool)
(declare-fun x5859 () Real)
(declare-fun x5943 () Bool)
(declare-fun x5975 () Bool)
(declare-fun x3935 () Bool)
(declare-fun x2237 () Bool)
(declare-fun x4486 () Bool)
(declare-fun x5464 () Bool)
(declare-fun x2633 () Bool)
(declare-fun x4673 () Bool)
(declare-fun x5829 () Bool)
(declare-fun x865 () Real)
(declare-fun x5053 () Bool)
(declare-fun x1213 () Real)
(declare-fun x4570 () Bool)
(declare-fun x5209 () Real)
(declare-fun x2129 () Bool)
(declare-fun x6042 () Bool)
(declare-fun x2946 () Real)
(declare-fun x1246 () Bool)
(declare-fun x181 (Real) Real)
(declare-fun x4328 () Bool)
(declare-fun x2589 () Real)
(declare-fun x3783 () Real)
(declare-fun x540 () Bool)
(declare-fun x4539 () Bool)
(declare-fun x382 () Real)
(declare-fun x1732 () Bool)
(declare-fun x3177 () Real)
(declare-fun x3168 () Bool)
(declare-fun x5344 () Real)
(declare-fun x1033 () Real)
(declare-fun x2826 (Real) Real)
(declare-fun x4043 () Bool)
(declare-fun x3887 () Bool)
(declare-fun x1505 () Real)
(declare-fun x5291 () Bool)
(declare-fun x3333 () Real)
(declare-fun x1684 () Bool)
(declare-fun x4301 (Real) Real)
(declare-fun x1360 () Real)
(declare-fun x1349 () Bool)
(declare-fun x3319 () Real)
(declare-fun x1282 () Bool)
(declare-fun x1053 () Real)
(declare-fun x4546 () Real)
(declare-fun x5373 () Bool)
(declare-fun x1112 () Real)
(declare-fun x3331 () Real)
(declare-fun x5688 () Real)
(declare-fun x4831 () Real)
(declare-fun x398 () Real)
(declare-fun x402 (Real) Real)
(declare-fun x5974 () Bool)
(declare-fun x1589 () Real)
(declare-fun x5195 () Bool)
(declare-fun x999 () Real)
(declare-fun x3458 () Real)
(declare-fun x3729 () Bool)
(declare-fun x2679 () Bool)
(declare-fun x4048 () Real)
(declare-fun x2931 () Real)
(declare-fun x4419 () Bool)
(declare-fun x4954 () Bool)
(declare-fun x466 () Bool)
(declare-fun x1410 () Real)
(declare-fun x4504 () Real)
(declare-fun x617 () Real)
(declare-fun x4088 () Bool)
(declare-fun x4689 () Bool)
(declare-fun x4854 () Real)
(declare-fun x4647 () Bool)
(declare-fun x1020 () Real)
(declare-fun x4063 () Real)
(declare-fun x2710 () Bool)
(declare-fun x2869 () Bool)
(declare-fun x5158 () Bool)
(declare-fun x4535 () Bool)
(declare-fun x5671 () Real)
(declare-fun x605 () Bool)
(declare-fun x5650 () Real)
(declare-fun x1842 () Bool)
(declare-fun x3148 () Real)
(declare-fun x5415 () Bool)
(declare-fun x4658 () Bool)
(declare-fun x297 () Real)
(declare-fun x5914 () Bool)
(declare-fun x4177 () Bool)
(declare-fun x5653 () Bool)
(declare-fun x3316 () Real)
(declare-fun x2597 (Real) Real)
(declare-fun x1612 () Real)
(declare-fun x519 () Bool)
(declare-fun x4472 () Real)
(declare-fun x1936 () Bool)
(declare-fun x4349 () Real)
(declare-fun x1867 () Real)
(declare-fun x208 () Real)
(declare-fun x2988 () Real)
(declare-fun x5061 () Real)
(declare-fun x3248 () Bool)
(declare-fun x3787 () Bool)
(declare-fun x3481 () Real)
(declare-fun x4756 () Bool)
(declare-fun x4823 () Bool)
(declare-fun x3030 () Bool)
(declare-fun x5929 () Bool)
(declare-fun x358 () Bool)
(declare-fun x3769 () Real)
(declare-fun x2858 () Real)
(declare-fun x1969 () Real)
(declare-fun x2828 () Bool)
(declare-fun x4041 () Bool)
(declare-fun x582 () Bool)
(declare-fun x96 () Real)
(declare-fun x1310 () Real)
(declare-fun x5019 () Bool)
(declare-fun x416 () Bool)
(declare-fun x3245 () Bool)
(declare-fun x4425 () Bool)
(declare-fun x417 () Bool)
(declare-fun x4637 () Real)
(declare-fun x3529 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x4939 () Bool)
(declare-fun x3261 () Real)
(declare-fun x4950 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x3589 () Real)
(declare-fun x1502 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x4870 () Bool)
(declare-fun x770 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x1817 () Real)
(declare-fun x5204 () Real)
(declare-fun x3523 () Bool)
(declare-fun x3876 () Bool)
(declare-fun x4078 () Bool)
(declare-fun x536 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x4711 () Real)
(declare-fun x4152 () Real)
(declare-fun x3837 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x2980 () Bool)
(declare-fun x1738 () Real)
(declare-fun x3285 () Real)
(declare-fun x4813 () Bool)
(declare-fun x2488 () Real)
(declare-fun x3921 () Real)
(declare-fun x2782 () Real)
(declare-fun x4126 () Bool)
(declare-fun x3967 () Bool)
(declare-fun x2334 () Real)
(declare-fun x3461 () Real)
(declare-fun x1814 () Real)
(declare-fun x2364 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x2332 (Real) Real)
(declare-fun x820 () Real)
(declare-fun x2023 () Bool)
(declare-fun x4720 () Bool)
(declare-fun x1012 () Real)
(declare-fun x359 () Bool)
(declare-fun x2128 (Real) Real)
(declare-fun x49 () Real)
(declare-fun x6004 () Real)
(declare-fun x3704 () Real)
(declare-fun x240 () Real)
(declare-fun x2977 () Bool)
(declare-fun x1015 () Real)
(declare-fun x2783 () Bool)
(declare-fun x491 () Bool)
(declare-fun x4187 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x1216 () Real)
(declare-fun x1658 () Bool)
(declare-fun x5207 () Bool)
(declare-fun x933 () Bool)
(declare-fun x3978 () Bool)
(declare-fun x3609 (Real) Real)
(declare-fun x360 (Real) Real)
(declare-fun x3377 () Bool)
(declare-fun x3478 () Bool)
(declare-fun x1994 (Real) Real)
(declare-fun x6022 () Bool)
(declare-fun x5589 (Real) Real)
(declare-fun x1220 () Real)
(declare-fun x3972 () Real)
(declare-fun x2900 () Bool)
(declare-fun x5605 () Bool)
(declare-fun x5236 () Bool)
(declare-fun x2732 () Real)
(declare-fun x2285 () Bool)
(declare-fun x1446 () Real)
(declare-fun x325 () Real)
(declare-fun x1503 () Bool)
(declare-fun x6080 () Bool)
(declare-fun x5986 () Real)
(declare-fun x1145 () Real)
(declare-fun x3308 () Bool)
(declare-fun x3668 () Bool)
(declare-fun x3209 () Bool)
(declare-fun x4742 () Bool)
(declare-fun x114 () Real)
(declare-fun x3039 () Real)
(declare-fun x3659 () Bool)
(declare-fun x3415 () Bool)
(declare-fun x260 () Bool)
(declare-fun x2855 () Real)
(declare-fun x3510 () Bool)
(declare-fun x4869 () Bool)
(declare-fun x4512 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x970 (Real) Real)
(declare-fun x739 () Real)
(declare-fun x4671 () Real)
(declare-fun x1478 () Bool)
(declare-fun x2824 () Bool)
(declare-fun x2545 () Bool)
(declare-fun x4465 () Bool)
(declare-fun x2919 (Real) Real)
(declare-fun x4975 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x5706 () Real)
(declare-fun x5466 () Bool)
(declare-fun x5230 () Real)
(declare-fun x2070 () Real)
(declare-fun x1178 () Bool)
(declare-fun x2257 () Real)
(declare-fun x3417 () Bool)
(declare-fun x1893 (Real) Real)
(declare-fun x6075 () Bool)
(declare-fun x5941 () Real)
(declare-fun x3023 () Bool)
(declare-fun x4953 () Bool)
(declare-fun x2861 () Bool)
(declare-fun x951 () Real)
(declare-fun x3565 () Bool)
(declare-fun x533 () Real)
(declare-fun x378 () Real)
(declare-fun x5780 () Real)
(declare-fun x4236 (Real) Real)
(declare-fun x4675 () Bool)
(declare-fun x4541 () Bool)
(declare-fun x2028 () Real)
(declare-fun x94 () Bool)
(declare-fun x2448 () Real)
(declare-fun x4420 () Real)
(declare-fun x6021 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x1988 () Real)
(declare-fun x5056 () Real)
(declare-fun x1153 (Real) Real)
(declare-fun x2722 () Real)
(declare-fun x2602 () Bool)
(declare-fun x511 () Real)
(declare-fun x5958 () Bool)
(declare-fun x3891 () Bool)
(declare-fun x4659 () Real)
(declare-fun x5293 () Bool)
(declare-fun x6157 () Bool)
(declare-fun x3739 () Real)
(declare-fun x3970 () Real)
(declare-fun x3618 () Real)
(declare-fun x147 () Bool)
(declare-fun x3750 () Bool)
(declare-fun x2909 () Bool)
(declare-fun x4316 () Bool)
(declare-fun x2089 () Real)
(declare-fun x3880 () Bool)
(declare-fun x2673 () Real)
(declare-fun x2873 () Bool)
(declare-fun x3656 () Bool)
(declare-fun x3091 () Real)
(declare-fun x3399 () Bool)
(declare-fun x5921 () Bool)
(declare-fun x3108 () Real)
(declare-fun x1274 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x235 () Bool)
(declare-fun x985 () Real)
(declare-fun x1024 () Real)
(declare-fun x3728 () Real)
(declare-fun x4239 () Real)
(declare-fun x78 () Bool)
(declare-fun x158 () Real)
(declare-fun x3890 () Bool)
(declare-fun x1283 () Real)
(declare-fun x74 () Real)
(declare-fun x5297 () Real)
(declare-fun x4498 () Bool)
(declare-fun x216 () Bool)
(declare-fun x4603 () Real)
(declare-fun x3160 () Real)
(declare-fun x538 () Real)
(declare-fun x1904 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x1241 () Real)
(declare-fun x5172 () Bool)
(declare-fun x4090 () Real)
(declare-fun x581 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x3964 () Real)
(declare-fun x3764 () Real)
(declare-fun x3875 () Bool)
(declare-fun x5530 () Bool)
(declare-fun x1416 () Real)
(declare-fun x4893 () Bool)
(declare-fun x2745 () Bool)
(declare-fun x3443 () Real)
(declare-fun x858 () Real)
(declare-fun x674 () Real)
(declare-fun x201 () Real)
(declare-fun x3054 () Real)
(declare-fun x3825 () Bool)
(declare-fun x6036 () Real)
(declare-fun x6130 () Real)
(declare-fun x1986 () Real)
(declare-fun x2938 () Real)
(declare-fun x5947 () Bool)
(declare-fun x5578 () Real)
(declare-fun x518 () Bool)
(declare-fun x1916 (Real) Real)
(declare-fun x2666 () Bool)
(declare-fun x3012 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x877 () Bool)
(declare-fun x3043 () Real)
(declare-fun x3733 () Real)
(declare-fun x4242 () Real)
(declare-fun x3561 () Bool)
(declare-fun x6062 () Bool)
(declare-fun x4275 () Bool)
(declare-fun x4912 () Real)
(declare-fun x1487 () Bool)
(declare-fun x4533 () Bool)
(declare-fun x3169 () Bool)
(declare-fun x3642 () Real)
(declare-fun x4036 () Bool)
(declare-fun x3514 () Bool)
(declare-fun x4532 () Bool)
(declare-fun x4406 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x1470 () Real)
(declare-fun x2913 () Bool)
(declare-fun x628 () Real)
(declare-fun x5939 () Bool)
(declare-fun x687 () Real)
(declare-fun x1117 (Real) Real)
(declare-fun x1263 () Real)
(declare-fun x1330 () Real)
(declare-fun x5443 () Real)
(declare-fun x2179 () Real)
(declare-fun x4680 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x855 () Real)
(declare-fun x1666 () Real)
(declare-fun x2570 () Bool)
(declare-fun x4901 () Bool)
(declare-fun x373 () Real)
(declare-fun x4444 () Real)
(declare-fun x1548 () Real)
(declare-fun x949 () Real)
(declare-fun x5808 () Real)
(declare-fun x2240 () Bool)
(declare-fun x4193 () Real)
(declare-fun x5582 () Real)
(declare-fun x4871 () Real)
(declare-fun x5765 () Bool)
(declare-fun x55 () Bool)
(declare-fun x607 () Real)
(declare-fun x4571 (Real) Real)
(declare-fun x1329 () Bool)
(declare-fun x653 () Real)
(declare-fun x3229 () Bool)
(declare-fun x5574 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x3842 () Bool)
(declare-fun x4801 () Bool)
(declare-fun x1158 () Real)
(declare-fun x5367 () Bool)
(declare-fun x407 () Bool)
(declare-fun x2367 () Real)
(declare-fun x3715 () Bool)
(declare-fun x5442 () Bool)
(declare-fun x377 () Real)
(declare-fun x973 () Real)
(declare-fun x4404 () Real)
(declare-fun x4290 () Bool)
(declare-fun x3986 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x1808 () Real)
(declare-fun x681 () Bool)
(declare-fun x304 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x3069 () Real)
(declare-fun x2277 () Real)
(declare-fun x785 (Real) Real)
(declare-fun x5729 () Bool)
(declare-fun x5724 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x3939 () Bool)
(declare-fun x1 () Real)
(declare-fun x5064 () Bool)
(declare-fun x905 () Real)
(declare-fun x4245 () Real)
(declare-fun x2706 () Real)
(declare-fun x6160 (Real) Real)
(declare-fun x1943 () Real)
(declare-fun x3974 () Real)
(declare-fun x2146 () Bool)
(declare-fun x3029 () Real)
(declare-fun x5480 () Bool)
(declare-fun x178 () Real)
(declare-fun x882 () Real)
(declare-fun x1958 () Bool)
(declare-fun x4408 () Bool)
(declare-fun x1060 () Real)
(declare-fun x1560 () Bool)
(declare-fun x324 () Bool)
(declare-fun x845 () Real)
(declare-fun x4863 () Bool)
(declare-fun x4997 () Real)
(declare-fun x5773 () Real)
(declare-fun x3125 () Real)
(declare-fun x5403 () Real)
(declare-fun x2424 () Bool)
(declare-fun x3558 () Real)
(declare-fun x2877 () Real)
(declare-fun x3705 () Bool)
(declare-fun x3201 () Bool)
(declare-fun x5073 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x5511 () Real)
(declare-fun x4556 () Bool)
(declare-fun x4119 () Bool)
(declare-fun x3518 () Bool)
(declare-fun x4660 () Real)
(declare-fun x3957 () Real)
(declare-fun x246 () Real)
(declare-fun x2652 () Bool)
(declare-fun x4518 () Bool)
(declare-fun x2587 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x2234 () Bool)
(declare-fun x585 () Bool)
(declare-fun x3962 () Real)
(declare-fun x4836 () Bool)
(declare-fun x5417 () Real)
(declare-fun x740 () Real)
(declare-fun x1543 () Real)
(declare-fun x1399 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x35 () Bool)
(declare-fun x4201 () Real)
(declare-fun x1673 () Real)
(declare-fun x721 () Bool)
(declare-fun x4471 (Real) Real)
(declare-fun x73 () Bool)
(declare-fun x1010 () Real)
(declare-fun x4555 (Real) Real)
(declare-fun x5759 () Real)
(declare-fun x42 () Bool)
(declare-fun x3538 () Bool)
(declare-fun x4108 () Real)
(declare-fun x2912 () Bool)
(declare-fun x5353 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x4848 () Bool)
(declare-fun x228 () Real)
(declare-fun x4755 () Bool)
(declare-fun x3546 () Real)
(declare-fun x3672 () Bool)
(declare-fun x334 () Bool)
(declare-fun x4379 () Real)
(declare-fun x2038 () Real)
(declare-fun x318 () Real)
(declare-fun x5012 () Bool)
(declare-fun x5200 () Bool)
(declare-fun x408 () Bool)
(declare-fun x4839 () Real)
(declare-fun x1889 () Real)
(declare-fun x4248 () Real)
(declare-fun x1363 () Bool)
(declare-fun x6003 () Real)
(declare-fun x2007 () Bool)
(declare-fun x31 () Bool)
(declare-fun x800 () Bool)
(declare-fun x5740 () Real)
(declare-fun x3368 () Bool)
(declare-fun x2808 () Real)
(declare-fun x1949 () Bool)
(declare-fun x1028 () Real)
(declare-fun x2397 () Real)
(declare-fun x462 () Bool)
(declare-fun x5212 () Bool)
(declare-fun x1981 () Real)
(declare-fun x455 () Real)
(declare-fun x1255 () Bool)
(declare-fun x2324 () Real)
(declare-fun x2180 () Real)
(declare-fun x2651 () Real)
(declare-fun x4282 () Real)
(declare-fun x5906 () Real)
(declare-fun x4489 () Real)
(declare-fun x5946 () Bool)
(declare-fun x1602 () Real)
(declare-fun x5402 () Bool)
(declare-fun x636 () Real)
(declare-fun x4125 () Real)
(declare-fun x1125 () Bool)
(declare-fun x29 () Real)
(declare-fun x1991 (Real) Real)
(declare-fun x3640 () Bool)
(declare-fun x3073 () Bool)
(declare-fun x5277 () Real)
(declare-fun x743 () Real)
(declare-fun x4271 () Real)
(declare-fun x4073 () Bool)
(declare-fun x3852 () Real)
(declare-fun x3124 () Real)
(declare-fun x3796 () Bool)
(declare-fun x4217 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x5001 () Bool)
(declare-fun x5596 () Bool)
(declare-fun x4523 () Real)
(declare-fun x2479 () Bool)
(declare-fun x2829 () Real)
(declare-fun x3220 () Real)
(declare-fun x345 () Real)
(declare-fun x2368 () Real)
(declare-fun x3194 () Real)
(declare-fun x5342 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x262 () Bool)
(declare-fun x2228 () Bool)
(declare-fun x18 () Bool)
(declare-fun x5167 () Real)
(declare-fun x2586 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x6135 (Real) Real)
(declare-fun x4593 () Bool)
(declare-fun x5840 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x1885 () Real)
(declare-fun x746 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x3141 () Bool)
(declare-fun x3988 () Bool)
(declare-fun x131 () Real)
(declare-fun x1671 () Bool)
(declare-fun x5361 () Bool)
(declare-fun x633 () Real)
(declare-fun x3681 () Bool)
(declare-fun x5721 () Real)
(declare-fun x2261 () Real)
(declare-fun x3242 () Bool)
(declare-fun x3068 () Bool)
(declare-fun x3404 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x5142 () Real)
(declare-fun x993 () Real)
(declare-fun x3178 () Real)
(declare-fun x209 () Bool)
(declare-fun x4310 () Real)
(declare-fun x4085 () Bool)
(declare-fun x4220 () Real)
(declare-fun x1134 () Bool)
(declare-fun x4480 () Real)
(declare-fun x3929 () Real)
(declare-fun x5882 () Real)
(declare-fun x4536 (Real) Real)
(declare-fun x2454 () Bool)
(declare-fun x6103 () Real)
(declare-fun x4943 () Bool)
(declare-fun x3736 () Bool)
(declare-fun x539 () Bool)
(declare-fun x1939 () Real)
(declare-fun x2453 () Bool)
(declare-fun x5972 () Real)
(declare-fun x3076 () Real)
(declare-fun x2680 (Real) Real)
(declare-fun x5081 () Bool)
(declare-fun x1011 () Real)
(declare-fun x712 () Real)
(declare-fun x4940 () Bool)
(declare-fun x5920 () Bool)
(declare-fun x4113 () Real)
(declare-fun x4195 () Bool)
(declare-fun x92 () Bool)
(declare-fun x4710 () Real)
(declare-fun x5732 () Bool)
(declare-fun x4830 () Real)
(declare-fun x1838 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x4802 () Real)
(declare-fun x5151 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x2388 () Real)
(declare-fun x194 () Bool)
(declare-fun x4160 (Real) Real)
(declare-fun x2103 () Real)
(declare-fun x5912 (Real) Real)
(declare-fun x2549 () Real)
(declare-fun x2408 () Real)
(declare-fun x3711 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x6063 () Bool)
(declare-fun x3025 () Real)
(declare-fun x2505 () Real)
(declare-fun x5289 () Bool)
(declare-fun x5992 () Real)
(declare-fun x1200 () Bool)
(declare-fun x4226 () Bool)
(declare-fun x1362 () Real)
(declare-fun x451 () Real)
(declare-fun x733 () Bool)
(declare-fun x870 () Bool)
(declare-fun x5157 () Real)
(declare-fun x1488 () Real)
(declare-fun x4356 () Bool)
(declare-fun x3937 () Bool)
(declare-fun x2308 () Real)
(declare-fun x5517 () Real)
(declare-fun x5597 () Real)
(declare-fun x5682 () Bool)
(declare-fun x3604 () Real)
(declare-fun x5057 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x1043 () Real)
(declare-fun x2315 () Real)
(declare-fun x836 () Real)
(declare-fun x3508 () Real)
(declare-fun x4832 () Bool)
(declare-fun x3667 () Real)
(declare-fun x1983 () Real)
(declare-fun x3582 () Bool)
(declare-fun x4213 () Bool)
(declare-fun x3854 () Real)
(declare-fun x2513 () Bool)
(declare-fun x5451 () Real)
(declare-fun x3789 () Real)
(declare-fun x4000 () Real)
(declare-fun x2918 () Real)
(declare-fun x4432 () Bool)
(declare-fun x2642 () Real)
(declare-fun x5660 () Real)
(declare-fun x3260 () Real)
(declare-fun x4621 () Bool)
(declare-fun x3207 (Real) Real)
(declare-fun x4994 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x5801 (Real) Real)
(declare-fun x1228 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x1905 () Real)
(declare-fun x847 () Bool)
(declare-fun x1779 () Real)
(declare-fun x3585 () Bool)
(declare-fun x3041 () Real)
(declare-fun x1711 () Bool)
(declare-fun x4918 () Real)
(declare-fun x6046 () Bool)
(declare-fun x311 () Bool)
(declare-fun x2994 () Real)
(declare-fun x3247 (Real) Real)
(declare-fun x5600 () Bool)
(declare-fun x1966 () Real)
(declare-fun x2744 () Real)
(declare-fun x3312 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x4602 () Bool)
(declare-fun x3555 () Bool)
(declare-fun x878 () Bool)
(declare-fun x315 () Real)
(declare-fun x4887 () Real)
(declare-fun x5631 () Bool)
(declare-fun x3158 () Real)
(declare-fun x4890 () Real)
(declare-fun x1832 () Bool)
(declare-fun x4238 (Real) Real)
(declare-fun x3664 () Real)
(declare-fun x313 () Bool)
(declare-fun x2381 () Real)
(declare-fun x171 () Bool)
(declare-fun x5193 () Bool)
(declare-fun x2726 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x1760 () Real)
(declare-fun x453 () Bool)
(declare-fun x3403 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x72 () Real)
(declare-fun x651 () Bool)
(declare-fun x5082 () Real)
(declare-fun x3554 () Real)
(declare-fun x391 () Bool)
(declare-fun x5181 () Real)
(declare-fun x2812 () Bool)
(declare-fun x3465 () Real)
(declare-fun x5878 () Bool)
(declare-fun x4588 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x4441 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x822 () Real)
(declare-fun x1269 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x1218 () Real)
(declare-fun x448 () Real)
(declare-fun x1576 () Real)
(declare-fun x5302 () Bool)
(declare-fun x1970 () Real)
(declare-fun x84 () Bool)
(declare-fun x449 () Bool)
(declare-fun x4354 () Real)
(declare-fun x2113 () Bool)
(declare-fun x343 () Bool)
(declare-fun x5471 () Real)
(declare-fun x5893 () Real)
(declare-fun x3878 () Bool)
(declare-fun x5608 () Real)
(declare-fun x5621 () Bool)
(declare-fun x4186 () Real)
(declare-fun x1477 () Real)
(declare-fun x980 () Bool)
(declare-fun x2185 (Real) Real)
(declare-fun x5336 () Bool)
(declare-fun x3163 () Real)
(declare-fun x350 () Real)
(declare-fun x3677 () Real)
(declare-fun x6161 () Bool)
(declare-fun x5235 () Bool)
(declare-fun x2243 () Real)
(declare-fun x1353 () Real)
(declare-fun x1341 (Real) Real)
(declare-fun x1097 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x4059 () Real)
(declare-fun x3134 () Bool)
(declare-fun x5039 () Real)
(declare-fun x2612 () Real)
(declare-fun x2663 () Real)
(declare-fun x1452 () Bool)
(declare-fun x2939 () Real)
(declare-fun x3845 () Bool)
(declare-fun x4923 () Bool)
(declare-fun x2942 () Bool)
(declare-fun x5418 () Real)
(declare-fun x6111 () Real)
(declare-fun x2582 () Real)
(declare-fun x2620 () Real)
(declare-fun x2279 () Bool)
(declare-fun x4847 () Real)
(declare-fun x5973 () Real)
(declare-fun x948 () Real)
(declare-fun x5583 () Real)
(declare-fun x5017 () Real)
(declare-fun x5873 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1736 () Bool)
(declare-fun x5034 () Bool)
(declare-fun x3594 () Real)
(declare-fun x910 () Real)
(declare-fun x6140 () Bool)
(declare-fun x3746 () Bool)
(declare-fun x5231 () Real)
(declare-fun x4111 () Real)
(declare-fun x3099 () Real)
(declare-fun x5241 () Bool)
(declare-fun x5091 () Bool)
(declare-fun x2627 () Real)
(declare-fun x2380 () Bool)
(declare-fun x2318 () Bool)
(declare-fun x5661 () Real)
(declare-fun x5753 () Bool)
(declare-fun x1951 () Real)
(declare-fun x5214 () Real)
(declare-fun x4805 (Real) Real)
(declare-fun x550 () Real)
(declare-fun x3634 () Bool)
(declare-fun x2842 () Real)
(declare-fun x4039 () Bool)
(declare-fun x5170 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x2714 () Bool)
(declare-fun x2439 (Real) Real)
(declare-fun x695 () Bool)
(declare-fun x5579 () Bool)
(declare-fun x6146 () Bool)
(declare-fun x864 () Bool)
(declare-fun x2580 () Real)
(declare-fun x832 () Bool)
(declare-fun x2055 (Real) Real)
(declare-fun x105 () Real)
(declare-fun x4921 () Bool)
(declare-fun x5839 () Bool)
(declare-fun x3144 () Real)
(declare-fun x1332 () Real)
(declare-fun x1461 () Real)
(declare-fun x2889 (Real) Real)
(declare-fun x1422 () Bool)
(declare-fun x621 () Bool)
(declare-fun x4031 () Real)
(declare-fun x3151 () Real)
(declare-fun x3804 () Bool)
(declare-fun x4904 () Real)
(declare-fun x3007 () Bool)
(declare-fun x4983 (Real) Real)
(declare-fun x1301 () Bool)
(declare-fun x2504 () Real)
(declare-fun x6083 () Bool)
(declare-fun x3950 () Real)
(declare-fun x686 () Real)
(declare-fun x1467 () Real)
(declare-fun x112 () Bool)
(declare-fun x320 () Bool)
(declare-fun x2891 () Bool)
(declare-fun x5952 () Real)
(declare-fun x4103 () Bool)
(declare-fun x4283 () Bool)
(declare-fun x881 () Real)
(declare-fun x5263 () Real)
(declare-fun x3053 () Real)
(declare-fun x4664 (Real) Real)
(declare-fun x1913 () Bool)
(declare-fun x2360 () Bool)
(declare-fun x5499 () Bool)
(declare-fun x1945 () Real)
(declare-fun x3794 () Bool)
(declare-fun x5265 () Bool)
(declare-fun x1472 () Real)
(declare-fun x3000 () Bool)
(declare-fun x3700 () Bool)
(declare-fun x2986 () Bool)
(declare-fun x59 () Real)
(declare-fun x5748 () Real)
(declare-fun x197 () Real)
(declare-fun x1579 () Bool)
(declare-fun x1627 () Real)
(declare-fun x1338 () Real)
(declare-fun x683 () Real)
(declare-fun x5502 () Real)
(declare-fun x4708 () Real)
(declare-fun x232 () Real)
(declare-fun x2317 () Real)
(declare-fun x1210 () Real)
(declare-fun x4221 () Bool)
(declare-fun x4560 () Real)
(declare-fun x1247 () Real)
(declare-fun x308 () Bool)
(declare-fun x4945 () Bool)
(declare-fun x5966 (Real) Real)
(declare-fun x1549 () Bool)
(declare-fun x5950 (Real) Real)
(declare-fun x4286 (Real) Real)
(declare-fun x4748 () Real)
(declare-fun x4151 () Bool)
(declare-fun x2500 () Bool)
(declare-fun x685 () Bool)
(declare-fun x4725 () Real)
(declare-fun x2376 () Bool)
(declare-fun x2422 () Real)
(declare-fun x6113 () Bool)
(declare-fun x3222 () Real)
(declare-fun x4799 () Real)
(declare-fun x4716 () Real)
(declare-fun x1256 () Real)
(declare-fun x1275 () Real)
(declare-fun x772 () Real)
(declare-fun x3460 () Real)
(declare-fun x3111 () Real)
(declare-fun x1737 () Real)
(declare-fun x4723 () Bool)
(declare-fun x4331 () Real)
(declare-fun x436 () Bool)
(declare-fun x266 () Bool)
(declare-fun x677 () Bool)
(declare-fun x543 () Bool)
(declare-fun x5467 () Bool)
(declare-fun x5426 () Bool)
(declare-fun x5454 () Real)
(declare-fun x3128 () Bool)
(declare-fun x6038 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x5701 (Real) Real)
(declare-fun x3509 () Bool)
(declare-fun x4369 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x4304 () Real)
(declare-fun x1291 () Bool)
(declare-fun x5699 (Real) Real)
(declare-fun x3776 () Real)
(declare-fun x5412 () Real)
(declare-fun x3811 () Real)
(declare-fun x2820 () Real)
(declare-fun x3821 () Bool)
(declare-fun x5522 () Real)
(declare-fun x5799 () Real)
(declare-fun x6109 () Bool)
(declare-fun x5547 () Real)
(declare-fun x529 () Bool)
(declare-fun x5737 () Real)
(declare-fun x5636 () Bool)
(declare-fun x3958 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x176 () Real)
(declare-fun x782 () Bool)
(declare-fun x5102 () Real)
(declare-fun x4502 () Real)
(declare-fun x2683 () Bool)
(declare-fun x1528 (Real) Real)
(declare-fun x4687 () Bool)
(declare-fun x5965 () Bool)
(declare-fun x2728 () Real)
(declare-fun x757 () Bool)
(declare-fun x4751 () Bool)
(declare-fun x2336 () Real)
(declare-fun x654 () Bool)
(declare-fun x1386 () Real)
(declare-fun x1748 () Real)
(declare-fun x1850 () Real)
(declare-fun x3661 () Bool)
(declare-fun x5100 () Bool)
(declare-fun x1546 () Real)
(declare-fun x4872 () Real)
(declare-fun x3590 () Bool)
(declare-fun x1873 (Real) Real)
(declare-fun x1375 () Real)
(declare-fun x2596 () Bool)
(declare-fun x1807 (Real) Real)
(declare-fun x4476 () Real)
(declare-fun x2346 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x790 () Real)
(declare-fun x4794 () Bool)
(declare-fun x2255 () Real)
(declare-fun x7 (Real) Real)
(declare-fun x2508 () Bool)
(declare-fun x3135 () Real)
(declare-fun x2099 () Bool)
(declare-fun x3643 () Real)
(declare-fun x1923 () Real)
(declare-fun x4564 () Real)
(declare-fun x2220 () Bool)
(declare-fun x3016 () Bool)
(declare-fun x4767 (Real) Real)
(declare-fun x699 () Bool)
(declare-fun x4905 (Real) Real)
(declare-fun x3997 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x5919 () Real)
(declare-fun x3687 () Bool)
(declare-fun x3412 () Real)
(declare-fun x860 () Bool)
(declare-fun x5797 () Bool)
(declare-fun x4989 (Real) Real)
(declare-fun x3165 () Bool)
(declare-fun x3117 () Real)
(declare-fun x5900 () Real)
(declare-fun x1047 () Bool)
(declare-fun x93 () Bool)
(declare-fun x1080 () Real)
(declare-fun x4728 () Bool)
(declare-fun x4655 () Bool)
(declare-fun x2849 () Real)
(declare-fun x1242 () Real)
(declare-fun x564 () Bool)
(declare-fun x1908 () Real)
(declare-fun x6177 () Bool)
(declare-fun x3983 () Bool)
(declare-fun x405 () Bool)
(declare-fun x4042 () Real)
(declare-fun x1185 () Real)
(declare-fun x4744 () Real)
(declare-fun x2911 () Real)
(declare-fun x38 () Bool)
(declare-fun x1071 () Real)
(declare-fun x3981 () Bool)
(declare-fun x3411 (Real) Real)
(declare-fun x2998 () Bool)
(declare-fun x3139 () Real)
(declare-fun x2390 () Real)
(declare-fun x3083 () Bool)
(declare-fun x4413 (Real) Real)
(declare-fun x3996 () Real)
(declare-fun x2149 () Real)
(declare-fun x403 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x6107 () Real)
(declare-fun x111 () Bool)
(declare-fun x5156 () Real)
(declare-fun x64 () Bool)
(declare-fun x1333 () Real)
(declare-fun x316 () Bool)
(declare-fun x1186 () Real)
(declare-fun x161 () Real)
(declare-fun x3154 () Bool)
(declare-fun x499 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x3237 (Real) Real)
(declare-fun x1959 () Real)
(declare-fun x6147 () Bool)
(declare-fun x5015 () Real)
(declare-fun x5045 () Bool)
(declare-fun x3583 () Bool)
(declare-fun x1868 () Real)
(declare-fun x2487 (Real) Real)
(declare-fun x5250 () Real)
(declare-fun x2932 () Real)
(declare-fun x1287 () Real)
(declare-fun x5743 () Bool)
(declare-fun x4068 () Real)
(declare-fun x5405 () Real)
(declare-fun x2905 () Bool)
(declare-fun x6125 () Bool)
(declare-fun x1696 () Real)
(declare-fun x4144 () Bool)
(declare-fun x4724 () Bool)
(declare-fun x3467 () Real)
(declare-fun x5326 () Real)
(declare-fun x2689 () Bool)
(declare-fun x3564 () Real)
(declare-fun x2484 () Bool)
(declare-fun x1933 (Real) Real)
(declare-fun x458 () Real)
(declare-fun x5251 () Real)
(declare-fun x5338 () Bool)
(declare-fun x6053 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x4197 () Bool)
(declare-fun x5227 () Real)
(declare-fun x3387 () Bool)
(declare-fun x4911 () Bool)
(declare-fun x53 () Bool)
(declare-fun x6013 () Bool)
(declare-fun x5603 () Bool)
(declare-fun x3731 (Real) Real)
(declare-fun x2822 () Real)
(declare-fun x238 () Bool)
(declare-fun x470 () Bool)
(declare-fun x4657 () Bool)
(declare-fun x3496 () Real)
(declare-fun x1475 () Real)
(declare-fun x5428 () Bool)
(declare-fun x4865 () Real)
(declare-fun x3893 () Bool)
(declare-fun x1235 () Real)
(declare-fun x5620 () Bool)
(declare-fun x2819 () Real)
(declare-fun x4507 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x5162 () Real)
(declare-fun x5192 () Bool)
(declare-fun x4044 () Real)
(declare-fun x998 () Real)
(declare-fun x2516 () Bool)
(declare-fun x2626 () Real)
(declare-fun x4156 () Bool)
(declare-fun x6049 () Real)
(declare-fun x1074 () Bool)
(declare-fun x2574 () Bool)
(declare-fun x6068 () Real)
(declare-fun x2814 () Real)
(declare-fun x5766 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x5703 () Bool)
(declare-fun x3762 () Real)
(declare-fun x3015 () Real)
(declare-fun x5514 () Bool)
(declare-fun x2254 () Real)
(declare-fun x3162 () Real)
(declare-fun x4681 () Real)
(declare-fun x1021 () Real)
(declare-fun x5337 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x5369 () Real)
(declare-fun x5054 () Real)
(declare-fun x2168 () Real)
(declare-fun x136 () Real)
(declare-fun x4882 () Bool)
(declare-fun x3644 () Real)
(declare-fun x2186 () Real)
(declare-fun x3450 () Real)
(declare-fun x4453 () Real)
(declare-fun x4690 () Bool)
(declare-fun x1510 () Real)
(declare-fun x2290 () Bool)
(declare-fun x2280 () Bool)
(declare-fun x3922 () Bool)
(declare-fun x569 () Bool)
(declare-fun x5693 () Real)
(declare-fun x2130 () Real)
(declare-fun x5788 () Bool)
(declare-fun x4565 () Real)
(declare-fun x2870 () Real)
(declare-fun x588 () Bool)
(declare-fun x3627 () Bool)
(declare-fun x4022 () Bool)
(declare-fun x5429 () Real)
(declare-fun x406 (Real) Real)
(declare-fun x4333 () Bool)
(declare-fun x528 () Bool)
(declare-fun x3944 () Bool)
(declare-fun x446 () Real)
(declare-fun x1809 (Real) Real)
(declare-fun x2469 () Real)
(declare-fun x4373 () Real)
(declare-fun x796 () Real)
(declare-fun x5182 () Bool)
(declare-fun x5262 () Real)
(declare-fun x3145 (Real) Real)
(declare-fun x1259 () Real)
(declare-fun x4462 () Real)
(declare-fun x3591 () Real)
(declare-fun x3648 () Bool)
(declare-fun x1420 () Real)
(declare-fun x710 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x530 () Bool)
(declare-fun x4506 (Real) Real)
(declare-fun x568 () Bool)
(declare-fun x4364 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x1304 () Real)
(declare-fun x4676 () Real)
(declare-fun x1137 () Real)
(declare-fun x4297 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x351 () Real)
(declare-fun x2077 () Real)
(declare-fun x2523 () Bool)
(declare-fun x1806 () Real)
(declare-fun x4027 () Bool)
(declare-fun x2152 () Real)
(declare-fun x2856 () Bool)
(declare-fun x4431 () Bool)
(declare-fun x4210 () Real)
(declare-fun x1636 () Bool)
(declare-fun x1501 (Real) Real)
(declare-fun x2082 (Real) Real)
(declare-fun x1729 () Bool)
(declare-fun x4147 () Bool)
(declare-fun x2335 () Real)
(declare-fun x3009 () Real)
(declare-fun x5486 () Real)
(declare-fun x3052 () Bool)
(declare-fun x5360 () Real)
(declare-fun x3140 () Bool)
(declare-fun x1197 (Real) Real)
(declare-fun x1453 () Real)
(declare-fun x1992 () Real)
(declare-fun x4133 (Real) Real)
(declare-fun x5559 () Bool)
(declare-fun x5122 (Real) Real)
(declare-fun x2920 () Bool)
(declare-fun x5745 () Real)
(declare-fun x6092 () Bool)
(declare-fun x3987 () Bool)
(declare-fun x5125 () Bool)
(declare-fun x6131 () Real)
(declare-fun x966 () Bool)
(declare-fun x3831 () Bool)
(declare-fun x1962 () Real)
(declare-fun x497 () Bool)
(declare-fun x2575 () Real)
(declare-fun x4712 () Real)
(declare-fun x2802 () Real)
(declare-fun x4198 () Real)
(declare-fun x2032 () Bool)
(declare-fun x2556 () Bool)
(declare-fun x117 () Real)
(declare-fun x5321 () Real)
(declare-fun x1512 () Bool)
(declare-fun x126 () Bool)
(declare-fun x4770 () Real)
(declare-fun x4632 () Bool)
(declare-fun x3174 () Real)
(declare-fun x5422 () Real)
(declare-fun x4224 () Bool)
(declare-fun x4299 () Bool)
(declare-fun x4280 () Bool)
(declare-fun x4965 () Bool)
(declare-fun x5308 (Real) Real)
(declare-fun x2053 () Bool)
(declare-fun x6084 () Bool)
(declare-fun x3904 () Bool)
(declare-fun x4218 () Real)
(declare-fun x6162 () Bool)
(declare-fun x365 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x6144 () Real)
(declare-fun x2914 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x3153 (Real) Real)
(declare-fun x912 () Bool)
(declare-fun x388 () Real)
(declare-fun x4401 () Bool)
(declare-fun x2848 () Bool)
(declare-fun x5260 () Real)
(declare-fun x1865 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x3127 () Bool)
(declare-fun x1508 () Real)
(declare-fun x2788 () Real)
(declare-fun x225 () Bool)
(declare-fun x151 (Real) Real)
(declare-fun x5833 () Real)
(declare-fun x3801 () Real)
(declare-fun x914 () Bool)
(declare-fun x507 () Bool)
(declare-fun x4246 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x2239 () Real)
(declare-fun x3278 () Bool)
(declare-fun x2078 () Real)
(declare-fun x4606 () Real)
(declare-fun x2494 () Bool)
(declare-fun x4422 () Bool)
(declare-fun x3624 () Bool)
(declare-fun x6059 () Bool)
(declare-fun x815 () Bool)
(declare-fun x4375 () Real)
(declare-fun x2884 () Bool)
(declare-fun x3993 () Bool)
(declare-fun x548 () Real)
(declare-fun x3706 () Real)
(declare-fun x1944 () Bool)
(declare-fun x707 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x1018 () Real)
(declare-fun x3757 () Bool)
(declare-fun x3284 () Real)
(declare-fun x2299 () Real)
(declare-fun x5113 () Real)
(declare-fun x4648 () Real)
(declare-fun x5924 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x3484 () Real)
(declare-fun x1698 () Real)
(declare-fun x2951 () Real)
(declare-fun x3544 () Bool)
(declare-fun x2258 () Real)
(declare-fun x565 () Bool)
(declare-fun x3766 () Real)
(declare-fun x5575 () Real)
(declare-fun x4798 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x2785 () Bool)
(declare-fun x4306 () Real)
(declare-fun x4597 () Bool)
(declare-fun x504 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x5259 () Real)
(declare-fun x1804 () Bool)
(declare-fun x638 () Bool)
(declare-fun x2966 () Real)
(declare-fun x5264 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x4403 () Real)
(declare-fun x3527 () Bool)
(declare-fun x2881 () Real)
(declare-fun x4996 () Bool)
(declare-fun x1400 () Real)
(declare-fun x609 () Bool)
(declare-fun x4467 () Bool)
(declare-fun x4352 () Real)
(declare-fun x327 () Real)
(declare-fun x2455 () Bool)
(declare-fun x718 () Bool)
(declare-fun x5090 () Real)
(declare-fun x2319 () Bool)
(declare-fun x5922 (Real) Real)
(declare-fun x4959 () Real)
(declare-fun x4763 () Bool)
(declare-fun x36 () Bool)
(declare-fun x5987 () Real)
(declare-fun x2244 () Bool)
(declare-fun x2825 () Real)
(declare-fun x1533 () Real)
(declare-fun x2386 () Real)
(declare-fun x1672 () Bool)
(declare-fun x2140 () Bool)
(declare-fun x239 () Bool)
(declare-fun x3737 () Bool)
(declare-fun x824 () Bool)
(declare-fun x2747 () Real)
(declare-fun x2242 () Bool)
(declare-fun x1774 () Real)
(declare-fun x3713 () Real)
(declare-fun x767 () Bool)
(declare-fun x4962 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x3447 () Bool)
(declare-fun x5312 () Real)
(declare-fun x552 () Bool)
(declare-fun x3755 () Real)
(declare-fun x5790 () Real)
(declare-fun x1781 () Real)
(declare-fun x2264 () Real)
(declare-fun x1244 () Real)
(declare-fun x247 () Bool)
(declare-fun x5163 () Bool)
(declare-fun x1095 () Real)
(declare-fun x5736 () Real)
(declare-fun x4733 () Real)
(declare-fun x5955 () Bool)
(declare-fun x5197 () Real)
(declare-fun x2344 () Real)
(declare-fun x5016 () Real)
(declare-fun x3969 () Real)
(declare-fun x3982 () Real)
(declare-fun x5160 () Real)
(declare-fun x368 () Bool)
(declare-fun x4428 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x3946 () Real)
(declare-fun x2183 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x3522 (Real) Real)
(declare-fun x4398 () Bool)
(declare-fun x4452 () Bool)
(declare-fun x2019 () Real)
(declare-fun x5097 () Bool)
(declare-fun x1790 (Real) Real)
(declare-fun x2393 () Real)
(declare-fun x4004 () Bool)
(declare-fun x971 () Bool)
(declare-fun x5697 () Real)
(declare-fun x4913 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x5040 () Bool)
(declare-fun x5021 () Real)
(declare-fun x4855 () Bool)
(declare-fun x925 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x1559 () Real)
(declare-fun x1788 (Real) Real)
(declare-fun x1766 () Real)
(declare-fun x5663 () Bool)
(declare-fun x5864 () Bool)
(declare-fun x361 () Real)
(declare-fun x5651 (Real) Real)
(declare-fun x4845 () Bool)
(declare-fun x280 () Real)
(declare-fun x842 () Real)
(declare-fun x3912 () Bool)
(declare-fun x2467 () Real)
(declare-fun x2326 () Bool)
(declare-fun x272 () Real)
(declare-fun x3611 () Real)
(declare-fun x4520 () Real)
(declare-fun x823 () Real)
(declare-fun x1833 () Real)
(declare-fun x6143 () Real)
(declare-fun x3243 () Bool)
(declare-fun x1155 () Real)
(declare-fun x2566 (Real) Real)
(declare-fun x4253 () Real)
(declare-fun x1593 () Real)
(declare-fun x4348 () Real)
(declare-fun x1348 () Real)
(declare-fun x5129 () Real)
(declare-fun x5826 () Real)
(declare-fun x1689 () Real)
(declare-fun x4089 () Real)
(declare-fun x5083 () Bool)
(declare-fun x5325 () Real)
(declare-fun x1163 () Real)
(declare-fun x5003 () Real)
(declare-fun x783 () Real)
(declare-fun x2546 () Bool)
(declare-fun x1524 () Real)
(declare-fun x1854 () Bool)
(declare-fun x4456 () Bool)
(declare-fun x2935 () Bool)
(declare-fun x4771 () Bool)
(declare-fun x3419 () Real)
(declare-fun x1069 () Bool)
(declare-fun x3225 () Bool)
(declare-fun x3716 () Bool)
(declare-fun x1615 () Real)
(declare-fun x4176 () Real)
(declare-fun x1250 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x213 (Real) Real)
(declare-fun x3511 () Real)
(declare-fun x5690 (Real) Real)
(declare-fun x3994 () Real)
(declare-fun x1294 () Real)
(declare-fun x6112 () Real)
(declare-fun x2249 () Bool)
(declare-fun x3635 () Bool)
(declare-fun x5527 (Real) Real)
(declare-fun x121 () Real)
(declare-fun x4590 () Real)
(declare-fun x5964 () Real)
(declare-fun x2778 () Real)
(declare-fun x4717 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x5934 () Bool)
(declare-fun x2535 () Real)
(declare-fun x4698 () Real)
(declare-fun x1136 () Real)
(declare-fun x6104 () Bool)
(declare-fun x4378 () Bool)
(declare-fun x2928 (Real) Real)
(declare-fun x1281 () Bool)
(declare-fun x3991 () Real)
(declare-fun x2875 () Real)
(declare-fun x4906 () Bool)
(declare-fun x1876 () Real)
(declare-fun x4691 () Bool)
(declare-fun x5283 () Bool)
(declare-fun x76 () Real)
(declare-fun x4137 () Bool)
(declare-fun x554 () Bool)
(declare-fun x5679 (Real) Real)
(declare-fun x1094 () Real)
(declare-fun x2090 () Bool)
(declare-fun x3198 () Bool)
(declare-fun x3138 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1460 () Real)
(declare-fun x1187 (Real) Real)
(declare-fun x513 () Bool)
(declare-fun x4749 () Bool)
(declare-fun x401 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x5770 () Bool)
(declare-fun x144 () Bool)
(declare-fun x3418 () Bool)
(declare-fun x5761 () Bool)
(declare-fun x934 () Bool)
(declare-fun x3326 (Real) Real)
(declare-fun x4858 () Real)
(declare-fun x3172 () Bool)
(declare-fun x4142 () Bool)
(declare-fun x4620 () Bool)
(declare-fun x5298 () Bool)
(declare-fun x4783 () Bool)
(declare-fun x5473 () Real)
(declare-fun x5704 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x5573 () Real)
(declare-fun x5560 () Bool)
(declare-fun x3098 () Bool)
(declare-fun x921 () Bool)
(declare-fun x5273 (Real) Real)
(declare-fun x41 () Real)
(declare-fun x4998 () Real)
(declare-fun x4818 () Real)
(declare-fun x5234 () Real)
(declare-fun x2193 () Bool)
(declare-fun x5145 () Bool)
(declare-fun x4985 () Bool)
(declare-fun x4719 () Bool)
(declare-fun x2190 () Real)
(declare-fun x3834 () Bool)
(declare-fun x5060 () Bool)
(declare-fun x2215 () Real)
(declare-fun x2584 () Bool)
(declare-fun x2681 (Real) Real)
(declare-fun x1355 () Real)
(declare-fun x1708 () Real)
(declare-fun x4173 (Real) Real)
(declare-fun x5541 () Bool)
(declare-fun x3441 () Real)
(declare-fun x3353 () Bool)
(declare-fun x5497 () Bool)
(declare-fun x2126 () Real)
(declare-fun x2161 () Bool)
(declare-fun x3851 () Real)
(declare-fun x5716 () Bool)
(declare-fun x250 () Real)
(declare-fun x3719 () Bool)
(declare-fun x2700 () Real)
(declare-fun x1302 (Real) Real)
(declare-fun x467 () Bool)
(declare-fun x3477 () Bool)
(declare-fun x2022 () Real)
(declare-fun x4405 () Bool)
(declare-fun x4828 () Bool)
(declare-fun x3322 () Bool)
(declare-fun x5778 () Bool)
(declare-fun x1941 () Real)
(declare-fun x1798 () Real)
(declare-fun x2426 () Real)
(declare-fun x5216 () Bool)
(declare-fun x4577 () Real)
(declare-fun x3230 () Real)
(declare-fun x4429 () Real)
(declare-fun x2496 () Real)
(declare-fun x2702 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x299 () Real)
(declare-fun x19 () Real)
(declare-fun x4714 () Bool)
(declare-fun x1385 () Real)
(declare-fun x5746 () Bool)
(declare-fun x2807 () Bool)
(declare-fun x4497 () Bool)
(declare-fun x3063 () Bool)
(declare-fun x1203 () Real)
(declare-fun x3823 () Real)
(declare-fun x4627 () Real)
(declare-fun x77 () Real)
(declare-fun x5084 () Real)
(declare-fun x3989 () Bool)
(declare-fun x5844 () Bool)
(declare-fun x6154 () Real)
(declare-fun x1038 () Real)
(declare-fun x1204 () Real)
(declare-fun x2734 (Real) Real)
(declare-fun x2462 () Bool)
(declare-fun x5960 () Bool)
(declare-fun x1483 (Real) Real)
(declare-fun x919 (Real) Real)
(declare-fun x4812 () Bool)
(declare-fun x5570 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x5188 () Real)
(declare-fun x5763 () Bool)
(declare-fun x599 () Real)
(declare-fun x1146 () Bool)
(declare-fun x2464 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x3596 () Real)
(declare-fun x5423 () Bool)
(declare-fun x5410 () Real)
(declare-fun x5971 () Bool)
(declare-fun x5691 () Bool)
(declare-fun x4053 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x678 () Bool)
(declare-fun x5023 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x1426 () Real)
(declare-fun x196 (Real) Real)
(declare-fun x4785 () Bool)
(declare-fun x647 () Real)
(declare-fun x6169 () Real)
(declare-fun x1728 () Real)
(declare-fun x3166 () Real)
(declare-fun x5885 (Real) Real)
(declare-fun x5861 () Bool)
(declare-fun x3356 () Real)
(declare-fun x775 () Bool)
(declare-fun x1045 () Real)
(declare-fun x167 () Bool)
(declare-fun x1783 () Real)
(declare-fun x1592 (Real) Real)
(declare-fun x4426 () Real)
(declare-fun x5852 () Bool)
(declare-fun x3270 () Bool)
(declare-fun x2138 () Real)
(declare-fun x5465 (Real) Real)
(declare-fun x3301 () Real)
(declare-fun x2688 () Real)
(declare-fun x3416 () Bool)
(declare-fun x4491 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x592 () Bool)
(declare-fun x65 () Bool)
(declare-fun x5496 () Real)
(declare-fun x1110 (Real) Real)
(declare-fun x2665 () Bool)
(declare-fun x620 () Real)
(declare-fun x277 () Bool)
(declare-fun x2495 () Real)
(declare-fun x383 () Real)
(declare-fun x3669 () Real)
(declare-fun x2463 () Bool)
(declare-fun x2016 () Real)
(declare-fun x1055 () Real)
(declare-fun x5962 () Real)
(declare-fun x2541 () Bool)
(declare-fun x682 () Real)
(declare-fun x3369 () Real)
(declare-fun x4672 () Real)
(declare-fun x1048 () Real)
(declare-fun x2045 () Real)
(declare-fun x807 () Real)
(declare-fun x3692 () Bool)
(declare-fun x6023 () Real)
(declare-fun x2217 () Bool)
(declare-fun x4778 () Real)
(declare-fun x5186 () Bool)
(declare-fun x2797 () Real)
(declare-fun x5447 () Bool)
(declare-fun x160 () Bool)
(declare-fun x4730 () Real)
(declare-fun x3525 () Bool)
(declare-fun x4414 (Real) Real)
(declare-fun x2230 () Bool)
(declare-fun x4683 () Bool)
(declare-fun x48 () Bool)
(declare-fun x4287 () Real)
(declare-fun x2601 () Real)
(declare-fun x5708 () Bool)
(declare-fun x4573 () Bool)
(declare-fun x4991 () Bool)
(declare-fun x5818 () Bool)
(declare-fun x4347 (Real) Real)
(declare-fun x4376 () Real)
(declare-fun x2921 () Real)
(declare-fun x831 () Bool)
(declare-fun x395 () Real)
(declare-fun x1138 () Bool)
(declare-fun x2738 () Real)
(declare-fun x4752 () Real)
(declare-fun x1769 () Real)
(declare-fun x4697 () Real)
(declare-fun x640 () Bool)
(declare-fun x1874 () Real)
(declare-fun x5477 () Bool)
(declare-fun x115 () Bool)
(declare-fun x3305 () Real)
(declare-fun x1041 () Bool)
(declare-fun x6149 () Bool)
(declare-fun x3660 () Real)
(declare-fun x4475 () Bool)
(declare-fun x3879 () Bool)
(declare-fun x2511 () Real)
(declare-fun x3975 () Real)
(declare-fun x2430 () Bool)
(declare-fun x1848 (Real) Real)
(declare-fun x4321 () Bool)
(declare-fun x5627 () Real)
(declare-fun x1897 () Bool)
(declare-fun x5767 () Real)
(declare-fun x3002 () Bool)
(declare-fun x6050 () Bool)
(declare-fun x3156 () Bool)
(declare-fun x5880 () Bool)
(declare-fun x3212 () Bool)
(declare-fun x4129 () Real)
(declare-fun x3462 () Real)
(declare-fun x854 () Bool)
(declare-fun x4206 () Bool)
(declare-fun x248 () Bool)
(declare-fun x4184 () Bool)
(declare-fun x3751 () Real)
(declare-fun x828 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x3299 () Bool)
(declare-fun x186 () Real)
(declare-fun x2287 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x3828 () Bool)
(declare-fun x5105 () Real)
(declare-fun x1697 () Real)
(declare-fun x293 (Real) Real)
(declare-fun x5036 () Bool)
(declare-fun x2950 () Bool)
(declare-fun x3847 () Real)
(declare-fun x6037 () Real)
(declare-fun x150 () Real)
(declare-fun x4030 () Bool)
(declare-fun x2674 (Real) Real)
(declare-fun x1911 () Bool)
(declare-fun x5506 () Bool)
(declare-fun x5676 () Real)
(declare-fun x3255 () Real)
(declare-fun x1924 () Bool)
(declare-fun x6065 () Bool)
(declare-fun x2415 () Real)
(declare-fun x1272 () Real)
(declare-fun x2142 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x3290 () Bool)
(declare-fun x2578 () Bool)
(declare-fun x4908 (Real) Real)
(declare-fun x5874 () Real)
(declare-fun x4121 () Real)
(declare-fun x4178 () Real)
(declare-fun x1786 () Bool)
(declare-fun x3905 () Bool)
(declare-fun x6076 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x4057 () Bool)
(declare-fun x5469 () Bool)
(declare-fun x3096 (Real) Real)
(declare-fun x737 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x4559 () Real)
(declare-fun x2573 () Bool)
(declare-fun x810 () Bool)
(declare-fun x2245 () Real)
(declare-fun x5942 () Real)
(declare-fun x5540 () Bool)
(declare-fun x83 () Real)
(declare-fun x4101 (Real) Real)
(declare-fun x2520 () Real)
(declare-fun x3296 () Real)
(declare-fun x611 () Real)
(declare-fun x556 () Real)
(declare-fun x141 () Real)
(declare-fun x3947 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x4086 () Real)
(declare-fun x3336 () Real)
(declare-fun x3434 () Bool)
(declare-fun x2625 () Bool)
(declare-fun x5534 () Real)
(declare-fun x2892 () Real)
(declare-fun x866 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x387 () Bool)
(declare-fun x4722 () Real)
(declare-fun x992 () Real)
(declare-fun x3980 () Real)
(declare-fun x5673 () Bool)
(declare-fun x3856 () Bool)
(declare-fun x3113 () Real)
(declare-fun x4608 () Bool)
(declare-fun x3470 () Real)
(declare-fun x4777 () Bool)
(declare-fun x5619 () Real)
(declare-fun x5529 () Bool)
(declare-fun x5515 () Real)
(declare-fun x3863 () Real)
(declare-fun x1517 () Bool)
(declare-fun x4292 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x3888 () Bool)
(declare-fun x3612 () Bool)
(declare-fun x4582 () Bool)
(declare-fun x4557 () Real)
(declare-fun x5139 () Bool)
(declare-fun x634 () Real)
(declare-fun x2162 () Bool)
(declare-fun x2635 () Real)
(declare-fun x714 () Real)
(declare-fun x2852 () Real)
(declare-fun x4052 () Real)
(declare-fun x5183 () Real)
(declare-fun x5937 () Real)
(declare-fun x4215 () Bool)
(declare-fun x994 () Real)
(declare-fun x5248 () Real)
(declare-fun x1797 () Bool)
(declare-fun x67 () Real)
(declare-fun x1173 () Bool)
(declare-fun x1713 () Real)
(declare-fun x597 (Real) Real)
(declare-fun x5553 () Bool)
(declare-fun x5588 () Bool)
(declare-fun x4123 () Real)
(declare-fun x4635 () Bool)
(declare-fun x4254 () Real)
(declare-fun x953 () Real)
(declare-fun x2971 () Bool)
(declare-fun x1083 (Real) Real)
(declare-fun x2725 () Real)
(declare-fun x1237 () Real)
(declare-fun x3841 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x4019 () Bool)
(declare-fun x3948 () Real)
(declare-fun x3005 () Real)
(declare-fun x6115 () Real)
(declare-fun x5257 () Bool)
(declare-fun x4814 () Bool)
(declare-fun x5662 () Bool)
(declare-fun x5717 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x1177 () Real)
(declare-fun x1243 () Bool)
(declare-fun x4367 () Bool)
(declare-fun x420 () Real)
(declare-fun x3393 () Real)
(declare-fun x4701 () Bool)
(declare-fun x5086 () Bool)
(declare-fun x3036 (Real) Real)
(declare-fun x3398 () Real)
(declare-fun x1003 () Real)
(declare-fun x3318 () Real)
(declare-fun x2266 () Real)
(declare-fun x4050 () Real)
(declare-fun x11 () Real)
(declare-fun x5558 () Real)
(declare-fun x3678 () Real)
(declare-fun x305 () Bool)
(declare-fun x6015 () Bool)
(declare-fun x249 () Real)
(declare-fun x4583 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x5551 () Bool)
(declare-fun x2781 () Bool)
(declare-fun x2236 (Real) Real)
(declare-fun x2008 () Bool)
(declare-fun x2209 () Real)
(declare-fun x4933 () Bool)
(declare-fun x5483 () Real)
(declare-fun x2749 () Real)
(declare-fun x4488 () Real)
(declare-fun x2874 () Real)
(declare-fun x541 () Real)
(declare-fun x2204 () Bool)
(declare-fun x5981 () Bool)
(declare-fun x2395 () Bool)
(declare-fun x3295 () Real)
(declare-fun x4531 () Real)
(declare-fun x5637 () Real)
(declare-fun x2792 () Bool)
(declare-fun x2412 () Bool)
(declare-fun x2713 () Real)
(declare-fun x546 () Real)
(declare-fun x284 () Real)
(declare-fun x2403 () Bool)
(declare-fun x1176 () Real)
(declare-fun x3651 (Real) Real)
(declare-fun x1130 () Bool)
(declare-fun x4496 () Real)
(declare-fun x6106 () Real)
(declare-fun x5094 () Real)
(declare-fun x1567 () Bool)
(declare-fun x1675 () Real)
(declare-fun x5427 () Real)
(declare-fun x4329 () Real)
(declare-fun x2197 () Real)
(declare-fun x5399 () Real)
(declare-fun x1637 () Bool)
(declare-fun x3089 () Real)
(declare-fun x668 () Real)
(declare-fun x2558 () Bool)
(declare-fun x3011 () Bool)
(declare-fun x3324 () Bool)
(declare-fun x414 () Bool)
(declare-fun x1594 () Real)
(declare-fun x3188 () Real)
(declare-fun x4633 () Bool)
(declare-fun x1890 () Bool)
(declare-fun x1693 () Real)
(declare-fun x1309 () Real)
(declare-fun x1655 () Real)
(declare-fun x909 () Bool)
(declare-fun x4607 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x2413 () Real)
(declare-fun x3654 () Real)
(declare-fun x3745 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x4601 () Bool)
(declare-fun x752 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x5092 () Bool)
(declare-fun x3205 () Real)
(declare-fun x4368 () Bool)
(declare-fun x133 () Bool)
(declare-fun x5563 () Real)
(declare-fun x635 () Real)
(declare-fun x5566 () Real)
(declare-fun x4902 () Real)
(declare-fun x1522 () Bool)
(declare-fun x4308 () Real)
(declare-fun x2437 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x1379 () Real)
(declare-fun x2537 () Real)
(declare-fun x5203 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x3401 () Real)
(declare-fun x3375 (Real) Real)
(declare-fun x2906 () Bool)
(declare-fun x523 () Real)
(declare-fun x138 () Bool)
(declare-fun x5452 () Bool)
(declare-fun x2949 () Real)
(declare-fun x1725 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x2915 () Bool)
(declare-fun x2207 (Real) Real)
(declare-fun x3313 (Real) Real)
(declare-fun x5274 () Real)
(declare-fun x4688 () Bool)
(declare-fun x3186 () Real)
(declare-fun x4407 () Real)
(declare-fun x1947 () Real)
(declare-fun x4826 () Bool)
(declare-fun x5378 () Real)
(declare-fun x5098 () Bool)
(declare-fun x4397 () Bool)
(declare-fun x3517 (Real) Real)
(declare-fun x3032 () Real)
(declare-fun x1065 () Bool)
(declare-fun x4443 () Real)
(declare-fun x4624 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x4288 () Bool)
(declare-fun x1909 () Real)
(declare-fun x3047 () Real)
(declare-fun x3743 () Real)
(declare-fun x1590 () Bool)
(declare-fun x4840 () Real)
(declare-fun x1775 () Real)
(declare-fun x3027 () Bool)
(declare-fun x2579 (Real) Real)
(declare-fun x1799 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x2542 () Real)
(declare-fun x1931 () Bool)
(declare-fun x2472 () Real)
(declare-fun x3703 () Real)
(declare-fun x4461 (Real) Real)
(declare-fun x1967 () Bool)
(declare-fun x4065 () Real)
(declare-fun x2263 () Real)
(declare-fun x5907 () Bool)
(declare-fun x741 () Real)
(declare-fun x2121 () Bool)
(declare-fun x2341 () Real)
(declare-fun x6057 () Bool)
(declare-fun x355 () Real)
(declare-fun x1851 () Bool)
(declare-fun x2768 () Real)
(declare-fun x749 () Bool)
(declare-fun x2864 () Real)
(declare-fun x5508 () Bool)
(declare-fun x3726 () Real)
(declare-fun x4732 (Real) Real)
(declare-fun x4990 () Real)
(declare-fun x4362 () Bool)
(declare-fun x465 () Bool)
(declare-fun x5940 () Bool)
(declare-fun x4586 () Bool)
(declare-fun x4558 () Real)
(declare-fun x1061 () Real)
(declare-fun x688 () Real)
(declare-fun x1891 () Bool)
(declare-fun x4165 () Real)
(declare-fun x5110 () Bool)
(declare-fun x301 () Real)
(declare-fun x484 () Real)
(declare-fun x170 () Bool)
(declare-fun x5485 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x4995 () Real)
(declare-fun x2591 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x2863 () Real)
(declare-fun x3074 () Real)
(declare-fun x5038 () Bool)
(declare-fun x717 () Real)
(declare-fun x1663 () Real)
(declare-fun x5051 () Real)
(declare-fun x811 () Real)
(declare-fun x1455 () Real)
(declare-fun x5310 () Bool)
(declare-fun x2581 (Real) Real)
(declare-fun x5951 () Real)
(declare-fun x1366 () Bool)
(declare-fun x127 () Bool)
(declare-fun x955 () Real)
(declare-fun x976 () Bool)
(declare-fun x4703 () Real)
(declare-fun x5484 () Bool)
(declare-fun x6067 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x148 () Real)
(declare-fun x242 () Bool)
(declare-fun x596 () Bool)
(declare-fun x4261 () Real)
(declare-fun x3770 () Bool)
(declare-fun x709 () Real)
(declare-fun x1387 () Bool)
(declare-fun x4951 () Bool)
(declare-fun x6127 () Bool)
(declare-fun x2600 () Real)
(declare-fun x4525 () Bool)
(declare-fun x1162 () Real)
(declare-fun x2428 () Bool)
(declare-fun x5695 () Real)
(declare-fun x5384 () Bool)
(declare-fun x2753 () Real)
(declare-fun x693 () Real)
(declare-fun x3963 () Bool)
(declare-fun x4389 () Bool)
(declare-fun x6178 () Bool)
(declare-fun x2897 () Real)
(declare-fun x90 () Bool)
(declare-fun x1744 () Real)
(declare-fun x2526 () Real)
(declare-fun x1586 () Real)
(declare-fun x3701 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x4370 () Real)
(declare-fun x5242 () Real)
(declare-fun x4327 () Bool)
(declare-fun x5569 () Real)
(declare-fun x2189 () Real)
(declare-fun x88 (Real) Real)
(declare-fun x3008 () Real)
(declare-fun x5329 () Bool)
(declare-fun x1562 () Real)
(declare-fun x6027 () Bool)
(declare-fun x4021 () Real)
(declare-fun x4240 () Bool)
(declare-fun x427 () Bool)
(declare-fun x3382 () Real)
(declare-fun x1633 () Real)
(declare-fun x1035 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x3697 () Bool)
(declare-fun x766 (Real) Real)
(declare-fun x80 () Real)
(declare-fun x5020 () Bool)
(declare-fun x1143 () Real)
(declare-fun x3494 () Real)
(declare-fun x2923 () Real)
(declare-fun x2109 () Bool)
(declare-fun x47 () Real)
(declare-fun x780 () Bool)
(declare-fun x3429 () Bool)
(declare-fun x494 () Bool)
(declare-fun x983 () Real)
(declare-fun x1091 () Real)
(declare-fun x2614 () Real)
(declare-fun x3826 () Real)
(declare-fun x1777 () Bool)
(declare-fun x3924 () Real)
(declare-fun x234 () Bool)
(declare-fun x1092 () Real)
(declare-fun x4458 () Bool)
(declare-fun x4029 () Bool)
(declare-fun x271 () Real)
(declare-fun x1516 () Bool)
(declare-fun x5999 (Real) Real)
(declare-fun x5285 () Real)
(declare-fun x5556 () Real)
(declare-fun x5968 () Bool)
(declare-fun x286 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1727 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x840 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x5686 () Real)
(declare-fun x5433 () Real)
(declare-fun x3109 () Bool)
(declare-fun x4181 () Bool)
(declare-fun x163 () Bool)
(declare-fun x396 () Real)
(declare-fun x4781 () Bool)
(declare-fun x3101 () Bool)
(declare-fun x2309 () Real)
(declare-fun x1971 () Real)
(declare-fun x1749 () Real)
(declare-fun x2252 () Bool)
(declare-fun x2371 () Real)
(declare-fun x5136 () Real)
(declare-fun x5777 () Real)
(declare-fun x5618 (Real) Real)
(declare-fun x5184 () Bool)
(declare-fun x2816 () Bool)
(declare-fun x5925 () Real)
(declare-fun x1469 () Bool)
(declare-fun x5066 () Real)
(declare-fun x1192 () Real)
(declare-fun x1822 () Real)
(declare-fun x4034 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x3193 () Real)
(declare-fun x2096 () Bool)
(declare-fun x4134 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x900 () Bool)
(declare-fun x5705 () Real)
(declare-fun x6045 () Bool)
(declare-fun x4124 () Bool)
(declare-fun x3363 () Bool)
(declare-fun x5144 () Bool)
(declare-fun x2441 () Real)
(declare-fun x5255 () Bool)
(declare-fun x2398 () Bool)
(declare-fun x3772 (Real) Real)
(declare-fun x3571 () Bool)
(declare-fun x788 () Bool)
(declare-fun x5712 () Real)
(declare-fun x5173 () Bool)
(declare-fun x5072 () Bool)
(declare-fun x922 () Bool)
(declare-fun x4575 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x2576 () Real)
(declare-fun x5033 () Real)
(declare-fun x4060 () Bool)
(declare-fun x4473 () Real)
(declare-fun x3882 () Bool)
(declare-fun x4807 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x4829 () Bool)
(declare-fun x4917 () Real)
(declare-fun x5309 () Bool)
(declare-fun x4705 () Bool)
(declare-fun x5731 () Bool)
(declare-fun x3673 () Bool)
(declare-fun x5658 () Real)
(declare-fun x3 () Real)
(declare-fun x5812 () Bool)
(declare-fun x1093 () Real)
(declare-fun x918 (Real) Real)
(declare-fun x1705 () Real)
(declare-fun x904 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x3777 () Bool)
(declare-fun x3682 () Real)
(declare-fun x1087 () Real)
(declare-fun x4291 () Bool)
(declare-fun x1432 () Real)
(declare-fun x1484 () Bool)
(declare-fun x2979 () Bool)
(declare-fun x2631 () Real)
(declare-fun x5233 () Real)
(declare-fun x4325 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x120 () Bool)
(declare-fun x2740 () Bool)
(declare-fun x4580 () Bool)
(declare-fun x4164 () Bool)
(declare-fun x3531 () Bool)
(declare-fun x6043 () Real)
(declare-fun x848 () Bool)
(declare-fun x1448 (Real) Real)
(declare-fun x5401 () Real)
(declare-fun x4800 () Real)
(declare-fun x43 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x15 () Real)
(declare-fun x3192 () Bool)
(declare-fun x5154 () Bool)
(declare-fun x287 () Bool)
(declare-fun x3696 () Bool)
(declare-fun x103 () Bool)
(declare-fun x5146 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x279 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x580 () Bool)
(declare-fun x5815 () Bool)
(declare-fun x787 () Real)
(declare-fun x690 () Real)
(declare-fun x2139 () Bool)
(declare-fun x296 () Bool)
(declare-fun x4393 () Bool)
(declare-fun x3152 () Bool)
(declare-fun x1831 () Real)
(declare-fun x3886 () Real)
(declare-fun x3547 () Bool)
(declare-fun x5668 () Real)
(declare-fun x4765 () Bool)
(declare-fun x5901 () Bool)
(declare-fun x4960 () Real)
(declare-fun x2251 () Real)
(declare-fun x2805 () Bool)
(declare-fun x5513 () Bool)
(declare-fun x4260 () Real)
(declare-fun x5206 () Real)
(declare-fun x3066 () Real)
(declare-fun x3409 () Real)
(declare-fun x4202 () Real)
(declare-fun x1829 () Bool)
(declare-fun x3930 () Bool)
(declare-fun x1201 () Real)
(declare-fun x340 () Bool)
(declare-fun x936 () Bool)
(declare-fun x4674 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x285 () Real)
(declare-fun x4737 () Real)
(declare-fun x5769 () Real)
(declare-fun x3453 () Real)
(declare-fun x1513 () Real)
(declare-fun x813 () Real)
(declare-fun x672 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x2630 () Real)
(declare-fun x1209 () Real)
(declare-fun x2012 () Real)
(declare-fun x159 () Bool)
(declare-fun x2342 () Real)
(declare-fun x1305 () Real)
(declare-fun x889 () Bool)
(declare-fun x3289 () Bool)
(declare-fun x3440 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x1606 () Real)
(declare-fun x510 () Real)
(declare-fun x2106 () Real)
(declare-fun x2101 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x1739 () Real)
(declare-fun x2000 () Bool)
(declare-fun x294 () Bool)
(declare-fun x952 () Real)
(declare-fun x5854 () Bool)
(declare-fun x2657 (Real) Real)
(declare-fun x4808 () Real)
(declare-fun x4296 () Real)
(declare-fun x1915 () Real)
(declare-fun x3480 () Bool)
(declare-fun x3391 (Real) Real)
(declare-fun x1058 () Real)
(declare-fun x3315 () Real)
(declare-fun x512 () Bool)
(declare-fun x5074 () Real)
(declare-fun x4736 () Real)
(declare-fun x4244 () Real)
(declare-fun x3352 () Real)
(declare-fun x606 () Real)
(declare-fun x5380 () Bool)
(declare-fun x1354 () Real)
(declare-fun x527 () Bool)
(declare-fun x3788 () Real)
(declare-fun x4421 () Bool)
(declare-fun x341 () Real)
(declare-fun x5888 (Real) Real)
(declare-fun x394 () Real)
(declare-fun x1322 () Real)
(declare-fun x2711 () Bool)
(declare-fun x4128 () Bool)
(declare-fun x2571 () Real)
(declare-fun x145 () Real)
(declare-fun x5149 () Bool)
(declare-fun x3067 () Real)
(declare-fun x4104 () Bool)
(declare-fun x969 () Real)
(declare-fun x2895 () Real)
(declare-fun x5319 () Bool)
(declare-fun x2418 () Real)
(declare-fun x3652 () Bool)
(declare-fun x5894 () Real)
(declare-fun x3676 () Real)
(declare-fun x2755 () Bool)
(declare-fun x2300 () Bool)
(declare-fun x2306 () Real)
(declare-fun x3004 () Real)
(declare-fun x2796 () Real)
(declare-fun x4207 () Real)
(declare-fun x2530 (Real) Real)
(declare-fun x4578 () Real)
(declare-fun x5246 () Real)
(declare-fun x5760 () Bool)
(declare-fun x5493 () Bool)
(declare-fun x4145 () Bool)
(declare-fun x3830 () Bool)
(declare-fun x5727 () Real)
(declare-fun x222 () Real)
(declare-fun x2184 () Bool)
(declare-fun x5905 () Bool)
(declare-fun x4459 () Real)
(declare-fun x4898 () Real)
(declare-fun x4118 () Real)
(declare-fun x1427 () Real)
(declare-fun x2200 () Real)
(declare-fun x4775 () Bool)
(declare-fun x5099 () Bool)
(declare-fun x5178 () Real)
(declare-fun x517 () Real)
(declare-fun x4334 () Bool)
(declare-fun x5838 () Bool)
(declare-fun x3892 (Real) Real)
(declare-fun x1864 () Bool)
(declare-fun x2478 () Real)
(declare-fun x1504 () Real)
(declare-fun x984 () Real)
(declare-fun x629 () Bool)
(declare-fun x4351 () Bool)
(declare-fun x4083 () Real)
(declare-fun x3505 () Real)
(declare-fun x4107 () Real)
(declare-fun x789 (Real) Real)
(declare-fun x2987 () Real)
(declare-fun x2609 () Bool)
(declare-fun x5533 () Bool)
(declare-fun x3428 () Real)
(declare-fun x1463 () Real)
(declare-fun x1862 () Real)
(declare-fun x2203 () Real)
(declare-fun x4072 () Real)
(declare-fun x4470 () Bool)
(declare-fun x5370 () Real)
(declare-fun x2885 () Bool)
(declare-fun x4025 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x4216 () Bool)
(declare-fun x1350 () Real)
(declare-fun x1652 () Bool)
(declare-fun x1987 () Bool)
(declare-fun x1912 () Real)
(declare-fun x2957 () Bool)
(declare-fun x5754 () Real)
(declare-fun x3307 () Bool)
(declare-fun x274 () Real)
(declare-fun x4626 () Real)
(declare-fun x4330 () Real)
(declare-fun x5333 () Bool)
(declare-fun x6174 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x3081 () Real)
(declare-fun x2898 () Real)
(declare-fun x1870 () Bool)
(declare-fun x4529 () Real)
(declare-fun x642 () Bool)
(declare-fun x2159 () Real)
(declare-fun x457 () Bool)
(declare-fun x3402 () Bool)
(declare-fun x4936 () Real)
(declare-fun x3662 () Real)
(declare-fun x2349 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x2382 () Real)
(declare-fun x3104 (Real) Real)
(declare-fun x572 () Bool)
(declare-fun x2736 () Real)
(declare-fun x3859 () Bool)
(declare-fun x1583 () Real)
(declare-fun x978 () Real)
(declare-fun x5286 () Bool)
(declare-fun x2268 () Real)
(declare-fun x2452 () Real)
(declare-fun x1638 () Bool)
(declare-fun x273 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1449 () Real)
(declare-fun x5463 () Bool)
(declare-fun x6139 () Bool)
(declare-fun x2917 () Bool)
(declare-fun x5253 () Real)
(declare-fun x911 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x233 () Real)
(declare-fun x4222 () Bool)
(declare-fun x4116 () Bool)
(declare-fun x2105 () Real)
(declare-fun x1490 () Bool)
(declare-fun x5585 () Bool)
(declare-fun x884 () Bool)
(declare-fun x4853 () Real)
(declare-fun x5052 () Real)
(declare-fun x2771 () Bool)
(declare-fun x6138 () Real)
(declare-fun x2809 () Real)
(declare-fun x4315 () Real)
(declare-fun x5026 () Real)
(declare-fun x2329 () Bool)
(declare-fun x542 () Real)
(declare-fun x719 () Real)
(declare-fun x212 () Real)
(declare-fun x3347 () Bool)
(declare-fun x4967 () Real)
(declare-fun x3262 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x2658 () Real)
(declare-fun x489 () Real)
(declare-fun x5977 () Real)
(declare-fun x298 () Real)
(declare-fun x639 () Real)
(declare-fun x962 () Real)
(declare-fun x2141 () Real)
(declare-fun x616 () Bool)
(declare-fun x1530 () Real)
(declare-fun x5923 () Bool)
(declare-fun x4277 () Bool)
(declare-fun x5742 () Real)
(declare-fun x3384 () Real)
(declare-fun x1168 () Bool)
(declare-fun x3638 () Real)
(declare-fun x2624 () Bool)
(declare-fun x2989 () Real)
(declare-fun x3896 () Bool)
(declare-fun x5764 () Real)
(declare-fun x4017 () Real)
(declare-fun x2552 () Real)
(declare-fun x3977 () Bool)
(declare-fun x5462 () Bool)
(declare-fun x2922 () Real)
(declare-fun x210 () Bool)
(declare-fun x792 () Real)
(declare-fun x1377 () Real)
(declare-fun x2648 () Bool)
(declare-fun x920 () Real)
(declare-fun x626 () Real)
(declare-fun x2956 () Bool)
(declare-fun x896 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x3374 () Real)
(declare-fun x3348 () Bool)
(declare-fun x1635 () Real)
(declare-fun x2120 () Bool)
(declare-fun x4857 () Bool)
(declare-fun x5989 () Real)
(declare-fun x5887 () Real)
(declare-fun x1438 () Real)
(declare-fun x2981 (Real) Real)
(declare-fun x1599 () Bool)
(declare-fun x2009 () Real)
(declare-fun x2613 () Bool)
(declare-fun x5681 () Real)
(declare-fun x5048 () Bool)
(declare-fun x2295 () Bool)
(declare-fun x2178 (Real) Real)
(declare-fun x3370 () Real)
(declare-fun x1968 (Real) Real)
(declare-fun x5832 () Bool)
(declare-fun x2784 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x4866 () Real)
(declare-fun x3234 () Real)
(declare-fun x5031 () Bool)
(declare-fun x1027 (Real) Real)
(declare-fun x26 () Real)
(declare-fun x2970 () Real)
(declare-fun x2543 () Real)
(declare-fun x380 () Real)
(declare-fun x254 () Bool)
(declare-fun x3540 (Real) Real)
(declare-fun x1151 () Real)
(declare-fun x3350 () Real)
(declare-fun x1492 () Bool)
(declare-fun x5734 () Real)
(declare-fun x4247 () Bool)
(declare-fun x2116 () Real)
(declare-fun x2845 () Real)
(declare-fun x2590 () Real)
(declare-fun x5771 () Real)
(declare-fun x2409 () Real)
(declare-fun x637 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x5213 () Real)
(declare-fun x3570 () Real)
(declare-fun x1450 () Bool)
(declare-fun x3730 () Real)
(declare-fun x4388 () Real)
(declare-fun x6071 () Bool)
(declare-fun x522 () Real)
(declare-fun x670 () Bool)
(declare-fun x3358 () Real)
(declare-fun x520 () Bool)
(declare-fun x1156 () Real)
(declare-fun x4612 () Bool)
(declare-fun x2838 () Bool)
(declare-fun x5143 () Real)
(declare-fun x1222 () Real)
(declare-fun x1401 () Real)
(declare-fun x2481 () Bool)
(declare-fun x784 () Bool)
(declare-fun x4293 () Real)
(declare-fun x1902 () Bool)
(declare-fun x4037 () Bool)
(declare-fun x2119 () Real)
(declare-fun x5218 () Real)
(declare-fun x5623 () Bool)
(declare-fun x4782 () Real)
(declare-fun x2369 () Bool)
(declare-fun x5130 () Real)
(declare-fun x4273 () Real)
(declare-fun x4149 () Bool)
(declare-fun x5982 () Real)
(declare-fun x5979 () Bool)
(declare-fun x3657 () Real)
(declare-fun x5174 () Real)
(declare-fun x2527 () Real)
(declare-fun x69 (Real) Real)
(declare-fun x6095 () Bool)
(declare-fun x5169 () Real)
(declare-fun x4001 () Real)
(declare-fun x2553 () Bool)
(declare-fun x2836 () Real)
(declare-fun x4550 () Bool)
(declare-fun x4166 () Real)
(declare-fun x3990 () Real)
(declare-fun x4639 () Real)
(declare-fun x5261 () Bool)
(declare-fun x2519 () Bool)
(declare-fun x2001 () Real)
(declare-fun x2396 () Real)
(declare-fun x5010 () Bool)
(declare-fun x3019 () Real)
(declare-fun x601 () Bool)
(declare-fun x5416 () Real)
(declare-fun x2085 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x4267 () Real)
(declare-fun x6155 () Real)
(declare-fun x1835 () Bool)
(declare-fun x4096 () Real)
(declare-fun x3658 () Real)
(declare-fun x1669 () Bool)
(declare-fun x3325 () Bool)
(declare-fun x4919 () Real)
(declare-fun x4490 () Bool)
(declare-fun x4530 () Bool)
(declare-fun x3864 () Real)
(declare-fun x2125 () Bool)
(declare-fun x5239 () Real)
(declare-fun x5070 () Bool)
(declare-fun x4172 () Bool)
(declare-fun x1972 () Real)
(declare-fun x40 () Bool)
(declare-fun x5389 () Real)
(declare-fun x604 () Real)
(declare-fun x5546 () Bool)
(declare-fun x1984 (Real) Real)
(declare-fun x3666 () Real)
(declare-fun x5886 () Real)
(declare-fun x1312 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x5191 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x3765 () Real)
(declare-fun x5363 () Bool)
(declare-fun x1311 () Real)
(declare-fun x5666 () Bool)
(declare-fun x1514 () Real)
(declare-fun x3486 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x1328 () Real)
(declare-fun x1706 () Bool)
(declare-fun x5850 () Real)
(declare-fun x1976 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x2361 () Bool)
(declare-fun x4735 () Real)
(declare-fun x4707 () Real)
(declare-fun x680 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x37 () Real)
(declare-fun x4873 () Real)
(declare-fun x1417 () Bool)
(declare-fun x954 (Real) Real)
(declare-fun x965 () Bool)
(declare-fun x3710 () Bool)
(declare-fun x2720 () Real)
(declare-fun x1556 () Real)
(declare-fun x3942 () Real)
(declare-fun x4372 () Bool)
(declare-fun x5288 () Bool)
(declare-fun x2235 () Real)
(declare-fun x1813 () Real)
(declare-fun x3246 () Real)
(declare-fun x3754 () Bool)
(declare-fun x5836 () Real)
(declare-fun x4211 () Real)
(declare-fun x1536 () Bool)
(declare-fun x1918 (Real) Real)
(declare-fun x5869 () Real)
(declare-fun x2670 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x544 () Bool)
(declare-fun x174 () Bool)
(declare-fun x1123 () Real)
(declare-fun x2742 () Real)
(declare-fun x3485 () Real)
(declare-fun x5785 () Real)
(declare-fun x187 () Bool)
(declare-fun x4400 () Real)
(declare-fun x2063 () Bool)
(declare-fun x488 () Bool)
(declare-fun x723 () Real)
(declare-fun x2188 () Real)
(declare-fun x3581 () Real)
(declare-fun x1223 () Real)
(declare-fun x5114 () Real)
(declare-fun x335 () Real)
(declare-fun x206 () Bool)
(declare-fun x4003 () Real)
(declare-fun x2191 () Real)
(declare-fun x5041 (Real Real) Real)
(declare-fun x1378 (Real) Real)
(declare-fun x4016 () Real)
(declare-fun x2348 () Bool)
(declare-fun x1431 () Real)
(declare-fun x3620 () Bool)
(declare-fun x2567 () Real)
(declare-fun x4579 () Bool)
(declare-fun x6167 () Real)
(declare-fun x2791 () Bool)
(declare-fun x2718 () Bool)
(declare-fun x4136 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x3815 () Real)
(declare-fun x818 () Bool)
(declare-fun x3202 () Bool)
(declare-fun x5024 () Bool)
(declare-fun x3421 (Real) Real)
(declare-fun x583 () Real)
(declare-fun x1462 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x4896 () Real)
(declare-fun x3227 () Real)
(declare-fun x2595 () Real)
(declare-fun x2536 () Real)
(declare-fun x430 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x3504 () Real)
(declare-fun x1260 () Real)
(declare-fun x4966 () Real)
(declare-fun x4972 () Real)
(declare-fun x102 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x454 () Real)
(declare-fun x3071 () Real)
(declare-fun x2703 () Bool)
(declare-fun x2899 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x1500 () Real)
(declare-fun x3170 () Bool)
(declare-fun x3938 () Bool)
(declare-fun x3580 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x5155 () Bool)
(declare-fun x437 () Real)
(declare-fun x1067 () Real)
(declare-fun x3195 () Bool)
(declare-fun x663 () Bool)
(declare-fun x384 () Real)
(declare-fun x5711 (Real) Real)
(declare-fun x5626 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x4619 () Real)
(declare-fun x1686 () Bool)
(declare-fun x3790 () Real)
(declare-fun x2110 (Real) Real)
(declare-fun x4117 () Bool)
(declare-fun x1699 () Real)
(declare-fun x2769 () Real)
(declare-fun x237 () Bool)
(declare-fun x1690 () Real)
(declare-fun x3338 () Bool)
(declare-fun x1014 () Real)
(declare-fun x4312 (Real) Real)
(declare-fun x3001 () Bool)
(declare-fun x986 () Real)
(declare-fun x2678 () Bool)
(declare-fun x5899 () Real)
(declare-fun x4503 () Real)
(declare-fun x2435 () Real)
(declare-fun x5128 () Real)
(declare-fun x5860 (Real) Real)
(declare-fun x2985 () Bool)
(declare-fun x3267 () Bool)
(declare-fun x4700 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x5107 () Bool)
(declare-fun x5189 () Real)
(declare-fun x946 () Real)
(declare-fun x3018 () Real)
(declare-fun x5077 () Bool)
(declare-fun x3934 () Real)
(declare-fun x1037 () Real)
(declare-fun x4761 () Real)
(declare-fun x711 () Real)
(declare-fun x5816 () Real)
(declare-fun x3133 () Bool)
(declare-fun x664 () Bool)
(declare-fun x303 () Real)
(declare-fun x2137 () Bool)
(declare-fun x5996 () Bool)
(declare-fun x3344 () Bool)
(declare-fun x563 () Real)
(declare-fun x4148 () Real)
(declare-fun x4909 () Real)
(declare-fun x942 (Real) Real)
(declare-fun x4450 () Bool)
(declare-fun x3090 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x773 (Real) Real)
(declare-fun x5362 () Bool)
(declare-fun x3256 () Bool)
(declare-fun x3779 () Bool)
(declare-fun x3670 () Bool)
(declare-fun x5538 () Real)
(declare-fun x1252 () Real)
(declare-fun x5430 () Bool)
(declare-fun x1307 () Real)
(declare-fun x725 () Bool)
(declare-fun x1131 () Real)
(declare-fun x1436 (Real) Real)
(declare-fun x4263 () Real)
(declare-fun x2561 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x4416 () Bool)
(declare-fun x5292 () Real)
(declare-fun x1896 () Real)
(declare-fun x2690 (Real) Real)
(declare-fun x288 () Bool)
(declare-fun x5755 () Bool)
(declare-fun x218 () Real)
(declare-fun x6002 () Real)
(declare-fun x5948 () Bool)
(declare-fun x4876 () Real)
(declare-fun x1707 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x5985 () Real)
(declare-fun x1824 () Bool)
(declare-fun x2493 () Bool)
(declare-fun x52 () Real)
(declare-fun x1140 () Real)
(declare-fun x252 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x317 () Real)
(declare-fun x2076 () Real)
(declare-fun x844 () Real)
(declare-fun x1404 () Real)
(declare-fun x5787 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x5226 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x85 () Real)
(declare-fun x207 () Real)
(declare-fun x3430 () Bool)
(declare-fun x2160 () Real)
(declare-fun x2867 () Real)
(declare-fun x3499 () Real)
(declare-fun x1753 () Bool)
(declare-fun x3097 () Real)
(declare-fun x2615 () Real)
(declare-fun x4650 () Real)
(declare-fun x2491 () Bool)
(declare-fun x6132 () Real)
(declare-fun x5400 () Bool)
(declare-fun x5598 () Real)
(declare-fun x2717 () Real)
(declare-fun x3954 () Real)
(declare-fun x3495 () Bool)
(declare-fun x27 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x6102 () Bool)
(declare-fun x4399 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x5523 () Real)
(declare-fun x4850 () Bool)
(declare-fun x71 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x3723 () Bool)
(declare-fun x5425 () Bool)
(declare-fun x2049 (Real) Real)
(declare-fun x2148 () Real)
(declare-fun x759 (Real) Real)
(declare-fun x675 () Real)
(declare-fun x6097 () Real)
(declare-fun x5272 () Real)
(declare-fun x874 () Bool)
(declare-fun x515 () Bool)
(declare-fun x3738 () Real)
(declare-fun x4366 () Bool)
(declare-fun x4699 () Bool)
(declare-fun x1718 () Real)
(declare-fun x4747 () Bool)
(declare-fun x997 () Bool)
(declare-fun x2646 () Bool)
(declare-fun x1044 (Real Real) Real)
(declare-fun x2925 () Bool)
(declare-fun x2639 () Bool)
(declare-fun x2789 () Real)
(declare-fun x1957 () Bool)
(declare-fun x567 () Bool)
(declare-fun x4448 () Real)
(declare-fun x702 (Real) Real)
(declare-fun x5449 () Bool)
(declare-fun x771 () Real)
(declare-fun x3175 () Real)
(declare-fun x6035 () Bool)
(declare-fun x1656 () Real)
(declare-fun x3059 () Bool)
(declare-fun x4849 () Real)
(declare-fun x2692 () Bool)
(declare-fun x2399 () Real)
(declare-fun x6163 () Real)
(declare-fun x3046 () Bool)
(declare-fun x6006 (Real) Real)
(declare-fun x3621 () Real)
(declare-fun x5069 () Bool)
(declare-fun x4682 () Real)
(declare-fun x3257 () Bool)
(declare-fun x5365 () Bool)
(declare-fun x1411 () Real)
(declare-fun x2289 () Bool)
(declare-fun x5689 () Bool)
(declare-fun x2991 () Bool)
(declare-fun x6134 () Bool)
(declare-fun x3388 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x5520 (Real) Real)
(declare-fun x3112 () Real)
(declare-fun x3479 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x5489 () Real)
(declare-fun x5280 () Real)
(declare-fun x4232 () Real)
(declare-fun x2241 (Real) Real)
(declare-fun x2154 () Real)
(declare-fun x5494 () Real)
(declare-fun x2806 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x1006 () Real)
(declare-fun x1787 () Bool)
(declare-fun x4646 () Bool)
(declare-fun x5932 () Real)
(declare-fun x3848 () Bool)
(declare-fun x5738 () Real)
(declare-fun x6159 () Real)
(declare-fun x5133 () Real)
(declare-fun x423 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x2338 () Real)
(declare-fun x2992 () Real)
(declare-fun x4264 () Bool)
(declare-fun x464 () Real)
(declare-fun x5372 () Bool)
(declare-fun x701 () Bool)
(declare-fun x4363 () Real)
(declare-fun x5492 () Real)
(declare-fun x861 (Real) Real)
(declare-fun x5355 () Real)
(declare-fun x3782 () Bool)
(declare-fun x4926 (Real) Real)
(declare-fun x4510 () Real)
(declare-fun x644 () Bool)
(declare-fun x4365 () Real)
(declare-fun x3918 () Bool)
(declare-fun x2960 () Bool)
(declare-fun x3035 () Real)
(declare-fun x5853 () Real)
(declare-fun x3431 () Real)
(declare-fun x1109 () Bool)
(declare-fun x6039 () Real)
(declare-fun x364 () Real)
(declare-fun x3119 () Bool)
(declare-fun x806 () Real)
(declare-fun x5345 () Bool)
(declare-fun x751 () Real)
(declare-fun x4214 () Real)
(declare-fun x729 () Real)
(declare-fun x1703 () Bool)
(declare-fun x5120 () Bool)
(declare-fun x4727 () Real)
(declare-fun x3184 () Bool)
(declare-fun x3663 () Bool)
(declare-fun x2327 () Bool)
(declare-fun x379 () Real)
(declare-fun x4433 () Real)
(declare-fun x5065 () Real)
(declare-fun x4357 () Bool)
(declare-fun x4199 () Real)
(declare-fun x761 () Real)
(declare-fun x4056 () Real)
(declare-fun x4093 () Bool)
(declare-fun x480 () Real)
(declare-fun x2450 () Real)
(declare-fun x989 () Bool)
(declare-fun x4015 () Real)
(declare-fun x571 () Real)
(declare-fun x3249 () Bool)
(declare-fun x1858 () Real)
(declare-fun x928 () Real)
(declare-fun x5419 () Bool)
(declare-fun x2719 () Real)
(declare-fun x5371 () Real)
(declare-fun x5368 () Real)
(declare-fun x2392 () Real)
(declare-fun x3330 () Bool)
(declare-fun x154 () Real)
(declare-fun x1746 () Bool)
(declare-fun x3240 () Real)
(declare-fun x3566 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x3805 () Bool)
(declare-fun x4916 () Real)
(declare-fun x1770 () Bool)
(declare-fun x10 () Bool)
(declare-fun x763 (Real) Real)
(declare-fun x2572 () Real)
(declare-fun x99 () Real)
(declare-fun x691 () Real)
(declare-fun x1595 () Real)
(declare-fun x3045 () Bool)
(declare-fun x742 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x932 () Real)
(declare-fun x3038 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x5199 () Real)
(declare-fun x1306 () Bool)
(declare-fun x1121 () Real)
(declare-fun x5300 () Real)
(declare-fun x2800 () Real)
(declare-fun x2947 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x4566 () Real)
(declare-fun x2312 () Real)
(declare-fun x2723 () Real)
(declare-fun x5383 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x4677 () Real)
(declare-fun x2522 () Real)
(declare-fun x5315 () Bool)
(declare-fun x1147 () Real)
(declare-fun x4544 () Bool)
(declare-fun x1751 () Real)
(declare-fun x5349 () Real)
(declare-fun x4604 () Real)
(declare-fun x2471 () Real)
(declare-fun x5606 () Real)
(declare-fun x5865 () Bool)
(declare-fun x4023 () Real)
(declare-fun x1934 () Bool)
(declare-fun x4185 () Bool)
(declare-fun x2221 () Real)
(declare-fun x3810 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x3753 () Real)
(declare-fun x631 () Bool)
(declare-fun x3320 () Bool)
(declare-fun x3303 () Bool)
(declare-fun x421 () Bool)
(declare-fun x3943 () Bool)
(declare-fun x4358 () Bool)
(declare-fun x3626 () Bool)
(declare-fun x1296 () Real)
(declare-fun x4047 () Bool)
(declare-fun x2084 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x5439 () Bool)
(declare-fun x319 () Real)
(declare-fun x1955 () Bool)
(declare-fun x4526 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x2102 (Real) Real)
(declare-fun x3553 () Real)
(declare-fun x3945 () Bool)
(declare-fun x2754 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x2862 () Real)
(declare-fun x3164 () Real)
(declare-fun x957 () Bool)
(declare-fun x4797 () Bool)
(declare-fun x5479 () Bool)
(declare-fun x3498 () Real)
(declare-fun x1695 () Bool)
(declare-fun x5063 () Real)
(declare-fun x3406 () Bool)
(declare-fun x100 () Real)
(declare-fun x5726 () Real)
(declare-fun x107 () Bool)
(declare-fun x593 () Bool)
(declare-fun x2025 () Real)
(declare-fun x2027 () Real)
(declare-fun x1412 () Real)
(declare-fun x6016 () Bool)
(declare-fun x2746 () Real)
(declare-fun x625 () Bool)
(declare-fun x5910 () Bool)
(declare-fun x2943 () Real)
(declare-fun x4768 () Real)
(declare-fun x5897 () Real)
(declare-fun x2029 () Real)
(declare-fun x4412 () Real)
(declare-fun x940 () Bool)
(declare-fun x1293 () Real)
(declare-fun x3433 () Real)
(declare-fun x4750 () Bool)
(declare-fun x2765 () Real)
(declare-fun x1313 () Bool)
(declare-fun x943 () Real)
(declare-fun x560 () Bool)
(declare-fun x2444 () Bool)
(declare-fun x4883 () Bool)
(declare-fun x5845 () Bool)
(declare-fun x137 () Bool)
(declare-fun x3548 () Real)
(declare-fun x3159 () Real)
(declare-fun x5025 () Bool)
(declare-fun x5374 () Bool)
(declare-fun x2423 () Real)
(declare-fun x1122 () Bool)
(declare-fun x4574 () Bool)
(declare-fun x4569 () Bool)
(declare-fun x2629 () Real)
(declare-fun x5037 () Real)
(declare-fun x2937 () Real)
(declare-fun x3568 () Real)
(declare-fun x5577 () Real)
(declare-fun x5460 () Bool)
(declare-fun x5358 () Real)
(declare-fun x226 () Bool)
(declare-fun x4495 () Real)
(declare-fun x2676 () Bool)
(declare-fun x3506 () Real)
(declare-fun x4644 () Real)
(declare-fun x1563 () Real)
(declare-fun x868 () Real)
(declare-fun x3044 () Real)
(declare-fun x3630 () Real)
(declare-fun x730 () Bool)
(declare-fun x830 () Bool)
(declare-fun x3390 () Bool)
(declare-fun x2132 () Real)
(declare-fun x5058 () Bool)
(declare-fun x5632 () Bool)
(declare-fun x3233 () Real)
(declare-fun x6137 () Bool)
(declare-fun x3500 () Bool)
(declare-fun x5007 () Real)
(declare-fun x987 () Bool)
(declare-fun x5421 () Real)
(declare-fun x3386 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x3889 () Bool)
(declare-fun x4336 () Bool)
(declare-fun x3228 () Real)
(declare-fun x4511 () Real)
(declare-fun x2880 () Bool)
(declare-fun x5702 () Bool)
(declare-fun x753 () Bool)
(declare-fun x669 () Real)
(declare-fun x3275 () Real)
(declare-fun x5351 () Bool)
(declare-fun x6118 () Real)
(declare-fun x2859 () Real)
(declare-fun x648 () Real)
(declare-fun x3252 () Bool)
(declare-fun x1295 () Real)
(declare-fun x3224 () Real)
(declare-fun x2298 () Bool)
(declare-fun x2273 () Bool)
(declare-fun x6033 () Real)
(declare-fun x2539 (Real) Real)
(declare-fun x6089 () Bool)
(declare-fun x5279 () Bool)
(declare-fun x34 () Bool)
(declare-fun x972 () Bool)
(declare-fun x129 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x1351 () Real)
(declare-fun x4788 () Bool)
(declare-fun x1740 (Real) Real)
(declare-fun x692 () Real)
(declare-fun x5584 (Real) Real)
(declare-fun x5890 () Real)
(declare-fun x4322 () Bool)
(declare-fun x4487 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x1276 () Real)
(declare-fun x2270 () Real)
(declare-fun x6150 () Bool)
(declare-fun x799 () Bool)
(declare-fun x4860 () Real)
(declare-fun x4984 () Bool)
(declare-fun x731 (Real) Real)
(declare-fun x4174 () Bool)
(declare-fun x5857 (Real) Real)
(declare-fun x4478 () Bool)
(declare-fun x198 () Bool)
(declare-fun x659 () Real)
(declare-fun x1859 () Bool)
(declare-fun x4139 () Real)
(declare-fun x3183 () Real)
(declare-fun x2048 () Bool)
(declare-fun x5488 () Bool)
(declare-fun x2967 () Real)
(declare-fun x4766 () Real)
(declare-fun x2350 () Real)
(declare-fun x6166 () Real)
(declare-fun x2544 () Real)
(declare-fun x888 () Bool)
(declare-fun x6008 () Real)
(declare-fun x6142 () Bool)
(declare-fun x2975 () Real)
(declare-fun x587 () Real)
(declare-fun x2594 () Bool)
(declare-fun x3392 (Real) Real)
(declare-fun x5224 () Real)
(declare-fun x524 () Real)
(declare-fun x996 () Bool)
(declare-fun x5871 () Real)
(declare-fun x945 () Real)
(declare-fun x1423 () Bool)
(declare-fun x2687 () Bool)
(declare-fun x2265 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x3552 () Real)
(declare-fun x4402 () Bool)
(declare-fun x3802 () Real)
(declare-fun x5269 () Bool)
(declare-fun x4163 () Real)
(declare-fun x1545 () Real)
(declare-fun x5872 () Real)
(declare-fun x2485 () Real)
(declare-fun x3883 () Bool)
(declare-fun x1292 () Real)
(declare-fun x2247 () Bool)
(declare-fun x258 () Bool)
(declare-fun x2930 () Real)
(declare-fun x871 () Real)
(declare-fun x1050 () Real)
(declare-fun x2358 () Bool)
(declare-fun x3155 () Real)
(declare-fun x5123 () Real)
(declare-fun x805 () Real)
(declare-fun x366 () Real)
(declare-fun x3759 () Bool)
(declare-fun x4323 () Bool)
(declare-fun x3185 (Real) Real)
(declare-fun x4886 () Bool)
(declare-fun x3341 () Real)
(declare-fun x5044 () Real)
(declare-fun x2604 () Real)
(declare-fun x328 () Real)
(declare-fun x1577 () Real)
(declare-fun x1128 () Real)
(declare-fun x1540 () Real)
(declare-fun x4255 () Bool)
(declare-fun x4335 () Bool)
(declare-fun x2664 () Real)
(declare-fun x4067 () Bool)
(declare-fun x2431 () Bool)
(declare-fun x1430 () Real)
(declare-fun x450 () Bool)
(declare-fun x122 () Real)
(declare-fun x4692 () Bool)
(declare-fun x1872 () Real)
(declare-fun x4979 () Bool)
(declare-fun x566 () Bool)
(declare-fun x4947 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x5387 () Bool)
(declare-fun x5531 () Real)
(declare-fun x829 () Real)
(declare-fun x2118 () Bool)
(declare-fun x3819 () Bool)
(declare-fun x3812 () Real)
(declare-fun x3734 () Bool)
(declare-fun x4948 () Bool)
(declare-fun x4092 () Bool)
(declare-fun x5009 () Bool)
(declare-fun x1819 () Real)
(declare-fun x4999 (Real) Real)
(declare-fun x5594 () Bool)
(declare-fun x5813 () Bool)
(declare-fun x2004 () Real)
(declare-fun x2363 (Real) Real)
(declare-fun x769 () Bool)
(declare-fun x4929 () Real)
(declare-fun x2098 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x5675 () Bool)
(declare-fun x2458 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x5436 () Bool)
(declare-fun x886 () Real)
(declare-fun x5244 () Real)
(declare-fun x3116 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x1369 () Real)
(declare-fun x1801 () Real)
(declare-fun x4463 () Real)
(declare-fun x3572 () Bool)
(declare-fun x5071 () Bool)
(declare-fun x4667 () Real)
(declare-fun x2296 () Real)
(declare-fun x4225 (Real) Real)
(declare-fun x5441 () Bool)
(declare-fun x4311 () Real)
(declare-fun x261 () Bool)
(declare-fun x60 () Bool)
(declare-fun x5707 () Real)
(declare-fun x4028 () Real)
(declare-fun x5537 () Real)
(declare-fun x4944 () Bool)
(declare-fun x867 () Bool)
(declare-fun x439 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x346 () Real)
(declare-fun x3857 () Real)
(declare-fun x164 () Bool)
(declare-fun x5256 () Real)
(declare-fun x2276 () Real)
(declare-fun x841 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x202 () Bool)
(declare-fun x673 () Bool)
(declare-fun x1075 () Real)
(declare-fun x3862 () Real)
(declare-fun x2786 () Real)
(declare-fun x1857 () Bool)
(declare-fun x5505 () Bool)
(declare-fun x3598 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x3606 () Bool)
(declare-fun x2385 () Real)
(declare-fun x3014 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x1523 () Real)
(declare-fun x3961 () Real)
(declare-fun x4605 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x4270 () Bool)
(declare-fun x4746 () Bool)
(declare-fun x2801 () Real)
(declare-fun x179 () Bool)
(declare-fun x438 () Bool)
(declare-fun x5565 () Real)
(declare-fun x657 () Real)
(declare-fun x834 () Bool)
(declare-fun x1382 () Real)
(declare-fun x2026 () Real)
(declare-fun x2560 () Bool)
(declare-fun x3684 () Bool)
(declare-fun x1364 (Real) Real)
(declare-fun x4992 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x2151 () Real)
(declare-fun x5347 (Real Real) Real)
(declare-fun x2757 () Bool)
(declare-fun x579 () Real)
(declare-fun x3928 () Real)
(declare-fun x4969 () Bool)
(declare-fun x4266 () Real)
(declare-fun x3771 () Real)
(declare-fun x5670 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x1604 () Real)
(declare-fun x5776 () Real)
(declare-fun x598 () Real)
(declare-fun x309 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x1657 () Real)
(declare-fun x4897 () Real)
(declare-fun x2222 () Real)
(declare-fun x1089 () Real)
(declare-fun x5500 () Real)
(declare-fun x4339 () Real)
(declare-fun x4058 () Bool)
(declare-fun x4157 () Bool)
(declare-fun x3362 () Bool)
(declare-fun x173 () Real)
(declare-fun x3263 () Bool)
(declare-fun x3927 () Real)
(declare-fun x716 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1227 (Real) Real)
(declare-fun x6012 (Real) Real)
(declare-fun x5219 () Real)
(declare-fun x1211 (Real Real) Real)
(declare-fun x4194 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x3895 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x5576 () Bool)
(declare-fun x1847 () Real)
(declare-fun x5444 () Real)
(declare-fun x4519 () Real)
(declare-fun x5782 () Real)
(declare-fun x1181 () Bool)
(declare-fun x1855 () Real)
(declare-fun x3221 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x2868 () Real)
(declare-fun x4256 () Real)
(declare-fun x415 () Bool)
(declare-fun x2017 () Real)
(declare-fun x3871 () Real)
(declare-fun x1358 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x586 () Bool)
(declare-fun x4591 () Bool)
(declare-fun x2169 () Real)
(declare-fun x3493 () Real)
(declare-fun x1601 () Bool)
(declare-fun x3432 () Real)
(declare-fun x5786 () Real)
(declare-fun x4091 () Real)
(declare-fun x5842 () Bool)
(declare-fun x894 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x5249 () Bool)
(declare-fun x4392 () Real)
(declare-fun x2325 () Real)
(declare-fun x6026 () Real)
(declare-fun x5713 () Bool)
(declare-fun x2157 () Bool)
(declare-fun x4884 () Bool)
(declare-fun x4581 () Bool)
(declare-fun x3161 () Real)
(declare-fun x5544 () Real)
(declare-fun x3575 () Real)
(declare-fun x2847 () Bool)
(declare-fun x3425 () Bool)
(declare-fun x5831 () Real)
(declare-fun x641 () Bool)
(declare-fun x4641 () Real)
(declare-fun x2517 () Real)
(declare-fun x2865 () Bool)
(declare-fun x3752 () Real)
(declare-fun x2037 (Real) Real)
(declare-fun x1258 () Real)
(declare-fun x5519 () Real)
(declare-fun x4159 () Bool)
(declare-fun x4970 () Real)
(declare-fun x3519 () Bool)
(declare-fun x857 () Bool)
(declare-fun x162 () Real)
(declare-fun x3995 () Real)
(declare-fun x1956 () Real)
(declare-fun x3588 () Bool)
(declare-fun x476 () Bool)
(declare-fun x386 () Real)
(declare-fun x1555 () Bool)
(declare-fun x5648 () Real)
(declare-fun x2833 () Bool)
(declare-fun x803 () Bool)
(declare-fun x3785 () Real)
(declare-fun x4885 () Real)
(declare-fun x1973 () Real)
(declare-fun x1381 () Real)
(declare-fun x2477 () Real)
(declare-fun x3328 () Real)
(declare-fun x1016 () Bool)
(declare-fun x602 () Bool)
(declare-fun x5095 () Bool)
(declare-fun x2685 () Bool)
(declare-fun x369 () Bool)
(declare-fun x3768 () Real)
(declare-fun x2438 () Bool)
(declare-fun x5903 () Bool)
(declare-fun x4787 () Bool)
(declare-fun x1550 () Real)
(declare-fun x3241 () Bool)
(declare-fun x5311 () Bool)
(declare-fun x1598 () Real)
(declare-fun x4796 () Real)
(declare-fun x907 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x1081 () Real)
(declare-fun x4484 () Real)
(declare-fun x4706 () Bool)
(declare-fun x1013 () Real)
(declare-fun x1805 () Bool)
(declare-fun x4971 () Real)
(declare-fun x547 () Bool)
(declare-fun x128 (Real) Real)
(declare-fun x5237 () Bool)
(declare-fun x5561 () Real)
(declare-fun x1557 () Bool)
(declare-fun x442 () Bool)
(declare-fun x941 () Bool)
(declare-fun x3744 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x3466 () Bool)
(declare-fun x5595 () Real)
(declare-fun x5656 () Real)
(declare-fun x5487 () Bool)
(declare-fun x5316 () Real)
(declare-fun x5809 () Real)
(declare-fun x5332 () Real)
(declare-fun x2850 () Bool)
(declare-fun x3655 () Real)
(declare-fun x5817 () Real)
(declare-fun x2201 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x902 () Real)
(declare-fun x1960 () Bool)
(declare-fun x4102 () Real)
(declare-fun x1768 () Bool)
(declare-fun x3833 () Real)
(declare-fun x3543 () Real)
(declare-fun x1654 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x381 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x139 () Bool)
(declare-fun x6145 () Real)
(declare-fun x1471 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x3187 () Bool)
(declare-fun x3599 () Bool)
(declare-fun x500 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x5005 () Bool)
(declare-fun x4515 () Real)
(declare-fun x4492 () Bool)
(declare-fun x3334 () Real)
(declare-fun x5446 () Bool)
(declare-fun x4445 () Real)
(declare-fun x3042 () Real)
(declare-fun x2347 () Bool)
(declare-fun x333 () Real)
(declare-fun x5320 () Real)
(declare-fun x4342 () Bool)
(declare-fun x3281 (Real) Real)
(declare-fun x46 () Real)
(declare-fun x4669 () Real)
(declare-fun x372 () Real)
(declare-fun x1425 () Bool)
(declare-fun x1051 (Real) Real)
(declare-fun x4259 () Real)
(declare-fun x3264 (Real) Real)
(declare-fun x5330 () Real)
(declare-fun x2671 () Real)
(declare-fun x165 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x5847 () Real)
(declare-fun x5228 () Bool)
(declare-fun x5088 () Real)
(declare-fun x1535 () Real)
(declare-fun x3360 () Bool)
(declare-fun x3868 () Bool)
(declare-fun x4272 () Real)
(declare-fun x3180 () Real)
(declare-fun x5750 () Bool)
(declare-fun x3524 () Real)
(declare-fun x95 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x3306 () Real)
(declare-fun x3535 () Real)
(declare-fun x3280 () Bool)
(declare-fun x1830 () Real)
(declare-fun x1664 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x3587 () Bool)
(declare-fun x1921 () Real)
(declare-fun x5549 () Real)
(declare-fun x1989 () Real)
(declare-fun x4693 (Real) Real)
(declare-fun x3449 () Real)
(declare-fun x4070 () Real)
(declare-fun x1389 () Bool)
(declare-fun x169 () Bool)
(declare-fun x967 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x4109 () Real)
(declare-fun x5132 () Bool)
(declare-fun x689 () Real)
(declare-fun x5328 () Real)
(declare-fun x1444 (Real) Real)
(declare-fun x4835 () Real)
(declare-fun x3885 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x2366 () Real)
(declare-fun x715 () Real)
(declare-fun x4792 () Real)
(declare-fun x2122 () Real)
(declare-fun x5013 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x4600 () Bool)
(declare-fun x5201 () Real)
(declare-fun x1776 () Bool)
(declare-fun x5858 () Bool)
(declare-fun x5135 () Bool)
(declare-fun x4617 () Real)
(declare-fun x2815 () Bool)
(declare-fun x4757 () Real)
(declare-fun x4234 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x713 () Real)
(declare-fun x5179 () Bool)
(declare-fun x2952 () Real)
(declare-fun x4196 () Real)
(declare-fun x376 () Bool)
(declare-fun x51 (Real) Real)
(declare-fun x307 () Bool)
(declare-fun x3923 () Bool)
(declare-fun x5607 () Real)
(declare-fun x5390 () Bool)
(declare-fun x2357 () Bool)
(declare-fun x1920 () Real)
(declare-fun x5307 () Bool)
(declare-fun x3976 () Real)
(declare-fun x6070 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x492 () Real)
(declare-fun x2810 () Real)
(declare-fun x1482 () Bool)
(declare-fun x4561 () Bool)
(declare-fun x2735 () Bool)
(declare-fun x1402 () Real)
(declare-fun x265 () Real)
(declare-fun x1771 () Bool)
(declare-fun x1479 () Real)
(declare-fun x5254 () Real)
(declare-fun x4769 () Real)
(declare-fun x5625 () Bool)
(declare-fun x4934 () Bool)
(declare-fun x1126 () Real)
(declare-fun x5147 () Real)
(declare-fun x1796 () Bool)
(declare-fun x506 () Bool)
(declare-fun x4076 () Real)
(declare-fun x5208 () Bool)
(declare-fun x188 () Bool)
(declare-fun x5586 () Real)
(declare-fun x3690 () Bool)
(declare-fun x5616 () Bool)
(declare-fun x2643 (Real) Real)
(declare-fun x4903 () Bool)
(declare-fun x3327 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x1073 () Real)
(declare-fun x1346 () Bool)
(declare-fun x627 () Real)
(declare-fun x4390 () Real)
(declare-fun x3355 () Bool)
(declare-fun x5299 () Bool)
(declare-fun x4417 () Bool)
(declare-fun x314 () Real)
(declare-fun x4105 () Bool)
(declare-fun x4957 () Bool)
(declare-fun x995 () Real)
(declare-fun x3850 () Real)
(declare-fun x3130 (Real Real) Real)
(declare-fun x3040 (Real) Real)
(declare-fun x819 (Real) Real)
(declare-fun x4013 () Real)
(declare-fun x908 () Bool)
(declare-fun x1142 () Real)
(declare-fun x1298 () Bool)
(declare-fun x2502 () Real)
(declare-fun x3722 () Bool)
(declare-fun x4879 () Real)
(declare-fun x1815 () Real)
(declare-fun x6128 () Bool)
(declare-fun x735 () Real)
(declare-fun x5461 () Real)
(declare-fun x5022 () Real)
(declare-fun x779 () Real)
(declare-fun x1234 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x1367 () Real)
(declare-fun x5267 () Real)
(declare-fun x4978 () Real)
(declare-fun x590 () Bool)
(declare-fun x3910 (Real) Real)
(declare-fun x2111 () Real)
(declare-fun x2011 () Bool)
(declare-fun x4179 () Real)
(declare-fun x4009 () Real)
(declare-fun x1445 (Real) Real)
(declare-fun x44 () Real)
(declare-fun x2061 () Real)
(declare-fun x4935 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x4337 () Real)
(declare-fun x3102 () Real)
(declare-fun x1812 () Real)
(declare-fun x2378 () Real)
(declare-fun x5217 () Real)
(declare-fun x3146 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x1368 () Real)
(declare-fun x5018 () Real)
(declare-fun x2115 () Bool)
(declare-fun x5984 () Real)
(declare-fun x1046 () Bool)
(declare-fun x3545 () Bool)
(declare-fun x4861 () Real)
(declare-fun x28 () Real)
(declare-fun x2999 () Bool)
(declare-fun x3050 () Bool)
(declare-fun x3836 () Real)
(declare-fun x410 () Bool)
(declare-fun x4011 (Real) Real)
(declare-fun x5672 (Real) Real)
(declare-fun x4146 () Bool)
(declare-fun x4760 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x4182 (Real) Real)
(declare-fun x3157 () Bool)
(declare-fun x5795 () Real)
(define-fun x6031 ((x1844 Real)) Real (ite (and (< x1844 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1844)) x1844 (- x1844 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3337 ((x1844 Real)) Real (ite (and (< x1844 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1844)) (+ x1844 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1844))
(define-fun x399 ((x2968 Real)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2968) (<= 0 x2968)))
(define-fun x4630 ((x2968 Real)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2968) (<= 0 x2968)))
(define-fun x4446 ((x2968 Real)) Bool (and (= (x5347 x2968 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2968) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2968) x2968)))
(define-fun x2904 ((x2968 Real)) Bool (and (= (x5347 x2968 0) 0) (= 0 (x5347 0 x2968))))
(define-fun x1901 ((x2968 Real)) Bool (= (x5347 x2968 x2968) x2968))
(define-fun x6051 ((x2968 Real)) Bool (and (x4446 x2968) (x2904 x2968) (x1901 x2968)))
(define-fun x3951 ((x2968 Real)) Bool (= (x5347 1461501637330902918203684832716283019655932542975 (x5347 1461501637330902918203684832716283019655932542975 x2968)) (x5347 1461501637330902918203684832716283019655932542975 x2968)))
(define-fun x4779 ((x2968 Real)) Bool (=> (and (<= 0 x2968) (< x2968 1461501637330902918203684832716283019655932542976)) (= (x5347 1461501637330902918203684832716283019655932542975 x2968) x2968)))
(define-fun x2445 ((x2968 Real)) Bool (=> (= x2968 (x5347 1461501637330902918203684832716283019655932542975 x2968)) (and (> 1461501637330902918203684832716283019655932542976 x2968) (>= x2968 0))))
(define-fun x3413 ((x2968 Real)) Bool (=> (and (< x2968 2923003274661805836407369665432566039311865085952) (>= x2968 1461501637330902918203684832716283019655932542976)) (= (x5347 1461501637330902918203684832716283019655932542975 x2968) (- x2968 1461501637330902918203684832716283019655932542976))))
(define-fun x3271 ((x2968 Real) (x2548 Real)) Bool (and (<= 0 x2548) (= (+ (* 1461501637330902918203684832716283019655932542976 x2548) (x5347 1461501637330902918203684832716283019655932542975 x2968)) x2968)))
(define-fun x471 ((x2968 Real) (x4968 Real)) Bool (and (x4779 x2968) (x3271 x2968 x4968) (x3413 x2968) (x2445 x2968) (x3951 x2968)))
(define-fun x3714 ((x2968 Real) (x2548 Real)) Bool (= (x5347 x2968 x2548) (x5347 x2548 x2968)))
(define-fun x3727 ((x2968 Real) (x2548 Real)) Bool (and (=> (>= x2548 0) (>= x2548 (x5347 x2968 x2548))) (=> (<= 0 x2968) (>= x2968 (x5347 x2968 x2548))) (>= (x5347 x2968 x2548) 0)))
(define-fun x263 ((x2968 Real) (x2548 Real)) Bool (and (x3714 x2968 x2548) (x3727 x2968 x2548)))
(define-fun x5138 ((x2968 Real) (x4968 Real)) Bool (and (x263 x2968 1461501637330902918203684832716283019655932542975) (x471 x2968 x4968)))
(define-fun x1042 ((x2968 Real)) Bool (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2968) (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2968))))
(define-fun x2195 ((x2968 Real)) Bool (=> (and (>= x2968 0) (> 32 x2968)) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2968) 0)))
(define-fun x853 ((x2968 Real) (x2548 Real) (x3448 Real) (x2474 Real)) Bool (and (> 1 x2474) (< x2548 32) (<= 0 x2474) (< x3448 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= x2968 (+ x2548 (* 32 x3448) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2474))) (>= x2548 0) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2968) (* x3448 32)) (>= x3448 0)))
(define-fun x3613 ((x2968 Real) (x1506 Real) (x1170 Real) (x3680 Real)) Bool (and (x2195 x2968) (x1042 x2968) (x853 x2968 x1506 x1170 x3680)))
(define-fun x251 ((x2968 Real) (x1506 Real) (x1170 Real) (x3680 Real)) Bool (and (x3613 x2968 x1506 x1170 x3680) (x263 x2968 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x3846 ((x2968 Real)) Bool (= (x5347 26959946667150639794667015087019630673637144422540572481103610249215 (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x2968)) (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x2968)))
(define-fun x2131 ((x2968 Real)) Bool (=> (and (>= x2968 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x2968)) (= x2968 (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x2968))))
(define-fun x923 ((x2968 Real)) Bool (=> (= x2968 (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x2968)) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x2968) (<= 0 x2968))))
(define-fun x3971 ((x2968 Real)) Bool (=> (and (< x2968 53919893334301279589334030174039261347274288845081144962207220498432) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x2968)) (= (- x2968 26959946667150639794667015087019630673637144422540572481103610249216) (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x2968))))
(define-fun x2501 ((x2968 Real) (x2548 Real)) Bool (and (<= 0 x2548) (= (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x2548) (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x2968)) x2968)))
(define-fun x1132 ((x2968 Real) (x4968 Real)) Bool (and (x3971 x2968) (x3846 x2968) (x2501 x2968 x4968) (x2131 x2968) (x923 x2968)))
(define-fun x2507 ((x2968 Real) (x4968 Real)) Bool (and (x263 x2968 26959946667150639794667015087019630673637144422540572481103610249215) (x1132 x2968 x4968)))
(define-fun x348 ((x2968 Real)) Bool (= (x5347 255 x2968) (x5347 255 (x5347 255 x2968))))
(define-fun x885 ((x2968 Real)) Bool (=> (and (< x2968 256) (<= 0 x2968)) (= x2968 (x5347 255 x2968))))
(define-fun x338 ((x2968 Real)) Bool (=> (= x2968 (x5347 255 x2968)) (and (> 256 x2968) (<= 0 x2968))))
(define-fun x1267 ((x2968 Real)) Bool (=> (and (< x2968 512) (>= x2968 256)) (= (x5347 255 x2968) (- x2968 256))))
(define-fun x4440 ((x2968 Real) (x2548 Real)) Bool (and (<= 0 x2548) (= (+ (x5347 255 x2968) (* 256 x2548)) x2968)))
(define-fun x2743 ((x2968 Real) (x4968 Real)) Bool (and (x348 x2968) (x885 x2968) (x4440 x2968 x4968) (x1267 x2968) (x338 x2968)))
(define-fun x2660 ((x2968 Real) (x4968 Real)) Bool (and (x2743 x2968 x4968) (x263 x2968 255)))
(define-fun x1948 ((x2968 Real)) Bool (and (= (x5 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2968) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5 x2968 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x2456 ((x2968 Real)) Bool (and (= (x5 0 x2968) x2968) (= x2968 (x5 x2968 0))))
(define-fun x2787 ((x2968 Real)) Bool (= (x5 x2968 x2968) x2968))
(define-fun x549 ((x2968 Real)) Bool (and (x2456 x2968) (x2787 x2968) (x1948 x2968)))
(define-fun x825 ((x2968 Real) (x2548 Real)) Bool (= (x5 x2548 x2968) (x5 x2968 x2548)))
(define-fun x5889 ((x2968 Real) (x2548 Real)) Bool (and (=> (>= x2548 0) (<= x2548 (x5 x2968 x2548))) (>= (+ x2968 x2548) (x5 x2968 x2548)) (=> (>= x2968 0) (>= (x5 x2968 x2548) x2968))))
(define-fun x433 ((x2968 Real) (x2548 Real)) Bool (and (x5889 x2968 x2548) (x825 x2968 x2548)))
(define-fun x422 ((x2968 Real)) Bool (= (x5347 1 (x5347 1 x2968)) (x5347 1 x2968)))
(define-fun x1113 ((x2968 Real)) Bool (=> (and (>= x2968 0) (< x2968 2)) (= x2968 (x5347 1 x2968))))
(define-fun x2373 ((x2968 Real)) Bool (=> (= (x5347 1 x2968) x2968) (and (> 2 x2968) (>= x2968 0))))
(define-fun x1443 ((x2968 Real)) Bool (=> (and (<= 2 x2968) (< x2968 4)) (= (x5347 1 x2968) (- x2968 2))))
(define-fun x4553 ((x2968 Real) (x2548 Real)) Bool (and (>= x2548 0) (= x2968 (+ (x5347 1 x2968) (* 2 x2548)))))
(define-fun x6153 ((x2968 Real) (x4968 Real)) Bool (and (x2373 x2968) (x1443 x2968) (x4553 x2968 x4968) (x422 x2968) (x1113 x2968)))
(define-fun x4237 ((x2968 Real) (x4968 Real)) Bool (and (x263 x2968 1) (x6153 x2968 x4968)))
(define-fun x2876 ((x5140 Real)) Real (x3120 x5140))
(define-fun x873 ((x5140 Real)) Real (ite (= x5140 x4578) x4791 (x2734 x5140)))
(define-fun x3021 ((x5140 Real)) Real (ite (and (not x6137) (not x3116) (not x1154) x676) (x2734 x5140) (ite (and x3116 x676 (not x1154)) (x2241 x5140) (x873 x5140))))
(define-fun x3088 ((x5140 Real)) Real (ite (= x5847 x5140) x6144 (x4192 x5140)))
(define-fun x4455 ((x5140 Real)) Real (ite (= x5140 x709) x2789 (x861 x5140)))
(define-fun x432 ((x5140 Real)) Real (ite (= x6005 x5140) 0 (x4664 x5140)))
(define-fun x1407 ((x5140 Real)) Real (ite (= x5140 x682) 0 (x2603 x5140)))
(define-fun x2446 ((x5140 Real)) Real (ite (= x5956 x5140) 0 (x2207 x5140)))
(define-fun x5301 ((x5140 Real)) Real (ite (= x4348 x5140) 0 (x4133 x5140)))
(define-fun x4038 ((x5140 Real)) Real (ite (= x5074 x5140) 0 (x4803 x5140)))
(define-fun x3272 ((x5140 Real)) Real (ite (= x5926 x5140) 0 (x1918 x5140)))
(define-fun x3902 ((x5140 Real)) Real (ite (= x920 x5140) x6005 (x5589 x5140)))
(define-fun x2260 ((x5140 Real)) Real (ite (= x4998 x5140) x2664 (x1985 x5140)))
(define-fun x2647 ((x5140 Real)) Real (ite (= x6115 x5140) x2612 (x1110 x5140)))
(define-fun x429 ((x5140 Real)) Real (ite (= x5140 x5853) x4660 (x785 x5140)))
(define-fun x2402 ((x5140 Real)) Real (ite (= x5140 x3683) x2408 (x5278 x5140)))
(define-fun x5684 ((x5140 Real)) Real (ite (and (not x2093) x5960) (x5278 x5140) (x2402 x5140)))
(define-fun x87 ((x5140 Real)) Real (ite (= x5140 x4564) x1431 (x1895 x5140)))
(define-fun x2944 ((x5140 Real)) Real (ite (= x5140 x232) x3553 (x1270 x5140)))
(define-fun x5093 ((x5140 Real)) Real (ite (and (not x2093) x5960) (x2944 x5140) (x1270 x5140)))
(define-fun x5557 ((x5140 Real)) Real (ite (= x5140 x3438) x2918 (x5664 x5140)))
(define-fun x600 ((x5140 Real)) Real (ite (= x3570 x5140) x4042 (x5672 x5140)))
(define-fun x3136 ((x5140 Real)) Real (ite (= x4659 x5140) x4998 (x2530 x5140)))
(define-fun x3592 ((x5140 Real)) Real (ite (and (not x5559) x2032) (x1110 x5140) (x2647 x5140)))
(define-fun x2534 ((x5140 Real)) Real (ite (and x2032 (not x5559)) (x1985 x5140) (x2260 x5140)))
(define-fun x4439 ((x5140 Real)) Real (ite (and (not x5559) x2032) (x1895 x5140) (x87 x5140)))
(define-fun x352 ((x5140 Real)) Real (ite (and (not x5559) x2032) (x2530 x5140) (x3136 x5140)))
(define-fun x1836 ((x5140 Real)) Real (ite (and (not x5559) x2032) (x5672 x5140) (x600 x5140)))
(define-fun x5317 ((x5140 Real)) Real (ite (and (not x5559) x2032) (x785 x5140) (x429 x5140)))
(define-fun x2302 ((x5140 Real)) Real (ite (and (not x5559) x2032) (x5664 x5140) (x5557 x5140)))
(define-fun x214 ((x5140 Real)) Real (ite (= x5140 x2686) x5720 (x2871 x5140)))
(define-fun x3219 ((x5140 Real)) Real (ite (= x5140 x2385) 274184521717934524641157099916833587231 (x4926 x5140)))
(define-fun x3608 ((x5140 Real)) Real (ite (= x1015 x5140) x5847 (x4811 x5140)))
(define-fun x1701 ((x5140 Real)) Real (ite (= x5140 x3094) x709 (x3096 x5140)))
(define-fun x3129 ((x5140 Real)) Real (ite (= x2595 x5140) x1176 (x4319 x5140)))
(define-fun x5055 ((x5140 Real)) Real (ite (= x5140 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1933 x5140)))
(define-fun x440 ((x5140 Real)) Real (ite (= 128 x5140) x5822 (x2928 x5140)))
(define-fun x1115 ((x5140 Real)) Real (ite (= 128 x5140) x1546 (x2928 x5140)))
(define-fun x2034 ((x5140 Real)) Real (ite x5927 (ite x3312 (x2928 x5140) (x440 x5140)) (ite x1949 (x2928 x5140) (x1115 x5140))))
(define-fun x3636 ((x5140 Real)) Real (ite (= x5140 x4310) x833 (x5220 x5140)))
(define-fun x2250 ((x5140 Real)) Real (ite (= x4310 x5140) x4558 (x5220 x5140)))
(define-fun x1823 ((x5140 Real)) Real (ite (and x1124 x4976) (x3636 x5140) (x2250 x5140)))
(define-fun x6079 ((x5140 Real)) Real (ite (= 128 x5140) x833 (x1474 x5140)))
(define-fun x4007 ((x5140 Real)) Real (ite (= 128 x5140) x4558 (x1474 x5140)))
(define-fun x2187 ((x5140 Real)) Real (ite (and x1938 x2599) (x6079 x5140) (x4007 x5140)))
(define-fun x4479 ((x5140 Real)) Real (ite (= x5140 x3766) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x3411 x5140)))
(define-fun x1587 ((x5140 Real)) Real (ite (= x5140 x5575) x1176 (x4479 x5140)))
(define-fun x2227 ((x5140 Real)) Real (ite (and (< x5140 (+ 0 x3766)) (>= x5140 x3766)) (x5584 (+ 0 (- x5140 x3766))) (x3760 x5140)))
(define-fun x1149 ((x5140 Real)) Real (ite (= x6085 x5140) x1460 (x954 x5140)))
(define-fun x2704 ((x5140 Real)) Real (ite (= x886 x5140) 0 (x1784 x5140)))
(define-fun x3340 ((x5140 Real)) Real (ite (= x2819 x5140) x1330 (x5516 x5140)))
(define-fun x3286 ((x5140 Real)) Real (ite x679 (x5516 x5140) (x3340 x5140)))
(define-fun x968 ((x5140 Real)) Real (ite (= x2819 x5140) x6122 (x5516 x5140)))
(define-fun x2147 ((x5140 Real)) Real (ite x324 (x5516 x5140) (x968 x5140)))
(define-fun x1361 ((x5140 Real)) Real (ite x4914 (x3286 x5140) (x2147 x5140)))
(define-fun x2 ((x5140 Real)) Real (ite x1870 (x1361 x5140) (x5516 x5140)))
(define-fun x1584 ((x5140 Real)) Real (ite (= 128 x5140) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1933 x5140)))
(define-fun x1063 ((x5140 Real)) Real (ite (= 128 x5140) x2471 (x51 x5140)))
(define-fun x1466 ((x5140 Real)) Real (ite (= 128 x5140) x3866 (x51 x5140)))
(define-fun x4567 ((x5140 Real)) Real (ite x1356 (ite x5139 (x51 x5140) (x1063 x5140)) (ite x3100 (x51 x5140) (x1466 x5140))))
(define-fun x1388 ((x5140 Real)) Real (ite (= x6033 x5140) x833 (x6160 x5140)))
(define-fun x610 ((x5140 Real)) Real (ite (= x5140 x6033) x4558 (x6160 x5140)))
(define-fun x2708 ((x5140 Real)) Real (ite (and x4859 x1957) (x1388 x5140) (x610 x5140)))
(define-fun x2729 ((x5140 Real)) Real (ite (= x5140 128) x833 (x2611 x5140)))
(define-fun x3211 ((x5140 Real)) Real (ite (= 128 x5140) x4558 (x2611 x5140)))
(define-fun x750 ((x5140 Real)) Real (ite (and x4996 x5440) (x2729 x5140) (x3211 x5140)))
(define-fun x4396 ((x5140 Real)) Real (ite (= x1708 x5140) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x4925 x5140)))
(define-fun x5683 ((x5140 Real)) Real (ite (= x3924 x5140) x1176 (x4396 x5140)))
(define-fun x1424 ((x5140 Real)) Real (ite (and (>= x5140 x1708) (< x5140 (+ x1708 0))) (x6012 (+ 0 (- x5140 x1708))) (x3281 x5140)))
(define-fun x4961 ((x5140 Real)) Real (ite (= x5140 x1322) x992 (x4318 x5140)))
(define-fun x1568 ((x5140 Real)) Real (ite (= x5140 x3738) 0 (x4949 x5140)))
(define-fun x3784 ((x5140 Real)) Real (ite (= x3818 x5140) x3441 (x3040 x5140)))
(define-fun x5665 ((x5140 Real)) Real (ite x1549 (x3040 x5140) (x3784 x5140)))
(define-fun x3809 ((x5140 Real)) Real (ite (= x3818 x5140) x1008 (x3040 x5140)))
(define-fun x3629 ((x5140 Real)) Real (ite x2693 (x3040 x5140) (x3809 x5140)))
(define-fun x3999 ((x5140 Real)) Real (ite x3588 (x5665 x5140) (x3629 x5140)))
(define-fun x2384 ((x5140 Real)) Real (ite x2271 (x3999 x5140) (x3040 x5140)))
(define-fun x5781 ((x5140 Real)) Real (ite (= x4013 x5140) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x3709 x5140)))
(define-fun x5294 ((x5140 Real)) Real (ite (= x5140 x4596) x3047 (x5781 x5140)))
(define-fun x2174 ((x5140 Real)) Real (ite (and (< x5140 (+ 32 x4013)) (>= x5140 x4013)) (x2945 (+ (- x5140 x4013) 0)) (x6105 x5140)))
(define-fun x4907 ((x5140 Real)) Real (ite (and (not x189) x2695 x1478) (x2174 x5140) (x6105 x5140)))
(define-fun x184 ((x5140 Real)) Real (ite (= x5140 x1942) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x4907 x5140)))
(define-fun x1591 ((x5140 Real)) Real (ite (= x5140 x714) x4725 (x184 x5140)))
(define-fun x974 ((x5140 Real)) Real (ite (= x5140 x3982) x2753 (x1591 x5140)))
(define-fun x5087 ((x5140 Real)) Real (ite (and (> (+ x1942 32) x5140) (>= x5140 x1942)) (x4537 (+ (- x5140 x1942) 0)) (x128 x5140)))
(define-fun x6148 ((x5140 Real)) Real (ite (and x3290 x4410 (not x4208)) (x5087 x5140) (x128 x5140)))
(define-fun x3321 ((x5140 Real)) Real (ite (= x5140 x3942) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x6148 x5140)))
(define-fun x2176 ((x5140 Real)) Real (ite (= x3942 x5140) x2943 (x5950 x5140)))
(define-fun x5141 ((x5140 Real)) Real (ite (= x5140 x3942) x366 (x5950 x5140)))
(define-fun x4005 ((x5140 Real)) Real (ite (= x246 x5140) x943 (x5999 x5140)))
(define-fun x2158 ((x5140 Real)) Real (ite (= x5140 x246) x1774 (x5999 x5140)))
(define-fun x6028 ((x5140 Real)) Real (ite (and x3916 x5622) (x4005 x5140) (x2158 x5140)))
(define-fun x758 ((x5140 Real)) Real (ite (and (not x1347) x3930) (x3709 x5140) (ite (and x4947 x1079) (x3036 x5140) (x6028 x5140))))
(define-fun x4483 ((x5140 Real)) Real (ite (and (>= x5140 x5980) (< x5140 (+ 32 x5980))) (x1415 (+ 0 (- x5140 x5980))) (x1266 x5140)))
(define-fun x2697 ((x5140 Real)) Real (ite (= x5177 x5140) x5481 (x5912 x5140)))
(define-fun x2846 ((x5140 Real)) Real (ite (and x782 x2985) (x124 x5140) (ite (and x5783 x195) (x4002 x5140) (ite (and (not x4097) x5415) (x4002 x5140) (ite (and x2519 x4320) (x4002 x5140) (ite (and x1963 x2011) (x4002 x5140) (x124 x5140)))))))
(define-fun x5891 ((x5140 Real)) Real (ite (= x835 x5140) x3975 (x124 x5140)))
(define-fun x1183 ((x5140 Real)) Real (ite x324 (x2846 x5140) (x5891 x5140)))
(define-fun x5159 ((x5140 Real)) Real (ite x4914 (x4002 x5140) (x1183 x5140)))
(define-fun x2701 ((x5140 Real)) Real (ite x1870 (x5159 x5140) (x4002 x5140)))
(define-fun x3607 ((x5140 Real)) Real (ite (and x6041 x6021) (x400 x5140) (ite (and x5910 x1234) (x3313 x5140) (ite (and (not x5366) x4841) (x3313 x5140) (ite (and x6104 x2668) (x3313 x5140) (ite (and x1842 x4692) (x3313 x5140) (x400 x5140)))))))
(define-fun x4074 ((x5140 Real)) Real (ite (= x5140 x5242) x809 (x400 x5140)))
(define-fun x5089 ((x5140 Real)) Real (ite x2693 (x3607 x5140) (x4074 x5140)))
(define-fun x125 ((x5140 Real)) Real (ite x3588 (x3313 x5140) (x5089 x5140)))
(define-fun x3694 ((x5140 Real)) Real (ite x2271 (x125 x5140) (x3313 x5140)))
(define-fun x2436 ((x5140 Real)) Real (ite (and x5960 (not x2093)) (ite x167 (x2701 x5140) (x3247 x5140)) (ite x4962 (x3694 x5140) (x3247 x5140))))
(define-fun x5659 ((x5140 Real)) Real (ite (and x5127 x1141) (x1809 x5140) (ite (and x914 x3127) (x2690 x5140) (ite (and x4053 (not x3330)) (x2690 x5140) (ite (and x468 x3831) (x2690 x5140) (ite (and x3661 x2140) (x2690 x5140) (x1809 x5140)))))))
(define-fun x495 ((x5140 Real)) Real (ite (= x5140 x384) x5123 (x1809 x5140)))
(define-fun x5876 ((x5140 Real)) Real (ite x679 (x5659 x5140) (x495 x5140)))
(define-fun x4899 ((x5140 Real)) Real (ite x4914 (x5876 x5140) (x2690 x5140)))
(define-fun x4409 ((x5140 Real)) Real (ite x1870 (x4899 x5140) (x2690 x5140)))
(define-fun x269 ((x5140 Real)) Real (ite (and x4452 x2646) (x6064 x5140) (ite (and x6150 x1955) (x3314 x5140) (ite (and (not x4217) x3123) (x3314 x5140) (ite (and x3225 x3900) (x3314 x5140) (ite (and x4942 x2491) (x3314 x5140) (x6064 x5140)))))))
(define-fun x253 ((x5140 Real)) Real (ite (= x114 x5140) x1561 (x6064 x5140)))
(define-fun x514 ((x5140 Real)) Real (ite x1549 (x269 x5140) (x253 x5140)))
(define-fun x656 ((x5140 Real)) Real (ite x3588 (x514 x5140) (x3314 x5140)))
(define-fun x1100 ((x5140 Real)) Real (ite x2271 (x656 x5140) (x3314 x5140)))
(define-fun x2776 ((x5140 Real)) Real (ite (and (not x2093) x5960) (ite x167 (x4409 x5140) (x4892 x5140)) (ite x4962 (x1100 x5140) (x4892 x5140))))
(define-fun x2995 ((x5140 Real)) Real (ite (= x3768 x5140) x1353 (x3772 x5140)))
(define-fun x5379 ((x5140 Real)) Real (ite (and (<= x4563 x5140) (< x5140 (+ x1419 x4563))) (x3120 (+ x297 (- x5140 x4563))) (x2110 x5140)))
(define-fun x1578 ((x5140 Real)) Real (ite (= x3358 x5140) x5389 (x1788 x5140)))
(define-fun x880 ((x5140 Real)) Real (ite (and x3930 (not x1347)) (x1788 x5140) (x1578 x5140)))
(define-fun x2790 ((x5140 Real)) Real (ite (= x5140 x1155) x1156 (x275 x5140)))
(define-fun x826 ((x5140 Real)) Real (ite (and (<= x6047 x5140) (< x5140 (+ x4861 x6047))) (x3120 (+ x297 (- x5140 x6047))) (x6052 x5140)))
(define-fun x302 ((x5140 Real)) Real (ite (= x5140 x1237) x2186 (x4739 x5140)))
(define-fun x4183 ((x5140 Real)) Real (ite (and (not x4717) x1181) (x4739 x5140) (ite (and x308 x3804) (x302 x5140) (x4739 x5140))))
(define-fun x9 ((x5140 Real)) Real (ite (and (> (+ x420 x5693) x5140) (>= x5140 x5693)) (x3120 (+ (- x5140 x5693) x297)) (x1331 x5140)))
(define-fun x4081 ((x5140 Real)) Real (ite (= x5140 x1593) x1525 (x4173 x5140)))
(define-fun x2177 ((x5140 Real)) Real (ite (and x6053 (not x5605)) (x4173 x5140) (ite (and x565 x1111) (x4081 x5140) (x4173 x5140))))
(define-fun x3551 ((x5140 Real)) Real (ite (= x1629 x5140) x5798 (x4805 x5140)))
(define-fun x5134 ((x5140 Real)) Real (ite (and (<= x489 x5140) (< x5140 (+ x1550 x489))) (x3120 (+ x297 (- x5140 x489))) (x594 x5140)))
(define-fun x5536 ((x5140 Real)) Real (ite (= x5140 x4241) x1091 (x2674 x5140)))
(define-fun x1496 ((x5140 Real)) Real (ite (and (not x2565) x4979) (x2674 x5140) (ite (and x4405 x637) (x5536 x5140) (x2674 x5140))))
(define-fun x14 ((x5140 Real)) Real (ite (= x2388 x5140) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x5032 x5140)))
(define-fun x4977 ((x5140 Real)) Real (ite (and (>= x5140 x2388) (> (+ 32 x2388) x5140)) (x705 (+ (- x5140 x2388) 0)) (x591 x5140)))
(define-fun x3137 ((x5140 Real)) Real (ite (and (not x3006) x177 x2523) (x4977 x5140) (x591 x5140)))
(define-fun x4341 ((x5140 Real)) Real (ite (= x5749 x5140) x2190 (x1364 x5140)))
(define-fun x1743 ((x5140 Real)) Real (ite (= x5749 x5140) x1914 (x1364 x5140)))
(define-fun x3381 ((x5140 Real)) Real (ite (and x5078 x5868) (x4341 x5140) (x1743 x5140)))
(define-fun x837 ((x5140 Real)) Real (ite (= x5140 x2218) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1483 x5140)))
(define-fun x1214 ((x5140 Real)) Real (ite (= x2218 x5140) x4990 (x2581 x5140)))
(define-fun x2996 ((x5140 Real)) Real (ite (= x5140 x2218) x2076 (x2581 x5140)))
(define-fun x1493 ((x5140 Real)) Real (ite x3510 (ite x3875 (x2581 x5140) (x1214 x5140)) (ite x1936 (x2581 x5140) (x2996 x5140))))
(define-fun x2328 ((x5140 Real)) Real (ite (= x5140 x1392) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1493 x5140)))
(define-fun x6176 ((x5140 Real)) Real (ite (= x5140 x1392) x1505 (x402 x5140)))
(define-fun x2083 ((x5140 Real)) Real (ite (= x1392 x5140) x1947 (x402 x5140)))
(define-fun x4079 ((x5140 Real)) Real (ite (= x5140 x1806) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x4305 x5140)))
(define-fun x5187 ((x5140 Real)) Real (ite (= x2994 x5140) x3595 (x4079 x5140)))
(define-fun x2818 ((x5140 Real)) Real (ite (and (>= x5140 x1806) (< x5140 (+ x1806 32))) (x1984 (+ 0 (- x5140 x1806))) (x5875 x5140)))
(define-fun x1509 ((x5140 Real)) Real (ite (and (not x509) x518 x3635) (x2818 x5140) (x5875 x5140)))
(define-fun x534 ((x5140 Real)) Real (ite (= x3860 x5140) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1509 x5140)))
(define-fun x283 ((x5140 Real)) Real (ite (= x5140 x1416) x1309 (x534 x5140)))
(define-fun x2394 ((x5140 Real)) Real (ite (= x5140 x4668) x5358 (x283 x5140)))
(define-fun x2764 ((x5140 Real)) Real (ite (and (> (+ 32 x3860) x5140) (<= x3860 x5140)) (x1445 (+ (- x5140 x3860) 0)) (x241 x5140)))
(define-fun x2503 ((x5140 Real)) Real (ite (and (< x5140 (+ x4382 32)) (<= x4382 x5140)) (x2896 (+ 0 (- x5140 x4382))) (x5860 x5140)))
(define-fun x2134 ((x5140 Real)) Real (ite (and x3249 (not x3652) x5844) (x2503 x5140) (x5860 x5140)))
(define-fun x1229 ((x5140 Real)) Real (ite (= x5140 x5229) x943 (x5922 x5140)))
(define-fun x3600 ((x5140 Real)) Real (ite (= x5140 x5229) x1774 (x5922 x5140)))
(define-fun x4709 ((x5140 Real)) Real (ite (and x3200 x2108) (x1229 x5140) (x3600 x5140)))
(define-fun x4415 ((x5140 Real)) Real (ite (= x1018 x5140) x943 (x1740 x5140)))
(define-fun x215 ((x5140 Real)) Real (ite (= x5140 x1018) x1774 (x1740 x5140)))
(define-fun x4941 ((x5140 Real)) Real (ite (and x3417 x3229) (x4415 x5140) (x215 x5140)))
(define-fun x1342 ((x5140 Real)) Real (ite (and x1579 x1230) (x5690 x5140) (x4941 x5140)))
(define-fun x75 ((x5140 Real)) Real (ite (= x5140 x5052) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x766 x5140)))
(define-fun x1319 ((x5140 Real)) Real (ite (and (>= x5140 x5052) (< x5140 (+ 32 x5052))) (x6048 (+ 0 (- x5140 x5052))) (x7 x5140)))
(define-fun x3521 ((x5140 Real)) Real (ite (and x3267 x4680 (not x3371)) (x1319 x5140) (x7 x5140)))
(define-fun x1668 ((x5140 Real)) Real (ite (= 0 x5140) x2190 (x6006 x5140)))
(define-fun x1437 ((x5140 Real)) Real (ite (= x1875 x5140) x2190 (x5615 x5140)))
(define-fun x4171 ((x5140 Real)) Real (ite (= x5140 0) x2190 (x1848 x5140)))
(define-fun x5747 ((x5140 Real)) Real (ite (= x5140 x1875) x1914 (x5615 x5140)))
(define-fun x5646 ((x5140 Real)) Real (ite (and x588 x4568) (x1437 x5140) (x5747 x5140)))
(define-fun x5000 ((x5140 Real)) Real (ite (and (not x4717) x1181) (x766 x5140) (ite (and x308 x3804) (x5646 x5140) (x766 x5140))))
(define-fun x5448 ((x5140 Real)) Real (ite (= x1336 x5140) 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x5000 x5140)))
(define-fun x3520 ((x5140 Real)) Real (ite (= x2317 x5140) x199 (x5448 x5140)))
(define-fun x3422 ((x5140 Real)) Real (ite (and (< x5140 (+ 32 x1336)) (>= x5140 x1336)) (x2510 (+ 0 (- x5140 x1336))) (x2512 x5140)))
(define-fun x413 ((x5140 Real)) Real (ite (= x5140 0) x833 (x3064 x5140)))
(define-fun x4528 ((x5140 Real)) Real (ite (= x5140 0) x833 (x3444 x5140)))
(define-fun x3532 ((x5140 Real)) Real (ite (= x5140 0) x833 (x3731 x5140)))
(define-fun x5211 ((x5140 Real)) Real (ite (= x5140 0) x833 (x4347 x5140)))
(define-fun x2521 ((x5140 Real)) Real (ite (= x5140 x4619) x1176 (x4160 x5140)))
(define-fun x2202 ((x5140 Real)) Real (ite (= x5140 x3454) x1657 (x2521 x5140)))
(define-fun x1531 ((x5140 Real)) Real (ite (= x5140 x1708) x2026 (x3949 x5140)))
(define-fun x397 ((x5140 Real)) Real (ite (= x5016 x5140) x2825 (x2202 x5140)))
(define-fun x4592 ((x5140 Real)) Real (ite (= x5140 x2179) x1176 (x789 x5140)))
(define-fun x45 ((x5140 Real)) Real (ite (= x5140 x5037) x2022 (x4592 x5140)))
(define-fun x4055 ((x5140 Real)) Real (ite (= x3766 x5140) x5648 (x4301 x5140)))
(define-fun x3773 ((x5140 Real)) Real (ite (= x5451 x5140) x579 (x45 x5140)))
(define-fun x3269 ((x5140 Real)) Real (ite (= x3818 x5140) x4978 (x3391 x5140)))
(define-fun x2984 ((x5140 Real)) Real (ite (and x2763 x5100) (x3391 x5140) (x3269 x5140)))
(define-fun x478 ((x5140 Real)) Real (ite (= x5140 x2819) x4050 (x3391 x5140)))
(define-fun x3501 ((x5140 Real)) Real (ite (and x5620 x2912) (x3391 x5140) (x478 x5140)))
(define-fun x1793 ((x5140 Real)) Real (ite (= 0 x5140) x943 (x5527 x5140)))
(define-fun x4394 ((x5140 Real)) Real (ite (= 0 x5140) x943 (x3522 x5140)))
(define-fun x5819 ((x5140 Real)) Real (ite (= x5140 0) x943 (x918 x5140)))
(define-fun x2691 ((x5140 Real)) Real (ite (= 0 x5140) 1 (x5375 x5140)))
(define-fun x958 ((x5140 Real)) Real (ite x1549 (x5375 x5140) (x2691 x5140)))
(define-fun x3095 ((x5140 Real)) Real (ite (= x5140 0) 1 (x5375 x5140)))
(define-fun x4155 ((x5140 Real)) Real (ite x2693 (x5375 x5140) (x3095 x5140)))
(define-fun x4122 ((x5140 Real)) Real (ite x2271 (ite x3588 (x958 x5140) (x4155 x5140)) (x2082 x5140)))
(define-fun x4130 ((x5140 Real)) Real (ite (and (> (+ x3934 x4978) x5140) (<= x3934 x5140)) (x4122 (+ (- x5140 x3934) 0)) (x2210 x5140)))
(define-fun x559 ((x5140 Real)) Real (ite (and x5626 (not x305) x757) (x4981 x5140) (x1302 x5140)))
(define-fun x434 ((x5140 Real)) Real (ite (= x5140 274184521717934524641157099916833587231) x3827 (x559 x5140)))
(define-fun x4289 ((x5140 Real)) Real (ite (= x1303 x5140) x386 (x434 x5140)))
(define-fun x5313 ((x5140 Real)) Real (ite (= x5140 0) 1 (x4506 x5140)))
(define-fun x5730 ((x5140 Real)) Real (ite x679 (x4506 x5140) (x5313 x5140)))
(define-fun x1459 ((x5140 Real)) Real (ite (= x5140 0) 1 (x4506 x5140)))
(define-fun x6034 ((x5140 Real)) Real (ite x324 (x4506 x5140) (x1459 x5140)))
(define-fun x4611 ((x5140 Real)) Real (ite x1870 (ite x4914 (x5730 x5140) (x6034 x5140)) (x970 x5140)))
(define-fun x982 ((x5140 Real)) Real (ite (and (<= x5582 x5140) (< x5140 (+ x4050 x5582))) (x4611 (+ (- x5140 x5582) 0)) (x4571 x5140)))
(define-fun x3080 ((x5140 Real)) Real (ite (and x3235 (not x4813) x3830) (x1597 x5140) (x1302 x5140)))
(define-fun x1758 ((x5140 Real)) Real (ite (= 274184521717934524641157099916833587231 x5140) x5201 (x3080 x5140)))
(define-fun x3798 ((x5140 Real)) Real (ite (= x5140 x4554) x5963 (x1758 x5140)))
(define-fun x2466 ((x5140 Real)) Real (ite (and x5100 x2763) (x2210 x5140) (x4130 x5140)))
(define-fun x6 ((x5140 Real)) Real (ite (and x2912 x5620) (x4571 x5140) (x982 x5140)))
(define-fun x4661 ((x5140 Real)) Real (ite (and x1387 x5924 (not x1645)) (x3422 x5140) (x2512 x5140)))
(define-fun x1499 ((x5140 Real)) Real (x3237 x5140))
(define-fun x2079 ((x5140 Real)) Real (ite (= x5140 x1276) x1405 (x2487 x5140)))
(define-fun x5601 ((x5140 Real)) Real (ite (and x1810 (not x2282) (not x631) (not x721)) (x2487 x5140) (ite (and x721 (not x2282) x1810) (x5618 x5140) (x2079 x5140))))
(define-fun x5474 ((x5140 Real)) Real (ite (= x5140 x4462) x6144 (x1448 x5140)))
(define-fun x5609 ((x5140 Real)) Real (ite (= x2887 x5140) x5483 (x5966 x5140)))
(define-fun x6158 ((x5140 Real)) Real (ite (= x1595 x5140) 0 (x759 x5140)))
(define-fun x2322 ((x5140 Real)) Real (ite (= x5140 x3867) 0 (x4101 x5140)))
(define-fun x1551 ((x5140 Real)) Real (ite (= x5771 x5140) 0 (x1227 x5140)))
(define-fun x4548 ((x5140 Real)) Real (ite (= x5140 x3110) 0 (x196 x5140)))
(define-fun x1004 ((x5140 Real)) Real (ite (= x5140 x1986) 0 (x3115 x5140)))
(define-fun x6020 ((x5140 Real)) Real (ite (= x5140 x116) 0 (x4908 x5140)))
(define-fun x756 ((x5140 Real)) Real (ite (= x5754 x5140) x1595 (x2037 x5140)))
(define-fun x220 ((x5140 Real)) Real (ite (= x2688 x5140) x1520 (x1893 x5140)))
(define-fun x4169 ((x5140 Real)) Real (ite (= x5140 x998) x4748 (x1187 x5140)))
(define-fun x1494 ((x5140 Real)) Real (ite (= x5140 x3767) x3357 (x1573 x5140)))
(define-fun x5543 ((x5140 Real)) Real (ite (= x4520 x5140) x4009 (x5278 x5140)))
(define-fun x1678 ((x5140 Real)) Real (ite (and x5071 (not x3418)) (x5278 x5140) (x5543 x5140)))
(define-fun x5568 ((x5140 Real)) Real (ite (= x5140 x2169) x3499 (x5888 x5140)))
(define-fun x3569 ((x5140 Real)) Real (ite (= x5140 x2719) x2626 (x1270 x5140)))
(define-fun x5613 ((x5140 Real)) Real (ite (and (not x3418) x5071) (x3569 x5140) (x1270 x5140)))
(define-fun x68 ((x5140 Real)) Real (ite (= x2231 x5140) x5841 (x4414 x5140)))
(define-fun x1007 ((x5140 Real)) Real (ite (= x5140 x532) x5028 (x2889 x5140)))
(define-fun x1553 ((x5140 Real)) Real (ite (= x6106 x5140) x2688 (x4732 x5140)))
(define-fun x2262 ((x5140 Real)) Real (ite (and (not x1937) x457) (x4414 x5140) (x68 x5140)))
(define-fun x1390 ((x5140 Real)) Real (ite (and x457 (not x1937)) (x1187 x5140) (x4169 x5140)))
(define-fun x1946 ((x5140 Real)) Real (ite (and x457 (not x1937)) (x1893 x5140) (x220 x5140)))
(define-fun x5643 ((x5140 Real)) Real (ite (and (not x1937) x457) (x2889 x5140) (x1007 x5140)))
(define-fun x498 ((x5140 Real)) Real (ite (and x457 (not x1937)) (x5888 x5140) (x5568 x5140)))
(define-fun x1323 ((x5140 Real)) Real (ite (and (not x1937) x457) (x1573 x5140) (x1494 x5140)))
(define-fun x5205 ((x5140 Real)) Real (ite (and (not x1937) x457) (x4732 x5140) (x1553 x5140)))
(define-fun x3208 ((x5140 Real)) Real (ite (= x1355 x5140) x5826 (x4238 x5140)))
(define-fun x1208 ((x5140 Real)) Real (ite (= x5492 x5140) 274184521717934524641157099916833587231 (x1968 x5140)))
(define-fun x236 ((x5140 Real)) Real (ite (= x1822 x5140) x4462 (x2566 x5140)))
(define-fun x5645 ((x5140 Real)) Real (ite (= x4997 x5140) x2887 (x2528 x5140)))
(define-fun x4200 ((x5140 Real)) Real (ite (= x5140 x778) x2130 (x3297 x5140)))
(define-fun x152 ((x5140 Real)) Real (ite (= 128 x5140) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1789 x5140)))
(define-fun x4069 ((x5140 Real)) Real (ite (= 128 x5140) x1540 (x4693 x5140)))
(define-fun x3549 ((x5140 Real)) Real (ite (= x5140 128) x2736 (x4693 x5140)))
(define-fun x5450 ((x5140 Real)) Real (ite x2357 (ite x1389 (x4693 x5140) (x4069 x5140)) (ite x5653 (x4693 x5140) (x3549 x5140))))
(define-fun x4482 ((x5140 Real)) Real (ite (= x1241 x5140) x833 (x6135 x5140)))
(define-fun x4704 ((x5140 Real)) Real (ite (= x5140 x1241) x4558 (x6135 x5140)))
(define-fun x4780 ((x5140 Real)) Real (ite (and x3880 x4987) (x4482 x5140) (x4704 x5140)))
(define-fun x2238 ((x5140 Real)) Real (ite (= 128 x5140) x833 (x4982 x5140)))
(define-fun x1096 ((x5140 Real)) Real (ite (= 128 x5140) x4558 (x4982 x5140)))
(define-fun x5432 ((x5140 Real)) Real (ite (and x4856 x5198) (x2238 x5140) (x1096 x5140)))
(define-fun x1564 ((x5140 Real)) Real (ite (= x6011 x5140) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x2681 x5140)))
(define-fun x2040 ((x5140 Real)) Real (ite (= x5140 x3658) x2130 (x1564 x5140)))
(define-fun x526 ((x5140 Real)) Real (ite (and (> (+ 0 x6011) x5140) (>= x5140 x6011)) (x1994 (+ (- x5140 x6011) 0)) (x5711 x5140)))
(define-fun x1750 ((x5140 Real)) Real (ite (= x5140 x1268) x4302 (x702 x5140)))
(define-fun x1704 ((x5140 Real)) Real (ite (= x5140 x4383) 0 (x2439 x5140)))
(define-fun x2831 ((x5140 Real)) Real (ite (= x5394 x5140) x2839 (x6086 x5140)))
(define-fun x5392 ((x5140 Real)) Real (ite x5724 (x6086 x5140) (x2831 x5140)))
(define-fun x5103 ((x5140 Real)) Real (ite (= x5140 x5394) x3769 (x6086 x5140)))
(define-fun x5498 ((x5140 Real)) Real (ite x4628 (x6086 x5140) (x5103 x5140)))
(define-fun x3907 ((x5140 Real)) Real (ite x3010 (x5392 x5140) (x5498 x5140)))
(define-fun x230 ((x5140 Real)) Real (ite x5149 (x3907 x5140) (x6086 x5140)))
(define-fun x4776 ((x5140 Real)) Real (ite (= 128 x5140) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1789 x5140)))
(define-fun x2468 ((x5140 Real)) Real (ite (= x5140 128) x4626 (x1341 x5140)))
(define-fun x5080 ((x5140 Real)) Real (ite (= 128 x5140) x1260 (x1341 x5140)))
(define-fun x1975 ((x5140 Real)) Real (ite x2347 (ite x3526 (x1341 x5140) (x2468 x5140)) (ite x4569 (x1341 x5140) (x5080 x5140))))
(define-fun x3287 ((x5140 Real)) Real (ite (= x4474 x5140) x833 (x3207 x5140)))
(define-fun x1659 ((x5140 Real)) Real (ite (= x4474 x5140) x4558 (x3207 x5140)))
(define-fun x1491 ((x5140 Real)) Real (ite (and x1825 x5991) (x3287 x5140) (x1659 x5140)))
(define-fun x1735 ((x5140 Real)) Real (ite (= 128 x5140) x833 (x2621 x5140)))
(define-fun x6032 ((x5140 Real)) Real (ite (= 128 x5140) x4558 (x2621 x5140)))
(define-fun x4685 ((x5140 Real)) Real (ite (and x2754 x4493) (x1735 x5140) (x6032 x5140)))
(define-fun x3259 ((x5140 Real)) Real (ite (= x5918 x5140) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1436 x5140)))
(define-fun x2964 ((x5140 Real)) Real (ite (= x2103 x5140) x2130 (x3259 x5140)))
(define-fun x4345 ((x5140 Real)) Real (ite (and (> (+ 0 x5918) x5140) (>= x5140 x5918)) (x4989 (+ 0 (- x5140 x5918))) (x1501 x5140)))
(define-fun x1078 ((x5140 Real)) Real (ite (= x5270 x5140) x3847 (x4312 x5140)))
(define-fun x4161 ((x5140 Real)) Real (ite (= x2293 x5140) 0 (x5857 x5140)))
(define-fun x1157 ((x5140 Real)) Real (ite (= x4772 x5140) x1649 (x5122 x5140)))
(define-fun x4837 ((x5140 Real)) Real (ite x3869 (x5122 x5140) (x1157 x5140)))
(define-fun x3463 ((x5140 Real)) Real (ite (= x4772 x5140) x1874 (x5122 x5140)))
(define-fun x3617 ((x5140 Real)) Real (ite x4728 (x5122 x5140) (x3463 x5140)))
(define-fun x2064 ((x5140 Real)) Real (ite x3684 (x4837 x5140) (x3617 x5140)))
(define-fun x3913 ((x5140 Real)) Real (ite x860 (x2064 x5140) (x5122 x5140)))
(define-fun x5153 ((x5140 Real)) Real (ite (= x2568 x5140) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1027 x5140)))
(define-fun x130 ((x5140 Real)) Real (ite (= x5140 x5090) x3954 (x5153 x5140)))
(define-fun x3605 ((x5140 Real)) Real (ite (and (< x5140 (+ x2568 32)) (>= x5140 x2568)) (x4767 (+ (- x5140 x2568) 0)) (x2579 x5140)))
(define-fun x4204 ((x5140 Real)) Real (ite (and x3027 (not x1882) x2084) (x3605 x5140) (x2579 x5140)))
(define-fun x4250 ((x5140 Real)) Real (ite (= x2952 x5140) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x4204 x5140)))
(define-fun x1526 ((x5140 Real)) Real (ite (= x5140 x2221) x5695 (x4250 x5140)))
(define-fun x2777 ((x5140 Real)) Real (ite (= x820 x5140) x2555 (x1526 x5140)))
(define-fun x3309 ((x5140 Real)) Real (ite (and (<= x2952 x5140) (< x5140 (+ 32 x2952))) (x5801 (+ 0 (- x5140 x2952))) (x2657 x5140)))
(define-fun x1265 ((x5140 Real)) Real (ite (and (not x2479) x5700 x6013) (x3309 x5140) (x2657 x5140)))
(define-fun x6000 ((x5140 Real)) Real (ite (= x823 x5140) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1265 x5140)))
(define-fun x5238 ((x5140 Real)) Real (ite (= x5140 x823) x4337 (x2919 x5140)))
(define-fun x2628 ((x5140 Real)) Real (ite (= x823 x5140) x5314 (x2919 x5140)))
(define-fun x1977 ((x5140 Real)) Real (ite (= x717 x5140) x2472 (x3153 x5140)))
(define-fun x849 ((x5140 Real)) Real (ite (= x5140 x717) x5470 (x3153 x5140)))
(define-fun x3931 ((x5140 Real)) Real (ite (and x2689 x4956) (x1977 x5140) (x849 x5140)))
(define-fun x4167 ((x5140 Real)) Real (ite (and (not x22) x5144) (x1027 x5140) (ite (and x1952 x3525) (x2015 x5140) (x3931 x5140))))
(define-fun x4360 ((x5140 Real)) Real (ite (and (>= x5140 x772) (> (+ 32 x772) x5140)) (x2643 (+ 0 (- x5140 x772))) (x2331 x5140)))
(define-fun x3725 ((x5140 Real)) Real (ite (= x5140 x3823) x5063 (x698 x5140)))
(define-fun x5630 ((x5140 Real)) Real (ite (and x2395 x4277) (x4999 x5140) (ite (and x2219 x4460) (x1441 x5140) (ite (and x5288 (not x2244)) (x1441 x5140) (ite (and x2370 x3426) (x1441 x5140) (ite (and x1611 x5901) (x1441 x5140) (x4999 x5140)))))))
(define-fun x3380 ((x5140 Real)) Real (ite (= x1275 x5140) x176 (x4999 x5140)))
(define-fun x2637 ((x5140 Real)) Real (ite x5724 (x5630 x5140) (x3380 x5140)))
(define-fun x6019 ((x5140 Real)) Real (ite x3010 (x2637 x5140) (x1441 x5140)))
(define-fun x4131 ((x5140 Real)) Real (ite x5149 (x6019 x5140) (x1441 x5140)))
(define-fun x2962 ((x5140 Real)) Real (ite (and x2000 x5467) (x4471 x5140) (ite (and x3805 x3245) (x4115 x5140) (ite (and x4084 (not x307)) (x4115 x5140) (ite (and x97 x4589) (x4115 x5140) (ite (and x3710 x5488) (x4115 x5140) (x4471 x5140)))))))
(define-fun x5719 ((x5140 Real)) Real (ite (= x5371 x5140) x2200 (x4471 x5140)))
(define-fun x4804 ((x5140 Real)) Real (ite x3869 (x2962 x5140) (x5719 x5140)))
(define-fun x1454 ((x5140 Real)) Real (ite x3684 (x4804 x5140) (x4115 x5140)))
(define-fun x3816 ((x5140 Real)) Real (ite x860 (x1454 x5140) (x4115 x5140)))
(define-fun x4033 ((x5140 Real)) Real (ite (and (not x3418) x5071) (ite x4906 (x4131 x5140) (x4892 x5140)) (ite x2608 (x3816 x5140) (x4892 x5140))))
(define-fun x2910 ((x5140 Real)) Real (ite (and x5521 x2065) (x1916 x5140) (ite (and x5825 x3906) (x88 x5140) (ite (and x1679 (not x3966)) (x88 x5140) (ite (and x908 x2907) (x88 x5140) (ite (and x5666 x5677) (x88 x5140) (x1916 x5140)))))))
(define-fun x1473 ((x5140 Real)) Real (ite (= x3675 x5140) x6167 (x1916 x5140)))
(define-fun x4499 ((x5140 Real)) Real (ite x4628 (x2910 x5140) (x1473 x5140)))
(define-fun x2021 ((x5140 Real)) Real (ite x3010 (x88 x5140) (x4499 x5140)))
(define-fun x6001 ((x5140 Real)) Real (ite x5149 (x2021 x5140) (x88 x5140)))
(define-fun x2205 ((x5140 Real)) Real (ite (and x4541 x254) (x3185 x5140) (ite (and x1536 x2458) (x3167 x5140) (ite (and x1700 (not x632)) (x3167 x5140) (ite (and x3891 x5657) (x3167 x5140) (ite (and x4270 x5374) (x3167 x5140) (x3185 x5140)))))))
(define-fun x5593 ((x5140 Real)) Real (ite (= x5140 x425) x1449 (x3185 x5140)))
(define-fun x4424 ((x5140 Real)) Real (ite x4728 (x2205 x5140) (x5593 x5140)))
(define-fun x2532 ((x5140 Real)) Real (ite x3684 (x3167 x5140) (x4424 x5140)))
(define-fun x6096 ((x5140 Real)) Real (ite x860 (x2532 x5140) (x3167 x5140)))
(define-fun x5768 ((x5140 Real)) Real (ite (and x5071 (not x3418)) (ite x4906 (x6001 x5140) (x3247 x5140)) (ite x2608 (x6096 x5140) (x3247 x5140))))
(define-fun x244 ((x5140 Real)) Real (ite (= x2159 x5140) x6163 (x1153 x5140)))
(define-fun x3483 ((x5140 Real)) Real (ite (and (< x5140 (+ x2151 x5370)) (>= x5140 x2151)) (x3237 (+ (- x5140 x2151) x5115)) (x4536 x5140)))
(define-fun x1456 ((x5140 Real)) Real (ite (= x5276 x5140) x3126 (x4182 x5140)))
(define-fun x2550 ((x5140 Real)) Real (ite (and (not x22) x5144) (x4182 x5140) (x1456 x5140)))
(define-fun x5953 ((x5140 Real)) Real (ite (= x5140 x5267) x813 (x3651 x5140)))
(define-fun x3791 ((x5140 Real)) Real (ite (and (< x5140 (+ x6130 x2033)) (>= x5140 x6130)) (x3237 (+ (- x5140 x6130) x5115)) (x4012 x5140)))
(define-fun x3936 ((x5140 Real)) Real (ite (= x5140 x3707) x1455 (x4905 x5140)))
(define-fun x3542 ((x5140 Real)) Real (ite (and x4719 (not x752)) (x4905 x5140) (ite (and x5487 x6128) (x3936 x5140) (x4905 x5140))))
(define-fun x5587 ((x5140 Real)) Real (ite (and (>= x5140 x777) (< x5140 (+ x484 x777))) (x3237 (+ x5115 (- x5140 x777))) (x2178 x5140)))
(define-fun x3894 ((x5140 Real)) Real (ite (= x5140 x3929) x587 (x4915 x5140)))
(define-fun x5435 ((x5140 Real)) Real (ite (and x1103 (not x3500)) (x4915 x5140) (ite (and x5343 x5176) (x3894 x5140) (x4915 x5140))))
(define-fun x1150 ((x5140 Real)) Real (ite (= x3503 x5140) x4120 (x2359 x5140)))
(define-fun x4846 ((x5140 Real)) Real (ite (and (>= x5140 x5129) (< x5140 (+ x3638 x5129))) (x3237 (+ x5115 (- x5140 x5129))) (x3609 x5140)))
(define-fun x4468 ((x5140 Real)) Real (ite (= x1514 x5140) x267 (x2055 x5140)))
(define-fun x2866 ((x5140 Real)) Real (ite (and (not x5236) x737) (x2055 x5140) (ite (and x5104 x3715) (x4468 x5140) (x2055 x5140))))
(define-fun x5969 ((x5140 Real)) Real (ite (= x5502 x5140) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x5572 x5140)))
(define-fun x5957 ((x5140 Real)) Real (ite (and (> (+ 32 x5502) x5140) (>= x5140 x5502)) (x763 (+ 0 (- x5140 x5502))) (x942 x5140)))
(define-fun x66 ((x5140 Real)) Real (ite (and x2584 x2406 (not x857)) (x5957 x5140) (x942 x5140)))
(define-fun x5993 ((x5140 Real)) Real (ite (= x5140 x846) x2836 (x508 x5140)))
(define-fun x5247 ((x5140 Real)) Real (ite (= x846 x5140) x4825 (x508 x5140)))
(define-fun x649 ((x5140 Real)) Real (ite (and x1291 x3335) (x5993 x5140) (x5247 x5140)))
(define-fun x1715 ((x5140 Real)) Real (ite (= x5140 x5710) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x360 x5140)))
(define-fun x185 ((x5140 Real)) Real (ite (= x5140 x5710) x1680 (x1807 x5140)))
(define-fun x4265 ((x5140 Real)) Real (ite (= x5710 x5140) x5874 (x1807 x5140)))
(define-fun x1565 ((x5140 Real)) Real (ite x931 (ite x5970 (x1807 x5140) (x185 x5140)) (ite x1634 (x1807 x5140) (x4265 x5140))))
(define-fun x1288 ((x5140 Real)) Real (ite (= x5140 x1332) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1565 x5140)))
(define-fun x1023 ((x5140 Real)) Real (ite (= x1332 x5140) x4331 (x1626 x5140)))
(define-fun x143 ((x5140 Real)) Real (ite (= x1332 x5140) x3160 (x1626 x5140)))
(define-fun x3822 ((x5140 Real)) Real (ite (= x4048 x5140) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x3421 x5140)))
(define-fun x1608 ((x5140 Real)) Real (ite (= x5140 x3554) x5715 (x3822 x5140)))
(define-fun x3232 ((x5140 Real)) Real (ite (and (<= x4048 x5140) (> (+ x4048 32) x5140)) (x5928 (+ (- x5140 x4048) 0)) (x3326 x5140)))
(define-fun x149 ((x5140 Real)) Real (ite (and x4206 x259 (not x3212)) (x3232 x5140) (x3326 x5140)))
(define-fun x4932 ((x5140 Real)) Real (ite (= x2673 x5140) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x149 x5140)))
(define-fun x558 ((x5140 Real)) Real (ite (= x3596 x5140) x858 (x4932 x5140)))
(define-fun x146 ((x5140 Real)) Real (ite (= x3657 x5140) x5831 (x558 x5140)))
(define-fun x2731 ((x5140 Real)) Real (ite (and (<= x2673 x5140) (> (+ x2673 32) x5140)) (x5885 (+ (- x5140 x2673) 0)) (x2236 x5140)))
(define-fun x2292 ((x5140 Real)) Real (ite (and (<= x5535 x5140) (> (+ x5535 32) x5140)) (x5152 (+ (- x5140 x5535) 0)) (x3892 x5140)))
(define-fun x2052 ((x5140 Real)) Real (ite (and (not x3134) x5235 x1529) (x2292 x5140) (x3892 x5140)))
(define-fun x5685 ((x5140 Real)) Real (ite (= x5140 x1741) x2472 (x4833 x5140)))
(define-fun x2483 ((x5140 Real)) Real (ite (= x1741 x5140) x5470 (x4833 x5140)))
(define-fun x2400 ((x5140 Real)) Real (ite (and x289 x2080) (x5685 x5140) (x2483 x5140)))
(define-fun x5472 ((x5140 Real)) Real (ite (= x5140 x4044) x2472 (x5988 x5140)))
(define-fun x3489 ((x5140 Real)) Real (ite (= x4044 x5140) x5470 (x5988 x5140)))
(define-fun x2851 ((x5140 Real)) Real (ite (and x5125 x5255) (x5472 x5140) (x3489 x5140)))
(define-fun x5550 ((x5140 Real)) Real (ite (and x4593 x746) (x6168 x5140) (x2851 x5140)))
(define-fun x5118 ((x5140 Real)) Real (ite (= x5082 x5140) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x3264 x5140)))
(define-fun x3197 ((x5140 Real)) Real (ite (and (> (+ x5082 32) x5140) (<= x5082 x5140)) (x1575 (+ (- x5140 x5082) 0)) (x4555 x5140)))
(define-fun x485 ((x5140 Real)) Real (ite (and x776 x238 (not x1958)) (x3197 x5140) (x4555 x5140)))
(define-fun x1622 ((x5140 Real)) Real (ite (= x5140 0) x2836 (x2981 x5140)))
(define-fun x2457 ((x5140 Real)) Real (ite (= x4363 x5140) x2836 (x5335 x5140)))
(define-fun x3717 ((x5140 Real)) Real (ite (= x5140 0) x2836 (x5679 x5140)))
(define-fun x3632 ((x5140 Real)) Real (ite (= x5140 x4363) x4825 (x5335 x5140)))
(define-fun x3539 ((x5140 Real)) Real (ite (and x900 x1521) (x2457 x5140) (x3632 x5140)))
(define-fun x1541 ((x5140 Real)) Real (ite (and x4719 (not x752)) (x3264 x5140) (ite (and x6128 x5487) (x3539 x5140) (x3264 x5140))))
(define-fun x850 ((x5140 Real)) Real (ite (= x5140 x1381) 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1541 x5140)))
(define-fun x5268 ((x5140 Real)) Real (ite (= x5148 x5140) x3872 (x850 x5140)))
(define-fun x2644 ((x5140 Real)) Real (ite (and (>= x5140 x1381) (< x5140 (+ 32 x1381))) (x1765 (+ 0 (- x5140 x1381))) (x3965 x5140)))
(define-fun x1318 ((x5140 Real)) Real (ite (= x5140 0) x833 (x3392 x5140)))
(define-fun x4106 ((x5140 Real)) Real (ite (= 0 x5140) x833 (x4011 x5140)))
(define-fun x1397 ((x5140 Real)) Real (ite (= x5140 0) x833 (x4413 x5140)))
(define-fun x501 ((x5140 Real)) Real (ite (= x5140 0) x833 (x32 x5140)))
(define-fun x5240 ((x5140 Real)) Real (ite (= x5140 x4127) x2130 (x4952 x5140)))
(define-fun x5504 ((x5140 Real)) Real (ite (= x2801 x5140) x3864 (x5240 x5140)))
(define-fun x724 ((x5140 Real)) Real (ite (= x5918 x5140) x5003 (x69 x5140)))
(define-fun x2246 ((x5140 Real)) Real (ite (= x5140 x3032) x1583 (x5504 x5140)))
(define-fun x50 ((x5140 Real)) Real (ite (= x5140 x5808) x2130 (x5810 x5140)))
(define-fun x4332 ((x5140 Real)) Real (ite (= x3546 x5140) x3783 (x50 x5140)))
(define-fun x1827 ((x5140 Real)) Real (ite (= x6011 x5140) x2759 (x919 x5140)))
(define-fun x2662 ((x5140 Real)) Real (ite (= x2149 x5140) x3730 (x4332 x5140)))
(define-fun x5050 ((x5140 Real)) Real (ite (= x4772 x5140) x3504 (x2102 x5140)))
(define-fun x6060 ((x5140 Real)) Real (ite (and x1327 x3690) (x2102 x5140) (x5050 x5140)))
(define-fun x2440 ((x5140 Real)) Real (ite (= x5140 x5394) x2888 (x2102 x5140)))
(define-fun x3843 ((x5140 Real)) Real (ite (and x716 x590) (x2102 x5140) (x2440 x5140)))
(define-fun x5059 ((x5140 Real)) Real (ite (= x5140 0) x2472 (x4317 x5140)))
(define-fun x4615 ((x5140 Real)) Real (ite (= 0 x5140) x2472 (x4640 x5140)))
(define-fun x5346 ((x5140 Real)) Real (ite (= x5140 0) x2472 (x293 x5140)))
(define-fun x1325 ((x5140 Real)) Real (ite (= 0 x5140) 1 (x819 x5140)))
(define-fun x5805 ((x5140 Real)) Real (ite x3869 (x819 x5140) (x1325 x5140)))
(define-fun x5393 ((x5140 Real)) Real (ite (= x5140 0) 1 (x819 x5140)))
(define-fun x4509 ((x5140 Real)) Real (ite x4728 (x819 x5140) (x5393 x5140)))
(define-fun x624 ((x5140 Real)) Real (ite x860 (ite x3684 (x5805 x5140) (x4509 x5140)) (x5273 x5140)))
(define-fun x3057 ((x5140 Real)) Real (ite (and (<= x4454 x5140) (> (+ x4454 x3504) x5140)) (x624 (+ (- x5140 x4454) 0)) (x731 x5140)))
(define-fun x4313 ((x5140 Real)) Real (ite (and x1841 (not x5449) x708) (x2539 x5140) (x1302 x5140)))
(define-fun x3121 ((x5140 Real)) Real (ite (= 274184521717934524641157099916833587231 x5140) x955 (x4313 x5140)))
(define-fun x3077 ((x5140 Real)) Real (ite (= x5140 x693) x3354 (x3121 x5140)))
(define-fun x1887 ((x5140 Real)) Real (ite (= x5140 0) 1 (x1117 x5140)))
(define-fun x4307 ((x5140 Real)) Real (ite x5724 (x1117 x5140) (x1887 x5140)))
(define-fun x4946 ((x5140 Real)) Real (ite (= 0 x5140) 1 (x1117 x5140)))
(define-fun x109 ((x5140 Real)) Real (ite x4628 (x1117 x5140) (x4946 x5140)))
(define-fun x5225 ((x5140 Real)) Real (ite x5149 (ite x3010 (x4307 x5140) (x109 x5140)) (x5509 x5140)))
(define-fun x2314 ((x5140 Real)) Real (ite (and (>= x5140 x411) (< x5140 (+ x2888 x411))) (x5225 (+ 0 (- x5140 x411))) (x151 x5140)))
(define-fun x1428 ((x5140 Real)) Real (ite (and (not x1694) x5731 x494) (x1083 x5140) (x1302 x5140)))
(define-fun x5011 ((x5140 Real)) Real (ite (= 274184521717934524641157099916833587231 x5140) x4472 (x1428 x5140)))
(define-fun x3365 ((x5140 Real)) Real (ite (= x5140 x2549) x3206 (x5011 x5140)))
(define-fun x3087 ((x5140 Real)) Real (ite (and x1327 x3690) (x731 x5140) (x3057 x5140)))
(define-fun x3778 ((x5140 Real)) Real (ite (and x716 x590) (x151 x5140) (x2314 x5140)))
(define-fun x3086 ((x5140 Real)) Real (ite (and (not x3865) x4632 x171) (x2644 x5140) (x3965 x5140)))
(define-fun x6024 ((x5140 Real)) Real (ite (= x5140 0) x1914 (x6006 x5140)))
(define-fun x1828 ((x5140 Real)) Real (ite (= x5140 0) x1914 (x1848 x5140)))
(define-fun x1826 ((x5140 Real)) Real (ite (= x5140 0) x4558 (x3064 x5140)))
(define-fun x3835 ((x5140 Real)) Real (ite (= x5140 0) x4558 (x3444 x5140)))
(define-fun x4209 ((x5140 Real)) Real (ite (= 0 x5140) x4558 (x3731 x5140)))
(define-fun x1571 ((x5140 Real)) Real (ite (= x5140 0) x4558 (x4347 x5140)))
(define-fun x2835 ((x5140 Real)) Real (ite (= x5140 0) x1774 (x5527 x5140)))
(define-fun x1184 ((x5140 Real)) Real (ite (= 0 x5140) x1774 (x3522 x5140)))
(define-fun x4974 ((x5140 Real)) Real (ite (= 0 x5140) x1774 (x918 x5140)))
(define-fun x4150 ((x5140 Real)) Real (ite (= x5140 x1303) x4557 (x4289 x5140)))
(define-fun x1082 ((x5140 Real)) Real (ite (= x4554 x5140) x2778 (x3798 x5140)))
(define-fun x3803 ((x5140 Real)) Real (ite (= x5140 0) x4825 (x2981 x5140)))
(define-fun x1133 ((x5140 Real)) Real (ite (= 0 x5140) x4825 (x5679 x5140)))
(define-fun x4279 ((x5140 Real)) Real (ite (= x5140 0) x4558 (x3392 x5140)))
(define-fun x1317 ((x5140 Real)) Real (ite (= x5140 0) x4558 (x4011 x5140)))
(define-fun x4631 ((x5140 Real)) Real (ite (= x5140 0) x4558 (x4413 x5140)))
(define-fun x851 ((x5140 Real)) Real (ite (= x5140 0) x4558 (x32 x5140)))
(define-fun x6077 ((x5140 Real)) Real (ite (= x5140 0) x5470 (x4317 x5140)))
(define-fun x5395 ((x5140 Real)) Real (ite (= 0 x5140) x5470 (x4640 x5140)))
(define-fun x4924 ((x5140 Real)) Real (ite (= x5140 0) x5470 (x293 x5140)))
(define-fun x1953 ((x5140 Real)) Real (ite (= x5140 x693) x4324 (x3077 x5140)))
(define-fun x872 ((x5140 Real)) Real (ite (= x2549 x5140) x25 (x3365 x5140)))
(define-fun x2653 ((x5140 Real)) Real (ite (= 0 x5140) x3866 (x1378 x5140)))
(define-fun x5459 ((x5140 Real)) Real (ite (= 0 x5140) x2471 (x1378 x5140)))
(define-fun x1339 ((x5140 Real)) Real (ite (= x5140 0) x1546 (x5655 x5140)))
(define-fun x5866 ((x5140 Real)) Real (ite (= 0 x5140) x5822 (x5655 x5140)))
(define-fun x4219 ((x5140 Real)) Real (ite (= 0 x5140) x366 (x4286 x5140)))
(define-fun x4230 ((x5140 Real)) Real (ite (= x5140 0) x2943 (x4286 x5140)))
(define-fun x944 ((x5140 Real)) Real (ite (= 0 x5140) x2076 (x1873 x5140)))
(define-fun x1755 ((x5140 Real)) Real (ite (= 0 x5140) x4990 (x1873 x5140)))
(define-fun x4437 ((x5140 Real)) Real (ite (= x5140 0) x1947 (x213 x5140)))
(define-fun x5456 ((x5140 Real)) Real (ite (= x5140 0) x1505 (x213 x5140)))
(define-fun x5542 ((x5140 Real)) Real (ite (= x5140 0) x1260 (x5699 x5140)))
(define-fun x4636 ((x5140 Real)) Real (ite (= 0 x5140) x4626 (x5699 x5140)))
(define-fun x774 ((x5140 Real)) Real (ite (= 0 x5140) x2736 (x1592 x5140)))
(define-fun x2902 ((x5140 Real)) Real (ite (= 0 x5140) x1540 (x1592 x5140)))
(define-fun x2524 ((x5140 Real)) Real (ite (= x5140 0) x5314 (x4049 x5140)))
(define-fun x1795 ((x5140 Real)) Real (ite (= 0 x5140) x4337 (x4049 x5140)))
(define-fun x4540 ((x5140 Real)) Real (ite (= x5140 0) x5874 (x3540 x5140)))
(define-fun x4501 ((x5140 Real)) Real (ite (= x5140 0) x1680 (x3540 x5140)))
(define-fun x1993 ((x5140 Real)) Real (ite (= x5140 0) x3160 (x2185 x5140)))
(define-fun x3956 ((x5140 Real)) Real (ite (= 0 x5140) x4331 (x2185 x5140)))
(assert (axiom_frac_bound (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x458 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x5573 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2789 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x4120 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5063 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5481 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x5483 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x6163 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x813 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1028 x5681 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1123 x5348 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156 32 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353 32 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x2043 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2009 x4745 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2160 x2970 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2320 x1055 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x140 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2452 x2017 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2477 x276 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2569 x5035 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2593 x5111 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2897 x1232 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2921 x5742 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3013 x3753 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3048 x4909 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3339 x2097 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3633 x4873 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3781 x2105 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 x3621 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4120 32 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4232 x4061 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4244 1000000000000000000 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x463 x5776 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4698 x842 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4733 x5727 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4929 1000000000000000000 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5085 x4637 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5202 x5246 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5246 x1160 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5287 x4165 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5780 x1766 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5798 32 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5833 x2592 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6004 x5443 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6144 32 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6163 32 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x813 32 (uninterp_frac (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x458 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x5573 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2789 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x4120 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5063 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5481 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5483 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x6163 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x813 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1028 x5681 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1123 x5348 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1156 32 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1353 32 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1410 x2043 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2009 x4745 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2160 x2970 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2320 x1055 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2452 x140 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2452 x2017 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2477 x276 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2569 x5035 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2593 x5111 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2897 x1232 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2921 x5742 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3013 x3753 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3048 x4909 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3339 x2097 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3633 x4873 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3781 x2105 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x409 x3621 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4120 32 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4232 x4061 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4244 1000000000000000000 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x463 x5776 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4698 x842 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4733 x5727 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4929 1000000000000000000 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5085 x4637 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5202 x5246 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5246 x1160 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5287 x4165 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5780 x1766 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5798 32 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5833 x2592 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6004 x5443 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6144 32 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6163 32 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x813 32 (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x458 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x5573 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2789 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x4120 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5063 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5481 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5483 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x6163 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x813 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1028 x5681 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1123 x5348 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1156 32 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1353 32 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1410 x2043 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2009 x4745 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2160 x2970 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2320 x1055 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2452 x140 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2452 x2017 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2477 x276 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2569 x5035 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2593 x5111 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2897 x1232 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2921 x5742 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3013 x3753 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3048 x4909 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3339 x2097 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3633 x4873 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3781 x2105 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x409 x3621 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4120 32 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4232 x4061 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4244 1000000000000000000 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x463 x5776 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4698 x842 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4733 x5727 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4929 1000000000000000000 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5085 x4637 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5202 x5246 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5246 x1160 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5287 x4165 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5780 x1766 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5798 32 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5833 x2592 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6004 x5443 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6144 32 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6163 32 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x813 32 (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x458 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x5573 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2789 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x4120 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5063 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5481 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5483 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x6163 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x813 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1028 x5681 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1123 x5348 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1156 32 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1353 32 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1410 x2043 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2009 x4745 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2160 x2970 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2320 x1055 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2452 x140 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2452 x2017 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2477 x276 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2569 x5035 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2593 x5111 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2897 x1232 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2921 x5742 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3013 x3753 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3048 x4909 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3339 x2097 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3633 x4873 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3781 x2105 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x409 x3621 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4120 32 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4232 x4061 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4244 1000000000000000000 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x463 x5776 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4698 x842 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4733 x5727 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4929 1000000000000000000 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5085 x4637 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5202 x5246 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5246 x1160 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5287 x4165 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5780 x1766 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5798 32 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5833 x2592 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6004 x5443 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6144 32 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6163 32 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x813 32 (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x458 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x5573 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2789 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x4120 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5063 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5481 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x5483 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x6163 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x813 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1028 x5681 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1123 x5348 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1156 32 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1353 32 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1410 x2043 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2009 x4745 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2160 x2970 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2320 x1055 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2452 x140 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2452 x2017 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2477 x276 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2569 x5035 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2593 x5111 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2897 x1232 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2921 x5742 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3013 x3753 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3048 x4909 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3339 x2097 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3633 x4873 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3781 x2105 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x409 x3621 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4120 32 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4232 x4061 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4244 1000000000000000000 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x463 x5776 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4698 x842 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4733 x5727 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x4929 1000000000000000000 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5085 x4637 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5202 x5246 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5246 x1160 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5287 x4165 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5780 x1766 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5798 32 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x5833 x2592 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6004 x5443 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6144 32 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x6163 32 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x813 32 (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 1000000000000000000 x458 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 1000000000000000000 x5573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 32 x2789 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 32 x4120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 32 x5063 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 32 x5481 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 32 x5483 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 32 x6163 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 32 x813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x1028 x5681 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x1123 x5348 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x1156 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x1353 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x1410 x2043 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2009 x4745 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2160 x2970 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2320 x1055 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2452 x140 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2452 x2017 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2477 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2569 x5035 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2593 x5111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2897 x1232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x2921 x5742 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x3013 x3753 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x3048 x4909 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x3339 x2097 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x3633 x4873 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x3781 x2105 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x409 x3621 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x4120 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x4232 x4061 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x4244 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x463 x5776 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x4698 x842 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x4733 x5727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x4929 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x5085 x4637 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x5202 x5246 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x5246 x1160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x5287 x4165 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x5780 x1766 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x5798 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x5833 x2592 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x6004 x5443 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x6144 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x6163 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776 x813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776)))
(assert (axiom_frac_bound x1220 x3428))
(assert (axiom_frac_zero x1220 x3428 1000000000000000000 x458 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 1000000000000000000 x5573 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 32 x2789 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 32 x4120 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 32 x5063 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 32 x5481 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 32 x5483 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 32 x6163 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 32 x813 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x1028 x5681 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x1123 x5348 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x1156 32 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x1353 32 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x1410 x2043 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2009 x4745 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2160 x2970 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2320 x1055 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2452 x140 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2452 x2017 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2477 x276 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2569 x5035 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2593 x5111 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2897 x1232 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x2921 x5742 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x3013 x3753 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x3048 x4909 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x3339 x2097 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x3633 x4873 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x3781 x2105 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x409 x3621 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x4120 32 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x4232 x4061 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x4244 1000000000000000000 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x463 x5776 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x4698 x842 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x4733 x5727 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x4929 1000000000000000000 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x5085 x4637 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x5202 x5246 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x5246 x1160 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x5287 x4165 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x5780 x1766 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x5798 32 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x5833 x2592 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x6004 x5443 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x6144 32 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x6163 32 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_zero x1220 x3428 x813 32 (uninterp_frac x1220 x3428)))
(assert (axiom_frac_bound x1287 x1667))
(assert (axiom_frac_zero x1287 x1667 1000000000000000000 x458 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 1000000000000000000 x5573 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 32 x2789 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 32 x4120 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 32 x5063 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 32 x5481 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 32 x5483 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 32 x6163 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 32 x813 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x1028 x5681 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x1123 x5348 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x1156 32 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x1353 32 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x1410 x2043 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2009 x4745 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2160 x2970 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2320 x1055 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2452 x140 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2452 x2017 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2477 x276 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2569 x5035 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2593 x5111 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2897 x1232 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x2921 x5742 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x3013 x3753 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x3048 x4909 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x3339 x2097 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x3633 x4873 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x3781 x2105 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x409 x3621 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x4120 32 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x4232 x4061 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x4244 1000000000000000000 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x463 x5776 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x4698 x842 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x4733 x5727 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x4929 1000000000000000000 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x5085 x4637 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x5202 x5246 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x5246 x1160 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x5287 x4165 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x5780 x1766 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x5798 32 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x5833 x2592 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x6004 x5443 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x6144 32 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x6163 32 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_zero x1287 x1667 x813 32 (uninterp_frac x1287 x1667)))
(assert (axiom_frac_bound x1368 2))
(assert (axiom_frac_zero x1368 2 1000000000000000000 x458 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 1000000000000000000 x5573 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 32 x2789 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 32 x4120 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 32 x5063 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 32 x5481 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 32 x5483 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 32 x6163 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 32 x813 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x1028 x5681 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x1123 x5348 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x1156 32 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x1353 32 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x1410 x2043 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2009 x4745 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2160 x2970 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2320 x1055 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2452 x140 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2452 x2017 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2477 x276 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2569 x5035 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2593 x5111 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2897 x1232 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x2921 x5742 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x3013 x3753 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x3048 x4909 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x3339 x2097 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x3633 x4873 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x3781 x2105 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x409 x3621 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x4120 32 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x4232 x4061 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x4244 1000000000000000000 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x463 x5776 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x4698 x842 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x4733 x5727 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x4929 1000000000000000000 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x5085 x4637 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x5202 x5246 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x5246 x1160 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x5287 x4165 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x5780 x1766 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x5798 32 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x5833 x2592 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x6004 x5443 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x6144 32 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x6163 32 (uninterp_frac x1368 2)))
(assert (axiom_frac_zero x1368 2 x813 32 (uninterp_frac x1368 2)))
(assert (axiom_frac_bound x1962 x2618))
(assert (axiom_frac_zero x1962 x2618 1000000000000000000 x458 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 1000000000000000000 x5573 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 32 x2789 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 32 x4120 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 32 x5063 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 32 x5481 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 32 x5483 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 32 x6163 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 32 x813 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x1028 x5681 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x1123 x5348 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x1156 32 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x1353 32 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x1410 x2043 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2009 x4745 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2160 x2970 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2320 x1055 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2452 x140 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2452 x2017 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2477 x276 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2569 x5035 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2593 x5111 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2897 x1232 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x2921 x5742 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x3013 x3753 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x3048 x4909 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x3339 x2097 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x3633 x4873 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x3781 x2105 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x409 x3621 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x4120 32 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x4232 x4061 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x4244 1000000000000000000 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x463 x5776 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x4698 x842 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x4733 x5727 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x4929 1000000000000000000 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x5085 x4637 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x5202 x5246 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x5246 x1160 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x5287 x4165 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x5780 x1766 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x5798 32 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x5833 x2592 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x6004 x5443 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x6144 32 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x6163 32 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_zero x1962 x2618 x813 32 (uninterp_frac x1962 x2618)))
(assert (axiom_frac_bound x222 x881))
(assert (axiom_frac_zero x222 x881 1000000000000000000 x458 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 1000000000000000000 x5573 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 32 x2789 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 32 x4120 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 32 x5063 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 32 x5481 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 32 x5483 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 32 x6163 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 32 x813 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x1028 x5681 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x1123 x5348 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x1156 32 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x1353 32 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x1410 x2043 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2009 x4745 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2160 x2970 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2320 x1055 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2452 x140 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2452 x2017 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2477 x276 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2569 x5035 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2593 x5111 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2897 x1232 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x2921 x5742 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x3013 x3753 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x3048 x4909 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x3339 x2097 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x3633 x4873 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x3781 x2105 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x409 x3621 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x4120 32 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x4232 x4061 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x4244 1000000000000000000 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x463 x5776 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x4698 x842 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x4733 x5727 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x4929 1000000000000000000 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x5085 x4637 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x5202 x5246 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x5246 x1160 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x5287 x4165 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x5780 x1766 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x5798 32 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x5833 x2592 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x6004 x5443 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x6144 32 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x6163 32 (uninterp_frac x222 x881)))
(assert (axiom_frac_zero x222 x881 x813 32 (uninterp_frac x222 x881)))
(assert (axiom_frac_bound x2233 x1682))
(assert (axiom_frac_zero x2233 x1682 1000000000000000000 x458 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 1000000000000000000 x5573 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 32 x2789 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 32 x4120 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 32 x5063 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 32 x5481 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 32 x5483 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 32 x6163 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 32 x813 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x1028 x5681 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x1123 x5348 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x1156 32 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x1353 32 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x1410 x2043 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2009 x4745 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2160 x2970 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2320 x1055 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2452 x140 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2452 x2017 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2477 x276 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2569 x5035 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2593 x5111 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2897 x1232 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x2921 x5742 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x3013 x3753 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x3048 x4909 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x3339 x2097 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x3633 x4873 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x3781 x2105 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x409 x3621 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x4120 32 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x4232 x4061 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x4244 1000000000000000000 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x463 x5776 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x4698 x842 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x4733 x5727 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x4929 1000000000000000000 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x5085 x4637 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x5202 x5246 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x5246 x1160 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x5287 x4165 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x5780 x1766 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x5798 32 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x5833 x2592 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x6004 x5443 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x6144 32 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x6163 32 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_zero x2233 x1682 x813 32 (uninterp_frac x2233 x1682)))
(assert (axiom_frac_bound x2315 1000000000000000000))
(assert (axiom_frac_zero x2315 1000000000000000000 1000000000000000000 x458 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 1000000000000000000 x5573 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 32 x2789 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 32 x4120 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 32 x5063 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 32 x5481 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 32 x5483 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 32 x6163 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 32 x813 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x1028 x5681 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x1123 x5348 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x1156 32 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x1353 32 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x1410 x2043 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2009 x4745 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2160 x2970 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2320 x1055 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2452 x140 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2452 x2017 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2477 x276 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2569 x5035 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2593 x5111 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2897 x1232 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x2921 x5742 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x3013 x3753 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x3048 x4909 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x3339 x2097 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x3633 x4873 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x3781 x2105 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x409 x3621 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x4120 32 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x4232 x4061 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x4244 1000000000000000000 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x463 x5776 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x4698 x842 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x4733 x5727 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x4929 1000000000000000000 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x5085 x4637 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x5202 x5246 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x5246 x1160 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x5287 x4165 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x5780 x1766 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x5798 32 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x5833 x2592 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x6004 x5443 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x6144 32 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x6163 32 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_zero x2315 1000000000000000000 x813 32 (uninterp_frac x2315 1000000000000000000)))
(assert (axiom_frac_bound x2386 1000000000000000000))
(assert (axiom_frac_zero x2386 1000000000000000000 1000000000000000000 x458 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 1000000000000000000 x5573 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 32 x2789 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 32 x4120 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 32 x5063 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 32 x5481 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 32 x5483 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 32 x6163 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 32 x813 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x1028 x5681 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x1123 x5348 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x1156 32 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x1353 32 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x1410 x2043 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2009 x4745 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2160 x2970 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2320 x1055 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2452 x140 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2452 x2017 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2477 x276 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2569 x5035 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2593 x5111 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2897 x1232 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x2921 x5742 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x3013 x3753 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x3048 x4909 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x3339 x2097 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x3633 x4873 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x3781 x2105 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x409 x3621 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x4120 32 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x4232 x4061 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x4244 1000000000000000000 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x463 x5776 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x4698 x842 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x4733 x5727 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x4929 1000000000000000000 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x5085 x4637 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x5202 x5246 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x5246 x1160 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x5287 x4165 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x5780 x1766 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x5798 32 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x5833 x2592 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x6004 x5443 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x6144 32 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x6163 32 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_zero x2386 1000000000000000000 x813 32 (uninterp_frac x2386 1000000000000000000)))
(assert (axiom_frac_bound x2476 1000000000000000000))
(assert (axiom_frac_zero x2476 1000000000000000000 1000000000000000000 x458 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 1000000000000000000 x5573 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 32 x2789 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 32 x4120 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 32 x5063 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 32 x5481 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 32 x5483 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 32 x6163 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 32 x813 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x1028 x5681 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x1123 x5348 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x1156 32 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x1353 32 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x1410 x2043 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2009 x4745 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2160 x2970 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2320 x1055 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2452 x140 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2452 x2017 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2477 x276 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2569 x5035 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2593 x5111 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2897 x1232 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x2921 x5742 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x3013 x3753 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x3048 x4909 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x3339 x2097 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x3633 x4873 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x3781 x2105 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x409 x3621 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x4120 32 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x4232 x4061 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x4244 1000000000000000000 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x463 x5776 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x4698 x842 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x4733 x5727 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x4929 1000000000000000000 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x5085 x4637 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x5202 x5246 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x5246 x1160 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x5287 x4165 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x5780 x1766 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x5798 32 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x5833 x2592 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x6004 x5443 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x6144 32 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x6163 32 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_zero x2476 1000000000000000000 x813 32 (uninterp_frac x2476 1000000000000000000)))
(assert (axiom_frac_bound x2536 x4000))
(assert (axiom_frac_zero x2536 x4000 1000000000000000000 x458 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 1000000000000000000 x5573 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 32 x2789 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 32 x4120 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 32 x5063 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 32 x5481 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 32 x5483 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 32 x6163 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 32 x813 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x1028 x5681 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x1123 x5348 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x1156 32 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x1353 32 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x1410 x2043 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2009 x4745 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2160 x2970 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2320 x1055 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2452 x140 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2452 x2017 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2477 x276 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2569 x5035 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2593 x5111 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2897 x1232 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x2921 x5742 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x3013 x3753 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x3048 x4909 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x3339 x2097 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x3633 x4873 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x3781 x2105 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x409 x3621 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x4120 32 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x4232 x4061 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x4244 1000000000000000000 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x463 x5776 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x4698 x842 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x4733 x5727 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x4929 1000000000000000000 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x5085 x4637 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x5202 x5246 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x5246 x1160 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x5287 x4165 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x5780 x1766 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x5798 32 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x5833 x2592 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x6004 x5443 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x6144 32 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x6163 32 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_zero x2536 x4000 x813 32 (uninterp_frac x2536 x4000)))
(assert (axiom_frac_bound x2552 x1639))
(assert (axiom_frac_zero x2552 x1639 1000000000000000000 x458 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 1000000000000000000 x5573 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 32 x2789 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 32 x4120 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 32 x5063 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 32 x5481 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 32 x5483 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 32 x6163 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 32 x813 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x1028 x5681 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x1123 x5348 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x1156 32 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x1353 32 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x1410 x2043 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2009 x4745 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2160 x2970 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2320 x1055 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2452 x140 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2452 x2017 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2477 x276 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2569 x5035 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2593 x5111 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2897 x1232 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x2921 x5742 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x3013 x3753 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x3048 x4909 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x3339 x2097 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x3633 x4873 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x3781 x2105 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x409 x3621 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x4120 32 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x4232 x4061 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x4244 1000000000000000000 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x463 x5776 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x4698 x842 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x4733 x5727 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x4929 1000000000000000000 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x5085 x4637 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x5202 x5246 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x5246 x1160 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x5287 x4165 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x5780 x1766 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x5798 32 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x5833 x2592 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x6004 x5443 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x6144 32 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x6163 32 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_zero x2552 x1639 x813 32 (uninterp_frac x2552 x1639)))
(assert (axiom_frac_bound x2582 x1778))
(assert (axiom_frac_zero x2582 x1778 1000000000000000000 x458 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 1000000000000000000 x5573 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 32 x2789 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 32 x4120 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 32 x5063 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 32 x5481 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 32 x5483 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 32 x6163 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 32 x813 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x1028 x5681 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x1123 x5348 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x1156 32 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x1353 32 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x1410 x2043 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2009 x4745 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2160 x2970 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2320 x1055 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2452 x140 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2452 x2017 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2477 x276 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2569 x5035 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2593 x5111 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2897 x1232 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x2921 x5742 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x3013 x3753 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x3048 x4909 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x3339 x2097 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x3633 x4873 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x3781 x2105 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x409 x3621 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x4120 32 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x4232 x4061 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x4244 1000000000000000000 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x463 x5776 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x4698 x842 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x4733 x5727 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x4929 1000000000000000000 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x5085 x4637 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x5202 x5246 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x5246 x1160 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x5287 x4165 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x5780 x1766 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x5798 32 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x5833 x2592 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x6004 x5443 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x6144 32 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x6163 32 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_zero x2582 x1778 x813 32 (uninterp_frac x2582 x1778)))
(assert (axiom_frac_bound x2616 x463))
(assert (axiom_frac_zero x2616 x463 1000000000000000000 x458 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 1000000000000000000 x5573 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 32 x2789 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 32 x4120 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 32 x5063 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 32 x5481 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 32 x5483 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 32 x6163 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 32 x813 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x1028 x5681 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x1123 x5348 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x1156 32 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x1353 32 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x1410 x2043 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2009 x4745 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2160 x2970 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2320 x1055 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2452 x140 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2452 x2017 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2477 x276 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2569 x5035 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2593 x5111 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2897 x1232 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x2921 x5742 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x3013 x3753 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x3048 x4909 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x3339 x2097 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x3633 x4873 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x3781 x2105 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x409 x3621 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x4120 32 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x4232 x4061 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x4244 1000000000000000000 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x463 x5776 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x4698 x842 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x4733 x5727 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x4929 1000000000000000000 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x5085 x4637 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x5202 x5246 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x5246 x1160 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x5287 x4165 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x5780 x1766 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x5798 32 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x5833 x2592 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x6004 x5443 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x6144 32 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x6163 32 (uninterp_frac x2616 x463)))
(assert (axiom_frac_zero x2616 x463 x813 32 (uninterp_frac x2616 x463)))
(assert (axiom_frac_bound x2746 x3671))
(assert (axiom_frac_zero x2746 x3671 1000000000000000000 x458 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 1000000000000000000 x5573 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 32 x2789 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 32 x4120 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 32 x5063 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 32 x5481 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 32 x5483 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 32 x6163 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 32 x813 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x1028 x5681 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x1123 x5348 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x1156 32 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x1353 32 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x1410 x2043 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2009 x4745 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2160 x2970 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2320 x1055 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2452 x140 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2452 x2017 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2477 x276 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2569 x5035 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2593 x5111 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2897 x1232 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x2921 x5742 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x3013 x3753 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x3048 x4909 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x3339 x2097 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x3633 x4873 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x3781 x2105 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x409 x3621 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x4120 32 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x4232 x4061 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x4244 1000000000000000000 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x463 x5776 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x4698 x842 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x4733 x5727 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x4929 1000000000000000000 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x5085 x4637 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x5202 x5246 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x5246 x1160 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x5287 x4165 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x5780 x1766 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x5798 32 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x5833 x2592 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x6004 x5443 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x6144 32 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x6163 32 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_zero x2746 x3671 x813 32 (uninterp_frac x2746 x3671)))
(assert (axiom_frac_bound x2852 x5213))
(assert (axiom_frac_zero x2852 x5213 1000000000000000000 x458 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 1000000000000000000 x5573 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 32 x2789 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 32 x4120 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 32 x5063 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 32 x5481 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 32 x5483 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 32 x6163 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 32 x813 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x1028 x5681 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x1123 x5348 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x1156 32 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x1353 32 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x1410 x2043 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2009 x4745 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2160 x2970 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2320 x1055 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2452 x140 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2452 x2017 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2477 x276 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2569 x5035 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2593 x5111 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2897 x1232 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x2921 x5742 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x3013 x3753 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x3048 x4909 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x3339 x2097 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x3633 x4873 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x3781 x2105 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x409 x3621 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x4120 32 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x4232 x4061 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x4244 1000000000000000000 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x463 x5776 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x4698 x842 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x4733 x5727 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x4929 1000000000000000000 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x5085 x4637 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x5202 x5246 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x5246 x1160 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x5287 x4165 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x5780 x1766 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x5798 32 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x5833 x2592 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x6004 x5443 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x6144 32 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x6163 32 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_zero x2852 x5213 x813 32 (uninterp_frac x2852 x5213)))
(assert (axiom_frac_bound x3236 x3461))
(assert (axiom_frac_zero x3236 x3461 1000000000000000000 x458 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 1000000000000000000 x5573 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 32 x2789 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 32 x4120 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 32 x5063 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 32 x5481 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 32 x5483 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 32 x6163 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 32 x813 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x1028 x5681 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x1123 x5348 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x1156 32 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x1353 32 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x1410 x2043 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2009 x4745 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2160 x2970 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2320 x1055 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2452 x140 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2452 x2017 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2477 x276 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2569 x5035 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2593 x5111 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2897 x1232 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x2921 x5742 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x3013 x3753 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x3048 x4909 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x3339 x2097 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x3633 x4873 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x3781 x2105 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x409 x3621 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x4120 32 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x4232 x4061 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x4244 1000000000000000000 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x463 x5776 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x4698 x842 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x4733 x5727 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x4929 1000000000000000000 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x5085 x4637 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x5202 x5246 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x5246 x1160 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x5287 x4165 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x5780 x1766 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x5798 32 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x5833 x2592 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x6004 x5443 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x6144 32 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x6163 32 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_zero x3236 x3461 x813 32 (uninterp_frac x3236 x3461)))
(assert (axiom_frac_bound x335 x5213))
(assert (axiom_frac_zero x335 x5213 1000000000000000000 x458 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 1000000000000000000 x5573 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 32 x2789 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 32 x4120 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 32 x5063 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 32 x5481 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 32 x5483 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 32 x6163 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 32 x813 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x1028 x5681 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x1123 x5348 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x1156 32 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x1353 32 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x1410 x2043 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2009 x4745 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2160 x2970 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2320 x1055 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2452 x140 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2452 x2017 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2477 x276 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2569 x5035 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2593 x5111 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2897 x1232 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x2921 x5742 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x3013 x3753 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x3048 x4909 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x3339 x2097 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x3633 x4873 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x3781 x2105 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x409 x3621 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x4120 32 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x4232 x4061 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x4244 1000000000000000000 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x463 x5776 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x4698 x842 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x4733 x5727 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x4929 1000000000000000000 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x5085 x4637 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x5202 x5246 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x5246 x1160 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x5287 x4165 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x5780 x1766 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x5798 32 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x5833 x2592 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x6004 x5443 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x6144 32 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x6163 32 (uninterp_frac x335 x5213)))
(assert (axiom_frac_zero x335 x5213 x813 32 (uninterp_frac x335 x5213)))
(assert (axiom_frac_bound x3558 1000000000000000000))
(assert (axiom_frac_zero x3558 1000000000000000000 1000000000000000000 x458 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 1000000000000000000 x5573 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 32 x2789 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 32 x4120 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 32 x5063 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 32 x5481 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 32 x5483 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 32 x6163 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 32 x813 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x1028 x5681 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x1123 x5348 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x1156 32 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x1353 32 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x1410 x2043 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2009 x4745 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2160 x2970 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2320 x1055 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2452 x140 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2452 x2017 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2477 x276 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2569 x5035 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2593 x5111 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2897 x1232 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x2921 x5742 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x3013 x3753 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x3048 x4909 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x3339 x2097 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x3633 x4873 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x3781 x2105 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x409 x3621 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x4120 32 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x4232 x4061 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x4244 1000000000000000000 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x463 x5776 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x4698 x842 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x4733 x5727 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x4929 1000000000000000000 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x5085 x4637 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x5202 x5246 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x5246 x1160 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x5287 x4165 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x5780 x1766 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x5798 32 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x5833 x2592 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x6004 x5443 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x6144 32 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x6163 32 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_zero x3558 1000000000000000000 x813 32 (uninterp_frac x3558 1000000000000000000)))
(assert (axiom_frac_bound x3720 x4445))
(assert (axiom_frac_zero x3720 x4445 1000000000000000000 x458 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 1000000000000000000 x5573 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 32 x2789 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 32 x4120 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 32 x5063 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 32 x5481 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 32 x5483 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 32 x6163 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 32 x813 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x1028 x5681 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x1123 x5348 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x1156 32 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x1353 32 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x1410 x2043 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2009 x4745 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2160 x2970 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2320 x1055 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2452 x140 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2452 x2017 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2477 x276 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2569 x5035 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2593 x5111 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2897 x1232 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x2921 x5742 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x3013 x3753 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x3048 x4909 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x3339 x2097 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x3633 x4873 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x3781 x2105 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x409 x3621 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x4120 32 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x4232 x4061 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x4244 1000000000000000000 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x463 x5776 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x4698 x842 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x4733 x5727 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x4929 1000000000000000000 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x5085 x4637 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x5202 x5246 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x5246 x1160 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x5287 x4165 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x5780 x1766 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x5798 32 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x5833 x2592 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x6004 x5443 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x6144 32 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x6163 32 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_zero x3720 x4445 x813 32 (uninterp_frac x3720 x4445)))
(assert (axiom_frac_bound x3733 x4738))
(assert (axiom_frac_zero x3733 x4738 1000000000000000000 x458 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 1000000000000000000 x5573 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 32 x2789 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 32 x4120 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 32 x5063 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 32 x5481 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 32 x5483 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 32 x6163 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 32 x813 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x1028 x5681 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x1123 x5348 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x1156 32 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x1353 32 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x1410 x2043 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2009 x4745 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2160 x2970 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2320 x1055 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2452 x140 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2452 x2017 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2477 x276 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2569 x5035 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2593 x5111 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2897 x1232 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x2921 x5742 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x3013 x3753 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x3048 x4909 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x3339 x2097 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x3633 x4873 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x3781 x2105 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x409 x3621 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x4120 32 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x4232 x4061 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x4244 1000000000000000000 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x463 x5776 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x4698 x842 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x4733 x5727 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x4929 1000000000000000000 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x5085 x4637 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x5202 x5246 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x5246 x1160 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x5287 x4165 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x5780 x1766 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x5798 32 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x5833 x2592 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x6004 x5443 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x6144 32 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x6163 32 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_zero x3733 x4738 x813 32 (uninterp_frac x3733 x4738)))
(assert (axiom_frac_bound x4016 x2970))
(assert (axiom_frac_zero x4016 x2970 1000000000000000000 x458 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 1000000000000000000 x5573 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 32 x2789 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 32 x4120 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 32 x5063 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 32 x5481 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 32 x5483 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 32 x6163 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 32 x813 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x1028 x5681 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x1123 x5348 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x1156 32 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x1353 32 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x1410 x2043 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2009 x4745 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2160 x2970 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2320 x1055 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2452 x140 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2452 x2017 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2477 x276 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2569 x5035 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2593 x5111 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2897 x1232 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x2921 x5742 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x3013 x3753 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x3048 x4909 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x3339 x2097 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x3633 x4873 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x3781 x2105 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x409 x3621 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x4120 32 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x4232 x4061 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x4244 1000000000000000000 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x463 x5776 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x4698 x842 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x4733 x5727 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x4929 1000000000000000000 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x5085 x4637 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x5202 x5246 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x5246 x1160 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x5287 x4165 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x5780 x1766 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x5798 32 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x5833 x2592 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x6004 x5443 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x6144 32 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x6163 32 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_zero x4016 x2970 x813 32 (uninterp_frac x4016 x2970)))
(assert (axiom_frac_bound x4121 x3751))
(assert (axiom_frac_zero x4121 x3751 1000000000000000000 x458 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 1000000000000000000 x5573 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 32 x2789 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 32 x4120 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 32 x5063 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 32 x5481 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 32 x5483 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 32 x6163 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 32 x813 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x1028 x5681 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x1123 x5348 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x1156 32 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x1353 32 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x1410 x2043 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2009 x4745 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2160 x2970 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2320 x1055 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2452 x140 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2452 x2017 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2477 x276 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2569 x5035 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2593 x5111 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2897 x1232 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x2921 x5742 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x3013 x3753 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x3048 x4909 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x3339 x2097 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x3633 x4873 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x3781 x2105 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x409 x3621 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x4120 32 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x4232 x4061 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x4244 1000000000000000000 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x463 x5776 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x4698 x842 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x4733 x5727 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x4929 1000000000000000000 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x5085 x4637 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x5202 x5246 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x5246 x1160 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x5287 x4165 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x5780 x1766 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x5798 32 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x5833 x2592 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x6004 x5443 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x6144 32 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x6163 32 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_zero x4121 x3751 x813 32 (uninterp_frac x4121 x3751)))
(assert (axiom_frac_bound x4202 x5952))
(assert (axiom_frac_zero x4202 x5952 1000000000000000000 x458 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 1000000000000000000 x5573 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 32 x2789 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 32 x4120 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 32 x5063 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 32 x5481 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 32 x5483 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 32 x6163 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 32 x813 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x1028 x5681 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x1123 x5348 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x1156 32 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x1353 32 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x1410 x2043 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2009 x4745 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2160 x2970 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2320 x1055 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2452 x140 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2452 x2017 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2477 x276 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2569 x5035 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2593 x5111 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2897 x1232 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x2921 x5742 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x3013 x3753 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x3048 x4909 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x3339 x2097 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x3633 x4873 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x3781 x2105 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x409 x3621 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x4120 32 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x4232 x4061 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x4244 1000000000000000000 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x463 x5776 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x4698 x842 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x4733 x5727 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x4929 1000000000000000000 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x5085 x4637 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x5202 x5246 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x5246 x1160 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x5287 x4165 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x5780 x1766 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x5798 32 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x5833 x2592 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x6004 x5443 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x6144 32 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x6163 32 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_zero x4202 x5952 x813 32 (uninterp_frac x4202 x5952)))
(assert (axiom_frac_bound x4282 x5952))
(assert (axiom_frac_zero x4282 x5952 1000000000000000000 x458 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 1000000000000000000 x5573 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 32 x2789 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 32 x4120 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 32 x5063 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 32 x5481 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 32 x5483 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 32 x6163 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 32 x813 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x1028 x5681 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x1123 x5348 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x1156 32 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x1353 32 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x1410 x2043 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2009 x4745 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2160 x2970 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2320 x1055 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2452 x140 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2452 x2017 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2477 x276 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2569 x5035 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2593 x5111 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2897 x1232 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x2921 x5742 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x3013 x3753 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x3048 x4909 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x3339 x2097 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x3633 x4873 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x3781 x2105 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x409 x3621 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x4120 32 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x4232 x4061 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x4244 1000000000000000000 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x463 x5776 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x4698 x842 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x4733 x5727 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x4929 1000000000000000000 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x5085 x4637 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x5202 x5246 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x5246 x1160 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x5287 x4165 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x5780 x1766 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x5798 32 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x5833 x2592 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x6004 x5443 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x6144 32 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x6163 32 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_zero x4282 x5952 x813 32 (uninterp_frac x4282 x5952)))
(assert (axiom_frac_bound x4667 1000000000000000000))
(assert (axiom_frac_zero x4667 1000000000000000000 1000000000000000000 x458 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 1000000000000000000 x5573 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 32 x2789 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 32 x4120 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 32 x5063 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 32 x5481 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 32 x5483 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 32 x6163 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 32 x813 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x1028 x5681 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x1123 x5348 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x1156 32 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x1353 32 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x1410 x2043 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2009 x4745 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2160 x2970 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2320 x1055 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2452 x140 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2452 x2017 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2477 x276 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2569 x5035 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2593 x5111 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2897 x1232 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x2921 x5742 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x3013 x3753 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x3048 x4909 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x3339 x2097 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x3633 x4873 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x3781 x2105 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x409 x3621 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x4120 32 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x4232 x4061 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x4244 1000000000000000000 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x463 x5776 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x4698 x842 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x4733 x5727 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x4929 1000000000000000000 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x5085 x4637 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x5202 x5246 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x5246 x1160 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x5287 x4165 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x5780 x1766 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x5798 32 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x5833 x2592 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x6004 x5443 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x6144 32 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x6163 32 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_zero x4667 1000000000000000000 x813 32 (uninterp_frac x4667 1000000000000000000)))
(assert (axiom_frac_bound x4887 2))
(assert (axiom_frac_zero x4887 2 1000000000000000000 x458 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 1000000000000000000 x5573 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 32 x2789 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 32 x4120 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 32 x5063 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 32 x5481 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 32 x5483 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 32 x6163 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 32 x813 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x1028 x5681 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x1123 x5348 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x1156 32 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x1353 32 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x1410 x2043 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2009 x4745 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2160 x2970 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2320 x1055 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2452 x140 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2452 x2017 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2477 x276 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2569 x5035 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2593 x5111 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2897 x1232 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x2921 x5742 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x3013 x3753 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x3048 x4909 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x3339 x2097 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x3633 x4873 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x3781 x2105 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x409 x3621 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x4120 32 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x4232 x4061 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x4244 1000000000000000000 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x463 x5776 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x4698 x842 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x4733 x5727 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x4929 1000000000000000000 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x5085 x4637 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x5202 x5246 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x5246 x1160 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x5287 x4165 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x5780 x1766 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x5798 32 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x5833 x2592 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x6004 x5443 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x6144 32 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x6163 32 (uninterp_frac x4887 2)))
(assert (axiom_frac_zero x4887 2 x813 32 (uninterp_frac x4887 2)))
(assert (axiom_frac_bound x5234 x5348))
(assert (axiom_frac_zero x5234 x5348 1000000000000000000 x458 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 1000000000000000000 x5573 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 32 x2789 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 32 x4120 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 32 x5063 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 32 x5481 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 32 x5483 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 32 x6163 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 32 x813 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x1028 x5681 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x1123 x5348 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x1156 32 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x1353 32 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x1410 x2043 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2009 x4745 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2160 x2970 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2320 x1055 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2452 x140 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2452 x2017 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2477 x276 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2569 x5035 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2593 x5111 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2897 x1232 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x2921 x5742 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x3013 x3753 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x3048 x4909 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x3339 x2097 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x3633 x4873 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x3781 x2105 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x409 x3621 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x4120 32 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x4232 x4061 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x4244 1000000000000000000 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x463 x5776 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x4698 x842 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x4733 x5727 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x4929 1000000000000000000 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x5085 x4637 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x5202 x5246 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x5246 x1160 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x5287 x4165 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x5780 x1766 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x5798 32 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x5833 x2592 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x6004 x5443 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x6144 32 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x6163 32 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_zero x5234 x5348 x813 32 (uninterp_frac x5234 x5348)))
(assert (axiom_frac_bound x5453 x2320))
(assert (axiom_frac_zero x5453 x2320 1000000000000000000 x458 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 1000000000000000000 x5573 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 32 x2789 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 32 x4120 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 32 x5063 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 32 x5481 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 32 x5483 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 32 x6163 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 32 x813 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x1028 x5681 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x1123 x5348 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x1156 32 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x1353 32 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x1410 x2043 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2009 x4745 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2160 x2970 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2320 x1055 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2452 x140 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2452 x2017 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2477 x276 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2569 x5035 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2593 x5111 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2897 x1232 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x2921 x5742 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x3013 x3753 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x3048 x4909 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x3339 x2097 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x3633 x4873 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x3781 x2105 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x409 x3621 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x4120 32 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x4232 x4061 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x4244 1000000000000000000 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x463 x5776 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x4698 x842 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x4733 x5727 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x4929 1000000000000000000 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x5085 x4637 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x5202 x5246 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x5246 x1160 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x5287 x4165 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x5780 x1766 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x5798 32 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x5833 x2592 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x6004 x5443 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x6144 32 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x6163 32 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_zero x5453 x2320 x813 32 (uninterp_frac x5453 x2320)))
(assert (axiom_frac_bound x5545 2))
(assert (axiom_frac_zero x5545 2 1000000000000000000 x458 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 1000000000000000000 x5573 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 32 x2789 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 32 x4120 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 32 x5063 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 32 x5481 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 32 x5483 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 32 x6163 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 32 x813 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x1028 x5681 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x1123 x5348 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x1156 32 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x1353 32 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x1410 x2043 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2009 x4745 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2160 x2970 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2320 x1055 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2452 x140 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2452 x2017 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2477 x276 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2569 x5035 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2593 x5111 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2897 x1232 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x2921 x5742 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x3013 x3753 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x3048 x4909 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x3339 x2097 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x3633 x4873 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x3781 x2105 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x409 x3621 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x4120 32 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x4232 x4061 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x4244 1000000000000000000 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x463 x5776 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x4698 x842 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x4733 x5727 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x4929 1000000000000000000 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x5085 x4637 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x5202 x5246 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x5246 x1160 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x5287 x4165 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x5780 x1766 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x5798 32 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x5833 x2592 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x6004 x5443 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x6144 32 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x6163 32 (uninterp_frac x5545 2)))
(assert (axiom_frac_zero x5545 2 x813 32 (uninterp_frac x5545 2)))
(assert (axiom_frac_bound x5949 2))
(assert (axiom_frac_zero x5949 2 1000000000000000000 x458 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 1000000000000000000 x5573 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 32 x2789 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 32 x4120 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 32 x5063 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 32 x5481 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 32 x5483 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 32 x6163 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 32 x813 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x1028 x5681 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x1123 x5348 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x1156 32 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x1353 32 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x1410 x2043 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2009 x4745 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2160 x2970 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2320 x1055 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2452 x140 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2452 x2017 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2477 x276 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2569 x5035 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2593 x5111 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2897 x1232 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x2921 x5742 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x3013 x3753 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x3048 x4909 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x3339 x2097 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x3633 x4873 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x3781 x2105 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x409 x3621 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x4120 32 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x4232 x4061 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x4244 1000000000000000000 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x463 x5776 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x4698 x842 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x4733 x5727 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x4929 1000000000000000000 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x5085 x4637 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x5202 x5246 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x5246 x1160 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x5287 x4165 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x5780 x1766 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x5798 32 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x5833 x2592 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x6004 x5443 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x6144 32 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x6163 32 (uninterp_frac x5949 2)))
(assert (axiom_frac_zero x5949 2 x813 32 (uninterp_frac x5949 2)))
(assert (axiom_frac_bound x667 x1650))
(assert (axiom_frac_zero x667 x1650 1000000000000000000 x458 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 1000000000000000000 x5573 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 32 x2789 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 32 x4120 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 32 x5063 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 32 x5481 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 32 x5483 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 32 x6163 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 32 x813 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x1028 x5681 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x1123 x5348 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x1156 32 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x1353 32 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x1410 x2043 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2009 x4745 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2160 x2970 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2320 x1055 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2452 x140 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2452 x2017 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2477 x276 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2569 x5035 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2593 x5111 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2897 x1232 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x2921 x5742 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x3013 x3753 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x3048 x4909 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x3339 x2097 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x3633 x4873 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x3781 x2105 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x409 x3621 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x4120 32 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x4232 x4061 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x4244 1000000000000000000 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x463 x5776 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x4698 x842 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x4733 x5727 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x4929 1000000000000000000 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x5085 x4637 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x5202 x5246 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x5246 x1160 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x5287 x4165 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x5780 x1766 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x5798 32 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x5833 x2592 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x6004 x5443 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x6144 32 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x6163 32 (uninterp_frac x667 x1650)))
(assert (axiom_frac_zero x667 x1650 x813 32 (uninterp_frac x667 x1650)))
(assert (axiom_frac_bound x793 1000000000000000000))
(assert (axiom_frac_zero x793 1000000000000000000 1000000000000000000 x458 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 1000000000000000000 x5573 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 32 x2789 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 32 x4120 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 32 x5063 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 32 x5481 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 32 x5483 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 32 x6163 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 32 x813 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x1028 x5681 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x1123 x5348 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x1156 32 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x1353 32 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x1410 x2043 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2009 x4745 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2160 x2970 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2320 x1055 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2452 x140 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2452 x2017 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2477 x276 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2569 x5035 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2593 x5111 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2897 x1232 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x2921 x5742 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x3013 x3753 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x3048 x4909 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x3339 x2097 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x3633 x4873 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x3781 x2105 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x409 x3621 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x4120 32 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x4232 x4061 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x4244 1000000000000000000 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x463 x5776 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x4698 x842 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x4733 x5727 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x4929 1000000000000000000 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x5085 x4637 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x5202 x5246 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x5246 x1160 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x5287 x4165 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x5780 x1766 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x5798 32 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x5833 x2592 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x6004 x5443 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x6144 32 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x6163 32 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_zero x793 1000000000000000000 x813 32 (uninterp_frac x793 1000000000000000000)))
(assert (axiom_frac_bound x795 1000000000000000000))
(assert (axiom_frac_zero x795 1000000000000000000 1000000000000000000 x458 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 1000000000000000000 x5573 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 32 x2789 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 32 x4120 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 32 x5063 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 32 x5481 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 32 x5483 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 32 x6163 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 32 x813 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x1028 x5681 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x1123 x5348 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x1156 32 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x1353 32 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x1410 x2043 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2009 x4745 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2160 x2970 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2320 x1055 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2452 x140 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2452 x2017 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2477 x276 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2569 x5035 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2593 x5111 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2897 x1232 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x2921 x5742 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x3013 x3753 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x3048 x4909 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x3339 x2097 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x3633 x4873 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x3781 x2105 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x409 x3621 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x4120 32 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x4232 x4061 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x4244 1000000000000000000 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x463 x5776 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x4698 x842 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x4733 x5727 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x4929 1000000000000000000 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x5085 x4637 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x5202 x5246 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x5246 x1160 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x5287 x4165 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x5780 x1766 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x5798 32 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x5833 x2592 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x6004 x5443 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x6144 32 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x6163 32 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_zero x795 1000000000000000000 x813 32 (uninterp_frac x795 1000000000000000000)))
(assert (axiom_frac_bound x985 1000000000000000000))
(assert (axiom_frac_zero x985 1000000000000000000 1000000000000000000 x458 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 1000000000000000000 x5573 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 32 x2789 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 32 x4120 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 32 x5063 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 32 x5481 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 32 x5483 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 32 x6163 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 32 x813 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x1028 x5681 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x1123 x5348 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x1156 32 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x1353 32 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x1410 x2043 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2009 x4745 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2160 x2970 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2320 x1055 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2452 x140 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2452 x2017 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2477 x276 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2569 x5035 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2593 x5111 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2897 x1232 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x2921 x5742 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x3013 x3753 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x3048 x4909 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x3339 x2097 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x3633 x4873 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x3781 x2105 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x409 x3621 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x4120 32 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x4232 x4061 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x4244 1000000000000000000 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x463 x5776 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x4698 x842 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x4733 x5727 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x4929 1000000000000000000 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x5085 x4637 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x5202 x5246 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x5246 x1160 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x5287 x4165 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x5780 x1766 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x5798 32 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x5833 x2592 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x6004 x5443 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x6144 32 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x6163 32 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_frac_zero x985 1000000000000000000 x813 32 (uninterp_frac x985 1000000000000000000)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x1000))
(assert (axiom_int_approximation x1003))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1008))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1014))
(assert (axiom_int_approximation x1015))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1024))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1056))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1060))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1093))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1095))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x1102))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1112))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1119))
(assert (axiom_int_approximation x1121))
(assert (axiom_int_approximation x1123))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x1139))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1145))
(assert (axiom_int_approximation x1147))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1160))
(assert (axiom_int_approximation x1162))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1166))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1177))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x1185))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1193))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1206))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1210))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1216))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1218))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1220))
(assert (axiom_int_approximation x1222))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1235))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x1237))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1247))
(assert (axiom_int_approximation x1248))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1257))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1273))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1295))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1305))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1322))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1328))
(assert (axiom_int_approximation x1330))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1333))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x1351))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1360))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x1373))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1376))
(assert (axiom_int_approximation x1377))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1382))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1392))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1401))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1405))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1408))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x1410))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1412))
(assert (axiom_int_approximation x1416))
(assert (axiom_int_approximation x1419))
(assert (axiom_int_approximation x1420))
(assert (axiom_int_approximation x1426))
(assert (axiom_int_approximation x1427))
(assert (axiom_int_approximation x1429))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1438))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1461))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1467))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1479))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x1488))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1500))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1505))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x1508))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1513))
(assert (axiom_int_approximation x1514))
(assert (axiom_int_approximation x1515))
(assert (axiom_int_approximation x1520))
(assert (axiom_int_approximation x1523))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1530))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1543))
(assert (axiom_int_approximation x1544))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1550))
(assert (axiom_int_approximation x1556))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x1561))
(assert (axiom_int_approximation x1562))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x1572))
(assert (axiom_int_approximation x1574))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x1577))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1583))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1586))
(assert (axiom_int_approximation x1588))
(assert (axiom_int_approximation x1589))
(assert (axiom_int_approximation x1593))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1607))
(assert (axiom_int_approximation x1609))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1615))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x1624))
(assert (axiom_int_approximation x1627))
(assert (axiom_int_approximation x1628))
(assert (axiom_int_approximation x1629))
(assert (axiom_int_approximation x1632))
(assert (axiom_int_approximation x1633))
(assert (axiom_int_approximation x1635))
(assert (axiom_int_approximation x1639))
(assert (axiom_int_approximation x1640))
(assert (axiom_int_approximation x1642))
(assert (axiom_int_approximation x1648))
(assert (axiom_int_approximation x1649))
(assert (axiom_int_approximation x1650))
(assert (axiom_int_approximation x1651))
(assert (axiom_int_approximation x1653))
(assert (axiom_int_approximation x1655))
(assert (axiom_int_approximation x1656))
(assert (axiom_int_approximation x1657))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x1663))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x1667))
(assert (axiom_int_approximation x1670))
(assert (axiom_int_approximation x1673))
(assert (axiom_int_approximation x1674))
(assert (axiom_int_approximation x1675))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1680))
(assert (axiom_int_approximation x1682))
(assert (axiom_int_approximation x1688))
(assert (axiom_int_approximation x1689))
(assert (axiom_int_approximation x1690))
(assert (axiom_int_approximation x1692))
(assert (axiom_int_approximation x1693))
(assert (axiom_int_approximation x1696))
(assert (axiom_int_approximation x1697))
(assert (axiom_int_approximation x1698))
(assert (axiom_int_approximation x1699))
(assert (axiom_int_approximation x1705))
(assert (axiom_int_approximation x1708))
(assert (axiom_int_approximation x1712))
(assert (axiom_int_approximation x1713))
(assert (axiom_int_approximation x1714))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x1718))
(assert (axiom_int_approximation x1720))
(assert (axiom_int_approximation x1721))
(assert (axiom_int_approximation x1723))
(assert (axiom_int_approximation x1724))
(assert (axiom_int_approximation x1728))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x1731))
(assert (axiom_int_approximation x1733))
(assert (axiom_int_approximation x1737))
(assert (axiom_int_approximation x1738))
(assert (axiom_int_approximation x1739))
(assert (axiom_int_approximation x1741))
(assert (axiom_int_approximation x1744))
(assert (axiom_int_approximation x1745))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x1749))
(assert (axiom_int_approximation x1751))
(assert (axiom_int_approximation x1754))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x1760))
(assert (axiom_int_approximation x1762))
(assert (axiom_int_approximation x1766))
(assert (axiom_int_approximation x1769))
(assert (axiom_int_approximation x1774))
(assert (axiom_int_approximation x1775))
(assert (axiom_int_approximation x1778))
(assert (axiom_int_approximation x1779))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x1780))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1783))
(assert (axiom_int_approximation x1792))
(assert (axiom_int_approximation x1794))
(assert (axiom_int_approximation x1798))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x1801))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1806))
(assert (axiom_int_approximation x1808))
(assert (axiom_int_approximation x1811))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1813))
(assert (axiom_int_approximation x1814))
(assert (axiom_int_approximation x1815))
(assert (axiom_int_approximation x1817))
(assert (axiom_int_approximation x1818))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x1822))
(assert (axiom_int_approximation x1830))
(assert (axiom_int_approximation x1831))
(assert (axiom_int_approximation x1833))
(assert (axiom_int_approximation x1843))
(assert (axiom_int_approximation x1847))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x1850))
(assert (axiom_int_approximation x1852))
(assert (axiom_int_approximation x1853))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1858))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x1860))
(assert (axiom_int_approximation x1862))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x1869))
(assert (axiom_int_approximation x1872))
(assert (axiom_int_approximation x1874))
(assert (axiom_int_approximation x1875))
(assert (axiom_int_approximation x1876))
(assert (axiom_int_approximation x1877))
(assert (axiom_int_approximation x1881))
(assert (axiom_int_approximation x1885))
(assert (axiom_int_approximation x1888))
(assert (axiom_int_approximation x1889))
(assert (axiom_int_approximation x1894))
(assert (axiom_int_approximation x1896))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x1903))
(assert (axiom_int_approximation x1905))
(assert (axiom_int_approximation x1908))
(assert (axiom_int_approximation x1909))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x1910))
(assert (axiom_int_approximation x1912))
(assert (axiom_int_approximation x1914))
(assert (axiom_int_approximation x1915))
(assert (axiom_int_approximation x1919))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x1920))
(assert (axiom_int_approximation x1921))
(assert (axiom_int_approximation x1923))
(assert (axiom_int_approximation x1928))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x1930))
(assert (axiom_int_approximation x1932))
(assert (axiom_int_approximation x1939))
(assert (axiom_int_approximation x1941))
(assert (axiom_int_approximation x1942))
(assert (axiom_int_approximation x1943))
(assert (axiom_int_approximation x1945))
(assert (axiom_int_approximation x1947))
(assert (axiom_int_approximation x1951))
(assert (axiom_int_approximation x1956))
(assert (axiom_int_approximation x1959))
(assert (axiom_int_approximation x1962))
(assert (axiom_int_approximation x1965))
(assert (axiom_int_approximation x1966))
(assert (axiom_int_approximation x1969))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x1970))
(assert (axiom_int_approximation x1971))
(assert (axiom_int_approximation x1972))
(assert (axiom_int_approximation x1973))
(assert (axiom_int_approximation x1974))
(assert (axiom_int_approximation x1978))
(assert (axiom_int_approximation x1979))
(assert (axiom_int_approximation x1980))
(assert (axiom_int_approximation x1981))
(assert (axiom_int_approximation x1983))
(assert (axiom_int_approximation x1986))
(assert (axiom_int_approximation x1988))
(assert (axiom_int_approximation x1989))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x1992))
(assert (axiom_int_approximation x1997))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x2001))
(assert (axiom_int_approximation x2002))
(assert (axiom_int_approximation x2004))
(assert (axiom_int_approximation x2005))
(assert (axiom_int_approximation x2009))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x2010))
(assert (axiom_int_approximation x2012))
(assert (axiom_int_approximation x2013))
(assert (axiom_int_approximation x2016))
(assert (axiom_int_approximation x2017))
(assert (axiom_int_approximation x2019))
(assert (axiom_int_approximation x2022))
(assert (axiom_int_approximation x2024))
(assert (axiom_int_approximation x2025))
(assert (axiom_int_approximation x2026))
(assert (axiom_int_approximation x2027))
(assert (axiom_int_approximation x2028))
(assert (axiom_int_approximation x2029))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x2030))
(assert (axiom_int_approximation x2031))
(assert (axiom_int_approximation x2033))
(assert (axiom_int_approximation x2035))
(assert (axiom_int_approximation x2038))
(assert (axiom_int_approximation x2041))
(assert (axiom_int_approximation x2042))
(assert (axiom_int_approximation x2043))
(assert (axiom_int_approximation x2044))
(assert (axiom_int_approximation x2045))
(assert (axiom_int_approximation x2046))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x2056))
(assert (axiom_int_approximation x2057))
(assert (axiom_int_approximation x2060))
(assert (axiom_int_approximation x2061))
(assert (axiom_int_approximation x2062))
(assert (axiom_int_approximation x2069))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x2070))
(assert (axiom_int_approximation x2072))
(assert (axiom_int_approximation x2076))
(assert (axiom_int_approximation x2077))
(assert (axiom_int_approximation x2078))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x2087))
(assert (axiom_int_approximation x2089))
(assert (axiom_int_approximation x2097))
(assert (axiom_int_approximation x2103))
(assert (axiom_int_approximation x2105))
(assert (axiom_int_approximation x2106))
(assert (axiom_int_approximation x2107))
(assert (axiom_int_approximation x211))
(assert (axiom_int_approximation x2111))
(assert (axiom_int_approximation x2116))
(assert (axiom_int_approximation x2119))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x2122))
(assert (axiom_int_approximation x2124))
(assert (axiom_int_approximation x2126))
(assert (axiom_int_approximation x2130))
(assert (axiom_int_approximation x2132))
(assert (axiom_int_approximation x2136))
(assert (axiom_int_approximation x2138))
(assert (axiom_int_approximation x2141))
(assert (axiom_int_approximation x2144))
(assert (axiom_int_approximation x2148))
(assert (axiom_int_approximation x2149))
(assert (axiom_int_approximation x2150))
(assert (axiom_int_approximation x2151))
(assert (axiom_int_approximation x2152))
(assert (axiom_int_approximation x2154))
(assert (axiom_int_approximation x2156))
(assert (axiom_int_approximation x2159))
(assert (axiom_int_approximation x2160))
(assert (axiom_int_approximation x2164))
(assert (axiom_int_approximation x2167))
(assert (axiom_int_approximation x2168))
(assert (axiom_int_approximation x2169))
(assert (axiom_int_approximation x2173))
(assert (axiom_int_approximation x2179))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x2180))
(assert (axiom_int_approximation x2186))
(assert (axiom_int_approximation x2188))
(assert (axiom_int_approximation x2189))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x2190))
(assert (axiom_int_approximation x2191))
(assert (axiom_int_approximation x2196))
(assert (axiom_int_approximation x2197))
(assert (axiom_int_approximation x2199))
(assert (axiom_int_approximation x2200))
(assert (axiom_int_approximation x2203))
(assert (axiom_int_approximation x2209))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x2211))
(assert (axiom_int_approximation x2212))
(assert (axiom_int_approximation x2213))
(assert (axiom_int_approximation x2214))
(assert (axiom_int_approximation x2215))
(assert (axiom_int_approximation x2218))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x2221))
(assert (axiom_int_approximation x2222))
(assert (axiom_int_approximation x2225))
(assert (axiom_int_approximation x2231))
(assert (axiom_int_approximation x2233))
(assert (axiom_int_approximation x2235))
(assert (axiom_int_approximation x2239))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x2243))
(assert (axiom_int_approximation x2245))
(assert (axiom_int_approximation x2251))
(assert (axiom_int_approximation x2254))
(assert (axiom_int_approximation x2255))
(assert (axiom_int_approximation x2257))
(assert (axiom_int_approximation x2258))
(assert (axiom_int_approximation x2259))
(assert (axiom_int_approximation x2261))
(assert (axiom_int_approximation x2263))
(assert (axiom_int_approximation x2264))
(assert (axiom_int_approximation x2266))
(assert (axiom_int_approximation x2267))
(assert (axiom_int_approximation x2268))
(assert (axiom_int_approximation x2269))
(assert (axiom_int_approximation x2270))
(assert (axiom_int_approximation x2272))
(assert (axiom_int_approximation x2274))
(assert (axiom_int_approximation x2276))
(assert (axiom_int_approximation x2277))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x2281))
(assert (axiom_int_approximation x2288))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x2293))
(assert (axiom_int_approximation x2296))
(assert (axiom_int_approximation x2299))
(assert (axiom_int_approximation x2303))
(assert (axiom_int_approximation x2306))
(assert (axiom_int_approximation x2307))
(assert (axiom_int_approximation x2308))
(assert (axiom_int_approximation x2309))
(assert (axiom_int_approximation x2311))
(assert (axiom_int_approximation x2312))
(assert (axiom_int_approximation x2315))
(assert (axiom_int_approximation x2317))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x2320))
(assert (axiom_int_approximation x2323))
(assert (axiom_int_approximation x2324))
(assert (axiom_int_approximation x2325))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x2334))
(assert (axiom_int_approximation x2335))
(assert (axiom_int_approximation x2336))
(assert (axiom_int_approximation x2338))
(assert (axiom_int_approximation x2341))
(assert (axiom_int_approximation x2342))
(assert (axiom_int_approximation x2344))
(assert (axiom_int_approximation x2350))
(assert (axiom_int_approximation x2351))
(assert (axiom_int_approximation x2356))
(assert (axiom_int_approximation x2366))
(assert (axiom_int_approximation x2367))
(assert (axiom_int_approximation x2368))
(assert (axiom_int_approximation x2371))
(assert (axiom_int_approximation x2374))
(assert (axiom_int_approximation x2378))
(assert (axiom_int_approximation x2381))
(assert (axiom_int_approximation x2382))
(assert (axiom_int_approximation x2385))
(assert (axiom_int_approximation x2386))
(assert (axiom_int_approximation x2388))
(assert (axiom_int_approximation x2389))
(assert (axiom_int_approximation x2390))
(assert (axiom_int_approximation x2392))
(assert (axiom_int_approximation x2393))
(assert (axiom_int_approximation x2396))
(assert (axiom_int_approximation x2397))
(assert (axiom_int_approximation x2399))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x2401))
(assert (axiom_int_approximation x2407))
(assert (axiom_int_approximation x2408))
(assert (axiom_int_approximation x2409))
(assert (axiom_int_approximation x2413))
(assert (axiom_int_approximation x2415))
(assert (axiom_int_approximation x2417))
(assert (axiom_int_approximation x2418))
(assert (axiom_int_approximation x2420))
(assert (axiom_int_approximation x2421))
(assert (axiom_int_approximation x2422))
(assert (axiom_int_approximation x2423))
(assert (axiom_int_approximation x2426))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x2433))
(assert (axiom_int_approximation x2434))
(assert (axiom_int_approximation x2435))
(assert (axiom_int_approximation x2441))
(assert (axiom_int_approximation x2443))
(assert (axiom_int_approximation x2448))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x2450))
(assert (axiom_int_approximation x2451))
(assert (axiom_int_approximation x2452))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x2461))
(assert (axiom_int_approximation x2467))
(assert (axiom_int_approximation x2469))
(assert (axiom_int_approximation x2471))
(assert (axiom_int_approximation x2472))
(assert (axiom_int_approximation x2473))
(assert (axiom_int_approximation x2475))
(assert (axiom_int_approximation x2476))
(assert (axiom_int_approximation x2477))
(assert (axiom_int_approximation x2478))
(assert (axiom_int_approximation x2485))
(assert (axiom_int_approximation x2488))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x2490))
(assert (axiom_int_approximation x2492))
(assert (axiom_int_approximation x2495))
(assert (axiom_int_approximation x2496))
(assert (axiom_int_approximation x2497))
(assert (axiom_int_approximation x2498))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x2502))
(assert (axiom_int_approximation x2504))
(assert (axiom_int_approximation x2505))
(assert (axiom_int_approximation x2511))
(assert (axiom_int_approximation x2514))
(assert (axiom_int_approximation x2517))
(assert (axiom_int_approximation x2520))
(assert (axiom_int_approximation x2522))
(assert (axiom_int_approximation x2526))
(assert (axiom_int_approximation x2527))
(assert (axiom_int_approximation x2529))
(assert (axiom_int_approximation x2535))
(assert (axiom_int_approximation x2536))
(assert (axiom_int_approximation x2537))
(assert (axiom_int_approximation x2538))
(assert (axiom_int_approximation x2542))
(assert (axiom_int_approximation x2543))
(assert (axiom_int_approximation x2544))
(assert (axiom_int_approximation x2549))
(assert (axiom_int_approximation x2552))
(assert (axiom_int_approximation x2554))
(assert (axiom_int_approximation x2555))
(assert (axiom_int_approximation x2557))
(assert (axiom_int_approximation x2559))
(assert (axiom_int_approximation x2563))
(assert (axiom_int_approximation x2567))
(assert (axiom_int_approximation x2568))
(assert (axiom_int_approximation x2569))
(assert (axiom_int_approximation x2571))
(assert (axiom_int_approximation x2572))
(assert (axiom_int_approximation x2575))
(assert (axiom_int_approximation x2576))
(assert (axiom_int_approximation x2577))
(assert (axiom_int_approximation x2580))
(assert (axiom_int_approximation x2582))
(assert (axiom_int_approximation x2589))
(assert (axiom_int_approximation x2590))
(assert (axiom_int_approximation x2592))
(assert (axiom_int_approximation x2593))
(assert (axiom_int_approximation x2595))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x2600))
(assert (axiom_int_approximation x2601))
(assert (axiom_int_approximation x2604))
(assert (axiom_int_approximation x2605))
(assert (axiom_int_approximation x2610))
(assert (axiom_int_approximation x2612))
(assert (axiom_int_approximation x2614))
(assert (axiom_int_approximation x2615))
(assert (axiom_int_approximation x2616))
(assert (axiom_int_approximation x2618))
(assert (axiom_int_approximation x2620))
(assert (axiom_int_approximation x2622))
(assert (axiom_int_approximation x2626))
(assert (axiom_int_approximation x2627))
(assert (axiom_int_approximation x2629))
(assert (axiom_int_approximation x2630))
(assert (axiom_int_approximation x2631))
(assert (axiom_int_approximation x2635))
(assert (axiom_int_approximation x264))
(assert (axiom_int_approximation x2641))
(assert (axiom_int_approximation x2642))
(assert (axiom_int_approximation x2649))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x2651))
(assert (axiom_int_approximation x2658))
(assert (axiom_int_approximation x2663))
(assert (axiom_int_approximation x2664))
(assert (axiom_int_approximation x2669))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x2671))
(assert (axiom_int_approximation x2673))
(assert (axiom_int_approximation x2682))
(assert (axiom_int_approximation x2686))
(assert (axiom_int_approximation x2688))
(assert (axiom_int_approximation x2694))
(assert (axiom_int_approximation x2696))
(assert (axiom_int_approximation x2699))
(assert (axiom_int_approximation x2700))
(assert (axiom_int_approximation x2706))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x2712))
(assert (axiom_int_approximation x2713))
(assert (axiom_int_approximation x2716))
(assert (axiom_int_approximation x2717))
(assert (axiom_int_approximation x2719))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x2720))
(assert (axiom_int_approximation x2722))
(assert (axiom_int_approximation x2723))
(assert (axiom_int_approximation x2724))
(assert (axiom_int_approximation x2725))
(assert (axiom_int_approximation x2727))
(assert (axiom_int_approximation x2728))
(assert (axiom_int_approximation x2732))
(assert (axiom_int_approximation x2736))
(assert (axiom_int_approximation x2737))
(assert (axiom_int_approximation x2738))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x2742))
(assert (axiom_int_approximation x2744))
(assert (axiom_int_approximation x2746))
(assert (axiom_int_approximation x2747))
(assert (axiom_int_approximation x2749))
(assert (axiom_int_approximation x2753))
(assert (axiom_int_approximation x2758))
(assert (axiom_int_approximation x2759))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x2765))
(assert (axiom_int_approximation x2768))
(assert (axiom_int_approximation x2769))
(assert (axiom_int_approximation x2775))
(assert (axiom_int_approximation x2778))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x2782))
(assert (axiom_int_approximation x2786))
(assert (axiom_int_approximation x2788))
(assert (axiom_int_approximation x2789))
(assert (axiom_int_approximation x2793))
(assert (axiom_int_approximation x2796))
(assert (axiom_int_approximation x2797))
(assert (axiom_int_approximation x2799))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x2800))
(assert (axiom_int_approximation x2801))
(assert (axiom_int_approximation x2802))
(assert (axiom_int_approximation x2808))
(assert (axiom_int_approximation x2809))
(assert (axiom_int_approximation x2810))
(assert (axiom_int_approximation x2811))
(assert (axiom_int_approximation x2814))
(assert (axiom_int_approximation x2819))
(assert (axiom_int_approximation x2820))
(assert (axiom_int_approximation x2821))
(assert (axiom_int_approximation x2822))
(assert (axiom_int_approximation x2825))
(assert (axiom_int_approximation x2827))
(assert (axiom_int_approximation x2829))
(assert (axiom_int_approximation x2836))
(assert (axiom_int_approximation x2839))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x2841))
(assert (axiom_int_approximation x2842))
(assert (axiom_int_approximation x2844))
(assert (axiom_int_approximation x2845))
(assert (axiom_int_approximation x2849))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x2852))
(assert (axiom_int_approximation x2855))
(assert (axiom_int_approximation x2858))
(assert (axiom_int_approximation x2859))
(assert (axiom_int_approximation x2860))
(assert (axiom_int_approximation x2862))
(assert (axiom_int_approximation x2863))
(assert (axiom_int_approximation x2864))
(assert (axiom_int_approximation x2867))
(assert (axiom_int_approximation x2868))
(assert (axiom_int_approximation x2870))
(assert (axiom_int_approximation x2874))
(assert (axiom_int_approximation x2875))
(assert (axiom_int_approximation x2877))
(assert (axiom_int_approximation x2878))
(assert (axiom_int_approximation x2881))
(assert (axiom_int_approximation x2886))
(assert (axiom_int_approximation x2887))
(assert (axiom_int_approximation x2888))
(assert (axiom_int_approximation x2892))
(assert (axiom_int_approximation x2894))
(assert (axiom_int_approximation x2895))
(assert (axiom_int_approximation x2897))
(assert (axiom_int_approximation x2898))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x2911))
(assert (axiom_int_approximation x2918))
(assert (axiom_int_approximation x2921))
(assert (axiom_int_approximation x2922))
(assert (axiom_int_approximation x2923))
(assert (axiom_int_approximation x2924))
(assert (axiom_int_approximation x2927))
(assert (axiom_int_approximation x2930))
(assert (axiom_int_approximation x2931))
(assert (axiom_int_approximation x2932))
(assert (axiom_int_approximation x2934))
(assert (axiom_int_approximation x2937))
(assert (axiom_int_approximation x2938))
(assert (axiom_int_approximation x2939))
(assert (axiom_int_approximation x2940))
(assert (axiom_int_approximation x2943))
(assert (axiom_int_approximation x2946))
(assert (axiom_int_approximation x2949))
(assert (axiom_int_approximation x2951))
(assert (axiom_int_approximation x2952))
(assert (axiom_int_approximation x2954))
(assert (axiom_int_approximation x2955))
(assert (axiom_int_approximation x2958))
(assert (axiom_int_approximation x2963))
(assert (axiom_int_approximation x2966))
(assert (axiom_int_approximation x2967))
(assert (axiom_int_approximation x2969))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x2970))
(assert (axiom_int_approximation x2975))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x2983))
(assert (axiom_int_approximation x2987))
(assert (axiom_int_approximation x2988))
(assert (axiom_int_approximation x2989))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x2992))
(assert (axiom_int_approximation x2993))
(assert (axiom_int_approximation x2994))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x3003))
(assert (axiom_int_approximation x3004))
(assert (axiom_int_approximation x3005))
(assert (axiom_int_approximation x3008))
(assert (axiom_int_approximation x3009))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x3013))
(assert (axiom_int_approximation x3015))
(assert (axiom_int_approximation x3018))
(assert (axiom_int_approximation x3019))
(assert (axiom_int_approximation x3022))
(assert (axiom_int_approximation x3025))
(assert (axiom_int_approximation x3026))
(assert (axiom_int_approximation x3029))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x3032))
(assert (axiom_int_approximation x3034))
(assert (axiom_int_approximation x3035))
(assert (axiom_int_approximation x3039))
(assert (axiom_int_approximation x3041))
(assert (axiom_int_approximation x3042))
(assert (axiom_int_approximation x3043))
(assert (axiom_int_approximation x3044))
(assert (axiom_int_approximation x3047))
(assert (axiom_int_approximation x3048))
(assert (axiom_int_approximation x3053))
(assert (axiom_int_approximation x3054))
(assert (axiom_int_approximation x3058))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x3061))
(assert (axiom_int_approximation x3066))
(assert (axiom_int_approximation x3067))
(assert (axiom_int_approximation x3069))
(assert (axiom_int_approximation x3071))
(assert (axiom_int_approximation x3074))
(assert (axiom_int_approximation x3075))
(assert (axiom_int_approximation x3076))
(assert (axiom_int_approximation x3078))
(assert (axiom_int_approximation x3081))
(assert (axiom_int_approximation x3084))
(assert (axiom_int_approximation x3085))
(assert (axiom_int_approximation x3089))
(assert (axiom_int_approximation x3091))
(assert (axiom_int_approximation x3092))
(assert (axiom_int_approximation x3094))
(assert (axiom_int_approximation x3097))
(assert (axiom_int_approximation x3099))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x3102))
(assert (axiom_int_approximation x3103))
(assert (axiom_int_approximation x3106))
(assert (axiom_int_approximation x3108))
(assert (axiom_int_approximation x3110))
(assert (axiom_int_approximation x3111))
(assert (axiom_int_approximation x3112))
(assert (axiom_int_approximation x3113))
(assert (axiom_int_approximation x3117))
(assert (axiom_int_approximation x3118))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x3122))
(assert (axiom_int_approximation x3124))
(assert (axiom_int_approximation x3125))
(assert (axiom_int_approximation x3126))
(assert (axiom_int_approximation x3131))
(assert (axiom_int_approximation x3132))
(assert (axiom_int_approximation x3135))
(assert (axiom_int_approximation x3139))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x3144))
(assert (axiom_int_approximation x3148))
(assert (axiom_int_approximation x3149))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x3150))
(assert (axiom_int_approximation x3151))
(assert (axiom_int_approximation x3155))
(assert (axiom_int_approximation x3158))
(assert (axiom_int_approximation x3159))
(assert (axiom_int_approximation x3160))
(assert (axiom_int_approximation x3161))
(assert (axiom_int_approximation x3162))
(assert (axiom_int_approximation x3163))
(assert (axiom_int_approximation x3164))
(assert (axiom_int_approximation x3166))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x3171))
(assert (axiom_int_approximation x3174))
(assert (axiom_int_approximation x3175))
(assert (axiom_int_approximation x3176))
(assert (axiom_int_approximation x3177))
(assert (axiom_int_approximation x3178))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x3180))
(assert (axiom_int_approximation x3181))
(assert (axiom_int_approximation x3183))
(assert (axiom_int_approximation x3186))
(assert (axiom_int_approximation x3188))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x3193))
(assert (axiom_int_approximation x3194))
(assert (axiom_int_approximation x3196))
(assert (axiom_int_approximation x3205))
(assert (axiom_int_approximation x3206))
(assert (axiom_int_approximation x321))
(assert (axiom_int_approximation x3220))
(assert (axiom_int_approximation x3222))
(assert (axiom_int_approximation x3223))
(assert (axiom_int_approximation x3224))
(assert (axiom_int_approximation x3227))
(assert (axiom_int_approximation x3228))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x3230))
(assert (axiom_int_approximation x3233))
(assert (axiom_int_approximation x3234))
(assert (axiom_int_approximation x3236))
(assert (axiom_int_approximation x3239))
(assert (axiom_int_approximation x3240))
(assert (axiom_int_approximation x3244))
(assert (axiom_int_approximation x3246))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x3251))
(assert (axiom_int_approximation x3255))
(assert (axiom_int_approximation x3258))
(assert (axiom_int_approximation x3260))
(assert (axiom_int_approximation x3261))
(assert (axiom_int_approximation x3266))
(assert (axiom_int_approximation x3268))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x3274))
(assert (axiom_int_approximation x3275))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x3284))
(assert (axiom_int_approximation x3285))
(assert (axiom_int_approximation x3288))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x3292))
(assert (axiom_int_approximation x3295))
(assert (axiom_int_approximation x3296))
(assert (axiom_int_approximation x3300))
(assert (axiom_int_approximation x3301))
(assert (axiom_int_approximation x3302))
(assert (axiom_int_approximation x3304))
(assert (axiom_int_approximation x3305))
(assert (axiom_int_approximation x3306))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x3310))
(assert (axiom_int_approximation x3315))
(assert (axiom_int_approximation x3316))
(assert (axiom_int_approximation x3318))
(assert (axiom_int_approximation x3319))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x3323))
(assert (axiom_int_approximation x3328))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x3331))
(assert (axiom_int_approximation x3333))
(assert (axiom_int_approximation x3334))
(assert (axiom_int_approximation x3336))
(assert (axiom_int_approximation x3339))
(assert (axiom_int_approximation x3341))
(assert (axiom_int_approximation x3342))
(assert (axiom_int_approximation x3343))
(assert (axiom_int_approximation x3345))
(assert (axiom_int_approximation x3349))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x3350))
(assert (axiom_int_approximation x3352))
(assert (axiom_int_approximation x3354))
(assert (axiom_int_approximation x3356))
(assert (axiom_int_approximation x3357))
(assert (axiom_int_approximation x3358))
(assert (axiom_int_approximation x3359))
(assert (axiom_int_approximation x3361))
(assert (axiom_int_approximation x3369))
(assert (axiom_int_approximation x3370))
(assert (axiom_int_approximation x3374))
(assert (axiom_int_approximation x3382))
(assert (axiom_int_approximation x3383))
(assert (axiom_int_approximation x3384))
(assert (axiom_int_approximation x3389))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x3393))
(assert (axiom_int_approximation x3398))
(assert (axiom_int_approximation x3401))
(assert (axiom_int_approximation x3405))
(assert (axiom_int_approximation x3408))
(assert (axiom_int_approximation x3409))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x3410))
(assert (axiom_int_approximation x3412))
(assert (axiom_int_approximation x3414))
(assert (axiom_int_approximation x3419))
(assert (axiom_int_approximation x3420))
(assert (axiom_int_approximation x3424))
(assert (axiom_int_approximation x3428))
(assert (axiom_int_approximation x3431))
(assert (axiom_int_approximation x3432))
(assert (axiom_int_approximation x3433))
(assert (axiom_int_approximation x3437))
(assert (axiom_int_approximation x3438))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x3441))
(assert (axiom_int_approximation x3442))
(assert (axiom_int_approximation x3443))
(assert (axiom_int_approximation x3445))
(assert (axiom_int_approximation x3446))
(assert (axiom_int_approximation x3449))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x3450))
(assert (axiom_int_approximation x3451))
(assert (axiom_int_approximation x3452))
(assert (axiom_int_approximation x3453))
(assert (axiom_int_approximation x3454))
(assert (axiom_int_approximation x3455))
(assert (axiom_int_approximation x3456))
(assert (axiom_int_approximation x3457))
(assert (axiom_int_approximation x3458))
(assert (axiom_int_approximation x3459))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x3460))
(assert (axiom_int_approximation x3461))
(assert (axiom_int_approximation x3462))
(assert (axiom_int_approximation x3465))
(assert (axiom_int_approximation x3467))
(assert (axiom_int_approximation x3468))
(assert (axiom_int_approximation x3470))
(assert (axiom_int_approximation x3473))
(assert (axiom_int_approximation x3476))
(assert (axiom_int_approximation x3481))
(assert (axiom_int_approximation x3482))
(assert (axiom_int_approximation x3484))
(assert (axiom_int_approximation x3485))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x3490))
(assert (axiom_int_approximation x3493))
(assert (axiom_int_approximation x3494))
(assert (axiom_int_approximation x3496))
(assert (axiom_int_approximation x3497))
(assert (axiom_int_approximation x3498))
(assert (axiom_int_approximation x3499))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x3502))
(assert (axiom_int_approximation x3503))
(assert (axiom_int_approximation x3504))
(assert (axiom_int_approximation x3505))
(assert (axiom_int_approximation x3506))
(assert (axiom_int_approximation x3508))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x3511))
(assert (axiom_int_approximation x3513))
(assert (axiom_int_approximation x3516))
(assert (axiom_int_approximation x3524))
(assert (axiom_int_approximation x3528))
(assert (axiom_int_approximation x3535))
(assert (axiom_int_approximation x3537))
(assert (axiom_int_approximation x3543))
(assert (axiom_int_approximation x3546))
(assert (axiom_int_approximation x3548))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x3552))
(assert (axiom_int_approximation x3553))
(assert (axiom_int_approximation x3554))
(assert (axiom_int_approximation x3557))
(assert (axiom_int_approximation x3558))
(assert (axiom_int_approximation x3559))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x3563))
(assert (axiom_int_approximation x3564))
(assert (axiom_int_approximation x3567))
(assert (axiom_int_approximation x3568))
(assert (axiom_int_approximation x3570))
(assert (axiom_int_approximation x3575))
(assert (axiom_int_approximation x3576))
(assert (axiom_int_approximation x3577))
(assert (axiom_int_approximation x3581))
(assert (axiom_int_approximation x3589))
(assert (axiom_int_approximation x3591))
(assert (axiom_int_approximation x3593))
(assert (axiom_int_approximation x3594))
(assert (axiom_int_approximation x3595))
(assert (axiom_int_approximation x3596))
(assert (axiom_int_approximation x3601))
(assert (axiom_int_approximation x3602))
(assert (axiom_int_approximation x3604))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x3610))
(assert (axiom_int_approximation x3611))
(assert (axiom_int_approximation x3615))
(assert (axiom_int_approximation x3618))
(assert (axiom_int_approximation x3619))
(assert (axiom_int_approximation x3621))
(assert (axiom_int_approximation x3623))
(assert (axiom_int_approximation x3625))
(assert (axiom_int_approximation x3630))
(assert (axiom_int_approximation x3633))
(assert (axiom_int_approximation x3638))
(assert (axiom_int_approximation x3639))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x3642))
(assert (axiom_int_approximation x3643))
(assert (axiom_int_approximation x3644))
(assert (axiom_int_approximation x3645))
(assert (axiom_int_approximation x3647))
(assert (axiom_int_approximation x3653))
(assert (axiom_int_approximation x3654))
(assert (axiom_int_approximation x3655))
(assert (axiom_int_approximation x3657))
(assert (axiom_int_approximation x3658))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x3660))
(assert (axiom_int_approximation x3662))
(assert (axiom_int_approximation x3664))
(assert (axiom_int_approximation x3666))
(assert (axiom_int_approximation x3667))
(assert (axiom_int_approximation x3669))
(assert (axiom_int_approximation x3671))
(assert (axiom_int_approximation x3674))
(assert (axiom_int_approximation x3675))
(assert (axiom_int_approximation x3676))
(assert (axiom_int_approximation x3677))
(assert (axiom_int_approximation x3678))
(assert (axiom_int_approximation x3682))
(assert (axiom_int_approximation x3683))
(assert (axiom_int_approximation x3686))
(assert (axiom_int_approximation x3693))
(assert (axiom_int_approximation x3695))
(assert (axiom_int_approximation x3698))
(assert (axiom_int_approximation x3699))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x3702))
(assert (axiom_int_approximation x3703))
(assert (axiom_int_approximation x3704))
(assert (axiom_int_approximation x3706))
(assert (axiom_int_approximation x3707))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x3712))
(assert (axiom_int_approximation x3713))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x3720))
(assert (axiom_int_approximation x3721))
(assert (axiom_int_approximation x3724))
(assert (axiom_int_approximation x3726))
(assert (axiom_int_approximation x3728))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x3730))
(assert (axiom_int_approximation x3732))
(assert (axiom_int_approximation x3733))
(assert (axiom_int_approximation x3738))
(assert (axiom_int_approximation x3739))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x3740))
(assert (axiom_int_approximation x3741))
(assert (axiom_int_approximation x3742))
(assert (axiom_int_approximation x3743))
(assert (axiom_int_approximation x3747))
(assert (axiom_int_approximation x3749))
(assert (axiom_int_approximation x3751))
(assert (axiom_int_approximation x3752))
(assert (axiom_int_approximation x3753))
(assert (axiom_int_approximation x3755))
(assert (axiom_int_approximation x3762))
(assert (axiom_int_approximation x3764))
(assert (axiom_int_approximation x3765))
(assert (axiom_int_approximation x3766))
(assert (axiom_int_approximation x3767))
(assert (axiom_int_approximation x3768))
(assert (axiom_int_approximation x3769))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x3771))
(assert (axiom_int_approximation x3775))
(assert (axiom_int_approximation x3776))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x3781))
(assert (axiom_int_approximation x3783))
(assert (axiom_int_approximation x3785))
(assert (axiom_int_approximation x3786))
(assert (axiom_int_approximation x3788))
(assert (axiom_int_approximation x3789))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x3790))
(assert (axiom_int_approximation x3799))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x3801))
(assert (axiom_int_approximation x3802))
(assert (axiom_int_approximation x3806))
(assert (axiom_int_approximation x3807))
(assert (axiom_int_approximation x3811))
(assert (axiom_int_approximation x3812))
(assert (axiom_int_approximation x3813))
(assert (axiom_int_approximation x3815))
(assert (axiom_int_approximation x3817))
(assert (axiom_int_approximation x3818))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x3823))
(assert (axiom_int_approximation x3826))
(assert (axiom_int_approximation x3827))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x3833))
(assert (axiom_int_approximation x3836))
(assert (axiom_int_approximation x3839))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x3840))
(assert (axiom_int_approximation x3847))
(assert (axiom_int_approximation x3849))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x3850))
(assert (axiom_int_approximation x3851))
(assert (axiom_int_approximation x3852))
(assert (axiom_int_approximation x3853))
(assert (axiom_int_approximation x3854))
(assert (axiom_int_approximation x3857))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x3860))
(assert (axiom_int_approximation x3862))
(assert (axiom_int_approximation x3863))
(assert (axiom_int_approximation x3864))
(assert (axiom_int_approximation x3866))
(assert (axiom_int_approximation x3867))
(assert (axiom_int_approximation x3871))
(assert (axiom_int_approximation x3872))
(assert (axiom_int_approximation x3873))
(assert (axiom_int_approximation x3874))
(assert (axiom_int_approximation x3877))
(assert (axiom_int_approximation x388))
(assert (axiom_int_approximation x3884))
(assert (axiom_int_approximation x3886))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x3897))
(assert (axiom_int_approximation x3911))
(assert (axiom_int_approximation x3914))
(assert (axiom_int_approximation x3917))
(assert (axiom_int_approximation x3921))
(assert (axiom_int_approximation x3924))
(assert (axiom_int_approximation x3927))
(assert (axiom_int_approximation x3928))
(assert (axiom_int_approximation x3929))
(assert (axiom_int_approximation x3934))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x3940))
(assert (axiom_int_approximation x3941))
(assert (axiom_int_approximation x3942))
(assert (axiom_int_approximation x3946))
(assert (axiom_int_approximation x3948))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x3950))
(assert (axiom_int_approximation x3954))
(assert (axiom_int_approximation x3957))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x3961))
(assert (axiom_int_approximation x3962))
(assert (axiom_int_approximation x3964))
(assert (axiom_int_approximation x3968))
(assert (axiom_int_approximation x3969))
(assert (axiom_int_approximation x3970))
(assert (axiom_int_approximation x3972))
(assert (axiom_int_approximation x3974))
(assert (axiom_int_approximation x3975))
(assert (axiom_int_approximation x3976))
(assert (axiom_int_approximation x3979))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x3980))
(assert (axiom_int_approximation x3982))
(assert (axiom_int_approximation x3990))
(assert (axiom_int_approximation x3991))
(assert (axiom_int_approximation x3992))
(assert (axiom_int_approximation x3994))
(assert (axiom_int_approximation x3995))
(assert (axiom_int_approximation x3996))
(assert (axiom_int_approximation x4000))
(assert (axiom_int_approximation x4001))
(assert (axiom_int_approximation x4003))
(assert (axiom_int_approximation x4006))
(assert (axiom_int_approximation x4008))
(assert (axiom_int_approximation x4009))
(assert (axiom_int_approximation x4013))
(assert (axiom_int_approximation x4014))
(assert (axiom_int_approximation x4015))
(assert (axiom_int_approximation x4016))
(assert (axiom_int_approximation x4017))
(assert (axiom_int_approximation x4018))
(assert (axiom_int_approximation x4021))
(assert (axiom_int_approximation x4023))
(assert (axiom_int_approximation x4024))
(assert (axiom_int_approximation x4026))
(assert (axiom_int_approximation x4028))
(assert (axiom_int_approximation x4031))
(assert (axiom_int_approximation x4035))
(assert (axiom_int_approximation x4040))
(assert (axiom_int_approximation x4042))
(assert (axiom_int_approximation x4044))
(assert (axiom_int_approximation x4045))
(assert (axiom_int_approximation x4046))
(assert (axiom_int_approximation x4048))
(assert (axiom_int_approximation x4050))
(assert (axiom_int_approximation x4051))
(assert (axiom_int_approximation x4052))
(assert (axiom_int_approximation x4054))
(assert (axiom_int_approximation x4056))
(assert (axiom_int_approximation x4059))
(assert (axiom_int_approximation x4061))
(assert (axiom_int_approximation x4063))
(assert (axiom_int_approximation x4064))
(assert (axiom_int_approximation x4065))
(assert (axiom_int_approximation x4068))
(assert (axiom_int_approximation x4070))
(assert (axiom_int_approximation x4071))
(assert (axiom_int_approximation x4072))
(assert (axiom_int_approximation x4076))
(assert (axiom_int_approximation x4077))
(assert (axiom_int_approximation x4080))
(assert (axiom_int_approximation x4082))
(assert (axiom_int_approximation x4083))
(assert (axiom_int_approximation x4086))
(assert (axiom_int_approximation x4089))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x4090))
(assert (axiom_int_approximation x4091))
(assert (axiom_int_approximation x4094))
(assert (axiom_int_approximation x4096))
(assert (axiom_int_approximation x4098))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x4100))
(assert (axiom_int_approximation x4102))
(assert (axiom_int_approximation x4107))
(assert (axiom_int_approximation x4108))
(assert (axiom_int_approximation x4109))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x4110))
(assert (axiom_int_approximation x4111))
(assert (axiom_int_approximation x4112))
(assert (axiom_int_approximation x4113))
(assert (axiom_int_approximation x4118))
(assert (axiom_int_approximation x4120))
(assert (axiom_int_approximation x4121))
(assert (axiom_int_approximation x4123))
(assert (axiom_int_approximation x4125))
(assert (axiom_int_approximation x4127))
(assert (axiom_int_approximation x4129))
(assert (axiom_int_approximation x4139))
(assert (axiom_int_approximation x4140))
(assert (axiom_int_approximation x4141))
(assert (axiom_int_approximation x4143))
(assert (axiom_int_approximation x4148))
(assert (axiom_int_approximation x4152))
(assert (axiom_int_approximation x4153))
(assert (axiom_int_approximation x4163))
(assert (axiom_int_approximation x4165))
(assert (axiom_int_approximation x4166))
(assert (axiom_int_approximation x4176))
(assert (axiom_int_approximation x4178))
(assert (axiom_int_approximation x4179))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x4180))
(assert (axiom_int_approximation x4186))
(assert (axiom_int_approximation x4188))
(assert (axiom_int_approximation x4193))
(assert (axiom_int_approximation x4196))
(assert (axiom_int_approximation x4198))
(assert (axiom_int_approximation x4199))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x4201))
(assert (axiom_int_approximation x4202))
(assert (axiom_int_approximation x4207))
(assert (axiom_int_approximation x4210))
(assert (axiom_int_approximation x4211))
(assert (axiom_int_approximation x4212))
(assert (axiom_int_approximation x4214))
(assert (axiom_int_approximation x4218))
(assert (axiom_int_approximation x4220))
(assert (axiom_int_approximation x4227))
(assert (axiom_int_approximation x4231))
(assert (axiom_int_approximation x4232))
(assert (axiom_int_approximation x4233))
(assert (axiom_int_approximation x4239))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x4241))
(assert (axiom_int_approximation x4242))
(assert (axiom_int_approximation x4243))
(assert (axiom_int_approximation x4244))
(assert (axiom_int_approximation x4245))
(assert (axiom_int_approximation x4248))
(assert (axiom_int_approximation x4249))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x4251))
(assert (axiom_int_approximation x4252))
(assert (axiom_int_approximation x4253))
(assert (axiom_int_approximation x4254))
(assert (axiom_int_approximation x4256))
(assert (axiom_int_approximation x4259))
(assert (axiom_int_approximation x4260))
(assert (axiom_int_approximation x4261))
(assert (axiom_int_approximation x4263))
(assert (axiom_int_approximation x4266))
(assert (axiom_int_approximation x4267))
(assert (axiom_int_approximation x4271))
(assert (axiom_int_approximation x4272))
(assert (axiom_int_approximation x4273))
(assert (axiom_int_approximation x4274))
(assert (axiom_int_approximation x4281))
(assert (axiom_int_approximation x4282))
(assert (axiom_int_approximation x4284))
(assert (axiom_int_approximation x4287))
(assert (axiom_int_approximation x4293))
(assert (axiom_int_approximation x4294))
(assert (axiom_int_approximation x4296))
(assert (axiom_int_approximation x4302))
(assert (axiom_int_approximation x4303))
(assert (axiom_int_approximation x4304))
(assert (axiom_int_approximation x4306))
(assert (axiom_int_approximation x4308))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x4310))
(assert (axiom_int_approximation x4311))
(assert (axiom_int_approximation x4315))
(assert (axiom_int_approximation x4324))
(assert (axiom_int_approximation x4329))
(assert (axiom_int_approximation x4330))
(assert (axiom_int_approximation x4331))
(assert (axiom_int_approximation x4337))
(assert (axiom_int_approximation x4339))
(assert (axiom_int_approximation x4343))
(assert (axiom_int_approximation x4348))
(assert (axiom_int_approximation x4349))
(assert (axiom_int_approximation x4352))
(assert (axiom_int_approximation x4353))
(assert (axiom_int_approximation x4354))
(assert (axiom_int_approximation x4355))
(assert (axiom_int_approximation x4359))
(assert (axiom_int_approximation x4361))
(assert (axiom_int_approximation x4363))
(assert (axiom_int_approximation x4365))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x4370))
(assert (axiom_int_approximation x4371))
(assert (axiom_int_approximation x4373))
(assert (axiom_int_approximation x4375))
(assert (axiom_int_approximation x4376))
(assert (axiom_int_approximation x4379))
(assert (axiom_int_approximation x4381))
(assert (axiom_int_approximation x4382))
(assert (axiom_int_approximation x4383))
(assert (axiom_int_approximation x4385))
(assert (axiom_int_approximation x4388))
(assert (axiom_int_approximation x4390))
(assert (axiom_int_approximation x4392))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x4400))
(assert (axiom_int_approximation x4403))
(assert (axiom_int_approximation x4404))
(assert (axiom_int_approximation x4407))
(assert (axiom_int_approximation x4411))
(assert (axiom_int_approximation x4412))
(assert (axiom_int_approximation x4418))
(assert (axiom_int_approximation x4420))
(assert (axiom_int_approximation x4423))
(assert (axiom_int_approximation x4426))
(assert (axiom_int_approximation x4427))
(assert (axiom_int_approximation x4429))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x4430))
(assert (axiom_int_approximation x4433))
(assert (axiom_int_approximation x4434))
(assert (axiom_int_approximation x4436))
(assert (axiom_int_approximation x4438))
(assert (axiom_int_approximation x4443))
(assert (axiom_int_approximation x4444))
(assert (axiom_int_approximation x4445))
(assert (axiom_int_approximation x4447))
(assert (axiom_int_approximation x4448))
(assert (axiom_int_approximation x4453))
(assert (axiom_int_approximation x4454))
(assert (axiom_int_approximation x4459))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x4462))
(assert (axiom_int_approximation x4463))
(assert (axiom_int_approximation x4469))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x4472))
(assert (axiom_int_approximation x4473))
(assert (axiom_int_approximation x4474))
(assert (axiom_int_approximation x4476))
(assert (axiom_int_approximation x4477))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x4480))
(assert (axiom_int_approximation x4481))
(assert (axiom_int_approximation x4484))
(assert (axiom_int_approximation x4488))
(assert (axiom_int_approximation x4489))
(assert (axiom_int_approximation x4495))
(assert (axiom_int_approximation x4496))
(assert (axiom_int_approximation x4500))
(assert (axiom_int_approximation x4502))
(assert (axiom_int_approximation x4503))
(assert (axiom_int_approximation x4504))
(assert (axiom_int_approximation x4505))
(assert (axiom_int_approximation x4508))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x4510))
(assert (axiom_int_approximation x4511))
(assert (axiom_int_approximation x4514))
(assert (axiom_int_approximation x4515))
(assert (axiom_int_approximation x4519))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x4520))
(assert (axiom_int_approximation x4521))
(assert (axiom_int_approximation x4522))
(assert (axiom_int_approximation x4523))
(assert (axiom_int_approximation x4524))
(assert (axiom_int_approximation x4527))
(assert (axiom_int_approximation x4529))
(assert (axiom_int_approximation x4531))
(assert (axiom_int_approximation x4538))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x4545))
(assert (axiom_int_approximation x4546))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x4554))
(assert (axiom_int_approximation x4557))
(assert (axiom_int_approximation x4558))
(assert (axiom_int_approximation x4559))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x4560))
(assert (axiom_int_approximation x4562))
(assert (axiom_int_approximation x4563))
(assert (axiom_int_approximation x4564))
(assert (axiom_int_approximation x4565))
(assert (axiom_int_approximation x4566))
(assert (axiom_int_approximation x4572))
(assert (axiom_int_approximation x4576))
(assert (axiom_int_approximation x4577))
(assert (axiom_int_approximation x4578))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x4585))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x4590))
(assert (axiom_int_approximation x4596))
(assert (axiom_int_approximation x4598))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x4603))
(assert (axiom_int_approximation x4604))
(assert (axiom_int_approximation x4606))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x4610))
(assert (axiom_int_approximation x4613))
(assert (axiom_int_approximation x4617))
(assert (axiom_int_approximation x4619))
(assert (axiom_int_approximation x4625))
(assert (axiom_int_approximation x4626))
(assert (axiom_int_approximation x4627))
(assert (axiom_int_approximation x4629))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x4634))
(assert (axiom_int_approximation x4637))
(assert (axiom_int_approximation x4638))
(assert (axiom_int_approximation x4639))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x4641))
(assert (axiom_int_approximation x4642))
(assert (axiom_int_approximation x4643))
(assert (axiom_int_approximation x4644))
(assert (axiom_int_approximation x4645))
(assert (axiom_int_approximation x4648))
(assert (axiom_int_approximation x4650))
(assert (axiom_int_approximation x4652))
(assert (axiom_int_approximation x4653))
(assert (axiom_int_approximation x4656))
(assert (axiom_int_approximation x4659))
(assert (axiom_int_approximation x4660))
(assert (axiom_int_approximation x4665))
(assert (axiom_int_approximation x4666))
(assert (axiom_int_approximation x4667))
(assert (axiom_int_approximation x4668))
(assert (axiom_int_approximation x4669))
(assert (axiom_int_approximation x4670))
(assert (axiom_int_approximation x4671))
(assert (axiom_int_approximation x4672))
(assert (axiom_int_approximation x4676))
(assert (axiom_int_approximation x4677))
(assert (axiom_int_approximation x4678))
(assert (axiom_int_approximation x4679))
(assert (axiom_int_approximation x4681))
(assert (axiom_int_approximation x4682))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x4695))
(assert (axiom_int_approximation x4696))
(assert (axiom_int_approximation x4697))
(assert (axiom_int_approximation x4698))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x4702))
(assert (axiom_int_approximation x4703))
(assert (axiom_int_approximation x4707))
(assert (axiom_int_approximation x4708))
(assert (axiom_int_approximation x4710))
(assert (axiom_int_approximation x4711))
(assert (axiom_int_approximation x4712))
(assert (axiom_int_approximation x4713))
(assert (axiom_int_approximation x4716))
(assert (axiom_int_approximation x4718))
(assert (axiom_int_approximation x472))
(assert (axiom_int_approximation x4721))
(assert (axiom_int_approximation x4722))
(assert (axiom_int_approximation x4725))
(assert (axiom_int_approximation x4726))
(assert (axiom_int_approximation x4727))
(assert (axiom_int_approximation x4729))
(assert (axiom_int_approximation x4730))
(assert (axiom_int_approximation x4731))
(assert (axiom_int_approximation x4733))
(assert (axiom_int_approximation x4735))
(assert (axiom_int_approximation x4736))
(assert (axiom_int_approximation x4737))
(assert (axiom_int_approximation x4738))
(assert (axiom_int_approximation x4740))
(assert (axiom_int_approximation x4744))
(assert (axiom_int_approximation x4745))
(assert (axiom_int_approximation x4748))
(assert (axiom_int_approximation x4752))
(assert (axiom_int_approximation x4757))
(assert (axiom_int_approximation x4761))
(assert (axiom_int_approximation x4764))
(assert (axiom_int_approximation x4766))
(assert (axiom_int_approximation x4768))
(assert (axiom_int_approximation x4769))
(assert (axiom_int_approximation x4770))
(assert (axiom_int_approximation x4772))
(assert (axiom_int_approximation x4773))
(assert (axiom_int_approximation x4778))
(assert (axiom_int_approximation x4782))
(assert (axiom_int_approximation x4784))
(assert (axiom_int_approximation x4789))
(assert (axiom_int_approximation x4790))
(assert (axiom_int_approximation x4791))
(assert (axiom_int_approximation x4792))
(assert (axiom_int_approximation x4793))
(assert (axiom_int_approximation x4795))
(assert (axiom_int_approximation x4796))
(assert (axiom_int_approximation x4799))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x4800))
(assert (axiom_int_approximation x4802))
(assert (axiom_int_approximation x4806))
(assert (axiom_int_approximation x4808))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x4810))
(assert (axiom_int_approximation x4815))
(assert (axiom_int_approximation x4818))
(assert (axiom_int_approximation x4820))
(assert (axiom_int_approximation x4822))
(assert (axiom_int_approximation x4825))
(assert (axiom_int_approximation x4827))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x4830))
(assert (axiom_int_approximation x4831))
(assert (axiom_int_approximation x4834))
(assert (axiom_int_approximation x4835))
(assert (axiom_int_approximation x4839))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x4840))
(assert (axiom_int_approximation x4842))
(assert (axiom_int_approximation x4844))
(assert (axiom_int_approximation x4847))
(assert (axiom_int_approximation x4849))
(assert (axiom_int_approximation x4853))
(assert (axiom_int_approximation x4854))
(assert (axiom_int_approximation x4858))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x4860))
(assert (axiom_int_approximation x4861))
(assert (axiom_int_approximation x4865))
(assert (axiom_int_approximation x4866))
(assert (axiom_int_approximation x4871))
(assert (axiom_int_approximation x4872))
(assert (axiom_int_approximation x4873))
(assert (axiom_int_approximation x4874))
(assert (axiom_int_approximation x4875))
(assert (axiom_int_approximation x4876))
(assert (axiom_int_approximation x4879))
(assert (axiom_int_approximation x4880))
(assert (axiom_int_approximation x4885))
(assert (axiom_int_approximation x4887))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x4890))
(assert (axiom_int_approximation x4896))
(assert (axiom_int_approximation x4897))
(assert (axiom_int_approximation x4898))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x4902))
(assert (axiom_int_approximation x4904))
(assert (axiom_int_approximation x4909))
(assert (axiom_int_approximation x4912))
(assert (axiom_int_approximation x4916))
(assert (axiom_int_approximation x4917))
(assert (axiom_int_approximation x4918))
(assert (axiom_int_approximation x4919))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x4927))
(assert (axiom_int_approximation x4928))
(assert (axiom_int_approximation x4929))
(assert (axiom_int_approximation x4931))
(assert (axiom_int_approximation x4936))
(assert (axiom_int_approximation x4959))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x4960))
(assert (axiom_int_approximation x4964))
(assert (axiom_int_approximation x4966))
(assert (axiom_int_approximation x4967))
(assert (axiom_int_approximation x4970))
(assert (axiom_int_approximation x4971))
(assert (axiom_int_approximation x4972))
(assert (axiom_int_approximation x4973))
(assert (axiom_int_approximation x4978))
(assert (axiom_int_approximation x4980))
(assert (axiom_int_approximation x4986))
(assert (axiom_int_approximation x4990))
(assert (axiom_int_approximation x4993))
(assert (axiom_int_approximation x4995))
(assert (axiom_int_approximation x4997))
(assert (axiom_int_approximation x4998))
(assert (axiom_int_approximation x5003))
(assert (axiom_int_approximation x5007))
(assert (axiom_int_approximation x5015))
(assert (axiom_int_approximation x5016))
(assert (axiom_int_approximation x5017))
(assert (axiom_int_approximation x5018))
(assert (axiom_int_approximation x5021))
(assert (axiom_int_approximation x5022))
(assert (axiom_int_approximation x5026))
(assert (axiom_int_approximation x5028))
(assert (axiom_int_approximation x5029))
(assert (axiom_int_approximation x5033))
(assert (axiom_int_approximation x5035))
(assert (axiom_int_approximation x5037))
(assert (axiom_int_approximation x5039))
(assert (axiom_int_approximation x5044))
(assert (axiom_int_approximation x5047))
(assert (axiom_int_approximation x5051))
(assert (axiom_int_approximation x5052))
(assert (axiom_int_approximation x5054))
(assert (axiom_int_approximation x5056))
(assert (axiom_int_approximation x5061))
(assert (axiom_int_approximation x5063))
(assert (axiom_int_approximation x5065))
(assert (axiom_int_approximation x5066))
(assert (axiom_int_approximation x5067))
(assert (axiom_int_approximation x5074))
(assert (axiom_int_approximation x5076))
(assert (axiom_int_approximation x5082))
(assert (axiom_int_approximation x5084))
(assert (axiom_int_approximation x5085))
(assert (axiom_int_approximation x5088))
(assert (axiom_int_approximation x5090))
(assert (axiom_int_approximation x5094))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x5101))
(assert (axiom_int_approximation x5102))
(assert (axiom_int_approximation x5105))
(assert (axiom_int_approximation x5106))
(assert (axiom_int_approximation x5109))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x5111))
(assert (axiom_int_approximation x5112))
(assert (axiom_int_approximation x5113))
(assert (axiom_int_approximation x5114))
(assert (axiom_int_approximation x5115))
(assert (axiom_int_approximation x5116))
(assert (axiom_int_approximation x5117))
(assert (axiom_int_approximation x5123))
(assert (axiom_int_approximation x5124))
(assert (axiom_int_approximation x5126))
(assert (axiom_int_approximation x5128))
(assert (axiom_int_approximation x5129))
(assert (axiom_int_approximation x5130))
(assert (axiom_int_approximation x5133))
(assert (axiom_int_approximation x5136))
(assert (axiom_int_approximation x5137))
(assert (axiom_int_approximation x5142))
(assert (axiom_int_approximation x5143))
(assert (axiom_int_approximation x5147))
(assert (axiom_int_approximation x5148))
(assert (axiom_int_approximation x5150))
(assert (axiom_int_approximation x5156))
(assert (axiom_int_approximation x5157))
(assert (axiom_int_approximation x516))
(assert (axiom_int_approximation x5160))
(assert (axiom_int_approximation x5162))
(assert (axiom_int_approximation x5164))
(assert (axiom_int_approximation x5165))
(assert (axiom_int_approximation x5166))
(assert (axiom_int_approximation x5167))
(assert (axiom_int_approximation x5169))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x5174))
(assert (axiom_int_approximation x5175))
(assert (axiom_int_approximation x5177))
(assert (axiom_int_approximation x5178))
(assert (axiom_int_approximation x5180))
(assert (axiom_int_approximation x5181))
(assert (axiom_int_approximation x5183))
(assert (axiom_int_approximation x5188))
(assert (axiom_int_approximation x5189))
(assert (axiom_int_approximation x5190))
(assert (axiom_int_approximation x5194))
(assert (axiom_int_approximation x5196))
(assert (axiom_int_approximation x5197))
(assert (axiom_int_approximation x5199))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x5201))
(assert (axiom_int_approximation x5202))
(assert (axiom_int_approximation x5204))
(assert (axiom_int_approximation x5206))
(assert (axiom_int_approximation x5209))
(assert (axiom_int_approximation x5210))
(assert (axiom_int_approximation x5213))
(assert (axiom_int_approximation x5214))
(assert (axiom_int_approximation x5217))
(assert (axiom_int_approximation x5218))
(assert (axiom_int_approximation x5219))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x5224))
(assert (axiom_int_approximation x5227))
(assert (axiom_int_approximation x5229))
(assert (axiom_int_approximation x523))
(assert (axiom_int_approximation x5230))
(assert (axiom_int_approximation x5231))
(assert (axiom_int_approximation x5233))
(assert (axiom_int_approximation x5234))
(assert (axiom_int_approximation x5239))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x5242))
(assert (axiom_int_approximation x5243))
(assert (axiom_int_approximation x5244))
(assert (axiom_int_approximation x5245))
(assert (axiom_int_approximation x5246))
(assert (axiom_int_approximation x5248))
(assert (axiom_int_approximation x5250))
(assert (axiom_int_approximation x5251))
(assert (axiom_int_approximation x5252))
(assert (axiom_int_approximation x5253))
(assert (axiom_int_approximation x5254))
(assert (axiom_int_approximation x5256))
(assert (axiom_int_approximation x5259))
(assert (axiom_int_approximation x5260))
(assert (axiom_int_approximation x5262))
(assert (axiom_int_approximation x5263))
(assert (axiom_int_approximation x5267))
(assert (axiom_int_approximation x5270))
(assert (axiom_int_approximation x5272))
(assert (axiom_int_approximation x5274))
(assert (axiom_int_approximation x5276))
(assert (axiom_int_approximation x5277))
(assert (axiom_int_approximation x5280))
(assert (axiom_int_approximation x5285))
(assert (axiom_int_approximation x5287))
(assert (axiom_int_approximation x5290))
(assert (axiom_int_approximation x5292))
(assert (axiom_int_approximation x5297))
(assert (axiom_int_approximation x5300))
(assert (axiom_int_approximation x5303))
(assert (axiom_int_approximation x5304))
(assert (axiom_int_approximation x5305))
(assert (axiom_int_approximation x5306))
(assert (axiom_int_approximation x5312))
(assert (axiom_int_approximation x5314))
(assert (axiom_int_approximation x5316))
(assert (axiom_int_approximation x5318))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x5320))
(assert (axiom_int_approximation x5321))
(assert (axiom_int_approximation x5324))
(assert (axiom_int_approximation x5325))
(assert (axiom_int_approximation x5326))
(assert (axiom_int_approximation x5327))
(assert (axiom_int_approximation x5328))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x5330))
(assert (axiom_int_approximation x5332))
(assert (axiom_int_approximation x5334))
(assert (axiom_int_approximation x5339))
(assert (axiom_int_approximation x5344))
(assert (axiom_int_approximation x5348))
(assert (axiom_int_approximation x5349))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x5350))
(assert (axiom_int_approximation x5354))
(assert (axiom_int_approximation x5355))
(assert (axiom_int_approximation x5357))
(assert (axiom_int_approximation x5358))
(assert (axiom_int_approximation x5360))
(assert (axiom_int_approximation x5364))
(assert (axiom_int_approximation x5368))
(assert (axiom_int_approximation x5369))
(assert (axiom_int_approximation x5370))
(assert (axiom_int_approximation x5371))
(assert (axiom_int_approximation x5376))
(assert (axiom_int_approximation x5377))
(assert (axiom_int_approximation x5378))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x5385))
(assert (axiom_int_approximation x5386))
(assert (axiom_int_approximation x5388))
(assert (axiom_int_approximation x5389))
(assert (axiom_int_approximation x5394))
(assert (axiom_int_approximation x5396))
(assert (axiom_int_approximation x5399))
(assert (axiom_int_approximation x5401))
(assert (axiom_int_approximation x5403))
(assert (axiom_int_approximation x5404))
(assert (axiom_int_approximation x5405))
(assert (axiom_int_approximation x5406))
(assert (axiom_int_approximation x5409))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x5410))
(assert (axiom_int_approximation x5411))
(assert (axiom_int_approximation x5412))
(assert (axiom_int_approximation x5413))
(assert (axiom_int_approximation x5414))
(assert (axiom_int_approximation x5416))
(assert (axiom_int_approximation x5417))
(assert (axiom_int_approximation x5418))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x5421))
(assert (axiom_int_approximation x5422))
(assert (axiom_int_approximation x5424))
(assert (axiom_int_approximation x5427))
(assert (axiom_int_approximation x5429))
(assert (axiom_int_approximation x5433))
(assert (axiom_int_approximation x5434))
(assert (axiom_int_approximation x5437))
(assert (axiom_int_approximation x5443))
(assert (axiom_int_approximation x5444))
(assert (axiom_int_approximation x5451))
(assert (axiom_int_approximation x5453))
(assert (axiom_int_approximation x5454))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x5461))
(assert (axiom_int_approximation x5468))
(assert (axiom_int_approximation x5470))
(assert (axiom_int_approximation x5471))
(assert (axiom_int_approximation x5473))
(assert (axiom_int_approximation x5475))
(assert (axiom_int_approximation x5476))
(assert (axiom_int_approximation x5478))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x5481))
(assert (axiom_int_approximation x5482))
(assert (axiom_int_approximation x5483))
(assert (axiom_int_approximation x5486))
(assert (axiom_int_approximation x5489))
(assert (axiom_int_approximation x5490))
(assert (axiom_int_approximation x5492))
(assert (axiom_int_approximation x5494))
(assert (axiom_int_approximation x5496))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x5500))
(assert (axiom_int_approximation x5501))
(assert (axiom_int_approximation x5502))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x5511))
(assert (axiom_int_approximation x5515))
(assert (axiom_int_approximation x5517))
(assert (axiom_int_approximation x5518))
(assert (axiom_int_approximation x5519))
(assert (axiom_int_approximation x5522))
(assert (axiom_int_approximation x5523))
(assert (axiom_int_approximation x5524))
(assert (axiom_int_approximation x5526))
(assert (axiom_int_approximation x5531))
(assert (axiom_int_approximation x5534))
(assert (axiom_int_approximation x5535))
(assert (axiom_int_approximation x5537))
(assert (axiom_int_approximation x5538))
(assert (axiom_int_approximation x5544))
(assert (axiom_int_approximation x5545))
(assert (axiom_int_approximation x5547))
(assert (axiom_int_approximation x5549))
(assert (axiom_int_approximation x5555))
(assert (axiom_int_approximation x5556))
(assert (axiom_int_approximation x5558))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x5561))
(assert (axiom_int_approximation x5563))
(assert (axiom_int_approximation x5565))
(assert (axiom_int_approximation x5566))
(assert (axiom_int_approximation x5569))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x5571))
(assert (axiom_int_approximation x5573))
(assert (axiom_int_approximation x5575))
(assert (axiom_int_approximation x5577))
(assert (axiom_int_approximation x5578))
(assert (axiom_int_approximation x5582))
(assert (axiom_int_approximation x5583))
(assert (axiom_int_approximation x5586))
(assert (axiom_int_approximation x5590))
(assert (axiom_int_approximation x5591))
(assert (axiom_int_approximation x5595))
(assert (axiom_int_approximation x5597))
(assert (axiom_int_approximation x5598))
(assert (axiom_int_approximation x5602))
(assert (axiom_int_approximation x5606))
(assert (axiom_int_approximation x5607))
(assert (axiom_int_approximation x5608))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x5611))
(assert (axiom_int_approximation x5617))
(assert (axiom_int_approximation x5619))
(assert (axiom_int_approximation x5627))
(assert (axiom_int_approximation x5629))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x5637))
(assert (axiom_int_approximation x5639))
(assert (axiom_int_approximation x5642))
(assert (axiom_int_approximation x5648))
(assert (axiom_int_approximation x5649))
(assert (axiom_int_approximation x5650))
(assert (axiom_int_approximation x5656))
(assert (axiom_int_approximation x5658))
(assert (axiom_int_approximation x5660))
(assert (axiom_int_approximation x5661))
(assert (axiom_int_approximation x5668))
(assert (axiom_int_approximation x5671))
(assert (axiom_int_approximation x5676))
(assert (axiom_int_approximation x5678))
(assert (axiom_int_approximation x5680))
(assert (axiom_int_approximation x5681))
(assert (axiom_int_approximation x5686))
(assert (axiom_int_approximation x5688))
(assert (axiom_int_approximation x5692))
(assert (axiom_int_approximation x5693))
(assert (axiom_int_approximation x5694))
(assert (axiom_int_approximation x5695))
(assert (axiom_int_approximation x5696))
(assert (axiom_int_approximation x5697))
(assert (axiom_int_approximation x5698))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x5705))
(assert (axiom_int_approximation x5706))
(assert (axiom_int_approximation x5707))
(assert (axiom_int_approximation x5709))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x5710))
(assert (axiom_int_approximation x5712))
(assert (axiom_int_approximation x5715))
(assert (axiom_int_approximation x5720))
(assert (axiom_int_approximation x5721))
(assert (axiom_int_approximation x5726))
(assert (axiom_int_approximation x5727))
(assert (axiom_int_approximation x5733))
(assert (axiom_int_approximation x5734))
(assert (axiom_int_approximation x5736))
(assert (axiom_int_approximation x5737))
(assert (axiom_int_approximation x5738))
(assert (axiom_int_approximation x5740))
(assert (axiom_int_approximation x5742))
(assert (axiom_int_approximation x5744))
(assert (axiom_int_approximation x5745))
(assert (axiom_int_approximation x5748))
(assert (axiom_int_approximation x5749))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x5754))
(assert (axiom_int_approximation x5756))
(assert (axiom_int_approximation x5757))
(assert (axiom_int_approximation x5759))
(assert (axiom_int_approximation x5764))
(assert (axiom_int_approximation x5767))
(assert (axiom_int_approximation x5769))
(assert (axiom_int_approximation x5771))
(assert (axiom_int_approximation x5772))
(assert (axiom_int_approximation x5773))
(assert (axiom_int_approximation x5776))
(assert (axiom_int_approximation x5777))
(assert (axiom_int_approximation x5779))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x5780))
(assert (axiom_int_approximation x5782))
(assert (axiom_int_approximation x5784))
(assert (axiom_int_approximation x5785))
(assert (axiom_int_approximation x5786))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x5790))
(assert (axiom_int_approximation x5791))
(assert (axiom_int_approximation x5793))
(assert (axiom_int_approximation x5795))
(assert (axiom_int_approximation x5796))
(assert (axiom_int_approximation x5798))
(assert (axiom_int_approximation x5799))
(assert (axiom_int_approximation x5800))
(assert (axiom_int_approximation x5802))
(assert (axiom_int_approximation x5803))
(assert (axiom_int_approximation x5808))
(assert (axiom_int_approximation x5809))
(assert (axiom_int_approximation x5814))
(assert (axiom_int_approximation x5816))
(assert (axiom_int_approximation x5817))
(assert (axiom_int_approximation x5822))
(assert (axiom_int_approximation x5826))
(assert (axiom_int_approximation x5827))
(assert (axiom_int_approximation x5828))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x5831))
(assert (axiom_int_approximation x5833))
(assert (axiom_int_approximation x5834))
(assert (axiom_int_approximation x5835))
(assert (axiom_int_approximation x5836))
(assert (axiom_int_approximation x5841))
(assert (axiom_int_approximation x5847))
(assert (axiom_int_approximation x5850))
(assert (axiom_int_approximation x5853))
(assert (axiom_int_approximation x5856))
(assert (axiom_int_approximation x5859))
(assert (axiom_int_approximation x5862))
(assert (axiom_int_approximation x5863))
(assert (axiom_int_approximation x5869))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x5870))
(assert (axiom_int_approximation x5871))
(assert (axiom_int_approximation x5872))
(assert (axiom_int_approximation x5874))
(assert (axiom_int_approximation x5877))
(assert (axiom_int_approximation x5882))
(assert (axiom_int_approximation x5886))
(assert (axiom_int_approximation x5887))
(assert (axiom_int_approximation x5890))
(assert (axiom_int_approximation x5892))
(assert (axiom_int_approximation x5893))
(assert (axiom_int_approximation x5894))
(assert (axiom_int_approximation x5895))
(assert (axiom_int_approximation x5896))
(assert (axiom_int_approximation x5897))
(assert (axiom_int_approximation x5898))
(assert (axiom_int_approximation x5899))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x5900))
(assert (axiom_int_approximation x5902))
(assert (axiom_int_approximation x5904))
(assert (axiom_int_approximation x5906))
(assert (axiom_int_approximation x5911))
(assert (axiom_int_approximation x5913))
(assert (axiom_int_approximation x5915))
(assert (axiom_int_approximation x5916))
(assert (axiom_int_approximation x5917))
(assert (axiom_int_approximation x5918))
(assert (axiom_int_approximation x5919))
(assert (axiom_int_approximation x5925))
(assert (axiom_int_approximation x5926))
(assert (axiom_int_approximation x5932))
(assert (axiom_int_approximation x5933))
(assert (axiom_int_approximation x5936))
(assert (axiom_int_approximation x5937))
(assert (axiom_int_approximation x5938))
(assert (axiom_int_approximation x5941))
(assert (axiom_int_approximation x5942))
(assert (axiom_int_approximation x5949))
(assert (axiom_int_approximation x5951))
(assert (axiom_int_approximation x5952))
(assert (axiom_int_approximation x5956))
(assert (axiom_int_approximation x5959))
(assert (axiom_int_approximation x5961))
(assert (axiom_int_approximation x5962))
(assert (axiom_int_approximation x5963))
(assert (axiom_int_approximation x5964))
(assert (axiom_int_approximation x5967))
(assert (axiom_int_approximation x5972))
(assert (axiom_int_approximation x5973))
(assert (axiom_int_approximation x5977))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x5980))
(assert (axiom_int_approximation x5982))
(assert (axiom_int_approximation x5983))
(assert (axiom_int_approximation x5984))
(assert (axiom_int_approximation x5985))
(assert (axiom_int_approximation x5986))
(assert (axiom_int_approximation x5987))
(assert (axiom_int_approximation x5989))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x5990))
(assert (axiom_int_approximation x5992))
(assert (axiom_int_approximation x5994))
(assert (axiom_int_approximation x5997))
(assert (axiom_int_approximation x6002))
(assert (axiom_int_approximation x6003))
(assert (axiom_int_approximation x6004))
(assert (axiom_int_approximation x6005))
(assert (axiom_int_approximation x6008))
(assert (axiom_int_approximation x6011))
(assert (axiom_int_approximation x6018))
(assert (axiom_int_approximation x6023))
(assert (axiom_int_approximation x6026))
(assert (axiom_int_approximation x6030))
(assert (axiom_int_approximation x6033))
(assert (axiom_int_approximation x6036))
(assert (axiom_int_approximation x6037))
(assert (axiom_int_approximation x6039))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x6043))
(assert (axiom_int_approximation x6047))
(assert (axiom_int_approximation x6049))
(assert (axiom_int_approximation x6054))
(assert (axiom_int_approximation x6055))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x6061))
(assert (axiom_int_approximation x6066))
(assert (axiom_int_approximation x6068))
(assert (axiom_int_approximation x6069))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x6073))
(assert (axiom_int_approximation x6078))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x6082))
(assert (axiom_int_approximation x6085))
(assert (axiom_int_approximation x6091))
(assert (axiom_int_approximation x6093))
(assert (axiom_int_approximation x6094))
(assert (axiom_int_approximation x6097))
(assert (axiom_int_approximation x6099))
(assert (axiom_int_approximation x6100))
(assert (axiom_int_approximation x6103))
(assert (axiom_int_approximation x6106))
(assert (axiom_int_approximation x6107))
(assert (axiom_int_approximation x6108))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x6111))
(assert (axiom_int_approximation x6112))
(assert (axiom_int_approximation x6115))
(assert (axiom_int_approximation x6118))
(assert (axiom_int_approximation x6122))
(assert (axiom_int_approximation x6124))
(assert (axiom_int_approximation x6126))
(assert (axiom_int_approximation x6130))
(assert (axiom_int_approximation x6131))
(assert (axiom_int_approximation x6132))
(assert (axiom_int_approximation x6133))
(assert (axiom_int_approximation x6136))
(assert (axiom_int_approximation x6138))
(assert (axiom_int_approximation x6143))
(assert (axiom_int_approximation x6144))
(assert (axiom_int_approximation x6145))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x6152))
(assert (axiom_int_approximation x6154))
(assert (axiom_int_approximation x6155))
(assert (axiom_int_approximation x6159))
(assert (axiom_int_approximation x6163))
(assert (axiom_int_approximation x6164))
(assert (axiom_int_approximation x6165))
(assert (axiom_int_approximation x6166))
(assert (axiom_int_approximation x6167))
(assert (axiom_int_approximation x6169))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x6170))
(assert (axiom_int_approximation x6171))
(assert (axiom_int_approximation x6172))
(assert (axiom_int_approximation x6173))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x62))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x628))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x689))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x693))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x715))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x765))
(assert (axiom_int_approximation x768))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x793))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x802))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x817))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x820))
(assert (axiom_int_approximation x822))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x85))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x886))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x935))
(assert (axiom_int_approximation x943))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x952))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x959))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x973))
(assert (axiom_int_approximation x978))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x993))
(assert (axiom_int_approximation x994))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x998))
(assert (axiom_int_approximation x999))
(assert (=> (< (- x1849 1) 10000) (not (= (+ 3 x98) x1849))))
(assert (=> (> (+ 10000 1) x310) (not (= (+ x1186 3) x310))))
(assert (x4630 x2488))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x3414 1)))))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x946 1) x2601))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x902 1))))
(assert (x4630 x1381))
(assert (= x2175 (and x1963 (not x2011))))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x902 1) x1598))))
(assert (not (= (x1211 x946 1) (x1211 x740 2))))
(assert (= x5763 (and (not x3650) x95)))
(assert (not (= (+ 4 x3962) (x1211 x3576 1))))
(assert (=> (< (- x3414 1) 10000) (not (= (x1211 x3992 2) x3414))))
(assert (=> (> (+ 10000 1) x4293) (not (= (+ x3962 3) x4293))))
(assert (not (= 157198259 (x1211 x5421 1))))
(assert (= (x789 x5368) 0))
(assert (not (= (+ 2 x3962) (x1211 x3992 2))))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x1919 1)))))
(assert (=> (< (- x4702 1) 10000) (not (= (+ 1 x2042) x4702))))
(assert (x4630 x1583))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x208 1)))))
(assert (=> (< (- x3576 1) 10000) (not (= (x406 1) x3576))))
(assert (x4630 x1276))
(assert (= (=> (and (= x4097 (= x688 x3964)) (= (x5347 1461501637330902918203684832716283019655932542975 x688) x3964)) (and (=> (not x4097) x3256) (=> x4097 x1104))) x2081))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x4218 2)))))
(assert (= (x3167 x5416) (ite (and (not x5449) x708 x1841) (x2826 x5416) (x3247 x5416))))
(assert (=> (= (x1211 x3543 1) (x1211 x182 1)) (= x3543 x182)))
(assert (= (and x4151 x6109) x3344))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 x4799 1) x3513))))
(assert (= (x1991 x2673) (ite (and x4257 (not x5921) x1212) (x2731 x2673) (x2236 x2673))))
(assert (= (x1441 x5248) (ite (and (not x1694) x494 x5731) (x181 x5248) (x4892 x5248))))
(assert (= x5652 (or x3716 (and x641 x2442))))
(assert (not (= (+ 5 x2042) 4294967296)))
(assert (not (= (x406 1) (x1211 x5421 1))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x4293 1)))))
(assert (not (= (+ 5 x3962) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x1211 x3414 1) (+ x98 1))))
(assert (x399 x3414))
(assert (not (= (x1211 x182 1) 157198259)))
(assert (= (ite (= x3852 x203) 0 (x5079 x203)) (x196 x203)))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (x1211 x3148 3)))))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (+ x2042 3)))))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x3409 1) x561))))
(assert (= x1961 (=> (and (= x5668 x5519) (= x3074 x5895)) x2986)))
(assert (= (or x1936 (and x1215 x4542)) x3415))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x3755 1) x561))))
(assert (not (= (x1211 x3992 2) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x2862 1) x1219))))
(assert (not (= (+ x98 4) (+ x1186 3))))
(assert (x4630 x1589))
(assert (x4630 x5115))
(assert (not (= 3939881817 (+ 2 x2042))))
(assert (= (and (not x3487) x906) x3515))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x2862 1))))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x2862 1) x3992))))
(assert (x4630 x5111))
(assert (=> (< (- x693 1) 10000) (not (= x693 (+ 4 x2042)))))
(assert (x4630 x3558))
(assert (x4630 x2590))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x4293 1) x1598))))
(assert (not (= (x1211 x946 1) 4294967296)))
(assert (not (= (+ x2042 4) (x1211 x3543 1))))
(assert (x4630 x5720))
(assert (not (= (x1211 x5745 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x182 1) x4702))))
(assert (x549 x3581))
(assert (=> (< (- x4610 1) 10000) (not (= (x1211 x4527 1) x4610))))
(assert (= x234 (and x3189 x3214)))
(assert (= (and (not x4654) x204) x2181))
(assert (not (= (x1211 x310 2) (+ x2042 2))))
(assert (not (= (+ x98 3) 117300739)))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ x5409 1))))
(assert (not (= (x1211 x4218 2) (x1211 x946 1))))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x3576 1)))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x310 2)))))
(assert (not (= (x1211 x1919 1) (+ x1186 3))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (x1211 x3992 2)))))
(assert (=> (= (x1211 x3645 1) (x1211 x1112 1)) (= x1112 x3645)))
(assert (= (=> (and (= (x5450 128) x1055) (= 4 x5410) (= (= x2821 0) x710) (= (x3910 x4063) x2821)) (and (=> (not x710) x6161) (=> x710 x3198))) x2771))
(assert (x4630 x2827))
(assert (x4630 x5793))
(assert (= x1542 (=> (and (= (< 0 x4676) x22) (= x2937 (x236 x1822)) (= (x5474 x2937) x4676)) (and (=> (and (not x22) (= x772 x2568)) x102) (=> x22 x2546)))))
(assert (=> (< (- x4284 1) 10000) (not (= (x1211 x4610 1) x4284))))
(assert (=> (> (+ 10000 1) x1303) (not (= (+ 3 x2042) x1303))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ x4054 2))))
(assert (=> (= (x1211 x5917 1) (x1211 274184521717934524641157099916833587231 1)) (= x5917 274184521717934524641157099916833587231)))
(assert (x5138 x3695 x418))
(assert (= (x1266 x5980) 42459404708690159261654315324267577519400883839135586425952143822324095778816))
(assert (not (= (+ 2 x4054) 274184521717934524641157099916833587231)))
(assert (x4630 x2016))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x2060 1) x4799))))
(assert (x4630 x3370))
(assert (x4630 x1588))
(assert (x4630 x2325))
(assert (x263 x2793 x1244))
(assert (not (= (+ x98 4) (x1211 x3755 1))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (+ 3 x1186)))))
(assert (x4630 x1705))
(assert (x4630 x4443))
(assert (=> (= (x1211 x3414 1) (x1211 x1956 1)) (= x3414 x1956)))
(assert (not (= (x1211 x1919 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x1211 x4090 3) (+ 2 x4054))))
(assert (=> (= (x1211 x946 1) (x1211 x3576 1)) (= x946 x3576)))
(assert (not (= (x1211 x1919 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x935 1)))))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x3755 1) x3699))))
(assert (=> (= (x1211 x3414 1) (x1211 x6069 1)) (= x6069 x3414)))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x5500 1) x2758))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x3148 3)))))
(assert (x4630 x1523))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x4090 3) x1089))))
(assert (=> (= (x1211 x3836 1) (x1211 x5917 1)) (= x5917 x3836)))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x310 2) x1248))))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x1451 1) x1467))))
(assert (x4630 x6166))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x902 1))))
(assert (= (=> (= x3253 (= x5213 0)) (and (=> (and (= x5404 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x522 0) x3253) x2109) (=> (not x3253) x3143))) x2748))
(assert (x4630 x1774))
(assert (=> (< (- x928 1) 10000) (not (= (+ x2042 2) x928))))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x4527 1) x561))))
(assert (not (= 274184521717934524641157099916833587202 (+ x3962 2))))
(assert (=> (> (+ 10000 1) x1919) (not (= (+ x2042 5) x1919))))
(assert (=> (= (x1211 x928 1) (x1211 x3576 1)) (= x3576 x928)))
(assert (x399 x1775))
(assert (not (= 1 (x1211 x1956 1))))
(assert (x4630 x315))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x3992 2)))))
(assert (x4630 x2451))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x1211 x4017 1)))))
(assert (x4630 x660))
(assert (not (= (+ 3 x98) (x406 1))))
(assert (not (= (+ x4054 2) (+ x5409 1))))
(assert (x399 x2758))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x2862 1)))))
(assert (not (= (x1211 x935 1) 1000000000000000000)))
(assert (x4630 x2154))
(assert (=> (> (+ 10000 1) x182) (not (= (x1211 x1919 1) x182))))
(assert (x4630 x886))
(assert (not (= (+ 3 x1186) (x406 1))))
(assert (x4630 x1648))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x5917 1)))))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x1112) (not (= (+ x2042 3) x1112))))
(assert (x6051 x4140))
(assert (x4630 x2024))
(assert (=> (< (- x2845 1) 10000) (not (= (x1211 x928 1) x2845))))
(assert (x4630 x2863))
(assert (x4630 x5277))
(assert (=> (> (+ 10000 1) x3979) (not (= (+ 2 x4054) x3979))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (+ 1 x1186)))))
(assert (=> (> (+ 10000 1) x3409) (not (= (+ 5 x3962) x3409))))
(assert (x263 x4927 x5569))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x1852 1))))
(assert (x4630 x3703))
(assert (x4630 x2072))
(assert (=> (= (x1211 x3836 1) (x1211 x2060 1)) (= x2060 x3836)))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (x1211 x6069 1)))))
(assert (= x5154 (=> (= (= 274184521717934524641157099916833587206 x4113) x2913) (and (=> (not x2913) x2163) (=> x2913 x3152)))))
(assert (x4630 x5437))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x208 1) x3979))))
(assert (x4630 x571))
(assert (x4630 x5461))
(assert (x4630 x4063))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ 1 x5409))))
(assert (x6051 x1731))
(assert (x4630 x5709))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (+ x4054 2)))))
(assert (= x2442 (and x1172 (not x4595))))
(assert (=> (> (+ 10000 1) x3543) (not (= (+ x98 4) x3543))))
(assert (= (x5966 x3035) 0))
(assert (not (= (+ x3962 3) (x1211 x6069 1))))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x4017 1) x1598))))
(assert (not (= (x406 1) 3)))
(assert (x6051 x1811))
(assert (not (= (+ 5 x2042) (x1211 x2862 1))))
(assert (x4630 x3528))
(assert (x4630 x4659))
(assert (x4630 x855))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x1956 1) x4554))))
(assert (x4630 x3812))
(assert (=> (< (- x1112 1) 10000) (not (= (+ x98 4) x1112))))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x3543 1)))))
(assert (x4630 x3897))
(assert (x4630 x12))
(assert (=> (> (+ 10000 1) x3543) (not (= (+ 1 x1186) x3543))))
(assert (=> (> (+ 10000 1) x4799) (not (= (+ 2 x2042) x4799))))
(assert (= (x2530 x5985) (ite (and x832 x912 (not x4701)) (x5930 x5985) (ite (and x912 (not x4701) (not x832) (not x1605)) (x5589 x5985) (x3902 x5985)))))
(assert (=> (> (+ 10000 1) x83) (not (= (+ x98 3) x83))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (+ 3 x98)))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x1849 1) x5500))))
(assert (x4630 x1577))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 x902 1)))))
(assert (not (= (x1211 x310 2) 3939881817)))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x928 1))))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x5917 1) x3575))))
(assert (x4630 x76))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x3992 2)))))
(assert (not (= (x1211 x3409 1) 2514000705)))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x3836 1)))))
(assert (not (= (x1211 x1112 1) (+ x1186 4))))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x3543 1) x1956))))
(assert (= (and x4116 (not x3068)) x4823))
(assert (= x1753 (and (not x3200) x2108)))
(assert (x4630 x598))
(assert (= (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x688) x5639) (= (= x5639 x688) x4322)) (and (=> (and x4322 (<= 0 x5822) (= 32 x228) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5822) (= x182 (x5347 1461501637330902918203684832716283019655932542975 x4708)) (= x3158 1) (= (x1211 x182 1) x29) (= x5822 (x4892 x29))) x767) (=> (not x4322) x1035))) x2585))
(assert (x4630 x1766))
(assert (x4630 x2258))
(assert (=> (> (+ 10000 1) x3230) (not (= (+ 4 x1186) x3230))))
(assert (=> (= (x1211 x4284 1) (x1211 x2060 1)) (= x2060 x4284)))
(assert (not (= (x1211 x928 1) 3939881817)))
(assert (=> (= (x1211 x3755 1) (x1211 274184521717934524641157099916833587231 1)) (= 274184521717934524641157099916833587231 x3755)))
(assert (not (= (x1211 x310 2) (x1211 x208 1))))
(assert (= x609 (and x4955 x2074)))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x3543 1) x3543))))
(assert (not (= 18446744073709551615 (x1211 x3836 1))))
(assert (not (= (+ x98 1) (x1211 x4527 1))))
(assert (x4630 x2255))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x4198 1) x1451))))
(assert (not (= (+ x1186 1) (x1211 x1451 1))))
(assert (x6051 x3431))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (x1211 x3836 1)))))
(assert (not (= (+ x3457 2) (+ x2042 5))))
(assert (= x3385 (and x3363 x438)))
(assert (= true x867))
(assert (x4630 x973))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x4800 1)))))
(assert (x4630 x822))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (x1211 x4527 1)))))
(assert (not (= (+ 5 x3962) 1461501637330902918203684832716283019655932542975)))
(assert (x4630 x5870))
(assert (= x1262 (=> (and (= (< 0 x3812) x663) (= (x3088 x5847) x3812)) (and (=> x663 x2226) (=> (not x663) x5361)))))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x6069 1) x3414))))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (+ 3 x2042)))))
(assert (not (= (x1211 x4610 1) (+ 4 x1186))))
(assert (= (x152 128) (x4693 128)))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= 1 (+ 4 x98))))
(assert (=> (< (- x83 1) 10000) (not (= (x1211 x1956 1) x83))))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x3576 1) x5917))))
(assert (=> (< (- x3645 1) 10000) (not (= (+ x4054 2) x3645))))
(assert (= (or x5948 (and x3038 x4602)) x2412))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x3836 1) x1775))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x4090 3)))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x3513 1)))))
(assert (not (= 4168891048 (x1211 x928 1))))
(assert (=> (< (- x5800 1) 10000) (not (= (+ x2042 1) x5800))))
(assert (not (= (x1211 x3576 1) 274184521717934524641157099916833587202)))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (x1211 x310 2)))))
(assert (x4630 x3511))
(assert (x4630 x5412))
(assert (=> (< (- x310 1) 10000) (not (= x310 (x1211 x1956 1)))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x4063) (not (= (+ 1 x3948) x4063))))
(assert (= (and x5438 x621) x1286))
(assert (=> (< (- x3755 1) 10000) (not (= (+ x3962 4) x3755))))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (+ x1186 4)))))
(assert (not (= (+ x98 3) (x1211 x928 1))))
(assert (x4630 x2930))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (x1211 x2060 1)))))
(assert (x4630 x2836))
(assert (=> (> (+ 10000 1) x5500) (not (= (x1211 x1852 1) x5500))))
(assert (= (=> (= (= x2417 274184521717934524641157099916833587206) x6059) (and (=> (not x6059) x5837) (=> x6059 x5829))) x2972))
(assert (not (= (x1211 x4218 2) (x1211 x902 1))))
(assert (=> (> (+ 10000 1) x3166) (not (= (x1211 x182 1) x3166))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x5500 1)))))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x4610 1) x2758))))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (+ 3 x98)))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (+ x2042 4)))))
(assert (x4630 x1633))
(assert (x4630 x4625))
(assert (not (= (x1211 x5500 1) (+ 3 x98))))
(assert (=> (= (x1211 x3409 1) (x1211 x5917 1)) (= x5917 x3409)))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 x4198 1) x3513))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x3513 1) x1451))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x310 2))))
(assert (not (= (x1211 x1112 1) (x1211 x4218 2))))
(assert (x4630 x1966))
(assert (not (= (+ x3457 2) 274184521717934524641157099916833587206)))
(assert (= (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x5816) x4967) (= x2914 (= x5816 x4967))) (and (=> (not x2914) x410) (=> (and x2914 (>= x4626 0) (= x4626 (x4892 x5834)) (= 1 x4768) (= (x1211 x1849 1) x5834) (= (x5347 1461501637330902918203684832716283019655932542975 x96) x1849) (= x3703 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4626)) x1767))) x2094))
(assert (not (= (x1211 x5745 1) (+ 1 x2042))))
(assert (=> (> (+ 10000 1) x3230) (not (= (+ x2042 4) x3230))))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (x1211 x3576 1)))))
(assert (= (x2690 x1803) (ite (and x3235 x3830 (not x4813)) (x1856 x1803) (x4892 x1803))))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x3513 1) x946))))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x1852 1)))))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (+ 1 x1186)))))
(assert (x4630 x4361))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x3645 1)))))
(assert (= (=> (= x3935 (= x4296 0)) (and (=> x3935 x3198) (=> (not x3935) x915))) x5612))
(assert (= (ite (= x3102 x2952) x1034 (x2777 x2952)) (x2657 x2952)))
(assert (not (= 157198259 (x1211 x740 2))))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x5500 1)))))
(assert (not (= (x1211 x2862 1) 1)))
(assert (=> (= (x1211 x935 1) (x1211 x1451 1)) (= x935 x1451)))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (+ 2 x3962)))))
(assert (x4630 x5637))
(assert (x4630 x2582))
(assert (x4630 x3009))
(assert (x4630 x1869))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (+ 3 x1186)))))
(assert (=> (= (x1211 x5745 1) (x1211 x1956 1)) (= x1956 x5745)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (+ 2 x3457))))
(assert (x4630 x1223))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x4554) (not (= (x1211 x4293 1) x4554))))
(assert (x4630 x3799))
(assert (=> (< (- x3836 1) 10000) (not (= (+ x3962 5) x3836))))
(assert (not (= (x406 1) 1000000000000000000)))
(assert (=> (= (x1211 x4198 1) (x1211 x1849 1)) (= x1849 x4198)))
(assert (not (= 274184521717934524641157099916833587202 (+ x2042 1))))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x4284 1) x928))))
(assert (=> (= (x1211 x5745 1) (x1211 x1112 1)) (= x5745 x1112)))
(assert (= x3312 (or (and x2920 (not x4322)) (and x5979 x3055))))
(assert (x4630 x4928))
(assert (x6051 x901))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5256) (= x3863 x5354) (>= x5256 0) (= (= 2 x5256) x3895) (= x5246 x798)) (and (=> x3895 x3198) (=> (not x3895) x1619))) x2230))
(assert (x4630 x2293))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x361 1) x1598))))
(assert (=> (> (+ 10000 1) x2696) (not (= (+ x3962 1) x2696))))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x5500 1) x1598))))
(assert (not (= (+ 1 x98) 18446744073709551615)))
(assert (x6051 x4207))
(assert (not (= (x1211 x3645 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x4630 x2057))
(assert (not (= (+ x3962 3) 4294967296)))
(assert (= x614 (=> (and (= x3300 (x6031 (+ 31 x3285))) (= (x6031 (+ x460 128)) x1241) (= x1106 (or (> x3285 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3285) true) (> 32 x3285)))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3300) x460)) (and (=> x1106 x3198) (=> (not x1106) x2771)))))
(assert (=> (= (x1211 x1919 1) (x1211 x182 1)) (= x182 x1919)))
(assert (x2507 x2782 x3420))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (+ 1 x1186)))))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (x1211 x208 1)))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 3 x98))))
(assert (=> (= (x1211 x4017 1) (x1211 x361 1)) (= x4017 x361)))
(assert (= (=> (and (= x2917 (< 18446744073709551615 x813)) (= x813 (x5474 x2527))) (and (=> (and (or (and (= x484 (uninterp_mod (* x813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2828) (= x777 (x6031 (+ 32 x5267)))) x2828) (= (= 0 x813) x2828) (= (x6031 (+ x5267 x4565)) x5502) (not x2917) (= (x6031 (+ 32 x2473)) x4565) (= x2473 (uninterp_mod (* 32 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5762) (=> x2917 x3198))) x5293))
(assert (not (= (x1211 x4090 3) (x1211 x1919 1))))
(assert (not (= (x1211 x1112 1) (+ 3 x3962))))
(assert (=> (= (x1211 x1956 1) (x1211 x182 1)) (= x182 x1956)))
(assert (not (= (x1211 x4527 1) (+ x2042 5))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x4090 3) x5745))))
(assert (not (= (+ 4 x3962) 157198259)))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x946 1)))))
(assert (=> (< (- x4610 1) 10000) (not (= (+ 4 x1186) x4610))))
(assert (x4630 x1012))
(assert (x4630 x2963))
(assert (=> (< (- x2154 1) 10000) (not (= (+ 4 x3962) x2154))))
(assert (not (= 18446744073709551615 (x1211 x4293 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x1186 4))))
(assert (=> (= (x1211 x3513 1) (x1211 x3409 1)) (= x3409 x3513)))
(assert (x4630 x1676))
(assert (x6051 x4373))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x902 1)))))
(assert (x4630 x6049))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x310 2))))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (+ x3962 4)))))
(assert (not (= (x1211 x3414 1) 2835717307)))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= (+ x3457 2) (+ x2042 4))))
(assert (= x2830 (or (and x4751 x3480) (and x6110 x466))))
(assert (x4630 x2888))
(assert (x4630 x1252))
(assert (x4630 x4120))
(assert (=> (> (+ 10000 1) x928) (not (= (+ x3962 3) x928))))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (+ x2042 2)))))
(assert (= (or (and x3804 x308) (and x3338 x976)) x5322))
(assert (x4630 x349))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ x98 4))))
(assert (=> (= (x1211 x928 1) (x1211 x182 1)) (= x182 x928)))
(assert (x4630 x3836))
(assert (not (= (+ x3962 2) 1000000000000000000)))
(assert (not (= (x1211 x4800 1) (+ 2 x2042))))
(assert (x4630 x2281))
(assert (= x1511 (and x3114 x1631)))
(assert (= x2125 (=> (and (= x5490 (x2984 x5563)) (= x4162 (or (> x5490 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x5490 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x5490))))) (and (=> x4162 x5361) (=> (not x4162) x5507)))))
(assert (=> (< (- x3786 1) 10000) (not (= (+ 1 x5409) x3786))))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x902 1)))))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 274184521717934524641157099916833587231 1) x3255))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (+ 4 x98)))))
(assert (x4630 x4064))
(assert (=> (> (+ 10000 1) x946) (not (= (x1211 x4293 1) x946))))
(assert (x6051 x250))
(assert (x4630 x2366))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (+ 2 x3962)))))
(assert (not (= 2743638299 (+ 3 x2042))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x902 1))))
(assert (=> (> (+ 10000 1) x3166) (not (= (+ x2042 1) x3166))))
(assert (x4630 x3662))
(assert (=> (= (x1211 x3414 1) (x1211 x946 1)) (= x946 x3414)))
(assert (not (= (x1211 x5421 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x1451 1) x310))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x3576 1))))
(assert (= (or (and x5823 (not x640)) (and x5976 x5336)) x5970))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x3409 1) x4554))))
(assert (not (= 274184521717934524641157099916833587231 (+ 1 x2042))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x2060) (not (= (x1211 x3992 2) x2060))))
(assert (x4630 x5786))
(assert (=> (= (x1211 x4284 1) (x1211 x4198 1)) (= x4198 x4284)))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x1849 1) x1112))))
(assert (not (= (x1211 x3148 3) (x1211 274184521717934524641157099916833587231 1))))
(assert (not (= 4168891048 (+ 4 x98))))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x928 1) x4198))))
(assert (not (= (+ x2042 3) (x1211 x1849 1))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (+ x3948 1)))))
(assert (not (= (x1211 x3992 2) (x1211 x1852 1))))
(assert (=> (> (+ 10000 1) x902) (not (= (x1211 x4610 1) x902))))
(assert (not (= (+ 5 x2042) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x4630 x4061))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x3576 1) x1338))))
(assert (x4630 x339))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (x1211 x5421 1)))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x3543 1)))))
(assert (x4630 x1015))
(assert (=> (> (+ 10000 1) x4113) (not (= (x1211 x5745 1) x4113))))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x5421 1)))))
(assert (= x3572 (and x4335 x4290)))
(assert (not (= (x1211 x3513 1) (+ x98 1))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x5745 1)))))
(assert (not (= (x1211 x3148 3) (x1211 x1919 1))))
(assert (=> (< (- x2820 1) 10000) (not (= (x1211 x310 2) x2820))))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x4017 1))))
(assert (= 0 (x4160 x3801)))
(assert (not (= (+ x2042 4) (x1211 x4610 1))))
(assert (= (and x3904 x5632) x5700))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x2060 1) x3699))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x3755 1)))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x310 2)))))
(assert (not (= (x1211 x2862 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x1849 1)))))
(assert (=> (< (- x2060 1) 10000) (not (= (x1211 x4284 1) x2060))))
(assert (= (=> (and (= x1102 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5531)) (= x5531 (x6031 (+ x1256 31))) (= x4048 (x6031 (+ x1102 x1332))) (= x3819 (or (and (= (<= x1256 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1256 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1256)))) (and (=> x3819 x3198) (=> (not x3819) x4428))) x2540))
(assert (x4630 x4232))
(assert (=> (< (- x3699 1) 10000) (not (= (+ x1186 1) x3699))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (+ 1 x1186)))))
(assert (x6051 x4100))
(assert (not (= (x1211 x3836 1) (+ 2 x3457))))
(assert (not (= (x1211 x3148 3) (x1211 x2862 1))))
(assert (=> (< (- x693 1) 10000) (not (= (+ x3962 5) x693))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x1919 1))))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x310 2) x4107))))
(assert (not (= (x1211 x946 1) 1000000000000000000)))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x4799 1) x3511))))
(assert (x4630 x1780))
(assert (= (ite (= x2775 x2568) x2931 (x130 x2568)) (x2579 x2568)))
(assert (not (= (+ x2042 5) (x1211 x310 2))))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (x1211 x740 2)))))
(assert (x4630 x1089))
(assert (x4630 x5082))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ 4 x2042))))
(assert (= x5361 (=> (= x3273 true) x3659)))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x3409 1) x1303))))
(assert (x4630 x4282))
(assert (= x5979 (and x1399 x3430)))
(assert (=> (> (+ 10000 1) x2154) (not (= (+ 1 x5409) x2154))))
(assert (= x3028 (and x3967 x5675)))
(assert (not (= (+ x98 1) (x1211 x3755 1))))
(assert (x4630 x1896))
(assert (not (= (x1211 x4090 3) (x1211 x3755 1))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x4198 1)))))
(assert (x4630 x3442))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 1 x1186))))
(assert (= (=> (and (= 128 x1258) (= x4798 (= 0 x1056)) (= (x3910 x4063) x1056)) (and (=> (not x4798) x585) (=> x4798 x3198))) x3049))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x4017 1) x310))))
(assert (= (and (not x5804) x1764) x2646))
(assert (x5138 x96 x327))
(assert (=> (> (+ 10000 1) x3148) (not (= (x406 1) x3148))))
(assert (not (= (x1211 x902 1) (x1211 x740 2))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x1852 1) x3543))))
(assert (=> (> (+ 10000 1) x693) (not (= (x1211 x6069 1) x693))))
(assert (=> (> (+ 10000 1) x310) (not (= (+ x98 3) x310))))
(assert (x4630 x5188))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (x1211 x928 1)))))
(assert (x4630 x4253))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x4800 1) x3645))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (+ x3962 3)))))
(assert (x4630 x104))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (x1211 x3409 1)))))
(assert (x399 x1919))
(assert (not (= (x1211 x3836 1) (x406 1))))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x3414 1) x1112))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x1451 1)))))
(assert (not (= (x1211 x4610 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (= x4223 (and x5605 x6053)))
(assert (x251 x3462 x3775 x960 x1723))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x4090 3) x3979))))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x3543 1)))))
(assert (=> (< (- x4198 1) 10000) (not (= (x1211 x3414 1) x4198))))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x3513 1) x4800))))
(assert (not (= (x1211 x310 2) (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x3992 2)))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x902 1)))))
(assert (not (= (+ x2042 5) (x1211 x1112 1))))
(assert (x6051 x4560))
(assert (=> (> (+ 10000 1) x6037) (not (= (+ x1186 1) x6037))))
(assert (not (= (x1211 x3755 1) 274184521717934524641157099916833587202)))
(assert (not (= (+ x2042 4) (x406 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 1 x98))))
(assert (=> (> (+ 10000 1) x310) (not (= (+ 1 x3948) x310))))
(assert (= x4456 true))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 x1112 1)))))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x4799 1) x1219))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (+ 1 x2042)))))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (x1211 x5745 1)))))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (+ x2042 2)))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x3576 1)))))
(assert (x4630 x2381))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (+ x1186 3)))))
(assert (x4630 x424))
(assert (=> (< (- x5617 1) 10000) (not (= (x1211 x1849 1) x5617))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x3836 1)))))
(assert (not (= 4294967296 (x1211 x3755 1))))
(assert (x4630 x3546))
(assert (not (= (x1211 x5500 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x4630 x1488))
(assert (not (= (x1211 x4198 1) (+ x98 4))))
(assert (=> (> (+ 10000 1) x5500) (not (= (+ x3948 1) x5500))))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x3755 1) x1112))))
(assert (x4630 x3833))
(assert (x4630 x1242))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x1852 1) x4400))))
(assert (=> (> (+ 10000 1) x2820) (not (= (+ x2042 4) x2820))))
(assert (=> (< (- x2601 1) 10000) (not (= (+ 2 x3962) x2601))))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (x1211 x3755 1)))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x946 1) x3230))))
(assert (=> (> (+ 10000 1) x2696) (not (= (+ 1 x2042) x2696))))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x1956 1) x3255))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x935 1)))))
(assert (= (x1448 x2045) 0))
(assert (x399 x3979))
(assert (x4630 x5280))
(assert (=> (= (x1211 x182 1) (x1211 x5421 1)) (= x182 x5421)))
(assert (not (= (+ x2042 3) (x1211 x1451 1))))
(assert (not (= (+ x98 1) (+ x4054 2))))
(assert (not (= (+ x3962 1) (x1211 x740 2))))
(assert (x4630 x2473))
(assert (= (=> (and (= (x1991 x2673) x3633) (= x1624 (x5645 x4997)) (= x5931 (> x1054 0)) (= x1054 (x5609 x1624))) (and (=> x5931 x5830) (=> (not x5931) x3198))) x3031))
(assert (not (= (+ 1 x2042) (x1211 x3576 1))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (+ 4 x3962)))))
(assert (x4630 x2557))
(assert (= (x3314 x807) (ite (and x757 (not x305) x5626) (x4461 x807) (x4892 x807))))
(assert (not (= 2743638299 (x1211 x928 1))))
(assert (x251 x4560 x1563 x4511 x4712))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x182 1) x4644))))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x1451 1) x4063))))
(assert (= x3060 (=> (and x4104 (= (< (x1953 274184521717934524641157099916833587231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4104) (= x3504 x2571) (= x804 x1813) (= x4324 (x3077 x693))) x1159)))
(assert (=> (< (- x935 1) 10000) (not (= x935 (x1211 x1956 1)))))
(assert (= (or (and x262 x3062) (and x4600 x369)) x2942))
(assert (not (= (+ x3962 1) 4168891048)))
(assert (not (= (+ x3962 4) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= (x1211 x3645 1) 2)))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x4218 2)))))
(assert (not (= (+ x2042 3) (x1211 x3543 1))))
(assert (x4630 x4382))
(assert (=> (= (x1211 x2862 1) (x1211 x4017 1)) (= x2862 x4017)))
(assert (= (=> (and (= (> x3432 0) x5340) (= (x3208 x1355) x4697) (= (x1208 x5492) x1642) (= (x5474 x2045) x3432) (= x2045 (x236 x1822))) (and (=> x5340 x3083) (=> (not x5340) x3198))) x2546))
(assert (x4630 x945))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x3148 3) x3255))))
(assert (x4630 x983))
(assert (= x730 (and x3226 x112)))
(assert (= (and x939 (not x512)) x2224))
(assert (x4630 x777))
(assert (=> (< (- x2601 1) 10000) (not (= (+ 1 x98) x2601))))
(assert (=> (= (x1211 x946 1) (x1211 x1451 1)) (= x946 x1451)))
(assert (not (= 1000000000000000000 (+ x2042 1))))
(assert (x4630 x1872))
(assert (= x3270 (and (not x1645) x5924)))
(assert (=> (> (+ 10000 1) x1852) (not (= (x1211 x3836 1) x1852))))
(assert (not (= (x1211 x4284 1) (+ x1186 4))))
(assert (x4630 x2179))
(assert (=> (> (+ 10000 1) x1112) (not (= (+ x2042 2) x1112))))
(assert (not (= (x1211 x4610 1) (+ x3962 2))))
(assert (not (= (x1211 x4218 2) (x1211 x3414 1))))
(assert (=> (= (x1211 x5500 1) (x1211 x1956 1)) (= x1956 x5500)))
(assert (= x123 (=> (and (= x509 (= x4880 0)) (= x5586 (x3021 x3069)) (= (x3910 x3575) x4880) (= x3069 (x6031 (+ 32 x956))) (= (x5347 1461501637330902918203684832716283019655932542975 x3460) x3595) (= x1050 (x6031 (+ x1806 36))) (= x2994 (x6031 (+ 4 x1806))) (= x3575 (x5347 1461501637330902918203684832716283019655932542975 x1877)) (= x3642 (x5347 1461501637330902918203684832716283019655932542975 x5586))) (and (=> (and (not x509) (= (< 0 x1781) x3635) (or (and (= 1 x6166) x3635 (> 4294967296 x1204)) (and (= x1781 x6166) (not x3635)))) x5958) (=> x509 x5361)))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 1 x1186))))
(assert (=> (< (- x4702 1) 10000) (not (= (x1211 x1919 1) x4702))))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x3414 1) x2696))))
(assert (=> (< (- x4610 1) 10000) (not (= (+ 2 x3457) x4610))))
(assert (x4630 x5961))
(assert (x4630 x3995))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (+ x4054 2)))))
(assert (not (= (+ x3962 5) 2743638299)))
(assert (= x3777 (=> (and (= x6103 (x1211 274184521717934524641157099916833587231 1)) (= x4453 (x3337 (- x2922 x243))) (>= x556 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x556) (= 274184521717934524641157099916833587231 x4519) (= (< x3089 x556) x5804) (= (x1211 x4610 1) x2951) (= (x6064 x2951) x556) (= (x5347 1461501637330902918203684832716283019655932542975 x4792) x4610) (= x3089 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x243)))) (and (=> x5804 x1178) (=> (not x5804) x603)))))
(assert (= (or (and x3838 x4369) (and x5104 x3715)) x4534))
(assert (= x3859 (and (not x3819) x2750)))
(assert (not (= (+ x3962 3) (+ 1 x2042))))
(assert (=> (< (- x3148 1) 10000) (not (= (+ x2042 3) x3148))))
(assert (not (= (x1211 x310 2) (x1211 x3409 1))))
(assert (not (= (x1211 x946 1) 1)))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x406 1)))))
(assert (=> (< (- x561 1) 10000) (not (= (+ x2042 4) x561))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ 1 x5409))))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x935 1) x4644))))
(assert (not (= (x1211 x1919 1) (+ x2042 2))))
(assert (= 0 (x970 (- x1513 x5582))))
(assert (=> (< (- x1775 1) 10000) (not (= (+ x1186 1) x1775))))
(assert (=> (< (- x4218 1) 10000) (not (= (+ x2042 1) x4218))))
(assert (x399 x4610))
(assert (not (= (x1211 x5500 1) (+ x2042 4))))
(assert (=> (> (+ 10000 1) x3992) (not (= (+ x4054 2) x3992))))
(assert (x4630 x4178))
(assert (=> (= (x1211 x2060 1) (x1211 x5917 1)) (= x2060 x5917)))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x6069 1))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x1112 1) x3543))))
(assert (not (= 2514000705 (x1211 x902 1))))
(assert (=> (= (x1211 x946 1) (x1211 x208 1)) (= x208 x946)))
(assert (not (= (+ 4 x3962) 1000000000000000000)))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (+ x1186 1)))))
(assert (x4630 x2221))
(assert (not (= (+ 2 x2042) (x1211 x4610 1))))
(assert (=> (= (x1211 x935 1) (x1211 x3755 1)) (= x935 x3755)))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x1852 1) x1598))))
(assert (x4630 x3502))
(assert (x4630 x3175))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (x1211 x4218 2))))
(assert (=> (< (- x3166 1) 10000) (not (= (+ x3948 1) x3166))))
(assert (= x3700 (=> (= (= 0 x687) x4556) (and (=> (not x4556) x3562) (=> x4556 x3198)))))
(assert (x4630 x2150))
(assert (not (= (x1211 x4293 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x263 x3465 x1811))
(assert (x4630 x4970))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (+ 4 x98)))))
(assert (x4630 x3638))
(assert (not (= (+ x3962 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (+ x4054 2) 826074471)))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x3513 1)))))
(assert (not (= (+ x3962 3) 117300739)))
(assert (x4630 x761))
(assert (not (= (x1211 x4610 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (+ x2042 3)))))
(assert (x4630 x2878))
(assert (=> (< (- x3836 1) 10000) (not (= (+ 1 x5409) x3836))))
(assert (x4630 x1712))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (+ 3 x1186)))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x3148 3)))))
(assert (=> (= (x1211 x4284 1) (x1211 x5421 1)) (= x5421 x4284)))
(assert (not (= 1889567281 (x1211 x6069 1))))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (+ x3962 2)))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x4218 2)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x3755 1))))
(assert (not (= (x1211 x1919 1) (+ x3457 2))))
(assert (=> (> (+ 10000 1) x4198) (not (= (+ x4054 2) x4198))))
(assert (= (or (and x2121 x3925) x2515) x5735))
(assert (not (= (+ 3 x3962) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= (+ x98 1) (x1211 274184521717934524641157099916833587231 1))))
(assert (x4630 x2744))
(assert (= (=> (= x3744 (= x461 0)) (and (=> x3744 x5361) (=> (not x3744) x997))) x866))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (x1211 x361 1)))))
(assert (not (= (+ x98 3) (x1211 x2060 1))))
(assert (=> (> (+ 10000 1) x4113) (not (= (x1211 x3513 1) x4113))))
(assert (not (= (+ x3457 2) (x1211 x3755 1))))
(assert (x4630 x5256))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (+ 3 x3962)))))
(assert (= 0 (x4192 x3108)))
(assert (x4630 x2399))
(assert (=> (< (- x2820 1) 10000) (not (= (x1211 x4610 1) x2820))))
(assert (not (= (+ x3948 1) 826074471)))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x2862 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x3543 1))))
(assert (=> (> (+ 10000 1) x2549) (not (= (+ 3 x98) x2549))))
(assert (=> (> (+ 10000 1) x4554) (not (= (+ x98 3) x4554))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x1919 1)))))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (x1211 x4527 1)))))
(assert (x6051 x5199))
(assert (not (= (+ x3962 4) (x1211 x6069 1))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x3255) (not (= (+ 2 x4054) x3255))))
(assert (=> (= (x1211 x4527 1) (x1211 x4800 1)) (= x4800 x4527)))
(assert (=> (> (+ 10000 1) x935) (not (= (x1211 x4017 1) x935))))
(assert (x6051 x5344))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x5421 1))))
(assert (not (= (x1211 x3576 1) (+ x5409 1))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ x3962 5)))))
(assert (x4630 x5523))
(assert (x6051 x394))
(assert (= x6025 (=> (= (= x4063 274184521717934524641157099916833587206) x4856) (and (=> (not x4856) x5603) (=> (and (< 0 x2243) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x833) (not (= 117300739 x5566)) (= 404098525 x5566) (= x687 1) (= x2800 32) (= x3666 4) (< x5566 826074471) (= x4522 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (= x5566 157198259)) x4856 (not (> 4 x3666)) (= 4 x3666) (= x2243 (x3910 274184521717934524641157099916833587206)) (<= 0 x833)) x3700)))))
(assert (not (= 4294967296 (+ x2042 4))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x4090 3)))))
(assert (=> (< (- x3409 1) 10000) (not (= (+ x2042 2) x3409))))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 x1919 1) x3513))))
(assert (x4630 x4738))
(assert (x4630 x4418))
(assert (not (= 2514000705 (x1211 x3414 1))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x3576 1)))))
(assert (x4630 x1808))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (+ x3962 4)))))
(assert (=> (< (- x208 1) 10000) (not (= (x1211 x4527 1) x208))))
(assert (= x2358 (and x1685 x183)))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x310 2) x3166))))
(assert (x4630 x2793))
(assert (= x3363 (and (not x568) x894)))
(assert (= (=> (and (= x4041 (> x3591 1000000000000000000)) (= x3591 (x2052 x5535))) (and (=> (not x4041) x2640) (=> x4041 x3198))) x476))
(assert (not (= 2835717307 (+ 3 x2042))))
(assert (= (x3145 x2418) 0))
(assert (not (= (x1211 x4527 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x5138 x3230 x5015))
(assert (=> (= (x1211 x4800 1) (x1211 x3513 1)) (= x3513 x4800)))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x902 1)))))
(assert (= x3987 (and (not x6114) x3825)))
(assert (not (= (+ x2042 2) (x1211 x3543 1))))
(assert (x4630 x3644))
(assert (x4630 x1943))
(assert (x4630 x4388))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x4800 1))))
(assert (=> (= (x1211 x2060 1) (x1211 x4198 1)) (= x2060 x4198)))
(assert (x4630 x2894))
(assert (=> (= (x1211 x3414 1) (x1211 x208 1)) (= x208 x3414)))
(assert (x4630 x538))
(assert (=> (< (- x928 1) 10000) (not (= (x406 1) x928))))
(assert (x6051 x1488))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x3148 3)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 3 x1186))))
(assert (not (= (+ 2 x3962) (+ 3 x2042))))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x3148 3) x5800))))
(assert (=> (< (- x5745 1) 10000) (not (= (x1211 x740 2) x5745))))
(assert (= x2561 (or (and x1600 x4786) (and x2032 (not x5559)))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x3409 1)))))
(assert (not (= (+ 1 x2042) (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (+ 2 x3962)))))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (x1211 x4017 1)))))
(assert (not (= (x1211 x182 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (+ x2042 3)))))
(assert (not (= (x1211 x4090 3) (+ 1 x1186))))
(assert (not (= 18446744073709551615 (+ x3948 1))))
(assert (not (= (+ 1 x5409) (x1211 x5917 1))))
(assert (not (= (+ x3457 2) (x1211 x928 1))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (+ x98 3)))))
(assert (not (= (x1211 x4293 1) 1889567281)))
(assert (x5138 x5816 x739))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x946 1)))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x5421 1))))
(assert (not (= (x1211 x740 2) (x1211 x1852 1))))
(assert (x4630 x5189))
(assert (not (= (x1211 x3148 3) (+ 1 x98))))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x1956 1))))
(assert (x4630 x4251))
(assert (x4630 x285))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x4090 3))))
(assert (=> (= (x1211 x1849 1) (x1211 x5421 1)) (= x5421 x1849)))
(assert (x4630 x2078))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x3409 1) x310))))
(assert (x6051 x1087))
(assert (=> (= (x1211 x1849 1) (x1211 x4293 1)) (= x1849 x4293)))
(assert (x4630 x5886))
(assert (not (= (+ x3962 4) 117300739)))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x6069 1)))))
(assert (not (= (+ x3962 4) (+ 3 x1186))))
(assert (not (= (+ 2 x3962) (x1211 x928 1))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x406 1))))
(assert (not (= (x1211 x4527 1) (+ 2 x3962))))
(assert (not (= (+ x98 4) (x1211 x182 1))))
(assert (= x1127 (and x2101 x5407)))
(assert (=> (> (+ 10000 1) x3576) (not (= (+ x2042 1) x3576))))
(assert (=> (< (- x1338 1) 10000) (not (= (+ 3 x1186) x1338))))
(assert (x6051 x3412))
(assert (= (=> (and (= (= x4978 0) x5100) (or (and (= x3818 x2441) x5100 (= 96 x5563)) (and (= (x6031 (+ x4978 63)) x44) (not x5100) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x44) x2341) (= x5992 (x6031 (+ x2341 x3818))) (= x3934 (x6031 (+ 96 x3097))) (= x5563 x3818) (= x2441 x5992)))) x2648) x3263))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x902 1) x208))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x3414 1))))
(assert (=> (< (- x3255 1) 10000) (not (= (x1211 x3992 2) x3255))))
(assert (=> (= (x1211 x4610 1) (x1211 x928 1)) (= x4610 x928)))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x935 1)))))
(assert (x4630 x5354))
(assert (x4630 x5196))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x4293 1)))))
(assert (not (= (x1211 x946 1) 2514000705)))
(assert (not (= (+ 4 x3962) (x1211 x928 1))))
(assert (=> (< (- x1112 1) 10000) (not (= (x1211 x4218 2) x1112))))
(assert (= (and x3858 x601) x2345))
(assert (not (= (+ 1 x5409) 3939881817)))
(assert (x4630 x5177))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x3836 1)))))
(assert (=> (< (- x928 1) 10000) (not (= x928 (+ 2 x4054)))))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x6069 1)))))
(assert (x4630 x1721))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (+ x2042 1)))))
(assert (x4630 x1145))
(assert (x4630 x871))
(assert (not (= (+ 3 x1186) (x1211 x310 2))))
(assert (= (=> (and (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2422)) x3643) (<= x1333 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5990 (x1211 274184521717934524641157099916833587231 1)) (= (x5347 1461501637330902918203684832716283019655932542975 x394) x3755) (= (x1809 x1334) x1333) (= x1334 (x1211 x3755 1)) (= 274184521717934524641157099916833587231 x653) (= (< x3643 x1333) x2587) (= x655 (x3337 (- x3296 x2422))) (>= x1333 0)) (and (=> x2587 x4893) (=> (not x2587) x1638))) x4945))
(assert (x4630 x1451))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x3992 2) x6037))))
(assert (=> (> (+ 10000 1) x3575) (not (= (x1211 x2862 1) x3575))))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (x1211 x208 1)))))
(assert (=> (= (x1211 x1849 1) (x1211 x6069 1)) (= x1849 x6069)))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x4610 1) x3699))))
(assert (= x1796 (and (not x2217) x3218)))
(assert (not (= (x406 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x2668 (and x4116 x3068)))
(assert (x4630 x1905))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (x406 1)))))
(assert (not (= (x1211 x4610 1) 2)))
(assert (=> (< (- x208 1) 10000) (not (= x208 (+ 3 x1186)))))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x182 1) x3511))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x4198 1))))
(assert (= (x789 x1136) 0))
(assert (= x2915 (and x3525 (not x1952))))
(assert (not (= (x1211 x3755 1) 274184521717934524641157099916833587206)))
(assert (=> (= (x1211 x5745 1) (x1211 x5917 1)) (= x5917 x5745)))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (+ 1 x5409)))))
(assert (=> (< (- x1303 1) 10000) (not (= (x1211 x182 1) x1303))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x3513 1) x3230))))
(assert (=> (> (+ 10000 1) x4218) (not (= (+ x3962 1) x4218))))
(assert (=> (= (x1211 x1852 1) (x1211 x928 1)) (= x928 x1852)))
(assert (x4630 x1640))
(assert (x4630 x5478))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x1849 1)))))
(assert (x4630 x2001))
(assert (not (= (+ 1 x3948) (x1211 x4198 1))))
(assert (=> (= (x1211 x4198 1) (x1211 x3409 1)) (= x4198 x3409)))
(assert (= (x2241 x2878) 0))
(assert (not (= (+ 2 x2042) 2)))
(assert (not (= (+ x4054 2) (x1211 x1451 1))))
(assert (not (= 4294967296 (x1211 x4198 1))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x4284 1) x1248))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x182 1)) (= 274184521717934524641157099916833587231 x182)))
(assert (x4630 x1251))
(assert (= (=> (and (= x5228 (or (and (< x4249 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4249) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4249))) (= x1114 (x6031 (+ 31 x4249))) (= x5767 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1114)) (= x2952 (x6031 (+ x2568 x5767)))) (and (=> (not x5228) x4346) (=> x5228 x3198))) x808))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x1956 1) x3543))))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x5745 1) x1248))))
(assert (= (and x5096 (not x4497)) x5440))
(assert (x6051 x1053))
(assert (not (= 2 (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x946 1)))))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (x1211 x6069 1)))))
(assert (=> (< (- x310 1) 10000) (not (= (+ 5 x3962) x310))))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x740 2) x3836))))
(assert (=> (< (- x1919 1) 10000) (not (= (x1211 x3414 1) x1919))))
(assert (not (= 1889567281 (+ 3 x3962))))
(assert (not (= (x1211 x5917 1) (x1211 x310 2))))
(assert (=> (> (+ 10000 1) x4063) (not (= (x1211 x4799 1) x4063))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (+ 1 x3962)))))
(assert (not (= (+ x5409 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x1211 x4527 1) 4294967296)))
(assert (x4630 x176))
(assert (=> (< (- x361 1) 10000) (not (= x361 (+ x3962 5)))))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (x1211 x4198 1)))))
(assert (x4630 x2159))
(assert (not (= (x1211 x2060 1) (+ x3948 1))))
(assert (not (= (x1211 x3414 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= (x1211 x5421 1) (x1211 x4218 2))))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (+ 3 x2042)))))
(assert (not (= (+ x2042 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x4630 x4284))
(assert (x4630 x3602))
(assert (x4630 x3193))
(assert (not (= (x1211 x4218 2) 117300739)))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (+ 1 x1186)))))
(assert (=> (> (+ 10000 1) x1303) (not (= (+ 5 x2042) x1303))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x4017) (not (= (+ 4 x98) x4017))))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (x1211 x902 1)))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (+ x3962 4)))))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x3148) (not (= (x1211 x5745 1) x3148))))
(assert (not (= (x1211 x946 1) (x406 1))))
(assert (=> (= (x1211 x5745 1) (x1211 274184521717934524641157099916833587231 1)) (= x5745 274184521717934524641157099916833587231)))
(assert (not (= (x1211 x3409 1) (+ x98 1))))
(assert (x4630 x3601))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (+ x4054 2)))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (+ 1 x3948)))))
(assert (not (= (x1211 x5745 1) 2743638299)))
(assert (not (= (x1211 x4610 1) 4294967296)))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x4800 1) x5917))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x1112 1)))))
(assert (not (= (+ x98 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (= x3184 (=> (and (= x2450 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x879))) (= (x2177 x99) x879) (= (x6031 (+ 32 x1155)) x99) (= (< x2450 0) x5038)) (and (=> (and (= (x2790 x1155) x5984) (= x879 x1401) (= x1401 x4929) (not x5038) (not x2698) (= x2698 (> x5984 1))) x2656) (=> x5038 x5361)))))
(assert (not (= 157198259 (+ x1186 1))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (+ x1186 4)))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x4218 2)))))
(assert (x4630 x5324))
(assert (x6051 x634))
(assert (x4630 x3516))
(assert (x4630 x1970))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x3513 1)))))
(assert (x4630 x2552))
(assert (not (= 1000000000000000000 (x1211 x3414 1))))
(assert (= (=> (and (= x222 (uninterp_mod (* x6004 x5443) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x4651 (> x881 0))) (and (=> (not x4651) x3198) (=> (and (= (- (/ x222 x881) (uninterp_frac x222 x881)) x5325) (= x5325 x2423) x4651) x2321))) x2387))
(assert (not (= (x1211 x1956 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (x1211 x4284 1)))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x3836 1)))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x3576 1)))))
(assert (x4630 x4666))
(assert (not (= 274184521717934524641157099916833587231 (+ x2042 5))))
(assert (not (= (x1211 x1852 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (= (and x5045 x412) x1097))
(assert (x4630 x469))
(assert (=> (= (x1211 x3409 1) (x1211 x946 1)) (= x3409 x946)))
(assert (x4630 x1427))
(assert (=> (< (- x952 1) 10000) (not (= x952 (+ x3962 2)))))
(assert (=> (= (x1211 x3543 1) (x1211 x5500 1)) (= x5500 x3543)))
(assert (not (= 826074471 (+ 1 x2042))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (+ 1 x5409)))))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x310 2) x1775))))
(assert (= (and x262 (not x3062)) x4358))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (+ x2042 1)))))
(assert (= x859 (=> (and (= x4071 x1013) (= x607 x5496)) x3885)))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (+ x98 1)))))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x952) (not (= (x1211 x946 1) x952))))
(assert (x4630 x5986))
(assert (x4630 x5799))
(assert (not (= (x406 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x4630 x4176))
(assert (= (=> (and (= x5135 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1612) true) (> 32 x1612)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1612))) (= (x6031 (+ x1612 31)) x829) (= x4818 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x829)) (= (x6031 (+ x4818 x1741)) x712)) (and (=> (not x5135) x1281) (=> x5135 x3198))) x2051))
(assert (not (= (x1211 x3645 1) (x1211 x4218 2))))
(assert (x4630 x3733))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (+ x2042 1)))))
(assert (=> (= (x1211 x935 1) (x1211 x902 1)) (= x902 x935)))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x2060 1) x3836))))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x4284 1) x2696))))
(assert (=> (< (- x946 1) 10000) (not (= (+ 5 x3962) x946))))
(assert (x4630 x1546))
(assert (= x1468 (and x2665 x4953)))
(assert (not (= (x1211 x946 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (= (x1211 x5500 1) (x1211 x935 1)) (= x935 x5500)))
(assert (x5138 x4792 x575))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (+ 4 x1186)))))
(assert (= (ite (= x161 x3476) x3268 (x5618 x3476)) (x2487 x3476)))
(assert (x4630 x3240))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x310 2) x3979))))
(assert (= (ite (= x3712 x4447) x3994 (x3313 x4447)) (x400 x4447)))
(assert (=> (= (x1211 x4198 1) (x1211 x1112 1)) (= x4198 x1112)))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x3755 1)))))
(assert (x4630 x4042))
(assert (x399 x2845))
(assert (= (or (and x1898 x473) x2608) x2594))
(assert (=> (< (- x3409 1) 10000) (not (= (+ x98 4) x3409))))
(assert (=> (< (- x4198 1) 10000) (not (= (x1211 x3148 3) x4198))))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (+ 4 x2042)))))
(assert (x4630 x3342))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x3576 1))))
(assert (x4630 x1889))
(assert (not (= (x1211 x4799 1) 2)))
(assert (not (= (x1211 x4198 1) (+ x2042 2))))
(assert (not (= (+ 1 x98) (x406 1))))
(assert (x4630 x2921))
(assert (not (= (x1211 x4090 3) (+ 1 x3962))))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (x406 1)))))
(assert (not (= (x1211 x1956 1) (+ x2042 2))))
(assert (x4630 x5285))
(assert (=> (> (+ 10000 1) x1919) (not (= (+ 1 x1186) x1919))))
(assert (= (x6064 x1803) (ite (= x1803 x6103) x4453 (x3314 x1803))))
(assert (not (= (x1211 x3513 1) 1)))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (+ 4 x98)))))
(assert (=> (< (- x4644 1) 10000) (not (= (+ 1 x5409) x4644))))
(assert (not (= (x1211 x5917 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x4630 x1081))
(assert (=> (> (+ 10000 1) x1248) (not (= (+ x1186 4) x1248))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 1 x1186))))
(assert (x4630 x366))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 3 x98))))
(assert (x4630 x3476))
(assert (= (=> (and (= (> x377 0) x1756) (= x377 (x2995 x3768))) (and (=> (not x1756) x5361) (=> x1756 x5743))) x5058))
(assert (not (= (x1211 x4284 1) (x1211 x3148 3))))
(assert (not (= (x1211 x4527 1) 826074471)))
(assert (= (=> (and (= x5473 (x5474 x2958)) (= (x485 x5082) x3339) (= (< 0 x5473) x5438)) (and (=> x5438 x3665) (=> (not x5438) x3198))) x5789))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (x1211 x4800 1)))))
(assert (not (= (x1211 x3543 1) (+ 5 x2042))))
(assert (not (= (x1211 x5500 1) (+ x3948 1))))
(assert (=> (= (x1211 x3645 1) (x1211 x3409 1)) (= x3409 x3645)))
(assert (= x2206 (=> (and (= x5085 (x6148 x1942)) (= x3928 (x1701 x3094)) (= (x4455 x3928) x2727) (= (> x2727 0) x3597)) (and (=> (not x3597) x5361) (=> x3597 x4535)))))
(assert (=> (= (x1211 x935 1) (x1211 x4017 1)) (= x4017 x935)))
(assert (not (= 1889567281 (x1211 x3836 1))))
(assert (=> (> (+ 10000 1) x3230) (not (= (+ x98 3) x3230))))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x4284 1))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x740 2)))))
(assert (= (and x760 x2223) x3209))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (+ x3962 3)))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x361 1)))))
(assert (not (= 18446744073709551615 (+ x1186 1))))
(assert (not (= (x1211 x4017 1) 2)))
(assert (x4630 x5174))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x182 1))))
(assert (x4630 x5686))
(assert (x263 x1670 x5919))
(assert (not (= (+ 4 x3962) (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x2154) (not (= (x406 1) x2154))))
(assert (not (= (+ 1 x1186) (x1211 x1919 1))))
(assert (not (= (x1211 x4198 1) (+ 1 x3962))))
(assert (=> (< (- x740 1) 10000) (not (= (x1211 x3992 2) x740))))
(assert (=> (= (+ 3 x3962) (+ x98 3)) (= x4218 x740)))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x4527))))
(assert (=> (> (+ 10000 1) x3511) (not (= (+ x1186 1) x3511))))
(assert (x4630 x4008))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (+ x1186 4)))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x3414 1)))))
(assert (= x3202 (=> (and (= x2476 (- (/ x795 1000000000000000000) (uninterp_frac x795 1000000000000000000))) (= x4696 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1973))) (= (uninterp_mod (* x1028 x5681) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x795) (= (- (/ x2476 1000000000000000000) (uninterp_frac x2476 1000000000000000000)) x1973) (= (> x2921 x4696) x827)) (and (=> x827 x5361) (=> (not x827) x5708)))))
(assert (x4630 x4140))
(assert (not (= (x1211 x2862 1) 404098525)))
(assert (=> (< (- x6037 1) 10000) (not (= (+ x4054 2) x6037))))
(assert (= x4525 (=> (and (not x1447) (= x1381 x2281) (= (x5474 x2958) x1627) (= x1447 (> x1627 1))) x1246)))
(assert (not (= (+ 2 x2042) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x4198 1))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x928 1) x902))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x5500 1)))))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x2862 1)))))
(assert (=> (< (- x4063 1) 10000) (not (= (+ 2 x3457) x4063))))
(assert (=> (> (+ 10000 1) x4799) (not (= (+ 2 x3457) x4799))))
(assert (=> (= (x1211 x5500 1) (x1211 x4610 1)) (= x4610 x5500)))
(assert (x4630 x1989))
(assert (not (= (+ x5409 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= (+ x3962 1) (x1211 x3414 1))))
(assert (= x3100 (or (and x4944 x1349) (and (not x513) x4146))))
(assert (not (= (+ x5409 1) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x1211 x5917 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x1467) (not (= (+ x98 1) x1467))))
(assert (not (= (x1211 x4293 1) (+ x2042 2))))
(assert (x4630 x4373))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x1956 1)))))
(assert (not (= (x1211 x6069 1) (+ 5 x3962))))
(assert (x4630 x5090))
(assert (not (= 2 (x1211 x310 2))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (+ x98 4)))))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (x1211 x5421 1)))))
(assert (= x5382 (and (not x4270) x5374)))
(assert (not (= 2743638299 (+ 2 x2042))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x1852 1)))))
(assert (x4630 x284))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x3755 1) x6037))))
(assert (not (= (x1211 x5421 1) 2743638299)))
(assert (not (= 826074471 (x1211 x3576 1))))
(assert (x4630 x203))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x2042 4))))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x935 1)))))
(assert (= x6149 (and x4309 x2073)))
(assert (not (= (x1211 x3543 1) (+ x3962 4))))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (x1211 x4293 1)))))
(assert (not (= 18446744073709551615 (x1211 x5421 1))))
(assert (not (= (x1211 x3992 2) (x1211 x3148 3))))
(assert (x4630 x793))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (+ x3948 1)))))
(assert (not (= (+ 4 x98) (x1211 x5421 1))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x4527 1)))))
(assert (= (x2690 x807) (ite (and x3830 (not x4813) x3235) (x1856 x807) (x4892 x807))))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (x1211 x902 1)))))
(assert (not (= (+ 3 x1186) (+ x2042 5))))
(assert (x4630 x2026))
(assert (= x3870 (=> (and (= (> x2895 0) x1935) (= (x3088 x383) x2895) (= (x3521 x5052) x4232)) (and (=> (not x1935) x5361) (=> x1935 x5319)))))
(assert (x4630 x6112))
(assert (= x2232 (and x1365 x4549)))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x4198 1) x740))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x4198 1)))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 1 x2042))))
(assert (=> (< (- x4702 1) 10000) (not (= (x1211 x2862 1) x4702))))
(assert (= x2745 (or x3820 x5652)))
(assert (=> (< (- x1467 1) 10000) (not (= (+ x98 4) x1467))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x740 2)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 4 x2042))))
(assert (not (= (+ 1 x3948) (+ x1186 3))))
(assert (= x5425 (and (not x1770) x5713)))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ x2042 5))))
(assert (=> (< (- x1919 1) 10000) (not (= (+ 1 x2042) x1919))))
(assert (= (or (and x1079 x4947) x5298) x5821))
(assert (= (=> (and (= (x1390 x3660) x4211) (= (x3910 x2417) x3655) (= (x5347 1461501637330902918203684832716283019655932542975 x4211) x2417) (= x984 (x5347 1461501637330902918203684832716283019655932542975 x85)) (= (x4200 x778) x85) (= (= x3655 0) x5466) (= x1402 (x6031 (+ 4 x1332))) (= (x3337 (- x5558 x1332)) x2622) (= (x5205 x1254) x5650) (= x5558 (x6031 (+ x1332 36))) (= (x6031 (+ 32 x5650)) x3660) (= (x6031 (+ x3537 32)) x1254)) (and (=> x5466 x3198) (=> (not x5466) x2972))) x3963))
(assert (not (= (+ 1 x98) (x1211 x4218 2))))
(assert (=> (< (- x208 1) 10000) (not (= (x406 1) x208))))
(assert (not (= (x1211 x3645 1) 404098525)))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x1919 1)))))
(assert (x399 x208))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x4198 1) x3576))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x3836 1))))
(assert (x4630 x1639))
(assert (x4630 x2988))
(assert (not (= (x1211 x3409 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= (x1211 x1852 1) (+ 1 x3962))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x3409 1)))))
(assert (=> (= (x1211 x5500 1) (x1211 x1849 1)) (= x1849 x5500)))
(assert (x4630 x4249))
(assert (not (= (+ 5 x2042) (x1211 x3414 1))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (+ x2042 2)))))
(assert (= x1417 (and x1771 (not x4093))))
(assert (=> (< (- x3230 1) 10000) (not (= (+ 3 x2042) x3230))))
(assert (not (= (+ x4054 2) 3939881817)))
(assert (x4630 x2716))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (+ 5 x2042)))))
(assert (not (= (+ x1186 3) (x1211 x740 2))))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (x1211 x4799 1)))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x1211 x208 1)))))
(assert (not (= (x1211 x6069 1) (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x4293 1)))))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x3409 1) x208))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x2060 1)))))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x946 1)))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x946 1))))
(assert (x4630 x5199))
(assert (=> (= (x1211 x5745 1) (x1211 x1849 1)) (= x1849 x5745)))
(assert (not (= 157198259 (x1211 x361 1))))
(assert (x4630 x116))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x4218 2) x935))))
(assert (x4630 x1247))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x3992 2) x1956))))
(assert (= x168 (=> (and (= (x3910 274184521717934524641157099916833587202) x1923) (= 36 x4858) (= (or (and (< x1889 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1889))) (> x1889 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2684) (> x1923 0) (= x1889 (x3337 (- x4858 4))) (= x91 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (< x4858 4)) (= x2622 x4858) (not (= x2368 826074471)) (= x2368 1889567281) (= x984 x4198) (not (> 826074471 x2368))) (and (=> (not x2684) x5223) (=> x2684 x2751)))))
(assert (x4630 x2881))
(assert (x4630 x6091))
(assert (=> (> (+ 10000 1) x1852) (not (= (+ 1 x5409) x1852))))
(assert (= (=> (= (= x561 274184521717934524641157099916833587206) x5078) (and (=> (and (= x2196 (x3910 274184521717934524641157099916833587206)) (> x2196 0) (<= x2190 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 826074471 x2390) (= x1128 1) (= x5942 x5902) (= x2409 22270923681254677845691103109158760375340177724800803888364822332811285364736) x5078 (not (< x5902 4)) (= 4 x5902) (= 32 x3437) (not (> 826074471 x2390)) (>= x2190 0)) x120) (=> (not x5078) x6113))) x5923))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (+ x1186 3)))))
(assert (x4630 x5229))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x2060 1)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (+ x98 4)))))
(assert (not (= (x1211 x3836 1) (+ x2042 2))))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (+ 2 x4054)))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (+ 3 x1186)))))
(assert (= x4583 (=> (and (not (= x1997 826074471)) (= x2720 36) (= x2720 36) (= x5279 (or (> x4831 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x4831 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x4831)))) (= x5388 x688) (not (> 4 x2720)) (= 1889567281 x1997) (not (< x1997 826074471)) (> x3183 0) (= x3183 (x3910 274184521717934524641157099916833587206)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3728) (= (x3337 (- x2720 4)) x4831)) (and (=> x5279 x3262) (=> (not x5279) x567)))))
(assert (=> (< (- x6037 1) 10000) (not (= (+ x98 1) x6037))))
(assert (x4630 x522))
(assert (x5138 x4697 x836))
(assert (not (= 117300739 (x1211 x4293 1))))
(assert (= x4719 (and (not x61) x2908)))
(assert (not (= (+ 5 x2042) 1889567281)))
(assert (x4630 x1377))
(assert (=> (> (+ 10000 1) x1219) (not (= (x1211 x1919 1) x1219))))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x740 2) x2549))))
(assert (= 0 (x4012 x4849)))
(assert (not (= (x1211 x4017 1) (+ 2 x4054))))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x5917 1) x5421))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x4218 2))))
(assert (not (= (x1211 x6069 1) 826074471)))
(assert (not (= 4168891048 (x406 1))))
(assert (= x4963 (and x5097 x4794)))
(assert (x4630 x2642))
(assert (not (= (x1211 x3992 2) (x1211 x361 1))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x3414 1))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 1461501637330902918203684832716283019655932542976)))
(assert (= (and x35 (not x2684)) x2053))
(assert (x4630 x246))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 x3414 1)))))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x740 2)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x5500 1))))
(assert (=> (= (x1211 x6069 1) (x1211 x935 1)) (= x6069 x935)))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x2060 1) x3771))))
(assert (=> (< (- x6069 1) 10000) (not (= (+ 1 x5409) x6069))))
(assert (=> (< (- x3755 1) 10000) (not (= (x406 1) x3755))))
(assert (x399 x5745))
(assert (= x3831 (and x4172 x574)))
(assert (not (= (+ x98 3) (+ x1186 4))))
(assert (x4630 x1748))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x3645 1))))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x1849 1) x4284))))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x4198 1)))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x4198 1)))))
(assert (not (= (+ 3 x3962) (x1211 x1849 1))))
(assert (= (or (and x4270 x5374) (and x5382 x2284) (and x254 x4541) (and x1700 (not x632)) (and x5657 x3891) (and x1536 x2458)) x4728))
(assert (x6051 x1061))
(assert (=> (< (- x1451 1) 10000) (not (= (x1211 x1849 1) x1451))))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x928 1) x310))))
(assert (not (= 1889567281 (x1211 x2862 1))))
(assert (= x1173 (or (and x89 x2301) x622)))
(assert (x4630 x1055))
(assert (=> (= (x1211 x1852 1) (x1211 x4293 1)) (= x4293 x1852)))
(assert (= (and x5249 (not x257)) x975))
(assert (not (= 1 (x1211 x4293 1))))
(assert (not (= (+ x98 4) (x1211 x4799 1))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ 1 x1186))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (+ 3 x2042)))))
(assert (=> (> (+ 10000 1) x3786) (not (= (+ x98 3) x3786))))
(assert (=> (< (- x4198 1) 10000) (not (= (+ x2042 3) x4198))))
(assert (x4630 x323))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ x1186 3))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x4017 1))))
(assert (not (= (x1211 x902 1) (+ x3962 2))))
(assert (not (= (x1211 x5421 1) 117300739)))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (+ x1186 3)))))
(assert (x251 x250 x4966 x1980 x5468))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (+ 1 x2042)))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x5745 1)))))
(assert (not (= 18446744073709551615 (x1211 x2060 1))))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (x1211 x946 1)))))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x5500 1) x4554))))
(assert (=> (< (- x1219 1) 10000) (not (= (+ x98 4) x1219))))
(assert (not (= (+ x98 4) (x1211 x3992 2))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x3836 1))))
(assert (x6051 x1705))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 x4198 1)))))
(assert (=> (< (- x1919 1) 10000) (not (= (+ 1 x98) x1919))))
(assert (= (and x2794 (not x190)) x4406))
(assert (x4630 x2886))
(assert (=> (< (- x1219 1) 10000) (not (= (+ x1186 3) x1219))))
(assert (= 0 (x861 x3928)))
(assert (= (=> (and (= x3324 (> x2477 x4023)) (= x4023 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443))) (= x5443 (x3421 x1332))) (and (=> x3324 x3198) (=> (not x3324) x536))) x4428))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x4527 1)))))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (x1211 x946 1)))))
(assert (x4630 x4488))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (+ 5 x2042)))))
(assert (x6051 x4769))
(assert (= (or (and x1396 x1435) (and x2578 x4832)) x5298))
(assert (not (= (x1211 x740 2) (+ 2 x4054))))
(assert (= x4277 (and (not x3627) x4062)))
(assert (= (=> (and (= x3393 x2788) (= x771 0)) x4935) x4938))
(assert (not (= (x1211 x4610 1) (+ 1 x5409))))
(assert (not (= (+ 2 x4054) (+ x3948 1))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (+ 2 x3457)))))
(assert (not (= (+ 3 x2042) (x1211 x3836 1))))
(assert (=> (= (x1211 x1849 1) (x1211 x3543 1)) (= x1849 x3543)))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (+ 4 x1186)))))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x182 1) x1598))))
(assert (x4630 x2211))
(assert (=> (< (- x83 1) 10000) (not (= (x1211 x5500 1) x83))))
(assert (not (= (x1211 x902 1) (x406 1))))
(assert (=> (= (x1211 x182 1) (x1211 x3409 1)) (= x3409 x182)))
(assert (not (= (x1211 x208 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (< (- x1919 1) 10000) (not (= (x1211 x1451 1) x1919))))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x4198 1) x3255))))
(assert (not (= (+ 4 x98) (x1211 x740 2))))
(assert (=> (> (+ 10000 1) x4063) (not (= (x1211 x3409 1) x4063))))
(assert (= (=> (and (= (x5347 x5167 x5377) x3159) (= (ite (> 78 x5949) 1 0) x5377) (= (x5347 x3465 x1811) x3581) (= x5820 (= (x5 x3159 x3581) 0)) (= x1811 (ite (< x5949 32) 1 0)) (= x5167 1) (= 1 x3465)) (and (=> (and (= (< 1 x5949) x527) (or (and (= (x1044 x5949 1) x3295) (not x828) (= x828 (< 1 x3295)) (= (x5347 1 x5949) x155) (= (= x155 0) x3828) x527 (= x4733 100) (= (ite x3828 1 10) x5727)) (and (= x4733 10) (not x527) (= x5727 1))) x5820) x1621) (=> (and (= x4738 (x5041 10 x5949)) (not x5820)) x5151))) x4464))
(assert (=> (< (- x952 1) 10000) (not (= x952 (+ x3962 4)))))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x902 1)))))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x4800 1) x6037))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ x2042 5))))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x3148 3)))))
(assert (x263 x4538 x344))
(assert (not (= (x1211 x4198 1) 2835717307)))
(assert (x263 x4207 x37))
(assert (not (= (x1211 x310 2) (x1211 x361 1))))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (+ 1 x3948)))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x3755 1) x935))))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x5421 1)))))
(assert (x4630 x2251))
(assert (= x4574 (or (and x3201 x3648) x4754)))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x4090 3) x1303))))
(assert (=> (= (x1211 x2862 1) (x1211 x4527 1)) (= x2862 x4527)))
(assert (not (= (+ x1186 3) (x1211 x4017 1))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x4527 1))))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x4017 1)))))
(assert (x6051 x3374))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x208 1)))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x4293 1)))))
(assert (x4630 x6126))
(assert (=> (= (x1211 x361 1) (x1211 x3409 1)) (= x3409 x361)))
(assert (x4630 x4143))
(assert (not (= (x1211 x4090 3) 1)))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x4284 1)))))
(assert (x6051 x3877))
(assert (= (=> (and (= x4541 (> x2799 x1449)) (= x1449 (x6031 (+ x2799 x5637)))) (and (=> (and (= x4311 32) (= x4017 (x5347 1461501637330902918203684832716283019655932542975 x1507)) (= (x1211 x4017 1) x425) (= 1 x3224) (= x1874 x689) (not x4541)) x815) (=> x4541 x2607))) x5237))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x3836 1)))))
(assert (=> (< (- x4107 1) 10000) (not (= (x406 1) x4107))))
(assert (x4630 x3769))
(assert (not (= 117300739 (x1211 x4017 1))))
(assert (not (= (+ 3 x2042) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x4218 2)))))
(assert (=> (= (x1211 x3755 1) (x1211 x3543 1)) (= x3755 x3543)))
(assert (=> (> (+ 10000 1) x2417) (not (= (x406 1) x2417))))
(assert (=> (> (+ 10000 1) x3414) (not (= (+ 5 x3962) x3414))))
(assert (=> (= (x1211 x208 1) (x1211 x4527 1)) (= x208 x4527)))
(assert (=> (> (+ 10000 1) x1919) (not (= (+ 3 x2042) x1919))))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x3409 1) x4107))))
(assert (not (= 4294967296 (x1211 x4017 1))))
(assert (= x4432 (=> (and (= x2069 x1648) (= x3285 x1)) x79)))
(assert (= x6058 (=> (and (= x4986 x2022) (= x3306 x452) (= x2649 x6091) (= x2505 x660) (= x5802 x2881) (= x6152 x5280) (= x1328 x4339)) x3614)))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (x1211 x4610 1)))))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x310 2) x4400))))
(assert (= x2739 (=> (and (= (x3910 x2820) x3452) (= x4497 (= x3452 0)) (= x4193 128)) (and (=> (not x4497) x4686) (=> x4497 x5361)))))
(assert (=> (= (x1211 x935 1) (x1211 x946 1)) (= x935 x946)))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (+ x3962 4)))))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 x1852 1)))))
(assert (= x782 (and x2175 (not x5815))))
(assert (x4630 x4123))
(assert (not (= (x1211 x935 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (< (- x3771 1) 10000) (not (= (+ 2 x3457) x3771))))
(assert (not (= (x1211 x4800 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x6051 x1209))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x5745 1))))
(assert (=> (< (- x3740 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x3740))))
(assert (= (=> (= x2692 (= 274184521717934524641157099916833587202 x3511)) (and (=> x2692 x3844) (=> (not x2692) x699))) x4550))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (x1211 x1451 1)))))
(assert (=> (< (- x693 1) 10000) (not (= (x1211 x310 2) x693))))
(assert (x6051 x1235))
(assert (x4630 x2732))
(assert (=> (< (- x2862 1) 10000) (not (= (+ 4 x1186) x2862))))
(assert (x4630 x173))
(assert (not (= (x1211 x4800 1) (+ 5 x2042))))
(assert (x4630 x3158))
(assert (not (= (x1211 x4799 1) 274184521717934524641157099916833587206)))
(assert (= (=> (and (= x2578 (< 0 x1667)) (= x1287 (uninterp_mod (* x4698 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x2578) x5361) (=> (and (= (- (/ x1287 x1667) (uninterp_frac x1287 x1667)) x1572) x2578 (= x1572 x986)) x2120))) x4066))
(assert (=> (= (x1211 x5500 1) (x1211 x361 1)) (= x361 x5500)))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x1112 1))))
(assert (x4630 x5262))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x3962 4))))
(assert (x4630 x3333))
(assert (=> (= (x1211 x3836 1) (x1211 x1852 1)) (= x1852 x3836)))
(assert (x4630 x687))
(assert (= (x1441 x3806) (ite (and (not x1694) x5731 x494) (x181 x3806) (x4892 x3806))))
(assert (not (= (x1211 x4293 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (+ 1 x3962)))))
(assert (x6051 x3230))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x1852 1) x2758))))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (+ 3 x3962)))))
(assert (not (= 157198259 (+ 5 x3962))))
(assert (not (= 1889567281 (x1211 x310 2))))
(assert (= true x5083))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (+ x3948 1)))))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x3836 1) x310))))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x4610 1) x3576))))
(assert (not (= (x1211 x4527 1) (+ x1186 3))))
(assert (not (= (+ x2042 2) (x1211 x740 2))))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (x1211 x1451 1)))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x928 1)))))
(assert (not (= (+ x3457 2) (x1211 x5500 1))))
(assert (= (and (not x5171) x159) x5669))
(assert (=> (< (- x1089 1) 10000) (not (= (+ 2 x4054) x1089))))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x208 1) x2417))))
(assert (=> (< (- x2758 1) 10000) (not (= (+ x3962 2) x2758))))
(assert (not (= (+ x2042 3) 18446744073709551615)))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (x1211 x928 1)))))
(assert (x4630 x5183))
(assert (not (= (x1211 x4610 1) (x1211 x3148 3))))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x1852 1) x5421))))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 x1956 1) x3513))))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (+ x3962 2)))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ x3962 1))))
(assert (x399 x902))
(assert (=> (= (x1211 x310 2) (x1211 x4218 2)) (= x4218 x310)))
(assert (not (= (x1211 x2862 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x2862 1)))))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x5500 1) x3513))))
(assert (x4630 x2788))
(assert (=> (> (+ 10000 1) x2549) (not (= (+ 2 x4054) x2549))))
(assert (not (= 3939881817 (x1211 x3755 1))))
(assert (x4630 x1355))
(assert (= (x3391 x5563) 0))
(assert (= (ite (and (not x1694) x5731 x494) (x2332 x1632) (x3247 x1632)) (x88 x1632)))
(assert (=> (= (x1211 x3414 1) (x1211 x3543 1)) (= x3414 x3543)))
(assert (not (= (x1211 x182 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x3645 1)))))
(assert (x5138 x424 x2932))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x4017 1) x1248))))
(assert (= (and (not x5336) x5976) x5823))
(assert (=> (> (+ 10000 1) x3511) (not (= (x1211 x3645 1) x3511))))
(assert (x4630 x1213))
(assert (= (x400 x3445) (ite (= x3445 x3712) x3994 (x3313 x3445))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (+ 2 x3962)))))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x5500 1) x5917))))
(assert (x4630 x5617))
(assert (x4630 x6094))
(assert (=> (> (+ 10000 1) x3786) (not (= (x1211 x4198 1) x3786))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x4293 1))))
(assert (x4630 x3450))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x5745 1) x3575))))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x935 1))))
(assert (not (= 157198259 (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x4554) (not (= (x1211 x310 2) x4554))))
(assert (=> (> (+ 10000 1) x935) (not (= (x1211 x3543 1) x935))))
(assert (x6051 x1038))
(assert (=> (> (+ 10000 1) x4284) (not (= (+ x4054 2) x4284))))
(assert (x4630 x5859))
(assert (x4630 x5727))
(assert (not (= (x1211 x935 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (x1211 x3409 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 x6069 1) x361))))
(assert (x4630 x1919))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (x1211 x3513 1)))))
(assert (x6051 x2737))
(assert (= (=> (and (= (x6031 (+ 192 x1355)) x5444) (= x4321 (= x4018 0)) (= (x2550 x5444) x4018)) (and (=> (and (= x5502 x5872) x4321) x2123) (=> (not x4321) x78))) x23))
(assert (not (= (x1211 x740 2) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (+ x2042 3)))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x5745 1)))))
(assert (= (and (not x5060) x5329) x2832))
(assert (=> (< (- x2696 1) 10000) (not (= (+ 2 x4054) x2696))))
(assert (x4630 x714))
(assert (x4630 x1783))
(assert (=> (< (- x2549 1) 10000) (not (= (+ 1 x3948) x2549))))
(assert (not (= (x1211 x1852 1) (+ 4 x3962))))
(assert (x4630 x3230))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x5500 1)))))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (+ 1 x3962)))))
(assert (not (= (+ 1 x5409) (+ 1 x3962))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x946 1)))))
(assert (x4630 x3223))
(assert (not (= (+ x3962 5) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (and x518 (not x509)) x4240))
(assert (not (= (x1211 x5917 1) 1)))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x5500 1)))))
(assert (not (= (+ 1 x3962) (x1211 x4800 1))))
(assert (= x3403 (and x2145 (not x419))))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 x4800 1)))))
(assert (not (= (x1211 x5500 1) (+ x2042 5))))
(assert (= (ite (and x3512 (not x3708) x2869) (x3104 x5017) (ite (and (not x3708) x2869 (not x3512) (not x5704)) (x4101 x5017) (x2322 x5017))) (x1187 x5017)))
(assert (not (= (+ x98 4) (x1211 x3576 1))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (+ x1186 3)))))
(assert (x4630 x2476))
(assert (x6051 x3699))
(assert (=> (> (+ 10000 1) x4113) (not (= (x1211 x4800 1) x4113))))
(assert (not (= (x406 1) (+ x1186 4))))
(assert (= x1936 (or (and x730 x1202) (and (not x1215) x4542))))
(assert (x4630 x4708))
(assert (= (=> (and (= 36 x910) (not (< x6043 826074471)) (= x4527 x4354) (= x6043 1889567281) (= (x3910 274184521717934524641157099916833587206) x4254) (not (= 826074471 x6043)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3739) (and (= (<= x3739 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3739 32))) x4450) (not (< x910 4)) (= (x3337 (- x910 4)) x3739) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x5658) (= x910 x1783) (< 0 x4254)) (and (=> (not x4450) x5390) (=> x4450 x3649))) x295))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x3409 1) x2696))))
(assert (=> (> (+ 10000 1) x3409) (not (= (x1211 x5500 1) x3409))))
(assert (not (= 157198259 (x1211 x3992 2))))
(assert (not (= (x1211 x5500 1) (+ 5 x3962))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x1919 1))))
(assert (=> (< (- x3148 1) 10000) (not (= (x1211 x5917 1) x3148))))
(assert (=> (> (+ 10000 1) x2845) (not (= (+ x98 4) x2845))))
(assert (x4630 x332))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x4293 1)))))
(assert (not (= (+ x2042 4) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (+ x3962 5)))))
(assert (x5138 x1586 x2724))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x4017 1)))))
(assert (not (= (x1211 x4293 1) (x1211 x3992 2))))
(assert (=> (< (- x2845 1) 10000) (not (= (+ 1 x98) x2845))))
(assert (not (= 2835717307 (+ 1 x3948))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x208 1)))))
(assert (not (= (x1211 x6069 1) (+ 1 x5409))))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (x1211 x3992 2)))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x935 1))))
(assert (=> (< (- x1919 1) 10000) (not (= (x1211 x935 1) x1919))))
(assert (= x3192 (=> (and (= x1667 (x6028 x246)) (= x1435 (ite (= 0 x1667) (= 0 x1667) (= x842 0)))) (and (=> (and x1435 (= 0 x986)) x2120) (=> (not x1435) x4864)))))
(assert (= (and x5931 x4512) x2678))
(assert (= x1730 (and x6059 x891)))
(assert (x6051 x4887))
(assert (= true x4435))
(assert (x4630 x136))
(assert (x6051 x1244))
(assert (not (= (x1211 x3645 1) 1889567281)))
(assert (not (= (+ x2042 3) 1889567281)))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x5500 1) x3979))))
(assert (= 0 (x5079 x203)))
(assert (x4630 x4707))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x1956 1))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ 1 x98))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x4090 3)))))
(assert (not (= (x1211 x4017 1) 2743638299)))
(assert (= x290 (and (not x4419) x1022)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ x3457 2))))
(assert (= x2354 (=> (= (= 0 x4638) x4886) (and (=> (not x4886) x2003) (=> x4886 x5361)))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x4610 1) x2549))))
(assert (not (= (x1211 x4799 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (+ 5 x3962)))))
(assert (x4630 x463))
(assert (not (= (x1211 x928 1) (x1211 x4218 2))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (+ x2042 3)))))
(assert (not (= (x1211 x1919 1) 1889567281)))
(assert (x4630 x2141))
(assert (=> (= (x1211 x6069 1) (x1211 x2862 1)) (= x6069 x2862)))
(assert (not (= (+ 2 x2042) 274184521717934524641157099916833587206)))
(assert (=> (< (- x4218 1) 10000) (not (= (+ 4 x98) x4218))))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x935 1) x1089))))
(assert (=> (< (- x4702 1) 10000) (not (= (+ x2042 4) x4702))))
(assert (=> (< (- x902 1) 10000) (not (= x902 (x1211 x3543 1)))))
(assert (x4630 x5902))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 2 x4054))))
(assert (x4630 x5260))
(assert (= x1442 (and x4458 x2006)))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (+ x98 3)))))
(assert (not (= 4294967296 (x1211 x1112 1))))
(assert (x4630 x3493))
(assert (not (= (x1211 x208 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x406 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (not (= (+ x2042 2) (x1211 x2862 1))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (+ 3 x3962)))))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x361 1) x3979))))
(assert (= true x2602))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x5917 1) x2154))))
(assert (=> (< (- x1919 1) 10000) (not (= (+ x3962 5) x1919))))
(assert (x4630 x635))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x4218 2) x1219))))
(assert (=> (= (x1211 x928 1) (x1211 x1919 1)) (= x928 x1919)))
(assert (= x3967 (and x580 x2404)))
(assert (not (= (x406 1) (x1211 x3576 1))))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x740 2) x3645))))
(assert (=> (= (x1211 x3755 1) (x1211 x208 1)) (= x208 x3755)))
(assert (not (= (+ 5 x2042) (+ x98 4))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ x3962 5))))
(assert (=> (= (x1211 x1849 1) (x1211 x4017 1)) (= x1849 x4017)))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x3148 3)))))
(assert (x4630 x1209))
(assert (= (or (and x4595 x1172) (and x2442 (not x641))) x3716))
(assert (= x2208 (=> (and (= x6083 (< x999 x3334)) (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x606)) x999)) (and (=> x6083 x3198) (=> (not x6083) x3098)))))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x3543 1)))))
(assert (x399 x3543))
(assert (x5138 x5133 x5475))
(assert (x4630 x542))
(assert (not (= (x1211 x935 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (< (- x1849 1) 10000) (not (= (+ 1 x3948) x1849))))
(assert (x4630 x5360))
(assert (= x672 (=> (and (= x3747 (x5347 1461501637330902918203684832716283019655932542975 x5816)) (= (= x3747 x5816) x4759)) (and (=> (and (= x1 32) (= x2089 (x1211 x946 1)) (= x946 (x5347 1461501637330902918203684832716283019655932542975 x1586)) (= x1540 (x4892 x2089)) (>= x1540 0) (= x2069 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1540) x4759) x4432) (=> (not x4759) x1990)))))
(assert (=> (> (+ 10000 1) x1852) (not (= (+ 4 x98) x1852))))
(assert (not (= (x1211 x361 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (= (=> (= (= 0 x1273) x2486) (and (=> (not x2486) x3478) (=> x2486 x3198))) x528))
(assert (x4630 x3034))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x5421 1) x6069))))
(assert (x4630 x1287))
(assert (= (=> (= x3280 (= x4559 0)) (and (=> x3280 x5361) (=> (not x3280) x3289))) x5905))
(assert (not (= 4294967296 (x1211 x3543 1))))
(assert (x4630 x984))
(assert (not (= (x1211 x1919 1) 2835717307)))
(assert (=> (= (+ 1 x98) (+ x1186 1)) (= x4218 x310)))
(assert (=> (> (+ 10000 1) x1775) (not (= (+ 2 x3457) x1775))))
(assert (=> (= (x1211 x208 1) (x1211 x4284 1)) (= x4284 x208)))
(assert (not (= (x1211 x5745 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x1248) (not (= (+ 2 x2042) x1248))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x1112 1)))))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x935 1) x4063))))
(assert (not (= 117300739 (x1211 x3645 1))))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x1956 1) x4063))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ 5 x2042)))))
(assert (=> (= (x1211 x3543 1) (x1211 x6069 1)) (= x3543 x6069)))
(assert (not (= 117300739 (x1211 x361 1))))
(assert (x4630 x2433))
(assert (x6051 x4770))
(assert (=> (= (x1211 x3645 1) (x1211 x4017 1)) (= x3645 x4017)))
(assert (not (= (x1211 x5745 1) (+ x4054 2))))
(assert (=> (= (+ x1186 1) (+ x2042 1)) (= x3992 x310)))
(assert (not (= (x1211 x5500 1) (x1211 x4218 2))))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x3992 2)))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x4800 1) x5500))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (+ 3 x3962)))))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 274184521717934524641157099916833587231 1)))))
(assert (x4630 x4186))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (x1211 x4799 1)))))
(assert (x4630 x218))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x4090 3) x4527))))
(assert (=> (= (+ x3962 4) (+ 4 x2042)) (= x740 x3992)))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x3414 1) x1248))))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ 1 x1186) x4113))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x6069 1)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x1919 1))))
(assert (= (=> (and (= x5803 x5862) (= 0 x3043)) x3407) x3905))
(assert (=> (< (- x935 1) 10000) (not (= (+ 3 x2042) x935))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x935 1)))))
(assert (= (=> (and (= x1769 x1853) (= x6011 x5433) (= x5246 x3783)) x40) x4157))
(assert (=> (= (x1211 x3992 2) (x1211 x740 2)) (= x740 x3992)))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x4527 1)))))
(assert (= x4280 (=> (and (= x4901 (> x5798 18446744073709551615)) (= (x3088 x3029) x5798) (= x3029 (x3608 x1015))) (and (=> (and (= (uninterp_mod (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x321) (= x2218 (x6031 (+ x1629 x6008))) (= (x6031 (+ x321 32)) x6008) (or x255 (and (= x489 (x6031 (+ x1629 32))) (not x255) (= (uninterp_mod (* x5798 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1550))) (= x255 (= 0 x5798)) (not x4901)) x2591) (=> x4901 x5361)))))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x4090 3) x2845))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x1451 1)))))
(assert (=> (< (- x1919 1) 10000) (not (= (x1211 x3576 1) x1919))))
(assert (not (= (x1211 x3755 1) (+ x5409 1))))
(assert (=> (= (x1211 x928 1) (x1211 x5745 1)) (= x5745 x928)))
(assert (=> (< (- x310 1) 10000) (not (= x310 (x1211 x4284 1)))))
(assert (not (= (+ x1186 3) (x1211 x1112 1))))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x740 2) x4293))))
(assert (not (= (x1211 x3513 1) (+ x4054 2))))
(assert (=> (< (- x4017 1) 10000) (not (= (x406 1) x4017))))
(assert (=> (< (- x1338 1) 10000) (not (= (+ x2042 1) x1338))))
(assert (= x5420 (and (not x4162) x3792)))
(assert (not (= (x1211 x4284 1) (+ x2042 2))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x2042 3))))
(assert (x4630 x5740))
(assert (not (= 18446744073709551615 (x1211 x1849 1))))
(assert (x251 x5932 x6039 x1048 x3122))
(assert (= (=> (= x5299 (= 274184521717934524641157099916833587202 x2417)) (and (=> (not x5299) x5099) (=> x5299 x168))) x5837))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (x1211 x4284 1)))))
(assert (= (=> (= x474 (= 0 x4590)) (and (=> x474 x3198) (=> (not x474) x2540))) x2242))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (x1211 x6069 1)))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (+ 1 x3962)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x182 1)))))
(assert (not (= (x1211 x902 1) (+ x3948 1))))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x935 1) x3979))))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x5745 1) x4400))))
(assert (=> (< (- x1775 1) 10000) (not (= (x1211 x740 2) x1775))))
(assert (= (=> (= x1702 (< 0 x3125)) (and (=> (not x1702) x3198) (=> x1702 x2355))) x584))
(assert (not (= (x1211 x3148 3) (x1211 x928 1))))
(assert (x5138 x1992 x4359))
(assert (x4630 x5133))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (x1211 x5421 1)))))
(assert (not (= (x1211 x3992 2) (x1211 x2862 1))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x361 1)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (+ x3962 2)))))
(assert (=> (< (- x4610 1) 10000) (not (= (+ 3 x3962) x4610))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x1852 1)) (= 274184521717934524641157099916833587231 x1852)))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x3992 2) x4610))))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (x1211 x3409 1)))))
(assert (= (=> (and (= x2452 x1657) (= x4443 x5597) (= x2927 x1708)) x2008) x5955))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x208 1)))))
(assert (=> (= (x1211 x928 1) (x1211 x935 1)) (= x928 x935)))
(assert (not (= (x1211 x935 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x4293 1)))))
(assert (x4630 x191))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x310 2)))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (+ 4 x98)))))
(assert (x4630 x2949))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (+ x98 1)))))
(assert (x4630 x4653))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x928 1) x4218))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (+ 2 x3962)))))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x3992 2) x3755))))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x902 1) x1338))))
(assert (x6051 x3619))
(assert (x4630 x3382))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x3409 1)))))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x3409 1) x3645))))
(assert (= x5935 (or x1356 x5621)))
(assert (= (or (and x2646 (not x4452)) x1549) x3588))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x5421 1) x4799))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x182 1) x3543))))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (x1211 x310 2)))))
(assert (= (or x2942 (and x3525 x1952)) x3922))
(assert (not (= 3 (+ x3962 2))))
(assert (=> (> (+ 10000 1) x1451) (not (= (+ 2 x3457) x1451))))
(assert (= (and x4020 x6087) x4923))
(assert (not (= (+ 2 x3962) (x1211 x3148 3))))
(assert (not (= 826074471 (x1211 x4017 1))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (+ x98 1)))))
(assert (not (= 1889567281 (x1211 x3755 1))))
(assert (= x1671 (=> (and (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5022) x2542) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x82) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x82)) (> 32 x82))) x2425) (= x5022 (x6031 (+ x82 31))) (= x2421 (x6031 (+ x2542 x846)))) (and (=> (not x2425) x5309) (=> x2425 x3198)))))
(assert (=> (< (- x2417 1) 10000) (not (= (+ x2042 3) x2417))))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x4527 1)))))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x5500 1) x4644))))
(assert (=> (< (- x2549 1) 10000) (not (= (x1211 x4090 3) x2549))))
(assert (= (x402 x1392) (ite (= x3623 x1392) x5471 (x2328 x1392))))
(assert (= x3930 (and x3327 (not x4004))))
(assert (not (= (x1211 x740 2) (x1211 x3409 1))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x2862 1)))))
(assert (x4630 x1006))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x946 1) x4644))))
(assert (=> (< (- x1248 1) 10000) (not (= (+ x4054 2) x1248))))
(assert (not (= (+ x3962 1) (x1211 x4799 1))))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x3513 1)))))
(assert (x4630 x3078))
(assert (x4630 x3604))
(assert (not (= (x1211 x2060 1) (+ x98 4))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x4799 1) x4113))))
(assert (x4630 x4800))
(assert (x4630 x1121))
(assert (x6051 x4678))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x4218 2) x4293))))
(assert (= x562 (=> (and (= (= x389 x1368) x3697) (= x1368 (x3381 x5749)) (= (x5347 255 x1368) x389)) (and (=> (not x3697) x5361) (=> x3697 x630)))))
(assert (= (or (and (not x1618) x650) (and x3514 x1927)) x4906))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x6069 1)))))
(assert (not (= (+ x2042 3) 157198259)))
(assert (= (or x3510 x3415) x5249))
(assert (not (= (x1211 x4800 1) 404098525)))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x3948 1))))
(assert (=> (< (- x561 1) 10000) (not (= x561 (+ x2042 1)))))
(assert (not (= (+ 1 x3948) 1)))
(assert (x4630 x3361))
(assert (x4630 x3383))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (x1211 x935 1)))))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (+ 1 x3948)))))
(assert (=> (= (x1211 x3576 1) (x1211 x4527 1)) (= x3576 x4527)))
(assert (= x5854 (and (not x4372) x3560)))
(assert (not (= (+ 1 x5409) (x1211 x935 1))))
(assert (x4630 x5814))
(assert (not (= (x1211 x740 2) (+ x3948 1))))
(assert (not (= (+ 4 x1186) (+ x2042 3))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x5421 1)))))
(assert (x4630 x2401))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x1451 1) x3543))))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x4284 1) x3645))))
(assert (=> (= (x1211 x4610 1) (x1211 x4527 1)) (= x4610 x4527)))
(assert (=> (< (- x4644 1) 10000) (not (= (x1211 x6069 1) x4644))))
(assert (=> (= (x1211 x946 1) (x1211 x361 1)) (= x361 x946)))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x3645 1) x4293))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (+ 3 x2042)))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (+ x3962 1)))))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x4198 1) x3755))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x2060 1))))
(assert (= x5495 (=> (and (= (x5347 255 x4887) x2148) (= x580 (= x4887 x2148)) (= x4887 (x3539 x4363))) (and (=> x580 x3641) (=> (not x580) x3198)))))
(assert (= x2355 (=> (and (= x2126 x5744) (= x822 x4766) (= x1577 x5018) (= x1979 x3927) (= x6018 x917) (= x1377 x3864) (= x6154 x2197)) x5275)))
(assert (not (= 2743638299 (x1211 x3148 3))))
(assert (x4630 x4379))
(assert (=> (< (- x4284 1) 10000) (not (= (+ x2042 2) x4284))))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x1956 1)))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x3645 1)))))
(assert (x4630 x4729))
(assert (= (=> (and (= (x3725 x3823) x1171) (= x904 (< 0 x1171))) (and (=> (not x904) x3198) (=> x904 x3903))) x42))
(assert (x4630 x4912))
(assert (x4630 x1453))
(assert (= (or (and (not x4717) x1181) x5322) x5380))
(assert (= (and (not x2219) x4460) x1611))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (+ 1 x3962)))))
(assert (x4630 x328))
(assert (not (= (+ 3 x1186) (+ 1 x1186))))
(assert (x4630 x2858))
(assert (=> (= (x1211 x902 1) (x1211 x208 1)) (= x902 x208)))
(assert (not (= (+ x98 3) 2743638299)))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x5421 1))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x4800 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 2 x3962))))
(assert (not (= (x1211 x4218 2) (x1211 x3755 1))))
(assert (x4630 x5274))
(assert (x4630 x1656))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x361 1) x1451))))
(assert (= (=> (and (= (= 0 x4707) x857) (= (x6031 (+ x2527 32)) x3476) (= (x6031 (+ 4 x5502)) x4086) (= x4098 (x5601 x3476)) (= x4707 (x3910 x3230)) (= (x5347 1461501637330902918203684832716283019655932542975 x4098) x1530)) (and (=> (and (= x2584 (> x1556 0)) (not x857) (or (and (= 1 x4141) (> 4294967296 x1094) x2584) (and (= x1556 x4141) (not x2584)))) x404) (=> x857 x3198))) x3190))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (+ 2 x3457)))))
(assert (not (= (x1211 x1112 1) (+ 4 x98))))
(assert (= x2499 (or (and x568 x894) (and x55 x3385))))
(assert (not (= (+ x1186 4) 117300739)))
(assert (not (= (+ 1 x5409) 1889567281)))
(assert (x4630 x1460))
(assert (= x1118 (=> (and (= x3009 (x6031 (+ 31 x2682))) (= x1669 (or (and (= (<= x2682 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2682 32)) (> x2682 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x6031 (+ x959 x3860)) x4382) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3009) x959)) (and (=> (not x1669) x5215) (=> x1669 x5361)))))
(assert (not (= (+ 1 x3962) (x1211 x4610 1))))
(assert (not (= (x1211 x6069 1) (+ x2042 5))))
(assert (x4630 x5227))
(assert (=> (< (- x1849 1) 10000) (not (= (x1211 x3576 1) x1849))))
(assert (not (= 1000000000000000000 (+ 4 x2042))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x2042 4))))
(assert (= (and x5010 x2447) x3189))
(assert (not (= (+ 3 x98) 2835717307)))
(assert (= (ite (= x5726 x3806) x2276 (x1441 x3806)) (x4999 x3806)))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x3148 3)))))
(assert (not (= 3 (x1211 x1849 1))))
(assert (= 0 (x5930 x2381)))
(assert (x4630 x44))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (x1211 x1112 1)))))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x6069 1) x3755))))
(assert (=> (> (+ 10000 1) x4218) (not (= (+ x1186 1) x4218))))
(assert (=> (> (+ 10000 1) x83) (not (= (+ x98 1) x83))))
(assert (not (= (x1211 x182 1) (+ x5409 1))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x2862) (not (= (x1211 x6069 1) x2862))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ 5 x3962))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x3543 1)))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x2862 1)))))
(assert (x399 x3230))
(assert (not (= (+ 1 x98) 117300739)))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x3414 1) x3979))))
(assert (not (= (x1211 x4017 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x4630 x1739))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x928 1) x4107))))
(assert (=> (< (- x4799 1) 10000) (not (= (x1211 x4800 1) x4799))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x3962 2))))
(assert (=> (> (+ 10000 1) x5745) (not (= (+ x3962 5) x5745))))
(assert (x4630 x4725))
(assert (x4630 x1080))
(assert (= 0 (x5930 x1818)))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (+ x98 4)))))
(assert (=> (= (x1211 x3513 1) (x1211 x3543 1)) (= x3513 x3543)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x3409 1))))
(assert (=> (= (x1211 x4017 1) (x1211 x5500 1)) (= x5500 x4017)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x4527 1))))
(assert (x4630 x4166))
(assert (x4630 x1204))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x1852 1) x1338))))
(assert (x4630 x845))
(assert (= (=> (and (= x4296 (x5651 x4261)) (= (+ x3457 2) x4261) (= x4090 (x5347 1461501637330902918203684832716283019655932542975 x4931)) (= (x1211 x4090 3) x3457) (< x4296 256) (= (> x4296 2) x2812)) (and (=> x2812 x3198) (=> (not x2812) x5612))) x1619))
(assert (not (= (+ 2 x3962) (x406 1))))
(assert (= x5172 (=> (= x2282 (= 0 x2130)) (and (=> x2282 x3198) (=> (and (= x5306 (x6031 (+ 32 x4477))) (= (x6031 (+ x5306 x4462)) x2887) (or x721 (and (= (< x1276 x1324) x631) (= x3268 (x5723 x3948)) (= x3948 (x406 1)) (= (uninterp_mod (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4091) (= (x6031 (+ x161 x4091)) x1324) (<= x3268 1461501637330902918203684832716283019655932542975) (>= x3268 0) (not x721) (or (not x631) (and (= x2598 (< x3350 x1324)) (>= x1405 0) (>= 1461501637330902918203684832716283019655932542975 x1405) (< x1405 1461501637330902918203684832716283019655932542976) x631 (= x2485 (x406 1)) (= x3350 (x6031 (+ 64 x161))) (= x5065 (- (/ (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- x5429 x2485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))) (not x2598) (= (x5723 x5429) x1405))) (= (x406 1) x3625) (= x5925 (- (/ (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- x3948 x3625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))) (= x5429 (+ x3948 1)) (= (x6031 (+ x4462 64)) x1276) (> 1461501637330902918203684832716283019655932542976 x3268))) (not x2282) (= (uninterp_mod (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4477) (= (= x6144 0) x721) (= x161 (x6031 (+ x4462 32)))) x3932)))))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x3414 1)))))
(assert (= x3868 (=> (and (= x2420 x5983) (= x4035 x2864)) x4965)))
(assert (x4630 x599))
(assert (= x520 (=> (and (= x4653 x598) (= 0 x2988)) x1617)))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x3513 1) x5617))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x3992 2)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 4 x98))))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (x1211 x5500 1)))))
(assert (x4630 x1129))
(assert (x6051 x571))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 x5745 1)))))
(assert (not (= (+ x2042 2) 404098525)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x2042 1))))
(assert (=> (< (- x1219 1) 10000) (not (= (x406 1) x1219))))
(assert (x5138 x394 x4353))
(assert (=> (> (+ 10000 1) x902) (not (= (x1211 274184521717934524641157099916833587231 1) x902))))
(assert (x4630 x3266))
(assert (=> (< (- x361 1) 10000) (not (= (+ x3962 1) x361))))
(assert (=> (< (- x1338 1) 10000) (not (= (+ x5409 1) x1338))))
(assert (x4630 x6132))
(assert (x4630 x1210))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x902 1)))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x4293 1) x935))))
(assert (= (and (not x5400) x977) x3376))
(assert (not (= 1 (x1211 x4017 1))))
(assert (not (= (x1211 x6069 1) 2)))
(assert (x6051 x4708))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x2060 1) x1852))))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x3836 1)))))
(assert (not (= (+ 5 x2042) (+ 2 x4054))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (+ x1186 4)))))
(assert (not (= (+ 3 x1186) (x1211 x1956 1))))
(assert (x4630 x3316))
(assert (not (= (x1211 x3836 1) 274184521717934524641157099916833587202)))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (x406 1)))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x2060 1)))))
(assert (= x2065 (and x979 (not x5241))))
(assert (= x3959 (or (and x1753 x3172) (and x2108 x3200))))
(assert (=> (> (+ 10000 1) x4113) (not (= (x1211 x928 1) x4113))))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x3755 1) x4799))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x2862 1))))
(assert (x4630 x3135))
(assert (not (= 2743638299 (x1211 x6069 1))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x1112 1)))))
(assert (x4630 x829))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (x1211 x310 2))))
(assert (not (= (+ x1186 3) (x1211 x3414 1))))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x3576 1) x4293))))
(assert (= (ite (and (not x305) x757 x5626) (x2597 x4834) (x3247 x4834)) (x3313 x4834)))
(assert (x4630 x5394))
(assert (not (= 2514000705 (x1211 x3513 1))))
(assert (=> (> (+ 10000 1) x693) (not (= (+ 1 x3962) x693))))
(assert (not (= (x1211 x1849 1) 3939881817)))
(assert (not (= (x1211 x361 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ x3962 3))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (+ 1 x98)))))
(assert (= 0 (x5810 x2149)))
(assert (not (= 2835717307 (x1211 x946 1))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x4610 1)))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x310 2))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x3148 3))))
(assert (= (and x3930 x1347) x4168))
(assert (x4630 x1928))
(assert (not (= 404098525 (x1211 x3409 1))))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (x1211 x4198 1)))))
(assert (=> (= (x1211 x4610 1) (x1211 x3755 1)) (= x3755 x4610)))
(assert (x399 x3992))
(assert (=> (< (- x1775 1) 10000) (not (= (x1211 x5745 1) x1775))))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x6069 1) x1303))))
(assert (not (= 274184521717934524641157099916833587231 (+ x2042 4))))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x4284 1) x4610))))
(assert (x4630 x15))
(assert (=> (< (- x1775 1) 10000) (not (= (x1211 x1849 1) x1775))))
(assert (x4630 x186))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x5917 1) x1112))))
(assert (not (= 157198259 (x1211 x1451 1))))
(assert (not (= 1000000000000000000 (x1211 x3576 1))))
(assert (x4630 x4676))
(assert (=> (= (x1211 x5745 1) (x1211 x182 1)) (= x182 x5745)))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (+ x1186 3)))))
(assert (not (= (x1211 x1852 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x902 1) x2549))))
(assert (=> (= (x1211 x4800 1) (x1211 x3755 1)) (= x3755 x4800)))
(assert (=> (> (+ 10000 1) x4063) (not (= (x406 1) x4063))))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (+ x98 3)))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x1211 x3543 1)))))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (+ 4 x3962)))))
(assert (x4630 x1336))
(assert (= (=> (and (= (x1150 x3503) x496) (= (> x496 0) x3024)) (and (=> x3024 x2463) (=> (not x3024) x3198))) x5398))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x4293 1)))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (+ 3 x3962)))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x2696))))
(assert (not (= (+ 4 x3962) 2743638299)))
(assert (x4630 x1921))
(assert (= x2901 (and x2998 x1130)))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x4527 1)))))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x310 2) x4198))))
(assert (not (= (+ x3962 3) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x4630 x3658))
(assert (x4630 x4118))
(assert (=> (> (+ 10000 1) x3755) (not (= (+ x1186 1) x3755))))
(assert (x6051 x373))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x3414 1)))))
(assert (=> (> (+ 10000 1) x902) (not (= (x1211 x182 1) x902))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (x1211 x5421 1)))))
(assert (not (= (x1211 x1849 1) (+ x1186 1))))
(assert (=> (> (+ 10000 1) x2862) (not (= (x1211 x3409 1) x2862))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x406 1)))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x902 1)))))
(assert (=> (> (+ 10000 1) x3836) (not (= (+ 2 x3962) x3836))))
(assert (=> (< (- x3414 1) 10000) (not (= (x1211 x5421 1) x3414))))
(assert (x4630 x2819))
(assert (x4630 x2441))
(assert (=> (= (x1211 x3645 1) (x1211 x4610 1)) (= x3645 x4610)))
(assert (x4630 x2641))
(assert (=> (< (- x3576 1) 10000) (not (= (+ x3457 2) x3576))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (+ 4 x2042)))))
(assert (x4630 x3591))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x4800 1) x2154))))
(assert (x4630 x4294))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x935 1) x3414))))
(assert (not (= (x1211 x946 1) (+ 1 x98))))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x1112 1) x1089))))
(assert (= true x1277))
(assert (=> (= (x1211 x3543 1) (x1211 x1451 1)) (= x3543 x1451)))
(assert (=> (= (x1211 x5421 1) (x1211 x3513 1)) (= x5421 x3513)))
(assert (x4630 x3751))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x4218 2) x2154))))
(assert (=> (> (+ 10000 1) x4554) (not (= (+ 5 x3962) x4554))))
(assert (= (=> (and (= x572 (= x1251 x1543)) (= x1251 (x5347 1461501637330902918203684832716283019655932542975 x1543)) (= x4931 x735)) (and (=> (not x572) x3198) (=> x572 x2230))) x1070))
(assert (not (= (x1211 x740 2) (x1211 x1112 1))))
(assert (not (= (x1211 x3836 1) 1461501637330902918203684832716283019655932542976)))
(assert (x4630 x3035))
(assert (not (= (+ x3457 2) 4168891048)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x3457 2))))
(assert (=> (< (- x1451 1) 10000) (not (= (x1211 x1451 1) x1451))))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x4090 3) x4107))))
(assert (= x4663 (=> (and (= x1847 (x3088 x5847)) (= x5559 (> x1847 0))) (and (=> x5559 x1262) (=> (and (not x5559) (= x4998 x2686)) x3173)))))
(assert (=> (= (x1211 x1112 1) (x1211 x4610 1)) (= x1112 x4610)))
(assert (not (= (+ 4 x1186) (x1211 x3148 3))))
(assert (not (= (+ 4 x98) (x1211 x3414 1))))
(assert (x4630 x765))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (= (x1211 x4800 1) (x1211 x208 1)) (= x4800 x208)))
(assert (=> (> (+ 10000 1) x3786) (not (= (+ x3962 4) x3786))))
(assert (=> (> (+ 10000 1) x3576) (not (= (+ 4 x2042) x3576))))
(assert (not (= 2 (x1211 x4198 1))))
(assert (x4630 x3288))
(assert (=> (= (x1211 x902 1) (x1211 x3576 1)) (= x3576 x902)))
(assert (=> (> (+ 10000 1) x2060) (not (= (+ 1 x2042) x2060))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x3645 1))))
(assert (not (= 157198259 (x1211 x4610 1))))
(assert (=> (< (- x2549 1) 10000) (not (= (x1211 x361 1) x2549))))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (x1211 x3836 1)))))
(assert (not (= (x1211 x4090 3) 2743638299)))
(assert (not (= 4294967296 (x1211 x4799 1))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x4284 1))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (+ 4 x1186)))))
(assert (not (= (+ x3962 4) (+ 1 x5409))))
(assert (= (=> (= x2352 (= 274184521717934524641157099916833587202 x693)) (and (=> (not x2352) x2602) (=> x2352 x5729))) x531))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x1451 1) x1852))))
(assert (not (= (x1211 x3645 1) (+ x3962 4))))
(assert (not (= (+ 4 x3962) 404098525)))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (+ 5 x2042)))))
(assert (not (= (x1211 x3414 1) (x1211 x4090 3))))
(assert (not (= (x1211 x3409 1) (+ 5 x3962))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (+ x98 3)))))
(assert (not (= (x1211 x3513 1) (+ 1 x5409))))
(assert (x263 x571 x5489))
(assert (not (= (+ 3 x1186) (x1211 x3992 2))))
(assert (x4630 x1923))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x946 1) x2758))))
(assert (x5138 x486 x2235))
(assert (= (x4101 x3660) (ite (= x3660 x2072) 0 (x3104 x3660))))
(assert (=> (= (x1211 x5917 1) (x1211 x1112 1)) (= x1112 x5917)))
(assert (x6051 x2019))
(assert (= 0 (x594 x3577)))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (x1211 x4293 1)))))
(assert (= x6046 (=> (and (= (x3375 x98) x3511) (>= x5348 0) (>= x3511 0) (<= x5348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x3511 1461501637330902918203684832716283019655932542975) (= x121 0) (= (+ 3 x98) x4520) (< x3511 1461501637330902918203684832716283019655932542976) (= (= x5246 115792089237316195423570985008687907853269984665640564039457584007913129639935) x794) (= x5348 (x5278 x4520))) (and (=> x794 x4814) (=> (not x794) x320)))))
(assert (x4630 x1754))
(assert (x4630 x2820))
(assert (x4630 x6169))
(assert (not (= (+ 2 x3962) (x1211 x1919 1))))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (x1211 x3755 1)))))
(assert (=> (< (- x935 1) 10000) (not (= x935 (x1211 x3409 1)))))
(assert (x4630 x489))
(assert (= (and (not x3138) x5807) x5198))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (x1211 x4293 1)))))
(assert (=> (= (x1211 x1112 1) (x1211 x2060 1)) (= x1112 x2060)))
(assert (= x1878 (and (not x4608) x5935)))
(assert (not (= (+ 4 x98) (x1211 x4293 1))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x5500 1))))
(assert (x4630 x5209))
(assert (not (= (+ 3 x3962) (x1211 x928 1))))
(assert (not (= (x1211 x182 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x4630 x5892))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (+ x2042 5)))))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x310 2) x1112))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x1112 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x2060 1))))
(assert (= x5677 (and (not x3906) x5825)))
(assert (not (= (x1211 x1919 1) (+ 1 x3962))))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x3513 1) x1089))))
(assert (x4630 x3318))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x4017 1))))
(assert (=> (< (- x1303 1) 10000) (not (= (x1211 x1919 1) x1303))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x3755 1)))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x4198 1)))))
(assert (= x2677 (and (not x4450) x5851)))
(assert (=> (< (- x6069 1) 10000) (not (= (+ x1186 1) x6069))))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x3755 1) x2862))))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (+ 4 x98)))))
(assert (not (= (+ x98 4) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= (x1211 x4610 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= (x1211 x208 1) (+ 5 x2042))))
(assert (not (= (x1211 x4610 1) (+ 4 x3962))))
(assert (x4630 x2862))
(assert (x6051 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (+ x5409 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= (x1211 x1956 1) x5745))))
(assert (x263 x1087 x3653))
(assert (=> (> (+ 10000 1) x946) (not (= (+ 5 x2042) x946))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x1956 1)))))
(assert (x4630 x1847))
(assert (x4630 x2814))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x1775) (not (= (+ x3948 1) x1775))))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 x3645 1)))))
(assert (not (= (x1211 x4293 1) (x1211 x740 2))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x4198 1)))))
(assert (not (= (x1211 x1451 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x1112 1) x4284))))
(assert (=> (> (+ 10000 1) x5500) (not (= (+ 5 x2042) x5500))))
(assert (not (= (x1211 x5917 1) (+ 2 x3962))))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= (x1211 x1852 1) (+ x3457 2))))
(assert (x4630 x264))
(assert (not (= (x1211 x740 2) 1)))
(assert (=> (= (x1211 x4800 1) (x1211 x4198 1)) (= x4198 x4800)))
(assert (not (= (x406 1) (+ x3962 3))))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x1451 1) x4107))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x1849 1))))
(assert (not (= (+ x98 1) (x1211 x4799 1))))
(assert (not (= (+ 1 x3948) (x1211 x3409 1))))
(assert (=> (= (x1211 x935 1) (x1211 x1919 1)) (= x1919 x935)))
(assert (not (= (x1211 x4293 1) (+ 3 x1186))))
(assert (not (= (x1211 x935 1) (+ x4054 2))))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x5800) (not (= (x1211 x740 2) x5800))))
(assert (x6051 x1815))
(assert (not (= (+ x3457 2) (+ x98 3))))
(assert (= (=> (and (= (x2995 x3768) x3234) (= x2444 (> x3234 0))) (and (=> (not x2444) x5361) (=> x2444 x4269))) x630))
(assert (=> (> (+ 10000 1) x3575) (not (= (+ 2 x3962) x3575))))
(assert (x4630 x1058))
(assert (=> (< (- x4702 1) 10000) (not (= (+ 2 x3457) x4702))))
(assert (x4630 x3807))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x3513 1) x3255))))
(assert (x4630 x1177))
(assert (not (= 274184521717934524641157099916833587206 (+ x2042 5))))
(assert (x4630 x3449))
(assert (=> (> (+ 10000 1) x3992) (not (= (+ x3457 2) x3992))))
(assert (not (= 1000000000000000000 (+ x98 4))))
(assert (not (= (x1211 x4293 1) (+ 1 x3948))))
(assert (not (= (x1211 x3992 2) (+ 2 x4054))))
(assert (= (=> (= (= 0 x4141) x1851) (and (=> (not x1851) x1691) (=> x1851 x3198))) x404))
(assert (=> (> (+ 10000 1) x4800) (not (= (+ x2042 3) x4800))))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (x1211 x182 1)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x4527 1))))
(assert (x4630 x5389))
(assert (x4630 x4256))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x4284 1)))))
(assert (x399 x310))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x5421 1) x1598))))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (x1211 x4527 1)))))
(assert (=> (< (- x561 1) 10000) (not (= x561 (x1211 x208 1)))))
(assert (= (=> (= x4270 (> x5637 x5204)) (and (=> x4270 x2607) (=> (not x4270) x4988))) x1538))
(assert (x4630 x3356))
(assert (x4630 x4089))
(assert (=> (< (- x3409 1) 10000) (not (= (x1211 x3576 1) x3409))))
(assert (=> (= (x1211 x361 1) (x1211 x1112 1)) (= x361 x1112)))
(assert (x4630 x1997))
(assert (x6051 x1992))
(assert (x549 x3159))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x1919 1) x2549))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ 2 x3457))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (+ 4 x3962)))))
(assert (=> (> (+ 10000 1) x3786) (not (= (x1211 x5500 1) x3786))))
(assert (= x4600 (and x4358 x4618)))
(assert (x4630 x1574))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x2862 1))))
(assert (not (= (x1211 x2060 1) (+ x2042 1))))
(assert (x399 x4644))
(assert (x4630 x6130))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x1112 1)))))
(assert (x4630 x5595))
(assert (=> (= (x1211 x1451 1) (x1211 274184521717934524641157099916833587231 1)) (= 274184521717934524641157099916833587231 x1451)))
(assert (= x2112 (and x5258 (not x4933))))
(assert (not (= (x1211 x4017 1) 274184521717934524641157099916833587231)))
(assert (not (= (+ x3457 2) (x1211 x902 1))))
(assert (x4630 x4849))
(assert (x263 x3508 x1209))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x1919 1) x1451))))
(assert (x4630 x5918))
(assert (= (x4952 x5740) 0))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x361 1)))))
(assert (not (= (+ 3 x2042) (x1211 x4527 1))))
(assert (not (= (+ x3962 1) (+ 1 x3948))))
(assert (not (= (+ 2 x2042) (x1211 x1849 1))))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (+ 4 x2042)))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x208 1) x3543))))
(assert (=> (= (x1211 x1112 1) (x1211 x935 1)) (= x935 x1112)))
(assert (= (and x4605 x1581) x5072))
(assert (=> (< (- x3414 1) 10000) (not (= (x1211 x1956 1) x3414))))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x4017 1) x4400))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x3148 3) x3755))))
(assert (x251 x3877 x5748 x1585 x2867))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x4284 1))))
(assert (x4630 x2811))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x4799 1) x4702))))
(assert (x6051 x4761))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 274184521717934524641157099916833587231 1) x5617))))
(assert (x4630 x620))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x3755 1) x310))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x1112 1)))))
(assert (not (= (x1211 x3414 1) (+ 4 x3962))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x2060 1))))
(assert (not (= (x1211 x4090 3) (x1211 x3409 1))))
(assert (x6051 x3383))
(assert (= x4401 (=> (and (= (= x5816 x2765) x6038) (= x2765 (x5347 1461501637330902918203684832716283019655932542975 x5816))) (and (=> (and (= (x1211 x5745 1) x623) (= (x5347 1461501637330902918203684832716283019655932542975 x2264) x5745) (>= x2736 0) (= (x3247 x623) x2736) (<= x2736 115792089237316195423570985008687907853269984665640564039457584007913129639935) x6038 (= 1 x4890) (= 32 x6138)) x1734) (=> (not x6038) x3915)))))
(assert (x4630 x5490))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x3836 1) x1919))))
(assert (not (= (x1211 x4218 2) (+ 1 x2042))))
(assert (x4630 x1092))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (+ 3 x1186)))))
(assert (=> (< (- x5917 1) 10000) (not (= (x1211 x4218 2) x5917))))
(assert (not (= (+ x3948 1) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x1211 x1919 1) 18446744073709551615)))
(assert (not (= 2514000705 (x1211 x4293 1))))
(assert (not (= (+ x2042 5) (x1211 x3755 1))))
(assert (x6051 1461501637330902918203684832716283019655932542975))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ 1 x1186))))
(assert (x4630 x4001))
(assert (not (= (x1211 x3645 1) (x1211 x310 2))))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 x5421 1) x361))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= 1889567281 (+ x3962 5))))
(assert (= x294 (and (not x4673) x5939)))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x4800 1) x1451))))
(assert (not (= (x1211 x4293 1) (x1211 x4218 2))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x935 1)))))
(assert (not (= (x1211 x3992 2) (x1211 x4800 1))))
(assert (not (= (x406 1) (x1211 x1849 1))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x4198 1)))))
(assert (= x767 (=> (and (= x145 x3158) (= x3078 x228)) x3796)))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (+ x98 1)))))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (+ x1186 3)))))
(assert (not (= (x1211 x1451 1) (+ x1186 3))))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (+ x2042 5)))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x2862 1)))))
(assert (not (= (+ x3948 1) (x1211 x4527 1))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x1852 1)))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x182 1))))
(assert (= x3844 (=> (and (= 36 x5537) (not (= x4388 826074471)) (= 1889567281 x4388) (< 0 x3019) (= (x3337 (- x5537 4)) x729) (= x3019 (x3910 274184521717934524641157099916833587202)) (= x4722 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (< x5537 4)) (= x4836 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x729)) (< x729 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x729))) (= 36 x5537) (= x5816 x704) (not (< x4388 826074471))) (and (=> x4836 x235) (=> (not x4836) x1398)))))
(assert (x399 x5617))
(assert (x4630 x5535))
(assert (= x2294 (=> (and (= x4978 x4531) (= x1120 (< (x4150 274184521717934524641157099916833587231) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x4289 x1303) x4557) x1120 (= x4304 x5916)) x3263)))
(assert (=> (= (x1211 x3543 1) (x1211 x4284 1)) (= x4284 x3543)))
(assert (=> (> (+ 10000 1) x5421) (not (= (x1211 x3645 1) x5421))))
(assert (=> (< (- x1598 1) 10000) (not (= (+ 4 x98) x1598))))
(assert (x4630 x2688))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x4527 1)))))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x182 1) x3576))))
(assert (=> (= (x1211 x5745 1) (x1211 x3409 1)) (= x5745 x3409)))
(assert (not (= (x1211 x3992 2) (x1211 x3543 1))))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x1919 1)))))
(assert (= (=> (and (= x1513 (x6031 (+ 32 x2167))) (= (= x2529 (ite x6123 1 0)) x4458) (= (x6 x1513) x2529) (= x6123 (not x5614)) (= x5614 (= x2529 0))) (and (=> x4458 x343) (=> (not x4458) x5361))) x1787))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x1849 1))))
(assert (x4630 x735))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x182 1)))))
(assert (=> (< (- x5917 1) 10000) (not (= (x1211 x1852 1) x5917))))
(assert (=> (= (x1211 x182 1) (x1211 x3755 1)) (= x182 x3755)))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x3755 1) x4198))))
(assert (x6051 x1877))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x3513 1))))
(assert (= x582 (=> (and (= x1075 (x5474 x4462)) (= x2890 (< 0 x1075))) (and (=> x2890 x3808) (=> (not x2890) x3198)))))
(assert (=> (< (- x2417 1) 10000) (not (= (x1211 x946 1) x2417))))
(assert (not (= 1000000000000000000 (x1211 x1849 1))))
(assert (not (= (+ 4 x98) (+ x5409 1))))
(assert (=> (= (x1211 x1956 1) (x1211 x1849 1)) (= x1849 x1956)))
(assert (= x1101 true))
(assert (x4630 x2918))
(assert (not (= (+ x3962 5) (+ x3962 3))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (+ 5 x2042)))))
(assert (x4630 x82))
(assert (= x3663 (=> (and (= x2716 x2022) (= x2649 x5776) (= x683 x3766)) x961)))
(assert (x4630 x2490))
(assert (= x5958 (=> (= (= 0 x6166) x2127) (and (=> x2127 x5361) (=> (not x2127) x3416)))))
(assert (x4630 x5327))
(assert (x4630 x2312))
(assert (x4630 x5109))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ 3 x2042))))
(assert (x4630 x5213))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x1852 1) x310))))
(assert (= x1995 (and (not x2812) x3723)))
(assert (not (= (x1211 x3836 1) 1000000000000000000)))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x4800 1) x3992))))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 x4527 1) x1338))))
(assert (not (= (+ 2 x2042) (x1211 x935 1))))
(assert (x4630 x4141))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (+ 1 x3948)))))
(assert (x4630 x3817))
(assert (=> (< (- x1303 1) 10000) (not (= x1303 (x1211 x3513 1)))))
(assert (x4630 x3401))
(assert (x4630 x2682))
(assert (x5138 x3619 x4523))
(assert (x4630 x486))
(assert (=> (< (- x693 1) 10000) (not (= (x1211 x4284 1) x693))))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 x4293 1) x1338))))
(assert (x6051 x5076))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x1956 1)))))
(assert (x4630 x3003))
(assert (x4630 x1075))
(assert (= x2606 (and x216 (not x3898))))
(assert (not (= (+ 3 x3962) (x1211 x4610 1))))
(assert (x4630 x3747))
(assert (not (= (+ 1 x3962) (+ 2 x4054))))
(assert (= x5653 (or (and x3837 x933) (and x3146 (not x6038)))))
(assert (=> (= (x1211 x182 1) (x1211 x1852 1)) (= x182 x1852)))
(assert (= (and x165 (not x3984)) x5110))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x361 1))))
(assert (=> (< (- x208 1) 10000) (not (= (x1211 x5500 1) x208))))
(assert (=> (= (x1211 x3543 1) (x1211 x1852 1)) (= x1852 x3543)))
(assert (not (= 4294967296 (x1211 x1451 1))))
(assert (=> (> (+ 10000 1) x4113) (not (= (x1211 x4293 1) x4113))))
(assert (= (=> (and (= 36 x1406) (not (> 4 x1406)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1453) true) (< x1453 32)) (> x1453 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2518) (= (x3910 274184521717934524641157099916833587202) x3401) (= x1453 (x3337 (- x1406 4))) (not (> 826074471 x5698)) (= x224 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x5698 1889567281) (= x1633 x4284) (> x3401 0) (not (= x5698 826074471)) (= x1406 x4429)) (and (=> x2518 x5998) (=> (not x2518) x467))) x137))
(assert (x4630 x355))
(assert (not (= (+ x98 1) 4168891048)))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 x4293 1)))))
(assert (x4630 x4329))
(assert (x6051 x4995))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 4 x3962))))
(assert (x4630 x4476))
(assert (x4630 x5710))
(assert (not (= (+ x5409 1) (x1211 x5500 1))))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x208 1) x2696))))
(assert (=> (< (- x693 1) 10000) (not (= (x1211 x182 1) x693))))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 274184521717934524641157099916833587231 1) x4198))))
(assert (x4630 x2341))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x182 1)))))
(assert (not (= 4168891048 (x1211 x2862 1))))
(assert (=> (> (+ 10000 1) x3513) (not (= (+ x98 3) x3513))))
(assert (not (= (+ 4 x1186) (x1211 x361 1))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x5421 1)))))
(assert (= (=> (= x2689 (= x1219 274184521717934524641157099916833587206)) (and (=> (and (not (< x5692 4)) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1504) (> x4111 0) (= 404098525 x4613) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2472) (= x4176 32) (= 1 x3228) (> 826074471 x4613) x2689 (not (= 157198259 x4613)) (not (= x4613 117300739)) (= x5692 x4273) (= x5692 4) (>= x2472 0) (= (x3910 274184521717934524641157099916833587206) x4111)) x5291) (=> (not x2689) x3154))) x3584))
(assert (x4630 x3593))
(assert (not (= (x1211 x4284 1) (x1211 x4218 2))))
(assert (not (= (+ 2 x2042) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (< (- x1849 1) 10000) (not (= (x1211 x935 1) x1849))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (x1211 x182 1)))))
(assert (x4630 x52))
(assert (not (= (x1211 x310 2) 117300739)))
(assert (not (= (x1211 x3576 1) 404098525)))
(assert (=> (> (+ 10000 1) x3836) (not (= (+ x2042 5) x3836))))
(assert (not (= 2835717307 (+ 1 x2042))))
(assert (x4630 x2389))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 2 x3962))))
(assert (not (= (x1211 x3148 3) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x5138 x3874 x5549))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (x1211 x4527 1)))))
(assert (x4630 x4827))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x3992 2) x5917))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x4610 1)))))
(assert (x4630 x4531))
(assert (x4630 x4645))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x5745 1) x2601))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x4017 1))))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x740 2) x310))))
(assert (not (= (x1211 x3755 1) (+ 3 x1186))))
(assert (x4630 x3504))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (+ 2 x3962)))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ 3 x3962)))))
(assert (not (= (x1211 x3992 2) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x4630 x2324))
(assert (=> (< (- x4644 1) 10000) (not (= (+ x3962 2) x4644))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x2862 1)))))
(assert (= x2437 (=> (and (= x339 x1852) (= (= x5471 x1852) x5570)) (and (=> (not x5570) x3981) (=> (and (>= x1505 0) (= x1505 (x2776 x807)) x5570 (<= x1505 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x807 (x1211 x1852 1)) (= 32 x5326) (= x3453 1)) x5005)))))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (x1211 x5745 1)))))
(assert (= (and x2770 x1489) x1557))
(assert (=> (> (+ 10000 1) x946) (not (= (+ 3 x3962) x946))))
(assert (= (and x3842 x1922) x3599))
(assert (= x2523 (and x4937 x1596)))
(assert (x6051 x2706))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x1852 1) x4800))))
(assert (= (=> (and (= (= 0 x1123) x4224) (= x6003 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123))) (= x1209 (ite (> x5348 x6003) 1 0)) (= (x5347 x3508 x1209) x1909) (= x5447 (= x1909 0)) (= (ite (not x4224) 1 0) x3508)) (and (=> (not x5447) x3198) (=> x5447 x3063))) x1249))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x182 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x361 1)))))
(assert (not (= 117300739 (+ x3962 2))))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x1338) x3417) (and (=> (and (< 0 x1362) x3417 (= x2490 404098525) (not (= 157198259 x2490)) (>= x943 0) (= x3481 x3352) (= 1 x5239) (= x1362 (x3910 274184521717934524641157099916833587206)) (not (< x3352 4)) (= x2488 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (= x2490 117300739)) (= x2323 32) (> 826074471 x2490) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x943) (= x3352 4)) x17) (=> (not x3417) x1062))) x5075))
(assert (x4630 x3206))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (x406 1)))))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x3543 1) x4284))))
(assert (= x4369 (and (not x3324) x3859)))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x5421 1)))))
(assert (=> (= (x1211 x4800 1) (x1211 x1451 1)) (= x4800 x1451)))
(assert (=> (= (x1211 x2060 1) (x1211 x5745 1)) (= x5745 x2060)))
(assert (=> (= (x1211 x4800 1) (x1211 x2862 1)) (= x2862 x4800)))
(assert (not (= (x1211 x4218 2) (x1211 x5917 1))))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ x98 1)))))
(assert (not (= (x1211 x4800 1) (+ x2042 1))))
(assert (= (=> (and (= x2016 x1477) (= x1699 (x4313 274184521717934524641157099916833587231)) (= x5244 (x4313 x693)) (= (and (<= 0 x1699) (< x5244 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4151)) (and (=> x4151 x888) (=> (and (not x4151) (= 0 x1813) (= 0 x3504)) x1159))) x4950))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x406 1))))
(assert (=> (> (+ 10000 1) x3513) (not (= (+ x3457 2) x3513))))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x1956 1) x4107))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (+ x1186 1)))))
(assert (= (=> (and (= x2105 (x2015 x823)) (= (= 0 x2105) x1952)) (and (=> (not x1952) x2020) (=> (and x1952 (= x620 x717) (= 0 x3126)) x2761))) x5641))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x5500 1)))))
(assert (x4630 x920))
(assert (not (= (x1211 x1849 1) 404098525)))
(assert (x4630 x2060))
(assert (x4630 x4370))
(assert (not (= (x1211 x1849 1) 4168891048)))
(assert (not (= (+ x1186 4) (x1211 x3543 1))))
(assert (x263 x3302 x2356))
(assert (=> (> (+ 10000 1) x4198) (not (= (+ 1 x5409) x4198))))
(assert (=> (= (x1211 x3543 1) (x1211 x928 1)) (= x3543 x928)))
(assert (=> (> (+ 10000 1) x3786) (not (= (+ 1 x2042) x3786))))
(assert (not (= (+ x98 4) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x4630 x5471))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x5745 1)))))
(assert (=> (< (- x3255 1) 10000) (not (= (+ 3 x98) x3255))))
(assert (not (= (x1211 x5745 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (= x5851 (and x4958 x6022)))
(assert (not (= (x1211 x4800 1) 3)))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (+ 5 x3962)))))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x2060 1)))))
(assert (=> (= (x1211 x5421 1) (x1211 x946 1)) (= x946 x5421)))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x3543 1) x3992))))
(assert (=> (= (x1211 x4527 1) (x1211 x5745 1)) (= x5745 x4527)))
(assert (= (and x2766 x4416) x2101))
(assert (=> (< (- x1849 1) 10000) (not (= (+ 4 x3962) x1849))))
(assert (x4630 x3660))
(assert (not (= (x1211 x3755 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 x946 1)))))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x3992 2)))))
(assert (=> (< (- x3740 1) 10000) (not (= (x1211 x3755 1) x3740))))
(assert (x4630 x3911))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x1849 1)))))
(assert (x251 x2307 x517 x4562 x3025))
(assert (=> (= (x1211 x1919 1) (x1211 x4284 1)) (= x4284 x1919)))
(assert (=> (< (- x4090 1) 10000) (not (= (x1211 x4198 1) x4090))))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x5917 1) x4218))))
(assert (x4630 x200))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (+ x2042 2)))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x406 1)))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (+ x1186 1)))))
(assert (x4630 x382))
(assert (x4630 x5692))
(assert (= (=> (and (= x1055 x1769) (= x5412 x3783) (= x1523 x6011)) x40) x4934))
(assert (x4630 x3557))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x182 1) x1089))))
(assert (= (and (not x1757) x3474) x1681))
(assert (= (and (not x5622) x3916) x3311))
(assert (= (and x3681 x2063) x4591))
(assert (not (= (x1211 x3755 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x3836 1)))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (+ x2042 1)))))
(assert (x4630 x6002))
(assert (x4630 x2087))
(assert (=> (> (+ 10000 1) x952) (not (= (+ x2042 5) x952))))
(assert (x4630 x5749))
(assert (not (= (+ x98 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x4630 x4331))
(assert (= (or (and x6057 (not x4356)) (and x2596 x5279)) x5139))
(assert (not (= (x1211 x2862 1) (+ x1186 4))))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 x4017 1)))))
(assert (= (=> (= (= x1303 274184521717934524641157099916833587202) x3068) (and (=> (not x3068) x1759) (=> x3068 x3628))) x2625))
(assert (=> (> (+ 10000 1) x4400) (not (= (x1211 x2862 1) x4400))))
(assert (= (ite (and x708 (not x5449) x1841) (x2363 x4233) (x4892 x4233)) (x4115 x4233)))
(assert (= (x2734 x2878) (ite (= x2878 x5174) x5733 (x2241 x2878))))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x935 1)))))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x5917 1)))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x3543 1))))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x4293 1)))))
(assert (not (= (x1211 x1852 1) (x1211 x4218 2))))
(assert (x399 x2417))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x4090 3) x4400))))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x3513 1)))))
(assert (x4630 x1467))
(assert (=> (< (- x1956 1) 10000) (not (= (+ 4 x3962) x1956))))
(assert (= (x2104 x4014) 0))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (x1211 x928 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= (+ x2042 2) x5745))))
(assert (not (= (x1211 x5917 1) 18446744073709551615)))
(assert (=> (< (- x182 1) 10000) (not (= x182 (+ x1186 3)))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x208 1)))))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (+ 4 x98)))))
(assert (not (= (+ 2 x3457) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x6051 x5021))
(assert (not (= 2743638299 (x1211 x3992 2))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x6069 1)))))
(assert (x4630 x5276))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (+ x98 4)))))
(assert (not (= (x1211 x5745 1) (+ x1186 1))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (+ 4 x1186)))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x928 1))))
(assert (=> (= (x1211 x3576 1) (x1211 x4800 1)) (= x3576 x4800)))
(assert (not (= 4168891048 (x1211 x208 1))))
(assert (not (= (x1211 x182 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= (x1211 x3755 1) 1)))
(assert (=> (> (+ 10000 1) x2549) (not (= (+ x2042 5) x2549))))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x5500 1) x4017))))
(assert (not (= (+ 4 x2042) 117300739)))
(assert (x6051 x1586))
(assert (x4630 x4617))
(assert (= (=> (and (= x4239 0) (= x3713 x720)) x5539) x3649))
(assert (x4630 x4163))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x208 1)))))
(assert (not (= (+ 5 x2042) (x1211 x946 1))))
(assert (x5138 x5586 x652))
(assert (not (= (+ x3948 1) 274184521717934524641157099916833587231)))
(assert (x4630 x2461))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (x1211 x3755 1)))))
(assert (x4630 x3921))
(assert (x4630 x5917))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (x1211 x1451 1)))))
(assert (not (= (x1211 x1956 1) 2835717307)))
(assert (not (= (+ x1186 1) (x1211 x4527 1))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x5500 1))))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x3755 1) x4527))))
(assert (= x5934 true))
(assert (= 0 (x151 x3857)))
(assert (not (= 1889567281 (x1211 x361 1))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x1956 1))))
(assert (not (= (+ 3 x2042) 404098525)))
(assert (x4630 x4365))
(assert (=> (< (- x3645 1) 10000) (not (= (+ x2042 5) x3645))))
(assert (not (= (x406 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x5138 x456 x4960))
(assert (=> (= (x1211 x4017 1) (x1211 x5421 1)) (= x4017 x5421)))
(assert (x4630 x5952))
(assert (not (= (+ x2042 3) (x1211 x361 1))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x5745 1))))
(assert (not (= (x1211 x5421 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (+ x98 3)))))
(assert (=> (< (- x2060 1) 10000) (not (= (x1211 x6069 1) x2060))))
(assert (not (= (+ x2042 4) (x1211 x4198 1))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (+ 4 x2042)))))
(assert (= (=> (and (= x5343 (> x4281 0)) (= (x5953 x5267) x4281) (= x587 (- (/ x2233 x1682) (uninterp_frac x2233 x1682)))) (and (=> (not x5343) x3198) (=> (and (= (x6031 (+ x5267 32)) x3929) x5343 (= x5872 x2421)) x2123))) x1768))
(assert (=> (< (- x902 1) 10000) (not (= x902 (x406 1)))))
(assert (not (= (+ x98 3) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x4799 1)))))
(assert (not (= (x1211 x1956 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= (+ x1186 4) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x4630 x5896))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x946 1)))))
(assert (x4630 x4679))
(assert (= x4103 (or (and x1757 x3474) (and x5991 x1825))))
(assert (x4630 x606))
(assert (x4630 x3131))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (+ x3962 4)))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x1956 1)))))
(assert (not (= (+ 1 x3962) (x1211 x946 1))))
(assert (= (=> (and (not (= 826074471 x2392)) (= x935 x5471) (not (< x284 4)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2946) (and (> 32 x2946) (= (<= x2946 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x5455) (= x1655 x284) (= (x3910 274184521717934524641157099916833587202) x5252) (= 1889567281 x2392) (= (x3337 (- x284 4)) x2946) (not (< x2392 826074471)) (= x284 36) (> x5252 0) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x117)) (and (=> x5455 x2249) (=> (not x5455) x3241))) x4750))
(assert (not (= (x1211 x4610 1) (+ 2 x3457))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x4293 1))))
(assert (x4630 x4735))
(assert (x4630 x4726))
(assert (x4630 x617))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x6069 1)))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (+ x3962 2)))))
(assert (=> (= (x1211 x3645 1) (x1211 x928 1)) (= x928 x3645)))
(assert (=> (= (x1211 x1852 1) (x1211 x5917 1)) (= x5917 x1852)))
(assert (not (= (x1211 x3836 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x4630 x956))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x946 1)))))
(assert (=> (= (x1211 x4284 1) (x1211 x361 1)) (= x4284 x361)))
(assert (x4630 x1524))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x1112 1) x2820))))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x3513 1) x4293))))
(assert (not (= 404098525 (x1211 x3148 3))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x4800 1) x935))))
(assert (= x1890 (or (and x4956 x2689) (and x4785 x2670))))
(assert (=> (> (+ 10000 1) x4218) (not (= (x1211 x3645 1) x4218))))
(assert (x4630 x3414))
(assert (=> (= (x1211 x4284 1) (x1211 x902 1)) (= x902 x4284)))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x5917 1) x208))))
(assert (not (= (+ 5 x3962) (+ 2 x2042))))
(assert (x4630 x6136))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x4198 1)))))
(assert (not (= (+ x2042 2) (+ 1 x2042))))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x2862 1)))))
(assert (= x1840 (=> (= x4859 (= x2820 274184521717934524641157099916833587206)) (and (=> (not x4859) x2847) (=> (and (= x2630 x5114) (< x2269 826074471) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x6078) (= x5245 (x3910 274184521717934524641157099916833587206)) (= x2269 404098525) (= x1348 1) (= 4 x5114) (= 32 x3459) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x833) (<= 0 x833) x4859 (not (< x5114 4)) (< 0 x5245) (not (= 157198259 x2269)) (not (= x2269 117300739))) x4246)))))
(assert (=> (> (+ 10000 1) x1852) (not (= (x1211 x5917 1) x1852))))
(assert (not (= (x1211 x740 2) 1461501637330902918203684832716283019655932542975)))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (x1211 274184521717934524641157099916833587231 1)))))
(assert (= x3109 (=> (= x6042 (= 274184521717934524641157099916833587202 x4063)) (and (=> x6042 x5884) (=> (not x6042) x1269)))))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x1919 1)))))
(assert (x4630 x2397))
(assert (=> (< (- x4017 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x4017))))
(assert (=> (= (+ 3 x98) (+ x2042 3)) (= x4218 x3992)))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ x98 4))))
(assert (= true x4085))
(assert (not (= (x1211 x1956 1) (+ 1 x3962))))
(assert (not x4724))
(assert (not (= (+ 2 x2042) (+ x5409 1))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x3414 1) x4113))))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x1919 1) x4554))))
(assert (=> (< (- x1303 1) 10000) (not (= (+ 4 x98) x1303))))
(assert (=> (< (- x3576 1) 10000) (not (= (+ 5 x2042) x3576))))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (+ x98 3)))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x3576 1) x1451))))
(assert (x4630 x3220))
(assert (not (= (+ x3962 5) (+ x4054 2))))
(assert (x251 x3026 x4303 x1728 x1812))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x2862 1)))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (+ x3457 2)))))
(assert (=> (= (x1211 x4527 1) (x1211 x928 1)) (= x928 x4527)))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x4799 1)))))
(assert (x251 x5734 x3112 x19 x734))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ x3962 1))))
(assert (= x3063 (=> (and (= x273 (< 0 x3671)) (= x2746 (uninterp_mod (* x1123 x5348) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x273) x3198) (=> (and (= x5188 x783) (= x5188 (- (/ x2746 x3671) (uninterp_frac x2746 x3671))) x273) x5858)))))
(assert (not (= (x1211 x5500 1) (+ x98 1))))
(assert (= (or (and (not x5842) x4591) (and (not x5903) x3072) (and x2063 (not x3681))) x4549))
(assert (x4630 x3850))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x3543 1) x4090))))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (x1211 x5745 1)))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x3576 1)))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x4293 1)))))
(assert (= (and x4368 x5813) x4765))
(assert (not (= (x1211 x4218 2) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x4630 x1514))
(assert (=> (< (- x902 1) 10000) (not (= x902 (x1211 x1849 1)))))
(assert (x4630 x271))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ x5409 1))))
(assert (=> (< (- x1775 1) 10000) (not (= (x1211 x3645 1) x1775))))
(assert (not (= (x1211 x3645 1) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x4090) (not (= (+ x3962 2) x4090))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x3992 2))))
(assert (not (= (x1211 x4090 3) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x4630 x4764))
(assert (=> (< (- x3740 1) 10000) (not (= (+ 1 x1186) x3740))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x1956 1))))
(assert (x6051 x5850))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x935 1)))))
(assert (not (= (x1211 x182 1) 4294967296)))
(assert (= x78 (=> (and (= (x5474 x2527) x4481) (= (< 0 x4481) x6146)) (and (=> (not x6146) x3198) (=> x6146 x3190)))))
(assert (= (=> (and (= 0 x2859) (= (x6031 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x5178)) x1583) (= (x5504 x3032) x2635) (= (x6031 (+ 100 x5918)) x5680) (= (< 0 x1080) x4357) (= (x5347 1461501637330902918203684832716283019655932542975 x4931) x693) (= (x6031 (+ x5918 36)) x4127) (= (x6031 (+ 32 x5918)) x3032) (= x4772 (x6031 (+ 128 x4127))) (= (x3910 x693) x1080) (= (x3337 (- x4876 32)) x5003) (= x2801 (x6031 (+ x5918 68))) (= (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x2635) x5178) (= x4876 (x3337 (- x5680 x5918)))) (and (=> (and (= x2016 (x724 x5918)) (or (and (= (x6031 (+ x4772 x2016)) x2293) x144) (not x144)) (= x3052 (> x2016 0)) (= (> x1439 x2016) x144) x4357 (or (and (not x3052) (= 0 x1439)) (and (= x3032 x5740) (= x4772 x6026) (or (and (not x4922) (= x1439 32)) (and (= x403 (> x2016 64)) (= (x6031 (+ x5918 64)) x5405) (= x2366 (x2246 x5405)) (= (x6031 (+ x5680 96)) x1045) (or (and (not x403) (= 64 x1439)) (and (= (x2246 x5424) x2164) (= (< 96 x2016) x1413) (= (x6031 (+ x5918 96)) x5424) x403 (= x3493 (x6031 (+ 128 x5680))) (or (and (= 128 x1439) (= (< 128 x2016) x555) (= (x6031 (+ x5918 128)) x2954) (= x3847 (x2246 x2954)) (not x555) x1413 (= (x6031 (+ x5680 160)) x5270)) (and (= x1439 96) (not x1413))))) x4922)) x3052 (= x4922 (< 32 x2016)) (= (x2246 x5740) x303)))) x4950) (=> (not x4357) x3198))) x898))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x6069 1)))))
(assert (= (and (not x4870) x1934) x20))
(assert (not (= (+ x98 4) (x406 1))))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x3992 2) x1919))))
(assert (x4630 x3623))
(assert (x4630 x4193))
(assert (= x1064 (or x3435 x5927)))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x3148 3)))))
(assert (=> (= (x1211 x928 1) (x1211 x3755 1)) (= x3755 x928)))
(assert (x4630 x3730))
(assert (x4630 x1731))
(assert (= x1159 (=> (and (= x3690 (= 0 x3504)) (or (and (= (x6031 (+ x1272 x4772)) x5894) (not x3690) (= (x6031 (+ 63 x3504)) x1053) (= x4810 x4772) (= x4454 (x6031 (+ x5680 96))) (= x5894 x6154) (= x1272 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1053))) (and x3690 (= x4810 96) (= x4772 x6154)))) x1838)))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x4218 2)))))
(assert (=> (< (- x4610 1) 10000) (not (= (+ 1 x98) x4610))))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x4017 1) x4218))))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x3836 1) x1467))))
(assert (not (= (x1211 x1849 1) 2743638299)))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (x1211 x4799 1)))))
(assert (not (= (+ 5 x3962) (x1211 x4017 1))))
(assert (=> (< (- x3771 1) 10000) (not (= (+ 2 x4054) x3771))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 1 x5409))))
(assert (x4630 x3300))
(assert (=> (= (x1211 x1849 1) (x1211 x3576 1)) (= x3576 x1849)))
(assert (x4630 x1930))
(assert (not (= (+ x98 4) (x1211 x4090 3))))
(assert (not (= (x1211 x5917 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (= x4346 (=> (and (= x5632 (= x3699 x5175)) (= x5175 (x5347 1461501637330902918203684832716283019655932542975 x3699)) (= x3699 (x4204 x2568))) (and (=> x5632 x462) (=> (not x5632) x3198)))))
(assert (x4630 x3094))
(assert (=> (< (- x6037 1) 10000) (not (= (+ x5409 1) x6037))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x4198 1)))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x208 1)))))
(assert (not (= (x1211 x935 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x2241 x1794) 0))
(assert (not (= (+ x2042 3) (x1211 x4090 3))))
(assert (=> (> (+ 10000 1) x693) (not (= (x1211 x3645 1) x693))))
(assert (= (ite (= x3124 x2381) x6002 (x5930 x2381)) (x5589 x2381)))
(assert (not (= (x1211 x5745 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (> (+ 10000 1) x935) (not (= (x1211 x935 1) x935))))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 x182 1) x3786))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x1956 1))))
(assert (not (= (x1211 x4527 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x361) (not (= (+ 2 x4054) x361))))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x2060 1) x2154))))
(assert (not (= 826074471 (x1211 x310 2))))
(assert (not (= (x1211 x1451 1) (x1211 x4090 3))))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x1956 1)))))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x4293 1) x3979))))
(assert (x4630 x723))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (+ 2 x3457)))))
(assert (x4630 x5566))
(assert (x4630 x3428))
(assert (not (= 157198259 (x1211 x4527 1))))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x4527 1) x4527))))
(assert (not (= (+ 4 x1186) (x1211 x182 1))))
(assert (not (= (x1211 x1919 1) (+ 3 x3962))))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (x1211 x4198 1)))))
(assert (= (and x3030 (not x5580)) x4647))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x902 1)))))
(assert (not (= (+ 4 x98) 1461501637330902918203684832716283019655932542975)))
(assert (x4630 x5833))
(assert (not (= (+ 1 x98) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x1849 1))))
(assert (= (x5672 x5328) (ite (and x832 x912 (not x4701)) (x3517 x5328) (ite (and (not x1605) x912 (not x832) (not x4701)) (x1918 x5328) (x3272 x5328)))))
(assert (not (= (x1211 x3836 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (x1211 x935 1)))))
(assert (x4630 x1430))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x1919 1) x5800))))
(assert (=> (< (- x1112 1) 10000) (not (= (x1211 x3409 1) x1112))))
(assert (x4630 x607))
(assert (not (= (x1211 x3992 2) (x1211 x5421 1))))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (x1211 x182 1)))))
(assert (not (= (+ 3 x2042) (x1211 x1919 1))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x5917 1) x1451))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (+ 3 x98)))))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x1919 1) x3414))))
(assert (x4630 x3581))
(assert (not (= 3939881817 (+ 3 x98))))
(assert (x4630 x2934))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x208 1) x182))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (+ x4054 2)))))
(assert (not (= (x1211 x3409 1) 2743638299)))
(assert (=> (< (- x4090 1) 10000) (not (= (x1211 x1919 1) x4090))))
(assert (not (= 4294967296 (+ x98 1))))
(assert (not (= 157198259 (x1211 x1852 1))))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x310 2) x1852))))
(assert (not (= 3 (+ x2042 1))))
(assert (x4630 x3707))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 x3414 1)))))
(assert (x6051 x44))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ x3962 2) x4113))))
(assert (=> (< (- x1248 1) 10000) (not (= (+ x98 4) x1248))))
(assert (not (= (+ x3962 1) (x1211 x1451 1))))
(assert (not (= (x1211 x902 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (= (ite (= x5782 x278) x1500 (x4115 x278)) (x4471 x278)))
(assert (x4630 x999))
(assert (= x5255 (and x3672 (not x4683))))
(assert (=> (< (- x4799 1) 10000) (not (= (x1211 x6069 1) x4799))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x740 2)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x2042 5))))
(assert (x4630 x3740))
(assert (not (= (+ x98 4) (x1211 x1451 1))))
(assert (=> (> (+ 10000 1) x2845) (not (= (+ 4 x1186) x2845))))
(assert (=> (= (x1211 x6069 1) (x1211 x3755 1)) (= x6069 x3755)))
(assert (x4630 x952))
(assert (x4630 x5404))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x208 1)) (= 274184521717934524641157099916833587231 x208)))
(assert (x4630 x2631))
(assert (=> (> (+ 10000 1) x3645) (not (= (+ 3 x3962) x3645))))
(assert (not (= (x1211 x1451 1) 18446744073709551615)))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x902 1)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ 1 x1186))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x1956 1) x902))))
(assert (not (= (+ x98 4) (+ x1186 1))))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x4610 1) x1089))))
(assert (=> (> (+ 10000 1) x1467) (not (= (+ x4054 2) x1467))))
(assert (= (=> (and (= (x6031 (+ x4108 31)) x5827) (= x5362 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4108) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4108)) (> 32 x4108)))) (= (x6031 (+ x246 x4199)) x331) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5827) x4199)) (and (=> x5362 x5361) (=> (not x5362) x3192))) x3735))
(assert (=> (< (- x2820 1) 10000) (not (= (x1211 x208 1) x2820))))
(assert (=> (> (+ 10000 1) x2417) (not (= (+ x3962 4) x2417))))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x1451 1) x208))))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x1451 1)))))
(assert (=> (< (- x3771 1) 10000) (not (= (+ 4 x98) x3771))))
(assert (not (= (+ x2042 1) 1)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x1849 1))))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x5745 1) x182))))
(assert (=> (> (+ 10000 1) x2060) (not (= (x1211 x1112 1) x2060))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x3645 1))))
(assert (=> (> (+ 10000 1) x2060) (not (= (x406 1) x2060))))
(assert (x4630 x5941))
(assert (=> (= (x1211 x1919 1) (x1211 x3576 1)) (= x3576 x1919)))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x2862 1)))))
(assert (= (ite (= x5210 x4970) x4710 (x2104 x4970)) (x2037 x4970)))
(assert (= (and x5081 (not x5455)) x3201))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (+ 2 x3962)))))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x4198 1) x928))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (+ x1186 4)))))
(assert (x4630 x3726))
(assert (not (= (x1211 x208 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x5745 1) x4800))))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x1956 1) x1467))))
(assert (= (=> (and (= x4769 (ite (< x765 x5111) 1 0)) (= x765 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593))) (= x5021 (ite (not x4465) 1 0)) (= (= x2593 0) x4465) (= (x6031 (+ x2443 160)) x374) (= (x5347 x5021 x4769) x5678) (= (= 0 x5678) x296) (= x2593 (x5643 x374))) (and (=> x296 x4300) (=> (not x296) x3198))) x2020))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x4090 3)))))
(assert (= x567 (=> (and (= x4356 (= x688 x2213)) (= x2213 (x5347 1461501637330902918203684832716283019655932542975 x688))) (and (=> (not x4356) x3262) (=> (and x4356 (= (x5347 1461501637330902918203684832716283019655932542975 x5388) x3836) (= x2471 (x4892 x2614)) (= (x1211 x3836 1) x2614) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2471) (= x3946 32) (>= x2471 0) (= x2212 1)) x4570)))))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 x1956 1) x1338))))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x3755 1) x2601))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x3836 1) x3992))))
(assert (not (= (x1211 x928 1) 1889567281)))
(assert (= x3756 (=> (and (= x1877 (x214 x2686)) (= (x3608 x1015) x956) (= (x3088 x956) x5608) (= (x3219 x2385) x3460) (= (> x5608 0) x5839)) (and (=> (not x5839) x5361) (=> x5839 x123)))))
(assert (= (x3471 x4744) 0))
(assert (not (= 2 (x1211 274184521717934524641157099916833587231 1))))
(assert (not (= (x1211 x4799 1) 826074471)))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x3836) (not (= (+ 1 x98) x3836))))
(assert (not (= (x1211 x3645 1) 826074471)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x935 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x1852 1))))
(assert (= x3045 (and (not x2133) x133)))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= (x1211 x740 2) (x1211 x4527 1))))
(assert (=> (= (x1211 x1112 1) (x1211 x3755 1)) (= x1112 x3755)))
(assert (not (= (+ 1 x1186) (x1211 x3513 1))))
(assert (not (= (x1211 x1956 1) (+ 4 x3962))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (+ x2042 3)))))
(assert (not (= (+ 2 x4054) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x4630 x4076))
(assert (not (= 1889567281 (x1211 x1849 1))))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (+ x3962 4)))))
(assert (x4630 x4610))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (+ 4 x1186)))))
(assert (x5138 x3085 x4403))
(assert (x4630 x1013))
(assert (x4630 x709))
(assert (=> (= (x1211 x5421 1) (x1211 x6069 1)) (= x5421 x6069)))
(assert (= x4599 (and x3020 (not x4609))))
(assert (=> (< (- x5800 1) 10000) (not (= (+ 3 x2042) x5800))))
(assert (= x722 (=> (and (= x5147 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2658))) (= 274184521717934524641157099916833587231 x1814) (= (x124 x333) x3850) (= x4799 (x5347 1461501637330902918203684832716283019655932542975 x2028)) (= (x1211 274184521717934524641157099916833587231 1) x4112) (<= x3850 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5815 (> x3850 x5147)) (= x2796 (x3337 (- x4730 x2658))) (= x333 (x1211 x4799 1)) (<= 0 x3850)) (and (=> (not x5815) x4297) (=> x5815 x3256)))))
(assert (=> (= (x1211 x4017 1) (x1211 x182 1)) (= x182 x4017)))
(assert (= x3218 (and (not x3529) x6015)))
(assert (not (= (x1211 x4218 2) (+ x2042 4))))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x3148 3) x1775))))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x3148 3) x6037))))
(assert (not (= (x1211 x1112 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (=> (= x112 (= x3740 274184521717934524641157099916833587202)) (and (=> x112 x4187) (=> (not x112) x2129))) x2675))
(assert (not (= (x1211 x1956 1) 3939881817)))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x4017 1) x3755))))
(assert (not (= (+ x5409 1) (x1211 x5421 1))))
(assert (x4630 x2601))
(assert (= x1314 (=> (and (= 36 x3811) (= x1633 x6069) (not (= x1192 826074471)) (= 1889567281 x1192) (= x3318 (x3910 274184521717934524641157099916833587206)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3458) (= (x3337 (- x3811 4)) x3615) (not (< x1192 826074471)) (= (or (and (= true (<= x3615 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3615 32)) (> x3615 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5336) (not (< x3811 4)) (> x3318 0) (= x3811 x4429)) (and (=> (not x5336) x5838) (=> x5336 x1290)))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x3836 1)))))
(assert (=> (= (x1211 x935 1) (x1211 x182 1)) (= x935 x182)))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 x1112 1)))))
(assert (not (= (x1211 x3409 1) (+ x4054 2))))
(assert (x4630 x4818))
(assert (not (= (x1211 x935 1) (x1211 x4218 2))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (+ x3962 4)))))
(assert (not (= (x1211 x3645 1) 274184521717934524641157099916833587202)))
(assert (=> (= (x1211 x2060 1) (x1211 x1852 1)) (= x1852 x2060)))
(assert (not (= 4294967296 (x1211 x4218 2))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (+ 1 x98)))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (+ x98 1)))))
(assert (x4630 x5573))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x1451 1)))))
(assert (x4630 x459))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x4527 1) x6037))))
(assert (x251 x3009 x1284 x5887 x1142))
(assert (=> (> (+ 10000 1) x4702) (not (= (+ 1 x5409) x4702))))
(assert (= x3920 (and (not x1842) x4692)))
(assert (x263 x5021 x4769))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x946 1)))))
(assert (not (= (+ x2042 3) (+ x98 4))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x4218 2) x4090))))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x3543 1) x928))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x3513 1)))))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x740 2)))))
(assert (not (= (x1211 x2060 1) (x406 1))))
(assert (= (ite (= x823 x969) x4354 (x6000 x823)) (x2919 x823)))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x4293 1))))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x3836 1)))))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x935 1) x2601))))
(assert (=> (< (- x1467 1) 10000) (not (= (x406 1) x1467))))
(assert (x4630 x583))
(assert (x4630 x1293))
(assert (=> (< (- x6069 1) 10000) (not (= (+ 1 x2042) x6069))))
(assert (= (x1895 x2963) (ite (and (not x4701) x832 x912) (x1051 x2963) (ite (and x912 (not x4701) (not x1605) (not x832)) (x4133 x2963) (x5301 x2963)))))
(assert (x4630 x1374))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (+ 4 x2042)))))
(assert (x4630 x5106))
(assert (not (= (x1211 x3992 2) (+ x2042 5))))
(assert (x251 x2325 x272 x627 x604))
(assert (x4630 x1663))
(assert (x4630 x1699))
(assert (x4630 x548))
(assert (= x3861 (and x3597 x2162)))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x1112 1))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (+ x3962 4)))))
(assert (not (= (+ 5 x3962) 117300739)))
(assert (=> (< (- x4063 1) 10000) (not (= (+ x5409 1) x4063))))
(assert (= 0 (x4012 x3111)))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x1919 1)))))
(assert (not (= (x1211 x3836 1) (+ 1 x1186))))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x4284 1) x5421))))
(assert (not (= 117300739 (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x5421 1)))))
(assert (=> (< (- x935 1) 10000) (not (= (+ x2042 1) x935))))
(assert (= x3114 (or (and x5971 (not x2059)) (and x3599 (not x164)))))
(assert (not (= (+ 1 x3962) 1000000000000000000)))
(assert (x4630 x4986))
(assert (not (= (x1211 x4800 1) (+ 4 x2042))))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x361 1) x4800))))
(assert (=> (< (- x4218 1) 10000) (not (= (+ x2042 5) x4218))))
(assert (not (= (x1211 x4527 1) (+ 4 x2042))))
(assert (=> (< (- x2845 1) 10000) (not (= (+ x1186 1) x2845))))
(assert (not (= 157198259 (+ x2042 4))))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (+ x1186 1)))))
(assert (=> (= (x1211 x935 1) (x1211 x3543 1)) (= x3543 x935)))
(assert (= x1644 (and x4491 x3257)))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x3148 3))))
(assert (not (= (x1211 x3755 1) 157198259)))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x3992 2)))))
(assert (not (= (x1211 x310 2) (x1211 x4293 1))))
(assert (=> (= (x1211 x2862 1) (x1211 x3414 1)) (= x3414 x2862)))
(assert (x4630 x4854))
(assert (not (= (+ 4 x1186) (+ x4054 2))))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x4218 2))))
(assert (= (=> (= x5622 (= x5617 274184521717934524641157099916833587206)) (and (=> (and (not (= x4376 117300739)) x5622 (< x4376 826074471) (<= 0 x943) (> x550 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x943) (not (= 157198259 x4376)) (= (x3910 274184521717934524641157099916833587206) x550) (= x5660 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= x4108 32) (= x1430 x1602) (= 4 x1602) (= 1 x3589) (= 404098525 x4376) (not (> 4 x1602))) x1976) (=> (not x5622) x521))) x4386))
(assert (=> (> (+ 10000 1) x2862) (not (= (x1211 x5917 1) x2862))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (+ 1 x3948)))))
(assert (not (= (+ x1186 4) (x1211 x3414 1))))
(assert (x4630 x5853))
(assert (=> (= (x1211 x182 1) (x1211 x6069 1)) (= x6069 x182)))
(assert (=> (= (x1211 x1956 1) (x1211 x5917 1)) (= x1956 x5917)))
(assert (x4630 x895))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x3576 1) x4107))))
(assert (not (= (+ 2 x2042) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x182 1) 10000) (not (= x182 (+ x2042 4)))))
(assert (x4630 x3982))
(assert (x4630 x4670))
(assert (=> (= (x1211 x5917 1) (x1211 x208 1)) (= x208 x5917)))
(assert (x4630 x3872))
(assert (= (=> (and (= x1320 (= 274184521717934524641157099916833587206 x1303)) (= x3827 (x559 274184521717934524641157099916833587231)) (= x386 (x434 x1303)) x2645 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x434 x1303)) x2645)) (and (=> (not x1320) x2625) (=> x1320 x5673))) x4747))
(assert (= (and x2832 x6151) x1484))
(assert (x4630 x4554))
(assert (not (= 1000000000000000000 (x1211 x1852 1))))
(assert (x4630 x1500))
(assert (not (= (+ x3457 2) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (x1211 x5421 1)))))
(assert (x4630 x690))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (+ 1 x1186)))))
(assert (x399 x83))
(assert (not (= (+ 1 x5409) 404098525)))
(assert (= (=> (and (not (= 1889567281 x741)) (= x3783 x5814) (= x2907 (or (> x5250 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5250) true) (> 64 x5250)))) (not (= 2514000705 x741)) (not (> 4 x4153)) (> x1867 0) (= (x3337 (- x4153 4)) x5250) (= x1166 x4153) (= x100 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x741 2835717307) (= (x3910 274184521717934524641157099916833587202) x1867) (= x4153 68) (not (> 826074471 x741)) (not (= 826074471 x741)) (= x1126 x5816)) (and (=> (not x2907) x357) (=> x2907 x4655))) x4951))
(assert (x4630 x2600))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (x1211 x4017 1)))))
(assert (not (= (x1211 x4527 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x6051 x5254))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x928 1)))))
(assert (not (= (x1211 x1451 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (= (+ x2042 2) (+ 2 x3962)) (= x740 x3992)))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x4198 1)))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x3148 3) x4090))))
(assert (not (= 2743638299 (x1211 x310 2))))
(assert (not (= (x1211 x208 1) (+ x3962 5))))
(assert (not (= 2743638299 (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (+ x98 4)))))
(assert (= (x1441 x4669) (ite (and x5731 x494 (not x1694)) (x181 x4669) (x4892 x4669))))
(assert (x4630 x4563))
(assert (not (= 3 (+ x98 4))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ 3 x1186))))
(assert (x4630 x4796))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x935 1) x182))))
(assert (x4630 x1008))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x2862 1) x902))))
(assert (=> (< (- x4113 1) 10000) (not (= (+ x3962 4) x4113))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (+ x98 1)))))
(assert (= x5315 (=> (= (not (> x1674 x5606)) x89) (and (=> (and x89 (= x3107 false)) x1846) (=> (not x89) x3198)))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x4800 1)))))
(assert (x4630 x3954))
(assert (x4630 x2351))
(assert (not (= (+ x3948 1) (x1211 x4218 2))))
(assert (x4630 x62))
(assert (x4630 x2105))
(assert (x4630 x3852))
(assert (= (=> (= x1030 (= 0 x949)) (and (=> x1030 x5361) (=> (not x1030) x4691))) x1191))
(assert (x549 x1058))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (x1211 x3645 1)))))
(assert (= (=> (and (= (< (x1758 x4554) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x90) x90 (= (= 274184521717934524641157099916833587206 x4554) x4172) (= (x3080 274184521717934524641157099916833587231) x5201) (= (x1758 x4554) x5963)) (and (=> x4172 x6074) (=> (not x4172) x5510))) x4316))
(assert (x4630 x5369))
(assert (x4630 x5776))
(assert (=> (< (- x902 1) 10000) (not (= (+ 1 x98) x902))))
(assert (= 0 (x2241 x4936)))
(assert (= x3983 (=> (= (= 274184521717934524641157099916833587206 x3740) x129) (and (=> (not x129) x2675) (=> x129 x5269)))))
(assert (not (= (+ x3962 1) 404098525)))
(assert (x4630 x2839))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (+ 1 x2042)))))
(assert (=> (< (- x4800 1) 10000) (not (= (+ 5 x3962) x4800))))
(assert (not (= (x1211 x5421 1) 3939881817)))
(assert (=> (= (x1211 x1112 1) (x1211 x208 1)) (= x1112 x208)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x182 1))))
(assert (not (= 4294967296 (+ 1 x3962))))
(assert (= x1337 (=> (= x5027 (= 0 x5871)) (and (=> (not x5027) x5670) (=> x5027 x5361)))))
(assert (not (= (x1211 x1956 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x4630 x4003))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x4800 1)))))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x740 2) x1338))))
(assert (not (= (x1211 x4017 1) 157198259)))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x1112 1)))))
(assert (not (= (+ 2 x2042) (x1211 x3755 1))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x3962 4))))
(assert (=> (< (- x5917 1) 10000) (not (= (+ 1 x3948) x5917))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x3992 2)))))
(assert (= (and (not x1851) x5053) x107))
(assert (x4630 x5650))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x1919 1)))))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x902 1)))))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (x1211 x4017 1)))))
(assert (x4630 x6011))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x1112 1)))))
(assert (= (=> (and (= (= x5088 0) x1911) (= x5088 (x5347 x2737 x2150)) (= x2150 (ite (< x1217 x4909) 1 0)) (= x1228 (= 0 x3048)) (= (ite (not x1228) 1 0) x2737) (= (x4661 x1336) x4909) (= x1217 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)))) (and (=> (not x1911) x5361) (=> x1911 x564))) x799))
(assert (x6051 x96))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (x1211 x208 1)))))
(assert (= x1135 (=> (= x1620 (= x5964 0)) (and (=> x1620 x3198) (=> (not x1620) x2817)))))
(assert (x4630 x373))
(assert (not (= (x1211 x1852 1) (+ x3962 5))))
(assert (not (= (x1211 x1849 1) (+ x3962 1))))
(assert (x4630 x2188))
(assert (x4630 x4792))
(assert (not (= (x1211 x5745 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x946 1) x3992))))
(assert (=> (< (- x3755 1) 10000) (not (= (+ x5409 1) x3755))))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (+ x4054 2)))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x3513 1))))
(assert (not (= (x1211 x3409 1) (x1211 x4218 2))))
(assert (x4630 x5166))
(assert (= x5477 (and x2805 x619)))
(assert (= (ite (= x148 x1336) x3333 (x3520 x1336)) (x2512 x1336)))
(assert (x4630 x3741))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x3543 1)))))
(assert (x4630 x131))
(assert (not (= (+ 1 x3948) (x1211 x6069 1))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x902 1)))))
(assert (=> (> (+ 10000 1) x3148) (not (= (x1211 x3576 1) x3148))))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x1849 1) x4800))))
(assert (= (x4739 x675) (ite (and x1772 (not x4138) x2358) (x6052 x675) (x826 x675))))
(assert (=> (= (x1211 x1849 1) (x1211 x3414 1)) (= x3414 x1849)))
(assert (= (and x1363 (not x742)) x3858))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x4610 1)))))
(assert (not (= (x1211 x4090 3) (x1211 x5917 1))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x361 1)))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x3836 1)))))
(assert (= x847 (and x2947 (not x5073))))
(assert (not (= (+ x2042 5) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (= (x1211 x1112 1) (x1211 x1849 1)) (= x1849 x1112)))
(assert (not (= (+ x1186 4) (x1211 x4198 1))))
(assert (x4630 x2671))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x1849 1))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x3576 1) x5745))))
(assert (= x5092 (=> (and (> x1426 0) (= x1426 (x3910 274184521717934524641157099916833587206)) (= x3076 1889567281) (= x4370 36) (not (= x3076 826074471)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4904) (and (> 32 x4904) (= true (<= x4904 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3055) (= x4370 36) (not (> 826074471 x3076)) (= x4708 x688) (= x4904 (x3337 (- x4370 4))) (= x437 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (> 4 x4370))) (and (=> (not x3055) x2585) (=> x3055 x1035)))))
(assert (= x565 (and x2232 x2375)))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x3414 1)))))
(assert (not (= (+ 1 x3962) (x1211 x3992 2))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ x98 4))))
(assert (x399 x4799))
(assert (=> (< (- x952 1) 10000) (not (= (+ x98 1) x952))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x5421 1)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x1467 1) 10000) (not (= (x1211 x3409 1) x1467))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (+ x3962 2)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x4284 1))))
(assert (not (= (x1211 x4799 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x5138 x2642 x1014))
(assert (=> (> (+ 10000 1) x4113) (not (= (x1211 x3543 1) x4113))))
(assert (= (ite (= x3860 x1386) x1408 (x2394 x3860)) (x241 x3860)))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (+ x98 1)))))
(assert (not (= (+ x3457 2) 2)))
(assert (=> (< (- x935 1) 10000) (not (= x935 (x1211 x1451 1)))))
(assert (=> (> (+ 10000 1) x3699) (not (= (x1211 x3645 1) x3699))))
(assert (=> (> (+ 10000 1) x946) (not (= (x1211 x3414 1) x946))))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 x182 1) x2696))))
(assert (not (= 3 (x1211 x1852 1))))
(assert (not (= (x406 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (< (- x4702 1) 10000) (not (= (x1211 x1852 1) x4702))))
(assert (not (= (+ x98 1) (x1211 x935 1))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x3645 1))))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (x1211 x3513 1)))))
(assert (not (= 18446744073709551615 (+ 4 x3962))))
(assert (not (= (x1211 x1852 1) (+ x2042 5))))
(assert (not (= (x1211 x4799 1) 3939881817)))
(assert (=> (= (x1211 x1956 1) (x1211 x1919 1)) (= x1919 x1956)))
(assert (=> (> (+ 10000 1) x6069) (not (= (+ x3457 2) x6069))))
(assert (not (= (x1211 x3755 1) 2514000705)))
(assert (not (= (+ 3 x1186) (+ 2 x2042))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x1919 1))))
(assert (x4630 x692))
(assert (not (= (+ 3 x1186) (x1211 x4800 1))))
(assert (not (= (x1211 x3543 1) (+ x3962 3))))
(assert (=> (< (- x1775 1) 10000) (not (= (x1211 x3576 1) x1775))))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (+ x98 1)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x3457 2))))
(assert (x4630 x2045))
(assert (x4630 x655))
(assert (not (= (x1211 x4799 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x4630 x207))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x310 2)))))
(assert (x4630 x578))
(assert (x4630 x2576))
(assert (= x426 (=> (and (= x1929 (= x688 x141)) (= x141 (x5347 1461501637330902918203684832716283019655932542975 x688))) (and (=> (not x1929) x4938) (=> (and (= (x1211 x3513 1) x5590) (= x3513 (x5347 1461501637330902918203684832716283019655932542975 x1992)) (<= x1546 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x771) (<= 0 x1546) x1929 (= x2788 32) (= x1546 (x3247 x5590))) x4935)))))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x5917 1) x4800))))
(assert (not (= (x1211 x4017 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (x1211 x4610 1)))))
(assert (x4630 x3019))
(assert (=> (< (- x5617 1) 10000) (not (= (x1211 x3992 2) x5617))))
(assert (x4630 x3653))
(assert (not (= 4168891048 (+ 1 x2042))))
(assert (not (= (x1211 x4799 1) (+ 2 x4054))))
(assert (=> (< (- x3255 1) 10000) (not (= (x1211 x935 1) x3255))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x3414 1))))
(assert (=> (= (x1211 x1956 1) (x1211 x4017 1)) (= x1956 x4017)))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (+ 3 x3962)))))
(assert (x4630 x3424))
(assert (x4630 x4308))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (+ 2 x3962)))))
(assert (not (= 157198259 (x1211 x3543 1))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x740 2) x3230))))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x3836 1) x3771))))
(assert (x4630 x2747))
(assert (x4630 x1192))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x4800 1)))))
(assert (= x2454 (=> (and (= (x5474 x301) x4024) (= (< 0 x4024) x2059)) (and (=> (and (not x2059) (= 0 x4244)) x854) (=> x2059 x5030)))))
(assert (x4630 x458))
(assert (=> (= (x1211 x4293 1) (x1211 x3836 1)) (= x4293 x3836)))
(assert (x4630 x5871))
(assert (=> (= (x1211 x1451 1) (x1211 x1919 1)) (= x1919 x1451)))
(assert (not (= (+ x3962 5) 2514000705)))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x1451 1) x4293))))
(assert (x399 x2549))
(assert (x4630 x5780))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x5500 1)))))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (+ x5409 1)))))
(assert (x4630 x132))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (+ 2 x2042)))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x4610 1)))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x3992 2)))))
(assert (not (= (+ x3948 1) (x1211 x5745 1))))
(assert (x4630 x243))
(assert (not (= 826074471 (x1211 x4218 2))))
(assert (=> (< (- x3740 1) 10000) (not (= (x1211 x4610 1) x3740))))
(assert (x4630 x1053))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (+ 1 x1186)))))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x946 1)))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (+ x2042 3)))))
(assert (x4630 x3310))
(assert (not (= (x1211 x1956 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 4168891048 (x1211 x5745 1))))
(assert (x2507 x2635 x4844))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x5917 1) x1849))))
(assert (=> (= (x1211 x4527 1) (x1211 x3836 1)) (= x4527 x3836)))
(assert (x4630 x2669))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (+ 1 x3962)))))
(assert (= x1734 (=> (and (= x4890 x1648) (= x6138 x3285)) x79)))
(assert (= (=> (and (= (or (> x3459 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3459)) (< x3459 32))) x4933) (= (x6031 (+ x3726 x6033)) x3274) (= x3726 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1690)) (= x1690 (x6031 (+ x3459 31)))) (and (=> (not x4933) x4985) (=> x4933 x5361))) x4812))
(assert (not (= (+ 4 x2042) (x1211 x902 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x1919 1))))
(assert (x399 x3409))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x3414 1))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x361 1)))))
(assert (not (= (x1211 x5421 1) (x1211 x740 2))))
(assert (x4630 x1769))
(assert (x4630 x321))
(assert (x4630 x5370))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x208 1)))))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (+ 5 x3962)))))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (x1211 x3543 1)))))
(assert (x4630 x212))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (x406 1))))
(assert (not (= (x1211 x4800 1) (x1211 x4090 3))))
(assert (= (and x92 x1245) x5487))
(assert (not (= (x1211 x2862 1) 826074471)))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x1919 1) x3645))))
(assert (not (= (+ 5 x3962) (x406 1))))
(assert (x4630 x3295))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x1849 1)))))
(assert (x4630 x5898))
(assert (not (= (x1211 x3148 3) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x3543) (not (= (+ x3962 5) x3543))))
(assert (x399 x4800))
(assert (=> (< (- x935 1) 10000) (not (= x935 (+ 4 x3962)))))
(assert (x4630 x3163))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x4799 1) x952))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x2060 1) x1303))))
(assert (not (= 3939881817 (x1211 x4293 1))))
(assert (x4630 x5052))
(assert (not (= (x1211 x4198 1) 3)))
(assert (x4630 x1594))
(assert (=> (= (x1211 x4198 1) (x1211 x3543 1)) (= x3543 x4198)))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x4800 1)))))
(assert (not (= (x1211 x4799 1) 1889567281)))
(assert (x4630 x431))
(assert (not (= (+ x3948 1) (+ 4 x2042))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x4799 1)))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x5500 1)))))
(assert (= x644 (=> (= x1521 (= x4400 274184521717934524641157099916833587206)) (and (=> (and (= x4726 826074471) (not (> 826074471 x4726)) (not (> 4 x4089)) (= x341 (x3910 274184521717934524641157099916833587206)) x1521 (= 4 x4089) (= x1515 22270923681254677845691103109158760375340177724800803888364822332811285364736) (= x4015 x4089) (>= x2836 0) (= 1 x5962) (< 0 x341) (= x3188 32) (<= x2836 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2652) (=> (not x1521) x2278)))))
(assert (=> (> (+ 10000 1) x2417) (not (= (+ 5 x3962) x2417))))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (+ x3948 1)))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (+ 2 x2042)))))
(assert (x4630 x1292))
(assert (= x5981 (=> (and (= (x6031 (+ 31 x607)) x983) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x607) (and (> 32 x607) (= true (<= x607 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3598) (= x3702 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x983)) (= (x6031 (+ x1392 x3702)) x1806)) (and (=> (not x3598) x1646) (=> x3598 x5361)))))
(assert (=> (> (+ 10000 1) x3645) (not (= (+ 1 x5409) x3645))))
(assert (=> (> (+ 10000 1) x952) (not (= (x1211 x3836 1) x952))))
(assert (x4630 x1307))
(assert (not (= (x1211 x3148 3) (+ 2 x2042))))
(assert (not (= (x1211 x3755 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (x1211 x3755 1) (x1211 x3148 3))))
(assert (not (= (+ x98 4) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (+ x2042 2)))))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x3992 2) x310))))
(assert (=> (< (- x2696 1) 10000) (not (= (+ x3457 2) x2696))))
(assert (x4630 x1128))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (+ 4 x2042)))))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x5500 1) x3645))))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x946 1)))))
(assert (x4630 x4445))
(assert (not (= (+ x1186 1) (+ x2042 4))))
(assert (not (= (+ 1 x2042) (x1211 x5500 1))))
(assert (= (and x3142 x3692) x3348))
(assert (not (= (+ 1 x3948) 4294967296)))
(assert (x4630 x3499))
(assert (not (= (+ x2042 2) 157198259)))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x5745 1) x4799))))
(assert (x399 x2696))
(assert (x263 x2737 x2150))
(assert (=> (> (+ 10000 1) x2862) (not (= (x1211 x3414 1) x2862))))
(assert (x263 x2629 x5199))
(assert (x4630 x4469))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (+ x2042 1)))))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (+ 1 x3962)))))
(assert (not (= (x1211 x1919 1) (x1211 x4218 2))))
(assert (x6051 x1642))
(assert (not (= (x1211 x928 1) (+ x1186 4))))
(assert (x4630 x1653))
(assert (not (= (x1211 x3409 1) 826074471)))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x2060 1) x208))))
(assert (x4630 x3790))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x1919 1)) (= 274184521717934524641157099916833587231 x1919)))
(assert (= x2750 (and (not x474) x638)))
(assert (x4630 x377))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x208 1)))))
(assert (not (= (x1211 x361 1) 3)))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x6069 1) x561))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ x1186 4))))
(assert (=> (= (x1211 x4017 1) (x1211 x3755 1)) (= x3755 x4017)))
(assert (not (= (x1211 x3576 1) (+ x98 1))))
(assert (x4630 x4929))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x4284 1)))))
(assert (not (= 2514000705 (+ x3962 2))))
(assert (= (=> (= x3282 (= x2663 0)) (and (=> x3282 x3198) (=> (not x3282) x1671))) x3317))
(assert (not (= 2 (+ x2042 3))))
(assert (not (= (x1211 x935 1) 826074471)))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x4284 1) x561))))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (+ x2042 2)))))
(assert (= x5333 (=> (= x5171 (= x6037 274184521717934524641157099916833587202)) (and (=> x5171 x137) (=> (not x5171) x867)))))
(assert (=> (> (+ 10000 1) x1248) (not (= x1248 (+ 1 x98)))))
(assert (not (= (x1211 x4017 1) (x1211 x4218 2))))
(assert (not (= (x1211 x1956 1) (x1211 x4090 3))))
(assert (x4630 x1965))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x4800 1)))))
(assert (not (= (x1211 x2060 1) 1000000000000000000)))
(assert (=> (< (- x3992 1) 10000) (not (= (+ 2 x3962) x3992))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ x2042 5))))
(assert (x6051 x2696))
(assert (= x1687 (or x2347 x2023)))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (x1211 x3645 1)))))
(assert (not (= (x1211 x208 1) (+ x2042 3))))
(assert (not (= (x1211 x4610 1) (+ 1 x2042))))
(assert (= x3427 (and (not x4939) x1890)))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x4799 1)))))
(assert (x4630 x1979))
(assert (x4630 x1939))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x4630 x5764))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x5500 1)))))
(assert (x4630 x5933))
(assert (not (= (+ 1 x5409) (x1211 x4218 2))))
(assert (x399 x3576))
(assert (not (= (x1211 x4198 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x4630 x1171))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x2862 1)))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (+ 5 x3962)))))
(assert (x4630 x2148))
(assert (= x940 (and x1797 (not x2767))))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 x5745 1)))))
(assert (=> (< (- x6069 1) 10000) (not (= (+ 4 x3962) x6069))))
(assert (=> (< (- x3645 1) 10000) (not (= (+ x2042 3) x3645))))
(assert (not (= (x1211 x935 1) (x406 1))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x3755 1)))))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (+ 5 x3962)))))
(assert (not (= (x1211 x5421 1) (+ x2042 5))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x3148 3) x3166))))
(assert (= x5610 (=> (and (= (x3088 x5847) x2789) (= x4701 (< 18446744073709551615 x2789))) (and (=> x4701 x5361) (=> (and (= (x6031 (+ 32 x4524)) x4308) (= x4524 (uninterp_mod (* 32 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x4701) (= (x6031 (+ x709 x4308)) x6002) (or (and (= x6005 (x6031 (+ x6002 192))) (= x2589 x4998) (= x5376 (x6031 (+ 64 x2116))) (= x4231 (x6031 (+ 64 x5376))) (= x920 (x6031 (+ 64 x709))) (not x832) (= (x3337 (- x2789 1)) x1429) (= x2116 (x6031 (+ x6002 32))) (or (and (= x2589 x6005) (not x1605)) (and (= (x6031 (+ x682 64)) x4348) x1605 (= x682 (x6031 (+ 224 x6002))) (= x5476 x2589) (= (< 0 x2747) x2531) (= (x6031 (+ 64 x4348)) x5926) (= x5956 (x6031 (+ 64 x6005))) (not x2531) (= x2747 (x3337 (- x1429 1))) (= x5476 (x6031 (+ x6002 384))) (= (x6031 (+ x5956 64)) x5074))) (= (x6031 (+ x6002 64)) x3568) (= (> x1429 0) x1605) (= x5856 (x6031 (+ 64 x3568))) (= x3124 (x6031 (+ 32 x709)))) (and x832 (= x6002 x4998))) (= x832 (= x2789 0))) x4663)))))
(assert (x399 x4054))
(assert (x4630 x4211))
(assert (=> (< (- x4198 1) 10000) (not (= (x1211 x5421 1) x4198))))
(assert (= (x5618 x3175) 0))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x2060 1) x3513))))
(assert (not (= (+ x3962 4) (x1211 x5745 1))))
(assert (=> (= (x1211 x1112 1) (x1211 x3409 1)) (= x1112 x3409)))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x3409 1) x1956))))
(assert (and (= 5192296858534827628530496329220096 (x5041 2 112)) (= (x5041 2 24) 16777216) (= (x5041 2 40) 1099511627776) (= 95780971304118053647396689196894323976171195136475136 (x5041 2 176)) (= (x5041 2 64) 18446744073709551616) (= (x5041 2 0) 1) (= (x5041 2 136) 87112285931760246646623899502532662132736) (= (x5041 2 96) 79228162514264337593543950336) (= (x5041 2 16) 65536) (= 411376139330301510538742295639337626245683966408394965837152256 (x5041 2 208)) (= (x5041 2 192) 6277101735386680763835789423207666416102355444464034512896) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x5041 2 240)) (= 26959946667150639794667015087019630673637144422540572481103610249216 (x5041 2 224)) (= (x5041 2 88) 309485009821345068724781056) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x5041 2 232)) (= (x5041 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x5041 2 160) 1461501637330902918203684832716283019655932542976) (= 24519928653854221733733552434404946937899825954937634816 (x5041 2 184)) (= (x5041 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= (x5041 2 144) 22300745198530623141535718272648361505980416) (= 340282366920938463463374607431768211456 (x5041 2 128)) (= 5708990770823839524233143877797980545530986496 (x5041 2 152)) (= 256 (x5041 2 8)) (= 72057594037927936 (x5041 2 56)) (= (x5041 2 32) 4294967296) (= (x5041 2 80) 1208925819614629174706176) (= (x5041 2 216) 105312291668557186697918027683670432318895095400549111254310977536) (= (x5041 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x5041 2 104) 20282409603651670423947251286016) (= (x5041 2 120) 1329227995784915872903807060280344576) (= (x5041 2 168) 374144419156711147060143317175368453031918731001856) (= 281474976710656 (x5041 2 48)) (= 4722366482869645213696 (x5041 2 72))))
(assert (not (= (x1211 x4293 1) (+ 1 x2042))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x4610 1))))
(assert (x4630 x2593))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x4218 2)))))
(assert (not (= (+ 3 x2042) (+ 1 x98))))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x928 1) x1338))))
(assert (not (= (x1211 x1849 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (= (x1211 x5745 1) (x1211 x3755 1)) (= x5745 x3755)))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x1186 4))))
(assert (= 0 (x2241 x1607)))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (+ 3 x1186)))))
(assert (x4630 x5850))
(assert (not (= 3939881817 (x1211 x740 2))))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x740 2) x3575))))
(assert (=> (< (- x935 1) 10000) (not (= x935 (x1211 x182 1)))))
(assert (=> (= (x1211 x6069 1) (x1211 x5500 1)) (= x6069 x5500)))
(assert (=> (> (+ 10000 1) x1089) (not (= (+ 3 x1186) x1089))))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x5917 1) x4293))))
(assert (x4630 x2144))
(assert (x6051 x3085))
(assert (not (= (+ x3962 5) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (x1211 x1852 1) (+ 4 x2042))))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x902 1) x310))))
(assert (=> (= (x1211 x4799 1) (x1211 x3645 1)) (= x4799 x3645)))
(assert (= x86 (=> (and (= (> x3349 0) x5407) (= (x2790 x1155) x3349)) (and (=> (not x5407) x5361) (=> x5407 x3184)))))
(assert (not (= (x1211 x3836 1) (x1211 x4218 2))))
(assert (x4630 x4585))
(assert (= x4114 (and x749 x794)))
(assert (not (= (+ x3962 3) (x1211 x3992 2))))
(assert (x4630 x729))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x361 1) x1919))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x4527 1))))
(assert (not (= (+ x4054 2) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x208 1)))))
(assert (not (= (+ x2042 2) (+ 1 x3948))))
(assert (x4630 x962))
(assert (x4630 x4565))
(assert (not (= (+ x5409 1) 2743638299)))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x3962 4))))
(assert (not (= 826074471 (x1211 x1451 1))))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (+ x1186 3)))))
(assert (=> (< (- x2417 1) 10000) (not (= (+ 1 x3948) x2417))))
(assert (not (= 4294967296 (x1211 x4284 1))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (+ 2 x3962)))))
(assert (not (= (+ 1 x2042) (x1211 x4284 1))))
(assert (=> (= (x1211 x1852 1) (x1211 x3414 1)) (= x1852 x3414)))
(assert (not (= (x1211 x3992 2) (x1211 x3836 1))))
(assert (x4630 x5486))
(assert (not (= (x1211 x928 1) (+ 4 x98))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x5745 1)))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x2060 1) x952))))
(assert (not (= (+ x1186 4) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x1849 1)) (= x1849 274184521717934524641157099916833587231)))
(assert (x251 x5850 x4847 x2173 x4993))
(assert (not (= (+ 1 x98) (x1211 x4017 1))))
(assert (not (= (+ 3 x2042) (x1211 x2862 1))))
(assert (not (= 18446744073709551615 (+ 1 x5409))))
(assert (x4630 x1520))
(assert (= x270 (or x4628 (and x2065 (not x5521)))))
(assert (=> (> (+ 10000 1) x2758) (not (= (+ 2 x2042) x2758))))
(assert (x4630 x2616))
(assert (=> (< (- x4702 1) 10000) (not (= (+ x1186 1) x4702))))
(assert (= (x5589 x5936) (ite (= x3124 x5936) x6002 (x5930 x5936))))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x3148 3) x1303))))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x4218 2) x5617))))
(assert (x4630 x2924))
(assert (= (or (and x4877 x256) (and x5868 x5078)) x133))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x3543 1))))
(assert (not (= (+ 1 x98) (x1211 x740 2))))
(assert (x6051 x1966))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x4800 1)))))
(assert (not (= (x1211 x5917 1) 404098525)))
(assert (not (= (x1211 x4090 3) (x1211 x4610 1))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x208 1)))))
(assert (x4630 x783))
(assert (not (= (x1211 x740 2) (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x1919 1) x740))))
(assert (x4630 x3669))
(assert (=> (= (x1211 x4610 1) (x1211 x3576 1)) (= x4610 x3576)))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x4293 1)))))
(assert (not (= (+ 4 x2042) 826074471)))
(assert (x4630 x6131))
(assert (not (= 157198259 (+ x4054 2))))
(assert (= x2707 (=> (and (= (x6031 (+ x1708 4)) x3924) (= (x3910 x2820) x3765) (= x305 (= 0 x3765)) (= (x6031 (+ x1708 36)) x5274)) (and (=> (and (not x305) (= x757 (> x3022 0)) (or (and (= x1941 x52) x757 (= x6100 x3974) (= x3797 (>= (x4981 274184521717934524641157099916833587231) x542)) (= (= x3799 (x4981 x2820)) x3538) (= x3799 (x1302 x2820)) (= x1544 x240) (= x542 (x1302 274184521717934524641157099916833587231)) x3797 (> 4294967296 x924) (= x1432 x1151) x3538) (and (= x1941 x4558) (= x2413 x240) (= x876 x1432) (not x757) (= x833 x6100)))) x4367) (=> x305 x5361)))))
(assert (= x4954 (and x2348 (not x827))))
(assert (not (= (x1211 x3513 1) (x1211 x310 2))))
(assert (not (= (+ 1 x5409) 157198259)))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x1852 1) x3576))))
(assert (x399 x3699))
(assert (= (or (and x5823 x640) x5970) x931))
(assert (=> (> (+ 10000 1) x4284) (not (= (+ 1 x1186) x4284))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x4090 3)))))
(assert (x4630 x6118))
(assert (not (= (x1211 x740 2) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (not (= (x1211 x4017 1) (+ 2 x3457))))
(assert (=> (= (x1211 x4198 1) (x1211 x5745 1)) (= x5745 x4198)))
(assert (=> (= (x1211 x935 1) (x1211 x4293 1)) (= x4293 x935)))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (+ x3962 4)))))
(assert (=> (< (- x3414 1) 10000) (not (= (x1211 x3409 1) x3414))))
(assert (not (= (+ 1 x3948) (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (= (x1211 x5500 1) (x1211 x1451 1)) (= x1451 x5500)))
(assert (x4630 x1741))
(assert (not (= (x1211 x4610 1) (+ x2042 3))))
(assert (= x1046 (=> (and (= x4138 (< 18446744073709551615 x5481)) (= x5481 (x3088 x383))) (and (=> (and (not x4138) (= (x6031 (+ x2041 x5177)) x5052) (= (uninterp_mod (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1000) (= (x6031 (+ 32 x1000)) x2041) (= (= x5481 0) x1772) (or (and (= (uninterp_mod (* 32 x5481) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4861) (not x1772) (= (x6031 (+ 32 x5177)) x6047)) x1772)) x2283) (=> x4138 x5361)))))
(assert (not (= (x1211 x935 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (< (- x5500 1) 10000) (not (= (+ 1 x2042) x5500))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x3148) (not (= (x1211 x6069 1) x3148))))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x208 1) x1219))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x1112 1)))))
(assert (not (= (x1211 x3992 2) 4294967296)))
(assert (=> (= (x1211 x4293 1) (x1211 x4527 1)) (= x4527 x4293)))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (+ x98 4)))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 2514000705)))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x4800 1))))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 x5421 1) x1338))))
(assert (=> (> (+ 10000 1) x2696) (not (= (+ 4 x2042) x2696))))
(assert (x4630 x2218))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x361 1)))))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x310 2) x2154))))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x2060 1) x4218))))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (+ 2 x3962)))))
(assert (x4630 x3667))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (+ x2042 2)))))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x1849 1)))))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x361 1) x4527))))
(assert (=> (= (x1211 x4610 1) (x1211 x1451 1)) (= x1451 x4610)))
(assert (x4630 x490))
(assert (= x1188 (or (and x1527 x3170) x3395)))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x2060 1) x740))))
(assert (x4630 x2810))
(assert (not (= (x1211 x3645 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x3148 3)))))
(assert (=> (< (- x952 1) 10000) (not (= (+ x2042 2) x952))))
(assert (=> (= (x1211 x902 1) (x1211 x4017 1)) (= x902 x4017)))
(assert (=> (> (+ 10000 1) x1852) (not (= (x1211 x361 1) x1852))))
(assert (not (= (+ x1186 1) (x1211 x740 2))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (+ x4054 2)))))
(assert (= x5529 true))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x5421 1) x1852))))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (x1211 x1112 1)))))
(assert (= x1168 (and x1756 x4223)))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x5500 1))))
(assert (x4630 x5785))
(assert (not (= (x1211 x361 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x5745 1) x3836))))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x740 2)))))
(assert (not (= (x1211 x4610 1) 404098525)))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x946 1) x3543))))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (x1211 x4293 1)))))
(assert (x6051 x5816))
(assert (not (= (+ 3 x3962) 4168891048)))
(assert (=> (= (x1211 x361 1) (x1211 x935 1)) (= x361 x935)))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x3414 1) x4284))))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x4293 1) x1089))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x1451 1)))))
(assert (x4630 x686))
(assert (not (= (x1211 x4090 3) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (not (= (x1211 x1451 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (= (x1211 x1956 1) (x1211 x3576 1)) (= x1956 x3576)))
(assert (x4630 x3358))
(assert (= (x5843 x947) 0))
(assert (not (= (+ 2 x3962) 826074471)))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (+ 3 x2042)))))
(assert (not (= (+ x3962 1) 157198259)))
(assert (= x5794 (=> (and (= (x6031 (+ 32 x4515)) x1607) (= (x6031 (+ x4013 36)) x1721) (= x3047 (x5347 1461501637330902918203684832716283019655932542975 x1235)) (= x3771 (x5347 1461501637330902918203684832716283019655932542975 x2451)) (= x4596 (x6031 (+ x4013 4))) (= x3897 (x3910 x3771)) (= (x3021 x1607) x1292) (= (x5347 1461501637330902918203684832716283019655932542975 x1292) x1970) (= (= 0 x3897) x189)) (and (=> x189 x5361) (=> (and (= (< 0 x1663) x2695) (or (and (not x2695) (= x459 x1663)) (and x2695 (> 4294967296 x1697) (= x459 1))) (not x189)) x1039)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 3 x1186))))
(assert (= (x789 x3686) 0))
(assert (not (= (x1211 x310 2) (x1211 x2060 1))))
(assert (x4630 x4489))
(assert (not (= (x406 1) (+ x2042 2))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x1211 x310 2)))))
(assert (= (=> (and (= x1943 x4438) (= x4773 x3785)) x3810) x3439))
(assert (=> (= (x1211 x208 1) (x1211 x3513 1)) (= x3513 x208)))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x3576 1)))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (x1211 x1919 1)))))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x902 1)))))
(assert (=> (= (x1211 x1919 1) (x1211 x4198 1)) (= x1919 x4198)))
(assert (not (= (+ x3962 5) (+ x98 1))))
(assert (= (=> (and (= (or (> x4508 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x4508) (= (<= x4508 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x3947) (= (x6031 (+ 31 x4508)) x2966) (= x6169 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2966)) (= x5535 (x6031 (+ x6169 x2673)))) (and (=> x3947 x3198) (=> (not x3947) x3031))) x2438))
(assert (x4630 x5386))
(assert (= x5291 (=> (= (= 0 x3228) x4939) (and (=> (not x4939) x5761) (=> x4939 x3198)))))
(assert (=> (> (+ 10000 1) x4293) (not (= (+ 2 x4054) x4293))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x5500 1) x3166))))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (x1211 x5421 1)))))
(assert (= (=> (= (= x5556 0) x3141) (and (=> x3141 x3198) (=> (not x3141) x5758))) x5811))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 2 x3457))))
(assert (=> (= (x1211 x935 1) (x1211 x3645 1)) (= x935 x3645)))
(assert (not (= (x1211 x4799 1) 2514000705)))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x946 1) x5500))))
(assert (not (= (x1211 x361 1) 2514000705)))
(assert (=> (< (- x3740 1) 10000) (not (= (x1211 x5745 1) x3740))))
(assert (=> (< (- x208 1) 10000) (not (= (x1211 x4293 1) x208))))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x4284 1)))))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 x902 1) x2696))))
(assert (x4630 x683))
(assert (not (= (+ x3962 2) 274184521717934524641157099916833587206)))
(assert (=> (< (- x1467 1) 10000) (not (= (x1211 x5745 1) x1467))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x4017 1) x3771))))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x1919 1) x3511))))
(assert (=> (> (+ 10000 1) x2862) (not (= (+ 5 x3962) x2862))))
(assert (not (= (x1211 x3414 1) 2743638299)))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (+ x98 1)))))
(assert (x4630 x5483))
(assert (=> (> (+ 10000 1) x5745) (not (= (+ x3962 2) x5745))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x3755 1)))))
(assert (not (= (x1211 x361 1) (+ 5 x2042))))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x208 1) x3992))))
(assert (=> (= (x1211 x1849 1) (x1211 x1852 1)) (= x1849 x1852)))
(assert (x6051 x5044))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x208 1) x3771))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x4800 1)))))
(assert (not (= (+ x98 1) (+ 2 x2042))))
(assert (not (= (x1211 x3148 3) (+ x2042 4))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x3992 2) x935))))
(assert (=> (= (x1211 x3513 1) (x1211 x4293 1)) (= x4293 x3513)))
(assert (not (= (x1211 x935 1) (+ x3962 3))))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 x182 1)))))
(assert (not (= (x1211 x3414 1) 2)))
(assert (=> (< (- x4400 1) 10000) (not (= (+ x2042 4) x4400))))
(assert (not (= (+ 2 x3962) (+ 1 x3948))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x1956 1)))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ x4054 2))))
(assert (= x4850 (and (not x3353) x616)))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x361 1) x2601))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x3755 1))))
(assert (not (= (x1211 x1852 1) 2835717307)))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (x1211 x3513 1)))))
(assert (not (= (x1211 x4799 1) (x406 1))))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x208 1) x928))))
(assert (=> (> (+ 10000 1) x1248) (not (= x1248 (x1211 x4293 1)))))
(assert (not (= (x1211 x5500 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x4630 x4671))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 x3513 1) x2696))))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x3513 1) x2820))))
(assert (not (= 117300739 (x1211 x3409 1))))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x1852 1) x208))))
(assert (x4630 x409))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x406 1)))))
(assert (not (= (+ x3962 4) (+ 1 x3962))))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (+ 4 x2042)))))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (+ 4 x2042)))))
(assert (=> (< (- x1303 1) 10000) (not (= x1303 (x1211 x5917 1)))))
(assert (=> (= (x1211 x928 1) (x1211 x4017 1)) (= x4017 x928)))
(assert (=> (= (x1211 x3409 1) (x1211 x1852 1)) (= x1852 x3409)))
(assert (= (and x4517 x2638) x749))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (x1211 x4284 1)))))
(assert (not (= (+ x2042 1) 2)))
(assert (not (= 404098525 (+ 1 x98))))
(assert (x4630 x2035))
(assert (x4630 x4444))
(assert (=> (> (+ 10000 1) x3166) (not (= (x1211 x208 1) x3166))))
(assert (not (= (+ x2042 2) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x4799 1) x1956))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x208 1) x3230))))
(assert (=> (< (- x902 1) 10000) (not (= x902 (x1211 x3836 1)))))
(assert (x5138 x2251 x2983))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x946 1)))))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x928 1) x3992))))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x182 1) x2862))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x3543 1)))))
(assert (= (and (not x5362) x2086) x1396))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x4198 1) x1089))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x4090 3)))))
(assert (not (= (+ 3 x98) (x1211 x3992 2))))
(assert (= (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x2029) x208) (= x4656 (x4999 x3806)) (= x2276 (x3337 (- x4001 x1479))) (= (> x4656 x3559) x3627) (= x3559 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1479))) (>= x4656 0) (= 274184521717934524641157099916833587231 x5836) (= x3806 (x1211 x208 1)) (<= x4656 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5726 (x1211 274184521717934524641157099916833587231 1))) (and (=> (not x3627) x1864) (=> x3627 x1560))) x4380))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x3148 3) x182))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x935 1) x3992))))
(assert (x4630 x1881))
(assert (= x4570 (=> (and (= x4822 x2212) (= x2855 x3946)) x4714)))
(assert (not (= (x1211 x361 1) (x1211 x740 2))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (x1211 x3543 1)))))
(assert (=> (< (- x4090 1) 10000) (not (= (x1211 x3414 1) x4090))))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x3576 1)))))
(assert (=> (= (x1211 x4610 1) (x1211 x946 1)) (= x946 x4610)))
(assert (=> (= (x1211 x3836 1) (x1211 x3513 1)) (= x3836 x3513)))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x3543 1))))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (x1211 x1112 1)))))
(assert (x399 x5421))
(assert (x399 x1338))
(assert (not (= (x1211 x1451 1) 2743638299)))
(assert (=> (< (- x1089 1) 10000) (not (= (+ 4 x98) x1089))))
(assert (x4630 x1569))
(assert (not (= 3939881817 (x1211 x4284 1))))
(assert (x263 x4718 x1163))
(assert (x6051 x5827))
(assert (x5138 x1507 x5863))
(assert (not (= (x1211 x946 1) 2743638299)))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x3576 1) x4284))))
(assert (not (= 2835717307 (+ 3 x1186))))
(assert (not (= 18446744073709551615 (+ 4 x1186))))
(assert (x4630 x4274))
(assert (= (and x3920 (not x781)) x6041))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x3645 1)))))
(assert (not (= (+ 2 x3962) (+ x2042 5))))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x3645 1) x2820))))
(assert (not (= 826074471 (x1211 x928 1))))
(assert (= (and (not x5135) x4969) x629))
(assert (x263 x882 x1562))
(assert (=> (= (x1211 x4799 1) (x1211 x3409 1)) (= x3409 x4799)))
(assert (not (= (x1211 x946 1) (+ x3962 5))))
(assert (= (or x5840 (and x2349 x2678)) x746))
(assert (=> (> (+ 10000 1) x4799) (not (= (+ x98 1) x4799))))
(assert (=> (> (+ 10000 1) x4063) (not (= (x1211 x6069 1) x4063))))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x4198 1) x6037))))
(assert (x4630 x3015))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x3576 1) x1112))))
(assert (=> (= (x1211 x5421 1) (x1211 x5917 1)) (= x5421 x5917)))
(assert (= x5552 (and (not x1958) x776)))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (+ 4 x3962)))))
(assert (x4630 x5967))
(assert (not (= (+ x2042 5) (+ x2042 1))))
(assert (x4630 x2124))
(assert (x4630 x3481))
(assert (x4630 x762))
(assert (x4630 x4716))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x310 2)))))
(assert (= (and (not x5020) x529) x347))
(assert (=> (> (+ 10000 1) x4610) (not (= (+ x98 4) x4610))))
(assert (=> (> (+ 10000 1) x3699) (not (= (+ 4 x1186) x3699))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x3148 3)))))
(assert (not (= (+ x3962 1) (x1211 x3755 1))))
(assert (not (= (x1211 x2862 1) (+ x3962 2))))
(assert (= x2655 (and x2565 x4979)))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (+ 1 x3962)))))
(assert (not (= (x1211 x3645 1) 18446744073709551615)))
(assert (x4630 x3106))
(assert (not (= (x1211 x5421 1) 274184521717934524641157099916833587206)))
(assert (= x5783 (and x5415 x4097)))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x4610 1)))))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x4017 1) x1775))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (+ 3 x2042)))))
(assert (not (= (+ 3 x2042) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x6069 1) x4800))))
(assert (not (= (x1211 x4293 1) (+ 1 x98))))
(assert (not (= (+ x3962 5) (x1211 x3992 2))))
(assert (x4630 x3194))
(assert (= x216 (or (and x4783 (not x5108)) (and (not x4797) x3387))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x3543 1)))))
(assert (=> (= (x1211 x3414 1) (x1211 x3755 1)) (= x3755 x3414)))
(assert (=> (< (- x4400 1) 10000) (not (= (+ x3962 4) x4400))))
(assert (= x6015 (and x5849 (not x971))))
(assert (=> (< (- x310 1) 10000) (not (= (+ 1 x2042) x310))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x4017 1)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 1 x3962))))
(assert (x4630 x199))
(assert (x4630 x2233))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 x5421 1)))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x928 1)))))
(assert (not (= (x1211 x5421 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (< (- x5421 1) 10000) (not (= (+ x1186 3) x5421))))
(assert (= (=> (and (= (x6031 (+ 31 x2288)) x2526) (= (x6031 (+ x5082 x1095)) x4363) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2288) (and (< x2288 32) (= (<= x2288 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x694) (= x1095 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2526))) (and (=> x694 x3198) (=> (not x694) x5789))) x6117))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x3409 1))))
(assert (not (= (x1211 x6069 1) (+ 4 x98))))
(assert (not (= (x1211 x3755 1) 1461501637330902918203684832716283019655932542975)))
(assert (x4630 x1775))
(assert (not (= (x406 1) 274184521717934524641157099916833587202)))
(assert (x4630 x3874))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (x1211 x5500 1)))))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (+ 1 x5409)))))
(assert (not (= (x1211 x2060 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x3409 1) x4198))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x3543 1))))
(assert (not (= (x406 1) (+ x4054 2))))
(assert (=> (< (- x5617 1) 10000) (not (= (+ x2042 4) x5617))))
(assert (=> (> (+ 10000 1) x1451) (not (= (+ x2042 2) x1451))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (+ x3962 1)))))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (+ 4 x1186)))))
(assert (not (= (+ 1 x5409) (x406 1))))
(assert (=> (= (x1211 x3513 1) (x1211 x3576 1)) (= x3576 x3513)))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (+ x3962 1)))))
(assert (x4630 x197))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (+ 2 x2042)))))
(assert (=> (< (- x361 1) 10000) (not (= (x1211 x1112 1) x361))))
(assert (not (= (+ x3962 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 x6069 1) x2696))))
(assert (=> (< (- x2060 1) 10000) (not (= (+ 2 x2042) x2060))))
(assert (x4630 x3054))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x1451 1)))))
(assert (x4630 x5454))
(assert (not (= (x406 1) (x1211 x3513 1))))
(assert (= x3387 (and x2039 x2929)))
(assert (=> (= (x1211 x3409 1) (x1211 x4610 1)) (= x3409 x4610)))
(assert (x4630 x4014))
(assert (=> (< (- x4198 1) 10000) (not (= (x1211 x4527 1) x4198))))
(assert (not (= (+ 1 x98) 2835717307)))
(assert (= x1566 (and (not x4798) x3531)))
(assert (x4630 x674))
(assert (= (=> (and (= (x3337 (- x4639 x5814)) x1354) (= x1632 (x1211 x5917 1)) (= x1351 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5814))) (= x2967 274184521717934524641157099916833587231) (= (x1916 x1632) x1092) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1092) (= x5241 (> x1092 x1351)) (= x5917 (x5347 1461501637330902918203684832716283019655932542975 x1126)) (<= 0 x1092) (= (x1211 274184521717934524641157099916833587231 1) x2700)) (and (=> x5241 x4655) (=> (not x5241) x1001))) x4235))
(assert (= (and x5431 x2561) x3327))
(assert (x4630 x318))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x361 1) x3230))))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (+ x3962 4)))))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x1112 1)))))
(assert (=> (< (- x561 1) 10000) (not (= x561 (x1211 x902 1)))))
(assert (=> (< (- x1451 1) 10000) (not (= (x1211 x2060 1) x1451))))
(assert (x4630 x1273))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x3513 1)))))
(assert (x4630 x1461))
(assert (= x4655 (=> (and (= x3743 0) (= x4253 x5478)) x3780)))
(assert (not (= (+ 1 x3948) 2514000705)))
(assert (=> (= (x1211 x902 1) (x1211 x5745 1)) (= x5745 x902)))
(assert (x4630 x5217))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x2862 1))))
(assert (x4630 x6111))
(assert (not (= 4168891048 (+ 1 x1186))))
(assert (not (= (x1211 x2060 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (+ 1 x5409))))
(assert (= (x2690 x5611) (ite (and (not x4813) x3830 x3235) (x1856 x5611) (x4892 x5611))))
(assert (not (= (x1211 x5500 1) (x406 1))))
(assert (x4630 x1408))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x2060 1)))))
(assert (=> (> (+ 10000 1) x928) (not (= (+ 1 x3948) x928))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x5500 1) x3771))))
(assert (x4630 x1547))
(assert (x4630 x5312))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x2060 1) x1598))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x4527 1))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x3576 1)))))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (+ 3 x3962)))))
(assert (=> (= (x1211 x4610 1) (x1211 x4017 1)) (= x4610 x4017)))
(assert (not (= (x1211 x4090 3) (x1211 x4218 2))))
(assert (= (and x3072 x5903) x2063))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (x1211 x1849 1)))))
(assert (= (ite (= x1803 x5990) x655 (x2690 x1803)) (x1809 x1803)))
(assert (=> (< (- x361 1) 10000) (not (= (x1211 x3409 1) x361))))
(assert (= x1710 (=> (= x5580 (= x3255 274184521717934524641157099916833587202)) (and (=> (and (= x802 4) (not (= 157198259 x3494)) (< x3494 826074471) (= 32 x28) (not (> 4 x802)) (= 4 x802) x5580 (<= 0 x4558) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x5877) (not (= 117300739 x3494)) (<= x4558 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x398 1) (= x2119 (x3910 274184521717934524641157099916833587202)) (< 0 x2119) (= 404098525 x3494)) x1567) (=> (not x5580) x4734)))))
(assert (= (x3167 x4096) (ite (and (not x5449) x1841 x708) (x2826 x4096) (x3247 x4096))))
(assert (x4630 x2497))
(assert (=> (> (+ 10000 1) x5917) (not (= (+ x2042 4) x5917))))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x361 1) x3576))))
(assert (not (= (x1211 x2060 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x361 1) 10000) (not (= (x1211 x2862 1) x361))))
(assert (= (or (and x3201 (not x3648)) (and x5455 x5081)) x4754))
(assert (not (= 1 (x1211 x310 2))))
(assert (= (ite (= x3124 x1818) x6002 (x5930 x1818)) (x5589 x1818)))
(assert (x4630 x2203))
(assert (x5138 x3383 x3873))
(assert (x4630 x4626))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x3513 1)))))
(assert (= (=> (and (= 1 x3302) (= (x5347 x3302 x2356) x132) (= x2124 1) (= x1058 (x5347 x2124 x2019)) (= x2356 (ite (> 32 x4887) 1 0)) (= x2229 (= 0 (x5 x1058 x132))) (= x2019 (ite (> 78 x4887) 1 0))) (and (=> (and (= x2618 (x5041 10 x4887)) (not x2229)) x2541) (=> (and (or (and (= x3753 100) (not x4402) (= x1559 (x5347 1 x4887)) x5702 (= (= 0 x1559) x4144) (= x3013 (ite x4144 1 10)) (= x4402 (> x6131 1)) (= (x1044 x4887 1) x6131)) (and (not x5702) (= 1 x3013) (= 10 x3753))) (= (< 1 x4887) x5702) x2229) x2780))) x507))
(assert (= (=> (= (= 0 x510) x5400) (and (=> x5400 x5361) (=> (not x5400) x1118))) x3217))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x406 1)))))
(assert (=> (< (- x3148 1) 10000) (not (= (+ 2 x3962) x3148))))
(assert (= (=> (and (= x4068 0) (= x3255 (x773 x1850)) (< x3255 1461501637330902918203684832716283019655932542976) (<= x3255 1461501637330902918203684832716283019655932542975) (= x5073 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)) (= (+ 4 x1186) x232) (<= 0 x463) (= (x1270 x232) x463) (= (+ x1186 1) x1850) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x463) (<= 0 x3255)) (and (=> (not x5073) x73) (=> x5073 x3394))) x2617))
(assert (x4630 x5869))
(assert (x4630 x5545))
(assert (=> (< (- x4702 1) 10000) (not (= (x1211 x902 1) x4702))))
(assert (x4630 x6018))
(assert (not (= (+ 3 x3962) (x1211 x3513 1))))
(assert (= x699 true))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x1112 1)))))
(assert (not (= (x1211 x946 1) (+ x3962 4))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (+ x2042 5)))))
(assert (not (= (x1211 x740 2) 274184521717934524641157099916833587231)))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (+ 2 x4054)))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x1112 1))))
(assert (x4630 x5680))
(assert (x4630 x1350))
(assert (= x5883 (=> (= (= x2154 274184521717934524641157099916833587202) x3590) (and (=> (not x3590) x4456) (=> (and x3590 (not (< x4959 4)) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x796) (> 826074471 x5899) (= 1 x4361) (not (= x5899 157198259)) (= x863 (x3910 274184521717934524641157099916833587202)) (= x4959 4) (= 404098525 x5899) (>= x5470 0) (= 32 x1612) (not (= 117300739 x5899)) (<= x5470 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x863) (= x671 x4959)) x1996)))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x5421 1) x4113))))
(assert (not (= (x1211 x935 1) (+ 1 x1186))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x1849 1) x3230))))
(assert (not (= (+ x2042 5) (x1211 x4284 1))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x928 1)))))
(assert (not (= (+ 1 x1186) (x1211 x4284 1))))
(assert (= x1859 (=> (and (= x1087 (ite (not x3566) 1 0)) (= (= 0 x5776) x3566) (= (x5347 x1087 x3653) x2303) (= x916 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5776))) (= (ite (> x463 x916) 1 0) x3653) (= x3579 (= 0 x2303))) (and (=> x3579 x119) (=> (not x3579) x5361)))))
(assert (x4630 x675))
(assert (=> (> (+ 10000 1) x4554) (not (= (x1211 x3414 1) x4554))))
(assert (x4630 x150))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x361 1)))))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (+ x1186 3)))))
(assert (= x3478 (=> (and (= x4484 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3462)) (= x3462 (x6031 (+ x2434 31))) (= (or (and (< x2434 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2434))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2434)) x4234) (= (x6031 (+ x4484 128)) x2005)) (and (=> x4234 x3198) (=> (not x4234) x1481)))))
(assert (= (=> (and (= (> x3004 0) x6087) (= (x2995 x3768) x3004)) (and (=> x6087 x1019) (=> (and (not x6087) (= x1411 0)) x3368))) x3090))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x1956 1)))))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (+ 4 x1186)))))
(assert (x4630 x4065))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x4090 3)))))
(assert (= (=> (and (= (ite (< x4404 x5085) 1 0) x1263) (= x5328 (x6031 (+ 160 x5061))) (= (ite (not x1452) 1 0) x4210) (= (x5347 x4210 x1263) x1376) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637)) x4404) (= x4637 (x1836 x5328)) (= x1175 (= 0 x1376)) (= (= 0 x4637) x1452)) (and (=> x1175 x353) (=> (not x1175) x5361))) x3640))
(assert (= x4605 (and x4114 (not x268))))
(assert (x4630 x2012))
(assert (not (= (+ 1 x2042) (x1211 x3414 1))))
(assert (not (= (+ 1 x1186) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (= (x1211 x3543 1) (x1211 x1956 1)) (= x1956 x3543)))
(assert (x4630 x4629))
(assert (x4630 x5649))
(assert (x4630 x2010))
(assert (not (= (+ 2 x3962) (+ 4 x3962))))
(assert (not (= (x1211 x6069 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x208 1)))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x1849 1)))))
(assert (not (= (+ x3962 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= true x991))
(assert (x4630 x1874))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x1112 1) x4702))))
(assert (x4630 x1932))
(assert (= x1662 (and x1478 (not x189))))
(assert (=> (> (+ 10000 1) x561) (not (= (+ 3 x1186) x561))))
(assert (x4630 x1392))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ 3 x1186))))
(assert (= (x1916 x5303) (ite (= x5303 x2700) x1354 (x88 x5303))))
(assert (=> (< (- x1451 1) 10000) (not (= (x1211 x3409 1) x1451))))
(assert (x4630 x329))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x946 1) x3755))))
(assert (= x5275 (=> (= (> x1377 x5348) x187) (and (=> x187 x3198) (=> (and (= x5470 x5018) (= x2472 x4766) (= x2197 x4462) (not x187) (= x5744 x2836) (= x1377 x1594) (= x4009 (x3337 (- x5348 x1377))) (= x6018 x4825)) x5172)))))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (x1211 x3148 3)))))
(assert (=> (= (x1211 x4610 1) (x1211 x3414 1)) (= x4610 x3414)))
(assert (not (= (+ x2042 3) (+ 2 x2042))))
(assert (not (= (x1211 x3409 1) 4168891048)))
(assert (not (= (x1211 x4293 1) (+ 5 x3962))))
(assert (not (= (x1211 x4527 1) (+ 2 x3457))))
(assert (=> (> (+ 10000 1) x4113) (not (= (x1211 x3576 1) x4113))))
(assert (=> (< (- x4702 1) 10000) (not (= (+ 3 x1186) x4702))))
(assert (=> (> (+ 10000 1) x4400) (not (= (+ x3457 2) x4400))))
(assert (= x4620 (=> (and (= x3972 x3823) (= x1423 (< 1 x2699)) (= x2699 (x5474 x2296)) (not x1423) (= (x236 x1822) x2296)) x889)))
(assert (not (= (+ 4 x2042) (+ x3962 2))))
(assert (=> (= (x1211 x182 1) (x1211 x3513 1)) (= x182 x3513)))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x946 1) x561))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x208 1)))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (+ x3962 5)))))
(assert (not (= (x1211 x3755 1) (+ 2 x3962))))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x5917 1)))))
(assert (= x449 (=> (= (= 0 x5094) x2767) (and (=> x2767 x5361) (=> (not x2767) x4154)))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (+ x3457 2)))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (+ 4 x1186)))))
(assert (x4630 x5959))
(assert (= x5553 (and (not x4397) x786)))
(assert (x4630 x3186))
(assert (x4630 x2549))
(assert (x4630 x550))
(assert (not (= (x1211 x4090 3) 3)))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x3543 1)))))
(assert (not (= (+ x1186 1) (x1211 x4610 1))))
(assert (x4630 x222))
(assert (not (= 18446744073709551615 (+ x2042 4))))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x4017 1) x1112))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ 4 x3962)))))
(assert (x4630 x3884))
(assert (x4630 x4218))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (+ x1186 1)))))
(assert (=> (= (x1211 x2060 1) (x1211 x1919 1)) (= x1919 x2060)))
(assert (=> (> (+ 10000 1) x3511) (not (= (+ 1 x3962) x3511))))
(assert (x4630 x6033))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x5421 1)))))
(assert (=> (= (x1211 x2862 1) (x1211 x928 1)) (= x928 x2862)))
(assert (=> (= (x1211 x4198 1) (x1211 x6069 1)) (= x4198 x6069)))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (+ 4 x3962)))))
(assert (=> (< (- x2417 1) 10000) (not (= (+ 2 x3457) x2417))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x4090 3)))))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x1112 1) x4527))))
(assert (= (=> (and (= (x6031 (+ x5591 x2388)) x5749) (= x5591 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5932)) (= (x6031 (+ x4670 31)) x5932) (= x3556 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4670)) (> 32 x4670)) (> x4670 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> x3556 x5361) (=> (not x3556) x1312))) x4154))
(assert (x4630 x771))
(assert (= (ite (= x5328 x4231) 0 (x3517 x5328)) (x1918 x5328)))
(assert (x6051 x5318))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x4800 1)))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (x1211 x4527 1)))))
(assert (not (= 2 (x1211 x1849 1))))
(assert (=> (> (+ 10000 1) x1598) (not (= (+ 2 x3457) x1598))))
(assert (x4630 x1628))
(assert (=> (= (x1211 x182 1) (x1211 x1451 1)) (= x182 x1451)))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (+ 1 x2042)))))
(assert (not (= 18446744073709551615 (x1211 x928 1))))
(assert (=> (> (+ 10000 1) x208) (not (= (+ x98 3) x208))))
(assert (x4630 x4681))
(assert (=> (= (x1211 x182 1) (x1211 x4610 1)) (= x182 x4610)))
(assert (x399 x4527))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 x310 2) x2696))))
(assert (x4630 x5874))
(assert (=> (> (+ 10000 1) x1303) (not (= (+ 1 x2042) x1303))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x4017 1))))
(assert (not (= (x1211 x2862 1) (+ x98 1))))
(assert (= x3824 (=> (and (= x3496 x5656) (= x2138 x2975)) x113)))
(assert (not (= (x1211 x4610 1) 2514000705)))
(assert (= x2321 (=> (and (= x5105 x4045) (= x2423 x606)) x2208)))
(assert (=> (= (x1211 x4800 1) (x1211 x928 1)) (= x4800 x928)))
(assert (not (= (+ 2 x3962) 1889567281)))
(assert (not (= (+ x4054 2) (x1211 x5500 1))))
(assert (not (= 3 (+ 2 x2042))))
(assert (not (= (x1211 x3992 2) (x1211 x4610 1))))
(assert (= x1394 (=> (and (= x3008 (x6031 (+ x1697 31))) (= (or (and (< x1697 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1697))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1697)) x3984) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3008) x1461) (= (x6031 (+ x1461 x4013)) x1942)) (and (=> x3984 x5361) (=> (not x3984) x4975)))))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x3409 1) x1219))))
(assert (not (= (+ x3457 2) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (not (= 18446744073709551615 (+ 5 x3962))))
(assert (=> (< (- x4644 1) 10000) (not (= (+ x98 4) x4644))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ 2 x4054))))
(assert (x4630 x5318))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x1112 1)))))
(assert (=> (< (- x3576 1) 10000) (not (= (+ 5 x3962) x3576))))
(assert (= x5971 (and x5506 x1105)))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x4218 2) x4527))))
(assert (not (= (+ x3962 5) (x1211 x4198 1))))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x3755 1)))))
(assert (= x2856 (or (and x1719 x1384) (and x3650 x95))))
(assert (=> (> (+ 10000 1) x3511) (not (= (+ 4 x3962) x3511))))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (+ x98 4)))))
(assert (x4630 x3595))
(assert (= x2319 (and x5820 x2901)))
(assert (=> (> (+ 10000 1) x182) (not (= (x1211 x5500 1) x182))))
(assert (not (= (x1211 x4799 1) 2835717307)))
(assert (x399 x3836))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (x1211 x3543 1)))))
(assert (not (= (+ x3962 4) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x4630 x4430))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x5745 1))))
(assert (x4630 x1338))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x3576 1)))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x1919 1)))))
(assert (not (= (x1211 x1849 1) (x1211 x4090 3))))
(assert (= x167 (or (and x4633 (not x3952)) (and x1442 x2289))))
(assert (= (and (not x2980) x2588) x1399))
(assert (not (= 4168891048 (x1211 x3992 2))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x740 2)))))
(assert (=> (= (x1211 x3836 1) (x1211 x3755 1)) (= x3755 x3836)))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (+ 2 x3962)))))
(assert (not (= (x1211 x5500 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x6069 1))))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (x1211 x1112 1)))))
(assert (not (= 3 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (= (x1211 x4017 1) (x1211 x3576 1)) (= x3576 x4017)))
(assert (=> (> (+ 10000 1) x1775) (not (= (+ 4 x2042) x1775))))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (+ 3 x1186)))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (+ x5409 1)))))
(assert (x4630 x3458))
(assert (x4630 x319))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x182 1)))))
(assert (not (= (x1211 x3513 1) (+ x3962 2))))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x5500 1) x4284))))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x4610 1) x4063))))
(assert (=> (< (- x1451 1) 10000) (not (= (+ 3 x98) x1451))))
(assert (= (=> (and (>= x4001 0) (= x4001 (x1441 x5248)) (= x323 x1479) (= (x1211 274184521717934524641157099916833587231 1) x5248) (= (< x4001 x3783) x2219) (= 274184521717934524641157099916833587231 x1569) (<= x4001 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (not x2219) x5848) (=> x2219 x1560))) x1686))
(assert (=> (> (+ 10000 1) x3771) (not (= (+ 1 x1186) x3771))))
(assert (= (=> (= x4673 (= 0 x5656)) (and (=> x4673 x3198) (=> (not x4673) x1539))) x113))
(assert (= x3436 (=> (and (= (< 0 x2538) x4624) (= x3813 (x5645 x4997)) (= (x1265 x2952) x5111) (= (x5609 x3813) x2538)) (and (=> (not x4624) x3198) (=> x4624 x359)))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x740 2) x4113))))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x2862 1) x3699))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x4527 1) x3230))))
(assert (x4630 x5482))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x2862 1))))
(assert (x4630 x1875))
(assert (x4630 x276))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x4218 2) x3836))))
(assert (=> (> (+ 10000 1) x5500) (not (= (x1211 x740 2) x5500))))
(assert (not (= (x1211 x740 2) (x1211 x5500 1))))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x4293 1)))))
(assert (= (=> (and (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5344) x2263) (= x2927 (x6031 (+ x2263 128))) (= (x6031 (+ x2543 31)) x5344) (= x4093 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2543)) (> 32 x2543)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2543)))) (and (=> (not x4093) x3899) (=> x4093 x5361))) x3289))
(assert (=> (< (- x4702 1) 10000) (not (= (x1211 x3148 3) x4702))))
(assert (not (= (+ x3962 3) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x902) (not (= (+ 3 x98) x902))))
(assert (= 0 (x6052 x4897)))
(assert (not (= 3939881817 (+ x3962 5))))
(assert (= x2599 (and x847 (not x5043))))
(assert (= x2882 (=> (and (= x561 (x5347 1461501637330902918203684832716283019655932542975 x1400)) (= (x3021 x1794) x1400) (= (x3910 x561) x4839) (= (= x4839 0) x5383) (= 4 x5942)) (and (=> x5383 x5361) (=> (not x5383) x5923)))))
(assert (not (= (x1211 x4610 1) 274184521717934524641157099916833587202)))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (+ 1 x2042)))))
(assert (=> (> (+ 10000 1) x1219) (not (= (x1211 x4090 3) x1219))))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x3645 1) x3576))))
(assert (=> (= (x1211 x3409 1) (x1211 x1956 1)) (= x3409 x1956)))
(assert (x4630 x5575))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x6069 1)))))
(assert (not (= (x1211 x361 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (+ x98 3)))))
(assert (= (or x423 (and x2053 x4119)) x4930))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x310 2) x4113))))
(assert (=> (= (x1211 x902 1) (x1211 x4527 1)) (= x4527 x902)))
(assert (=> (< (- x928 1) 10000) (not (= (+ x3457 2) x928))))
(assert (x4630 x1056))
(assert (=> (= (x1211 x946 1) (x1211 x5500 1)) (= x5500 x946)))
(assert (x399 x2060))
(assert (x4630 x5822))
(assert (=> (> (+ 10000 1) x3513) (not (= (+ x2042 5) x3513))))
(assert (=> (< (- x3645 1) 10000) (not (= (+ x2042 4) x3645))))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (x1211 x3148 3)))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x4800 1))))
(assert (x4630 x647))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x2060 1) x3576))))
(assert (x4630 x447))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x3513 1)))))
(assert (not (= (+ 4 x3962) (x1211 x310 2))))
(assert (x6051 x5949))
(assert (not (= (x1211 x5745 1) (+ 3 x2042))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 4168891048)))
(assert (= (and x3530 x4586) x4807))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x3755 1)))))
(assert (x4630 x2274))
(assert (not (= (x1211 x208 1) 1889567281)))
(assert (=> (> (+ 10000 1) x4090) (not (= (+ x3948 1) x4090))))
(assert (x4630 x3255))
(assert (=> (= (x1211 x3836 1) (x1211 x946 1)) (= x3836 x946)))
(assert (not (= (+ x1186 1) 3939881817)))
(assert (x4630 x4697))
(assert (not (= (x406 1) 2)))
(assert (=> (< (- x1849 1) 10000) (not (= (+ x2042 1) x1849))))
(assert (= (and x4084 x307) x3245))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x2862 1) x4527))))
(assert (not (= (x1211 x3576 1) (+ 3 x2042))))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x1852 1) x6069))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x3992 2)))))
(assert (not (= (x1211 x2862 1) (x1211 x4218 2))))
(assert (x4630 x5190))
(assert (x4630 x2622))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x561))))
(assert (= (ite (and x494 (not x1694) x5731) (x2332 x106) (x3247 x106)) (x88 x106)))
(assert (x4630 x5754))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (+ 3 x2042)))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x5917 1)))))
(assert (x4630 x155))
(assert (not (= 4168891048 (+ x98 3))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x5917 1)))))
(assert (=> (< (- x4799 1) 10000) (not (= (+ x98 4) x4799))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (+ 3 x1186)))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 274184521717934524641157099916833587231 1) x5745))))
(assert (not (= (x1211 x3513 1) (+ 3 x1186))))
(assert (= (and x63 (not x5228)) x3904))
(assert (x4630 x2706))
(assert (x4630 x2191))
(assert (=> (< (- x5617 1) 10000) (not (= (+ 4 x3962) x5617))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x3409 1)))))
(assert (= 0 (x4225 x291)))
(assert (not (= (+ 4 x98) (+ x2042 2))))
(assert (= x3526 (or (and x5072 x2854) (and x552 (not x2914)))))
(assert (= x3199 true))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x5500 1))))
(assert (not (= (x1211 x3513 1) (+ 1 x2042))))
(assert (x6051 x2600))
(assert (=> (> (+ 10000 1) x3699) (not (= (+ 1 x98) x3699))))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x935 1) x1338))))
(assert (not (= (x1211 x2060 1) (+ x2042 5))))
(assert (= (=> (and (= 0 x4737) (= x5795 x2274)) x1891) x3256))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x361 1)) (= x361 274184521717934524641157099916833587231)))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x4527 1) x1089))))
(assert (not (= (+ x4054 2) (+ x2042 4))))
(assert (not (= 3939881817 (x1211 x3992 2))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (+ 3 x3962)))))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x1919 1) x5917))))
(assert (x4630 x1219))
(assert (x5138 x1238 x1343))
(assert (x4630 x4808))
(assert (not (= 826074471 (x1211 x1849 1))))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x902 1) x2820))))
(assert (= x602 (and (not x5299) x5625)))
(assert (not (= (x1211 x3543 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (+ 1 x98)))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x3543 1)))))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x1956 1) x740))))
(assert (x4630 x1580))
(assert (not (= (x406 1) 1889567281)))
(assert (not (= (x1211 x3992 2) 404098525)))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x3836 1)))))
(assert (not (= (x1211 x208 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (= x3782 (or (and x3719 x2115) (and x5452 x4029))))
(assert (= (x1448 x2527) 0))
(assert (not (= (+ x98 4) 4294967296)))
(assert (= (and (not x3719) x2115) x488))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x1849 1))))
(assert (not (= (x1211 x3755 1) 826074471)))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x4800 1)))))
(assert (not (= (x1211 x310 2) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x4630 x5102))
(assert (=> (< (- x935 1) 10000) (not (= (+ 1 x3948) x935))))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x182 1) x4610))))
(assert (not (= 2743638299 (x406 1))))
(assert (not (= (+ x3962 4) 2)))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x5500 1)))))
(assert (not (= (+ x3948 1) (x1211 x182 1))))
(assert (not (= (x1211 x3836 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x3576 1)))))
(assert (not (= (x1211 x4090 3) 2514000705)))
(assert (x4630 x1696))
(assert (=> (= (x1211 x1852 1) (x1211 x6069 1)) (= x6069 x1852)))
(assert (x4630 x4769))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x361 1)))))
(assert (=> (> (+ 10000 1) x4554) (not (= (+ x1186 4) x4554))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x6069 1) x3166))))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (+ x3962 4)))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x3409 1))))
(assert (not (= (+ 3 x98) (x1211 x5917 1))))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x3755 1) x2758))))
(assert (=> (= (x1211 x4017 1) (x1211 x3836 1)) (= x3836 x4017)))
(assert (= 0 (x2241 x3069)))
(assert (x4630 x1877))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x3543 1)))))
(assert (=> (= (x1211 x3409 1) (x1211 x3543 1)) (= x3409 x3543)))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (+ 1 x3948)))))
(assert (x4630 x833))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x5917 1)))))
(assert (= x1695 (and (not x4314) x4203)))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 274184521717934524641157099916833587231 1) x2549))))
(assert (not (= (x1211 x740 2) (+ x3962 4))))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x2060 1)))))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x1919 1) x4527))))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (+ 4 x2042)))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x902 1)))))
(assert (=> (> (+ 10000 1) x4218) (not (= (x1211 x5500 1) x4218))))
(assert (not (= (x1211 x4527 1) (+ 4 x98))))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x3576 1) x3836))))
(assert (=> (= (x1211 x1919 1) (x1211 x946 1)) (= x946 x1919)))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x1956) (not (= (+ 3 x2042) x1956))))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (+ x4054 2)))))
(assert (x4630 x858))
(assert (not (= 826074471 (x1211 x946 1))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x4527 1))))
(assert (= x5390 (=> (and (= x4874 x4527) (= x4175 (= x4527 x4354))) (and (=> (and x4175 (= x4337 (x4033 x4233)) (= x4233 (x1211 x4527 1)) (= x4239 1) (<= x4337 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3713 32) (>= x4337 0)) x5539) (=> (not x4175) x3649)))))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x5745 1))))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 x4527 1) x2696))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x4090 3)))))
(assert (=> (> (+ 10000 1) x3148) (not (= (x1211 x1852 1) x3148))))
(assert (=> (< (- x561 1) 10000) (not (= x561 (x1211 x4090 3)))))
(assert (not (= (+ 3 x98) (+ x2042 4))))
(assert (=> (> (+ 10000 1) x3409) (not (= (+ x98 3) x3409))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 2 x4054))))
(assert (x399 x1852))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (+ 5 x3962)))))
(assert (=> (> (+ 10000 1) x3786) (not (= (x406 1) x3786))))
(assert (=> (= (x1211 x5421 1) (x1211 x4293 1)) (= x4293 x5421)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x1112 1))))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (x1211 x4090 3)))))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (+ 3 x1186)))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x4090 3)))))
(assert (not (= (+ 4 x1186) (x1211 x3836 1))))
(assert (= x3820 (or x206 (and x4175 x2677))))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 x740 2) x3513))))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x1451 1) x3740))))
(assert (not (= (+ 1 x5409) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (x1211 x5500 1)))))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (x1211 x3543 1)))))
(assert (= x4903 (=> (and (= x4797 (< x5486 0)) (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1240)) x5486) (= (x6031 (+ x1355 192)) x6068) (= x1240 (x2550 x6068))) (and (=> x4797 x3198) (=> (and (= x2259 x1240) (= x4896 (x244 x2159)) (= x5722 (< 1 x4896)) (= x2259 x1446) (not x5722) (not x4797)) x5200)))))
(assert (=> (= (x1211 x4293 1) (x1211 x4610 1)) (= x4293 x4610)))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x5421 1) x1956))))
(assert (x4630 x4248))
(assert (=> (= (x1211 x4198 1) (x1211 x5421 1)) (= x5421 x4198)))
(assert (x5138 x3081 x2572))
(assert (not (= (x1211 x4527 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (+ x4054 2) 2743638299)))
(assert (not (= (+ x2042 1) (x1211 x740 2))))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x1919 1) x3979))))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x3148 3) x946))))
(assert (= (x4457 x3860) (ite (and x1709 (not x2287) x1484) (x2764 x3860) (x241 x3860))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x182 1))))
(assert (not (= 1889567281 (x1211 x4284 1))))
(assert (not (= (+ x3962 1) 117300739)))
(assert (= (ite (and (not x305) x5626 x757) (x2597 x3445) (x3247 x3445)) (x3313 x3445)))
(assert (= x363 (=> (and (or (and (= x2728 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5578)) (= x1666 x452) (not x2912) (= x5578 (x6031 (+ x4050 63))) (= x1666 (x6031 (+ x2728 x2819))) (= x5582 (x6031 (+ x2371 96))) (= x2167 x2819)) (and x2912 (= x452 x2819) (= 96 x2167))) (= x2912 (= 0 x4050))) x157)))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x3755 1)))))
(assert (not (= (+ 4 x2042) (+ 5 x3962))))
(assert (not (= (x1211 x4090 3) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (< (- x4284 1) 10000) (not (= (x1211 x3513 1) x4284))))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x3414 1) x4107))))
(assert (=> (= (x1211 x4284 1) (x1211 x4527 1)) (= x4284 x4527)))
(assert (x6051 x3695))
(assert (not (= (+ 4 x2042) (+ x3962 1))))
(assert (=> (< (- x4113 1) 10000) (not (= (+ 1 x98) x4113))))
(assert (= x4229 (=> (and (= x5408 (= 0 x4875)) (= (x1975 128) x1123) (= 4 x2393) (= x4875 (x3910 x3511))) (and (=> x5408 x3198) (=> (not x5408) x3793)))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x4284 1)))))
(assert (not (= (x1211 x1112 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (+ x5409 1) (x1211 x3543 1))))
(assert (not (= 4294967296 (x1211 x935 1))))
(assert (x4630 x59))
(assert (=> (< (- x6069 1) 10000) (not (= (x406 1) x6069))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x6069 1)))))
(assert (not (= (+ x98 4) 18446744073709551615)))
(assert (= x3406 x1101))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x1112 1)))))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (+ 2 x2042)))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x3414 1)))))
(assert (=> (= (x1211 x1919 1) (x1211 x4610 1)) (= x1919 x4610)))
(assert (x4237 x4887 x5796))
(assert (x4630 x5694))
(assert (x251 x5827 x2168 x4214 x1894))
(assert (x4630 x820))
(assert (= x3283 (=> (and (= x5809 (x6031 (+ 36 x6011))) (= x5260 (x3910 x4063)) (= x3658 (x6031 (+ 4 x6011))) (= x1694 (= x5260 0))) (and (=> x1694 x3198) (=> (and (not x1694) (= (> x451 0) x5731) (or (and (= x5251 x1932) (= (x1302 x4063) x5649) (= x3092 x5349) (= x6017 (= (x1083 x4063) x5649)) (< x11 4294967296) (= (x1302 274184521717934524641157099916833587231) x5369) (= x2382 x3244) (= x81 x2615) x5770 (= x5770 (>= (x1083 274184521717934524641157099916833587231) x5369)) x5731 x6017) (and (= x4558 x81) (= x3244 x876) (not x5731) (= x2413 x5251) (= x5349 x833)))) x964)))))
(assert (not (= (+ x3962 2) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x3836 1) 10000) (not (= (+ 3 x3962) x3836))))
(assert (not (= 117300739 (+ 2 x4054))))
(assert (=> (> (+ 10000 1) x3511) (not (= (x1211 x3576 1) x3511))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x902 1)))))
(assert (not (= (x1211 x361 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x1112 1)))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x3543 1)))))
(assert (= x4262 (or (and x4321 x2248) (and x5343 x5176))))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x1919 1) x946))))
(assert (not (= (x1211 x5500 1) 4294967296)))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (+ 3 x1186)))))
(assert (not (= (x1211 x5745 1) (x1211 x4218 2))))
(assert (= (and (not x4321) x2248) x3722))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x3414 1)))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x3645 1)))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x4017 1))))
(assert (not (= (+ x2042 3) 117300739)))
(assert (not (= 2835717307 (+ 4 x3962))))
(assert (not (= (x1211 x4800 1) (x1211 x310 2))))
(assert (x4630 x1545))
(assert (=> (< (- x3255 1) 10000) (not (= (x1211 x4017 1) x3255))))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x4527 1)))))
(assert (=> (< (- x310 1) 10000) (not (= x310 (+ x2042 3)))))
(assert (x5138 x704 x5777))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x1852 1) x1089))))
(assert (x4630 x2911))
(assert (x4630 x5150))
(assert (not (= (x1211 x1956 1) 3)))
(assert (not (= (x1211 x4800 1) (+ 4 x1186))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (x1211 x935 1)))))
(assert (x6051 x3662))
(assert (x4630 x205))
(assert (not (= (x1211 x3836 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x4630 x1067))
(assert (x4630 x3755))
(assert (= (and x1026 (not x4334)) x2803))
(assert (not (= (x1211 x1112 1) (+ x3962 4))))
(assert (not (= (+ 1 x2042) (x1211 x946 1))))
(assert (x4630 x1438))
(assert (not (= (+ x4054 2) (+ x98 3))))
(assert (x4630 x4035))
(assert (x4630 x5165))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x4218 2)))))
(assert (= x5513 (and x573 (not x3534))))
(assert (not (= (x1211 x5421 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x4630 x948))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ x4054 2))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x4284 1))))
(assert (=> (< (- x4610 1) 10000) (not (= (+ 4 x3962) x4610))))
(assert (= (=> (= x2080 (= x2154 274184521717934524641157099916833587206)) (and (=> (and (<= x2472 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2567 4) (= 1 x4361) (> x382 0) x2080 (not (= 157198259 x1139)) (< x1139 826074471) (>= x2472 0) (not (> 4 x2567)) (not (= 117300739 x1139)) (= 404098525 x1139) (= (x3910 274184521717934524641157099916833587206) x382) (= x1612 32) (= x671 x2567) (= x787 10894474682274239493831243662817379401261526446360622092269559273883068006400)) x1996) (=> (not x2080) x5883))) x2807))
(assert (=> (= (x1211 x2060 1) (x1211 x5421 1)) (= x2060 x5421)))
(assert (x4630 x5396))
(assert (not (= 2835717307 (+ 2 x2042))))
(assert (not (= (+ 5 x3962) (+ 2 x3457))))
(assert (x4630 x4071))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x4198 1))))
(assert (x4630 x5358))
(assert (not (= (+ 4 x2042) 2)))
(assert (=> (= (x1211 x928 1) (x1211 x4198 1)) (= x928 x4198)))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x3576 1) x3543))))
(assert (=> (< (- x310 1) 10000) (not (= x310 (+ 4 x3962)))))
(assert (not (= (+ 2 x2042) (+ x3962 4))))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x3576 1) x3513))))
(assert (=> (< (- x3576 1) 10000) (not (= (+ x1186 1) x3576))))
(assert (x4630 x3188))
(assert (=> (> (+ 10000 1) x4063) (not (= (+ 3 x1186) x4063))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (+ x1186 3)))))
(assert (x6051 x5859))
(assert (= x2884 (and (not x1409) x2183)))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x2862 1))))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x4800 1) x1089))))
(assert (x4630 x3975))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (=> (and (= x4546 x1451) (= (or (and (< x5607 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5607))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5607)) x4419) (= x4125 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= x2078 826074471)) (= x658 36) (= x690 x658) (= (x3337 (- x658 4)) x5607) (= x5422 (x3910 274184521717934524641157099916833587206)) (not (> 4 x658)) (= 1889567281 x2078) (< 0 x5422) (not (> 826074471 x2078))) (and (=> x4419 x700) (=> (not x4419) x2339))) x5269))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x310 2))))
(assert (x4630 x5798))
(assert (not (= (+ 4 x2042) (x1211 x3755 1))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x406 1) x3543))))
(assert (= (=> (= x3101 (= 0 x1657)) (and (=> (and (= x2413 x3161) (= x1060 x833) (= x546 x876) x3101 (= x4835 x4558) (= x659 0) (= 0 x233) (= x1708 x2934)) x4067) (=> (not x3101) x2707))) x2008))
(assert (=> (< (- x1303 1) 10000) (not (= (x1211 x1956 1) x1303))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x3836 1)))))
(assert (=> (= (x1211 x5421 1) (x1211 x2862 1)) (= x2862 x5421)))
(assert (not (= (x1211 x1849 1) (+ x2042 5))))
(assert (x4630 x1507))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x5917 1) x2845))))
(assert (=> (= (x1211 x4799 1) (x1211 x928 1)) (= x4799 x928)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x3836 1))))
(assert (= x2142 (=> (and (= (< (x1082 274184521717934524641157099916833587231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1047) x1047 (= x2778 (x3798 x4554)) (= x666 x4050) (= x1862 x3506)) x363)))
(assert (=> (< (- x4198 1) 10000) (not (= (+ x3962 1) x4198))))
(assert (not (= (+ x2042 3) (x1211 x6069 1))))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (+ 3 x98)))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (+ x3962 2)))))
(assert (x4630 x4546))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x928 1) x1598))))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x4293 1)))))
(assert (= x3794 (and x2068 (not x2486))))
(assert (x4630 x3432))
(assert (= (x1331 x99) 0))
(assert (x4630 x5555))
(assert (not (= (x1211 x310 2) (x1211 x4799 1))))
(assert (=> (< (- x5745 1) 10000) (not (= (x1211 x4284 1) x5745))))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x3992 2) x1089))))
(assert (not (= 4294967296 (x1211 x361 1))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (+ 1 x3948)))))
(assert (x4630 x5784))
(assert (x4630 x4917))
(assert (not (= (+ x4054 2) (x1211 x1852 1))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x1451 1)))))
(assert (not (= 4294967296 (+ x1186 4))))
(assert (not (= 274184521717934524641157099916833587206 (x406 1))))
(assert (x4630 x5065))
(assert (x4630 x5147))
(assert (x6051 x5133))
(assert (not (= (+ x3962 2) (x1211 x4800 1))))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x4800 1) x1598))))
(assert (not (= 2835717307 (x1211 x3409 1))))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x928 1) x740))))
(assert (not (= (x1211 x361 1) (+ 3 x98))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x1852 1)))))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x361 1) x182))))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x928 1) x3979))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (+ 2 x4054)))))
(assert (not (= (+ 3 x2042) 4294967296)))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x3755 1)))))
(assert (x4630 x6167))
(assert (= x2757 (=> (and (= (or (> x1003 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1003) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1003) true))) x1770) (= (x6031 (+ x1855 x5052)) x1875) (= (x6031 (+ x1003 31)) x4178) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4178) x1855)) (and (=> (not x1770) x3870) (=> x1770 x5361)))))
(assert (= (=> (and (= (ite (not x874) 1 0) x4538) (= x2569 (x3086 x1381)) (= (ite (< x723 x2569) 1 0) x344) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035)) x723) (= x874 (= x5035 0)) (= x3467 (x5347 x4538 x344)) (= (= x3467 0) x1922)) (and (=> x1922 x5562) (=> (not x1922) x3198))) x5307))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x5745 1)))))
(assert (x4630 x2615))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x5745 1)))))
(assert (= (=> (and (= x3621 (x1493 x2218)) (= (x1701 x3094) x5461) (= x2533 (> x3410 0)) (= x3410 (x4455 x5461))) (and (=> x2533 x5687) (=> (not x2533) x5361))) x6040))
(assert (= x4276 true))
(assert (=> (> (+ 10000 1) x310) (not (= (+ x4054 2) x310))))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x182 1)))))
(assert (= x1116 (and x3856 (not x3364))))
(assert (not (= 404098525 (x1211 x5745 1))))
(assert (not (= 157198259 (+ 1 x2042))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x3992))))
(assert (=> (> (+ 10000 1) x5745) (not (= (+ x2042 5) x5745))))
(assert (x6051 x3741))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 x3755 1)))))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (x1211 x5917 1)))))
(assert (=> (= (x1211 x928 1) (x1211 x3513 1)) (= x928 x3513)))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (+ 3 x3962)))))
(assert (x4630 x811))
(assert (not (= (x1211 x946 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (and x3406 x2365) x1363))
(assert (not (= 1000000000000000000 (x1211 x4800 1))))
(assert (not (= 2835717307 (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x5917) (not (= (+ 3 x98) x5917))))
(assert (not (= (x1211 x1852 1) 3939881817)))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (+ x5409 1)))))
(assert (not (= (+ 1 x1186) (x1211 x208 1))))
(assert (not (= 2743638299 (+ x3948 1))))
(assert (not (= (+ 4 x1186) 3939881817)))
(assert (=> (> (+ 10000 1) x2862) (not (= (+ 2 x3962) x2862))))
(assert (x4630 x4660))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x3513 1)))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x4090 3)))))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x740 2) x3543))))
(assert (= x1019 (=> (and (= (x2995 x3768) x3941) (= (< 0 x3941) x3689)) (and (=> x3689 x3550) (=> (not x3689) x5361)))))
(assert (not (= (+ x3457 2) (x1211 x4218 2))))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 x3513 1) x3786))))
(assert (x263 x4703 x1588))
(assert (not (= 4294967296 (+ 2 x4054))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (+ x3962 3)))))
(assert (not (= 3 (x1211 x208 1))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x361 1) x3992))))
(assert (= x479 (=> (and (= (x1701 x3094) x1888) (= (x1701 x3094) x2141) (= (x4455 x2141) x1896) (= x5324 (x4455 x1888)) (= x619 (= x5324 x1896))) (and (=> (not x619) x5361) (=> x619 x4280)))))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x4293 1)))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x1919 1) x3543))))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x946 1) x1467))))
(assert (= (x4115 x5054) (ite (and x1841 x708 (not x5449)) (x2363 x5054) (x4892 x5054))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (+ 1 x5409)))))
(assert (not (= 117300739 (x406 1))))
(assert (x4630 x4201))
(assert (x4630 x4023))
(assert (= 0 (x4192 x4972)))
(assert (not (= (+ x4054 2) (+ 1 x2042))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x4799 1) x935))))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x902) (not (= (+ 4 x3962) x902))))
(assert (x4630 x2392))
(assert (= x4832 (and x3492 x5372)))
(assert (x6051 x37))
(assert (x4630 x1670))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ 2 x4054))))
(assert (= (=> (and (= (x880 x5869) x4745) (= x5903 (< 0 x1368))) (and (=> x5903 x4135) (=> (and (not x5903) (= x1778 1)) x252))) x4269))
(assert (=> (= (x1211 x902 1) (x1211 x3543 1)) (= x902 x3543)))
(assert (not (= 4168891048 (x1211 x5421 1))))
(assert (not (= (x1211 x3513 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (=> (and (= x3664 x1256) (= x4590 x2188)) x2242) x5947))
(assert (not (= (x1211 x310 2) (+ x98 4))))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x3414 1) x4017))))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x4800 1) x3511))))
(assert (not (= 3 (+ x3962 4))))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x361 1) x1219))))
(assert (x4630 x74))
(assert (not (= (+ 2 x3457) (x1211 x1112 1))))
(assert (not (= (x1211 x4610 1) (+ 2 x4054))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x6069 1)))))
(assert (not (= (+ x3962 1) (+ 2 x3457))))
(assert (x4630 x5661))
(assert (not (= (x1211 x5745 1) (+ x3962 1))))
(assert (=> (< (- x902 1) 10000) (not (= (+ 1 x3948) x902))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (+ 4 x98)))))
(assert (x4630 x3350))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (+ 2 x3962)))))
(assert (not (= (+ x3962 1) (x1211 x935 1))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x4527 1)))))
(assert (x4630 x3081))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (+ 1 x3948)))))
(assert (= x3262 (=> (and (= x2212 0) (= x379 x3946)) x4570)))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x4090 3)))))
(assert (not (= (+ x4054 2) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x4630 x2259))
(assert (= x442 (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x668) x3166) (= x5634 (= 0 x3233)) (= x3233 (x3910 x3166)) (= (x214 x2686) x668)) (and (=> x5634 x5361) (=> (and (or (and (= 1 x1972) x2048 (> 4294967296 x6145)) (and (= x4245 x1972) (not x2048))) (not x5634) (= (> x4245 0) x2048)) x2364)))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 3939881817)))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (+ 3 x2042)))))
(assert (x4630 x882))
(assert (not (= (x1211 x5917 1) (x1211 x3148 3))))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (+ 4 x2042)))))
(assert (x4630 x5129))
(assert (not (= (x1211 x946 1) (+ 3 x2042))))
(assert (= (x1044 x5949 1) (- (/ x5949 2) (uninterp_frac x5949 2))))
(assert (x4630 x6068))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x2060 1))))
(assert (=> (= (x1211 x5917 1) (x1211 x4800 1)) (= x4800 x5917)))
(assert (= (and x5625 x5299) x35))
(assert (x4630 x83))
(assert (x4630 x301))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x3645 1)))))
(assert (=> (= (x1211 x4799 1) (x1211 x5421 1)) (= x4799 x5421)))
(assert (not (= 18446744073709551615 (+ 1 x3962))))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 x946 1) x1338))))
(assert (x399 x361))
(assert (x4630 x331))
(assert (x4237 x5949 x4392))
(assert (not (= (x1211 x1956 1) (+ 5 x2042))))
(assert (x4630 x3111))
(assert (x4630 x1000))
(assert (=> (> (+ 10000 1) x4218) (not (= (+ x4054 2) x4218))))
(assert (not (= (+ 2 x4054) (x1211 x3836 1))))
(assert (x4630 x3996))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x6069 1))))
(assert (= x3560 (and x5440 (not x4996))))
(assert (not (= (x1211 x182 1) (x1211 x4090 3))))
(assert (=> (< (- x361 1) 10000) (not (= (+ 1 x5409) x361))))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x4527 1) x4107))))
(assert (x4630 x3813))
(assert (not (= (x1211 x4090 3) (x1211 x3836 1))))
(assert (not (= (x1211 x1849 1) 2514000705)))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (x1211 x902 1)))))
(assert (=> (< (- x1849 1) 10000) (not (= (x1211 x1112 1) x1849))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x98 3))))
(assert (x549 x132))
(assert (not (= (x1211 x4610 1) (x1211 x740 2))))
(assert (x4630 x4028))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 x740 2)))))
(assert (x399 x1451))
(assert (not (= (x1211 x902 1) (+ x2042 2))))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x3576 1) x3576))))
(assert (= (ite (and (not x5449) x1841 x708) (x2826 x1412) (x3247 x1412)) (x3167 x1412)))
(assert (not (= (+ 1 x3962) (+ x98 3))))
(assert (x4630 x4433))
(assert (=> (= (x1211 x182 1) (x1211 x3645 1)) (= x182 x3645)))
(assert (= x2824 (=> (and (= x881 (x2851 x4044)) (= x3002 (ite (= x881 0) (= 0 x881) (= 0 x6004)))) (and (=> (not x3002) x4594) (=> (and x3002 (= 0 x2423)) x2321)))))
(assert (not (= (x1211 x1956 1) (+ x2042 3))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x4198 1))))
(assert (x6051 x3921))
(assert (=> (> (+ 10000 1) x740) (not (= (+ x2042 5) x740))))
(assert (x4630 x3768))
(assert (not (= (x1211 x310 2) 157198259)))
(assert (not (= 2 (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (+ x2042 3)))))
(assert (= (and x1825 (not x5991)) x3474))
(assert (=> (= (x1211 x1451 1) (x1211 x4293 1)) (= x4293 x1451)))
(assert (not (= (+ x98 3) (x1211 x4293 1))))
(assert (=> (= (x1211 x4610 1) (x1211 x2862 1)) (= x2862 x4610)))
(assert (= x79 (=> (= x304 (= 0 x1648)) (and (=> (not x304) x614) (=> x304 x3198)))))
(assert (= (and x171 (not x3865)) x1422))
(assert (x4630 x1479))
(assert (= x487 (or x4534 (and (not x5236) x737))))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (x1211 x4527 1)))))
(assert (=> (> (+ 10000 1) x4400) (not (= (x1211 x5500 1) x4400))))
(assert (=> (> (+ 10000 1) x5421) (not (= (x1211 x1956 1) x5421))))
(assert (not (= (+ x2042 5) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (+ 1 x1186)))))
(assert (not (= (+ 1 x3962) (x1211 x6069 1))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x1112 1))))
(assert (= x1062 (=> (= x788 (= x1338 274184521717934524641157099916833587202)) (and (=> (and (= x2035 4) (not (< x2035 4)) (= x1261 10894474682274239493831243662817379401261526446360622092269559273883068006400) (< x993 826074471) (= 404098525 x993) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1774) (= 32 x2323) (= 1 x5239) (= (x3910 274184521717934524641157099916833587202) x3251) (> x3251 0) x788 (not (= 117300739 x993)) (= x3481 x2035) (>= x1774 0) (not (= x993 157198259))) x17) (=> (not x788) x313)))))
(assert (=> (< (- x310 1) 10000) (not (= (+ x3962 1) x310))))
(assert (= x4547 (=> (and (= x1490 (or (and (= true (<= x3567 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3567 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3567))) (= (x6031 (+ x76 x3942)) x246) (= x76 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3026)) (= (x6031 (+ x3567 31)) x3026)) (and (=> x1490 x5361) (=> (not x1490) x3332)))))
(assert (=> (< (- x1089 1) 10000) (not (= (+ 4 x1186) x1089))))
(assert (not (= (+ 3 x1186) (x1211 x1849 1))))
(assert (=> (< (- x208 1) 10000) (not (= (x1211 x6069 1) x208))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x928 1)))))
(assert (x4630 x2765))
(assert (= (and x2745 (not x2137)) x2564))
(assert (x4630 x1362))
(assert (= (or (and x4062 x3627) (and x5901 x1611) (and x2395 x4277) (and x2370 x3426) (and x5288 (not x2244)) (and x2219 x4460)) x5724))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x4293 1) x2696))))
(assert (x4630 x4637))
(assert (= (and x3016 x2785) x2348))
(assert (not (= 274184521717934524641157099916833587206 (+ x1186 4))))
(assert (= (ite (= x1942 x523) x1408 (x974 x1942)) (x128 x1942)))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x2862 1) x3979))))
(assert (=> (= (x1211 x4017 1) (x1211 x6069 1)) (= x6069 x4017)))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 x4017 1) x2696))))
(assert (not (= (x1211 x4218 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x5421 1)))))
(assert (x4630 x1794))
(assert (= x4535 (=> (and (= x4648 (x3129 x2595)) (= x1071 (x5347 1461501637330902918203684832716283019655932542975 x4648)) (= (x6031 (+ 32 x3928)) x1818) (= (x3910 x1775) x1158) (= (x5347 1461501637330902918203684832716283019655932542975 x318) x1775) (= (x352 x1818) x5061) (= (x6031 (+ x3942 4)) x2723) (= (x5317 x947) x318) (= x4026 (x3337 (- x2245 x3942))) (= x2245 (x6031 (+ x3942 36))) (= x3634 (= 0 x1158)) (= (x6031 (+ 64 x5061)) x947)) (and (=> (not x3634) x368) (=> x3634 x5361)))))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x4527 1) x1248))))
(assert (= (ite (and (not x3708) x2869 x3512) (x4225 x3118) (ite (and (not x3512) x2869 (not x5704) (not x3708)) (x759 x3118) (x6158 x3118))) (x1893 x3118)))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x1852 1) x3699))))
(assert (=> (> (+ 10000 1) x2862) (not (= (+ 2 x2042) x2862))))
(assert (not (= (x1211 x1849 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (not (= (x1211 x4198 1) 274184521717934524641157099916833587202)))
(assert (=> (= (x1211 x1919 1) (x1211 x3755 1)) (= x1919 x3755)))
(assert (not (= 274184521717934524641157099916833587202 (+ 1 x1186))))
(assert (not (= (+ 3 x2042) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= (x1211 x4218 2) 1000000000000000000)))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (+ x3962 1)))))
(assert (x4630 x2496))
(assert (x4630 x1830))
(assert (not (= (+ x3962 1) 2743638299)))
(assert (not (= (x1211 x3755 1) (+ 2 x4054))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x361 1))))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x4527 1) x2154))))
(assert (not (= (x1211 x3148 3) (x1211 x1451 1))))
(assert (=> (< (- x902 1) 10000) (not (= x902 (+ x3457 2)))))
(assert (= x4084 (and (not x4589) x97)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x4198 1))))
(assert (=> (= (x1211 x5745 1) (x1211 x2862 1)) (= x2862 x5745)))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x1849 1) x4198))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x1956 1) x4090))))
(assert (x4630 x2243))
(assert (= (=> (and (= (= 0 x458) x38) (= (x5347 x2793 x1244) x5721) (= x5180 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458))) (= (ite (> 1000000000000000000 x5180) 1 0) x1244) (= x2793 (ite (not x38) 1 0)) (= x1631 (= x5721 0))) (and (=> x1631 x6116) (=> (not x1631) x3198))) x854))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x5500 1) x3575))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (+ x3962 3)))))
(assert (= (and x5553 (not x5408)) x1825))
(assert (not (= (x1211 x3755 1) 1000000000000000000)))
(assert (= (x6007 x3099) 0))
(assert (= x2039 (and x4783 x5108)))
(assert (=> (> (+ 10000 1) x4800) (not (= (+ 4 x1186) x4800))))
(assert (not (= (+ 2 x3962) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (= x3248 (=> (and (= x1834 (> x4738 0)) (= x3733 (uninterp_mod (* x4232 x4061) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x1834) x5361) (=> x1834 x4746)))))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (+ 2 x3457)))))
(assert (x4630 x219))
(assert (not (= (+ x98 3) 826074471)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x1451 1))))
(assert (not (= 826074471 (x1211 x182 1))))
(assert (x4630 x4056))
(assert (not (= (x1211 x4090 3) (x1211 x361 1))))
(assert (x399 x1248))
(assert (not (= (+ 5 x2042) (x1211 x902 1))))
(assert (= (and x5012 (not x3616)) x769))
(assert (x4630 x3468))
(assert (=> (= (x1211 x4610 1) (x1211 x208 1)) (= x208 x4610)))
(assert (=> (= (x1211 x1919 1) (x1211 x6069 1)) (= x6069 x1919)))
(assert (not (= 1000000000000000000 (x1211 x3409 1))))
(assert (not (= (x1211 x5745 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (= (x1211 x4293 1) (x1211 x3576 1)) (= x3576 x4293)))
(assert (x4630 x5771))
(assert (x4630 x5938))
(assert (x263 x4566 x5378))
(assert (x4630 x4515))
(assert (=> (> (+ 10000 1) x3166) (not (= (x1211 x4610 1) x3166))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x902 1))))
(assert (not (= 2743638299 (+ 4 x2042))))
(assert (=> (> (+ 10000 1) x3740) (not (= (+ x2042 4) x3740))))
(assert (not (= (x1211 x3755 1) (+ 3 x3962))))
(assert (=> (< (- x1451 1) 10000) (not (= (+ 2 x3962) x1451))))
(assert (x4630 x5629))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x3645 1) x2154))))
(assert (not (= (+ 1 x3948) (x1211 x1451 1))))
(assert (not (= (x1211 x1919 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x6051 x344))
(assert (= (and x3218 x2217) x1349))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x1849 1) x1219))))
(assert (=> (< (- x2845 1) 10000) (not (= (x1211 x935 1) x2845))))
(assert (not (= (x1211 x5745 1) (+ x98 1))))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 x4090 3) x2696))))
(assert (not (= 2514000705 (x1211 x4218 2))))
(assert (not (= (+ x3948 1) (x1211 x4017 1))))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x3645 1)))))
(assert (not (= (x1211 x4610 1) 1889567281)))
(assert (=> (> (+ 10000 1) x946) (not (= (x1211 x4800 1) x946))))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x946 1)))))
(assert (x4630 x876))
(assert (x4630 x4931))
(assert (not (= (+ 3 x2042) (x1211 x4284 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x4090 3))))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x3755 1)))))
(assert (not (= (+ x2042 4) (x1211 x3645 1))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ 4 x98))))
(assert (x4630 x105))
(assert (=> (< (- x4090 1) 10000) (not (= (x1211 x935 1) x4090))))
(assert (=> (< (- x4554 1) 10000) (not (= (+ x3962 1) x4554))))
(assert (= (and x57 x3050) x2613))
(assert (not (= (+ 4 x1186) (+ x2042 2))))
(assert (= x343 (=> (= x2289 (< 0 x2529)) (and (=> (not x2289) x5361) (=> x2289 x6058)))))
(assert (x4630 x2589))
(assert (=> (> (+ 10000 1) x2060) (not (= (x1211 x928 1) x2060))))
(assert (not (= (x1211 x1451 1) 274184521717934524641157099916833587202)))
(assert (=> (= (x1211 x3543 1) (x1211 274184521717934524641157099916833587231 1)) (= x3543 274184521717934524641157099916833587231)))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x4017 1) x1089))))
(assert (x4630 x689))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x3543 1)))))
(assert (x5138 x3849 x4473))
(assert (x4630 x5642))
(assert (x4630 x1540))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x361 1)))))
(assert (= x3225 (and x2493 x1320)))
(assert (=> (= (x1211 x4800 1) (x1211 x5500 1)) (= x4800 x5500)))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x1451 1) x4527))))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (+ x2042 5)))))
(assert (not (= (+ x1186 1) (x406 1))))
(assert (not (= (+ x3948 1) (x1211 x4799 1))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x3645 1) x740))))
(assert (x4630 x3455))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x3148 3)))))
(assert (x4630 x3039))
(assert (x4630 x1533))
(assert (x4630 x395))
(assert (not (= 1000000000000000000 (x1211 x3992 2))))
(assert (x4630 x96))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (+ 4 x1186)))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x1211 x740 2)))))
(assert (x4630 x2604))
(assert (x4630 x1054))
(assert (not (= 4168891048 (+ 1 x5409))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x4610 1)))))
(assert (x4630 x1368))
(assert (not (= (+ 1 x5409) (+ x2042 1))))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x3576 1) x4702))))
(assert (not (= 2 (x1211 x2862 1))))
(assert (not (= (x1211 x2060 1) (+ x3962 3))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x406 1)))))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x5745 1) x1956))))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x4017 1) x1219))))
(assert (x399 x952))
(assert (x4630 x5534))
(assert (=> (> (+ 10000 1) x693) (not (= (x1211 x740 2) x693))))
(assert (= (and x4378 (not x4516)) x637))
(assert (not (= (x1211 x1451 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x1211 x2060 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x5138 x328 x1076))
(assert (not (= (x1211 x1852 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x1211 x3992 2) (x1211 x1919 1))))
(assert (x4630 x1651))
(assert (not (= (x1211 x5421 1) 1000000000000000000)))
(assert (= (ite (= x1607 x5174) x5733 (x2241 x1607)) (x2734 x1607)))
(assert (= (x124 x2992) (ite (= x4112 x2992) x2796 (x4002 x2992))))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (+ 1 x1186)))))
(assert (not (= (x1211 x5745 1) 1)))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x3836 1) x1338))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (+ 4 x2042)))))
(assert (= (and x1465 x2562) x5924))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x5421 1)))))
(assert (not (= (x1211 x3576 1) 3939881817)))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x1112 1)))))
(assert (not (= (x1211 x740 2) (x1211 x2862 1))))
(assert (not (= (x1211 x3576 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x4017) (not (= (+ 3 x1186) x4017))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (x1211 x5917 1)))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (+ 4 x1186)))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x902 1) x1248))))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x2862 1)))))
(assert (not (= 2514000705 (+ x2042 5))))
(assert (= (=> (and (= x4198 x4448) (= x4119 (= x984 x4198))) (and (=> (not x4119) x2751) (=> (and (<= 0 x3160) (= x2188 1) (<= x3160 115792089237316195423570985008687907853269984665640564039457584007913129639935) x4119 (= x3160 (x5768 x5416)) (= x5416 (x1211 x4198 1)) (= x3664 32)) x5947))) x5223))
(assert (not (= (x1211 x1919 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4630 x532))
(assert (=> (< (- x4702 1) 10000) (not (= (x1211 x1849 1) x4702))))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x4527 1)))))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x4017 1)))))
(assert (= (and x4299 x1329) x3480))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x4017 1)))))
(assert (x4630 x1136))
(assert (not (= (x1211 x1852 1) (+ 1 x5409))))
(assert (= (=> (and (= x5202 (x5432 128)) (= (ite (= 0 x5202) (= x5202 0) (= 0 x2320)) x3347)) (and (=> (not x3347) x6129) (=> (and x3347 (= x5246 x1853)) x4157))) x1278))
(assert (= x1805 (=> (and (= (x6031 (+ 32 x2958)) x5688) (= x1129 (x5347 1461501637330902918203684832716283019655932542975 x3619)) (= x3619 (x5601 x5688)) (= (x3910 x3230) x5972) (= (= 0 x5972) x1958) (= x1203 (x6031 (+ 4 x5082)))) (and (=> (and (or (and (= 1 x1216) x238 (> 4294967296 x2288)) (and (= x1216 x5272) (not x238))) (not x1958) (= (< 0 x5272) x238)) x596) (=> x1958 x3198)))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x4527 1) x4090))))
(assert (not (= (x1211 x3992 2) (x1211 x5500 1))))
(assert (= (=> (and (= x4365 x541) (= x388 x2156)) x1486) x4852))
(assert (x4630 x4722))
(assert (=> (> (+ 10000 1) x902) (not (= (x1211 x6069 1) x902))))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x1598))))
(assert (not (= (x1211 x6069 1) (+ x1186 3))))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x3543 1) x2820))))
(assert (= (x5810 x5197) 0))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x4610 1)))))
(assert (not (= (+ x3962 4) 274184521717934524641157099916833587202)))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (x1211 x182 1)))))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x5500 1)))))
(assert (not (= (+ x5409 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x5917 1)))))
(assert (x4630 x364))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (+ 3 x2042)))))
(assert (x4630 x2452))
(assert (x4630 x5989))
(assert (not (= (x1211 x4800 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= x3423 (=> (and (= x816 (x3551 x1629)) (= (> x816 0) x1791)) (and (=> x1791 x2978) (=> (not x1791) x5361)))))
(assert (not (= (+ 1 x5409) (x1211 x1451 1))))
(assert (not (= (+ x3457 2) (x1211 x4198 1))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x5917 1)))))
(assert (= (x1448 x4711) 0))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x3543 1)))))
(assert (not (= (+ x2042 4) (x1211 x1849 1))))
(assert (x4630 x3159))
(assert (x4630 x2025))
(assert (= 0 (x861 x2136)))
(assert (= (and (not x4829) x2345) x2305))
(assert (=> (= (x1211 x946 1) (x1211 x4293 1)) (= x4293 x946)))
(assert (=> (= (x1211 x3543 1) (x1211 x5745 1)) (= x5745 x3543)))
(assert (not (= (x1211 x1956 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x3513 1)))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x4293 1))))
(assert (=> (> (+ 10000 1) x2758) (not (= (+ 3 x2042) x2758))))
(assert (not (= (x1211 x1849 1) (x1211 x740 2))))
(assert (not (= (x1211 x1956 1) 2514000705)))
(assert (x4630 x460))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (+ 5 x2042)))))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x310 2) x1303))))
(assert (x4630 x5413))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x6069 1)))))
(assert (=> (< (- x1849 1) 10000) (not (= (x1211 x4198 1) x1849))))
(assert (=> (= (x1211 x902 1) (x1211 x5500 1)) (= x902 x5500)))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x740 2) x2820))))
(assert (= (=> (and (= (x6031 (+ x5814 x1092)) x6167) (= x5521 (< x6167 x1092))) (and (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x1126) x3414) (= 1 x3743) (not x5521) (= x3769 x806) (= x3675 (x1211 x3414 1)) (= x5478 32)) x3780) (=> x5521 x4655))) x1001))
(assert (not (= 404098525 (x1211 x3543 1))))
(assert (x4630 x5453))
(assert (x263 x5167 x5377))
(assert (=> (= (x1211 x4610 1) (x1211 274184521717934524641157099916833587231 1)) (= 274184521717934524641157099916833587231 x4610)))
(assert (not (= 274184521717934524641157099916833587206 (+ x1186 3))))
(assert (=> (< (- x2060 1) 10000) (not (= (x1211 x4293 1) x2060))))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x3645 1) x1956))))
(assert (not (= 3939881817 (x1211 x4527 1))))
(assert (not (= 18446744073709551615 (x1211 x3755 1))))
(assert (not (= (+ x4054 2) (x1211 x3414 1))))
(assert (not (= (x1211 x5917 1) 2835717307)))
(assert (not (= (x1211 x1451 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (+ x4054 2) (+ x1186 1))))
(assert (not (= (x1211 x740 2) (x1211 x3513 1))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x361 1)))))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x3409 1) x1849))))
(assert (not (= 2 (x1211 x3755 1))))
(assert (= x625 (and (not x1620) x4164)))
(assert (=> (> (+ 10000 1) x4400) (not (= (x1211 x3992 2) x4400))))
(assert (x4630 x5084))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (+ x3948 1)))))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x4090 3)))))
(assert (x4630 x5250))
(assert (not (= (x1211 x3414 1) (x1211 x3148 3))))
(assert (= x2772 (or (and x4593 x746) x3585)))
(assert (x4630 x949))
(assert (x4630 x1510))
(assert (= 0 (x5810 x2577)))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x4218 2)))))
(assert (x4630 x3498))
(assert (x251 x1053 x2520 x3594 x3764))
(assert (=> (< (- x3148 1) 10000) (not (= (+ 3 x98) x3148))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x3576 1)))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x3409 1)))))
(assert (not (= 1 (+ 3 x1186))))
(assert (x4630 x1814))
(assert (=> (> (+ 10000 1) x5421) (not (= (x1211 x361 1) x5421))))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x6069 1)))))
(assert (not (= (+ x1186 3) (x1211 x3645 1))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x3645 1)))))
(assert (x4630 x1094))
(assert (x4630 x456))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x5745 1)))))
(assert (=> (> (+ 10000 1) x1775) (not (= (+ x2042 3) x1775))))
(assert (= x892 (or (and x273 x3887) (and x3070 x5579))))
(assert (x6051 x2875))
(assert (=> (< (- x1598 1) 10000) (not (= (+ 3 x3962) x1598))))
(assert (not (= (+ x3962 5) (x1211 x4284 1))))
(assert (=> (< (- x1338 1) 10000) (not (= (+ x4054 2) x1338))))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x4293 1) x2154))))
(assert (=> (< (- x1303 1) 10000) (not (= x1303 (+ 4 x2042)))))
(assert (= (=> (and (= x2135 (< 0 x4887)) (= x2097 (x2866 x5263))) (and (=> (and (= 1 x2618) (not x2135)) x2541) (=> x2135 x507))) x4612))
(assert (not (= 157198259 (x1211 x3409 1))))
(assert (x4630 x5239))
(assert (not (= (+ x3962 2) 404098525)))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x4063))))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x3513 1) x928))))
(assert (x4630 x1354))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x5917 1)))))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x406 1)))))
(assert (not (= (x1211 x3414 1) 274184521717934524641157099916833587202)))
(assert (not (= (x1211 x740 2) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (ite (and x832 (not x4701) x912) (x3471 x13) (ite (and x912 (not x832) (not x1605) (not x4701)) (x4664 x13) (x432 x13))) (x1985 x13)))
(assert (x4630 x2266))
(assert (=> (< (- x952 1) 10000) (not (= x952 (+ 4 x98)))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ x1186 3))))
(assert (not (= (x1211 x5421 1) (+ x3962 4))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x1956 1))))
(assert (x399 x3457))
(assert (x4630 x5418))
(assert (=> (> (+ 10000 1) x3255) (not (= (+ 4 x3962) x3255))))
(assert (= x1726 (and (not x3587) x3344)))
(assert (=> (< (- x2845 1) 10000) (not (= (x1211 x1956 1) x2845))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x4799 1)))))
(assert (not (= (+ x2042 4) (x1211 x935 1))))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x3148 3) x5917))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (+ x1186 3)))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x4198 1)))))
(assert (not (= (+ 3 x1186) 117300739)))
(assert (x4630 x3575))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ 1 x3962))))
(assert (= x5743 (=> (and (= x5869 (x6031 (+ x2686 192))) (= (x880 x5869) x5706) (= x1250 (= x5706 0))) (and (=> (not x1250) x1913) (=> (and (= x1869 x2388) x1250) x685)))))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x740 2)))))
(assert (x4630 x1903))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (x1211 x5421 1)))))
(assert (=> (< (- x5617 1) 10000) (not (= (x1211 x2862 1) x5617))))
(assert (x4630 x5443))
(assert (= x3123 (and x3225 (not x3900))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x1451 1)))))
(assert (= 0 (x4571 x1513)))
(assert (= (=> (and (= x6014 (< x3018 x5780)) (= x3018 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1766)))) (and (=> x6014 x3198) (=> (and (= (uninterp_mod (* x5780 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x6097) (not x6014) (= x1682 x6097)) x3466))) x3656))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x740 2)))))
(assert (x5138 x1815 x3950))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (+ x2042 1)))))
(assert (x4630 x2435))
(assert (x5138 x2031 x2768))
(assert (not (= (x1211 x4198 1) (x1211 x740 2))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x2042 1))))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (x1211 x4284 1)))))
(assert (x4630 x1021))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ 1 x3962))))
(assert (not (= 3 (x1211 x3409 1))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x902 1))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x1451 1))))
(assert (x4630 x3161))
(assert (x4630 x5254))
(assert (x4630 x5406))
(assert (not (= (x1211 x4527 1) 3)))
(assert (not (= (x1211 x5421 1) 826074471)))
(assert (=> (= (x1211 x3755 1) (x1211 x3513 1)) (= x3755 x3513)))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x5421 1)))))
(assert (= (x2037 x4014) (ite (= x5210 x4014) x4710 (x2104 x4014))))
(assert (= (and (not x5479) x5024) x5713))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (+ 2 x3962)))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x4218 2)))))
(assert (x4630 x4909))
(assert (x4630 x1439))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x3513 1)))))
(assert (=> (< (- x2845 1) 10000) (not (= (+ 1 x5409) x2845))))
(assert (not (= (+ x3962 1) (+ x1186 3))))
(assert (not (= (+ 3 x1186) 404098525)))
(assert (=> (> (+ 10000 1) x1303) (not (= (+ x98 3) x1303))))
(assert (x4630 x5427))
(assert (not (= (x1211 x310 2) (x1211 x1852 1))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (+ x3962 4)))))
(assert (x4630 x5738))
(assert (x4630 x3462))
(assert (=> (< (- x4198 1) 10000) (not (= (x1211 x740 2) x4198))))
(assert (not (= (+ x3962 1) (x1211 x4284 1))))
(assert (=> (= (x1211 x3576 1) (x1211 x935 1)) (= x935 x3576)))
(assert (x4630 x2107))
(assert (=> (> (+ 10000 1) x3513) (not (= (+ x3962 5) x3513))))
(assert (=> (= (+ x98 4) (+ x2042 4)) (= x3992 x4218)))
(assert (=> (< (- x3148 1) 10000) (not (= (x1211 x935 1) x3148))))
(assert (not (= (+ x3457 2) 2835717307)))
(assert (x4630 x3389))
(assert (=> (= (x1211 x3543 1) (x1211 x208 1)) (= x3543 x208)))
(assert (x4630 x804))
(assert (not (= (x1211 x3543 1) 2835717307)))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (+ 4 x98)))))
(assert (=> (> (+ 10000 1) x2696) (not (= (+ 3 x3962) x2696))))
(assert (not (= (x1211 x740 2) 2)))
(assert (not (= (x1211 x4017 1) 404098525)))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x361 1) x3755))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= (+ 5 x2042) 2743638299)))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x1451 1) x3645))))
(assert (=> (> (+ 10000 1) x2417) (not (= (+ x3962 3) x2417))))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x1451 1)))))
(assert (not (= (x1211 x208 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x740 2) x4800))))
(assert (x4630 x5983))
(assert (=> (< (- x361 1) 10000) (not (= (+ 2 x2042) x361))))
(assert (not (= (+ 4 x2042) (x1211 x310 2))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x5745 1)))))
(assert (= x3198 (=> (= x3107 true) x1846)))
(assert (x251 x1690 x4040 x764 x719))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x3230) (not (= (+ 2 x3457) x3230))))
(assert (=> (> (+ 10000 1) x3511) (not (= (x1211 x1852 1) x3511))))
(assert (x4630 x5197))
(assert (x4630 x1272))
(assert (=> (> (+ 10000 1) x208) (not (= (+ x3962 5) x208))))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x4284 1) x4063))))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (x1211 x4527 1)))))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (+ 1 x1186)))))
(assert (not (= (x1211 x740 2) (x1211 x1919 1))))
(assert (=> (< (- x3699 1) 10000) (not (= (+ 2 x3962) x3699))))
(assert (not (= 1000000000000000000 (x1211 x3645 1))))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (+ x3962 5)))))
(assert (=> (> (+ 10000 1) x1849) (not (= (+ 2 x3962) x1849))))
(assert (x5138 x4708 x1733))
(assert (=> (= (x1211 x2862 1) (x1211 x1451 1)) (= x2862 x1451)))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x5421 1) x3543))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= (x1211 x2060 1) (+ 1 x3962))))
(assert (= (=> (and (= x6128 (< 0 x5413)) (= (- (/ x1962 x2618) (uninterp_frac x1962 x2618)) x1455) (= (x3725 x3823) x5413)) (and (=> (not x6128) x3198) (=> (and x6128 (= (x6031 (+ 32 x3823)) x3707) (= x2281 x2930)) x4525))) x5485))
(assert (=> (< (- x4527 1) 10000) (not (= (+ x2042 2) x4527))))
(assert (not (= (x1211 x3992 2) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (> (+ 10000 1) x83) (not (= (x1211 x3836 1) x83))))
(assert (x4630 x5263))
(assert (x4630 x5538))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (x1211 x1112 1)))))
(assert (= (and (not x6022) x4958) x3953))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x740 2) x2154))))
(assert (x4630 x2388))
(assert (=> (> (+ 10000 1) x4400) (not (= (x1211 x1849 1) x4400))))
(assert (=> (> (+ 10000 1) x6037) (not (= (+ x1186 4) x6037))))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (+ x3948 1)))))
(assert (x4630 x4879))
(assert (x4630 x1988))
(assert (not (= (x1211 x4090 3) (+ 4 x2042))))
(assert (=> (< (- x4610 1) 10000) (not (= (+ 4 x2042) x4610))))
(assert (= x3622 (=> (and (= x2649 x3497) (= x2022 x2452) (= x2299 x3766)) x961)))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x5500 1))))
(assert (x4630 x1657))
(assert (= (and x4963 x5965) x334))
(assert (= x2905 (=> (and (= x6072 (< 0 x463)) (= x2616 (uninterp_mod (* x2452 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x6072) x5361) (=> (and (= x378 (- (/ x2616 x463) (uninterp_frac x2616 x463))) (= x378 x3497) x6072) x3622)))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (+ x3962 2)))))
(assert (not (= (x1211 x5917 1) 4294967296)))
(assert (x4630 x3610))
(assert (x4630 x5444))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (+ 4 x2042)))))
(assert (x4630 x4656))
(assert (= x5374 (and (not x2458) x1536)))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x946 1)))))
(assert (= (and x3344 x3587) x97))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (x1211 x3543 1)))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x1956 1)))))
(assert (=> (< (- x5617 1) 10000) (not (= (x1211 x4610 1) x5617))))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x3836 1) x3979))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (+ 3 x1186)))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x4198 1)) (= x4198 274184521717934524641157099916833587231)))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x740 2) x1852))))
(assert (not (= (x1211 x3148 3) (x1211 x5500 1))))
(assert (not (= (x1211 x1451 1) 404098525)))
(assert (not (= (+ 1 x98) (+ 2 x3457))))
(assert (= (and x3679 (not x3280)) x1771))
(assert (not (= (+ 3 x3962) 274184521717934524641157099916833587202)))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x1451 1) x561))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x406 1)))))
(assert (= (and x294 (not x651)) x436))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ x98 1))))
(assert (=> (< (- x740 1) 10000) (not (= (x1211 x4017 1) x740))))
(assert (not (= (x1211 x740 2) (x1211 x3836 1))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x6069 1)))))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x3513 1) x5421))))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x935 1) x1467))))
(assert (not (= (x1211 x3513 1) (x1211 x3148 3))))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x1219))))
(assert (=> (> (+ 10000 1) x1956) (not (= (+ x1186 1) x1956))))
(assert (not (= (+ 3 x3962) (+ x3457 2))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x5917 1)))))
(assert (= (x4115 x3693) (ite (and x708 (not x5449) x1841) (x2363 x3693) (x4892 x3693))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x5500 1)))))
(assert (not (= (x1211 x946 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (= (x88 x5303) (ite (and x5731 x494 (not x1694)) (x2332 x5303) (x3247 x5303))))
(assert (not (= (x1211 x4198 1) (x406 1))))
(assert (not (= 2835717307 (x1211 x3836 1))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x6069 1))))
(assert (not (= (x1211 x935 1) (+ 1 x3948))))
(assert (not (= (+ x3948 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4630 x3927))
(assert (not (= (+ x3962 5) 1)))
(assert (not (= (x1211 x4800 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (= (or x2449 x3073) x732))
(assert (x4630 x229))
(assert (= x4623 (=> (and (= x5453 (uninterp_mod (* x5202 x5246) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x156 (> x2320 0))) (and (=> (not x156) x3198) (=> (and (= x5196 (- (/ x5453 x2320) (uninterp_frac x5453 x2320))) x156 (= x5196 x1853)) x4157)))))
(assert (x4630 x4773))
(assert (not (= (x1211 x1956 1) (+ 1 x98))))
(assert (not (= 117300739 (x1211 x1849 1))))
(assert (x4630 x492))
(assert (=> (< (- x935 1) 10000) (not (= (x406 1) x935))))
(assert (not (= (+ 4 x3962) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 404098525 (+ 1 x3948))))
(assert (not (= (+ x2042 3) (+ x2042 1))))
(assert (not (= (+ x1186 1) (x1211 x5500 1))))
(assert (=> (= (x1211 x208 1) (x1211 x4293 1)) (= x208 x4293)))
(assert (not (= 117300739 (x1211 x4284 1))))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x4198 1) x1775))))
(assert (x4630 x798))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x2060 1))))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x1919 1) x3771))))
(assert (x4630 x5577))
(assert (not (= (x1211 x1919 1) (+ x3948 1))))
(assert (x4630 x4244))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x3414 1)))))
(assert (x6051 x1263))
(assert (=> (> (+ 10000 1) x182) (not (= (x1211 x1852 1) x182))))
(assert (not (= (+ 2 x2042) (x1211 x5745 1))))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (+ 2 x3962)))))
(assert (= (and (not x4177) x5203) x4215))
(assert (= x5337 (=> (and (= x5427 (x5347 1461501637330902918203684832716283019655932542975 x3786)) (= (= x3786 x5427) x6151) (= (x1509 x1806) x3786)) (and (=> x6151 x5845) (=> (not x6151) x5361)))))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x406 1)))))
(assert (x4630 x3771))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (+ x98 4)))))
(assert (= (or (and x4405 x637) (and x906 x3487)) x2372))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (x1211 x310 2)))))
(assert (=> (= (x1211 x2862 1) (x1211 x1956 1)) (= x1956 x2862)))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (+ x2042 5)))))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (+ 5 x2042)))))
(assert (x4630 x3233))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x2060 1) x4527))))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x5745 1)))))
(assert (not (= (x1211 x3645 1) (x1211 x3148 3))))
(assert (not (= (x1211 x1919 1) (+ 4 x1186))))
(assert (x4630 x5117))
(assert (not (= (+ x98 3) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x4630 x3125))
(assert (=> (= (x1211 x182 1) (x1211 x361 1)) (= x182 x361)))
(assert (x4630 x5314))
(assert (not (= (x1211 x4800 1) (+ 1 x3948))))
(assert (not (= (x1211 x3755 1) (+ x98 3))))
(assert (x399 x5917))
(assert (= (x2015 x823) (ite x3820 (ite x206 (x2919 x823) (x5238 x823)) (ite x3716 (x2919 x823) (x2628 x823)))))
(assert (x4630 x3306))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x5421 1))))
(assert (= (x2102 x3005) 0))
(assert (=> (< (- x3255 1) 10000) (not (= (x1211 x1919 1) x3255))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x1852 1) x3771))))
(assert (x4630 x2004))
(assert (= 0 (x5273 (- x4083 x4454))))
(assert (not (= (x1211 x310 2) 4168891048)))
(assert (x4630 x1072))
(assert (= x676 (or (and x3299 (not x392)) (and x5960 (not x2093)))))
(assert (= (and (not x788) x2398) x5338))
(assert (= (=> (and (= x4438 x15) (= x3785 0)) x3439) x235))
(assert (=> (< (- x3771 1) 10000) (not (= (+ x3948 1) x3771))))
(assert (x4630 x3974))
(assert (=> (> (+ 10000 1) x2060) (not (= (x1211 x3576 1) x2060))))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x182 1) x3414))))
(assert (x4630 x5388))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x1956 1) x1248))))
(assert (not (= 157198259 (x1211 x4284 1))))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x4799 1) x1338))))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x4017 1)))))
(assert (=> (= (x1211 x6069 1) (x1211 x3836 1)) (= x3836 x6069)))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (+ 5 x3962)))))
(assert (=> (> (+ 10000 1) x952) (not (= (+ x3948 1) x952))))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x310 2) x1956))))
(assert (x6051 x2642))
(assert (x4630 x3268))
(assert (= (ite (= x5990 x1334) x655 (x2690 x1334)) (x1809 x1334)))
(assert (= (x5930 x5936) 0))
(assert (= (=> (and (= 0 x5619) (= x312 x5290)) x375) x775))
(assert (=> (= (x1211 x3414 1) (x1211 x5745 1)) (= x5745 x3414)))
(assert (not (= (+ x98 3) (x1211 x1451 1))))
(assert (=> (= (x1211 x1849 1) (x1211 x1919 1)) (= x1919 x1849)))
(assert (not (= (+ x2042 5) (x1211 x1919 1))))
(assert (= (and x1346 (not x1316)) x5034))
(assert (=> (< (- x3755 1) 10000) (not (= (+ x98 3) x3755))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x3543 1))))
(assert (not (= 404098525 (x1211 x1112 1))))
(assert (=> (< (- x361 1) 10000) (not (= (x1211 x5745 1) x361))))
(assert (not (= (x1211 x3576 1) (+ x2042 5))))
(assert (not (= (+ x3962 5) (x1211 x1956 1))))
(assert (= x2129 true))
(assert (x4630 x4761))
(assert (=> (< (- x740 1) 10000) (not (= (+ x1186 1) x740))))
(assert (not (= (x1211 x5745 1) (+ x2042 5))))
(assert (not (= (x1211 x3513 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x3645 1) x1248))))
(assert (not (= (x1211 x2862 1) 3939881817)))
(assert (x4630 x3941))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x946 1)))))
(assert (x4630 x1595))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ 1 x2042))))
(assert (x4630 x4876))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x3148 3)))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 274184521717934524641157099916833587231 1)))))
(assert (= x1927 (and x1041 x1243)))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x4017 1) x952))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (+ x5409 1)))))
(assert (=> (> (+ 10000 1) x3511) (not (= (+ x4054 2) x3511))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (+ x3962 2)))))
(assert (=> (< (- x2845 1) 10000) (not (= (x1211 x208 1) x2845))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x1112 1))))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (x406 1)))))
(assert (x4630 x344))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (+ 2 x2042)))))
(assert (not (= (x406 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (> (+ 10000 1) x5500) (not (= (+ x98 4) x5500))))
(assert (not (= (x1211 x2060 1) 3)))
(assert (x4630 x5035))
(assert (x4630 x3862))
(assert (not (= 3 (x1211 x3414 1))))
(assert (= (ite (and (not x305) x5626 x757) (x4461 x47) (x4892 x47)) (x3314 x47)))
(assert (= 0 (x3471 x13)))
(assert (not (= (x1211 x928 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (< (- x4113 1) 10000) (not (= (+ 4 x1186) x4113))))
(assert (not (= (x1211 x5421 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x4630 x2225))
(assert (x4630 x224))
(assert (=> (= (x1211 x4293 1) (x1211 x1919 1)) (= x1919 x4293)))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x3992 2)))))
(assert (=> (> (+ 10000 1) x2696) (not (= (+ 3 x98) x2696))))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x4198 1) x2758))))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x3414 1) x4400))))
(assert (not (= (x1211 x4800 1) (+ 2 x3457))))
(assert (x4630 x3041))
(assert (=> (> (+ 10000 1) x2601) (not (= (+ x3962 3) x2601))))
(assert (= x2633 (and x1643 (not x5163))))
(assert (= x3293 (=> (and (= x265 x5251) (= x3783 x372) (= x3244 x1930) (= x5349 x2277) (= x5793 x3193) (= x81 x2087) (= x1769 x4252)) x1300)))
(assert (x4630 x4337))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x4218 2) x2820))))
(assert (x5138 x4243 x2469))
(assert (=> (> (+ 10000 1) x2549) (not (= (+ 4 x1186) x2549))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x4293 1))))
(assert (not (= (x1211 x928 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (= (x1211 x4800 1) (x1211 x902 1)) (= x4800 x902)))
(assert (x4630 x6152))
(assert (x4630 x1815))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x406 1)))))
(assert (=> (< (- x4107 1) 10000) (not (= (+ x3962 4) x4107))))
(assert (=> (< (- x1852 1) 10000) (not (= (+ 1 x3962) x1852))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x2060 1)))))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (x1211 x2060 1)))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x182 1)))))
(assert (= x3338 (and x24 x3023)))
(assert (not (= (x1211 x2060 1) (+ 2 x3962))))
(assert (not (= 274184521717934524641157099916833587231 (+ x98 1))))
(assert (not (= (+ 4 x1186) (x1211 x208 1))))
(assert (x4630 x6030))
(assert (= (x1916 x5416) (ite (= x5416 x2700) x1354 (x88 x5416))))
(assert (not (= (x1211 x1852 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (x1211 x6069 1)))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ 2 x3457))))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 274184521717934524641157099916833587231 1) x928))))
(assert (x4630 x4427))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x1919 1) x2601))))
(assert (not (= (+ 3 x2042) (x1211 x4218 2))))
(assert (= (or (and x2702 (not x2247)) (and x3889 (not x4128))) x2525))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x4198 1)))))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x5500 1) x3511))))
(assert (x4630 x3818))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x5917) (not (= (+ 3 x3962) x5917))))
(assert (=> (= (x1211 x5500 1) (x1211 x3576 1)) (= x5500 x3576)))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (+ x3962 1)))))
(assert (not (= (x1211 x4800 1) (+ x3962 5))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x3513 1)))))
(assert (=> (> (+ 10000 1) x4400) (not (= (x1211 x4284 1) x4400))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (+ 5 x2042)))))
(assert (x6051 x2150))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x4284 1) x3771))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x928 1)))))
(assert (= (ite (and (not x305) x757 x5626) (x2597 x4447) (x3247 x4447)) (x3313 x4447)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x2862 1))))
(assert (not (= (x1211 x4284 1) (+ 3 x1186))))
(assert (not (= (x1211 x740 2) (x1211 x1956 1))))
(assert (=> (> (+ 10000 1) x83) (not (= (+ x2042 4) x83))))
(assert (x251 x4100 x4080 x2554 x665))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (+ x1186 3)))))
(assert (=> (= (x1211 x3755 1) (x1211 x3576 1)) (= x3576 x3755)))
(assert (= x4568 (and x3254 (not x1964))))
(assert (x4630 x2215))
(assert (x4630 x523))
(assert (not (= (x1211 x1956 1) (+ 2 x3962))))
(assert (=> (> (+ 10000 1) x5800) (not (= (x1211 x4017 1) x5800))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (+ 1 x1186)))))
(assert (not (= (+ x2042 2) (+ x2042 5))))
(assert (x4630 x4287))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (+ 5 x3962)))))
(assert (=> (= (x1211 x946 1) (x1211 x4284 1)) (= x946 x4284)))
(assert (not (= 826074471 (x1211 x4090 3))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x208 1)))))
(assert (not (= (x1211 x5500 1) 1000000000000000000)))
(assert (=> (> (+ 10000 1) x952) (not (= (x1211 x6069 1) x952))))
(assert (=> (= (x1211 x182 1) (x1211 x4198 1)) (= x4198 x182)))
(assert (not (= (x1211 x4284 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x4630 x4744))
(assert (=> (< (- x1852 1) 10000) (not (= (+ x2042 1) x1852))))
(assert (not (= (x1211 x935 1) (+ x3962 4))))
(assert (not (= (x1211 x1849 1) (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x3148) (not (= (x1211 x1956 1) x3148))))
(assert (not (= (x406 1) (x1211 x3755 1))))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 274184521717934524641157099916833587231 1)))))
(assert (= (ite (and x2869 (not x3708) x3512) (x2104 x1254) (ite (and x2869 (not x5704) (not x3512) (not x3708)) (x2037 x1254) (x756 x1254))) (x4732 x1254)))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x3992 2) x182))))
(assert (not (= (x1211 x3755 1) 3)))
(assert (= x5673 (=> (and (= x4329 68) (= (or (and (= true (<= x3015 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x3015)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3015)) x3900) (= (x3337 (- x4329 4)) x3015) (= x1657 x243) (not (< x4329 4)) (= x688 x4792) (< 0 x951) (= x951 (x3910 274184521717934524641157099916833587206)) (= x6126 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x3644 2514000705)) (not (= x3644 1889567281)) (= x3644 2835717307) (not (< x3644 826074471)) (not (= 826074471 x3644)) (= x4815 x4329)) (and (=> x3900 x1178) (=> (not x3900) x1925)))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x3645 1)))))
(assert (= (=> (and (= x191 (x3910 x2845)) (= x4725 (x5347 1461501637330902918203684832716283019655932542975 x1235)) (= x714 (x6031 (+ 4 x1942))) (= (x6031 (+ x1942 36)) x3982) (= x2753 (x5347 1461501637330902918203684832716283019655932542975 x1292)) (= (x6031 (+ x714 64)) x523) (= (= 0 x191) x4208)) (and (=> x4208 x5361) (=> (and (or (and (= x5871 x548) (not x4410)) (and x4410 (= 1 x5871) (< x1988 4294967296))) (not x4208) (= (> x548 0) x4410)) x1337))) x3440))
(assert (=> (= (x1211 x902 1) (x1211 x6069 1)) (= x902 x6069)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 1 x3962))))
(assert (x4630 x2180))
(assert (= (=> (= x3418 (< x2320 x372)) (and (=> x3418 x3198) (=> (and (= x2626 (x3337 (- x2320 x372))) (= x4462 x5793) (= x1594 x372) (= x1930 x2836) (= x5470 x2087) (= x2472 x2277) (not x3418) (= x4825 x265)) x5172))) x1300))
(assert (not (= (x1211 x5917 1) 157198259)))
(assert (not (= 1889567281 (+ x1186 3))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (+ x4054 2)))))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x406 1)))))
(assert (not (= (+ 5 x2042) 826074471)))
(assert (=> (= (x1211 x1852 1) (x1211 x5500 1)) (= x5500 x1852)))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x4017 1) x5500))))
(assert (= (and x3427 (not x1727)) x262))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (+ 2 x3962)))))
(assert (not (= (x1211 x4284 1) 404098525)))
(assert (not (= (+ 2 x3457) 2514000705)))
(assert (x4630 x1915))
(assert (=> (> (+ 10000 1) x4017) (not (= (+ 1 x3948) x4017))))
(assert (x4630 x3854))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x310 2) x1919))))
(assert (=> (< (- x83 1) 10000) (not (= (+ x2042 3) x83))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x3513 1)))))
(assert (not (= (x1211 x4527 1) (x1211 x3992 2))))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (x1211 x5500 1)))))
(assert (= (and x4533 x2884) x4032))
(assert (not (= (x1211 x935 1) 2)))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x5917 1) x4610))))
(assert (not (= (+ 2 x3457) (x1211 274184521717934524641157099916833587231 1))))
(assert (= x2783 (=> (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x166) true) (> 32 x166)) (> x166 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3606) (and (=> x3606 x3198) (=> (not x3606) x5307)))))
(assert (not (= (x1211 x2060 1) 2)))
(assert (=> (> (+ 10000 1) x1248) (not (= x1248 (x1211 x5917 1)))))
(assert (x6051 x5545))
(assert (x4630 x1088))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x4218 2) x4107))))
(assert (= x3070 (and (not x5541) x5445)))
(assert (not (= (x1211 x3409 1) (+ 4 x3962))))
(assert (x4630 x4127))
(assert (x4630 x70))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x3543 1)))))
(assert (not (= (x1211 x4090 3) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x4630 x3664))
(assert (=> (< (- x3230 1) 10000) (not (= (+ x98 1) x3230))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x4218 2)))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (+ x98 4)))))
(assert (x4630 x5349))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x208 1) x1338))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x935 1))))
(assert (not (= (x1211 x935 1) (+ 2 x3962))))
(assert (= x2357 (or x1389 (and x4759 x2619))))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x3836 1) x3575))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x4293 1) x1451))))
(assert (not (= (x1211 x1451 1) 1461501637330902918203684832716283019655932542975)))
(assert (= x2816 (=> (and (= x5949 (x5646 x1875)) (= x385 (x5347 255 x5949)) (= (= x385 x5949) x3530)) (and (=> (not x3530) x5361) (=> x3530 x3423)))))
(assert (not (= 3939881817 (+ 1 x3962))))
(assert (not (= (x1211 x4799 1) (+ 4 x3962))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x1211 x3148 3)))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (+ 2 x2042)))))
(assert (= x1732 (or (and x4020 (not x6087)) (and x39 (not x3390)))))
(assert (= x102 (=> (and (= (> x5166 0) x5108) (= (x244 x2159) x5166)) (and (=> (and (not x5108) (= 0 x1446)) x5200) (=> x5108 x416)))))
(assert (x399 x740))
(assert (x4630 x4730))
(assert (not (= (+ 4 x3962) (x1211 x4017 1))))
(assert (x4630 x99))
(assert (x4630 x5253))
(assert (not (= 2835717307 (x1211 x3992 2))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x361 1))))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x5917 1)))))
(assert (x4630 x4967))
(assert (x4630 x1431))
(assert (not (= (+ x98 1) (x1211 x5421 1))))
(assert (x4630 x5569))
(assert (not (= (x1211 x3409 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (x1211 x3645 1)))))
(assert (x4630 x5039))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x5500 1)))))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x2060 1)))))
(assert (x4630 x3739))
(assert (x4630 x3678))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 3 x98))))
(assert (=> (= (x1211 x1849 1) (x1211 x3755 1)) (= x1849 x3755)))
(assert (x4630 x3524))
(assert (= (and x110 x2692) x5019))
(assert (x4630 x751))
(assert (not (= (x1211 x1956 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x693) (not (= (+ x3457 2) x693))))
(assert (x4630 x1912))
(assert (x4630 x2367))
(assert (=> (= (x1211 x4799 1) (x1211 x3836 1)) (= x4799 x3836)))
(assert (=> (= (x1211 x3414 1) (x1211 x4293 1)) (= x4293 x3414)))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (+ x2042 3)))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (x1211 x1956 1)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x3962 4))))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x3513 1) x2758))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x3755 1)))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x3645 1) x4113))))
(assert (x4630 x3639))
(assert (x4630 x3654))
(assert (x399 x4113))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (+ 4 x1186)))))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x1451 1)))))
(assert (not (= (+ x1186 1) (x1211 x902 1))))
(assert (x4630 x2605))
(assert (x4630 x1340))
(assert (x4630 x455))
(assert (x4630 x5827))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x182 1) x3836))))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x3255) x4976) (and (=> (and (not (> 4 x948)) (not (= 117300739 x2924)) (= 404098525 x2924) (<= 0 x833) (= 32 x355) (> 826074471 x2924) (= x948 4) (= x332 x948) (not (= 157198259 x2924)) (= x1305 1) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x3548) (<= x833 115792089237316195423570985008687907853269984665640564039457584007913129639935) x4976 (< 0 x72) (= x72 (x3910 274184521717934524641157099916833587206))) x1835) (=> (not x4976) x1954))) x4034))
(assert (x4630 x1855))
(assert (x4630 x4998))
(assert (= x2398 (and (not x3417) x3229)))
(assert (not (= 3 (x1211 x4610 1))))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (x1211 x1956 1)))))
(assert (=> (= (x1211 x5500 1) (x1211 x5745 1)) (= x5745 x5500)))
(assert (x4630 x5688))
(assert (=> (< (- x208 1) 10000) (not (= (x1211 x4198 1) x208))))
(assert (= (x2928 128) (x5055 128)))
(assert (x4630 x5668))
(assert (= (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x3230) x636) (= x3230 (x5572 x772)) (= (= x3230 x636) x5097)) (and (=> (not x5097) x3198) (=> x5097 x4399))) x6162))
(assert (not (= (x1211 x1919 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x935 1) x3699))))
(assert (x6051 x3008))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x1852 1)))))
(assert (x4630 x5899))
(assert (x4630 x2239))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x4218))))
(assert (=> (= (x1211 x928 1) (x1211 x1956 1)) (= x1956 x928)))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x361 1) x2820))))
(assert (=> (= (x1211 x3576 1) (x1211 x3409 1)) (= x3409 x3576)))
(assert (= (=> (and (= x461 (x5651 x1283)) (= (+ 2 x4054) x1283) (= (< 2 x461) x3578) (= (x1211 x3148 3) x4054) (< x461 256) (= x3148 (x5347 1461501637330902918203684832716283019655932542975 x5076))) (and (=> (not x3578) x866) (=> x3578 x5361))) x5832))
(assert (= (=> (and (= (x750 128) x140) (= (ite (= x140 0) (= 0 x140) (= 0 x2970)) x2516)) (and (=> (not x2516) x4544) (=> (and (= x2452 x5597) x2516) x5955))) x3899))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x4527 1) x1775))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x361 1) x4090))))
(assert (not (= (+ 1 x3948) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x935 1) x3755))))
(assert (x4630 x5344))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x361 1) x3255))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 4 x2042))))
(assert (not (= (+ x2042 2) 4294967296)))
(assert (not (= 157198259 (x1211 x6069 1))))
(assert (=> (< (- x6069 1) 10000) (not (= (+ 1 x3948) x6069))))
(assert (=> (= (x1211 x2060 1) (x1211 x361 1)) (= x2060 x361)))
(assert (x4630 x4210))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x2862 1)))))
(assert (x399 x4554))
(assert (not (= (+ 5 x2042) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= (x1211 x4800 1) 3939881817)))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x4610 1) x4198))))
(assert (not (= (+ 2 x2042) (+ 1 x1186))))
(assert (= (=> (and (= x601 (= x4140 x2010)) (= x5076 x4521) (= x2010 (x5347 1461501637330902918203684832716283019655932542975 x4140))) (and (=> (not x601) x5361) (=> x601 x5753))) x174))
(assert (x263 x1475 x4028))
(assert (=> (= (x1211 x4198 1) (x1211 x1956 1)) (= x4198 x1956)))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (+ x1186 1)))))
(assert (not (= (x1211 x946 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (and x5677 (not x5666)) x979))
(assert (=> (= (x1211 x208 1) (x1211 x5421 1)) (= x5421 x208)))
(assert (not (= (+ x2042 5) (+ 1 x98))))
(assert (not (= (x1211 x5917 1) 274184521717934524641157099916833587202)))
(assert (=> (> (+ 10000 1) x2417) (not (= (+ x98 1) x2417))))
(assert (not (= 18446744073709551615 (x406 1))))
(assert (= x1298 (=> (and (= (> x3461 0) x3509) (= x3236 (uninterp_mod (* x2320 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (= x2044 (- (/ x3236 x3461) (uninterp_frac x3236 x3461))) x3509 (= x5412 x2044)) x4934) (=> (not x3509) x3198)))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x406 1)))))
(assert (= x3547 (and (not x2913) x1084)))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x4799 1)))))
(assert (x4630 x2044))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x3457 2))))
(assert (x4630 x5021))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 x4218 2) x1338))))
(assert (not (= (x1211 x1451 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x2696) (not (= (+ 4 x1186) x2696))))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (x1211 x4610 1)))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x2862 1)))))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x4527 1) x1956))))
(assert (= (and x2715 x4588) x553))
(assert (x4630 x5558))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x1919 1) x2417))))
(assert (=> (> (+ 10000 1) x83) (not (= (+ x2042 2) x83))))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (+ x3962 4)))))
(assert (x263 x201 x396))
(assert (x4630 x5627))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x4527 1))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x3513 1)))))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x2862 1) x2549))))
(assert (not (= (+ 3 x98) (x1211 x4800 1))))
(assert (x4630 x4349))
(assert (=> (= (x1211 x3513 1) (x1211 x1956 1)) (= x3513 x1956)))
(assert (= (and (not x195) x5783) x1963))
(assert (= (and (not x2352) x1726) x2286))
(assert (not (= 2 (x1211 x928 1))))
(assert (not (= (+ x3457 2) (x1211 x4284 1))))
(assert (not (= (+ 5 x2042) (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (+ 4 x3962)))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x946 1) x1451))))
(assert (x4630 x4740))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (+ 3 x98)))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (+ x3948 1)))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x3513 1)))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x6069 1)))))
(assert (not (= (x1211 x310 2) (x1211 x4610 1))))
(assert (=> (= (x1211 x4017 1) (x1211 x3409 1)) (= x3409 x4017)))
(assert (x4630 x2663))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x4198 1)))))
(assert (=> (> (+ 10000 1) x928) (not (= (+ 3 x98) x928))))
(assert (not (= (x1211 x3414 1) (x1211 x3992 2))))
(assert (=> (= (x1211 x4284 1) (x1211 x3409 1)) (= x4284 x3409)))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ x3457 2)))))
(assert (= (=> (and (= (ite (= x4445 0) (= 0 x4445) (= x409 0)) x3650) (= (x4709 x5229) x4445)) (and (=> (not x3650) x2685) (=> (and (= 0 x5900) x3650) x5623))) x1189))
(assert (x4630 x1260))
(assert (not (= (+ x3457 2) (x1211 x3148 3))))
(assert (=> (= (x1211 x4527 1) (x1211 x1112 1)) (= x1112 x4527)))
(assert (not (= 1889567281 (+ 1 x1186))))
(assert (x4630 x953))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x4800 1) x4218))))
(assert (x6051 x4871))
(assert (x5138 x5388 x2844))
(assert (not (= (+ 1 x3948) (x1211 x946 1))))
(assert (x4630 x3968))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x928 1)))))
(assert (x4630 x3976))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x740 2) x6069))))
(assert (x399 x3948))
(assert (= (=> (and (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2307) x3990) (= (x6031 (+ x5047 31)) x2307) (= (x6031 (+ x3990 x5535)) x1741) (= x5689 (or (and (< x5047 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5047) true)) (> x5047 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> x5689 x3198) (=> (not x5689) x476))) x3841))
(assert (=> (< (- x4702 1) 10000) (not (= (+ 5 x2042) x4702))))
(assert (not (= 1 (x1211 x928 1))))
(assert (not (= 3939881817 (x1211 x1112 1))))
(assert (not (= (x1211 x902 1) (x1211 x3992 2))))
(assert (x4630 x3234))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (x1211 x1852 1)))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x902 1) x1956))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (+ 3 x2042)))))
(assert (=> (< (- x1112 1) 10000) (not (= (x1211 x1451 1) x1112))))
(assert (= (ite (= x161 x3175) x3268 (x5618 x3175)) (x2487 x3175)))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x3409 1) x4527))))
(assert (x4630 x5791))
(assert (x4630 x2130))
(assert (=> (= (x1211 x5500 1) (x1211 x4284 1)) (= x5500 x4284)))
(assert (not (= 18446744073709551615 (x1211 x3414 1))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x1211 x5421 1)))))
(assert (=> (> (+ 10000 1) x1775) (not (= (x406 1) x1775))))
(assert (= x503 (and x1672 x2890)))
(assert (=> (< (- x1467 1) 10000) (not (= (x1211 x310 2) x1467))))
(assert (=> (> (+ 10000 1) x1112) (not (= (+ 5 x2042) x1112))))
(assert (= x3890 (=> (and (= (x6031 (+ x1943 31)) x250) (= x1037 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x250)) (= x4474 (x6031 (+ 128 x1037))) (= x4397 (or (> x1943 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1943)) (> 32 x1943))))) (and (=> x4397 x3198) (=> (not x4397) x4229)))))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x5421 1)))))
(assert (= 0 (x4192 x1259)))
(assert (=> (= (x1211 x935 1) (x1211 x4800 1)) (= x4800 x935)))
(assert (x4630 x5214))
(assert (not (= (+ x98 3) 1)))
(assert (x4630 x3765))
(assert (x4630 x995))
(assert (= x40 (=> (= (= 0 x3783) x2999) (and (=> (not x2999) x3283) (=> (and (= 0 x372) (= x5793 x6011) (= x2413 x265) (= x4252 0) (= x876 x1930) x2999 (= x833 x2277) (= x2087 x4558)) x1300)))))
(assert (not (= (+ 4 x98) (+ 5 x3962))))
(assert (= (x4115 x278) (ite (and x708 x1841 (not x5449)) (x2363 x278) (x4892 x278))))
(assert (not (= (+ x2042 4) (x1211 x6069 1))))
(assert (x4630 x2317))
(assert (not (= 2835717307 (+ 1 x1186))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x3414 1)))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x406 1)))))
(assert (not (= (+ x3962 2) (x1211 x4090 3))))
(assert (=> (> (+ 10000 1) x3511) (not (= (x1211 x1451 1) x3511))))
(assert (= (=> (and (= (> x5483 18446744073709551615) x3708) (= (x5474 x4462) x5483)) (and (=> x3708 x3198) (=> (and (not x3708) (= (x6031 (+ x2887 x5661)) x4710) (= x5661 (x6031 (+ 32 x4650))) (or (and (= x2688 x4427) (= x3852 (x6031 (+ x2072 64))) (= x2072 (x6031 (+ x4710 32))) (= (x6031 (+ x2887 64)) x5754) (= x5210 (x6031 (+ x2887 32))) (= x1595 (x6031 (+ 192 x4710))) (= x5704 (< 0 x2822)) (or (and (= (x3337 (- x2822 1)) x3911) (not x4350) (= (< 0 x3911) x4350) (= x3884 (x6031 (+ x4710 384))) (= x3110 (x6031 (+ 64 x3867))) (= (x6031 (+ x5771 64)) x1986) (= x116 (x6031 (+ 64 x3110))) (= x3867 (x6031 (+ x4710 224))) x5704 (= x4427 x3884) (= (x6031 (+ 64 x1595)) x5771)) (and (not x5704) (= x4427 x1595))) (= (x3337 (- x5483 1)) x2822) (not x3512) (= (x6031 (+ x4710 64)) x5304) (= x5791 (x6031 (+ x5304 64))) (= (x6031 (+ x3852 64)) x4407)) (and (= x2688 x4710) x3512)) (= x3512 (= 0 x5483)) (= (uninterp_mod (* 32 x5483) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4650)) x4478))) x3932))
(assert (=> (= (x1211 x208 1) (x1211 x1451 1)) (= x1451 x208)))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x5500 1)))))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (+ 4 x3962)))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (+ 1 x3962)))))
(assert (not (= (+ x3962 2) (+ x98 4))))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x2862 1) x3645))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x2060 1)))))
(assert (not (= (+ x2042 1) (+ 3 x1186))))
(assert (= (or (and x5488 x3710) (and x2000 x5467) (and x1195 x223) (and x4084 (not x307)) (and x97 x4589) (and x3245 x3805)) x3869))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (x1211 x3836 1)))))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x4799 1)))))
(assert (= x770 (=> (and (= x3126 x41) (= x620 x346)) x2761)))
(assert (not (= 1000000000000000000 (+ x3962 5))))
(assert (not (= (x1211 x3576 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (= (x1211 x1112 1) (x1211 x4800 1)) (= x1112 x4800)))
(assert (=> (> (+ 10000 1) x5421) (not (= (+ x98 3) x5421))))
(assert (not (= 4168891048 (+ x3962 2))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x182 1)))))
(assert (not (= (x1211 x4610 1) (+ 4 x98))))
(assert (not (= (x1211 x3836 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x457 (and (not x3708) x2869)))
(assert (not (= (x1211 x4610 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4630 x5524))
(assert (not (= (x1211 x4090 3) 157198259)))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (+ 4 x3962)))))
(assert (not (= (x1211 x4218 2) (x1211 x2060 1))))
(assert (x4630 x1037))
(assert (not (= (x1211 x1852 1) 4294967296)))
(assert (=> (< (- x740 1) 10000) (not (= (+ 3 x2042) x740))))
(assert (not (= (x1211 x3409 1) (+ 3 x2042))))
(assert (not (= (x1211 x5421 1) (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x5421) (not (= (+ 2 x2042) x5421))))
(assert (=> (< (- x3148 1) 10000) (not (= (x1211 x3543 1) x3148))))
(assert (not (= (x1211 x4800 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= (+ x3962 4) (x1211 x5917 1))))
(assert (x4630 x3957))
(assert (= x5258 (and x2146 (not x2361))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x361 1) x3771))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x4800 1)))))
(assert (= (ite (= x2418 x5856) 0 (x3145 x2418)) (x4803 x2418)))
(assert (not (= (x1211 x3992 2) (+ x2042 2))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= (+ x1186 4) (x1211 x4090 3))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (+ 3 x3962)))))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x208 1) x4644))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x1112 1)))))
(assert (not (= (x1211 x2060 1) 404098525)))
(assert (= (ite (= x4834 x4112) x2796 (x4002 x4834)) (x124 x4834)))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x902 1) x5745))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (+ x98 4)))))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x3836 1) x740))))
(assert (=> (> (+ 10000 1) x4527) (not (= (+ 3 x3962) x4527))))
(assert (=> (> (+ 10000 1) x6037) (not (= (+ 1 x3962) x6037))))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x2862 1)))))
(assert (= x4226 (=> (and (= x5583 x3576) (= (= x3576 x984) x3170)) (and (=> (and x3170 (= (x1211 x3576 1) x5054) (= 1 x5619) (= x4331 (x4033 x5054)) (= 32 x312) (<= x4331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4331 0)) x375) (=> (not x3170) x775)))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x4800 1))))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x4527 1)))))
(assert (= (and x2224 x6092) x2785))
(assert (not (= 3939881817 (x1211 x3645 1))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (+ 4 x1186)))))
(assert (=> (= (x1211 x4198 1) (x1211 x3645 1)) (= x4198 x3645)))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 274184521717934524641157099916833587231 1)))))
(assert (x4630 x4791))
(assert (=> (= (x1211 x4284 1) (x1211 x4610 1)) (= x4284 x4610)))
(assert (x4630 x1143))
(assert (=> (= (x1211 x4017 1) (x1211 x1451 1)) (= x1451 x4017)))
(assert (=> (> (+ 10000 1) x2549) (not (= (+ x2042 4) x2549))))
(assert (= (=> (and (= (x1211 274184521717934524641157099916833587231 1) x5233) (>= x4730 0) (= (> x2022 x4730) x195) (= x5870 274184521717934524641157099916833587231) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4730) (= x4730 (x4002 x5233)) (= x2658 x3356)) (and (=> x195 x3256) (=> (not x195) x3372))) x1104))
(assert (not (= (+ x98 3) (x1211 x935 1))))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (+ x2042 2)))))
(assert (= x2018 (=> (= x588 (= 274184521717934524641157099916833587206 x83)) (and (=> (and (= x1696 32) (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x150) (>= x2190 0) x588 (= x5051 4) (= x5051 x744) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2190) (not (< x1615 826074471)) (= 826074471 x1615) (> x3790 0) (not (> 4 x5051)) (= 1 x711) (= (x3910 274184521717934524641157099916833587206) x3790)) x5881) (=> (not x588) x1773)))))
(assert (not (= (x1211 x928 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (x1211 x1849 1)))))
(assert (not (= (+ x1186 3) (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (+ x3457 2)))))
(assert (not (= (+ x3962 3) (+ 4 x3962))))
(assert (not (= (x1211 x1849 1) (+ x3457 2))))
(assert (x251 x4008 x5320 x192 x6108))
(assert (= (=> (and (= x3461 (x4780 x1241)) (= x3883 (ite (= x3461 0) (= 0 x3461) (= x2320 0)))) (and (=> (and x3883 (= x5412 0)) x4934) (=> (not x3883) x5025))) x4855))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x740 2) x1467))))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (x1211 x3414 1)))))
(assert (x4630 x5063))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x406 1)))))
(assert (= (=> (and (= (< 0 x454) x5644) (= (x5645 x4997) x1472) (= (x5609 x1472) x454)) (and (=> (not x5644) x3198) (=> x5644 x5567))) x2484))
(assert (= x4255 (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x1238) x5617) (= x842 (x6031 (+ x2351 x4637))) (= (x5317 x947) x1238) (= x1430 4) (= x5633 (= x3186 0)) (= x3186 (x3910 x5617))) (and (=> (not x5633) x4386) (=> x5633 x5361)))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x3992 2) x2820))))
(assert (not (= (x1211 x3992 2) (x1211 x4017 1))))
(assert (not (= (x1211 x3543 1) (+ 2 x4054))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x1852 1))))
(assert (=> (< (- x1775 1) 10000) (not (= (x1211 x1852 1) x1775))))
(assert (=> (< (- x2845 1) 10000) (not (= (x1211 x4610 1) x2845))))
(assert (not (= (x1211 x208 1) 274184521717934524641157099916833587202)))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (x1211 x3992 2)))))
(assert (= (=> (and (= (x5474 x2527) x1463) (= x1751 (x244 x2159)) (= x2527 (x236 x1822)) (= (= x1751 x1463) x5965)) (and (=> x5965 x5293) (=> (not x5965) x3198))) x4399))
(assert (not (= (+ x1186 3) (x1211 x3576 1))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x2862 1)))))
(assert (= x254 (and x5382 (not x2284))))
(assert (x4630 x1811))
(assert (x4630 x4703))
(assert (= x1767 (=> (and (= x4773 x4768) (= x3703 x1943)) x3810)))
(assert (=> (> (+ 10000 1) x561) (not (= (+ 1 x1186) x561))))
(assert (not (= (x1211 x3576 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= (x1211 x4090 3) (x1211 x2060 1))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 3 x2042))))
(assert (x4630 x2664))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x1211 x4800 1)))))
(assert (= (and (not x3371) x4680) x5024))
(assert (x6051 x3310))
(assert (x399 x1112))
(assert (= x5004 (=> (and (= x953 (x3910 x1467)) (= (x6031 (+ x1336 36)) x148) (= (= 0 x953) x1645) (= x1467 (x5347 1461501637330902918203684832716283019655932542975 x6093)) (= x199 (x5347 1461501637330902918203684832716283019655932542975 x271)) (= x4897 (x6031 (+ x5177 32))) (= (x6031 (+ x1336 4)) x2317) (= (x5347 1461501637330902918203684832716283019655932542975 x314) x3333) (= x3048 (x4183 x4897))) (and (=> (and (not x1645) (or (and (= x945 x5892) (not x1387)) (and x1387 (= x945 1) (< x5933 4294967296))) (= x1387 (< 0 x5892))) x4022) (=> x1645 x5361)))))
(assert (x4630 x3559))
(assert (=> (< (- x6069 1) 10000) (not (= (+ 3 x3962) x6069))))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x3255) x4408) (and (=> (and (> 826074471 x5262) (>= x4558 0) (= (x3910 274184521717934524641157099916833587202) x3220) (= x355 32) (= x431 x332) (< 0 x3220) (= 1 x1305) (not (= x5262 117300739)) x4408 (not (= 157198259 x5262)) (= 4 x431) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x635) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4558) (= 404098525 x5262) (not (< x431 4))) x1835) (=> (not x4408) x5083))) x1954))
(assert (not (= (x1211 x5917 1) (+ x3962 5))))
(assert (x399 x4400))
(assert (not (= (+ 4 x98) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (+ x98 4)))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 x361 1)))))
(assert (=> (< (- x4107 1) 10000) (not (= (+ x1186 1) x4107))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x5745 1))))
(assert (= true x313))
(assert (x4630 x2940))
(assert (=> (> (+ 10000 1) x1849) (not (= (+ 2 x4054) x1849))))
(assert (= (=> (= (= 0 x711) x5282) (and (=> x5282 x5361) (=> (not x5282) x225))) x5881))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x946 1)))))
(assert (x4630 x5470))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x4090 3) x310))))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x3836 1) x3414))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (+ x98 1)))))
(assert (not (= (+ 1 x98) (+ 1 x5409))))
(assert (= x5077 (and x4389 (not x4809))))
(assert (= x3147 (=> (and (= (or (and (> 64 x5501) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5501) true)) (> x5501 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2370) (< 0 x792) (= x3419 2835717307) (not (= 2514000705 x3419)) (= x1479 x3783) (= x3345 x1166) (= x5501 (x3337 (- x3345 4))) (= x3345 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x345) (not (= 826074471 x3419)) (not (> 4 x3345)) (= x5816 x2029) (not (< x3419 826074471)) (not (= 1889567281 x3419)) (= x792 (x3910 274184521717934524641157099916833587206))) (and (=> (not x2370) x4530) (=> x2370 x1560)))))
(assert (=> (> (+ 10000 1) x5617) (not (= (+ 2 x4054) x5617))))
(assert (=> (= (x1211 x2862 1) (x1211 x1919 1)) (= x2862 x1919)))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x4218 2) x561))))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x310 2) x2758))))
(assert (= (or (and x4450 x5851) (and (not x4175) x2677)) x206))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (+ x2042 2)))))
(assert (not (= (x1211 x4610 1) (+ 1 x3948))))
(assert (x4630 x4404))
(assert (=> (< (- x4017 1) 10000) (not (= (+ x1186 1) x4017))))
(assert (x4630 x3258))
(assert (x6051 x5569))
(assert (x4630 x3666))
(assert (x4630 x2537))
(assert (x4630 x4094))
(assert (=> (> (+ 10000 1) x3543) (not (= (+ 4 x3962) x3543))))
(assert (x4630 x3155))
(assert (x4630 x4310))
(assert (x6051 x3042))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (+ 4 x2042)))))
(assert (not (= (+ 3 x2042) (x1211 x310 2))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x4610 1)))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x3755 1)))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x5421 1)))))
(assert (x4630 x5326))
(assert (x4630 x5502))
(assert (= (x4002 x2992) (ite (and x3235 x3830 (not x4813)) (x4236 x2992) (x3247 x2992))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x2060 1)))))
(assert (= 0 (x1448 x4827)))
(assert (x4630 x4013))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x6069 1) x4113))))
(assert (x4630 x2097))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x4284 1) x1219))))
(assert (not (= (+ x5409 1) (x1211 x3645 1))))
(assert (= (and x5146 x5110) x3290))
(assert (x4630 x4448))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x902 1)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x4198 1))))
(assert (x4630 x4578))
(assert (not (= (+ x98 3) (x1211 x4090 3))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x1852 1))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x4610 1)))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x1451 1)))))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (x1211 x2862 1)))))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (+ x3948 1)))))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (+ x3962 5)))))
(assert (not (= (+ 1 x2042) (x1211 x1852 1))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (+ 2 x3962)))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x1849 1)))))
(assert (x399 x182))
(assert (not (= (x1211 x3513 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x2042 5))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x2862 1)))))
(assert (x4630 x4227))
(assert (= (=> (and (= x1719 (< 0 x4445)) (= (uninterp_mod (* x409 x3621) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3720)) (and (=> (and (= (- (/ x3720 x4445) (uninterp_frac x3720 x4445)) x713) (= x713 x5900) x1719) x5623) (=> (not x1719) x5361))) x818))
(assert (x5138 x2029 x1379))
(assert (x4630 x211))
(assert (x4630 x4306))
(assert (not (= (+ x2042 4) (+ 1 x2042))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (+ x5409 1)))))
(assert (not (= 2835717307 (+ 4 x98))))
(assert (x4630 x4835))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x310 2) x6069))))
(assert (x4630 x41))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 4 x3962))))
(assert (x4630 x5531))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ x3457 2))))
(assert (=> (= (x1211 x3755 1) (x1211 x4293 1)) (= x3755 x4293)))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x3755 1)))))
(assert (not (= (x1211 x4218 2) (+ x4054 2))))
(assert (x4630 x4639))
(assert (x4630 x1909))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ x3962 2))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x5745 1)))))
(assert (not (= (+ x3948 1) 1000000000000000000)))
(assert (=> (> (+ 10000 1) x83) (not (= (x1211 x310 2) x83))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x4218 2)))))
(assert (not (= (x1211 x4218 2) 18446744073709551615)))
(assert (x4630 x5515))
(assert (= (=> (and (= (= 0 x5629) x3692) (= (ite (not x1512) 1 0) x4761) (= x1512 (= x1055 0)) (= (x5347 x4761 x5859) x5629) (= x5181 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055))) (= (ite (> x2320 x5181) 1 0) x5859)) (and (=> (not x3692) x3198) (=> x3692 x1298))) x5025))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (x1211 x3543 1)))))
(assert (x4630 x1217))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (+ 3 x2042)))))
(assert (x4630 x1530))
(assert (not (= (x1211 x1852 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x1919 1)))))
(assert (= x4298 (=> (and (= x2582 (uninterp_mod (* x2009 x4745) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2375 (< 0 x1778))) (and (=> (not x2375) x5361) (=> x2375 x5585)))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x4218 2)))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x740 2) x3992))))
(assert (x4630 x1179))
(assert (= x621 (and x4869 (not x694))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x182 1)))))
(assert (not (= 4294967296 (x406 1))))
(assert (=> (< (- x3148 1) 10000) (not (= (x1211 x928 1) x3148))))
(assert (=> (< (- x310 1) 10000) (not (= (+ 1 x98) x310))))
(assert (= x4124 (=> (= x5168 (= x5904 0)) (and (=> (not x5168) x2773) (=> x5168 x3198)))))
(assert (=> (> (+ 10000 1) x1852) (not (= (x1211 x3414 1) x1852))))
(assert (=> (> (+ 10000 1) x310) (not (= (+ x1186 1) x310))))
(assert (not (= (x1211 x5917 1) (+ x3962 1))))
(assert (x4630 x480))
(assert (= x552 (and (not x2854) x5072)))
(assert (not (= (x1211 x4527 1) (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x3148 3) x1451))))
(assert (not (= (+ x98 3) (x1211 x3414 1))))
(assert (x4630 x4426))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x5500 1) x1089))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (+ 4 x2042)))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x4218 2))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x2862 1))))
(assert (not (= (x1211 x3148 3) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 274184521717934524641157099916833587231 (x406 1))))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (+ 3 x2042)))))
(assert (x4630 x6026))
(assert (not (= 1889567281 (x1211 x4800 1))))
(assert (x4630 x587))
(assert (not (= 2743638299 (+ x3962 3))))
(assert (=> (= (x1211 x5917 1) (x1211 x4610 1)) (= x4610 x5917)))
(assert (x4630 x1446))
(assert (= x2817 (=> (and (= x4913 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3776) (and (= (<= x3776 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3776 32)))) (= x4186 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3877)) (= (x6031 (+ 31 x3776)) x3877) (= (x6031 (+ x772 x4186)) x5267)) (and (=> (not x4913) x6162) (=> x4913 x3198)))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x5745 1)))))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x5421 1) x3740))))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x2862 1)))))
(assert (not (= (x1211 x902 1) 117300739)))
(assert (x4630 x3618))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (x1211 x3543 1)))))
(assert (= x3888 x1173))
(assert (=> (< (- x6037 1) 10000) (not (= (x1211 x902 1) x6037))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x4610 1) x3771))))
(assert (not (= (+ x98 4) 157198259)))
(assert (x4630 x1240))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x1919 1))))
(assert (= x678 (=> (and (= x5579 (ite (= 0 x3671) (= 0 x3671) (= 0 x5348))) (= (x1491 x4474) x3671)) (and (=> (not x5579) x1249) (=> (and x5579 (= 0 x783)) x5858)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x406 1)))))
(assert (not (= 2514000705 (x1211 x1451 1))))
(assert (not (= 4294967296 (x1211 x3409 1))))
(assert (x4630 x5037))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x3148 3) x4293))))
(assert (not (= (+ 2 x3457) (+ x1186 3))))
(assert (x4630 x2263))
(assert (=> (> (+ 10000 1) x1248) (not (= x1248 (x1211 x3513 1)))))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x935 1) x4554))))
(assert (=> (> (+ 10000 1) x902) (not (= (x1211 x3992 2) x902))))
(assert (= x3469 (=> (= x913 (= 0 x2725)) (and (=> (not x913) x2438) (=> x913 x3198)))))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (x406 1)))))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x946) (not (= (x1211 x3755 1) x946))))
(assert (not (= (+ x3962 2) (x1211 x1112 1))))
(assert (= x643 (=> (= x1321 (= x5952 0)) (and (=> (not x1321) x2971) (=> (and (= x5606 0) x1321 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1674)) x5315)))))
(assert (not (= (x1211 x5500 1) 4168891048)))
(assert (x4630 x5156))
(assert (not (= (x1211 x3414 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (< (- x4644 1) 10000) (not (= (+ x98 1) x4644))))
(assert (=> (< (- x4017 1) 10000) (not (= (+ x4054 2) x4017))))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x3755 1) x1467))))
(assert (= (=> (= x2430 (= x3506 0)) (and (=> x2430 x5361) (=> (not x2430) x2285))) x157))
(assert (not (= (+ 5 x3962) 274184521717934524641157099916833587202)))
(assert (=> (> (+ 10000 1) x1112) (not (= (+ x1186 1) x1112))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (x1211 x4800 1)))))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x4090 3) x5617))))
(assert (= (x4471 x5054) (ite (= x5054 x5782) x1500 (x4115 x5054))))
(assert (not (= (x1211 x2060 1) (+ x98 1))))
(assert (not (= (x1211 x2060 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x4630 x5206))
(assert (not (= 2 (+ 3 x1186))))
(assert (= x2226 (=> (and (= (x6031 (+ x5847 32)) x2878) (= x2849 (+ 2 x4727)) (<= x1431 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5701 x4727) x4660) (> 1461501637330902918203684832716283019655932542976 x2664) (<= x2918 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ 2 x4179) x4381) (= x2664 (x3375 x2042)) (<= 0 x4660) (> 1461501637330902918203684832716283019655932542976 x4660) (= (+ 2 x2042) x4727) (= (x4455 x709) x3067) (>= 1461501637330902918203684832716283019655932542975 x2612) (= x4243 (x3021 x2878)) (= (x6031 (+ x4998 192)) x2989) (= (x5684 x4179) x1431) (= x5853 (x6031 (+ 64 x4998))) (= (+ x2042 1) x3742) (= x3992 (x5347 1461501637330902918203684832716283019655932542975 x4243)) (= x2042 (x1211 x3992 2)) (= x2612 (x773 x3742)) (= (x6031 (+ x4998 32)) x6115) (<= 0 x2664) (<= 0 x4042) (= (x1790 x4381) x4042) (<= x2664 1461501637330902918203684832716283019655932542975) (= (+ 2 x3742) x4179) (= x1600 (< 0 x3067)) (>= x2918 0) (<= 0 x2612) (>= x1431 0) (= x3438 (x6031 (+ 64 x5853))) (= x2918 (x5093 x2849)) (<= x4042 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3570 (x6031 (+ 64 x4564))) (= (x6031 (+ x6115 64)) x4564) (<= x4660 1461501637330902918203684832716283019655932542975) (< x2612 1461501637330902918203684832716283019655932542976)) (and (=> (not x1600) x5361) (=> (and (not x5499) (= (< 1 x626) x5499) (= x4659 (x6031 (+ 32 x709))) (= x2686 x2989) (= (x3088 x5847) x626) x1600) x3173)))))
(assert (=> (= (x1211 x902 1) (x1211 x5421 1)) (= x902 x5421)))
(assert (not (= (x1211 x3576 1) (+ x98 3))))
(assert (x263 x5305 x1716))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x1919 1)))))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x928 1) x952))))
(assert (not (= 1889567281 (x1211 x5917 1))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x3148 3)))))
(assert (= (=> (= (< x463 x4986) x2093) (and (=> x2093 x5361) (=> (and (= x943 x1328) (= x1914 x2505) (= x4986 x2829) (not x2093) (= x5802 x1774) (= (x3337 (- x463 x4986)) x3553) (= x2190 x6152) (= x5847 x3306)) x6044))) x3614))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 x4017 1)))))
(assert (not (= (x1211 x2060 1) 274184521717934524641157099916833587231)))
(assert (not (= (+ 4 x1186) (x1211 x3645 1))))
(assert (=> (> (+ 10000 1) x4218) (not (= (+ 1 x98) x4218))))
(assert (x4630 x2555))
(assert (x6051 x5578))
(assert (=> (> (+ 10000 1) x4293) (not (= (+ x3962 2) x4293))))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (+ x4054 2)))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x4017 1)))))
(assert (not (= (+ x1186 1) (+ x3962 4))))
(assert (not (= (x1211 x1852 1) 2514000705)))
(assert (= (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x5816) x3370) (= x5281 (= x3370 x5816))) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1260) (= (x5347 1461501637330902918203684832716283019655932542975 x704) x4293) (= 1 x3785) (>= x1260 0) (= x4438 32) x5281 (= x2426 (x1211 x4293 1)) (= (x3247 x2426) x1260)) x3439) (=> (not x5281) x235))) x1398))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x5421 1)))))
(assert (x5138 x1292 x3788))
(assert (=> (> (+ 10000 1) x4218) (not (= (x1211 x4198 1) x4218))))
(assert (=> (= (x1211 x4800 1) (x1211 x6069 1)) (= x6069 x4800)))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x4090 3)))))
(assert (x4630 x3459))
(assert (not (= 1889567281 (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x3543) (not (= (+ 2 x2042) x3543))))
(assert (not (= (+ x3457 2) (+ x5409 1))))
(assert (=> (< (- x1089 1) 10000) (not (= (+ x98 3) x1089))))
(assert (not (= (x1211 x3513 1) 274184521717934524641157099916833587202)))
(assert (not (= (x1211 x3992 2) 1)))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (x1211 x310 2)))))
(assert (not (= 2743638299 (+ 2 x3457))))
(assert (= x650 (and (not x93) x3878)))
(assert (=> (> (+ 10000 1) x4218) (not (= (x1211 x1112 1) x4218))))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x310 2) x4284))))
(assert (not (= 1000000000000000000 (x1211 x208 1))))
(assert (x4630 x1140))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x3576 1))))
(assert (x4630 x1391))
(assert (x4630 x1778))
(assert (=> (= (x1211 x2862 1) (x1211 x1849 1)) (= x2862 x1849)))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x4198 1) x1956))))
(assert (=> (< (- x3148 1) 10000) (not (= (x1211 x1919 1) x3148))))
(assert (x4630 x5565))
(assert (x4630 x5405))
(assert (x4630 x5809))
(assert (x4630 x812))
(assert (= (x2690 x1334) (ite (and x3830 (not x4813) x3235) (x1856 x1334) (x4892 x1334))))
(assert (not (= 3939881817 (x1211 x3836 1))))
(assert (not (= (+ x2042 1) (x1211 x3409 1))))
(assert (not (= (+ x2042 3) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x4630 x5300))
(assert (not (= (x1211 x3414 1) (x406 1))))
(assert (x4630 x2568))
(assert (not (= (x1211 x740 2) (x1211 x935 1))))
(assert (x6051 x3462))
(assert (= x1231 (=> (= x4649 (= 274184521717934524641157099916833587206 x6037)) (and (=> x4649 x1314) (=> (not x4649) x5333)))))
(assert (x6051 x2451))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x946) (not (= (+ x3948 1) x946))))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x1451 1) x3755))))
(assert (=> (< (- x4198 1) 10000) (not (= (x1211 x208 1) x4198))))
(assert (x4630 x5973))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x1956 1)))))
(assert (x4630 x4642))
(assert (not (= 4294967296 (+ x1186 3))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (+ 5 x2042)))))
(assert (=> (= (x1211 x946 1) (x1211 x4198 1)) (= x4198 x946)))
(assert (not (= (x1211 x3513 1) 3939881817)))
(assert (not (= (+ x2042 3) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x4630 x2443))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 5 x3962))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x4610 1)))))
(assert (not (= 3939881817 (x1211 x361 1))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x935 1)))))
(assert (not (= (x1211 x3148 3) 3939881817)))
(assert (x4630 x5790))
(assert (=> (< (- x3409 1) 10000) (not (= (x1211 x4198 1) x3409))))
(assert (x4630 x5377))
(assert (=> (> (+ 10000 1) x1219) (not (= (+ 1 x5409) x1219))))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x1852 1) x2696))))
(assert (not (= (x1211 x3836 1) (+ 3 x3962))))
(assert (x4630 x483))
(assert (= (and x870 x1005) x3876))
(assert (= x569 (=> (and (= (uninterp_mod (* x5246 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5234) (= x4751 (> x5348 0))) (and (=> (and x4751 (= x5890 (- (/ x5234 x5348) (uninterp_frac x5234 x5348))) (= x447 x5890)) x2054) (=> (not x4751) x3198)))))
(assert (=> (= (x1211 x3409 1) (x1211 x3836 1)) (= x3409 x3836)))
(assert (=> (= (+ 3 x3962) (+ 3 x2042)) (= x3992 x740)))
(assert (= (=> (and (= x5541 (or (> x2062 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2062 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2062) true)))) (= x2860 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x634)) (= (x6031 (+ x2062 31)) x634) (= (x6031 (+ x4474 x2860)) x3)) (and (=> x5541 x3198) (=> (not x5541) x678))) x5013))
(assert (= x1172 (and x5581 x3953)))
(assert (x4630 x2028))
(assert (not (= (x1211 x1956 1) (+ x4054 2))))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x361 1) x928))))
(assert (not (= (x1211 x740 2) 18446744073709551615)))
(assert (x4630 x3849))
(assert (=> (= (x1211 x1849 1) (x1211 x4527 1)) (= x1849 x4527)))
(assert (=> (= (x1211 x2060 1) (x1211 x3409 1)) (= x3409 x2060)))
(assert (x4630 x4858))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x928 1) x1248))))
(assert (=> (> (+ 10000 1) x2820) (not (= (+ 1 x2042) x2820))))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x5500 1) x1919))))
(assert (= (=> (= x3523 (= x5617 274184521717934524641157099916833587202)) (and (=> (and (< 0 x1367) (>= x1774 0) (= (x3910 274184521717934524641157099916833587202) x1367) x3523 (= x229 x1430) (= 4 x229) (= x3589 1) (< x1868 826074471) (not (< x229 4)) (= 404098525 x1868) (<= x1774 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 157198259 x1868)) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1689) (not (= 117300739 x1868)) (= 32 x4108)) x1976) (=> (not x3523) x4085))) x521))
(assert (=> (< (- x1598 1) 10000) (not (= (+ 3 x98) x1598))))
(assert (not (= 274184521717934524641157099916833587231 (+ 1 x1186))))
(assert (x4630 x3345))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x4610 1)))))
(assert (x6051 x4211))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x3414 1)))))
(assert (not (= (x1211 x902 1) 2743638299)))
(assert (x4630 x1238))
(assert (x6051 x3786))
(assert (=> (= (x1211 x4800 1) (x1211 x4293 1)) (= x4800 x4293)))
(assert (=> (= (x1211 x3414 1) (x1211 x1919 1)) (= x1919 x3414)))
(assert (not (= 404098525 (+ x1186 1))))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x4610 1) x6069))))
(assert (x4630 x2626))
(assert (x4630 x1162))
(assert (=> (> (+ 10000 1) x182) (not (= (x1211 x902 1) x182))))
(assert (x4630 x5984))
(assert (= (or (and (not x4416) x2766) (and (not x5038) x1127)) x2313))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x4527 1))))
(assert (not (= (x1211 x208 1) (+ 4 x2042))))
(assert (not (= (+ x3948 1) (x1211 x3513 1))))
(assert (x4630 x2277))
(assert (not (= (+ x2042 3) (x1211 x3148 3))))
(assert (x4630 x3461))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x946 1) x1219))))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x5421 1) x946))))
(assert (x4630 x5721))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x1956 1) x4610))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x3576 1) x1248))))
(assert (not (= 3 (x1211 x946 1))))
(assert (=> (< (- x5800 1) 10000) (not (= (+ x98 1) x5800))))
(assert (= (ite (and (not x305) x757 x5626) (x2597 x2992) (x3247 x2992)) (x3313 x2992)))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (+ 4 x2042)))))
(assert (x6051 x2671))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ 3 x2042))))
(assert (not (= (+ 4 x2042) (+ x3962 3))))
(assert (not (= (x1211 x4090 3) (x1211 x3992 2))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x1451 1))))
(assert (not (= (x1211 x1852 1) (+ x1186 3))))
(assert (x4630 x4252))
(assert (x4630 x3042))
(assert (not (= (x1211 x310 2) 274184521717934524641157099916833587231)))
(assert (= (and (not x747) x784) x2162))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (+ x2042 2)))))
(assert (= (=> (and (= (x3910 x2820) x446) (= x2160 (x4567 128)) (= (= 0 x446) x43) (= 4 x2630)) (and (=> x43 x5361) (=> (not x43) x1840))) x1344))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x1248) (not (= x1248 (x1211 x3409 1)))))
(assert (x4630 x3655))
(assert (x4630 x166))
(assert (= (or x3869 (and (not x2000) x5467)) x3684))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x3414 1) x4644))))
(assert (x4630 x4052))
(assert (x4630 x351))
(assert (x4630 x5606))
(assert (not (= (x1211 x310 2) (x1211 x1451 1))))
(assert (= 0 (x5966 x3813)))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (+ 4 x1186)))))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (+ x2042 3)))))
(assert (not (= 3 (x1211 x928 1))))
(assert (=> (= (x1211 x5745 1) (x1211 x3513 1)) (= x5745 x3513)))
(assert (=> (= (x1211 x182 1) (x1211 x3576 1)) (= x3576 x182)))
(assert (not (= (x1211 x3836 1) (+ 2 x3962))))
(assert (=> (< (- x2060 1) 10000) (not (= (x1211 x3543 1) x2060))))
(assert (= (x1448 x1222) 0))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x4113) x1313) (and (=> x1313 x4750) (=> (not x1313) x3545))) x2163))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x4284 1)))))
(assert (not (= (x1211 x3576 1) 2743638299)))
(assert (=> (= (x1211 x3409 1) (x1211 x3414 1)) (= x3409 x3414)))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (+ 4 x3962)))))
(assert (x6051 x5736))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x3543 1)))))
(assert (= x2770 (or (and x3209 (not x4657)) (and (not x760) x2223) (and x2883 (not x6014)))))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 x4800 1)))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x935 1)))))
(assert (not (= (x1211 x5745 1) 274184521717934524641157099916833587231)))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x4284 1)))))
(assert (= (and x1181 x4717) x3023))
(assert (not (= (+ x3962 5) (x1211 x3148 3))))
(assert (= (=> (and (= x1480 (> x3621 x2744)) (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)) x2744) (= (x4305 x1392) x1232)) (and (=> x1480 x5361) (=> (not x1480) x3701))) x1646))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x1211 x3513 1)))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x3992 2)))))
(assert (= x3856 (or (and x5580 x3030) (and x2599 x1938))))
(assert (x4630 x2385))
(assert (=> (< (- x4527 1) 10000) (not (= (+ 1 x98) x4527))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (+ x3962 1)))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x5421 1)) (= x5421 274184521717934524641157099916833587231)))
(assert (=> (= (x1211 x4017 1) (x1211 x3513 1)) (= x3513 x4017)))
(assert (= x2596 (and x3529 x6015)))
(assert (not (= (x1211 x3576 1) (+ x2042 4))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (+ x1186 1)))))
(assert (=> (= (x1211 x1849 1) (x1211 x5917 1)) (= x1849 x5917)))
(assert (x4630 x4733))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x3645 1) x2601))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x5745 1))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x4198 1)))))
(assert (not (= (x1211 x3513 1) (+ 3 x2042))))
(assert (x4630 x1675))
(assert (x4630 x6099))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x3576 1)))))
(assert (x4630 x790))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x3836 1)))))
(assert (=> (> (+ 10000 1) x1112) (not (= (+ x2042 1) x1112))))
(assert (=> (= (x1211 x3576 1) (x1211 x2862 1)) (= x3576 x2862)))
(assert (= x2763 (or x2271 (and x1097 (not x1418)))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x3409 1))))
(assert (= x3495 (and (not x3634) x3861)))
(assert (not (= (+ x3962 2) (x1211 x3414 1))))
(assert (= (or (and x3002 x4215) (and x5996 x4651)) x3585))
(assert (not (= (+ 4 x1186) (+ 1 x5409))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ x98 1))))
(assert (x4630 x5018))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (x1211 x3543 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= (x1211 x5745 1) x5745))))
(assert (not (= 2835717307 (x1211 x3148 3))))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x361 1) x4554))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x4090 3)))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (x1211 x1112 1)))))
(assert (x4630 x6069))
(assert (= (x1044 x4887 1) (- (/ x4887 2) (uninterp_frac x4887 2))))
(assert (x4630 x1956))
(assert (x6051 x2966))
(assert (x4630 x3339))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (+ x3457 2)))))
(assert (=> (> (+ 10000 1) x3148) (not (= (+ 4 x2042) x3148))))
(assert (=> (= (x1211 x5421 1) (x1211 x3576 1)) (= x5421 x3576)))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 x3148 3) x3513))))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x3836 1) x2696))))
(assert (not (= 4294967296 (+ 4 x3962))))
(assert (x4630 x5251))
(assert (= (=> (and (= x2571 x4311) (= x3224 x804)) x3060) x815))
(assert (= (x4192 x3029) 0))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x4293 1)))))
(assert (x4630 x6073))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x740 2) x4063))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (+ x2042 2)))))
(assert (not (= 4294967296 (x1211 x740 2))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (+ x98 4)))))
(assert (not (= 404098525 (+ 2 x3457))))
(assert (x4630 x6171))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (+ 5 x2042)))))
(assert (x4630 x49))
(assert (= (x4002 x4834) (ite (and (not x4813) x3235 x3830) (x4236 x4834) (x3247 x4834))))
(assert (= (=> (and (= x5366 (= x688 x3557)) (= x3557 (x5347 1461501637330902918203684832716283019655932542975 x688))) (and (=> (not x5366) x1839) (=> x5366 x5049))) x391))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (+ 3 x1186)))))
(assert (= (or x5653 (and x3146 x6038)) x2403))
(assert (not (= 4168891048 (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x3771) (not (= (+ x3962 3) x3771))))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x4527 1) x4293))))
(assert (not (= 1 (x1211 x935 1))))
(assert (= (or (and x3898 x216) (and x3093 x1511) (and x4809 x4389) (and x1321 x748)) x2301))
(assert (x4630 x1158))
(assert (x4630 x1649))
(assert (=> (= (x1211 x4293 1) (x1211 x4799 1)) (= x4293 x4799)))
(assert (= x3335 (and x390 (not x505))))
(assert (not (= (x1211 x361 1) (+ 3 x3962))))
(assert (=> (< (- x4293 1) 10000) (not (= (+ x3962 4) x4293))))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x946 1) x208))))
(assert (not (= 1000000000000000000 (x1211 x3513 1))))
(assert (=> (< (- x1919 1) 10000) (not (= (x1211 x2862 1) x1919))))
(assert (not (= (x1211 x4090 3) (x1211 x3576 1))))
(assert (= (x2110 x5869) 0))
(assert (x4630 x461))
(assert (= x5960 (or x167 (and x2464 x6177))))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x4800 1) x2820))))
(assert (= x5266 x1846))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x5500 1)))))
(assert (=> (> (+ 10000 1) x5617) (not (= (+ 3 x3962) x5617))))
(assert (not (= (x1211 x4090 3) 274184521717934524641157099916833587202)))
(assert (not (= (x1211 x3576 1) 4168891048)))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (+ 1 x2042)))))
(assert (x399 x3740))
(assert (x4630 x993))
(assert (x4630 x5522))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (+ 3 x2042)))))
(assert (=> (> (+ 10000 1) x2862) (not (= (x1211 x935 1) x2862))))
(assert (x4630 x2994))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x2862 1)))))
(assert (=> (< (- x2417 1) 10000) (not (= (x1211 x4017 1) x2417))))
(assert (x4630 x813))
(assert (= (=> (and (= x5656 x1427) (= x2138 x6099)) x113) x5439))
(assert (= x1035 (=> (and (= x3158 0) (= x228 x3393)) x767)))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x935 1) x4400))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x3755 1)))))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (+ 4 x3962)))))
(assert (not (= (+ 5 x3962) (x1211 x1112 1))))
(assert (not (= (x1211 x4090 3) (x1211 x208 1))))
(assert (x4630 x312))
(assert (not (= (x1211 x5745 1) (x1211 x3148 3))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x3148 3))))
(assert (not (= 826074471 (+ 2 x2042))))
(assert (not (= (+ x1186 4) (+ x1186 3))))
(assert (= (=> (and (= (x6031 (+ 32 x3108)) x1794) (= (x5347 1461501637330902918203684832716283019655932542975 x3081) x6030) (= (x3021 x1794) x3081) (= x1233 (x6031 (+ 4 x2388))) (= x3006 (= x4031 0)) (= (x3910 x4644) x4031)) (and (=> x3006 x5361) (=> (and (= x177 (> x1031 0)) (not x3006) (or (and (< x4670 4294967296) x177 (= x5094 1)) (and (= x1031 x5094) (not x177)))) x449))) x138))
(assert (x4630 x5698))
(assert (= x2986 (=> (and (= (< (x872 274184521717934524641157099916833587231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x864) (= x3914 x5895) (= x5668 x2888) x864 (= (x3365 x2549) x25)) x5048)))
(assert (not (= (x1211 x4799 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x4630 x5696))
(assert (not (= (x1211 x4284 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= (x1211 x3836 1) (+ x3962 1))))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x1112 1) x5617))))
(assert (= x4602 (or (and x3253 x2099) (and x2459 x2313) (and x5878 x2275) (and x1732 x33))))
(assert (=> (> (+ 10000 1) x1219) (not (= (+ x3948 1) x1219))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x5500 1)))))
(assert (=> (= (x1211 x4610 1) (x1211 x4800 1)) (= x4610 x4800)))
(assert (not (= (+ 1 x98) 3)))
(assert (x4630 x5511))
(assert (=> (= (x1211 x5500 1) (x1211 x3414 1)) (= x3414 x5500)))
(assert (=> (= (x1211 x935 1) (x1211 x2060 1)) (= x2060 x935)))
(assert (x4630 x4840))
(assert (= (=> (and (= (x1496 x3577) x4061) (= x2998 (< 0 x5949))) (and (=> (and (= x4738 1) (not x2998)) x5151) (=> x2998 x4464))) x2978))
(assert (not (= (+ x3962 3) (x1211 x1852 1))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x4198 1) x5745))))
(assert (x4630 x2725))
(assert (= 0 (x4536 x6068)))
(assert (=> (> (+ 10000 1) x4063) (not (= (x1211 x3148 3) x4063))))
(assert (=> (= (x1211 x3576 1) (x1211 x4799 1)) (= x4799 x3576)))
(assert (=> (= (x1211 x4610 1) (x1211 x6069 1)) (= x6069 x4610)))
(assert (not (= (+ x1186 4) 2743638299)))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x3513 1) x1338))))
(assert (x4630 x2408))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x3414 1) x928))))
(assert (x399 x4293))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (+ x3962 1)))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x3992 2) x3543))))
(assert (x4630 x4072))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (+ x3962 5)))))
(assert (= 0 (x5810 x2061)))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (+ 1 x2042)))))
(assert (= x2891 (=> (and (= (x3551 x1629) x1628) (= x24 (> x1628 0))) (and (=> (not x24) x5361) (=> x24 x5635)))))
(assert (not (= (+ 2 x3457) 274184521717934524641157099916833587231)))
(assert (=> (> (+ 10000 1) x1248) (not (= x1248 (x1211 x2060 1)))))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x1849 1) x1956))))
(assert (x4630 x3682))
(assert (not (= (+ 3 x1186) (x1211 x5917 1))))
(assert (x4630 x5556))
(assert (not (= 18446744073709551615 (x1211 x4800 1))))
(assert (x6051 x5022))
(assert (not (= (+ 3 x3962) (x1211 x5745 1))))
(assert (=> (> (+ 10000 1) x83) (not (= (x406 1) x83))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x935 1)))))
(assert (= x3631 (and (not x5581) x3953)))
(assert (= x1327 (or x860 (and x6109 (not x4151)))))
(assert (not (= (x1211 x5917 1) (+ 2 x2042))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (+ x3962 1)))))
(assert (not (= (x1211 x740 2) (+ 1 x5409))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (+ 4 x2042)))))
(assert (x4630 x345))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x3148 3))))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (+ 2 x3962)))))
(assert (=> (= (x1211 x4527 1) (x1211 x935 1)) (= x4527 x935)))
(assert (=> (< (- x902 1) 10000) (not (= (+ 5 x3962) x902))))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 x3414 1) x3786))))
(assert (not (= (+ x1186 4) 3)))
(assert (= x1312 (=> (and (= (x3137 x2388) x2009) (= x2749 (x3088 x3108)) (= (< 0 x2749) x5813)) (and (=> (not x5813) x5361) (=> x5813 x2882)))))
(assert (x5138 x4577 x5355))
(assert (not (= (+ 5 x2042) (x1211 x3148 3))))
(assert (=> (= (x1211 x1919 1) (x1211 x3836 1)) (= x1919 x3836)))
(assert (not (= (x1211 x946 1) (x1211 x310 2))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x3992 2))))
(assert (not (= (+ x3962 2) (x1211 x1849 1))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x928 1))))
(assert (= (x5888 x203) (ite (and (not x3708) x2869 x3512) (x5079 x203) (ite (and (not x5704) (not x3512) x2869 (not x3708)) (x196 x203) (x4548 x203)))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x4090 3)))))
(assert (=> (< (- x1775 1) 10000) (not (= (+ 1 x2042) x1775))))
(assert (not (= (+ x1186 1) 274184521717934524641157099916833587206)))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x935 1) x4293))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x1849 1)))))
(assert (x4630 x3091))
(assert (= x2608 (or (and (not x6063) x5121) (and x4032 x1702))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x310 2))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (x1211 x208 1)))))
(assert (= x1773 (=> (= (= x83 274184521717934524641157099916833587202) x4609) (and (=> (not x4609) x3221) (=> (and (= x2557 x744) (> x715 0) (= 826074471 x3677) (= x2557 4) (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x1713) (= 1 x711) (= x715 (x3910 274184521717934524641157099916833587202)) (>= x1914 0) (not (> 826074471 x3677)) (not (> 4 x2557)) x4609 (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1696 32)) x5881)))))
(assert (not (= 157198259 (+ 2 x3457))))
(assert (not (= 404098525 (x1211 x361 1))))
(assert (= 0 (x4952 x5405)))
(assert (x4630 x454))
(assert (not (= (x1211 x5917 1) 4168891048)))
(assert (not (= (x1211 x4218 2) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x4630 x2736))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x902 1)) (= 274184521717934524641157099916833587231 x902)))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x902 1)))))
(assert (x4630 x4083))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x4218 2)))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x1849 1) x3166))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x4527 1) x5745))))
(assert (=> (> (+ 10000 1) x182) (not (= (+ 2 x2042) x182))))
(assert (=> (= (x1211 x5421 1) (x1211 x1919 1)) (= x5421 x1919)))
(assert (= x1957 (and x3182 (not x43))))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= (x1211 x3576 1) (+ x1186 4))))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x1852 1) x3992))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x1919 1)))))
(assert (not (= (x1211 x935 1) 3939881817)))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (+ x98 4)))))
(assert (x4630 x1576))
(assert (not (= (x1211 x4017 1) (+ 1 x1186))))
(assert (not (= 1000000000000000000 (x1211 x1956 1))))
(assert (=> (= (x1211 x1956 1) (x1211 x902 1)) (= x1956 x902)))
(assert (= (ite (and x912 (not x4701) x832) (x5930 x1818) (ite (and (not x832) (not x1605) (not x4701) x912) (x5589 x1818) (x3902 x1818))) (x2530 x1818)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 1 x1186))))
(assert (not (= (+ x98 3) (x1211 x4017 1))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (x1211 x4527 1)))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (x1211 x1849 1)))))
(assert (not (= (x1211 x6069 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x4630 x3577))
(assert (= (x124 x333) (ite (= x4112 x333) x2796 (x4002 x333))))
(assert (=> (< (- x3230 1) 10000) (not (= (+ x3962 2) x3230))))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x310 2) x561))))
(assert (x4630 x5964))
(assert (not (= (+ 2 x3962) (x1211 x208 1))))
(assert (= x453 (=> (and (= x6004 (x2262 x4433)) (= x4433 (x6031 (+ 128 x3118))) (= x5017 (x6031 (+ 32 x3118))) (= 4 x2576) (= x2601 (x5347 1461501637330902918203684832716283019655932542975 x2642)) (= x2642 (x1390 x5017)) (= x4683 (= 0 x6073)) (= (x3910 x2601) x6073)) (and (=> (not x4683) x3157) (=> x4683 x3198)))))
(assert (=> (= (x1211 x3543 1) (x1211 x5421 1)) (= x5421 x3543)))
(assert (not (= 404098525 (+ 4 x1186))))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x1451 1) x4400))))
(assert (=> (< (- x5745 1) 10000) (not (= (x406 1) x5745))))
(assert (x4630 x3275))
(assert (not (= (x1211 x4218 2) 2835717307)))
(assert (x4630 x2336))
(assert (not (= (x1211 x928 1) (+ x98 1))))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x5500 1) x2549))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x1919 1) x1775))))
(assert (not (= (x406 1) (x1211 x740 2))))
(assert (not (= 3 (+ x3457 2))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (+ 2 x4054)))))
(assert (=> (= (x1211 x4284 1) (x1211 x4799 1)) (= x4799 x4284)))
(assert (not (= 117300739 (x1211 x3836 1))))
(assert (= (or (and x3001 x2112) (and x2545 x4019)) x3073))
(assert (not (= 2514000705 (+ 1 x1186))))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (+ 1 x2042)))))
(assert (not (= 2 (+ x3962 3))))
(assert (not (= (+ x2042 4) 1889567281)))
(assert (=> (< (- x4644 1) 10000) (not (= (x1211 x4800 1) x4644))))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x902 1)))))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x3513 1) x2862))))
(assert (= (ite (= x374 x4407) 0 (x2680 x374)) (x4908 x374)))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x3645 1)))))
(assert (not (= (x1211 x1852 1) 4168891048)))
(assert (x4630 x372))
(assert (= (=> (and (= (x5347 255 x5545) x3455) (= x3958 (= x5545 x3455)) (= x5545 (x649 x846))) (and (=> x3958 x5554) (=> (not x3958) x3198))) x5309))
(assert (not (= (+ 3 x3962) (x1211 x4284 1))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (+ x3962 2)))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (+ x3962 2)))))
(assert (not (= (+ x98 3) (+ x1186 1))))
(assert (x4630 x2567))
(assert (not (= 157198259 (x1211 x1919 1))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 3 x3962))))
(assert (x4630 x4180))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x5421 1))))
(assert (x6051 x5377))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x3992 2) x4218))))
(assert (x4630 x6106))
(assert (=> (> (+ 10000 1) x3409) (not (= (x1211 x1956 1) x3409))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 3 x1186))))
(assert (not (= (+ 3 x3962) (x1211 x740 2))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (+ x98 1)))))
(assert (not (= (x1211 x4610 1) 18446744073709551615)))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x3148 3) x5617))))
(assert (not (= (x1211 x4800 1) (x1211 x740 2))))
(assert (x4630 x4860))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x902 1)))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x3645 1)))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x1112 1)))))
(assert (x4630 x3044))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x5917 1))))
(assert (not (= (+ x3948 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 274184521717934524641157099916833587231 1)))))
(assert (= (and x5477 (not x4901)) x4979))
(assert (=> (= (x1211 x5500 1) (x1211 x5421 1)) (= x5500 x5421)))
(assert (=> (> (+ 10000 1) x4218) (not (= (x1211 x5421 1) x4218))))
(assert (not (= 4168891048 (x1211 x902 1))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x4017 1) x3230))))
(assert (= (=> (and (= (< 1 x1720) x1998) (= x5177 x158) (not x1998) (= (x3088 x1754) x1720) (= x1754 (x3608 x1015))) x726) x111))
(assert (not (= (x1211 x4284 1) 274184521717934524641157099916833587206)))
(assert (=> (= (x1211 x2862 1) (x1211 x1852 1)) (= x1852 x2862)))
(assert (not (= 826074471 (+ x98 1))))
(assert (x2660 x5949 x3398))
(assert (x4630 x711))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x4293 1)))))
(assert (= x2971 (=> (and (= x5506 (= x3292 x2894)) (= x301 (x236 x1822)) (= (x3725 x3823) x2894) (= x424 (x3208 x1355)) (= x4373 (x1208 x5492)) (= (x5474 x301) x3292)) (and (=> x5506 x2454) (=> (not x5506) x3198)))))
(assert (=> (< (- x1303 1) 10000) (not (= (+ x3962 5) x1303))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x3645 1))))
(assert (not (= (x1211 x3992 2) (x1211 x1112 1))))
(assert (= x5868 (and x4765 (not x5383))))
(assert (not (= (+ x98 3) (x1211 x310 2))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (+ x2042 4)))))
(assert (not (= (+ 1 x1186) (x1211 x5917 1))))
(assert (x4630 x5707))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x208 1) x2862))))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (x1211 x928 1)))))
(assert (=> (> (+ 10000 1) x4063) (not (= (+ 3 x98) x4063))))
(assert (= (and (not x2959) x3572) x1025))
(assert (=> (< (- x3511 1) 10000) (not (= (+ 1 x5409) x3511))))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (+ 1 x98)))))
(assert (=> (= (x1211 x3513 1) (x1211 x1112 1)) (= x1112 x3513)))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x406 1)))))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x1211 x4610 1)))))
(assert (not (= (x1211 x3576 1) 3)))
(assert (not (= 2514000705 (x1211 x4284 1))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (+ 3 x2042)))))
(assert (not (= (+ x2042 4) (x1211 x5421 1))))
(assert (=> (> (+ 10000 1) x2601) (not (= (+ 4 x1186) x2601))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (+ x1186 3)))))
(assert (= (and x2352 x1726) x5657))
(assert (x4630 x2536))
(assert (not (= (x1211 x3543 1) (+ x98 4))))
(assert (not (= (+ x98 1) (x1211 x1852 1))))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x935 1) x4284))))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x5421 1) x952))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x361 1))))
(assert (not (= (x1211 x4198 1) 1000000000000000000)))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x4527 1)))))
(assert (not (= (x1211 x902 1) (+ 4 x98))))
(assert (x4630 x1163))
(assert (= (=> (and (= (< 1 x2537) x3243) (= x1336 x1959) (= (x3088 x383) x2537) (not x3243)) x3761) x2948))
(assert (=> (> (+ 10000 1) x693) (not (= (x1211 x1956 1) x693))))
(assert (x4630 x4650))
(assert (not (= (x1211 x3645 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (= true x2096))
(assert (= (ite (and x912 x832 (not x4701)) (x3471 x4744) (ite (and (not x832) (not x1605) x912 (not x4701)) (x4664 x4744) (x432 x4744))) (x1985 x4744)))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x1956 1) x3740))))
(assert (= x922 (and (not x4868) x5760)))
(assert (x4630 x3554))
(assert (= 0 (x861 x5067)))
(assert (not (= (+ 1 x5409) 3)))
(assert (=> (= (x1211 x5917 1) (x1211 x3645 1)) (= x3645 x5917)))
(assert (x4630 x4371))
(assert (= (ite (= x5990 x807) x655 (x2690 x807)) (x1809 x807)))
(assert (=> (= (x1211 x3836 1) (x1211 x361 1)) (= x3836 x361)))
(assert (x4630 x1920))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (+ x4054 2)))))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x2060 1) x4063))))
(assert (x6051 x4820))
(assert (x4630 x1036))
(assert (not (= (x1211 x182 1) (+ 4 x3962))))
(assert (x4630 x5915))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (x1211 x182 1)))))
(assert (=> (< (- x4017 1) 10000) (not (= (x1211 x4610 1) x4017))))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (+ 4 x2042)))))
(assert (x4630 x5518))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (x1211 x4090 3)))))
(assert (=> (< (- x4198 1) 10000) (not (= (+ 4 x1186) x4198))))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (x1211 x3755 1)))))
(assert (x6051 1))
(assert (= (=> (and (not (> 2743638299 x49)) (= (x3337 (- x5115 4)) x4505) (= x49 3939881817) (= x4654 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4505) true) (> 96 x4505)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4505))) (not (< x5115 4)) (not (> 3939881817 x49)) (> 4168891048 x49)) (and (=> (not x4654) x1070) (=> x4654 x3198))) x5221))
(assert (x4630 x5862))
(assert (not (= (+ x3962 5) 3)))
(assert (not (= (x1211 x5917 1) (+ x2042 3))))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 x310 2) x3513))))
(assert (x4630 x3570))
(assert (x5138 x3460 x2969))
(assert (x4630 x3438))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x3148 3) x3836))))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x928 1)))))
(assert (x4630 x1817))
(assert (not (= (+ 4 x98) 2)))
(assert (not (= 4294967296 (+ x5409 1))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (+ x3962 3)))))
(assert (=> (< (- x3166 1) 10000) (not (= (+ 3 x2042) x3166))))
(assert (=> (= (x1211 x4799 1) (x1211 x4198 1)) (= x4799 x4198)))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (+ x98 4)))))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x1852 1) x3230))))
(assert (not (= (+ x1186 4) (x1211 x3992 2))))
(assert (x2660 x4887 x1798))
(assert (not (= (+ 1 x98) 1461501637330902918203684832716283019655932542975)))
(assert (=> (= (x1211 x902 1) (x1211 x2060 1)) (= x902 x2060)))
(assert (=> (> (+ 10000 1) x4218) (not (= (+ x3962 3) x4218))))
(assert (x4630 x3857))
(assert (not (= (x1211 x946 1) (+ 4 x98))))
(assert (x4630 x5949))
(assert (= x4340 (=> (and (= x5736 (x6031 (+ x2563 31))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5736) x4514) (= (x6031 (+ x4514 x1241)) x1523) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2563) (and (> 32 x2563) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2563)))) x6084)) (and (=> (not x6084) x4855) (=> x6084 x3198)))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (x1211 x1919 1)))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (x1211 x5421 1)))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x3513 1)))))
(assert (= (x2680 x374) 0))
(assert (not (= (x1211 x3992 2) (+ x2042 1))))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x1852 1)))))
(assert (not (= (x1211 x935 1) (+ x3457 2))))
(assert (=> (< (- x935 1) 10000) (not (= x935 (x1211 x5745 1)))))
(assert (x4630 x2407))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x946 1)))))
(assert (= (=> (and (= x5230 (x5953 x5267)) (= (< 0 x5230) x3214)) (and (=> x3214 x1747) (=> (not x3214) x3198))) x2304))
(assert (=> (< (- x1219 1) 10000) (not (= (+ 1 x3962) x1219))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x5421 1)))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x182 1)))))
(assert (=> (= (x1211 x3409 1) (x1211 x935 1)) (= x3409 x935)))
(assert (= (=> (and (= (x3542 x4849) x5035) (= x2758 (x5347 1461501637330902918203684832716283019655932542975 x424)) (= (x6031 (+ x3823 32)) x4849) (= x5148 (x6031 (+ x1381 4))) (= (x5347 1461501637330902918203684832716283019655932542975 x4373) x3872) (= (x5347 1461501637330902918203684832716283019655932542975 x4577) x4110) (= (x6031 (+ x1381 36)) x3341) (= x4603 (x3910 x2758)) (= x3865 (= 0 x4603))) (and (=> (and (= x4632 (< 0 x1223)) (not x3865) (or (and (not x4632) (= x1223 x1910)) (and (= x1910 1) (> 4294967296 x166) x4632))) x1196) (=> x3865 x3198))) x684))
(assert (not (= (x1211 x740 2) (x1211 x2060 1))))
(assert (=> (> (+ 10000 1) x1219) (not (= (x1211 x3755 1) x1219))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (+ 2 x3457)))))
(assert (= x2509 (=> (and (= x1235 (x3219 x2385)) (= x4515 (x3608 x1015)) (= (x3088 x4515) x3359) (= x2451 (x214 x2686)) (= (> x3359 0) x118)) (and (=> (not x118) x5361) (=> x118 x5794)))))
(assert (not (= (+ 5 x3962) 4294967296)))
(assert (not (= (+ 3 x98) 274184521717934524641157099916833587231)))
(assert (x4630 x2309))
(assert (= (or x4569 (and x4295 x5281)) x2023))
(assert (=> (= (x1211 x1852 1) (x1211 x3645 1)) (= x1852 x3645)))
(assert (not (= (+ x1186 3) (x1211 x4090 3))))
(assert (x4630 x1261))
(assert (=> (= (x1211 x1919 1) (x1211 x1112 1)) (= x1112 x1919)))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x3699) (not (= (x1211 x1451 1) x3699))))
(assert (=> (< (- x902 1) 10000) (not (= x902 (+ 1 x2042)))))
(assert (x4630 x5537))
(assert (x4630 x4111))
(assert (=> (= (x1211 x946 1) (x1211 x1112 1)) (= x946 x1112)))
(assert (= (and x1537 (not x4078)) x63))
(assert (= x2837 (or x2403 x2357)))
(assert (not (= 826074471 (x1211 x5500 1))))
(assert (= (x785 x947) (ite (and (not x4701) x832 x912) (x5843 x947) (ite (and (not x1605) x912 (not x832) (not x4701)) (x2207 x947) (x2446 x947)))))
(assert (x4630 x6115))
(assert (x4630 x1849))
(assert (= x2957 (=> (= x3430 (= 274184521717934524641157099916833587206 x3255)) (and (=> (not x3430) x1200) (=> x3430 x5092)))))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x4293 1) x3511))))
(assert (not (= 2 (x1211 x4284 1))))
(assert (= (and x2624 x1834) x308))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 x5421 1)))))
(assert (x4630 x2569))
(assert (not (= (x1211 x6069 1) (+ x3962 2))))
(assert (not (= (x1211 x310 2) (x1211 x3755 1))))
(assert (not (= (+ 1 x3948) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x2060 1))))
(assert (x4630 x3980))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x4293 1) x310))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x4800 1)))))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (x1211 x5745 1)))))
(assert (not (= 2743638299 (+ 4 x98))))
(assert (x4630 x717))
(assert (= x5091 (or (and x1521 x900) (and x3960 x1802))))
(assert (x549 x2877))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x1956 1)))))
(assert (not (= (x1211 x1919 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (= (and x3582 x4597) x2702))
(assert (not (= (+ x3457 2) (x1211 x3409 1))))
(assert (=> (< (- x4107 1) 10000) (not (= (+ 1 x3948) x4107))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x902 1)))))
(assert (x4630 x2418))
(assert (not (= (+ 4 x2042) (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x1956 1) x4799))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (+ x3962 1)))))
(assert (x4630 x3274))
(assert (not (= (+ 4 x2042) 2835717307)))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (+ x98 3)))))
(assert (= x784 (and x5480 (not x5027))))
(assert (not (= (x1211 x902 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x4630 x5561))
(assert (= (and x2710 (not x5168)) x2279))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x4293 1)))))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (x1211 x361 1)))))
(assert (not (= (+ 2 x3962) (x1211 x3645 1))))
(assert (x4630 x2368))
(assert (x4630 x5105))
(assert (not (= (x1211 x4017 1) (+ 4 x1186))))
(assert (not (= (x1211 x902 1) (+ x3962 3))))
(assert (x4630 x618))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (x1211 x3513 1)))))
(assert (not (= (x1211 x310 2) 2514000705)))
(assert (x4630 x4896))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (+ x3948 1)))))
(assert (not (= (x1211 x740 2) (x1211 x3148 3))))
(assert (not (= (x1211 x3148 3) (x1211 x3576 1))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x3755 1)))))
(assert (=> (> (+ 10000 1) x3255) (not (= (x406 1) x3255))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x1451 1) x3166))))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x740 2)))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x4218 2)))))
(assert (x4630 x1867))
(assert (x4630 x5660))
(assert (not (= (x1211 x4218 2) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x3543 1) x4107))))
(assert (x4630 x161))
(assert (= (and (not x1291) x3335) x573))
(assert (x4630 x2612))
(assert (x4630 x2396))
(assert (x4630 x628))
(assert (x4630 x1440))
(assert (=> (= (x1211 x3645 1) (x1211 x2060 1)) (= x2060 x3645)))
(assert (not (= (x1211 x3836 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (> (+ 10000 1) x5617) (not (= (+ x3962 2) x5617))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x3513 1)))))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (x1211 x1849 1)))))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x1248) (not (= (+ x2042 5) x1248))))
(assert (x4630 x2922))
(assert (not (= (x1211 x3992 2) 274184521717934524641157099916833587231)))
(assert (x4630 x3934))
(assert (=> (< (- x902 1) 10000) (not (= x902 (x1211 x935 1)))))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (x1211 x6069 1)))))
(assert (x6051 x3849))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x3543 1) x4702))))
(assert (not (= (x1211 x4527 1) (x406 1))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x3962 3))))
(assert (= (ite (and x3879 x3327 (not x4004)) (x2110 x1692) (x5379 x1692)) (x1788 x1692)))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x1919 1)))))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 x935 1)))))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (x1211 x182 1)))))
(assert (not (= (x1211 x361 1) 1000000000000000000)))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (x1211 x928 1)))))
(assert (not (= (x1211 x361 1) (+ 3 x1186))))
(assert (=> (< (- x935 1) 10000) (not (= (+ x2042 4) x935))))
(assert (not (= (+ 3 x2042) (x1211 x4017 1))))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x1919 1) x2845))))
(assert (not (= (x1211 x3755 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (+ 5 x2042) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x5917 1)))))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x2060 1)))))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x361 1)))))
(assert (not (= (x1211 x3576 1) (+ x3457 2))))
(assert (x4630 x3099))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 x740 2)))))
(assert (not (= (+ 4 x98) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (= (x1211 x2060 1) (x1211 x4610 1)) (= x2060 x4610)))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (+ 4 x98)))))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x361 1)))))
(assert (=> (< (- x3576 1) 10000) (not (= (+ x98 3) x3576))))
(assert (not (= (x1211 x3414 1) (+ x2042 3))))
(assert (=> (< (- x1451 1) 10000) (not (= (+ 5 x3962) x1451))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (+ x2042 5)))))
(assert (=> (< (- x5745 1) 10000) (not (= (x1211 x6069 1) x5745))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x3409 1) x3992))))
(assert (x4630 x1360))
(assert (not (= (x1211 x3543 1) (x1211 x4218 2))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (+ x3948 1)))))
(assert (x4630 x4887))
(assert (x4630 x3699))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (x1211 x4800 1)))))
(assert (=> (< (- x2820 1) 10000) (not (= (+ x3962 5) x2820))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (x1211 x4527 1)))))
(assert (=> (< (- x935 1) 10000) (not (= x935 (+ x98 1)))))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x3513 1)))))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x3513 1) x4107))))
(assert (=> (= (x1211 x3414 1) (x1211 x361 1)) (= x3414 x361)))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x182 1)))))
(assert (=> (< (- x946 1) 10000) (not (= (+ 4 x3962) x946))))
(assert (=> (< (- x1919 1) 10000) (not (= (+ 2 x3457) x1919))))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x3513 1) x2845))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x4198 1) x3771))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x361 1)))))
(assert (= x39 (and x3689 x4923)))
(assert (x4630 x1602))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x4218 2) x3755))))
(assert (x4630 x1744))
(assert (= x4935 (=> (and (= x145 x771) (= x3078 x2788)) x3796)))
(assert (= (and x5091 (not x662)) x3668))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x3645 1)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x3836 1))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (+ x3962 3)))))
(assert (x5138 x2696 x3940))
(assert (x4630 x2738))
(assert (=> (< (- x361 1) 10000) (not (= (x1211 x4610 1) x361))))
(assert (not (= (+ x3962 2) (x1211 x4017 1))))
(assert (x4630 x4021))
(assert (=> (< (- x4017 1) 10000) (not (= (x1211 x4293 1) x4017))))
(assert (=> (< (- x3414 1) 10000) (not (= (x1211 x3543 1) x3414))))
(assert (=> (< (- x1849 1) 10000) (not (= (+ x3457 2) x1849))))
(assert (=> (= (x1211 x3513 1) (x1211 x6069 1)) (= x6069 x3513)))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x740 2)))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x4293 1))))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x3755 1)))))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x902 1))))
(assert (not (= (x1211 x310 2) (x1211 x1919 1))))
(assert (=> (< (- x1956 1) 10000) (not (= (+ x98 4) x1956))))
(assert (not (= (+ x2042 3) (x1211 x4293 1))))
(assert (not (= (x1211 x182 1) (+ 1 x1186))))
(assert (x4630 x2315))
(assert (=> (> (+ 10000 1) x3230) (not (= (+ 3 x3962) x3230))))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x1919 1)))))
(assert (=> (< (- x693 1) 10000) (not (= (+ 4 x98) x693))))
(assert (not (= (+ 2 x3457) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (+ x2042 5) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (x1211 x6069 1)))))
(assert (=> (= (x1211 x3576 1) (x1211 x3414 1)) (= x3576 x3414)))
(assert (x4630 x2156))
(assert (x4630 x5287))
(assert (=> (< (- x1248 1) 10000) (not (= (+ 4 x3962) x1248))))
(assert (=> (< (- x2060 1) 10000) (not (= (+ x2042 5) x2060))))
(assert (not (= 1000000000000000000 (+ x3457 2))))
(assert (not (= (x1211 x740 2) 2743638299)))
(assert (not (= (+ 1 x1186) (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x4063) (not (= (+ 4 x3962) x4063))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x4198 1)))))
(assert (= (ite (and x5731 (not x1694) x494) (x181 x4233) (x4892 x4233)) (x1441 x4233)))
(assert (=> (= (+ x1186 1) (+ x3962 1)) (= x740 x310)))
(assert (=> (= (x1211 x3513 1) (x1211 x4198 1)) (= x3513 x4198)))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x3543 1)))))
(assert (= (=> (= x2491 (< x2922 x243)) (and (=> x2491 x1178) (=> (not x2491) x3777))) x3012))
(assert (x4630 x1328))
(assert (x4630 x2799))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 x740 2)))))
(assert (not (= 1000000000000000000 (x1211 x182 1))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (+ 2 x4054)))))
(assert (x6051 x2028))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x3576 1)))))
(assert (=> (> (+ 10000 1) x4218) (not (= (+ 4 x2042) x4218))))
(assert (not (= 2743638299 (+ 1 x1186))))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x4218 2) x5800))))
(assert (not (= (+ x98 3) 404098525)))
(assert (=> (= (x1211 x5500 1) (x1211 x4198 1)) (= x5500 x4198)))
(assert (=> (> (+ 10000 1) x3166) (not (= (x1211 x4527 1) x3166))))
(assert (=> (> (+ 10000 1) x3166) (not (= (x1211 x361 1) x3166))))
(assert (= x359 (=> (and (= x969 (x6031 (+ 4 x823))) (= x1783 (x3337 (- x4529 x823))) (= x2046 (x6031 (+ 32 x3813))) (= (x6031 (+ x823 36)) x4529) (= x5800 (x5347 1461501637330902918203684832716283019655932542975 x1872)) (= (x5205 x2046) x2443) (= (x4200 x778) x2309) (= (x5347 1461501637330902918203684832716283019655932542975 x2309) x4354) (= (= 0 x4721) x2974) (= (x3910 x5800) x4721) (= x6164 (x6031 (+ x2443 64))) (= x1872 (x1323 x6164))) (and (=> x2974 x3198) (=> (not x2974) x1832)))))
(assert (= x5467 (and (not x1195) x223)))
(assert (not (= (+ x1186 3) (+ x5409 1))))
(assert (x4630 x121))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x4198 1)))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x3645 1)))))
(assert (not (= 3 (+ x2042 5))))
(assert (not (= (+ 4 x98) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (= (and (not x5462) x4621) x1707))
(assert (= (x2082 (- x4430 x3934)) 0))
(assert (=> (= (x1211 x902 1) (x1211 x3645 1)) (= x3645 x902)))
(assert (x263 x464 x6159))
(assert (x4630 x3075))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x4527 1) x1598))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x2060 1)))))
(assert (x4630 x4782))
(assert (x4630 x5906))
(assert (x251 x1391 x2955 x5334 x3343))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x4284 1) x740))))
(assert (not (= (x1211 x5917 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (+ x1186 1)))))
(assert (=> (> (+ 10000 1) x2154) (not (= (+ 1 x1186) x2154))))
(assert (=> (< (- x935 1) 10000) (not (= x935 (+ x1186 4)))))
(assert (=> (= (x1211 x4527 1) (x1211 x3409 1)) (= x3409 x4527)))
(assert (x4630 x1914))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x3836 1) x2154))))
(assert (not (= (+ x3962 1) 826074471)))
(assert (= (and (not x5208) x3787) x3909))
(assert (x4630 x1779))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (+ x3962 4)))))
(assert (x399 x4107))
(assert (not (= 404098525 (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x4284 1) x4107))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x4293 1)) (= 274184521717934524641157099916833587231 x4293)))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x935 1))))
(assert (not (= (+ x98 3) (x1211 x946 1))))
(assert (= (=> (and (= (= 0 x2342) x3138) (= (x3910 x4063) x2342) (= x5190 128)) (and (=> (not x3138) x6025) (=> x3138 x3198))) x4587))
(assert (not (= (x406 1) (x1211 x4800 1))))
(assert (= (=> (= (= x1089 274184521717934524641157099916833587202) x3172) (and (=> (and (= x2497 404098525) (= x4971 x4459) (not (> 4 x4971)) (>= x1774 0) (not (= 157198259 x2497)) (= 4 x4971) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1774) (= (x3910 274184521717934524641157099916833587202) x3862) (= 32 x6171) (< 0 x3862) x3172 (= x949 1) (< x2497 826074471) (= x751 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (= x2497 117300739))) x1191) (=> (not x3172) x3199))) x830))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x3409 1) x1775))))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x1852 1) x3645))))
(assert (not (= (x1211 x3992 2) 274184521717934524641157099916833587202)))
(assert (x4630 x4936))
(assert (=> (< (- x3699 1) 10000) (not (= (+ x1186 3) x3699))))
(assert (= x73 (=> (and (= (x3910 x3255) x2786) (= x5043 (= 0 x2786)) (= 128 x4731)) (and (=> (not x5043) x539) (=> x5043 x5361)))))
(assert (=> (> (+ 10000 1) x561) (not (= (+ 4 x3962) x561))))
(assert (x4630 x208))
(assert (=> (> (+ 10000 1) x5917) (not (= (+ x3457 2) x5917))))
(assert (x6051 x328))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x1211 x4090 3)))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x4198 1)))))
(assert (x4630 x3866))
(assert (= x1926 (=> (= x3534 (= x952 274184521717934524641157099916833587202)) (and (=> (and (<= 0 x4825) (not (> 4 x1974)) (= (x3910 274184521717934524641157099916833587202) x4629) (= 1 x2663) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4825) (> x4629 0) x3534 (= x1147 826074471) (= x82 32) (= x1974 x2144) (not (< x1147 826074471)) (= x6112 22270923681254677845691103109158760375340177724800803888364822332811285364736) (= 4 x1974)) x3317) (=> (not x3534) x1492)))))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x3513 1) x2417))))
(assert (x4630 x2967))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x1919 1)))))
(assert (=> (= (x1211 x3543 1) (x1211 x4800 1)) (= x4800 x3543)))
(assert (=> (> (+ 10000 1) x4107) (not (= (+ 2 x3457) x4107))))
(assert (not (= 4294967296 (x1211 x310 2))))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x5617) (not (= (+ x5409 1) x5617))))
(assert (= x1124 (and x4850 (not x831))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x4218 2) x5745))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (x1211 x4090 3)))))
(assert (x6051 x668))
(assert (=> (= (x1211 x5500 1) (x1211 x1919 1)) (= x5500 x1919)))
(assert (not (= (x1211 x208 1) 3939881817)))
(assert (= 0 (x3104 x3660)))
(assert (not (= (+ 4 x98) (+ 1 x3962))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x1919 1)))))
(assert (not (= (x1211 x4198 1) 2743638299)))
(assert (= (ite (= x6103 x5611) x4453 (x3314 x5611)) (x6064 x5611)))
(assert (= x1205 (=> (and (= x3296 (x2690 x2868)) (= x2422 x2940) (<= 0 x3296) (<= x3296 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1211 274184521717934524641157099916833587231 1) x2868) (= x4072 274184521717934524641157099916833587231) (= x3127 (< x3296 x2022))) (and (=> x3127 x4893) (=> (not x3127) x4)))))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x935 1) x3543))))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (x1211 x2862 1)))))
(assert (=> (= (x1211 x2060 1) (x1211 x4017 1)) (= x2060 x4017)))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (+ 5 x3962)))))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (x406 1)))))
(assert (x4630 x2829))
(assert (not (= (+ 1 x5409) (x1211 x4090 3))))
(assert (not (= 4168891048 (x1211 x4198 1))))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 x1852 1)))))
(assert (=> (> (+ 10000 1) x4017) (not (= (+ x3962 2) x4017))))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (+ 3 x1186)))))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x3992 2) x3576))))
(assert (=> (< (- x902 1) 10000) (not (= x902 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x5421 1)))))
(assert (not (= (+ x2042 1) (x1211 x1919 1))))
(assert (= (and x5910 (not x1234)) x4692))
(assert (not (= (x1211 x4610 1) 1000000000000000000)))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x5745 1)))))
(assert (not (= (x1211 x3576 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x3645 1)))))
(assert (=> (< (- x935 1) 10000) (not (= x935 (+ x3962 3)))))
(assert (= (=> (and (= (x244 x2159) x4902) (= (> x4902 0) x401)) (and (=> x401 x1146) (=> (not x401) x3198))) x5554))
(assert (=> (> (+ 10000 1) x4113) (not (= (x1211 x1112 1) x4113))))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x902 1)))))
(assert (x4630 x5113))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (+ x1186 4)))))
(assert (=> (< (- x2862 1) 10000) (not (= (+ 5 x2042) x2862))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (+ 3 x98)))))
(assert (=> (< (- x3414 1) 10000) (not (= (+ 5 x2042) x3414))))
(assert (= (and (not x1030) x3959) x3017))
(assert (=> (= (x1211 x4090 3) (x1211 x3148 3)) (= x3148 x4090)))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x5917 1)))))
(assert (= x2648 (=> (= (= 0 x4304) x190) (and (=> x190 x5361) (=> (not x190) x5036)))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x4610 1) x1451))))
(assert (not (= (x1211 x6069 1) 18446744073709551615)))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (+ x5409 1)))))
(assert (x4630 x4522))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x3755 1) x4107))))
(assert (x4630 x5547))
(assert (= x2108 (and (not x2480) x4954)))
(assert (= (=> (and (= x4822 x2886) (= x5757 x2855)) x4714) x3105))
(assert (x4630 x5164))
(assert (= x4544 (=> (and (= (ite (not x5161) 1 0) x3061) (= (= x5898 0) x5161) (= x4251 (x5347 x3061 x1705)) (= (= x4251 0) x545) (= x3336 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452))) (= x1705 (ite (< x3336 x140) 1 0))) (and (=> (not x545) x5361) (=> x545 x1552)))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x4610 1)))))
(assert (not (= (+ x2042 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= (x1211 x3576 1) 2835717307)))
(assert (= (x4999 x4669) (ite (= x5726 x4669) x2276 (x1441 x4669))))
(assert (x4630 x6066))
(assert (=> (< (- x740 1) 10000) (not (= (x1211 x4218 2) x740))))
(assert (not (= (+ x3962 4) 274184521717934524641157099916833587231)))
(assert (= x1759 true))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x5500 1)))))
(assert (not (= (+ 4 x1186) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (+ 1 x3948)))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x4090 3)))))
(assert (not (= 1 (+ x98 1))))
(assert (=> (> (+ 10000 1) x6069) (not (= (+ x3962 2) x6069))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (+ x98 4)))))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x6069 1) x3979))))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x3576 1) x3992))))
(assert (not (= (x1211 x208 1) (+ 1 x5409))))
(assert (= (and (not x3661) x2140) x3977))
(assert (= x407 (=> (and (= x1166 x1011) (= (x1428 274184521717934524641157099916833587231) x2211) (= (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1510) (>= x2211 0)) x5186) (= (x1428 x2549) x1510)) (and (=> (and (not x5186) (= 0 x2888) (= 0 x3914)) x5048) (=> x5186 x2327)))))
(assert (= (=> (and (= x3074 0) (= x5519 x4253)) x1961) x1560))
(assert (not (= (+ 1 x2042) (x1211 x3148 3))))
(assert (not (= (+ x3962 2) (+ 5 x3962))))
(assert (not (= (+ x1186 1) (+ x3962 5))))
(assert (x4630 x233))
(assert (=> (= (x1211 x3543 1) (x1211 x3576 1)) (= x3543 x3576)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x406 1))))
(assert (not (= (x1211 x6069 1) (x1211 x4090 3))))
(assert (not (= (x1211 x1956 1) (x1211 x310 2))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x361 1))))
(assert (not (= (x1211 x361 1) (+ x2042 1))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (+ x1186 4)))))
(assert (not (= (x406 1) (x1211 x2862 1))))
(assert (=> (> (+ 10000 1) x952) (not (= (x1211 x310 2) x952))))
(assert (x4630 x5831))
(assert (not (= (x1211 x3576 1) (+ 1 x1186))))
(assert (x4630 x1332))
(assert (= (x3313 x1119) (ite (and x5626 x757 (not x305)) (x2597 x1119) (x3247 x1119))))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x4610 1) x2417))))
(assert (= x4594 (=> (and (= (= x5443 0) x3882) (= x5911 (x5347 x5305 x1716)) (= x5305 (ite (not x3882) 1 0)) (= (= 0 x5911) x1960) (= x845 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443))) (= x1716 (ite (< x845 x6004) 1 0))) (and (=> x1960 x2387) (=> (not x1960) x3198)))))
(assert (= (and x1898 (not x473)) x708))
(assert (x6051 x2356))
(assert (not (= (x1211 x4090 3) 117300739)))
(assert (=> (> (+ 10000 1) x4554) (not (= (x1211 x208 1) x4554))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 1)))
(assert (= x2404 (and x3668 (not x2047))))
(assert (not (= 1889567281 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x3414 1)))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x182 1)))))
(assert (x399 x4198))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x3576 1)))))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (+ 2 x3457)))))
(assert (not (= (x1211 x3836 1) (+ 5 x3962))))
(assert (= (x4739 x4897) (ite (and x1772 (not x4138) x2358) (x6052 x4897) (x826 x4897))))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x1112 1) x4644))))
(assert (=> (> (+ 10000 1) x2417) (not (= (+ 4 x2042) x2417))))
(assert (x4630 x2061))
(assert (= x2086 (and x3620 (not x2462))))
(assert (x4630 x4799))
(assert (= x4786 (and x4774 x663)))
(assert (x6051 x4718))
(assert (= x3620 (or (and x5622 x3916) (and x3523 x3311))))
(assert (=> (= (x1211 x4198 1) (x1211 x1451 1)) (= x1451 x4198)))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x4090 3) x1598))))
(assert (= x539 (=> (= x1938 (= 274184521717934524641157099916833587206 x3255)) (and (=> (not x1938) x1710) (=> (and (= x3075 4) (not (< x3075 4)) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x5538) (= x3075 4) (< x3342 826074471) (= x3342 404098525) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x833) (= x5986 (x3910 274184521717934524641157099916833587206)) (= 1 x398) (not (= x3342 157198259)) (not (= x3342 117300739)) (>= x833 0) (< 0 x5986) (= x28 32) x1938) x1567)))))
(assert (not (= (x1211 x182 1) (x1211 x740 2))))
(assert (= (x400 x4834) (ite (= x3712 x4834) x3994 (x3313 x4834))))
(assert (not (= (x1211 x3992 2) (x1211 x5917 1))))
(assert (x4630 x5332))
(assert (x251 x3042 x4436 x5033 x5544))
(assert (not (= (x1211 x2862 1) (+ x1186 3))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x208 1)))))
(assert (not (= (+ x3962 1) 2)))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x3576 1) x4554))))
(assert (x4630 x1426))
(assert (x4630 x2197))
(assert (= x848 (=> (and (= x5941 (x3551 x1629)) (= x1091 (x6031 (+ x2012 x2797))) (= (> x5941 0) x4405)) (and (=> (not x4405) x5361) (=> (and (= (x6031 (+ 32 x1629)) x4241) x4405 (= x158 x3721)) x111)))))
(assert (=> (= (x1211 x5745 1) (x1211 x1451 1)) (= x1451 x5745)))
(assert (x4630 x3456))
(assert (= (and x5787 (not x2999)) x494))
(assert (= (=> (and (= (x1150 x3503) x4212) (= x5675 (> x4212 0))) (and (=> x5675 x4612) (=> (not x5675) x3198))) x3641))
(assert (=> (> (+ 10000 1) x1219) (not (= (x1211 x3414 1) x1219))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (+ x1186 1)))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x4218 2)))))
(assert (=> (< (- x3740 1) 10000) (not (= (+ 1 x3948) x3740))))
(assert (not (= (x1211 x5500 1) (x1211 x4090 3))))
(assert (=> (= (x1211 x946 1) (x1211 x3645 1)) (= x3645 x946)))
(assert (x4630 x4874))
(assert (not (= 3 (x1211 x5745 1))))
(assert (=> (< (- x1849 1) 10000) (not (= (x1211 x1852 1) x1849))))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x5500 1) x4107))))
(assert (x4630 x5671))
(assert (= (=> (= x3038 (not (> x5404 x522))) (and (=> (and (= x3273 false) x3038) x3659) (=> (not x3038) x5361))) x2109))
(assert (not (= (+ x3948 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (= (x789 x5451) 0))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (+ x3962 1)))))
(assert (x4630 x4311))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x1849 1)))))
(assert (not (= 2743638299 (x1211 x2862 1))))
(assert (not (= (x1211 x3576 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4630 x5997))
(assert (= (or (and (not x3257) x4491) (and (not x226) x5352)) x748))
(assert (x4630 x2937))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x5500 1) x3255))))
(assert (not (= (+ 4 x2042) (x1211 x361 1))))
(assert (=> (< (- x1219 1) 10000) (not (= (+ x98 3) x1219))))
(assert (not (= (x1211 x6069 1) (x1211 x310 2))))
(assert (x4630 x1147))
(assert (= (and x5447 x2419) x3887))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x946 1) x3771))))
(assert (=> (> (+ 10000 1) x1849) (not (= (+ x1186 4) x1849))))
(assert (x4630 x4412))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (+ 1 x3962)))))
(assert (x4630 x77))
(assert (= x3379 (and (not x3578) x2305)))
(assert (not (= (x1211 x3755 1) (+ 3 x2042))))
(assert (=> (= (x1211 x935 1) (x1211 x4198 1)) (= x935 x4198)))
(assert (=> (< (- x310 1) 10000) (not (= x310 (+ 4 x2042)))))
(assert (x4630 x4044))
(assert (x4630 x2635))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (x1211 x182 1)))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x208 1)))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x208 1)))))
(assert (=> (> (+ 10000 1) x4800) (not (= (+ 3 x1186) x4800))))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x4799 1)))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x4799 1)))))
(assert (not (= 274184521717934524641157099916833587206 (+ 2 x4054))))
(assert (= (=> (and (= (= x3409 x1071) x261) (= x3409 x306)) (and (=> (and (>= x366 0) (= (x2436 x2992) x366) (= x2988 1) (= (x1211 x3409 1) x2992) (<= x366 115792089237316195423570985008687907853269984665640564039457584007913129639935) x261 (= x598 32)) x1617) (=> (not x261) x520))) x3814))
(assert (=> (= (x1211 x5421 1) (x1211 x3755 1)) (= x5421 x3755)))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x310 2)))))
(assert (=> (= (x1211 x4800 1) (x1211 x182 1)) (= x4800 x182)))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (x1211 x3513 1)))))
(assert (x4630 x5378))
(assert (not (= (x1211 x4527 1) 2514000705)))
(assert (x4630 x5591))
(assert (x4630 x1405))
(assert (not (= (+ 1 x2042) (x1211 x3836 1))))
(assert (= x5635 (=> (and (= x5785 (x1496 x3577)) (= x976 (= 0 x5785)) (= x3577 (x6031 (+ 32 x1629)))) (and (=> (not x976) x2676) (=> (and (= x5052 x1959) x976) x2948)))))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x4527 1) x3836))))
(assert (not (= (x1211 x3836 1) (+ x98 1))))
(assert (= x4460 (and x2244 x5288)))
(assert (not (= (x1211 x4017 1) (+ 4 x98))))
(assert (= (x4160 x5016) 0))
(assert (= x3098 (=> (and (= x3715 (> x5897 0)) (= x5897 (x1150 x3503)) (= (x6031 (+ x606 x3334)) x267)) (and (=> (and x3715 (= (x6031 (+ 32 x3503)) x1514) (= x4045 x3972)) x4620) (=> (not x3715) x3198)))))
(assert (x6051 x4210))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x4090 3)))))
(assert (x4630 x2019))
(assert (=> (< (- x928 1) 10000) (not (= (+ x3962 2) x928))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x1956 1) x3166))))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x2060 1) x4107))))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (x1211 x946 1)))))
(assert (x4630 x720))
(assert (not (= (+ 2 x3962) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x4630 x3961))
(assert (= (=> (and (= (uninterp_mod (* x2593 x5111) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4667) (= (> x2593 x2344) x4334) (= (- (/ x4667 1000000000000000000) (uninterp_frac x4667 1000000000000000000)) x4256) (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4256)) x2344)) (and (=> (not x4334) x5212) (=> x4334 x3198))) x4300))
(assert (= (ite (= x2004 x4048) x3176 (x1608 x4048)) (x3326 x4048)))
(assert (=> (< (- x4800 1) 10000) (not (= (+ x3457 2) x4800))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x3576 1))))
(assert (= x3372 (=> (= (< x4730 x2658) x2011) (and (=> x2011 x3256) (=> (not x2011) x722)))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x1919 1)))))
(assert (= true x4734))
(assert (not (= (+ 4 x2042) (x1211 x5745 1))))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x4284 1) x4554))))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (+ 4 x2042)))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (+ 2 x3457)))))
(assert (=> (= (x1211 x361 1) (x1211 x6069 1)) (= x6069 x361)))
(assert (not (= (x1211 x5500 1) 2)))
(assert (x4630 x4842))
(assert (not (= (+ 2 x3962) (x1211 x3543 1))))
(assert (x5138 x4871 x608))
(assert (x4630 x2478))
(assert (not (= 117300739 (x1211 x1956 1))))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x1852 1)))))
(assert (x549 x5297))
(assert (not (= (+ x98 4) (x1211 x3836 1))))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x3409 1) x2154))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x406 1)))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x182 1) x4090))))
(assert (x4630 x5982))
(assert (x4630 x2149))
(assert (=> (< (- x693 1) 10000) (not (= (x1211 x1852 1) x693))))
(assert (x6051 x1872))
(assert (=> (< (- x208 1) 10000) (not (= (+ 4 x98) x208))))
(assert (not (= (x1211 x928 1) 274184521717934524641157099916833587206)))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x4799 1)))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (+ 4 x3962)))))
(assert (=> (> (+ 10000 1) x83) (not (= (x1211 x4218 2) x83))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x5500 1)))))
(assert (=> (= (x1211 x182 1) (x1211 x208 1)) (= x208 x182)))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x902 1) x3979))))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x182 1) x3255))))
(assert (not (= (x1211 x902 1) (+ 1 x2042))))
(assert (not (= (x406 1) (+ x2042 3))))
(assert (x433 x2877 x5297))
(assert (= (=> (= x1230 (= x1232 0)) (and (=> (and (= x1018 x3721) (= 0 x2012) x1230) x2494) (=> (not x1230) x1804))) x4058))
(assert (= (and (not x6177) x2464) x3235))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (+ x98 3)))))
(assert (x4630 x5972))
(assert (x4630 x249))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x5500 1)))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x3513 1))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 1 x5409))))
(assert (not (= (+ 3 x98) (x1211 x1112 1))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x4800 1) x1112))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x3836 1)))))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x4800 1)))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (+ 4 x3962)))))
(assert (not (= (x1211 x5421 1) (+ 4 x1186))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x4090 3))))
(assert (= x574 (and x547 x31)))
(assert (= x1403 (and x1950 x609)))
(assert (=> (< (- x3166 1) 10000) (not (= (+ 3 x1186) x3166))))
(assert (x4630 x2563))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (x1211 x310 2)))))
(assert (x4630 x4267))
(assert (x4630 x3118))
(assert (=> (< (- x902 1) 10000) (not (= x902 (+ 2 x2042)))))
(assert (not (= (x1211 x310 2) 3)))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x4090 3) x2601))))
(assert (= (=> (and (= x712 x4044) (= x3334 x5116)) x586) x2740))
(assert (not (= (x1211 x3645 1) (x1211 x4090 3))))
(assert (not (= (+ x3962 4) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x4630 x2070))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x4800 1))))
(assert (=> (> (+ 10000 1) x1112) (not (= (+ 1 x3948) x1112))))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x182 1) x952))))
(assert (not (= (x1211 x4799 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x1112 1)))))
(assert (= (ite (= x5174 x1794) x5733 (x2241 x1794)) (x2734 x1794)))
(assert (x6051 x2782))
(assert (=> (< (- x5917 1) 10000) (not (= (+ 1 x1186) x5917))))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 x4017 1)))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (+ 2 x2042)))))
(assert (=> (= (x1211 x4799 1) (x1211 x1451 1)) (= x1451 x4799)))
(assert (x4630 x1983))
(assert (= x5620 (or x1870 (and x547 (not x31)))))
(assert (not (= (+ 1 x5409) 1000000000000000000)))
(assert (=> (> (+ 10000 1) x2845) (not (= (+ x98 3) x2845))))
(assert (not (= (+ 1 x2042) (x1211 x3543 1))))
(assert (x4630 x2160))
(assert (not (= (x406 1) (x1211 x1112 1))))
(assert (=> (> (+ 10000 1) x4554) (not (= (+ 3 x1186) x4554))))
(assert (not (= (x1211 x4293 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (= (x1211 x946 1) (x1211 x2060 1)) (= x2060 x946)))
(assert (x6051 x4927))
(assert (= x4884 (=> (= x4078 (= 0 x2858)) (and (=> (not x4078) x808) (=> x4078 x3198)))))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 274184521717934524641157099916833587231 1) x310))))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x1849 1) x2758))))
(assert (not (= (+ x3962 1) 2835717307)))
(assert (not (= (x1211 x946 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x1211 x3414 1) 157198259)))
(assert (not (= (x1211 x3992 2) (x1211 x3576 1))))
(assert (=> (> (+ 10000 1) x935) (not (= (x1211 x946 1) x935))))
(assert (not (= (x1211 x4527 1) (+ 1 x2042))))
(assert (not (= (x1211 x2060 1) 826074471)))
(assert (x4630 x5029))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x4293 1))))
(assert (not (= (x1211 x1112 1) 18446744073709551615)))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (+ 2 x2042)))))
(assert (=> (> (+ 10000 1) x3575) (not (= (+ x5409 1) x3575))))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x3786))))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x4800 1) x4527))))
(assert (x4630 x2502))
(assert (x4630 x4000))
(assert (x4630 x420))
(assert (= (and x2792 x5644) x4705))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x946 1) x1852))))
(assert (x6051 x2222))
(assert (not (= (x1211 x3755 1) 2835717307)))
(assert (= (and x1399 (not x3430)) x2073))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x4527 1) x6069))))
(assert (=> (< (- x3699 1) 10000) (not (= (+ 1 x2042) x3699))))
(assert (not (= (+ x3457 2) 117300739)))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x5745 1)))))
(assert (= x5939 (or x281 x931)))
(assert (not (= (+ x98 3) (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x4799 1)))))
(assert (not (= (x1211 x928 1) 157198259)))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x928 1) x4017))))
(assert (not (= (+ 1 x98) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x1211 x4800 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (< (- x4017 1) 10000) (not (= (x1211 x3513 1) x4017))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x1956 1))))
(assert (x4630 x805))
(assert (=> (> (+ 10000 1) x83) (not (= (x1211 x2060 1) x83))))
(assert (x4630 x3113))
(assert (x4630 x298))
(assert (= x1485 (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x2031) x4107) (= x2496 (x3910 x4107)) (= x2237 (= 0 x2496)) (= (x3208 x1355) x2031)) (and (=> x2237 x3198) (=> (and (or (and (not x4694) (= x3151 x5964)) (and (> 4294967296 x3776) (= x5964 1) x4694)) (not x2237) (= (> x3151 0) x4694)) x1135)))))
(assert (=> (> (+ 10000 1) x2060) (not (= (x1211 x4527 1) x2060))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x4799 1)))))
(assert (x4630 x4643))
(assert (not (= (x1211 x1956 1) (+ 4 x1186))))
(assert (=> (> (+ 10000 1) x935) (not (= (+ x2042 2) x935))))
(assert (not (= (+ x98 3) (+ 5 x3962))))
(assert (x4630 x2062))
(assert (not (= (+ 1 x1186) (x1211 x4800 1))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (+ x1186 1)))))
(assert (not (= (x1211 x4527 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (+ 1 x3962) 2514000705)))
(assert (x4630 x5817))
(assert (x4630 x5292))
(assert (x4630 x4890))
(assert (=> (< (- x693 1) 10000) (not (= (x1211 x3992 2) x693))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (+ 4 x98)))))
(assert (= 0 (x4160 x1675)))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (+ x2042 4)))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x4610 1)))))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x3513 1) x3543))))
(assert (not (= (x1211 x946 1) 117300739)))
(assert (=> (> (+ 10000 1) x2696) (not (= (+ x2042 3) x2696))))
(assert (not (= (x1211 x4527 1) 1)))
(assert (= x3808 (=> (and (= (x6031 (+ x2688 32)) x998) (= (x6031 (+ x4462 32)) x2522) (= (x6031 (+ 64 x998)) x2169) (= (+ x1077 2) x2111) (> 1461501637330902918203684832716283019655932542976 x4748) (= (+ 2 x3962) x1077) (>= x5841 0) (= (x1678 x5321) x3499) (= (x773 x4129) x4748) (<= x3357 1461501637330902918203684832716283019655932542975) (= (x1790 x472) x5028) (= x3007 (> x1833 0)) (= (x5701 x1077) x3357) (<= x5028 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x3499 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3499 0) (= x1833 (x5609 x2887)) (= (+ x4129 2) x5321) (> 1461501637330902918203684832716283019655932542976 x1520) (<= 0 x1520) (= x532 (x6031 (+ 64 x2169))) (= x4129 (+ 1 x3962)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5841) (= (x3375 x3962) x1520) (= (x5601 x2522) x4678) (= x2231 (x6031 (+ 64 x3767))) (= (x6031 (+ x2688 64)) x3767) (= x5841 (x5613 x2111)) (<= 0 x3357) (>= x5028 0) (> 1461501637330902918203684832716283019655932542976 x3357) (>= 1461501637330902918203684832716283019655932542975 x4748) (<= x1520 1461501637330902918203684832716283019655932542975) (= (x6031 (+ 192 x2688)) x1247) (= (x5347 1461501637330902918203684832716283019655932542975 x4678) x740) (= x3962 (x1211 x740 2)) (= x472 (+ 2 x5321)) (<= 0 x4748)) (and (=> (not x3007) x3198) (=> (and (= (x6031 (+ 32 x2887)) x6106) (not x16) (= (< 1 x1067) x16) (= (x5474 x4462) x1067) x3007 (= x1247 x1355)) x445)))))
(assert (not (= (+ x3962 4) (+ 2 x3457))))
(assert (=> (= (x1211 x5500 1) (x1211 x4799 1)) (= x4799 x5500)))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (+ 1 x3948)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x5500 1))))
(assert (=> (> (+ 10000 1) x4527) (not (= (x406 1) x4527))))
(assert (not (= 2514000705 (x1211 x4017 1))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x4284 1) x902))))
(assert (not (= 1889567281 (x1211 x740 2))))
(assert (not (= (x1211 x361 1) (+ x3962 5))))
(assert (= x889 (=> (and (= x1033 (x1150 x3503)) (= (x236 x1822) x2958) (= x4581 (= x1088 x1033)) (= (x5474 x2958) x1088)) (and (=> x4581 x4826) (=> (not x4581) x3198)))))
(assert (= x1892 (and x3952 x4633)))
(assert (x4630 x4438))
(assert (= x3545 true))
(assert (x4630 x5882))
(assert (not (= (x1211 x3409 1) (+ x1186 3))))
(assert (x4630 x2875))
(assert (=> (< (- x3414 1) 10000) (not (= (x1211 x4284 1) x3414))))
(assert (= x5040 (and x387 x3425)))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x4799 1) x561))))
(assert (=> (= (x1211 x1852 1) (x1211 x4527 1)) (= x4527 x1852)))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x5500 1) x4527))))
(assert (not (= (x1211 x4218 2) 4168891048)))
(assert (=> (> (+ 10000 1) x5617) (not (= (+ 2 x3457) x5617))))
(assert (x399 x5800))
(assert (x4630 x2970))
(assert (= (and (not x2741) x2803) x4956))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (x1211 x4527 1)))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x1451 1)))))
(assert (x4630 x182))
(assert (x4630 x4045))
(assert (not (= (x1211 x3755 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (+ x1186 3) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= (+ 5 x2042) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= x4975 (=> (and (= x2845 (x4907 x4013)) (= (x5347 1461501637330902918203684832716283019655932542975 x2845) x4412) (= (= x2845 x4412) x5146)) (and (=> x5146 x3440) (=> (not x5146) x5361)))))
(assert (x5138 x2451 x2694))
(assert (x4630 x3108))
(assert (not (= 274184521717934524641157099916833587202 (+ x1186 4))))
(assert (x4630 x3066))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x208 1) x3755))))
(assert (= x477 (and (not x4556) x5750)))
(assert (x4630 x4139))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x361 1)))))
(assert (x4630 x3013))
(assert (x4630 x682))
(assert (not (= (x1211 x740 2) (x1211 x928 1))))
(assert (=> (< (- x1919 1) 10000) (not (= (+ 3 x98) x1919))))
(assert (= (and (not x4821) x6149) x6147))
(assert (x4630 x3067))
(assert (not (= (+ x4054 2) (x1211 x5421 1))))
(assert (x4630 x1416))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (+ 4 x98)))))
(assert (not (= (x1211 x4198 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x3576 1))))
(assert (x4630 x1268))
(assert (=> (> (+ 10000 1) x83) (not (= (+ 2 x3962) x83))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (+ 4 x1186)))))
(assert (not (= (+ x3962 2) (x1211 x1451 1))))
(assert (not (= 274184521717934524641157099916833587206 (+ 4 x2042))))
(assert (= (=> (and (= x4472 (x1428 274184521717934524641157099916833587231)) x5351 (= x5351 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5011 x2549))) (= (= x2549 274184521717934524641157099916833587206) x2346) (= (x5011 x2549) x3206)) (and (=> (not x2346) x938) (=> x2346 x3147))) x2327))
(assert (x5138 x2706 x6036))
(assert (not (= (x1211 x928 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x4630 x2895))
(assert (= (=> (= (= x4400 274184521717934524641157099916833587202) x3960) (and (=> (not x3960) x4435) (=> (and (= (x3910 274184521717934524641157099916833587202) x669) (not (< x1360 826074471)) (not (> 4 x5277)) (< 0 x669) (= 4 x5277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4825) (= 826074471 x1360) (= x5962 1) (= x4625 22270923681254677845691103109158760375340177724800803888364822332811285364736) x3960 (= 32 x3188) (= x4015 x5277) (>= x4825 0)) x2652))) x2278))
(assert (=> (> (+ 10000 1) x182) (not (= (x1211 x3645 1) x182))))
(assert (not (= (x1211 x3513 1) 1889567281)))
(assert (x4630 x3576))
(assert (= (and x5345 x2444) x3072))
(assert (not (= (+ x3962 5) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (+ 5 x3962)))))
(assert (not (= (+ 5 x2042) (+ 3 x98))))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x5745 1)))))
(assert (x4630 x3863))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (+ 5 x2042)))))
(assert (not (= (+ x98 1) 3939881817)))
(assert (not (= (+ 1 x3962) (x1211 x3576 1))))
(assert (not (= (x1211 x1451 1) (+ 2 x3457))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x3755 1)))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x935 1))))
(assert (not (= (x1211 x3992 2) 2)))
(assert (not (= (x1211 x4799 1) (+ 3 x3962))))
(assert (not (= (x1211 x4090 3) 4294967296)))
(assert (not (= 1 (+ x2042 5))))
(assert (=> (= (x1211 x208 1) (x1211 x1956 1)) (= x208 x1956)))
(assert (=> (> (+ 10000 1) x1338) (not (= (+ 2 x2042) x1338))))
(assert (x4630 x1986))
(assert (x4630 x796))
(assert (=> (< (- x2820 1) 10000) (not (= (x1211 x4017 1) x2820))))
(assert (x4630 x626))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x1451 1)))))
(assert (x4630 x3721))
(assert (=> (> (+ 10000 1) x1219) (not (= (+ 3 x2042) x1219))))
(assert (x4630 x3008))
(assert (not (= (+ 1 x2042) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (> (+ 10000 1) x3699) (not (= (x1211 x1112 1) x3699))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x4293 1))))
(assert (not (= (x1211 x361 1) 4168891048)))
(assert (=> (< (- x561 1) 10000) (not (= x561 (x1211 x2862 1)))))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x3645 1) x946))))
(assert (not (= (x1211 x3755 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x6051 x4931))
(assert (=> (< (- x928 1) 10000) (not (= x928 (+ 1 x2042)))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 274184521717934524641157099916833587206)))
(assert (not (= (+ 1 x3948) (+ 4 x98))))
(assert (x4630 x3720))
(assert (not (= (x1211 x3414 1) (+ 3 x3962))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x1451 1)))))
(assert (not (= (x1211 x310 2) (x1211 x4198 1))))
(assert (not (= (x1211 x3414 1) 4168891048)))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ 1 x1186))))
(assert (x4630 x2030))
(assert (x4630 x1477))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 x4527 1)))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ x2042 2))))
(assert (not (= 404098525 (x1211 x310 2))))
(assert (= x4290 (and x1271 x5441)))
(assert (= (ite (= x13 x6002) 0 (x3471 x13)) (x4664 x13)))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (+ x4054 2)))))
(assert (x4630 x1232))
(assert (x4630 x1504))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x3992 2) x3740))))
(assert (x6051 x3968))
(assert (= (=> (and (= x2060 x4354) (not (= x3053 826074471)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4980) (= 36 x1749) (= x3053 1889567281) (= x1749 x1783) (= (x3910 274184521717934524641157099916833587202) x2814) (not (< x3053 826074471)) (= (x3337 (- x1749 4)) x3196) (> x2814 0) (not (< x1749 4)) (= x4595 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3196) (and (> 32 x3196) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3196)))))) (and (=> x4595 x1821) (=> (not x4595) x1863))) x1085))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x3836 1) x3543))))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x1852 1) x3755))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x3513 1))))
(assert (x4630 x1688))
(assert (not (= (+ 2 x3457) (x1211 x4293 1))))
(assert (x5138 x1235 x2002))
(assert (= (=> (= (< x4001 x1479) x5901) (and (=> x5901 x1560) (=> (not x5901) x4380))) x5848))
(assert (= (x4414 x4433) (ite (and x2869 x3512 (not x3708)) (x5667 x4433) (ite (and (not x3512) x2869 (not x5704) (not x3708)) (x3115 x4433) (x1004 x4433)))))
(assert (not (= (+ 5 x2042) (x1211 x5917 1))))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (x1211 x935 1)))))
(assert (= x6010 (=> (and (= x2911 x4531) (= x5916 x3762)) x2294)))
(assert (= x259 (and x4073 x3168)))
(assert (not (= 117300739 (+ x1186 1))))
(assert (=> (< (- x2820 1) 10000) (not (= (x1211 x5421 1) x2820))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (+ x2042 3)))))
(assert (not (= (x406 1) (x1211 x4218 2))))
(assert (not (= 2514000705 (x1211 x5745 1))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x3576 1)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x3836 1))))
(assert (= x1537 (and (not x1882) x2084)))
(assert (not (= (+ x2042 5) (x1211 x3836 1))))
(assert (not (= (x406 1) (x1211 x310 2))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x740 2)))))
(assert (x4630 x3092))
(assert (x6051 x3302))
(assert (= (or x987 x3252) x5787))
(assert (not (= 3 (+ x1186 3))))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x4800 1) x6069))))
(assert (x4630 x5142))
(assert (=> (< (- x1956 1) 10000) (not (= (+ x3962 1) x1956))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x1112 1)) (= 274184521717934524641157099916833587231 x1112)))
(assert (not (= (+ 4 x2042) 1)))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (+ x2042 3)))))
(assert (x4630 x1463))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (x1211 x4293 1)))))
(assert (x4630 x3384))
(assert (=> (< (- x2820 1) 10000) (not (= (+ 3 x98) x2820))))
(assert (= x776 (and x1707 x4584)))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (+ 3 x1186)))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ x2042 2))))
(assert (not (= (x1211 x902 1) (+ x4054 2))))
(assert (x4630 x5061))
(assert (not (= (+ 3 x3962) 274184521717934524641157099916833587231)))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (+ 4 x3962)))))
(assert (not (= (x1211 x4090 3) 2)))
(assert (= x3407 (=> (and (= x804 x3043) (= x2571 x5803)) x3060)))
(assert (=> (= (x1211 x4284 1) (x1211 x928 1)) (= x4284 x928)))
(assert (not (= (+ x3457 2) 18446744073709551615)))
(assert (= (- (/ x1368 2) (uninterp_frac x1368 2)) (x1044 x1368 1)))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ x1186 4))))
(assert (= (x88 x5416) (ite (and x494 (not x1694) x5731) (x2332 x5416) (x3247 x5416))))
(assert (not (= (+ 1 x98) (x1211 x4198 1))))
(assert (=> (= (x1211 x1849 1) (x1211 x4284 1)) (= x1849 x4284)))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (+ 4 x3962)))))
(assert (not (= (+ 3 x3962) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x4218 2)))))
(assert (= (=> (= (< x59 x2272) x1842) (and (=> x1842 x1839) (=> (not x1842) x1763))) x834))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x5745 1) x1598))))
(assert (= x2067 true))
(assert (= (x2734 x6049) (ite (= x5174 x6049) x5733 (x2241 x6049))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x3992 2) x5500))))
(assert (x4630 x2686))
(assert (x4630 x986))
(assert (x4630 x5962))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x310 2)))))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x3409 1) x928))))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x2060 1) x3511))))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (+ x1186 1)))))
(assert (= (=> (and (= x2100 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2800) (and (= true (<= x2800 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2800)))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5817) x5987) (= x5817 (x6031 (+ 31 x2800))) (= x5433 (x6031 (+ x5987 128)))) (and (=> x2100 x3198) (=> (not x2100) x1278))) x3562))
(assert (x4630 x4538))
(assert (not (= (+ 2 x3457) 826074471)))
(assert (x4630 x5433))
(assert (= (ite (and x832 (not x4701) x912) (x5930 x2381) (ite (and (not x1605) (not x832) (not x4701) x912) (x5589 x2381) (x3902 x2381))) (x2530 x2381)))
(assert (x4630 x385))
(assert (=> (< (- x2060 1) 10000) (not (= (+ 1 x3948) x2060))))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x208 1) x5917))))
(assert (=> (> (+ 10000 1) x4400) (not (= (x1211 x4218 2) x4400))))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 x5917 1)))))
(assert (not (= (+ x3962 5) (x1211 x2862 1))))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ 3 x98) x4113))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (+ 1 x5409)))))
(assert (not (= 18446744073709551615 (x1211 x4198 1))))
(assert (x4630 x2860))
(assert (x4630 x1981))
(assert (not (= (+ x98 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x4293) (not (= (+ x5409 1) x4293))))
(assert (x251 x3647 x4793 x3706 x1201))
(assert (= (and x632 x1700) x1536))
(assert (not (= (x1211 x3992 2) (x1211 x3755 1))))
(assert (=> (< (- x2549 1) 10000) (not (= (x1211 x4218 2) x2549))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (x1211 x3414 1)))))
(assert (= x915 (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x4931) x4218) (= x98 (x1211 x4218 2)) (= x4517 (= 0 x3863))) (and (=> (not x4517) x926) (=> x4517 x6046)))))
(assert (=> (> (+ 10000 1) x2862) (not (= (x406 1) x2862))))
(assert (=> (= (x1211 x208 1) (x1211 x3645 1)) (= x3645 x208)))
(assert (x5138 x4770 x994))
(assert (=> (> (+ 10000 1) x3148) (not (= (x1211 x3992 2) x3148))))
(assert (x4630 x446))
(assert (not (= (x1211 x4017 1) (+ 1 x3962))))
(assert (x4630 x46))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x3148 3)))))
(assert (= (and (not x305) x5626) x1601))
(assert (not (= (+ x2042 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (< (- x928 1) 10000) (not (= x928 (+ x2042 5)))))
(assert (x4630 x4018))
(assert (x4630 x669))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x1849 1) x3414))))
(assert (not (= (x1211 x2862 1) (+ x1186 1))))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x2862 1) x4293))))
(assert (=> (> (+ 10000 1) x4799) (not (= (+ x3962 4) x4799))))
(assert (not (= (+ 4 x1186) (x1211 x6069 1))))
(assert (=> (< (- x1956 1) 10000) (not (= (+ x98 1) x1956))))
(assert (=> (> (+ 10000 1) x3755) (not (= (+ 2 x3962) x3755))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x4090 3)))))
(assert (not (= (x1211 x1112 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x1211 x2862 1) 2835717307)))
(assert (not (= 2514000705 (+ x5409 1))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x3409) (not (= (x1211 x3645 1) x3409))))
(assert (x4630 x2467))
(assert (x4630 x5124))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (x1211 x5500 1)))))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (+ 1 x2042)))))
(assert (= (x5664 x2418) (ite (and x912 x832 (not x4701)) (x3145 x2418) (ite (and x912 (not x4701) (not x832) (not x1605)) (x4803 x2418) (x4038 x2418)))))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x1956 1)))))
(assert (x4630 x4050))
(assert (= (=> (= x4809 (= 0 x458)) (and (=> (not x4809) x2192) (=> (and (= x5606 0) (= 0 x1674) x4809) x5315))) x1900))
(assert (x4630 x6085))
(assert (x4630 x1862))
(assert (x4630 x659))
(assert (x4630 x1548))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x2060 1)))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (+ x1186 4)))))
(assert (=> (= (x1211 x4293 1) (x1211 x1956 1)) (= x4293 x1956)))
(assert (not (= 1 (+ x4054 2))))
(assert (x4630 x1762))
(assert (= (and x3045 (not x1498)) x5732))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (+ 5 x2042)))))
(assert (not (= (x1211 x5421 1) 3)))
(assert (not (= (x1211 x935 1) 274184521717934524641157099916833587231)))
(assert (not (= 1 (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x5500) (not (= (x1211 x3755 1) x5500))))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x3148 3)))))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x4293 1) x2601))))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x4198 1) x4017))))
(assert (not (= (x1211 x3543 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (= (x1211 x3992 2) (x1211 x4218 2)) (= x4218 x3992)))
(assert (= (=> (and (= x2186 (- (/ x3733 x4738) (uninterp_frac x3733 x4738))) (= x3804 (< 0 x4259)) (= x4259 (x2697 x5177))) (and (=> (and x3804 (= x1959 x4617) (= (x6031 (+ x5177 32)) x1237)) x2948) (=> (not x3804) x5361))) x4746))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x4610 1) x935))))
(assert (not (= (x1211 x361 1) (+ 1 x3948))))
(assert (=> (> (+ 10000 1) x3575) (not (= (x1211 x4198 1) x3575))))
(assert (= x5095 (and x4877 (not x256))))
(assert (=> (< (- x3148 1) 10000) (not (= (+ x3962 4) x3148))))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (x1211 x4293 1)))))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 x4799 1)))))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (x1211 x4527 1)))))
(assert (x4630 x4711))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x1956 1)))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x1852 1)))))
(assert (= (x2734 x3069) (ite (= x5174 x3069) x5733 (x2241 x3069))))
(assert (x4630 x3431))
(assert (=> (> (+ 10000 1) x3699) (not (= (x1211 x1956 1) x3699))))
(assert (= (x3609 x5263) 0))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (+ 3 x1186)))))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x4198 1)))))
(assert (=> (> (+ 10000 1) x208) (not (= (+ x5409 1) x208))))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 x3414 1) x361))))
(assert (=> (= (x1211 x1112 1) (x1211 x5500 1)) (= x1112 x5500)))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x4284 1) x2820))))
(assert (not (= (+ 1 x3948) (x1211 x3148 3))))
(assert (not (= (x1211 x1849 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (= (x1211 x946 1) (x1211 x4800 1)) (= x4800 x946)))
(assert (x4630 x5022))
(assert (not (= 274184521717934524641157099916833587231 (+ x3962 2))))
(assert (not (= (x1211 x2862 1) (+ x2042 1))))
(assert (= x987 (or (and x3855 x3883) (and x3509 x3348))))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x902 1) x3645))))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x3576 1) x946))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (+ 1 x3948)))))
(assert (=> (= (x1211 x2060 1) (x1211 x3755 1)) (= x2060 x3755)))
(assert (=> (> (+ 10000 1) x3645) (not (= (+ x1186 3) x3645))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (+ 3 x3962)))))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (x1211 x5421 1)))))
(assert (= (=> (and (= x3567 x1036) (= x1580 x657)) x2193) x5752))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x3755 1) x1089))))
(assert (not (= (+ 4 x1186) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (+ 2 x3457) (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (+ x3962 1)))))
(assert (not (= (x1211 x4090 3) (x1211 x5421 1))))
(assert (=> (< (- x740 1) 10000) (not (= (x1211 x4293 1) x740))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x4610 1))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (+ x3962 2)))))
(assert (not (= (+ 3 x1186) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x4630 x4199))
(assert (= (ite x1188 (ite x3395 (x1626 x1332) (x1023 x1332)) (ite x423 (x1626 x1332) (x143 x1332))) (x3421 x1332)))
(assert (not (= (x406 1) 2835717307)))
(assert (not (= (x1211 x2862 1) (+ 1 x5409))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x928 1)))))
(assert (not (= (x1211 x3836 1) (+ 4 x3962))))
(assert (x251 x4178 x153 x3171 x4188))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x928 1) x3414))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x3836 1) x4090))))
(assert (x4630 x1235))
(assert (x4630 x1203))
(assert (= x4569 (or (and x4836 x5019) (and x4295 (not x5281)))))
(assert (not (= (+ x5409 1) (x1211 x3148 3))))
(assert (= x6089 (and x4513 x2533)))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x902 1) x1775))))
(assert (not (= (+ x3962 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (+ 3 x2042)))))
(assert (= (and (not x1202) x730) x4542))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x6069 1))))
(assert (= (and x1644 x904) x5352))
(assert (=> (> (+ 10000 1) x4554) (not (= (+ x4054 2) x4554))))
(assert (x4630 x2758))
(assert (= (=> (= x4372 (= x2820 274184521717934524641157099916833587202)) (and (=> (not x4372) x3278) (=> (and (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x5671) (< x1311 826074471) (not (> 4 x4510)) (> x3961 0) (not (= 157198259 x1311)) (= x4510 4) (= 32 x2543) (= 1 x4559) (<= x4558 115792089237316195423570985008687907853269984665640564039457584007913129639935) x4372 (= x1311 404098525) (not (= x1311 117300739)) (<= 0 x4558) (= x3961 (x3910 274184521717934524641157099916833587202)) (= 4 x4510)) x5905))) x3757))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (+ 3 x98)))))
(assert (= (ite (and x2869 x3512 (not x3708)) (x4225 x291) (ite (and (not x3708) x2869 (not x3512) (not x5704)) (x759 x291) (x6158 x291))) (x1893 x291)))
(assert (x4630 x5306))
(assert (not (= (+ 3 x98) (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (x1211 x310 2)))))
(assert (= 0 (x5618 x3117)))
(assert (= x1837 (=> (and (= (x6031 (+ x3437 31)) x4100) (= x1498 (or (> x3437 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x3437) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3437) true)))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4100) x5534) (= (x6031 (+ x5534 x5749)) x1304)) (and (=> (not x1498) x562) (=> x1498 x5361)))))
(assert (x4630 x5619))
(assert (not (= (x1211 x740 2) (x1211 x3414 1))))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x3755 1) x3979))))
(assert (x4630 x2013))
(assert (x399 x6069))
(assert (not (= (x1211 x3992 2) (x1211 x4284 1))))
(assert (not (= (x1211 x3755 1) 2743638299)))
(assert (=> (< (- x2549 1) 10000) (not (= (x1211 x3645 1) x2549))))
(assert (=> (= (x1211 x5421 1) (x1211 x4610 1)) (= x5421 x4610)))
(assert (not (= (x1211 x4017 1) (+ x5409 1))))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x4800 1) x4017))))
(assert (=> (= (x1211 x1956 1) (x1211 x1852 1)) (= x1852 x1956)))
(assert (x4630 x1513))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (+ x3962 5)))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x928 1)))))
(assert (not (= (x1211 x2862 1) (+ 4 x2042))))
(assert (not (= (x1211 x1451 1) 4168891048)))
(assert (not (= (x1211 x5917 1) (+ x2042 1))))
(assert (x399 x3645))
(assert (=> (< (- x2549 1) 10000) (not (= (x1211 x1849 1) x2549))))
(assert (not (= 2 (x1211 x5745 1))))
(assert (not (= 404098525 (x1211 x4198 1))))
(assert (not (= 4168891048 (+ 3 x2042))))
(assert (x4630 x1))
(assert (= (ite (= x5174 x4936) x5733 (x2241 x4936)) (x2734 x4936)))
(assert (x4630 x1011))
(assert (= x738 (=> (and (= (< 0 x1693) x1347) (= x5039 (x3608 x1015)) (= x1693 (x3088 x5039))) (and (=> (and (not x1347) (= x4013 x5980)) x3090) (=> x1347 x2509)))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x4293 1)))))
(assert (not (= 1 (x1211 x361 1))))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 x310 2) x1338))))
(assert (x4630 x3633))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x3992 2)))))
(assert (not (= 274184521717934524641157099916833587206 (+ 3 x2042))))
(assert (=> (> (+ 10000 1) x4284) (not (= (+ 1 x98) x4284))))
(assert (= x4213 (and x3376 (not x1669))))
(assert (x4630 x180))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x4017 1)))))
(assert (=> (< (- x2758 1) 10000) (not (= (+ 1 x5409) x2758))))
(assert (x4630 x5101))
(assert (=> (= (x1211 x4527 1) (x1211 x3645 1)) (= x3645 x4527)))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x310 2) x3836))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (x1211 x4017 1)))))
(assert (=> (= (x1211 x4198 1) (x1211 x3755 1)) (= x3755 x4198)))
(assert (x6051 x315))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (+ x1186 4)))))
(assert (=> (< (- x4198 1) 10000) (not (= (+ 5 x3962) x4198))))
(assert (x4630 x2409))
(assert (= (x2104 x1254) 0))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x4610 1))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x3576 1))))
(assert (not (= 3939881817 (x1211 x4218 2))))
(assert (x4630 x5951))
(assert (x251 x1653 x2802 x4713 x3451))
(assert (= (x4192 x1754) 0))
(assert (not (= (+ 4 x2042) (x1211 x2060 1))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x3755 1)))))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x1849 1) x4218))))
(assert (= (or x4728 (and x254 (not x4541))) x393))
(assert (x6051 x2031))
(assert (= x4586 (and (not x4580) x4333)))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x2060 1)))))
(assert (not (= (x1211 x1112 1) (x1211 x310 2))))
(assert (x4630 x1713))
(assert (=> (< (- x3836 1) 10000) (not (= (+ 2 x4054) x3836))))
(assert (not (= 3939881817 (+ x2042 5))))
(assert (= (=> (and (= x1792 (x5347 x3662 x3741)) (= x5681 (x3337 (- 1000000000000000000 x6066))) (= (ite (not x2391) 1 0) x3662) (= (= 0 x1792) x6092) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2921)) x4735) (= (ite (< x4735 x5742) 1 0) x3741) (= (= 0 x2921) x2391)) (and (=> (not x6092) x5361) (=> x6092 x3881))) x1944))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (+ 5 x3962)))))
(assert (not (= (+ 1 x1186) (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x2060) (not (= (x1211 x4610 1) x2060))))
(assert (not (= (x1211 x3148 3) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (+ 2 x4054)))))
(assert (x4630 x2342))
(assert (= x2075 (=> (and (= x4740 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232))) (= (ite (> x2897 x4740) 1 0) x1257) (= (= 0 x1232) x1009) (= x1545 (x5347 x218 x1257)) (= (= x1545 0) x438) (= x218 (ite (not x1009) 1 0))) (and (=> (not x438) x5361) (=> x438 x4741)))))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x4527 1) x3740))))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x902 1)))))
(assert (=> (> (+ 10000 1) x2845) (not (= (+ 5 x2042) x2845))))
(assert (= x616 (and x1064 (not x3989))))
(assert (not (= (+ x2042 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x3513 1))))
(assert (not (= (+ x2042 5) (+ x3962 3))))
(assert (= (and x22 x5144) x6065))
(assert (x4630 x704))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x3148 3) x3771))))
(assert (not (= (x1211 x3148 3) (x1211 x6069 1))))
(assert (x4630 x2288))
(assert (not (= 3939881817 (x1211 x1451 1))))
(assert (x4630 x4872))
(assert (x4630 x5357))
(assert (=> (> (+ 10000 1) x4218) (not (= (x1211 x4527 1) x4218))))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (x1211 x4800 1)))))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x1849 1) x5800))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x1849 1) x4113))))
(assert (= x3252 (or (and x5861 x156) (and x2997 x3347))))
(assert (x4630 x5956))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (x1211 x5500 1)))))
(assert (= (and x1878 (not x5995)) x3182))
(assert (x6051 x5586))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x1956 1) x4017))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (+ 1 x98)))))
(assert (=> (> (+ 10000 1) x1338) (not (= (+ 3 x3962) x1338))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x3414 1) x1451))))
(assert (not (= (x1211 x3836 1) 4294967296)))
(assert (not (= (x1211 x4218 2) (+ 1 x3962))))
(assert (not (= (x1211 x4799 1) 1000000000000000000)))
(assert (not (= (x1211 x4527 1) (+ x2042 2))))
(assert (not (= 404098525 (x1211 x902 1))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x4800 1))))
(assert (= x2406 (and x3722 x6146)))
(assert (=> (< (- x4799 1) 10000) (not (= (+ x3962 1) x4799))))
(assert (x6051 x3647))
(assert (not (= (+ x1186 3) (x1211 x4610 1))))
(assert (=> (< (- x2845 1) 10000) (not (= (+ x2042 3) x2845))))
(assert (not (= (x1211 x310 2) (+ x4054 2))))
(assert (not (= 1889567281 (x1211 x5745 1))))
(assert (x4630 x3698))
(assert (not (= (x1211 x902 1) (+ x3962 5))))
(assert (x4630 x740))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x4800 1)))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x3755 1)))))
(assert (not (= (+ 2 x4054) (x1211 x361 1))))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x902 1) x4644))))
(assert (not (= (+ x3962 2) (x1211 x4198 1))))
(assert (not (= (+ 1 x3948) 2)))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x902 1) x3576))))
(assert (not (= (+ x2042 2) (+ x3962 3))))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x3409 1) x3755))))
(assert (=> (= (x1211 x2060 1) (x1211 x4800 1)) (= x2060 x4800)))
(assert (=> (= (x1211 x4527 1) (x1211 x946 1)) (= x946 x4527)))
(assert (=> (> (+ 10000 1) x740) (not (= (+ x3948 1) x740))))
(assert (x4630 x2571))
(assert (= x3571 (=> (= x909 (= x2590 0)) (and (=> (not x909) x1280) (=> x909 x3198)))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (+ 5 x3962)))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (+ 2 x3457)))))
(assert (not (= (+ 4 x3962) 1)))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x1956 1) x1849))))
(assert (not (= (+ 1 x3962) (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (+ x98 1)))))
(assert (not (= 404098525 (x1211 274184521717934524641157099916833587231 1))))
(assert (x4630 x916))
(assert (not (= (+ x3962 4) (x1211 x3755 1))))
(assert (not (= (x1211 x5500 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x251 x3008 x2610 x1858 x1193))
(assert (not (= (x1211 x928 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x4756 (=> (and (= (< 18446744073709551615 x1156) x4362) (= (x3088 x3108) x1156)) (and (=> x4362 x5361) (=> (and (= (uninterp_mod (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4064) (= x2297 (= x1156 0)) (= x2388 (x6031 (+ x4082 x1155))) (not x4362) (= (x6031 (+ x4064 32)) x4082) (or x2297 (and (= x5693 (x6031 (+ 32 x1155))) (not x2297) (= (uninterp_mod (* x1156 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x420)))) x5599)))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x902 1))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x4610 1)))))
(assert (=> (= (x1211 x4610 1) (x1211 x361 1)) (= x361 x4610)))
(assert (not (= (+ x3948 1) 4168891048)))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (+ x98 3)))))
(assert (x4630 x2946))
(assert (not (= 18446744073709551615 (+ x98 3))))
(assert (not (= (x1211 x4218 2) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (> (+ 10000 1) x208) (not (= (+ 1 x98) x208))))
(assert (= x3195 (and x3547 (not x1313))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x4527 1)))))
(assert (x4630 x4710))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x3755 1)))))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x2060 1)))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x361 1) x5500))))
(assert (=> (< (- x2060 1) 10000) (not (= (x1211 x3414 1) x2060))))
(assert (not (= (+ x2042 4) (+ x1186 3))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x4610 1)))))
(assert (not (= (x1211 x182 1) 404098525)))
(assert (not (= (x1211 x5500 1) 157198259)))
(assert (not (= 2514000705 (x1211 x182 1))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x1112 1)))))
(assert (not (= (x1211 x4017 1) 1000000000000000000)))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x2862 1) x1248))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x902 1))))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (x1211 x3836 1)))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x3543 1)))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x3409 1)) (= x3409 274184521717934524641157099916833587231)))
(assert (not (= 274184521717934524641157099916833587231 (+ x1186 4))))
(assert (not (= (x1211 x5917 1) 3)))
(assert (= (or (and x6147 (not x1929)) (and x6149 x4821)) x1949))
(assert (x4630 x3196))
(assert (not (= (+ 5 x2042) 2)))
(assert (x4630 x2450))
(assert (x6051 x318))
(assert (x4630 x4263))
(assert (not (= 4294967296 (x1211 x928 1))))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x740 2) x3699))))
(assert (not (= (x1211 x3409 1) (+ x98 3))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x3409 1))))
(assert (not (= 1000000000000000000 (x1211 x6069 1))))
(assert (not (= (+ 2 x3962) (+ x1186 4))))
(assert (x4630 x3405))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x3409 1))))
(assert (x4630 x5148))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x2862 1)))))
(assert (= (=> (= (> x2422 x3296) x3661) (and (=> x3661 x4893) (=> (not x3661) x4945))) x4))
(assert (= (x3892 x5535) 17154740991736861046558774992177620686056526479738507590741468237373194108928))
(assert (x4630 x1093))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (+ x3948 1)))))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x406 1)))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x361 1)))))
(assert (x4630 x5051))
(assert (not (= (x1211 x946 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (x1211 x3755 1)))))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (x1211 x935 1)))))
(assert (not (= (x1211 x1849 1) (+ 1 x3948))))
(assert (= (=> (and (= x1921 x5143) (= x4306 0)) x3832) x1178))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x3543 1) x1089))))
(assert (=> (= (x1211 x3414 1) (x1211 x1451 1)) (= x1451 x3414)))
(assert (x4630 x8))
(assert (x6051 x3246))
(assert (x4630 x1151))
(assert (not (= (+ x2042 1) (+ x3962 5))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x4090 3))))
(assert (not (= (+ 3 x3962) 826074471)))
(assert (not (= (x1211 x4017 1) 2835717307)))
(assert (not (= 3 (x1211 x1112 1))))
(assert (x4630 x5602))
(assert (x5138 x271 x3369))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x3836 1) x3836))))
(assert (= x4181 (and x629 (not x4723))))
(assert (=> (> (+ 10000 1) x4218) (not (= (x406 1) x4218))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (+ x4054 2)))))
(assert (not (= (x1211 x935 1) 117300739)))
(assert (not (= 157198259 (x1211 x4218 2))))
(assert (=> (< (- x740 1) 10000) (not (= (x1211 x3148 3) x740))))
(assert (not (= 1 (x1211 x4799 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x740 2))))
(assert (x4630 x396))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x4799 1) x4293))))
(assert (=> (= (+ x98 3) (+ 3 x1186)) (= x4218 x310)))
(assert (not (= (x1211 x4610 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x4630 x1091))
(assert (=> (= (x1211 x4017 1) (x1211 x4284 1)) (= x4017 x4284)))
(assert (not (= (x1211 x5745 1) (+ 5 x3962))))
(assert (not (= (x1211 x3645 1) 157198259)))
(assert (=> (= (x1211 x928 1) (x1211 x3836 1)) (= x3836 x928)))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x3836 1) x3511))))
(assert (x4630 x3840))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x3513 1) x3645))))
(assert (= x1864 (=> (and (= (x6031 (+ x1479 x4656)) x176) (= x2395 (> x4656 x176))) (and (=> x2395 x1560) (=> (and (= (x1211 x1112 1) x1275) (= 32 x5519) (= x2107 x2839) (= (x5347 1461501637330902918203684832716283019655932542975 x2029) x1112) (not x2395) (= x3074 1)) x1961)))))
(assert (x6051 x4028))
(assert (not (= 274184521717934524641157099916833587202 (+ x2042 2))))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x4218 2)))))
(assert (not (= (x1211 x3755 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (x399 x2042))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x3836 1) x4284))))
(assert (not (= (+ x3962 1) 1889567281)))
(assert (x4630 x1322))
(assert (= x5445 (and x4103 (not x4145))))
(assert (x6051 x3026))
(assert (=> (< (- x1451 1) 10000) (not (= (x1211 x1956 1) x1451))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x4284 1)))))
(assert (=> (< (- x935 1) 10000) (not (= x935 (x1211 x5421 1)))))
(assert (x4630 x5745))
(assert (= x4320 (and x5564 x4687)))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x1112 1)))))
(assert (x6051 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x4630 x5434))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x3836 1)))))
(assert (not (= (x1211 x4198 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (not (= (x1211 x935 1) 4168891048)))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x1919 1) x2758))))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (x1211 x3836 1)))))
(assert (x399 x4017))
(assert (x399 x3575))
(assert (=> (< (- x3576 1) 10000) (not (= (+ 1 x5409) x3576))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ x1186 4)))))
(assert (=> (= (x1211 x3513 1) (x1211 x1849 1)) (= x1849 x3513)))
(assert (=> (< (- x4284 1) 10000) (not (= (x1211 x902 1) x4284))))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x3979) (not (= (+ x3962 4) x3979))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x3992 2)))))
(assert (=> (> (+ 10000 1) x3771) (not (= (+ 1 x5409) x3771))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x3409 1) x3166))))
(assert (=> (< (- x3148 1) 10000) (not (= (+ x2042 5) x3148))))
(assert (=> (< (- x2154 1) 10000) (not (= (+ x3962 5) x2154))))
(assert (not (= (x1211 x208 1) (x1211 x3148 3))))
(assert (not (= (x1211 x3414 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (= (x1211 x208 1) (x1211 x4799 1)) (= x4799 x208)))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x1451 1) x4218))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x946 1) x3166))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x310 2) x3771))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x3645 1)))))
(assert (not (= (x1211 x946 1) 2)))
(assert (= x3986 (=> (and (= x5764 (- (/ x985 1000000000000000000) (uninterp_frac x985 1000000000000000000))) (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5764)) x5219) (= (> x4873 x5219) x2959) (= (- (/ x3558 1000000000000000000) (uninterp_frac x3558 1000000000000000000)) x985) (= x3558 (uninterp_mod (* x5287 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x2959) x3475) (=> x2959 x3198)))))
(assert (=> (< (- x3409 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x3409))))
(assert (=> (= (x1211 x1956 1) (x1211 x2060 1)) (= x1956 x2060)))
(assert (= (x1051 x2963) 0))
(assert (=> (> (+ 10000 1) x1338) (not (= (+ 2 x3962) x1338))))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x5500) (not (= (x406 1) x5500))))
(assert (x4630 x2620))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x310 2)))))
(assert (x4630 x1382))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (+ x98 3)))))
(assert (x4630 x4978))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x1956 1))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x4800 1) x902))))
(assert (= x5703 (and x2638 (not x4517))))
(assert (not (= 3 (+ x3948 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x5745 1))))
(assert (=> (< (- x3575 1) 10000) (not (= (+ 1 x3962) x3575))))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x935 1) x4527))))
(assert (=> (= (x1211 x1852 1) (x1211 x3513 1)) (= x1852 x3513)))
(assert (not (= (x1211 x4284 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x1211 x1919 1) 1)))
(assert (= (=> (and (not (= 2514000705 x3490)) (= x3490 2835717307) (= x2335 x1218) (not (= 826074471 x3490)) (= 68 x2335) (= x2022 x2658) (= x688 x2028) (not (> 4 x2335)) (= x1177 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< 0 x2769) (not (= 1889567281 x3490)) (not (> 826074471 x3490)) (= x2769 (x3910 274184521717934524641157099916833587202)) (= x2519 (or (> x3266 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x3266) (= true (<= x3266 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x3266 (x3337 (- x2335 4)))) (and (=> (not x2519) x2081) (=> x2519 x3256))) x3829))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x5745 1)))))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x2862 1) x1089))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x3513 1) x902))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (+ 2 x3962)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x1112 1))))
(assert (not (= (x1211 x1451 1) (x1211 x740 2))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x3511) (not (= (+ 4 x1186) x3511))))
(assert (not (= (x1211 x3755 1) 274184521717934524641157099916833587231)))
(assert (x5138 x2309 x5526))
(assert (not (= (+ 4 x3962) (x1211 x3148 3))))
(assert (x4630 x4212))
(assert (x4630 x3596))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x902 1))))
(assert (not (= (x1211 x3992 2) (x1211 x4799 1))))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x3755 1) x182))))
(assert (=> (< (- x3740 1) 10000) (not (= (x1211 x208 1) x3740))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x2862 1) x5745))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (+ x1186 3)))))
(assert (=> (< (- x4610 1) 10000) (not (= (x1211 x5500 1) x4610))))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x4800 1) x1956))))
(assert (x4630 x464))
(assert (x4630 x516))
(assert (not (= (x1211 x4293 1) 2835717307)))
(assert (= (=> (and (= x5297 (x5347 x686 x4872)) (= 1 x686) (= x1438 (ite (< x1368 78) 1 0)) (= x2877 (x5347 x315 x1438)) (= x4872 (ite (> 32 x1368) 1 0)) (= (= (x5 x2877 x5297) 0) x3681) (= x315 1)) (and (=> (and (not x3681) (= x1778 (x5041 10 x1368))) x252) (=> (and x3681 (= x3191 (< 1 x1368)) (or (and (not x3191) (= x5833 1) (= 10 x2592)) (and (= x4862 (< 1 x5169)) x3191 (= (= 0 x5406) x279) (= x2592 100) (= x5169 (x1044 x1368 1)) (= x5833 (ite x279 1 10)) (not x4862) (= (x5347 1 x1368) x5406)))) x5173))) x4135))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x1956 1)))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x3543 1))))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (+ 4 x2042)))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x5421 1)))))
(assert (=> (< (- x2417 1) 10000) (not (= (x1211 x5500 1) x2417))))
(assert (=> (> (+ 10000 1) x4610) (not (= (+ 3 x2042) x4610))))
(assert (= x5081 (and x3547 x1313)))
(assert (x4630 x2769))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x4090 3))))
(assert (not (= (x1211 x3645 1) (+ 3 x2042))))
(assert (not (= (x1211 x1451 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= (x1211 x3576 1) (+ 2 x4054))))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (+ x2042 3)))))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x3576 1) x2154))))
(assert (=> (= (x1211 x5421 1) (x1211 x361 1)) (= x5421 x361)))
(assert (= x2656 (=> (= x2459 (= x4929 0)) (and (=> (not x2459) x479) (=> (and x2459 (= x522 0) (= 0 x5404)) x2109)))))
(assert (= x3837 (and x1623 x6042)))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x3513 1)))))
(assert (not (= (+ 1 x2042) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x4293 1) x4090))))
(assert (not (= 274184521717934524641157099916833587202 (+ x2042 3))))
(assert (not (= (+ x3962 2) (x1211 x310 2))))
(assert (x4630 x3410))
(assert (not (= (x1211 x928 1) 117300739)))
(assert (not (= (+ 1 x5409) (+ x2042 3))))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x935 1) x4017))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x4799 1)))))
(assert (=> (< (- x3230 1) 10000) (not (= (+ x2042 1) x3230))))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x3755 1)))))
(assert (= x2283 (=> (and (= (< 0 x4729) x4717) (= x4729 (x3088 x383))) (and (=> (and (= x5052 x1336) (not x4717)) x3761) (=> x4717 x2891)))))
(assert (= (=> (and (= x598 x3567) (= x2988 x1580)) x2193) x1617))
(assert (x4630 x2350))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 4 x2042))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (+ x1186 3)))))
(assert (x4630 x5582))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ 5 x3962))))
(assert (= (=> (and (= x1903 1) (= (x5645 x4997) x3035) (= x1822 (x6031 (+ x1355 64))) (= (= x1081 x1939) x2715) (= (x5474 x3044) x1939) (= x3044 (x236 x1822)) (= (x5609 x3035) x1081) (= (x6031 (+ x1822 64)) x778) (= (x5347 1461501637330902918203684832716283019655932542975 x264) x5826) (= (x6031 (+ x5492 64)) x4997) (= x5492 (x6031 (+ x1355 32))) (= x2159 (x6031 (+ x1355 160)))) (and (=> (not x2715) x3198) (=> x2715 x1487))) x445))
(assert (=> (= (x1211 x5421 1) (x1211 x4800 1)) (= x4800 x5421)))
(assert (x4630 x4091))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x928 1)))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x3414 1) x5500))))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x1849 1) x310))))
(assert (= x4530 (=> (and (= (= x5816 x325) x2244) (= x325 (x5347 1461501637330902918203684832716283019655932542975 x5816))) (and (=> x2244 x1686) (=> (not x2244) x1560)))))
(assert (x4630 x4737))
(assert (x6051 x1391))
(assert (x4630 x1586))
(assert (not (= (+ 1 x3948) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x3962 5))))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (x1211 x935 1)))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x5421 1)))))
(assert (not (= (x406 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (< (- x3414 1) 10000) (not (= (x1211 x310 2) x3414))))
(assert (= (x1807 x5710) (ite (= x5710 x1012) x1633 (x1715 x5710))))
(assert (not (= (x1211 x3409 1) 2)))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (x1211 x3836 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 5 x2042))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x2862 1)))))
(assert (x4630 x4524))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x4284 1))))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x3414 1) x3575))))
(assert (=> (> (+ 10000 1) x310) (not (= (+ 2 x2042) x310))))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x2862 1)))))
(assert (x4630 x1973))
(assert (not (= (+ x3962 4) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= x3531 (and x5703 x2865)))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x4090 3) x3645))))
(assert (not (= (+ x5409 1) (+ 2 x3962))))
(assert (not (= (x1211 x928 1) (+ 3 x2042))))
(assert (not (= (+ x3962 4) (x1211 x4218 2))))
(assert (x6051 x829))
(assert (not (= 4168891048 (x1211 x946 1))))
(assert (x4630 x291))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (x1211 x1451 1)))))
(assert (not (= (x1211 x4293 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x4630 x5501))
(assert (not (= (x1211 x946 1) (+ x3962 3))))
(assert (= (and (not x4467) x4948) x3119))
(assert (not (= 4168891048 (+ x3962 4))))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x3414 1) x3836))))
(assert (x4630 x910))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x4800 1)))))
(assert (not (= (x1211 x3513 1) (+ 5 x2042))))
(assert (= (=> (and (= (x2697 x5177) x5007) (= x4156 (< 0 x5007))) (and (=> (and (= x5213 0) (not x4156)) x2748) (=> x4156 x4755))) x3761))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x1852 1))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x1849 1))))
(assert (not (= 3939881817 (x1211 x4610 1))))
(assert (not (= (+ 2 x4054) (+ 4 x3962))))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x4090 3)))))
(assert (x4630 x496))
(assert (not (= (x1211 x310 2) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x3576 1) x4800))))
(assert (= x2470 (and x1529 (not x3134))))
(assert (=> (< (- x740 1) 10000) (not (= x740 (+ 2 x4054)))))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (x1211 x3414 1)))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x2060 1) x5500))))
(assert (=> (> (+ 10000 1) x83) (not (= (+ x3948 1) x83))))
(assert (x4630 x5160))
(assert (not (= (+ 3 x3962) 274184521717934524641157099916833587206)))
(assert (not (= (x1211 x1112 1) (+ x2042 2))))
(assert (not (= (x1211 x740 2) 274184521717934524641157099916833587202)))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (x1211 x1451 1)))))
(assert (= (and x56 x3024) x4621))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x3148 3) x1956))))
(assert (not (= (x1211 x3992 2) (+ x2042 3))))
(assert (= x3938 (and (not x976) x3338)))
(assert (not (= (x1211 x4527 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x4293 1)))))
(assert (=> (> (+ 10000 1) x935) (not (= (x1211 x4090 3) x935))))
(assert (not (= (x1211 x1956 1) (x406 1))))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x208 1) x1919))))
(assert (not (= 18446744073709551615 (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x4218 2) x3740))))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x5500 1)))))
(assert (not (= (x1211 x928 1) 2514000705)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x3543 1))))
(assert (not (= 157198259 (+ x98 1))))
(assert (not (= (+ 3 x98) (x1211 x4198 1))))
(assert (x4630 x3743))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x4799 1)))))
(assert (x4630 x2897))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x5421 1)))))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x946 1) x4702))))
(assert (=> (< (- x935 1) 10000) (not (= x935 (x1211 x2862 1)))))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x1956 1) x2601))))
(assert (= x3665 (=> (and (= x4400 (x5347 1461501637330902918203684832716283019655932542975 x2070)) (= x2070 (x5601 x5688)) (= x1522 (= x480 0)) (= (x3910 x4400) x480) (= 4 x4015)) (and (=> x1522 x3198) (=> (not x1522) x644)))))
(assert (x4630 x3851))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x3576 1)))))
(assert (= (and x2760 (not x2300)) x3425))
(assert (x4630 x2859))
(assert (x5138 x4648 x2514))
(assert (not (= (x1211 x4218 2) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x3166 1) 10000) (not (= (+ x5409 1) x3166))))
(assert (=> (> (+ 10000 1) x4090) (not (= (+ x3962 4) x4090))))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x4293 1)))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x208 1)))))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x4293 1) x3740))))
(assert (not (= (x1211 x3513 1) (x1211 x4090 3))))
(assert (x4630 x1708))
(assert (x4630 x2580))
(assert (=> (= (x1211 x1451 1) (x1211 x2060 1)) (= x2060 x1451)))
(assert (x4630 x636))
(assert (=> (< (- x2845 1) 10000) (not (= (+ x4054 2) x2845))))
(assert (=> (> (+ 10000 1) x1852) (not (= (x1211 x3992 2) x1852))))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (+ 1 x3948)))))
(assert (not (= (x1211 x361 1) 826074471)))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x2060 1) x4800))))
(assert (not (= (x1211 x5421 1) (+ x3948 1))))
(assert (x6051 x4538))
(assert (x399 x3166))
(assert (= x1329 (and x6110 (not x466))))
(assert (x6051 x1543))
(assert (not (= (+ 3 x98) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (= (x1211 x182 1) (x1211 x4799 1)) (= x182 x4799)))
(assert (= x2751 (=> (and (= x3664 x5290) (= 0 x2188)) x5947)))
(assert (=> (< (- x5617 1) 10000) (not (= (x1211 x4800 1) x5617))))
(assert (not (= (+ x1186 1) 826074471)))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x3836 1)))))
(assert (not (= (x1211 x3543 1) 4168891048)))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x4218 2))))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (x1211 x3755 1)))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x5745 1)))))
(assert (= x1290 (=> (and (= 0 x1427) (= x6099 x1359)) x5439)))
(assert (not (= (x1211 x928 1) 1461501637330902918203684832716283019655932542975)))
(assert (x4630 x6164))
(assert (not (= (x1211 x5421 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= (x1211 x3148 3) 4168891048)))
(assert (=> (> (+ 10000 1) x4644) (not (= (+ 2 x2042) x4644))))
(assert (not (= (x1211 x3543 1) 117300739)))
(assert (not (= 274184521717934524641157099916833587231 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (= (x1211 x4799 1) (x1211 x1852 1)) (= x4799 x1852)))
(assert (=> (< (- x3409 1) 10000) (not (= (+ x3457 2) x3409))))
(assert (not (= (x1211 x4017 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (= (x2110 x1692) 0))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x4218 2)))))
(assert (not (= (+ x1186 1) (x1211 x1956 1))))
(assert (=> (= (x1211 x208 1) (x1211 x1849 1)) (= x1849 x208)))
(assert (not (= (x1211 x3409 1) (x1211 x3992 2))))
(assert (= (=> (and (= x2975 x1359) (= x3496 0)) x3824) x5998))
(assert (not (= (x1211 x4293 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (+ 4 x3962) (x1211 x4800 1))))
(assert (not (= (+ 5 x2042) 2835717307)))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x3645 1)))))
(assert (=> (= (x1211 x1112 1) (x1211 x6069 1)) (= x6069 x1112)))
(assert (x4630 x3964))
(assert (not (= (+ 5 x3962) (+ x1186 3))))
(assert (not (= (x1211 x310 2) (x1211 x935 1))))
(assert (= x5319 (=> (and (= x744 4) (= x583 (x3910 x83)) (= x1964 (= x583 0)) (= (x5347 1461501637330902918203684832716283019655932542975 x3970) x83) (= x3970 (x3021 x4936))) (and (=> (not x1964) x2018) (=> x1964 x5361)))))
(assert (=> (< (- x2758 1) 10000) (not (= (+ 1 x3948) x2758))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x310 2))))
(assert (= (=> (and (= (x5474 x2527) x2448) (= x2043 (x66 x5502)) (= (> x2448 0) x2570)) (and (=> x2570 x3187) (=> (not x2570) x3198))) x497))
(assert (not (= (x1211 x4198 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x5421 1)))))
(assert (= (or (and x2760 x2300) (and x5040 x6072)) x5469))
(assert (x6051 x688))
(assert (x4630 x1198))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x4284 1) x4799))))
(assert (x4630 x1010))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x3414 1)))))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (x1211 x4293 1)))))
(assert (x5138 x668 x1294))
(assert (not (= (x1211 x928 1) (x1211 x310 2))))
(assert (x4630 x969))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x5421 1)))))
(assert (x4630 x978))
(assert (x6051 x4098))
(assert (not (= 2514000705 (+ x1186 3))))
(assert (x4630 x693))
(assert (x4630 x2209))
(assert (=> (> (+ 10000 1) x5745) (not (= (+ x98 1) x5745))))
(assert (= x4774 (and x5559 x2032)))
(assert (=> (= (x1211 x4527 1) (x1211 x5500 1)) (= x4527 x5500)))
(assert (not (= (x1211 x2060 1) (+ 4 x3962))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (+ 1 x3948)))))
(assert (=> (< (- x1303 1) 10000) (not (= (x1211 x4293 1) x1303))))
(assert (not (= (x1211 x928 1) (+ 2 x4054))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x1852 1)))))
(assert (not (= 3939881817 (+ x2042 4))))
(assert (x4630 x2782))
(assert (not (= (+ 3 x98) (+ 1 x5409))))
(assert (x4630 x1472))
(assert (= (and (not x933) x3837) x3146))
(assert (=> (< (- x83 1) 10000) (not (= (+ x5409 1) x83))))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x4218 2) x2758))))
(assert (= true x4762))
(assert (x4630 x1724))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x5421 1) x4527))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (+ 2 x4054)))))
(assert (= (=> (and (= x2639 (= x483 0)) (= x5915 (ite (> x5202 x5937) 1 0)) (= (ite (not x217) 1 0) x901) (= x5937 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246))) (= x217 (= 0 x798)) (= x483 (x5347 x901 x5915))) (and (=> (not x2639) x3198) (=> x2639 x4623))) x6129))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x902 1))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x1956 1))))
(assert (not (= (x1211 x4198 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= (+ x3962 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x4630 x1400))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x1849 1) x1598))))
(assert (not (= 117300739 (+ x2042 1))))
(assert (x251 x3921 x5697 x1369 x299))
(assert (= (and (not x5282) x930) x4333))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (+ 1 x98)))))
(assert (not (= (+ 4 x1186) (x1211 x5500 1))))
(assert (not (= (x1211 x182 1) 4168891048)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x3962 3))))
(assert (= x6109 (and x4357 x769)))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x1919 1)))))
(assert (not (= (x1211 x740 2) (x1211 x3576 1))))
(assert (= (=> (and (= x4900 (= 0 x5573)) (= (x5347 x1488 x1061) x2620) (= (ite (< x5835 1000000000000000000) 1 0) x1061) (= (- (/ x335 x5213) (uninterp_frac x335 x5213)) x2631) (= (= x2620 0) x2275) (= (uninterp_mod (* x4929 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x335) (= x5835 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5573))) (= x1488 (ite (not x4900) 1 0))) (and (=> (and (= x5404 x2631) (= x522 x3839) x2275 (= x3839 (- (/ x2852 x5213) (uninterp_frac x2852 x5213))) (= (uninterp_mod (* 1000000000000000000 x5573) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2852)) x2109) (=> (not x2275) x5361))) x670))
(assert (not (= (x1211 x5500 1) 18446744073709551615)))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (+ 5 x2042)))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x1451 1) x5745))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x4198 1) x935))))
(assert (not (= (x1211 x208 1) (+ x3962 4))))
(assert (=> (= (x1211 x1849 1) (x1211 x902 1)) (= x902 x1849)))
(assert (=> (= (x1211 x3543 1) (x1211 x1919 1)) (= x1919 x3543)))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (+ 1 x1186)))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (+ x98 4)))))
(assert (x5138 x4211 x6061))
(assert (x4630 x3567))
(assert (=> (< (- x4107 1) 10000) (not (= (+ 1 x5409) x4107))))
(assert (=> (< (- x952 1) 10000) (not (= (+ 1 x5409) x952))))
(assert (=> (> (+ 10000 1) x2820) (not (= (+ 4 x98) x2820))))
(assert (x399 x693))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (x1211 x2060 1)))))
(assert (not (= (x1211 x4293 1) (+ x3962 4))))
(assert (not (= 404098525 (x1211 x5421 1))))
(assert (=> (= (x1211 x946 1) (x1211 x6069 1)) (= x6069 x946)))
(assert (=> (< (- x4017 1) 10000) (not (= (x1211 x1852 1) x4017))))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x3148 3) x3414))))
(assert (=> (< (- x2820 1) 10000) (not (= (+ x2042 5) x2820))))
(assert (x4630 x2299))
(assert (x4630 x303))
(assert (=> (= (x1211 x5745 1) (x1211 x4800 1)) (= x5745 x4800)))
(assert (x4630 x2390))
(assert (x4630 x1330))
(assert (not (= (+ 3 x98) 1889567281)))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x2862 1) x208))))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x1919 1)))))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x3414 1) x2154))))
(assert (x4630 x2958))
(assert (=> (= (x1211 x1112 1) (x1211 x928 1)) (= x928 x1112)))
(assert (=> (> (+ 10000 1) x902) (not (= (+ x5409 1) x902))))
(assert (x5138 x4373 x2742))
(assert (x6051 x201))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x740 2)))))
(assert (= (and x737 x5236) x2792))
(assert (not (= (x1211 x1112 1) 274184521717934524641157099916833587206)))
(assert (x4630 x6159))
(assert (not (= 1000000000000000000 (x1211 x928 1))))
(assert (not (= (+ 2 x4054) (x1211 x208 1))))
(assert (x4630 x4871))
(assert (=> (= (x1211 x5917 1) (x1211 x4198 1)) (= x4198 x5917)))
(assert (not (= (+ 5 x2042) 157198259)))
(assert (not (= (+ 4 x1186) (x1211 x935 1))))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (+ 1 x2042)))))
(assert (x399 x935))
(assert (x4630 x5126))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x740 2))))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (+ x1186 3)))))
(assert (x4630 x4641))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x740 2) x1919))))
(assert (x4630 x3236))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x4610 1)))))
(assert (x4630 x1185))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x5500 1) x6069))))
(assert (=> (= (x1211 x1112 1) (x1211 x5421 1)) (= x5421 x1112)))
(assert (not (= (+ x2042 5) (+ x2042 4))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x361 1)))))
(assert (not (= 826074471 (x1211 x3513 1))))
(assert (not (= (x1211 x4090 3) (+ 5 x2042))))
(assert (=> (= (x1211 x3414 1) (x1211 x5421 1)) (= x5421 x3414)))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 x902 1) x3786))))
(assert (not (= (+ 5 x2042) (x1211 x4799 1))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x2862 1) x3230))))
(assert (=> (= (x1211 x3645 1) (x1211 x3755 1)) (= x3645 x3755)))
(assert (not (= (+ x3457 2) (+ x1186 4))))
(assert (=> (= (x1211 x182 1) (x1211 x2060 1)) (= x182 x2060)))
(assert (=> (= (x1211 x1849 1) (x1211 x3409 1)) (= x1849 x3409)))
(assert (= x4819 (and x1732 (not x33))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x740 2) x902))))
(assert (=> (< (- x4800 1) 10000) (not (= (+ x5409 1) x4800))))
(assert (not (= (+ 4 x1186) 2514000705)))
(assert (not (= (+ x2042 4) (x1211 x3409 1))))
(assert (=> (> (+ 10000 1) x4063) (not (= (x1211 x1852 1) x4063))))
(assert (not (= (x1211 x4017 1) 274184521717934524641157099916833587206)))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 x4284 1)))))
(assert (not (= (x1211 x4090 3) (+ x3962 5))))
(assert (= (ite (= x3604 x5052) x3194 (x75 x5052)) (x7 x5052)))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x740 2)))))
(assert (= x2006 (and (not x2774) x1892)))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x1112 1)))))
(assert (not (= 1000000000000000000 (+ 2 x4054))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ x2042 4))))
(assert (x4630 x3860))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x182 1) x3979))))
(assert (x6051 x4872))
(assert (=> (> (+ 10000 1) x1852) (not (= (x1211 x4090 3) x1852))))
(assert (not (= (+ 5 x2042) (+ x2042 3))))
(assert (=> (= (x1211 x5500 1) (x1211 x3513 1)) (= x3513 x5500)))
(assert (x6051 x2629))
(assert (=> (< (- x740 1) 10000) (not (= (+ 2 x3457) x740))))
(assert (= x1691 (=> (and (= x160 (or (and (> 32 x1094) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1094) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1094))) (= (x6031 (+ x5502 x46)) x846) (= x46 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x12)) (= x12 (x6031 (+ 31 x1094)))) (and (=> (not x160) x497) (=> x160 x3198)))))
(assert (not (= (x1211 x1451 1) (+ x98 1))))
(assert (=> (< (- x4610 1) 10000) (not (= (x1211 x2862 1) x4610))))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x406 1)))))
(assert (x4630 x3789))
(assert (not (= (x1211 x182 1) (+ x4054 2))))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x2862 1) x2417))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x4799 1)))))
(assert (=> (= (x1211 x5745 1) (x1211 x5421 1)) (= x5745 x5421)))
(assert (not (= (x1211 x361 1) 2835717307)))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 x1919 1)))))
(assert (x4630 x2335))
(assert (not (= (+ 4 x98) (x1211 x1852 1))))
(assert (=> (= (x1211 x4017 1) (x1211 x1852 1)) (= x1852 x4017)))
(assert (=> (> (+ 10000 1) x3409) (not (= (+ x1186 1) x3409))))
(assert (not (= (x1211 x5500 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (x1211 x3576 1)))))
(assert (=> (> (+ 10000 1) x4610) (not (= (+ x3962 1) x4610))))
(assert (x399 x1467))
(assert (= x5173 (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2592)) x5434) (= x5842 (> x5833 x5434))) (and (=> x5842 x5361) (=> (and (= x1778 x4227) (= x4227 (uninterp_mod (* x5833 x2592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x5842)) x252)))))
(assert (not (= 4168891048 (x1211 x1112 1))))
(assert (= (=> (and (= x666 x70) (= x1862 x4163)) x2142) x4470))
(assert (not (= (x1211 x3645 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x2060 1)))))
(assert (x6051 x4682))
(assert (x4630 x5872))
(assert (= (x400 x2992) (ite (= x2992 x3712) x3994 (x3313 x2992))))
(assert (not (= (x1211 x6069 1) 404098525)))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x406 1)))))
(assert (= (=> (and (= (x3021 x6049) x314) (= (x2697 x5177) x5694) (= (< 0 x5694) x2562) (= x6049 (x6031 (+ 32 x1307)))) (and (=> (not x2562) x5361) (=> x2562 x5004))) x5289))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x5745 1) x5617))))
(assert (not (= 2 (+ 1 x5409))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x4527 1)))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x6069 1)) (= x6069 274184521717934524641157099916833587231)))
(assert (= x977 (and (not x2287) x1484)))
(assert (not (= (+ x2042 3) 274184521717934524641157099916833587231)))
(assert (x263 x218 x1257))
(assert (=> (> (+ 10000 1) x1467) (not (= (+ x3962 4) x1467))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ 2 x3962)))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (+ 1 x5409)))))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (x1211 x6069 1)))))
(assert (not (= (x406 1) (x1211 x6069 1))))
(assert (=> (= (x1211 x3414 1) (x1211 x5917 1)) (= x5917 x3414)))
(assert (=> (< (- x693 1) 10000) (not (= x693 (+ x2042 3)))))
(assert (= (or (and x1168 x1250) (and x1111 x565)) x814))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x4090 3) x4610))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x3543 1)))))
(assert (not (= (+ 3 x98) (x1211 x3543 1))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (x1211 x740 2)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x5917 1) x740))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (+ 2 x2042)))))
(assert (= x1596 (and x1168 (not x1250))))
(assert (=> (< (- x4702 1) 10000) (not (= (x1211 x4527 1) x4702))))
(assert (= x3229 (and (not x2201) x1999)))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (+ 4 x98)))))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (x1211 x928 1)))))
(assert (= (x2104 x4970) 0))
(assert (= x3395 (or (and x595 x1730) (and (not x3170) x1527))))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x4293 1) x4293))))
(assert (= (=> (and (= (x3843 x3005) x4267) (= (< 0 x4267) x1618)) (and (=> (not x1618) x3293) (=> x1618 x84))) x5458))
(assert (not (= (+ 3 x98) 1461501637330902918203684832716283019655932542975)))
(assert (x4630 x1831))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x3836 1)))))
(assert (x4630 x3823))
(assert (=> (< (- x4198 1) 10000) (not (= (x1211 x5917 1) x4198))))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x1451 1) x1956))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x3992 2)))))
(assert (not (= (x1211 x310 2) (+ x3457 2))))
(assert (x6051 x424))
(assert (x4630 x1248))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x3414 1)))))
(assert (= (or (and x2646 x4452) (and x6150 x1955) (and x4942 x2491) (and x3900 x3225) (and (not x4217) x3123) (and x1764 x5804)) x1549))
(assert (not (= 4294967296 (+ x2042 1))))
(assert (= (=> (and (= x3301 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2514000705 x3871)) (= (x3910 274184521717934524641157099916833587206) x3524) (= x3174 68) (> x3524 0) (not (< x3174 4)) (= x3871 2835717307) (= x688 x394) (= x1218 x3174) (not (= x3871 1889567281)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5418) (and (< x5418 64) (= (<= x5418 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x468) (= x2022 x2422) (not (= 826074471 x3871)) (not (< x3871 826074471)) (= (x3337 (- x3174 4)) x5418)) (and (=> (not x468) x1099) (=> x468 x4893))) x6074))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x3513 1) x1852))))
(assert (=> (< (- x3979 1) 10000) (not (= (+ x1186 1) x3979))))
(assert (= (and x381 x417) x5265))
(assert (=> (< (- x3575 1) 10000) (not (= (+ 1 x3948) x3575))))
(assert (x4630 x1244))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (+ 1 x1186)))))
(assert (x5138 x264 x1673))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x1112 1) x3414))))
(assert (= 0 (x6052 x675)))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (+ 2 x2042)))))
(assert (not (= (+ x2042 2) (x1211 x182 1))))
(assert (not (= (+ x2042 5) 18446744073709551615)))
(assert (not (= (+ x5409 1) (x1211 x1956 1))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x3414 1)))))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (+ x3962 4)))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x5421 1))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x2042 5))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x1451 1)))))
(assert (not (= 117300739 (x1211 x3576 1))))
(assert (=> (= (x1211 x1919 1) (x1211 x4800 1)) (= x1919 x4800)))
(assert (= x525 (=> (and (= x5482 (x3910 274184521717934524641157099916833587202)) (not (= 826074471 x2001)) (= x3409 x1071) (= 36 x599) (= x4026 x599) (not (< x599 4)) (not (< x2001 826074471)) (< 0 x5482) (= x4870 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4379) true) (< x4379 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4379))) (= (x3337 (- x599 4)) x4379) (= x2001 1889567281) (= x1698 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (and (=> (not x4870) x3814) (=> x4870 x520)))))
(assert (x399 x3755))
(assert (not (= (x1211 x3645 1) (+ x3962 1))))
(assert (not (= (x1211 x182 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x3836 1)))))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x4284 1) x6069))))
(assert (=> (< (- x3409 1) 10000) (not (= (x1211 x1112 1) x3409))))
(assert (= x2140 (and x914 (not x3127))))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= 274184521717934524641157099916833587206 (+ 1 x2042))))
(assert (not (= (x1211 x3755 1) (x1211 x740 2))))
(assert (x4630 x11))
(assert (= (ite (and x708 (not x5449) x1841) (x2826 x6054) (x3247 x6054)) (x3167 x6054)))
(assert (not (= (x1211 x1852 1) (x406 1))))
(assert (= x2326 (and (not x5689) x4575)))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x4527 1)))))
(assert (not (= (x1211 x182 1) 1461501637330902918203684832716283019655932542976)))
(assert (= x564 (=> (and (= x4006 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2580))) (= x793 (uninterp_mod (* x3048 x4909) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< x4006 0) x4128) (= (- (/ x793 1000000000000000000) (uninterp_frac x793 1000000000000000000)) x2580)) (and (=> (and (= x5232 (< 1 x5705)) (= x2559 x2580) (not x4128) (= x5573 x2559) (= (x3088 x1307) x5705) (not x5232)) x367) (=> x4128 x5361)))))
(assert (= x2997 (and (not x2100) x477)))
(assert (x4630 x3443))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x946 1)))))
(assert (x4630 x3))
(assert (= (and (not x2491) x4942) x1764))
(assert (=> (= (x1211 x3543 1) (x1211 x4527 1)) (= x3543 x4527)))
(assert (=> (< (- x2696 1) 10000) (not (= (+ 1 x3948) x2696))))
(assert (= x1777 (and (not x5921) x1212)))
(assert (x4630 x4462))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x3414 1)))))
(assert (not (= (x1211 x902 1) 1000000000000000000)))
(assert (x4630 x2132))
(assert (= x4749 (=> (and (= x4489 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3227))) (= (< x4489 0) x3745) (= (x6031 (+ 32 x5177)) x675) (= x3227 (x4183 x675))) (and (=> x3745 x5361) (=> (and (= x3227 x2575) (= x5213 x2575) (= x2842 (x2697 x5177)) (= (< 1 x2842) x172) (not x3745) (not x172)) x2748)))))
(assert (= (or x2499 (and x1230 x1579)) x4378))
(assert (=> (< (- x902 1) 10000) (not (= (+ 4 x2042) x902))))
(assert (x4630 x5932))
(assert (not (= (+ x3962 2) 4294967296)))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x208 1) x2154))))
(assert (not (= (x1211 x928 1) (+ x5409 1))))
(assert (=> (> (+ 10000 1) x5421) (not (= (x1211 x935 1) x5421))))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (x1211 x3543 1)))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x4799 1))))
(assert (x4630 x3103))
(assert (x6051 x218))
(assert (= (=> (and (= (< 0 x1983) x1005) (= (x2697 x5177) x1983)) (and (=> (not x1005) x5361) (=> x1005 x4749))) x4755))
(assert (= x4851 (=> (and (= (x3910 x3740) x2057) (= (x5347 1461501637330902918203684832716283019655932542975 x3431) x3740) (= x690 (x3337 (- x618 x2218))) (= x4546 (x5347 1461501637330902918203684832716283019655932542975 x3874)) (= x618 (x6031 (+ 36 x2218))) (= x5936 (x6031 (+ x2136 32))) (= x3431 (x2534 x4744)) (= (x6031 (+ x2218 4)) x4330) (= (x3129 x2595) x3874) (= (= 0 x2057) x2058) (= (x352 x5936) x4744)) (and (=> x2058 x5361) (=> (not x2058) x3983)))))
(assert (not (= (+ x3962 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x406 1))))
(assert (x4630 x2199))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x208 1) x2601))))
(assert (not (= (x1211 x4284 1) 826074471)))
(assert (=> (< (- x561 1) 10000) (not (= x561 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x946 1) x2549))))
(assert (not (= (x1211 x5745 1) (x1211 x740 2))))
(assert (= x3152 (=> (and (not (> 4 x761)) (= x5471 x1852) (= x578 (x3337 (- x761 4))) (= x3305 1889567281) (not (> 826074471 x3305)) (not (= x3305 826074471)) (= x4056 (x3910 274184521717934524641157099916833587206)) (= 36 x761) (= x1655 x761) (= x4274 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x4291 (or (and (< x578 32) (= (<= x578 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x578))) (< 0 x4056)) (and (=> x4291 x3981) (=> (not x4291) x2437)))))
(assert (=> (= (x1211 x6069 1) (x1211 x3409 1)) (= x6069 x3409)))
(assert (not (= (x1211 x3645 1) (+ 1 x98))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (x1211 x1919 1)))))
(assert (= x1527 (and x1730 (not x595))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x5917 1)))))
(assert (= x3447 (=> (= (= x1606 0) x4467) (and (=> (not x4467) x5508) (=> x4467 x5361)))))
(assert (not (= (x1211 x740 2) 1000000000000000000)))
(assert (= x1503 (and x5186 x5265)))
(assert (not (= (+ x3962 5) 274184521717934524641157099916833587206)))
(assert (not (= (x1211 x902 1) (+ x3962 4))))
(assert (not (= (x1211 x3543 1) 1889567281)))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x5421 1) x3576))))
(assert (x6051 x4201))
(assert (not (= (x1211 x310 2) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x4799 1))))
(assert (not (= (x1211 x4218 2) (x1211 x3148 3))))
(assert (x4630 x2005))
(assert (x4630 x383))
(assert (not (= (x1211 x740 2) (+ 5 x2042))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (x1211 x3543 1)))))
(assert (not (= (+ 2 x3457) (+ x2042 3))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x6069 1)))))
(assert (x4630 x2529))
(assert (not (= (x406 1) (x1211 x182 1))))
(assert (not (= (x1211 x3513 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x4630 x2727))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x1919 1)))))
(assert (=> (< (- x3740 1) 10000) (not (= (x1211 x310 2) x3740))))
(assert (x4630 x5773))
(assert (x4630 x5757))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 x1849 1)))))
(assert (x4630 x4375))
(assert (not (= (+ 2 x2042) (x1211 x946 1))))
(assert (not (= (+ 1 x3948) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (+ 3 x3962)))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x928 1)))))
(assert (= (or (and x261 x20) x3696) x877))
(assert (= x423 (or (and x2684 x35) (and (not x4119) x2053))))
(assert (=> (> (+ 10000 1) x3255) (not (= (+ 1 x5409) x3255))))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x3409 1)))))
(assert (=> (= (x1211 x5421 1) (x1211 x3409 1)) (= x5421 x3409)))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x3836 1))))
(assert (=> (= (x1211 x1852 1) (x1211 x3755 1)) (= x3755 x1852)))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x5917 1) x902))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x3645 1))))
(assert (x4630 x1978))
(assert (not (= (x1211 x4527 1) (x1211 x310 2))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x3409 1)))))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x3513 1)))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (x1211 x2060 1)))))
(assert (=> (> (+ 10000 1) x3645) (not (= (+ x3962 5) x3645))))
(assert (= (x1809 x5611) (ite (= x5611 x5990) x655 (x2690 x5611))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x2060 1)))))
(assert (=> (< (- x3148 1) 10000) (not (= (x1211 x3645 1) x3148))))
(assert (not (= (x1211 x3148 3) (x1211 x3409 1))))
(assert (= x5415 (and (not x2519) x4320)))
(assert (=> (= (+ x98 1) (+ x3962 1)) (= x740 x4218)))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x2862 1))))
(assert (x4630 x2413))
(assert (not (= (x1211 x208 1) (x406 1))))
(assert (not (= (x1211 x3645 1) (x406 1))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x5421 1))))
(assert (x4630 x2031))
(assert (x4630 x5500))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (x1211 x1852 1)))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x740 2)))))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x4218 2) x3576))))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (+ x4054 2)))))
(assert (=> (> (+ 10000 1) x3645) (not (= (+ x3962 2) x3645))))
(assert (= x5741 (and (not x3001) x2112)))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (x1211 x4218 2)))))
(assert (=> (< (- x693 1) 10000) (not (= (x1211 x4527 1) x693))))
(assert (= 0 (x3104 x5017)))
(assert (x4630 x4109))
(assert (=> (> (+ 10000 1) x2862) (not (= (x1211 x740 2) x2862))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x902 1)))))
(assert (=> (< (- x3740 1) 10000) (not (= (x1211 x902 1) x3740))))
(assert (= (ite (and x2869 x3512 (not x3708)) (x2680 x374) (ite (and (not x3512) (not x3708) x2869 (not x5704)) (x4908 x374) (x6020 x374))) (x2889 x374)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x4527 1))))
(assert (x6051 x1400))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x361 1)))))
(assert (=> (< (- x6037 1) 10000) (not (= (x1211 x4090 3) x6037))))
(assert (= x4622 (or (and (not x5570) x4268) (and x493 x4291))))
(assert (=> (< (- x1598 1) 10000) (not (= (+ 2 x4054) x1598))))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x928 1) x4063))))
(assert (= (=> (= x1154 (= x1176 0)) (and (=> (and (= x1718 (uninterp_mod (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3116 (= 0 x6144)) (not x1154) (= (x6031 (+ 32 x5847)) x5174) (= (x6031 (+ 32 x1718)) x5454) (= (x6031 (+ x5847 x5454)) x709) (or (and (= x6137 (< x4578 x300)) (= x5733 (x5723 x5409)) (= x3552 (+ x5409 1)) (>= 1461501637330902918203684832716283019655932542975 x5733) (= (x406 1) x5231) (= x5409 (x406 1)) (not x3116) (= (x6031 (+ x5174 x3223)) x300) (<= 0 x5733) (= (uninterp_mod (* x6144 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3223) (= x4578 (x6031 (+ 64 x5847))) (= (- (/ (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- x5409 x5231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)) x4679) (> 1461501637330902918203684832716283019655932542976 x5733) (or (not x6137) (and (= (x5723 x3552) x4791) (= (- (/ (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- x3552 x2268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)) x4242) (< x4791 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x4791) x6137 (= (x6031 (+ 64 x5174)) x4503) (= x2161 (> x300 x4503)) (= (x406 1) x2268) (not x2161) (<= 0 x4791)))) x3116)) x5610) (=> x1154 x5361))) x6044))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ x3962 5))))
(assert (not (= (+ x3948 1) (x1211 x4284 1))))
(assert (=> (> (+ 10000 1) x693) (not (= (x1211 x1919 1) x693))))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (x1211 x928 1)))))
(assert (x4630 x4990))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x406 1))))
(assert (=> (> (+ 10000 1) x4090) (not (= (+ x98 1) x4090))))
(assert (x4630 x4718))
(assert (not (= (x1211 x946 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x740 2) x1248))))
(assert (x4630 x3089))
(assert (not (= 2 (+ 3 x98))))
(assert (not (= (x1211 x2862 1) (+ x98 4))))
(assert (x4630 x5847))
(assert (not (= 826074471 (+ 4 x3962))))
(assert (not (= 1889567281 (+ x2042 1))))
(assert (not (= (+ 2 x2042) 4168891048)))
(assert (not (= 3 (+ 3 x98))))
(assert (not (= (+ x2042 4) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (x1211 x4090 3) (x1211 x3543 1))))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x3543 1)))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x935 1)))))
(assert (not (= 2835717307 (x1211 x935 1))))
(assert (not (= (x1211 x310 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (=> (and (= x717 (x6031 (+ x443 x823))) (= (or (and (> 32 x388) (= (<= x388 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x388)) x36) (= x443 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3412)) (= x3412 (x6031 (+ x388 31)))) (and (=> (not x36) x5641) (=> x36 x3198))) x3926))
(assert (=> (= (x1211 x4284 1) (x1211 x1956 1)) (= x1956 x4284)))
(assert (x4630 x1813))
(assert (not (= (+ x98 1) (+ 3 x1186))))
(assert (=> (= (x1211 x4293 1) (x1211 x4284 1)) (= x4284 x4293)))
(assert (not (= 117300739 (x1211 x1112 1))))
(assert (not (= (x1211 x740 2) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x4630 x1598))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x3836 1)))))
(assert (x4630 x2371))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (+ x2042 5)))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x182 1)))))
(assert (=> (< (- x2820 1) 10000) (not (= (x1211 x4293 1) x2820))))
(assert (=> (= (x1211 x4017 1) (x1211 x1919 1)) (= x1919 x4017)))
(assert (=> (> (+ 10000 1) x3786) (not (= (x1211 x208 1) x3786))))
(assert (=> (> (+ 10000 1) x1248) (not (= x1248 (x1211 x1451 1)))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x1852 1)))))
(assert (not (= (x1211 x4090 3) (x1211 274184521717934524641157099916833587231 1))))
(assert (= (x4952 x5424) 0))
(assert (x4630 x1123))
(assert (= x1634 (or (and x1897 (not x5943)) (and x2798 x2518))))
(assert (not (= (x1211 x2060 1) (+ 3 x2042))))
(assert (not (= (x1211 x740 2) (x1211 x5917 1))))
(assert (=> (= (x1211 x1956 1) (x1211 x4799 1)) (= x1956 x4799)))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x4218 2)))))
(assert (not (= (x1211 x3409 1) (+ 1 x3962))))
(assert (not (= (+ 2 x3962) (x1211 x5745 1))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x3513 1) x3771))))
(assert (not (= (x1211 x1852 1) 274184521717934524641157099916833587206)))
(assert (=> (< (- x1248 1) 10000) (not (= (+ 1 x2042) x1248))))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (+ 1 x3948)))))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x310 2) x4293))))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x3576 1) x3979))))
(assert (not (= (x1211 x4293 1) (+ x4054 2))))
(assert (=> (< (- x561 1) 10000) (not (= (+ x3962 2) x561))))
(assert (x4630 x5401))
(assert (not (= (+ 2 x2042) (+ x3962 1))))
(assert (not (= (x1211 x2060 1) 157198259)))
(assert (=> (< (- x2549 1) 10000) (not (= (+ 3 x3962) x2549))))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (x1211 x5500 1)))))
(assert (= (=> (= (= x2820 274184521717934524641157099916833587202) x2217) (and (=> x2217 x5423) (=> (not x2217) x4276))) x4742))
(assert (not (= 18446744073709551615 (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x3148 3)))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x4198 1)))))
(assert (x4630 x3005))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x928 1) x5617))))
(assert (not (= 3939881817 (+ 3 x2042))))
(assert (=> (< (- x182 1) 10000) (not (= (+ x2042 5) x182))))
(assert (not (= (+ x3962 2) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x4630 x2029))
(assert (x4630 x5417))
(assert (x6051 x1126))
(assert (= x603 (=> (and (= x4452 (> x556 x1561)) (= (x6031 (+ x243 x556)) x1561)) (and (=> x4452 x1178) (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x4792) x5421) (= x3441 x1524) (= 32 x1921) (= x114 (x1211 x5421 1)) (= x4306 1) (not x4452)) x3832)))))
(assert (x4630 x4566))
(assert (not (= (x406 1) (x1211 x5745 1))))
(assert (not (= (x1211 x3513 1) (+ 4 x98))))
(assert (x4630 x4772))
(assert (= x159 (and (not x4649) x801)))
(assert (not (= 4168891048 (x1211 x3513 1))))
(assert (=> (< (- x2417 1) 10000) (not (= (x1211 x4800 1) x2417))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (+ x1186 4)))))
(assert (x4630 x3331))
(assert (x4630 x5368))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x3414 1)))))
(assert (not (= 1 (x406 1))))
(assert (= (or (and x788 x2398) (and x3229 x3417)) x1346))
(assert (= (x759 x291) (ite (= x291 x4710) 0 (x4225 x291))))
(assert (not (= (x1211 x4198 1) 2514000705)))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (x1211 x928 1)))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x4218 2) x4113))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x1849 1))))
(assert (not (= (+ 2 x4054) 2514000705)))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (+ x1186 3)))))
(assert (x4630 x4898))
(assert (=> (< (- x3414 1) 10000) (not (= (x1211 x4198 1) x3414))))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x3836 1) x2862))))
(assert (x4630 x5803))
(assert (=> (< (- x3409 1) 10000) (not (= (x1211 x182 1) x3409))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x1919 1)))))
(assert (x4630 x1176))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x4610 1)))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x310 2)))))
(assert (x4630 x3642))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (+ x3962 2)))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (+ x98 1)))))
(assert (=> (< (- x3740 1) 10000) (not (= (x406 1) x3740))))
(assert (x4630 x844))
(assert (= x1717 (=> (and (= (x6060 x4810) x371) (= (> x371 0) x6063)) (and (=> x6063 x5631) (=> (not x6063) x2355)))))
(assert (not (= (x1211 x2862 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x4630 x5350))
(assert (x4630 x5658))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x1919 1))))
(assert (not (= 404098525 (x1211 x3414 1))))
(assert (not (= 274184521717934524641157099916833587202 (+ x2042 5))))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (x1211 x4284 1)))))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x4799 1) x3699))))
(assert (not (= (x1211 x4090 3) (x1211 x928 1))))
(assert (not (= (x1211 x4610 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x4630 x5136))
(assert (x6051 x5305))
(assert (=> (= (x1211 x928 1) (x1211 x902 1)) (= x928 x902)))
(assert (not (= (x1211 x4017 1) (x406 1))))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x1956 1) x3755))))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (x1211 x1112 1)))))
(assert (=> (< (- x1919 1) 10000) (not (= (+ 2 x3962) x1919))))
(assert (not (= (+ 3 x3962) (x1211 x208 1))))
(assert (x4630 x842))
(assert (x4630 x3615))
(assert (=> (> (+ 10000 1) x3414) (not (= (+ x5409 1) x3414))))
(assert (= x4116 (and x2493 (not x1320))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (+ x2042 1)))))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (+ 1 x3948)))))
(assert (x4630 x2796))
(assert (= x2780 (=> (and (= x4047 (> x3013 x2038)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753)) x2038)) (and (=> (and (= x26 x2618) (not x4047) (= (uninterp_mod (* x3013 x3753) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x26)) x2541) (=> x4047 x3198)))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x4017 1) x3836))))
(assert (x4630 x2800))
(assert (=> (< (- x1919 1) 10000) (not (= (x1211 x4198 1) x1919))))
(assert (=> (< (- x1775 1) 10000) (not (= (x1211 x4218 2) x1775))))
(assert (not (= (x1211 x3409 1) 1)))
(assert (not (= (x1211 x2862 1) 117300739)))
(assert (=> (= (x1211 x1852 1) (x1211 x4800 1)) (= x1852 x4800)))
(assert (= (=> (and (= x1915 (x3910 x3255)) (= 128 x1905) (= x2980 (= x1915 0))) (and (=> x2980 x5361) (=> (not x2980) x2957))) x3394))
(assert (=> (< (- x693 1) 10000) (not (= x693 (+ x2042 2)))))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (x1211 x182 1)))))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (x1211 x4198 1)))))
(assert (x4630 x4919))
(assert (= x4947 (and x1695 (not x1490))))
(assert (x4630 x4590))
(assert (=> (< (- x5745 1) 10000) (not (= (x1211 x1852 1) x5745))))
(assert (= x1122 (=> (and (= x5068 (= 0 x2105)) (= (x5347 x4820 x5350) x988) (= x4820 (ite (not x5068) 1 0)) (= x5350 (ite (> x3781 x5164) 1 0)) (= x5164 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2105))) (= x4618 (= x988 0))) (and (=> x4618 x4174) (=> (not x4618) x3198)))))
(assert (= (ite (and x5477 x255 (not x4901)) (x594 x3577) (x5134 x3577)) (x2674 x3577)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x2042 3))))
(assert (x4630 x541))
(assert (not (= (+ x5409 1) (x1211 x1849 1))))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x2862 1)))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x4090 3)))))
(assert (= (=> (and (= x2732 (x244 x2159)) (= x2929 (> x2732 0))) (and (=> (not x2929) x3198) (=> x2929 x4903))) x416))
(assert (=> (> (+ 10000 1) x1089) (not (= (+ x3962 3) x1089))))
(assert (not (= (x1211 x3755 1) (+ 4 x1186))))
(assert (x4630 x388))
(assert (=> (> (+ 10000 1) x3979) (not (= (+ x3962 3) x3979))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x2862 1)))))
(assert (= (and (not x1955) x6150) x4942))
(assert (=> (< (- x4293 1) 10000) (not (= (+ 3 x98) x4293))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x361 1)))))
(assert (x4630 x1376))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x2060 1) x3755))))
(assert (= x5996 (and x18 x1960)))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (x1211 x4610 1)))))
(assert (=> (= (x1211 x1849 1) (x1211 x2060 1)) (= x2060 x1849)))
(assert (not (= 404098525 (+ x3962 5))))
(assert (not (= 1 (x1211 x3576 1))))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x310 2) x5917))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x1451 1)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x1849 1)))))
(assert (not (= (x1211 x4017 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (= (and (not x4234) x3794) x6110))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (+ 3 x3962)))))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (x1211 x4799 1)))))
(assert (x4630 x158))
(assert (not (= 274184521717934524641157099916833587206 (+ 1 x98))))
(assert (= (and x1662 (not x6071)) x165))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (+ x2042 2)))))
(assert (= (=> (and (= (= x4284 x1633) x5943) (= x4284 x3470)) (and (=> (and (= x2975 32) (<= 0 x5874) (= x6054 (x1211 x4284 1)) x5943 (= x5874 (x5768 x6054)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5874) (= 1 x3496)) x3824) (=> (not x5943) x5998))) x467))
(assert (x4630 x1693))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x4293 1)))))
(assert (=> (> (+ 10000 1) x2060) (not (= (+ x2042 3) x2060))))
(assert (=> (= (x1211 x2060 1) (x1211 x208 1)) (= x208 x2060)))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x5500 1)))))
(assert (not (= (+ 4 x1186) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x4017 1)))))
(assert (x6051 x5938))
(assert (= (=> (and (= (x3088 x5896) x5142) (= x2565 (> x5142 0)) (= x5896 (x3608 x1015))) (and (=> x2565 x287) (=> (and (not x2565) (= x2218 x5177)) x726))) x2591))
(assert (x4630 x2592))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (+ 2 x4054)))))
(assert (x4630 x3441))
(assert (=> (< (- x935 1) 10000) (not (= x935 (x1211 x3645 1)))))
(assert (x4630 x2254))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x5745 1) x3992))))
(assert (x4630 x2356))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x928 1) x3543))))
(assert (=> (> (+ 10000 1) x3230) (not (= (+ 3 x1186) x3230))))
(assert (x4630 x6047))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x5917 1) x5800))))
(assert (x4630 x1024))
(assert (=> (> (+ 10000 1) x946) (not (= (+ 2 x2042) x946))))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x3513 1) x1956))))
(assert (= x5910 (and x5366 x4841)))
(assert (x4630 x3762))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x3414 1) x208))))
(assert (x4630 x3315))
(assert (not (= (+ 1 x2042) (x1211 x1849 1))))
(assert (=> (< (- x4644 1) 10000) (not (= (x1211 x4527 1) x4644))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (+ 2 x2042)))))
(assert (not (= (+ x3962 5) (x1211 x1849 1))))
(assert (not (= (x1211 x3543 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4630 x4667))
(assert (= (x5930 x5985) 0))
(assert (x4630 x4271))
(assert (= x1821 (=> (and (= x720 x2156) (= 0 x541)) x4852)))
(assert (not (= (x1211 x3148 3) 157198259)))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (+ 4 x2042)))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x4610 1))))
(assert (not (= (+ x3962 5) (x1211 x740 2))))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x4090 3) x952))))
(assert (x4630 x715))
(assert (not (= (x1211 x3148 3) (x1211 x182 1))))
(assert (x4630 x26))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x1112 1))))
(assert (not (= (x1211 x4090 3) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (= (x1211 x3576 1) (x1211 x6069 1)) (= x3576 x6069)))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x182 1) x4198))))
(assert (x4630 x341))
(assert (not (= (x1211 x4017 1) (+ x2042 1))))
(assert (x4630 x5736))
(assert (= x1029 (=> (and (= x2808 (x5347 1461501637330902918203684832716283019655932542975 x5816)) (= (= x5816 x2808) x632)) (and (=> (not x632) x2607) (=> x632 x5574)))))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 x3543 1)))))
(assert (x4630 x4778))
(assert (not (= (x1211 x946 1) (+ 2 x3457))))
(assert (x4630 x1974))
(assert (=> (= (x1211 x5917 1) (x1211 x182 1)) (= x182 x5917)))
(assert (not (= (x1211 x1112 1) 2)))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (+ 5 x2042)))))
(assert (x4630 x2797))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x4090 3) x1919))))
(assert (not (= (+ 1 x3962) (x1211 x182 1))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (+ x3457 2)))))
(assert (=> (< (- x4284 1) 10000) (not (= (x1211 x4198 1) x4284))))
(assert (x4630 x3246))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x1112 1)))))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (+ x3962 5)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x1849 1))))
(assert (x4630 x141))
(assert (not (= (+ 4 x1186) (x1211 x4527 1))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x4284 1))))
(assert (x4630 x4604))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (x1211 x3543 1)))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (+ x1186 3)))))
(assert (= (and x5657 (not x3891)) x1700))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x4293 1)))))
(assert (not (= (x1211 x902 1) (x1211 x310 2))))
(assert (not (= (x1211 x4293 1) (+ 4 x1186))))
(assert (= (and (not x53) x2834) x4788))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (+ x1186 3)))))
(assert (x4630 x6154))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x3409 1) x3511))))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x1919 1)))))
(assert (not (= (x1211 x1451 1) 2835717307)))
(assert (x4630 x5519))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (+ x2042 4)))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x1849 1)))))
(assert (=> (< (- x2417 1) 10000) (not (= (x1211 x2060 1) x2417))))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (+ x3962 1)))))
(assert (not (= (+ 4 x2042) (x1211 x3836 1))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x406 1) x1248))))
(assert (= x1621 (=> (and (= x1440 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4733))) (= (< x1440 x5727) x1854)) (and (=> x1854 x5361) (=> (and (= x4796 (uninterp_mod (* x4733 x5727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x1854) (= x4796 x4738)) x5151)))))
(assert (not (= (x1211 x2862 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (+ x3962 3)))))
(assert (not (= (x1211 x4284 1) 1)))
(assert (=> (> (+ 10000 1) x182) (not (= (+ 2 x3962) x182))))
(assert (not (= (x1211 x2060 1) 274184521717934524641157099916833587206)))
(assert (x4630 x3630))
(assert (x4630 x386))
(assert (= x3821 true))
(assert (= (and x545 x5864) x1664))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x5500 1) x928))))
(assert (=> (> (+ 10000 1) x4554) (not (= (+ x2042 2) x4554))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x4610 1)))))
(assert (=> (= (x1211 x6069 1) (x1211 x4284 1)) (= x6069 x4284)))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x4800 1) x3576))))
(assert (not (= (x1211 x1112 1) (x1211 x3148 3))))
(assert (=> (= (x1211 x946 1) (x1211 x2862 1)) (= x946 x2862)))
(assert (=> (= (+ x1186 3) (+ 3 x3962)) (= x310 x740)))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x5421 1)))))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x4090 3)))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (+ x2042 5)))))
(assert (not (= (x1211 x928 1) (+ 5 x3962))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x1852 1) x3740))))
(assert (not (= (+ x2042 5) (x1211 x4610 1))))
(assert (=> (= (+ 1 x2042) (+ 1 x98)) (= x3992 x4218)))
(assert (not (= (+ x3962 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x1211 x4218 2) (x1211 x1849 1))))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x3513 1) x3836))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (+ x2042 5)))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (+ x3962 3)))))
(assert (not (= (x1211 x902 1) (+ 1 x98))))
(assert (not (= (x1211 x5917 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x1852 1) x4090))))
(assert (not (= (x1211 x3513 1) 404098525)))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x935 1) x2696))))
(assert (not (= (+ 3 x1186) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (< (- x361 1) 10000) (not (= (+ x98 3) x361))))
(assert (not (= (x1211 x946 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (+ x2042 1)))))
(assert (not (= (x1211 x4090 3) (+ x2042 2))))
(assert (x6051 x4566))
(assert (x4630 x5123))
(assert (x4630 x3867))
(assert (x4630 x4220))
(assert (x6051 x2264))
(assert (not (= (+ 4 x3962) (x1211 x1451 1))))
(assert (= (x4002 x4447) (ite (and (not x4813) x3830 x3235) (x4236 x4447) (x3247 x4447))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x3409 1))))
(assert (= x3774 (and x1802 (not x3960))))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x4090 3) x1849))))
(assert (x4630 x4752))
(assert (=> (= (x1211 x1849 1) (x1211 x4800 1)) (= x4800 x1849)))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 x4090 3)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 2 x3962))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (x1211 x3543 1)))))
(assert (= x6161 (=> (= (= x4063 274184521717934524641157099916833587206) x4987) (and (=> (and (= x6165 10894474682274239493831243662817379401261526446360622092269559273883068006400) (< x3384 826074471) (= x3384 404098525) (not (< x5253 4)) x4987 (<= 0 x833) (= x5253 4) (> x3054 0) (= (x3910 274184521717934524641157099916833587206) x3054) (= x2563 32) (= x5157 1) (not (= x3384 117300739)) (= x5410 x5253) (not (= 157198259 x3384)) (<= x833 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x3479) (=> (not x4987) x6102)))))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x3645 1) x4198))))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x3148 3)))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x3409 1) x5500))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x3992 2))))
(assert (not (= 826074471 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (< (- x4063 1) 10000) (not (= (+ 4 x98) x4063))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (x1211 x3755 1)))))
(assert (=> (> (+ 10000 1) x935) (not (= (x1211 x3148 3) x935))))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x3645 1) x6069))))
(assert (not (= (+ x3962 4) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x4284 1) x4702))))
(assert (= x4174 (=> (and (= (uninterp_mod (* x3781 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2536) (= (< 0 x4000) x369)) (and (=> (not x369) x3198) (=> (and (= x41 x3498) x369 (= x3498 (- (/ x2536 x4000) (uninterp_frac x2536 x4000)))) x770)))))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x4400) (not (= (+ x2042 1) x4400))))
(assert (= (x124 x4447) (ite (= x4112 x4447) x2796 (x4002 x4447))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (+ 1 x98)))))
(assert (=> (< (- x3979 1) 10000) (not (= (+ x2042 3) x3979))))
(assert (= 0 (x4225 x3118)))
(assert (not (= (+ 2 x2042) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (+ 1 x2042)))))
(assert (not (= 1889567281 (x1211 x3576 1))))
(assert (not (= (x1211 x4090 3) 2835717307)))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (+ x3962 5)))))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x2862 1) x2696))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x310 2))))
(assert (=> (= (x1211 x3414 1) (x1211 x3836 1)) (= x3414 x3836)))
(assert (not (= (x1211 x310 2) (+ 1 x98))))
(assert (= (=> (and (= (x4457 x3860) x5742) (= (x4455 x2258) x1021) (= x2258 (x1701 x3094)) (= x2709 (< 0 x1021))) (and (=> x2709 x4364) (=> (not x2709) x5361))) x5215))
(assert (= x5423 (=> (and (= 1889567281 x2396) (= x1831 (x3910 274184521717934524641157099916833587202)) (= x688 x5709) (not (> 826074471 x2396)) (> x1831 0) (= 36 x2106) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x855) (not (< x2106 4)) (= x1989 (x3337 (- x2106 4))) (= x2106 36) (not (= 826074471 x2396)) (= (or (and (< x1989 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1989) true)) (> x1989 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4944)) (and (=> (not x4944) x893) (=> x4944 x1987)))))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x3409 1) x3255))))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x2862 1) x1598))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x1451 1))))
(assert (x4630 x713))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x4090 3) x4799))))
(assert (not (= 3 (x1211 x3543 1))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x902 1)))))
(assert (x4630 x3801))
(assert (x4630 x267))
(assert (not (= (+ x3962 3) (+ x5409 1))))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x4017 1) x2862))))
(assert (x4630 x1682))
(assert (not (= (+ x3962 4) (x1211 x3513 1))))
(assert (x4630 x3490))
(assert (x6051 x882))
(assert (= (and (not x3598) x3987) x4720))
(assert (= x5151 (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4061)) x2809) (= x4507 (= x4061 0)) (= (= x5627 0) x2405) (= (ite (not x4507) 1 0) x4927) (= x5569 (ite (> x4232 x2809) 1 0)) (= (x5347 x4927 x5569) x5627)) (and (=> (not x2405) x5361) (=> x2405 x3248)))))
(assert (x4630 x4527))
(assert (=> (= (x1211 x6069 1) (x1211 x5917 1)) (= x5917 x6069)))
(assert (not (= (x1211 x310 2) (+ x2042 1))))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (x1211 x4610 1)))))
(assert (not (= 3939881817 (x1211 x182 1))))
(assert (not (= 3 (x1211 x5500 1))))
(assert (not (= (x1211 x182 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (= (x1211 x208 1) (x1211 x5745 1)) (= x5745 x208)))
(assert (not (= (x1211 x1451 1) (+ x2042 2))))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x2060 1) x3992))))
(assert (not (= (x1211 x3409 1) (+ x2042 2))))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x4800 1) x182))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (+ x2042 3)))))
(assert (x5138 x3786 x4315))
(assert (not (= (+ x3948 1) (x1211 x5917 1))))
(assert (not (= (+ 5 x2042) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x4630 x4698))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x1852 1) x952))))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x3836 1) x1956))))
(assert (x4630 x4745))
(assert (= (=> (and (= (uninterp_mod (* x2160 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x667) (= (< 0 x1650) x4019)) (and (=> (not x4019) x5361) (=> (and x4019 (= x4418 x1640) (= (- (/ x667 x1650) (uninterp_frac x667 x1650)) x1640)) x3242))) x1517))
(assert (not (= (+ 4 x3962) (+ x2042 5))))
(assert (x4630 x3811))
(assert (not (= (+ x1186 4) 1000000000000000000)))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 4294967296)))
(assert (=> (= (x1211 x5917 1) (x1211 x1919 1)) (= x1919 x5917)))
(assert (=> (= (x1211 x3645 1) (x1211 x1451 1)) (= x1451 x3645)))
(assert (x4630 x4927))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x182 1) x2417))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x4218 2)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x3513 1))))
(assert (=> (> (+ 10000 1) x3409) (not (= (x1211 x4218 2) x3409))))
(assert (=> (< (- x3255 1) 10000) (not (= (x1211 x2862 1) x3255))))
(assert (x263 x3968 x3003))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x3576 1) x561))))
(assert (=> (< (- x4198 1) 10000) (not (= (x1211 x4800 1) x4198))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x3992 2)))))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x1852 1) x2862))))
(assert (=> (> (+ 10000 1) x5500) (not (= (+ 5 x3962) x5500))))
(assert (=> (= (x1211 x3755 1) (x1211 x902 1)) (= x3755 x902)))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (x1211 x3576 1)))))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (x1211 x3543 1)))))
(assert (=> (< (- x1467 1) 10000) (not (= (x1211 x928 1) x1467))))
(assert (= (and (not x3347) x2997) x4421))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x4610 1) x4554))))
(assert (=> (< (- x3992 1) 10000) (not (= (+ x98 1) x3992))))
(assert (= (=> (and (= (x2550 x5444) x1410) (= x760 (> x5545 0))) (and (=> (and (not x760) (= x1682 1)) x3466) (=> x760 x4060))) x1146))
(assert (not (= (x1211 x3992 2) (+ x98 1))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x5500 1) x902))))
(assert (not (= (x1211 x4198 1) 3939881817)))
(assert (x4630 x703))
(assert (=> (< (- x1451 1) 10000) (not (= (x1211 x3992 2) x1451))))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x208 1)))))
(assert (=> (< (- x1219 1) 10000) (not (= (+ x3962 2) x1219))))
(assert (not (= (x1211 x310 2) (+ 1 x1186))))
(assert (not (= 3939881817 (x1211 x1919 1))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x3148 3)))))
(assert (=> (< (- x1467 1) 10000) (not (= (x1211 x182 1) x1467))))
(assert (=> (< (- x1303 1) 10000) (not (= (+ 1 x5409) x1303))))
(assert (not (= (+ 3 x1186) 274184521717934524641157099916833587231)))
(assert (x4630 x546))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (x1211 x4800 1)))))
(assert (= x2879 (=> (and (= x3980 x3721) (= x2012 x5602)) x2494)))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x5745 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x5421 1))))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 x935 1)))))
(assert (not (= (+ x3962 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x1211 x4017 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (= (x1211 x3992 2) (x1211 x310 2)) (= x310 x3992)))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x2060 1))))
(assert (= x2099 (or (and (not x4156) x5380) (and (not x3745) x3876))))
(assert (x4630 x2808))
(assert (x4630 x929))
(assert (not (= (x1211 x208 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x4090 3)))))
(assert (=> (< (- x3645 1) 10000) (not (= (+ x3962 1) x3645))))
(assert (= (=> (and (= x1303 (x5347 1461501637330902918203684832716283019655932542975 x5076)) (= x2026 (x3337 (- x3066 32))) (= x5386 (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x2222)) (= (x3910 x1303) x4665) (= x2222 (x2202 x5016)) (= 0 x3288) (= (x6031 (+ x4619 128)) x3818) (= x2825 (x6031 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x5386))) (= x4619 (x6031 (+ x1708 36))) (= (x6031 (+ 68 x1708)) x3454) (= x5016 (x6031 (+ 32 x1708))) (= x5045 (> x4665 0)) (= (x3337 (- x3097 x1708)) x3066) (= (x6031 (+ 100 x1708)) x3097)) (and (=> (and (or (and (not x3561) (= x4695 0)) (and (= (> x5982 32) x937) (= (x397 x2502) x3150) (= x3818 x5066) x3561 (or (and (not x937) (= 32 x4695)) (and (or (and (= (x397 x3801) x3408) (= x2717 (x6031 (+ x3097 128))) (= x1683 (> x5982 96)) x4342 (= (x6031 (+ x1708 96)) x3801) (or (and (not x1683) (= 96 x4695)) (and (= x4695 128) (= (x6031 (+ x1708 128)) x481) (not x4943) (= (x397 x481) x992) (= x4943 (< 128 x5982)) x1683 (= x1322 (x6031 (+ 160 x3097)))))) (and (not x4342) (= 64 x4695))) (= x3106 (x6031 (+ x3097 96))) (= x186 (x397 x1675)) (= (x6031 (+ 64 x1708)) x1675) x937 (= (> x5982 64) x4342))) (= x2502 x5016))) (or (and (= (x6031 (+ x3818 x5982)) x3738) x537) (not x537)) (= (< x5982 x4695) x537) x5045 (= (x1531 x1708) x5982) (= x3561 (< 0 x5982))) x605) (=> (not x5045) x5361))) x4126))
(assert (x4630 x4596))
(assert (=> (> (+ 10000 1) x5800) (not (= (x1211 x208 1) x5800))))
(assert (x4630 x80))
(assert (=> (< (- x83 1) 10000) (not (= (x1211 x1852 1) x83))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x3414 1)))))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x4017 1) x928))))
(assert (=> (> (+ 10000 1) x2758) (not (= (+ 1 x3962) x2758))))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x361 1) x4107))))
(assert (= 0 (x1448 x2958)))
(assert (= (x2487 x3117) (ite (= x3117 x161) x3268 (x5618 x3117))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x3543 1)))))
(assert (not (= (x1211 x5421 1) 2514000705)))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x4218 2) x3645))))
(assert (x4630 x1018))
(assert (=> (< (- x83 1) 10000) (not (= (x1211 x361 1) x83))))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (+ x2042 4)))))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x935 1)))))
(assert (not (= (+ x2042 1) (x1211 x935 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x3513 1))))
(assert (x6051 x5330))
(assert (=> (< (- x310 1) 10000) (not (= x310 (+ 2 x3962)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x5917 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x902 1))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x935 1)))))
(assert (= x1863 (=> (and (= (= x4354 x2060) x641) (= x2060 x3618)) (and (=> (not x641) x1821) (=> (and (>= x5314 0) (<= x5314 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5303 (x1211 x2060 1)) x641 (= 1 x541) (= (x5768 x5303) x5314) (= 32 x2156)) x4852)))))
(assert (x4630 x100))
(assert (=> (> (+ 10000 1) x946) (not (= (x1211 x6069 1) x946))))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x5917 1) x3230))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (+ 1 x2042)))))
(assert (= x4988 (=> (and (= x1412 (x1211 x5500 1)) (= (x3337 (- x5204 x5637)) x162) (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5637)) x4641) (<= 0 x2799) (= 274184521717934524641157099916833587231 x2641) (= x5500 (x5347 1461501637330902918203684832716283019655932542975 x1507)) (= x2284 (< x4641 x2799)) (= (x1211 274184521717934524641157099916833587231 1) x3177) (<= x2799 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2799 (x3185 x1412))) (and (=> x2284 x2607) (=> (not x2284) x5237)))))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x4800 1) x1849))))
(assert (=> (< (- x361 1) 10000) (not (= (+ 1 x2042) x361))))
(assert (not (= (x1211 x5917 1) 1000000000000000000)))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x4017 1)))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (+ x3962 1)))))
(assert (not (= (x1211 x3755 1) 4168891048)))
(assert (=> (< (- x4644 1) 10000) (not (= (x1211 x3543 1) x4644))))
(assert (x4630 x4560))
(assert (=> (< (- x1956 1) 10000) (not (= (+ 2 x2042) x1956))))
(assert (x4630 x3847))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (+ 2 x3457)))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x5421 1)))))
(assert (not (= (+ x3962 3) (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x3699) (not (= (x1211 x208 1) x3699))))
(assert (= 0 (x2104 x2046)))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x4090 3) x4198))))
(assert (= x5442 (=> (and (= 128 x4928) (= (x3910 x2820) x639) (= x971 (= 0 x639))) (and (=> (not x971) x2036) (=> x971 x5361)))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x2060 1) x4113))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x3414 1)))))
(assert (=> (= (x1211 x5745 1) (x1211 x4017 1)) (= x4017 x5745)))
(assert (=> (= (x1211 x182 1) (x1211 x5500 1)) (= x5500 x182)))
(assert (not (= (x1211 x3543 1) 18446744073709551615)))
(assert (not (= (x1211 x4527 1) (+ 1 x5409))))
(assert (=> (< (- x2060 1) 10000) (not (= (x1211 x902 1) x2060))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x1852 1)))))
(assert (=> (= (x1211 x3645 1) (x1211 x3414 1)) (= x3414 x3645)))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x6069 1)))))
(assert (not (= 2835717307 (x1211 x182 1))))
(assert (= x3142 (and (not x3883) x3855)))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x208 1)))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (+ 1 x98)))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (+ 4 x98)))))
(assert (= x4985 (=> (and (= x1650 (x2708 x6033)) (= (ite (= x1650 0) (= x1650 0) (= 0 x2970)) x3001)) (and (=> (not x3001) x4828) (=> (and x3001 (= 0 x4418)) x3242)))))
(assert (not (= 1889567281 (x1211 x4198 1))))
(assert (not (= (+ x1186 3) 274184521717934524641157099916833587202)))
(assert (= (=> (and (= x701 (or (> x355 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x355) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x355) true)))) (= x683 (x6031 (+ x3789 x4310))) (= x3647 (x6031 (+ x355 31))) (= x3789 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3647))) (and (=> (not x701) x4675) (=> x701 x5361))) x2369))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (x1211 x3543 1)))))
(assert (= (or (and x3930 (not x1347)) (and x5821 x2573)) x4020))
(assert (not (= (+ x3962 5) (x1211 x1919 1))))
(assert (not (= (x1211 x1451 1) 1889567281)))
(assert (= (=> (= x3989 (= 0 x145)) (and (=> (not x3989) x780) (=> x3989 x5361))) x3796))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x310 2) x946))))
(assert (= x5342 (=> (= x5479 (= x1688 0)) (and (=> x5479 x5361) (=> (not x5479) x2757)))))
(assert (x5138 x5076 x2938))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x935 1) x3836))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x3513 1)))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x4218 2))))
(assert (not (= (x1211 x3992 2) (x1211 274184521717934524641157099916833587231 1))))
(assert (= (x4192 x383) 0))
(assert (x4630 x3437))
(assert (not (= (+ x98 4) (x1211 x5745 1))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x5917 1)))))
(assert (=> (= (x1211 x2862 1) (x1211 x361 1)) (= x2862 x361)))
(assert (=> (> (+ 10000 1) x1451) (not (= (+ 1 x1186) x1451))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x902 1))))
(assert (not (= (x1211 x1956 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (> (+ 10000 1) x2060) (not (= (+ x1186 3) x2060))))
(assert (= (x5572 x772) (ite (and x2606 x4694 (not x2237)) (x4360 x772) (x2331 x772))))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x4198 1)))))
(assert (x4630 x1359))
(assert (=> (> (+ 10000 1) x4400) (not (= (+ 3 x3962) x4400))))
(assert (= 0 (x3517 x5328)))
(assert (not (= (+ x2042 3) (+ 1 x3948))))
(assert (=> (= (x1211 x4610 1) (x1211 x1956 1)) (= x1956 x4610)))
(assert (not (= (x1211 x5917 1) (+ x3962 3))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x902 1) x3166))))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x1849 1) x6037))))
(assert (not (= (x1211 x928 1) (+ 1 x3948))))
(assert (=> (> (+ 10000 1) x3786) (not (= (x1211 x4284 1) x3786))))
(assert (=> (> (+ 10000 1) x182) (not (= (x1211 x1112 1) x182))))
(assert (= x2805 (and x2313 (not x2459))))
(assert (= x5567 (=> (and (= (x5205 x4970) x291) (= x4429 (x3337 (- x4385 x5710))) (= x1012 (x6031 (+ x5710 4))) (= x4385 (x6031 (+ x5710 36))) (= (x5347 1461501637330902918203684832716283019655932542975 x4995) x1633) (= x4970 (x6031 (+ 32 x1472))) (= x2535 (x3910 x6037)) (= x4857 (= x2535 0)) (= (x5347 1461501637330902918203684832716283019655932542975 x2600) x6037) (= (x1946 x291) x2600) (= x4995 (x4200 x778))) (and (=> (not x4857) x1231) (=> x4857 x3198)))))
(assert (= (x4160 x2502) 0))
(assert (=> (< (- x693 1) 10000) (not (= (x1211 x3836 1) x693))))
(assert (= (=> (and (= (x5347 x4566 x5378) x703) (= (= 0 x4698) x1497) (= x5378 (ite (> x842 x4152) 1 0)) (= x4152 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4698))) (= (= x703 0) x3492) (= (ite (not x1497) 1 0) x4566)) (and (=> x3492 x4066) (=> (not x3492) x5361))) x4864))
(assert (=> (< (- x935 1) 10000) (not (= x935 (x1211 x208 1)))))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x946 1) x1598))))
(assert (= (and x2099 (not x3253)) x3582))
(assert (not (= (x1211 x1112 1) 274184521717934524641157099916833587202)))
(assert (not (= (+ 4 x1186) (x1211 x5917 1))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x1919 1) x4113))))
(assert (= (=> (and (= x249 x1252) (= (> x3864 x1162) x3805) (<= 0 x1162) (= x1210 274184521717934524641157099916833587231) (= x1162 (x4115 x3693)) (= x3693 (x1211 274184521717934524641157099916833587231 1)) (<= x1162 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> x3805 x3905) (=> (not x3805) x560))) x3544))
(assert (=> (= (x1211 x3513 1) (x1211 x3414 1)) (= x3513 x3414)))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (+ 3 x98)))))
(assert (not (= (x1211 x5745 1) (+ x1186 4))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x3755 1))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x1956 1)))))
(assert (=> (= (x1211 x6069 1) (x1211 x4293 1)) (= x6069 x4293)))
(assert (x4630 x1333))
(assert (=> (> (+ 10000 1) x83) (not (= (+ x2042 1) x83))))
(assert (x4630 x2842))
(assert (= x1130 (and x1791 x4807)))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x4799 1)))))
(assert (=> (= (x1211 x4799 1) (x1211 x6069 1)) (= x4799 x6069)))
(assert (not (= (x1211 x946 1) (+ x1186 1))))
(assert (x4630 x3352))
(assert (=> (= (x1211 x902 1) (x1211 x4799 1)) (= x4799 x902)))
(assert (x4630 x4474))
(assert (x6051 x3653))
(assert (not (= (x1211 x6069 1) 3939881817)))
(assert (x4630 x1543))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x3409 1)))))
(assert (not (= (+ x3962 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= x685 (=> (and (= x1869 x1629) (= (< 1 x173) x5596) (= x173 (x3088 x3108)) (not x5596)) x3204)))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x1451 1) x2820))))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x4293 1) x2758))))
(assert (not (= 3 (x1211 x4017 1))))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x902 1) x3771))))
(assert (not (= 826074471 (x1211 x902 1))))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x4799 1) x4284))))
(assert (= x5762 (=> (and (= (< 0 x3610) x3500) (= x3610 (x5474 x2527))) (and (=> x3500 x2840) (=> (and (not x3500) (= x5502 x3503)) x2333)))))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x361 1))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x1919 1) x935))))
(assert (x4630 x85))
(assert (not (= (x1211 x740 2) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x3786) (not (= (x1211 x1852 1) x3786))))
(assert (x4630 x3166))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x1919 1)))))
(assert (not (= (+ 2 x3457) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x4800 1) 10000) (not (= (+ 4 x3962) x4800))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (+ x3962 1)))))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (+ 5 x3962)))))
(assert (=> (= (x1211 x928 1) (x1211 x2060 1)) (= x2060 x928)))
(assert (=> (< (- x182 1) 10000) (not (= x182 (+ 3 x2042)))))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x1852 1) x4799))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x3576 1))))
(assert (not (= 404098525 (x1211 x740 2))))
(assert (= x2271 (or x4216 x3588)))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x406 1)))))
(assert (not (= (+ x2042 3) (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x902) (not (= (x1211 x3755 1) x902))))
(assert (x399 x4063))
(assert (not (= (x1211 x3409 1) (+ 1 x5409))))
(assert (=> (< (- x4644 1) 10000) (not (= (x1211 x928 1) x4644))))
(assert (not (= (+ x1186 1) (+ 3 x2042))))
(assert (not (= (x1211 x3645 1) 4168891048)))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x4610 1))))
(assert (= x1161 (=> (= x3128 (= 274184521717934524641157099916833587202 x2601)) (and (=> (and x3128 (not (= 157198259 x2056)) (= x4606 x2576) (= 1 x2590) (= x4606 4) (= 404098525 x2056) (< 0 x615) (= (x3910 274184521717934524641157099916833587202) x615) (> 826074471 x2056) (not (< x4606 4)) (>= x5470 0) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x5494) (not (= 117300739 x2056)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5470) (= x4672 32)) x3571) (=> (not x3128) x2096)))))
(assert (= x3298 (=> (and (not (= 826074471 x329)) (= x5517 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x4853 x1477) (not (> 826074471 x329)) (not (= x329 2514000705)) (> x3315 0) (= x249 x3864) (= x5816 x4770) (not (< x4853 4)) (= x1604 (x3337 (- x4853 4))) (not (= x329 1889567281)) (= x3315 (x3910 274184521717934524641157099916833587206)) (= x4853 68) (= 2835717307 x329) (= x4589 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1604) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1604)) (< x1604 64))))) (and (=> x4589 x3905) (=> (not x4589) x3541)))))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x3992 2) x946))))
(assert (x4630 x2422))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (+ 3 x98)))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x182 1)))))
(assert (not (= (x1211 x928 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (< (- x1919 1) 10000) (not (= (x1211 x1956 1) x1919))))
(assert (= x5049 (=> (and (>= x59 0) (= x2272 x5961) (= (> x1657 x59) x1234) (= x59 (x3313 x1119)) (= 274184521717934524641157099916833587231 x77) (= x1119 (x1211 274184521717934524641157099916833587231 1)) (<= x59 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (not x1234) x834) (=> x1234 x1839)))))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x1919 1) x3836))))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 x208 1)))))
(assert (not (= (x1211 x1852 1) 18446744073709551615)))
(assert (= (=> (and (= (or (> x4220 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x4220) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4220)))) x5387) (= x1653 (x6031 (+ x4220 31))) (= (x6031 (+ x762 x4382)) x5229) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1653) x762)) (and (=> (not x5387) x3203) (=> x5387 x5361))) x5508))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x2060 1) x1219))))
(assert (x4630 x1028))
(assert (x4630 x4504))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (+ x3962 2)))))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (+ x1186 3)))))
(assert (not (= (x1211 x1112 1) (+ x2042 1))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x3645 1)))))
(assert (x399 x1303))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (x1211 x1451 1)))))
(assert (x6051 x4792))
(assert (not (= (x1211 x1849 1) 2835717307)))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x946 1) x3836))))
(assert (=> (< (- x4610 1) 10000) (not (= (x1211 x935 1) x4610))))
(assert (x251 x5938 x5571 x2257 x3139))
(assert (not (= (+ 1 x5409) (+ 1 x1186))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (+ 3 x1186)))))
(assert (=> (= (x1211 x4610 1) (x1211 x902 1)) (= x902 x4610)))
(assert (=> (= (x1211 x3414 1) (x1211 x1112 1)) (= x3414 x1112)))
(assert (not (= (x1211 x1919 1) 4294967296)))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x361 1)))))
(assert (= x2794 x2763))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x935 1)))))
(assert (x4630 x2448))
(assert (=> (< (- x2862 1) 10000) (not (= (+ 4 x2042) x2862))))
(assert (not (= (+ 2 x3457) (x406 1))))
(assert (x4630 x3702))
(assert (=> (> (+ 10000 1) x561) (not (= (+ 5 x3962) x561))))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x4293 1) x2417))))
(assert (x4630 x5399))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (x1211 x3645 1)))))
(assert (not (= (x1211 x3409 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (< (- x4400 1) 10000) (not (= (+ 3 x98) x4400))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (+ 3 x1186)))))
(assert (x6051 x686))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x5745 1) x5421))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x4218 2)))))
(assert (x4630 x778))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x4017 1)) (= 274184521717934524641157099916833587231 x4017)))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x3576 1)))))
(assert (=> (> (+ 10000 1) x5421) (not (= (x1211 x3409 1) x5421))))
(assert (not (= (x406 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 274184521717934524641157099916833587231 1) x1248))))
(assert (not (= (x1211 x1849 1) (+ x98 1))))
(assert (x4630 x4202))
(assert (=> (> (+ 10000 1) x2154) (not (= (+ 4 x1186) x2154))))
(assert (=> (> (+ 10000 1) x4218) (not (= (x1211 x946 1) x4218))))
(assert (=> (> (+ 10000 1) x2758) (not (= (+ 1 x1186) x2758))))
(assert (= (or (and x6053 (not x5605)) x814) x2766))
(assert (x5138 x2845 x5112))
(assert (not (= (+ x1186 3) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x6069 1) x3771))))
(assert (=> (= (x1211 x5745 1) (x1211 x361 1)) (= x361 x5745)))
(assert (x4630 x1680))
(assert (not (= 274184521717934524641157099916833587231 (+ x5409 1))))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (+ x3962 5)))))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x1112 1)))))
(assert (x2507 x197 x1420))
(assert (= x1212 (and x5491 x6127)))
(assert (= x3800 (=> (and (not (= 826074471 x2266)) (= x3316 (x3337 (- x4076 4))) (= 36 x4076) (= x4821 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3316) (and (< x3316 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3316) true)))) (= x1992 x688) (not (< x2266 826074471)) (= x4263 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x3910 274184521717934524641157099916833587202) x5217) (not (> 4 x4076)) (= 1889567281 x2266) (< 0 x5217) (= x4076 36)) (and (=> (not x4821) x426) (=> x4821 x4938)))))
(assert (not (= (x1211 x5421 1) (+ x2042 3))))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 x3576 1)))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x4198 1)))))
(assert (x4630 x3176))
(assert (=> (> (+ 10000 1) x3255) (not (= (+ x3962 5) x3255))))
(assert (=> (= (x1211 x3576 1) (x1211 x3836 1)) (= x3576 x3836)))
(assert (= (=> (and (= x1955 (< x2922 x1657)) (<= 0 x2922) (= 274184521717934524641157099916833587231 x2511) (<= x2922 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x47 (x1211 274184521717934524641157099916833587231 1)) (= x2922 (x3314 x47)) (= x1714 x243)) (and (=> (not x1955) x3012) (=> x1955 x1178))) x3472))
(assert (= (and x3909 x1911) x3889))
(assert (= (=> (and (= (x773 x1236) x4063) (>= x4063 0) (>= 1461501637330902918203684832716283019655932542975 x4063) (= x1295 0) (> 1461501637330902918203684832716283019655932542976 x4063) (<= x2320 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x98 4) x2719) (= x1236 (+ x98 1)) (= (x1270 x2719) x2320) (<= 0 x2320) (= x2865 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246))) (and (=> (not x2865) x4587) (=> x2865 x3049))) x926))
(assert (= x1280 (=> (and (= (or (and (> 32 x4672) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4672))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4672)) x4177) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3921) x4021) (= x3921 (x6031 (+ x4672 31))) (= (x6031 (+ x4044 x4021)) x5105)) (and (=> x4177 x3198) (=> (not x4177) x2824)))))
(assert (not (= (+ x3962 3) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x4198 1))))
(assert (x4630 x3753))
(assert (= (x5860 x4382) 17154740991736861046558774992177620686056526479738507590741468237373194108928))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x3992 2) x1849))))
(assert (x251 x4201 x3991 x1801 x193))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (+ 4 x98)))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (+ x2042 3))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (+ x98 1)))))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (+ 3 x1186)))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x1849 1) x4090))))
(assert (=> (< (- x5500 1) 10000) (not (= (+ 2 x2042) x5500))))
(assert (x4630 x5339))
(assert (=> (= (+ 3 x1186) (+ 3 x2042)) (= x310 x3992)))
(assert (x4630 x1087))
(assert (x4630 x4051))
(assert (not (= (x1211 x2060 1) 1)))
(assert (not (= (+ x3962 4) (x1211 x5500 1))))
(assert (x4630 x668))
(assert (=> (= (x1211 x4527 1) (x1211 x3414 1)) (= x4527 x3414)))
(assert (not (= (x1211 x1451 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x4630 x4502))
(assert (not (= (+ x2042 3) (x1211 x1852 1))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x3992 2)))))
(assert (= x368 (=> (= (= x1775 274184521717934524641157099916833587206) x4422) (and (=> x4422 x439) (=> (not x4422) x1800)))))
(assert (=> (= (x1211 x935 1) (x1211 x4799 1)) (= x935 x4799)))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x1451 1) x902))))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (+ x2042 2)))))
(assert (not (= (x1211 x1852 1) (+ x1186 4))))
(assert (=> (= (x1211 x2862 1) (x1211 x3836 1)) (= x3836 x2862)))
(assert (not (= (x1211 x3543 1) (+ 1 x3948))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x1919 1)))))
(assert (x4630 x5681))
(assert (x4630 x1692))
(assert (= x2123 (=> (and (= x3503 x5872) (= x2604 (x5474 x2527)) (not x1138) (= (> x2604 1) x1138)) x2333)))
(assert (=> (= (x1211 x1919 1) (x1211 x3645 1)) (= x3645 x1919)))
(assert (=> (< (- x1338 1) 10000) (not (= (+ 5 x3962) x1338))))
(assert (=> (> (+ 10000 1) x4702) (not (= (+ 4 x1186) x4702))))
(assert (not (= (x1211 x928 1) (+ x1186 1))))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x5745 1)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ 2 x3962))))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ x1186 3) x4113))))
(assert (= x1196 (=> (= x5158 (= 0 x1910)) (and (=> (not x5158) x2783) (=> x5158 x3198)))))
(assert (not (= (+ x2042 3) (+ 4 x2042))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x1852 1) x1248))))
(assert (not (= (x1211 x1112 1) 1889567281)))
(assert (= x2710 (and x5700 (not x2479))))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x1852 1) x946))))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 274184521717934524641157099916833587231 1)))))
(assert (x4630 x5116))
(assert (= (x4999 x4233) (ite (= x4233 x5726) x2276 (x1441 x4233))))
(assert (x4630 x5270))
(assert (= (and (not x3737) x3017) x95))
(assert (= x2798 (and x5171 x159)))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (+ 4 x3962)))))
(assert (x5138 x2070 x4830))
(assert (x4630 x4259))
(assert (not (= (+ x3962 2) (+ 2 x4054))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x1186 1))))
(assert (not (= (+ x1186 4) 1)))
(assert (not (= (+ x1186 4) (+ 5 x2042))))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (+ 1 x3962)))))
(assert (=> (< (- x4284 1) 10000) (not (= (x1211 x5745 1) x4284))))
(assert (=> (< (- x2820 1) 10000) (not (= (x1211 x3414 1) x2820))))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (+ x2042 5)))))
(assert (= x605 (=> (and (= x1418 (and (< x5759 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x2397))) (= (x559 x1303) x5759) (= x2397 (x559 274184521717934524641157099916833587231)) (= x5982 x4815)) (and (=> x1418 x4747) (=> (and (= 0 x4304) (not x1418) (= x4978 0)) x3263)))))
(assert (=> (< (- x1303 1) 10000) (not (= (x1211 x4284 1) x1303))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x946 1)))))
(assert (not (= (x1211 x3543 1) (+ 5 x3962))))
(assert (= (or (and (not x322) x234) (and x2447 (not x5010))) x4389))
(assert (x4630 x5897))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x3836 1) x2417))))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 274184521717934524641157099916833587231 1) x1775))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (+ 1 x5409)))))
(assert (x6051 x1690))
(assert (= (or x5766 x4914) x1870))
(assert (not (= (x1211 x5421 1) (+ 1 x2042))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (+ x3962 1)))))
(assert (= x376 (and (not x3590) x2718)))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x3513 1)))))
(assert (=> (< (- x740 1) 10000) (not (= (x1211 x5421 1) x740))))
(assert (not (= 117300739 (x1211 x740 2))))
(assert (=> (= (x1211 x3513 1) (x1211 x4610 1)) (= x3513 x4610)))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x946 1)))))
(assert (= (ite (and x2828 x334 (not x2917)) (x2178 x5515) (x5587 x5515)) (x4915 x5515)))
(assert (x4630 x6023))
(assert (x4630 x5800))
(assert (x4630 x4245))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x3414 1) x5421))))
(assert (=> (= (x1211 x208 1) (x1211 x5500 1)) (= x5500 x208)))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x5745 1) x1089))))
(assert (=> (> (+ 10000 1) x3645) (not (= (+ 4 x1186) x3645))))
(assert (=> (= (x1211 x3414 1) (x1211 x4017 1)) (= x3414 x4017)))
(assert (x4630 x2038))
(assert (not (= 4294967296 (x1211 x208 1))))
(assert (not (= 157198259 (x1211 x935 1))))
(assert (x4630 x3354))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (x1211 x4090 3)))))
(assert (not (= (+ 3 x1186) (x1211 x5745 1))))
(assert (= (=> (and (= x122 x4815) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x5977) (not (< x3260 826074471)) (not (= x3260 826074471)) (= 2835717307 x3260) (not (= x3260 1889567281)) (not (> 4 x122)) (= x5738 (x3910 274184521717934524641157099916833587202)) (= x4716 (x3337 (- x122 4))) (= x456 x688) (= x1657 x2272) (= x6104 (or (and (> 64 x4716) (= true (<= x4716 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4716 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 68 x122) (> x5738 0) (not (= x3260 2514000705))) (and (=> (not x6104) x391) (=> x6104 x1839))) x3628))
(assert (not (= (x1211 x6069 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= (+ x3962 2) 2835717307)))
(assert (x4630 x2855))
(assert (=> (< (- x561 1) 10000) (not (= x561 (+ 1 x98)))))
(assert (= (=> (= (= x3914 0) x93) (and (=> x93 x3198) (=> (not x93) x5458))) x3795))
(assert (not (= (+ x2042 4) 404098525)))
(assert (x6051 x2070))
(assert (x5138 x4678 x3473))
(assert (x4630 x6082))
(assert (=> (< (- x1956 1) 10000) (not (= (+ 5 x3962) x1956))))
(assert (=> (> (+ 10000 1) x952) (not (= (x1211 x5745 1) x952))))
(assert (not (= (+ x3948 1) (x1211 x1112 1))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x3836 1)) (= 274184521717934524641157099916833587231 x3836)))
(assert (not (= (+ 1 x1186) (x1211 274184521717934524641157099916833587231 1))))
(assert (= (=> (and (= (x3088 x1307) x4094) (= (> x4094 0) x980)) (and (=> (not x980) x5361) (=> x980 x5289))) x3583))
(assert (=> (= (x1211 x4799 1) (x1211 x3513 1)) (= x4799 x3513)))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (x1211 x4293 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= (x1211 x3148 3) x5745))))
(assert (x4630 x67))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x2060 1)))))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (x1211 x928 1)))))
(assert (= x5402 (=> (and (= x5696 (x3088 x3108)) (= x3449 (x2995 x3768)) (= x1950 (= x5696 x3449)) (= (x3608 x1015) x3108)) (and (=> x1950 x4756) (=> (not x1950) x5361)))))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x4017 1) x3543))))
(assert (x4630 x3132))
(assert (= x2252 (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x3849) x3979) (= x2963 (x6031 (+ 96 x13))) (= (= x2605 0) x3652) (= x2605 (x3910 x3979)) (= (x4439 x2963) x2921)) (and (=> x3652 x5361) (=> (and (not x3652) (or (and x3249 (= 1 x1606) (< x4220 4294967296)) (and (= x1606 x4003) (not x3249))) (= (< 0 x4003) x3249)) x3447)))))
(assert (x251 x2671 x1470 x570 x3505))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x1956 1) x4527))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (+ 5 x2042)))))
(assert (=> (= (x1211 x4610 1) (x1211 x1849 1)) (= x4610 x1849)))
(assert (x4630 x4100))
(assert (= x2449 (or (and x1664 x3169) (and x1417 x2516))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x946 1))))
(assert (x4630 x744))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x4799 1)))))
(assert (not (= (+ 3 x98) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x4218 2) x4554))))
(assert (not (= 826074471 (+ 1 x5409))))
(assert (x4630 x4383))
(assert (x4630 x4576))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x6069 1))))
(assert (= x4783 (or (and x5144 (not x22)) (and x3922 x677))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x5745 1)))))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x5421 1) x310))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x928 1)))))
(assert (=> (< (- x2417 1) 10000) (not (= (+ x3962 2) x2417))))
(assert (x4630 x5169))
(assert (not (= (+ x98 3) 157198259)))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x3836 1) x1219))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x4799) (not (= (+ x3948 1) x4799))))
(assert (=> (> (+ 10000 1) x2060) (not (= (+ 1 x5409) x2060))))
(assert (not (= (x1211 x310 2) (+ 1 x5409))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x3645 1)))))
(assert (= (=> (and (= x5913 (x6031 (+ x1392 36))) (= x1375 (x3910 x4113)) (= (x3592 x3071) x5318) (= (= 0 x1375) x2781) (= (x6031 (+ 32 x5461)) x5985) (= x4784 (x352 x5985)) (= (x3337 (- x5913 x1392)) x1655) (= x3085 (x3129 x2595)) (= x3623 (x6031 (+ 4 x1392))) (= x4113 (x5347 1461501637330902918203684832716283019655932542975 x5318)) (= (x6031 (+ 32 x4784)) x3071) (= x5471 (x5347 1461501637330902918203684832716283019655932542975 x3085))) (and (=> x2781 x5361) (=> (not x2781) x5154))) x5687))
(assert (not (= (x1211 x5745 1) (+ x5409 1))))
(assert (not (= (x1211 x1919 1) 404098525)))
(assert (=> (< (- x4293 1) 10000) (not (= (+ 1 x1186) x4293))))
(assert (= (=> (= x392 (> x659 x2970)) (and (=> x392 x5361) (=> (and (= x3161 x1914) (not x392) (= x1774 x4835) (= x659 x2829) (= x5847 x2934) (= x1060 x943) (= x546 x2190) (= x2408 (x3337 (- x2970 x659)))) x6044))) x4067))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x4284 1)) (= 274184521717934524641157099916833587231 x4284)))
(assert (not (= (x1211 x3645 1) 1)))
(assert (= (x5667 x4433) 0))
(assert (not (= (+ x2042 5) (x1211 x1451 1))))
(assert (not (= (+ x1186 4) (x1211 x2060 1))))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x3645 1) x2845))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (x1211 x3414 1)))))
(assert (x4630 x657))
(assert (x4630 x1607))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x2060 1)))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x3836 1)))))
(assert (not (= (+ 5 x3962) (x1211 x3414 1))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x3576 1)))))
(assert (not (= (x1211 x946 1) (+ x4054 2))))
(assert (=> (> (+ 10000 1) x4218) (not (= (x1211 x6069 1) x4218))))
(assert (not (= (x1211 x928 1) (x406 1))))
(assert (not (= (x1211 x3148 3) (x1211 x1956 1))))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x4284 1) x2758))))
(assert (x399 x1186))
(assert (x4630 x3767))
(assert (not (= (+ x1186 4) (+ 3 x3962))))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x208 1) x1248))))
(assert (=> (= (x1211 x902 1) (x1211 x5917 1)) (= x902 x5917)))
(assert (= (and x5592 (not x2425)) x1285))
(assert (not (= (x1211 x6069 1) 1461501637330902918203684832716283019655932542976)))
(assert (x4630 x3877))
(assert (not (= (+ x98 3) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x4630 x1951))
(assert (=> (< (- x5917 1) 10000) (not (= (x1211 x4293 1) x5917))))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x4198 1)))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (x1211 x4799 1)))))
(assert (not (= 2514000705 (x1211 x3576 1))))
(assert (=> (> (+ 10000 1) x4090) (not (= (+ 1 x5409) x4090))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x4527 1)))))
(assert (=> (< (- x5617 1) 10000) (not (= (+ x2042 1) x5617))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 3 x2042))))
(assert (not (= (+ 5 x3962) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (x1211 x3755 1)))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x5745 1)))))
(assert (not (= (+ 3 x98) (x1211 x2862 1))))
(assert (x6051 x5388))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x928 1)))))
(assert (= x2429 true))
(assert (= (x4192 x1307) 0))
(assert (=> (> (+ 10000 1) x4554) (not (= (+ x2042 3) x4554))))
(assert (x4630 x5044))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x4090 3) x3576))))
(assert (not (= 117300739 (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x3543) (not (= (+ 1 x3948) x3543))))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x946 1)))))
(assert (not (= (+ x3962 3) 1461501637330902918203684832716283019655932542975)))
(assert (x4630 x5583))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x208 1) x1112))))
(assert (not (= (x1211 x2060 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x4630 x671))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x5421 1)))))
(assert (not (= (+ x98 1) 2514000705)))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x5745 1) x310))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x3992 2)))))
(assert (= x1281 (=> (and (= (x2400 x1741) x1639) (= x4723 (ite (= x1639 0) (= 0 x1639) (= 0 x276)))) (and (=> (not x4723) x2411) (=> (and (= 0 x5116) x4723) x2740)))))
(assert (=> (> (+ 10000 1) x4400) (not (= (+ 5 x3962) x4400))))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x208 1) x1775))))
(assert (not (= (x1211 x946 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (not (= (+ x98 4) (+ x98 3))))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x4090 3)))))
(assert (= x6102 (=> (= (= x4063 274184521717934524641157099916833587202) x4868) (and (=> (not x4868) x5529) (=> (and (< x3593 826074471) (not (= x3593 157198259)) (= 404098525 x3593) (not (= 117300739 x3593)) (<= x4558 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1908 10894474682274239493831243662817379401261526446360622092269559273883068006400) (< 0 x871) (<= 0 x4558) (not (< x2949 4)) (= 4 x2949) x4868 (= x5410 x2949) (= 1 x5157) (= x2563 32) (= x871 (x3910 274184521717934524641157099916833587202))) x3479)))))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (x1211 x1849 1)))))
(assert (not (= (x1211 x3992 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x2920 (and (not x3055) x5979)))
(assert (x4630 x1942))
(assert (not (= (x1211 x1849 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x5849 (and x5873 x2613)))
(assert (= (=> (and (= x2136 (x1701 x3094)) (= (< 0 x3853) x115) (= x3853 (x4455 x2136))) (and (=> (not x115) x5361) (=> x115 x4851))) x287))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (+ 3 x98)))))
(assert (not (= 4168891048 (x1211 x4800 1))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x4218 2) x5500))))
(assert (x4630 x2629))
(assert (=> (< (- x740 1) 10000) (not (= x740 (+ x1186 3)))))
(assert (=> (< (- x3255 1) 10000) (not (= (+ 1 x3948) x3255))))
(assert (not (= (+ x98 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x4630 x2269))
(assert (not (= (x1211 x5421 1) (+ x3962 2))))
(assert (not (= (+ x3457 2) (x1211 x2060 1))))
(assert (=> (> (+ 10000 1) x5800) (not (= (+ x3962 4) x5800))))
(assert (x4630 x3972))
(assert (not (= 3 (x1211 x3645 1))))
(assert (=> (< (- x4800 1) 10000) (not (= (+ 4 x98) x4800))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x3513 1)))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x902 1)))))
(assert (x4630 x5476))
(assert (x4630 x2939))
(assert (=> (= (x1211 x1849 1) (x1211 x946 1)) (= x1849 x946)))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (+ x98 1)))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x361 1)))))
(assert (not (= (x1211 x4800 1) 117300739)))
(assert (=> (< (- x1467 1) 10000) (not (= (x1211 x3645 1) x1467))))
(assert (not (= (+ x2042 1) 2743638299)))
(assert (x4630 x1311))
(assert (not (= (+ x2042 3) 1)))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x946 1) x2154))))
(assert (not (= (x1211 x6069 1) (+ 2 x4054))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x1451 1)))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x3414 1)))))
(assert (= (x4471 x4669) (ite (= x5782 x4669) x1500 (x4115 x4669))))
(assert (not (= (+ x3457 2) (x1211 x5745 1))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= (x1211 x5917 1) 2)))
(assert (not (= (+ 3 x3962) (x1211 x1451 1))))
(assert (= (=> (and (= (uninterp_mod (* x463 x5776) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1220) (= (< 0 x3428) x4029)) (and (=> (and (= x6111 x2716) (= x6111 (- (/ x1220 x3428) (uninterp_frac x1220 x3428))) x4029) x3663) (=> (not x4029) x5361))) x119))
(assert (not (= (x1211 x4090 3) (x1211 x2862 1))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x946 1)))))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x4800 1) x4800))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (+ x2042 3)))))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x928 1) x928))))
(assert (not (= (+ 4 x1186) 2835717307)))
(assert (=> (= (x1211 x3513 1) (x1211 x1919 1)) (= x1919 x3513)))
(assert (not (= (x1211 x3645 1) 4294967296)))
(assert (= x362 (=> (and (= (= 0 x4854) x3134) (= (x3910 x1248) x4854) (= (x5347 1461501637330902918203684832716283019655932542975 x328) x1248) (= x4873 (x498 x203)) (= (x6031 (+ x3118 96)) x203)) (and (=> x3134 x3198) (=> (and (or (and x5235 (> 4294967296 x5047) (= 1 x492)) (and (not x5235) (= x4375 x492))) (not x3134) (= x5235 (> x4375 0))) x3486)))))
(assert (=> (> (+ 10000 1) x3576) (not (= (+ 1 x3962) x3576))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (+ 3 x98)))))
(assert (x4630 x1559))
(assert (= (=> (and (= (> x1682 0) x3434) (= x2233 (uninterp_mod (* x1410 x2043) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x3434 x1768) (=> (not x3434) x3198))) x3536))
(assert (=> (> (+ 10000 1) x2758) (not (= (+ 1 x2042) x2758))))
(assert (x6051 x1475))
(assert (= x428 (=> (and (= (x2187 128) x2017) (= x2300 (ite (= 0 x2017) (= x2017 0) (= 0 x463)))) (and (=> (not x2300) x2873) (=> (and (= x3497 x2452) x2300) x3622)))))
(assert (not (= 2743638299 (x1211 x4218 2))))
(assert (x4630 x1218))
(assert (=> (> (+ 10000 1) x3786) (not (= (x1211 x310 2) x3786))))
(assert (not (= 1 (x1211 x1112 1))))
(assert (not (= (+ 3 x98) (x1211 x4610 1))))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= 1 (x1211 x3543 1))))
(assert (= (ite (and (not x5634) x2048 x4819) (x4483 x5980) (x1266 x5980)) (x5032 x5980)))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (x1211 x3992 2)))))
(assert (=> (= (x1211 x6069 1) (x1211 x1956 1)) (= x1956 x6069)))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x946 1)))))
(assert (not (= (x1211 x3755 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4237 x5545 x1745))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x1849 1) x5917))))
(assert (x4630 x3676))
(assert (not (= (x1211 x5917 1) (+ x3457 2))))
(assert (x4630 x4902))
(assert (x4630 x4875))
(assert (x4630 x4339))
(assert (not (= 2743638299 (+ 1 x98))))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x361 1) x3699))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (+ 4 x3962)))))
(assert (x4630 x3497))
(assert (= x3679 (or (and x4996 x5440) (and x3560 x4372))))
(assert (x251 x829 x883 x6143 x4434))
(assert (=> (= (x1211 x5745 1) (x1211 x4799 1)) (= x4799 x5745)))
(assert (x4630 x265))
(assert (= x27 (and x3028 x2135)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x1186 1))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x5421 1)))))
(assert (x4630 x3732))
(assert (=> (> (+ 10000 1) x2060) (not (= (+ x1186 1) x2060))))
(assert (= x2834 (or (and x4408 x4344) (and x4976 x1124))))
(assert (not (= (x1211 x4284 1) 2835717307)))
(assert (= (x5618 x5688) 0))
(assert (x6051 x1257))
(assert (x4630 x3749))
(assert (not (= (x1211 x2060 1) 4294967296)))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x3836 1) x4800))))
(assert (=> (< (- x310 1) 10000) (not (= x310 (x1211 x3414 1)))))
(assert (= (and x436 x5505) x1636))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x4293 1) x3513))))
(assert (x4630 x524))
(assert (= (=> (and (= (x6031 (+ x3850 x2658)) x3975) (= x2985 (< x3975 x3850))) (and (=> (and (= x2274 32) (= x835 (x1211 x3645 1)) (not x2985) (= (x5347 1461501637330902918203684832716283019655932542975 x2028) x3645) (= x3724 x6122) (= 1 x4737)) x1891) (=> x2985 x3256))) x4297))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (+ x2042 4)))))
(assert (= (ite (= x5210 x1254) x4710 (x2104 x1254)) (x2037 x1254)))
(assert (not (= 157198259 (x1211 x3576 1))))
(assert (=> (> (+ 10000 1) x3575) (not (= (+ 3 x98) x3575))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x740 2) x935))))
(assert (x4630 x4090))
(assert (not (= (x1211 x2060 1) 117300739)))
(assert (x399 x1089))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x5421 1) x1089))))
(assert (x4630 x5586))
(assert (=> (= (x1211 x4198 1) (x1211 x2862 1)) (= x4198 x2862)))
(assert (= (=> (and (= x1307 (x3608 x1015)) (= x4597 (= x4604 x1137)) (= (x214 x2686) x6093) (= (x2697 x5177) x1137) (= x4604 (x3088 x1307)) (= (x3219 x2385) x271)) (and (=> (not x4597) x5361) (=> x4597 x4037))) x3143))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x928 1)))))
(assert (x4630 x4348))
(assert (=> (= (x1211 x1112 1) (x1211 x3836 1)) (= x1112 x3836)))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x1211 x4799 1)))))
(assert (=> (< (- x3836 1) 10000) (not (= (+ 2 x2042) x3836))))
(assert (not (= (x1211 x4218 2) (+ 5 x3962))))
(assert (x5138 x3699 x280))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x1112 1))))
(assert (x4630 x5737))
(assert (x4630 x2009))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x1956 1) x3575))))
(assert (= x5758 (=> (and (= x5124 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4008)) (= (or (> x5790 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x5790) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5790)))) x3705) (= x2673 (x6031 (+ x4048 x5124))) (= (x6031 (+ 31 x5790)) x4008)) (and (=> (not x3705) x2071) (=> x3705 x3198)))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x3836 1))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (+ 1 x3948)))))
(assert (=> (= (x1211 x1451 1) (x1211 x3836 1)) (= x3836 x1451)))
(assert (not (= (x1211 x310 2) 1000000000000000000)))
(assert (x4630 x5706))
(assert (=> (> (+ 10000 1) x2862) (not (= (+ 3 x3962) x2862))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (+ 2 x3457)))))
(assert (not (= (+ x98 3) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x4630 x806))
(assert (not (= (x406 1) (+ x3948 1))))
(assert (not (= (+ 2 x3457) (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x3699) (not (= (x1211 x5500 1) x3699))))
(assert (= x4060 (=> (and (= x5316 (x5347 x2629 x5199)) (= (ite (< x5545 78) 1 0) x5199) (= 1 x1038) (= 1 x2629) (= x4248 (x5347 x1038 x3310)) (= x4657 (= 0 (x5 x5316 x4248))) (= (ite (< x5545 32) 1 0) x3310)) (and (=> (and (not x4657) (= (x5041 10 x5545) x1682)) x3466) (=> (and (or (and (not x499) (= x5780 1) (= x1766 10)) (and (= x5780 (ite x1880 1 10)) x499 (= x1880 (= x5327 0)) (= (x5347 1 x5545) x5327) (= x1766 100) (= x4642 (x1044 x5545 1)) (not x2428) (= (> x4642 1) x2428))) (= x499 (> x5545 1)) x4657) x3656)))))
(assert (not (= (x1211 x740 2) (x1211 x4017 1))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x5500 1))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x3409 1)))))
(assert (x4630 x5496))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (+ x98 1)))))
(assert (not (= 18446744073709551615 (x1211 x902 1))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (+ x1186 1)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (+ x3948 1)))))
(assert (x4630 x4820))
(assert (= x2071 (=> (and (= x5491 (= x448 x2696)) (= (x5347 1461501637330902918203684832716283019655932542975 x2696) x448) (= x2696 (x149 x4048))) (and (=> x5491 x2139) (=> (not x5491) x3198)))))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (x1211 x3543 1)))))
(assert (x4630 x145))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 2 x2042))))
(assert (not (= (x1211 x3576 1) (+ 1 x3948))))
(assert (=> (= (x1211 x361 1) (x1211 x1956 1)) (= x361 x1956)))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x361 1)))))
(assert (=> (< (- x3645 1) 10000) (not (= (+ 3 x98) x3645))))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x5745 1) x2696))))
(assert (= x4969 (and x441 (not x1677))))
(assert (=> (= (x1211 x5917 1) (x1211 x4293 1)) (= x4293 x5917)))
(assert (= x171 (and x5920 x1468)))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x2862 1) x3836))))
(assert (= x2249 (=> (and (= x5496 x2498) (= 0 x4071)) x859)))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (x1211 x310 2)))))
(assert (not (= (x1211 x1919 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (+ 2 x3457) (+ x3948 1))))
(assert (x4630 x4648))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (+ x3962 3)))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x2060 1)))))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x928 1)))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x6069 1) x6037))))
(assert (not (= 2743638299 (x1211 x3645 1))))
(assert (not (= (+ 3 x3962) (x1211 x4527 1))))
(assert (not (= (x1211 x3755 1) (+ 1 x2042))))
(assert (not (= (+ 3 x3962) (x1211 x182 1))))
(assert (x4630 x5835))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x3836 1)))))
(assert (=> (< (- x4610 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x4610))))
(assert (x4630 x1419))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (x1211 x182 1)))))
(assert (x4630 x2630))
(assert (= (and x5600 (not x2974)) x4958))
(assert (=> (< (- x4644 1) 10000) (not (= (x1211 x4284 1) x4644))))
(assert (not (= (+ 2 x2042) (x1211 x3414 1))))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x4284 1) x1849))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x928 1)))))
(assert (= (and x708 (not x5449)) x5012))
(assert (not (= (x1211 x3513 1) (x1211 x4218 2))))
(assert (=> (< (- x310 1) 10000) (not (= x310 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x4527 1) x3992))))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x3992 2) x1598))))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 274184521717934524641157099916833587231 1) x3230))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x740 2))))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x4284 1) x3575))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x4198 1) x1248))))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x5745 1) x4107))))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x3409 1) x1089))))
(assert (=> (< (- x4644 1) 10000) (not (= (x1211 x3148 3) x4644))))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x1451 1)))))
(assert (= (or x270 x3010) x5149))
(assert (not (= (x1211 x1849 1) (x1211 x3992 2))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x3543 1))))
(assert (= (and (not x5564) x4687) x1866))
(assert (= (=> (and (= x2827 (x5609 x2492)) (= (x5645 x4997) x3240) (= x2492 (x5645 x4997)) (= (x5609 x3240) x3222) (= x2558 (= x2827 x3222))) (and (=> (not x2558) x3198) (=> x2558 x4384))) x2192))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x4198 1)))))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x6069 1) x5917))))
(assert (not (= (+ x98 3) (+ x3962 4))))
(assert (x4630 x6003))
(assert (=> (< (- x4017 1) 10000) (not (= (+ x3962 4) x4017))))
(assert (x4630 x4806))
(assert (= (and (not x4208) x3290) x5480))
(assert (x4630 x5424))
(assert (x4630 x2077))
(assert (not (= (x1211 x740 2) (x1211 x3645 1))))
(assert (not (= 404098525 (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (+ x3948 1)))))
(assert (x4630 x3004))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x4090 3) x4293))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x3409 1)))))
(assert (x4630 x240))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x2862 1)))))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (x1211 x4610 1)))))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (x1211 x208 1)))))
(assert (= x638 (or x1188 x4930)))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x928 1)))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (+ x4054 2)))))
(assert (= x3226 (and (not x129) x1883)))
(assert (x4630 x3506))
(assert (= (ite (= x5773 x2673) x1034 (x146 x2673)) (x2236 x2673)))
(assert (not (= (+ 4 x2042) (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x928 1) x1849))))
(assert (not (= (x1211 x2862 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 1 x3962))))
(assert (not (= 4168891048 (+ x2042 5))))
(assert (= x2339 (=> (and (= x5283 (= x1451 x4546)) (= x2435 x1451)) (and (=> (and (<= 0 x4990) (= 32 x3041) (= (x1211 x1451 1) x1803) (= 1 x1712) (<= x4990 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2776 x1803) x4990) x5283) x5341) (=> (not x5283) x700)))))
(assert (x6051 x271))
(assert (x4630 x1237))
(assert (x251 x5817 x1876 x5676 x2311))
(assert (=> (= (x1211 x928 1) (x1211 x946 1)) (= x946 x928)))
(assert (x4630 x300))
(assert (= (and x6067 x3938) x4680))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 274184521717934524641157099916833587231 1) x1303))))
(assert (x4630 x4885))
(assert (not (= 3939881817 (x1211 x5745 1))))
(assert (not (= 3 (+ x2042 3))))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (+ 1 x2042)))))
(assert (not (= (x1211 x4293 1) 4168891048)))
(assert (=> (= (x1211 x361 1) (x1211 x4800 1)) (= x4800 x361)))
(assert (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2331 x772)))
(assert (not (= (x1211 x1852 1) 274184521717934524641157099916833587202)))
(assert (= (=> (and (= x3966 (= x5816 x1242)) (= (x5347 1461501637330902918203684832716283019655932542975 x5816) x1242)) (and (=> (not x3966) x4655) (=> x3966 x4117))) x357))
(assert (= (=> (and (= x6066 (x2134 x4382)) (= (< 1000000000000000000 x6066) x512)) (and (=> (not x512) x1944) (=> x512 x5361))) x3203))
(assert (=> (< (- x3786 1) 10000) (not (= (+ x2042 3) x3786))))
(assert (x4630 x2200))
(assert (x6051 x1716))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (+ x1186 3)))))
(assert (=> (< (- x2601 1) 10000) (not (= (x406 1) x2601))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x4527 1) x902))))
(assert (x6051 x5489))
(assert (x4630 x535))
(assert (= x1776 (and x4275 (not x1106))))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x3576 1) x4644))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x3414 1)))))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (+ 1 x3948)))))
(assert (not (= (x1211 x2862 1) (+ 2 x4054))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ 4 x98))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (+ x1186 3)))))
(assert (x4630 x4254))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (+ 1 x3962)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x3645 1))))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x3543 1) x5617))))
(assert (not (= (x1211 x361 1) (x1211 x4218 2))))
(assert (x4630 x1241))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x3543 1)))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x5917 1))))
(assert (=> (> (+ 10000 1) x4090) (not (= (+ x2042 1) x4090))))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x1112 1) x3979))))
(assert (not (= (x1211 x4090 3) 4168891048)))
(assert (not (= (x1211 x4090 3) 1889567281)))
(assert (=> (> (+ 10000 1) x4107) (not (= (+ x98 1) x4107))))
(assert (not (= (+ 3 x1186) 1000000000000000000)))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x3755 1) x952))))
(assert (not (= 1 (+ x3962 3))))
(assert (not (= (x1211 x3543 1) (+ 1 x98))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x5917 1)))))
(assert (= x4258 (=> (and (= (= 0 x3654) x2365) (= x3563 (x3910 274184521717934524641157099916833587231)) (< 0 x3563)) (and (=> (not x2365) x5361) (=> x2365 x4894)))))
(assert (x4630 x924))
(assert (=> (= (x1211 x928 1) (x1211 x208 1)) (= x928 x208)))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x5745 1) x5800))))
(assert (= (=> (= (< 0 x647) x3514) (and (=> (not x3514) x3198) (=> x3514 x3293))) x1239))
(assert (not (= 1889567281 (+ 1 x98))))
(assert (=> (= (x1211 x182 1) (x1211 x946 1)) (= x946 x182)))
(assert (x4630 x3359))
(assert (x4630 x3032))
(assert (= (and x5732 x3697) x5345))
(assert (= x700 (=> (and (= x3041 x4681) (= x1712 0)) x5341)))
(assert (= (x6064 x2951) (ite (= x6103 x2951) x4453 (x3314 x2951))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x3576 1)))))
(assert (= x2916 (and (not x3128) x1450)))
(assert (x6051 x5919))
(assert (=> (= (x1211 x4293 1) (x1211 x1112 1)) (= x1112 x4293)))
(assert (not (= 826074471 (+ x2042 3))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x4527 1)))))
(assert (not (= 2743638299 (x1211 x4610 1))))
(assert (=> (< (- x4799 1) 10000) (not (= (x1211 x1112 1) x4799))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x4293 1)))))
(assert (not (= (x406 1) 157198259)))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x3576 1) x3575))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x3645 1)))))
(assert (not (= (x1211 x5917 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 826074471 (x1211 x3543 1))))
(assert (x4630 x4514))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x3414 1)))))
(assert (not (= (x1211 x1852 1) (x1211 x4090 3))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x3148 3)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ x2042 2))))
(assert (=> (> (+ 10000 1) x3755) (not (= (+ 1 x98) x3755))))
(assert (not (= (x1211 x5421 1) 2835717307)))
(assert (x4630 x1714))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ 1 x3948) x4113))))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x4610 1) x1852))))
(assert (=> (= (x1211 x2862 1) (x1211 x3543 1)) (= x2862 x3543)))
(assert (= x1934 (and x4775 x2353)))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x5421 1) x3511))))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (x1211 x3992 2)))))
(assert (=> (< (- x3166 1) 10000) (not (= (+ x3962 4) x3166))))
(assert (=> (< (- x561 1) 10000) (not (= x561 (+ x98 3)))))
(assert (= x1389 (or (and x1884 x198) (and (not x4759) x2619))))
(assert (= x4478 (=> (and (= x3034 (x5474 x4462)) (= x1937 (< 0 x3034))) (and (=> x1937 x582) (=> (and (= x2688 x1355) (not x1937)) x445)))))
(assert (x4630 x1781))
(assert (x6051 x2251))
(assert (x4630 x3227))
(assert (= (=> (and (= (= x4873 0) x3325) (= x3826 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4873))) (= (= 0 x2306) x1271) (= (x5347 x4682 x5330) x2306) (= x4682 (ite (not x3325) 1 0)) (= (ite (< x3826 x3633) 1 0) x5330) (= (x3337 (- 1000000000000000000 x3591)) x4165)) (and (=> (not x1271) x3198) (=> x1271 x4336))) x2640))
(assert (not (= 2514000705 (x1211 x3543 1))))
(assert (x4630 x1642))
(assert (= (and x3434 x1557) x5176))
(assert (= x4203 (or x5735 x877)))
(assert (= (x759 x3118) (ite (= x4710 x3118) 0 (x4225 x3118))))
(assert (not (= (+ x3962 4) (+ x3962 5))))
(assert (not (= 2514000705 (+ x3962 4))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x3836 1) x935))))
(assert (= (and (not x5634) x4819) x3718))
(assert (= (and (not x4172) x574) x4687))
(assert (= (x4305 x1392) (ite x3586 (ite x4622 (x402 x1392) (x6176 x1392)) (ite x4754 (x402 x1392) (x2083 x1392)))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (+ x3457 2)))))
(assert (=> (< (- x1112 1) 10000) (not (= (x1211 x6069 1) x1112))))
(assert (= (and x1957 (not x4859)) x925))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x5745 1) x4293))))
(assert (=> (< (- x3409 1) 10000) (not (= (+ 2 x3962) x3409))))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (+ x1186 3)))))
(assert (x4630 x5290))
(assert (x4630 x1593))
(assert (not (= 1 (x1211 x4800 1))))
(assert (not (= (+ x3962 5) (x1211 x3576 1))))
(assert (not (= (+ 4 x98) (+ x2042 1))))
(assert (x4630 x1367))
(assert (not (= (x1211 x2060 1) (x1211 x3148 3))))
(assert (= (and (not x4836) x5019) x4295))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (+ x2042 1)))))
(assert (not (= (+ x98 3) (x1211 x1852 1))))
(assert (x6051 x264))
(assert (=> (< (- x1303 1) 10000) (not (= x1303 (+ 1 x98)))))
(assert (x4630 x2651))
(assert (= (x4115 x4669) (ite (and x708 (not x5449) x1841) (x2363 x4669) (x4892 x4669))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (+ x2042 3)))))
(assert (= (=> (and (= x4120 (x5474 x2993)) (= x2993 (x236 x1822)) (= x2113 (> x4120 18446744073709551615))) (and (=> x2113 x3198) (=> (and (= x178 (uninterp_mod (* x4120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2113) (= x5710 (x6031 (+ x1830 x3503))) (= (= x4120 0) x2973) (= (x6031 (+ x178 32)) x1830) (or (and (= x3638 (uninterp_mod (* 32 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2973) (= x5129 (x6031 (+ 32 x3503)))) x2973)) x1066))) x4384))
(assert (=> (= (x1211 x1919 1) (x1211 x4799 1)) (= x1919 x4799)))
(assert (= x3925 (and (not x4288) x2220)))
(assert (=> (= (x1211 x3836 1) (x1211 x5421 1)) (= x5421 x3836)))
(assert (=> (= (x1211 x5500 1) (x1211 x4293 1)) (= x4293 x5500)))
(assert (x4630 x4668))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x5917 1)))))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x4293 1) x561))))
(assert (= (and (not x2080) x289) x2718))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x1112 1) x4107))))
(assert (not (= (+ x1186 4) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (< (- x4284 1) 10000) (not (= (x1211 x2862 1) x4284))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (+ x98 4)))))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x1919 1) x561))))
(assert (= (x3036 x3942) (ite x5735 (ite x2515 (x5950 x3942) (x2176 x3942)) (ite x3696 (x5950 x3942) (x5141 x3942)))))
(assert (= (x1573 x6164) (ite (and (not x3708) x3512 x2869) (x4838 x6164) (ite (and (not x3708) (not x3512) x2869 (not x5704)) (x1227 x6164) (x1551 x6164)))))
(assert (= (x4776 128) (x1341 128)))
(assert (not (= (x1211 x3576 1) 274184521717934524641157099916833587231)))
(assert (x4630 x5919))
(assert (=> (> (+ 10000 1) x740) (not (= (+ 4 x3962) x740))))
(assert (not (= (+ 1 x3962) (x1211 x4527 1))))
(assert (= (=> (and (= x736 (= 0 x4782)) (= (ite (< x4423 1000000000000000000) 1 0) x1562) (= x4423 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4929))) (= (= 0 x4929) x3943) (= x4782 (x5347 x882 x1562)) (= (ite (not x3943) 1 0) x882)) (and (=> (not x736) x5361) (=> x736 x670))) x367))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x3414 1)))))
(assert (not (= 18446744073709551615 (+ 3 x3962))))
(assert (x6051 x3300))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x4800 1)) (= x4800 274184521717934524641157099916833587231)))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x6069 1)))))
(assert (=> (= (x1211 x3409 1) (x1211 x1451 1)) (= x1451 x3409)))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (x1211 x4017 1)))))
(assert (not (= (x1211 x946 1) 157198259)))
(assert (not (= 826074471 (x1211 x1919 1))))
(assert (=> (< (- x1303 1) 10000) (not (= (+ x3962 3) x1303))))
(assert (= (and x4283 (not x2113)) x737))
(assert (=> (< (- x208 1) 10000) (not (= (x1211 x740 2) x208))))
(assert (=> (< (- x2845 1) 10000) (not (= (x1211 x3836 1) x2845))))
(assert (x4630 x615))
(assert (=> (> (+ 10000 1) x6069) (not (= (+ 5 x2042) x6069))))
(assert (= (x3314 x5611) (ite (and x757 x5626 (not x305)) (x4461 x5611) (x4892 x5611))))
(assert (x263 x3061 x1705))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x4198 1)))))
(assert (= (and (not x2085) x2362) x4493))
(assert (x4630 x4695))
(assert (=> (> (+ 10000 1) x3148) (not (= (+ 3 x1186) x3148))))
(assert (x4630 x5047))
(assert (=> (= (x1211 x5745 1) (x1211 x946 1)) (= x946 x5745)))
(assert (not (= (x1211 x1849 1) 274184521717934524641157099916833587231)))
(assert (= (or (and x2901 (not x5820)) (and (not x1854) x2319) (and (not x2998) x1130)) x1134))
(assert (=> (= (x1211 x935 1) (x1211 x4284 1)) (= x935 x4284)))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x935) (not (= (+ 3 x98) x935))))
(assert (not (= 18446744073709551615 (x1211 x4017 1))))
(assert (not (= (+ x3962 4) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (= (x1211 x2060 1) (x1211 x3513 1)) (= x3513 x2060)))
(assert (not (= (+ x2042 2) 274184521717934524641157099916833587231)))
(assert (not (= (+ x1186 1) 1000000000000000000)))
(assert (x4630 x511))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (+ 4 x1186)))))
(assert (not (= 2835717307 (+ x5409 1))))
(assert (x4630 x122))
(assert (=> (< (- x5745 1) 10000) (not (= (x1211 x182 1) x5745))))
(assert (not (= (+ x3962 2) (x1211 x4293 1))))
(assert (=> (< (- x561 1) 10000) (not (= x561 (x1211 x4017 1)))))
(assert (not (= (+ 4 x3962) 1461501637330902918203684832716283019655932542976)))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (+ x5409 1)))))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ 3 x3962) x4113))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (+ 3 x3962)))))
(assert (= (x2487 x2522) (ite (= x161 x2522) x3268 (x5618 x2522))))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x3414 1) x1338))))
(assert (not (= (+ x4054 2) (+ 3 x1186))))
(assert (= x5441 (and (not x4041) x2326)))
(assert (=> (< (- x182 1) 10000) (not (= x182 (x1211 x740 2)))))
(assert (x4630 x1666))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x5421 1))))
(assert (x4630 x1310))
(assert (=> (< (- x182 1) 10000) (not (= (+ 5 x3962) x182))))
(assert (x4630 x4572))
(assert (not (= 18446744073709551615 (+ 3 x1186))))
(assert (not (= (+ 1 x5409) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x208 1) x5617))))
(assert (= (and x1623 (not x6042)) x2848))
(assert (not (= (x1211 x4284 1) 18446744073709551615)))
(assert (x4630 x1126))
(assert (x4630 x4484))
(assert (=> (= (x1211 x3576 1) (x1211 x1451 1)) (= x3576 x1451)))
(assert (x6051 x1562))
(assert (x4630 x2975))
(assert (not (= 157198259 (x1211 x1112 1))))
(assert (not (= (x1211 x4800 1) 4294967296)))
(assert (=> (< (- x208 1) 10000) (not (= (x1211 x3836 1) x208))))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (x1211 x4800 1)))))
(assert (= x4283 (and x5077 x2558)))
(assert (not (= (x1211 x1112 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (+ 1 x3962)))))
(assert (=> (< (- x4113 1) 10000) (not (= (+ 1 x5409) x4113))))
(assert (x4630 x787))
(assert (= (ite (= x5017 x2072) 0 (x3104 x5017)) (x4101 x5017)))
(assert (=> (= (x1211 x740 2) (x1211 x4218 2)) (= x4218 x740)))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (x1211 x1451 1)))))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (+ 3 x2042)))))
(assert (=> (= (x1211 x182 1) (x1211 x3836 1)) (= x182 x3836)))
(assert (not (= (x1211 x3543 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 274184521717934524641157099916833587202 (+ 1 x5409))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (+ 5 x2042)))))
(assert (x4630 x928))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x2060 1) x4702))))
(assert (= x870 (and x4156 x5380)))
(assert (not (= (x1211 x5917 1) (+ 4 x2042))))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x4284 1) x3755))))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x928 1)))))
(assert (not (= (+ x3962 1) (+ 5 x2042))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x4527 1)))))
(assert (x4630 x3180))
(assert (=> (= (x1211 x4293 1) (x1211 x4017 1)) (= x4017 x4293)))
(assert (=> (< (- x4090 1) 10000) (not (= (x1211 x3755 1) x4090))))
(assert (not (= (x1211 x4090 3) 274184521717934524641157099916833587231)))
(assert (x4630 x4873))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x4293 1)))))
(assert (not (= 2 (x1211 x3836 1))))
(assert (=> (= (x1211 x1956 1) (x1211 x3836 1)) (= x1956 x3836)))
(assert (= x3079 (=> (and (= (x6031 (+ x4109 x2272)) x809) (= x6021 (> x4109 x809))) (and (=> x6021 x1839) (=> (and (= 1 x3762) (= (x1211 x361 1) x5242) (= 32 x2911) (= (x5347 1461501637330902918203684832716283019655932542975 x456) x361) (= x1008 x2024) (not x6021)) x6010)))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 x4293 1) x361))))
(assert (not (= (x1211 x5421 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (+ x3962 5)))))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x361 1)))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (+ 3 x3962)))))
(assert (x4630 x666))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x740 2) x1451))))
(assert (x4630 x1941))
(assert (x4630 x4980))
(assert (= 0 (x4192 x5642)))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x83) (not (= (x1211 x3414 1) x83))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (+ x2042 2)))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x3543 1)))))
(assert (= (x6007 x3071) 0))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x1852 1)))))
(assert (x4630 x2196))
(assert (not (= (+ x2042 3) 1461501637330902918203684832716283019655932542975)))
(assert (x251 x5022 x4496 x743 x865))
(assert (=> (< (- x946 1) 10000) (not (= x946 (+ 4 x98)))))
(assert (x4630 x3704))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x406 1))))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x3992 2) x3771))))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x4017 1) x2601))))
(assert (=> (< (- x4527 1) 10000) (not (= (+ x3948 1) x4527))))
(assert (not (= 1889567281 (x1211 x3414 1))))
(assert (= x1897 (and x2798 (not x2518))))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (x1211 x4218 2)))))
(assert (= (and (not x909) x2482) x5203))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x928 1) x561))))
(assert (x4630 x3508))
(assert (not (= 2514000705 (x1211 x3645 1))))
(assert (=> (> (+ 10000 1) x1112) (not (= (+ 1 x98) x1112))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ x1186 1))))
(assert (x4630 x4017))
(assert (not (= (x1211 x4293 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (x1211 x4198 1)))))
(assert (=> (= (x1211 x1919 1) (x1211 x5745 1)) (= x1919 x5745)))
(assert (not (= (x1211 x3148 3) 2514000705)))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (x1211 x3543 1)))))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x3645 1) x3645))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ 1 x1186)))))
(assert (x4630 x1206))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (+ 2 x3457)))))
(assert (=> (= (x1211 x1849 1) (x1211 x3836 1)) (= x1849 x3836)))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (+ 3 x98)))))
(assert (=> (> (+ 10000 1) x4554) (not (= (x1211 x3543 1) x4554))))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x928 1) x3755))))
(assert (not (= 2835717307 (+ 2 x4054))))
(assert (=> (> (+ 10000 1) x4554) (not (= (x1211 x3148 3) x4554))))
(assert (not (= (x406 1) (x1211 x1451 1))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x902 1)))))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (+ x2042 2)))))
(assert (not (= (x1211 x1956 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= (x406 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (not (= (+ x1186 3) (x1211 x3836 1))))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (x1211 x4527 1)))))
(assert (= x3541 (=> (and (= (= x5816 x2433) x307) (= x2433 (x5347 1461501637330902918203684832716283019655932542975 x5816))) (and (=> (not x307) x3905) (=> x307 x3544)))))
(assert (= (=> (and (= (> x4808 0) x1111) (= x1525 (- (/ x2582 x1778) (uninterp_frac x2582 x1778))) (= x4808 (x2790 x1155))) (and (=> (and x1111 (= x1304 x1869) (= x1593 (x6031 (+ 32 x1155)))) x685) (=> (not x1111) x5361))) x5585))
(assert (= (x4192 x4515) 0))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x1451 1)))))
(assert (not (= (+ 2 x3962) 1)))
(assert (= (x2487 x929) (ite (= x161 x929) x3268 (x5618 x929))))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x5421 1) x1919))))
(assert (x4630 x4082))
(assert (= (=> (and (= x15 x3703) (= 0 x4768)) x1767) x410))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (x1211 x3414 1)))))
(assert (x399 x4702))
(assert (= x1804 (=> (and (= x2201 (= x535 0)) (= (x2302 x2418) x2897) (= (x3592 x3099) x1815) (= (x6031 (+ x13 128)) x2418) (= (x5347 1461501637330902918203684832716283019655932542975 x1815) x1338) (= 4 x3481) (= (x6031 (+ 32 x13)) x3099) (= (x3910 x1338) x535)) (and (=> (not x2201) x5075) (=> x2201 x5361)))))
(assert (x6051 x4243))
(assert (not (= (+ 3 x3962) (x1211 x3409 1))))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x310 2) x4610))))
(assert (not (= (x1211 x2060 1) 2835717307)))
(assert (=> (> (+ 10000 1) x4063) (not (= (x1211 x946 1) x4063))))
(assert (not (= (+ 1 x2042) (x1211 x182 1))))
(assert (= (ite (= x1402 x1332) x984 (x1288 x1332)) (x1626 x1332)))
(assert (= x2362 (and (not x794) x749)))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ 3 x98))))
(assert (x4630 x5877))
(assert (not (= (x1211 x4198 1) 117300739)))
(assert (not (= 2 (x1211 x3148 3))))
(assert (=> (= (x1211 x4198 1) (x1211 x3414 1)) (= x4198 x3414)))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x1451 1) x4554))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x3836 1)))))
(assert (=> (< (- x561 1) 10000) (not (= x561 (+ x3457 2)))))
(assert (= x891 (and (not x5466) x1636)))
(assert (x4630 x2522))
(assert (x4630 x4068))
(assert (not (= (x1211 x310 2) (x1211 x2862 1))))
(assert (x251 x1966 x1296 x221 x356))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x4090 3))))
(assert (not (= 3939881817 (x406 1))))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x4090 3) x3699))))
(assert (=> (< (- x3148 1) 10000) (not (= (x1211 x310 2) x3148))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x902) (not (= (x1211 x4017 1) x902))))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x1112 1)))))
(assert (not (= (+ x98 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (> (+ 10000 1) x3575) (not (= (+ x2042 3) x3575))))
(assert (x4630 x2801))
(assert (x4630 x2056))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x3836 1)))))
(assert (not (= (x1211 x2862 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x4799 1) x1775))))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x1852 1) x1219))))
(assert (= (=> (and (= (x3088 x383) x4652) (= x6067 (< 0 x4652))) (and (=> x6067 x3834) (=> (not x6067) x5361))) x2676))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x928 1) x3511))))
(assert (=> (= (x1211 x182 1) (x1211 x3414 1)) (= x182 x3414)))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x1211 x4799 1)))))
(assert (x4630 x1604))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x361 1))))
(assert (not (= (x1211 x3992 2) (x1211 x4198 1))))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (x1211 x4017 1)))))
(assert (= x4216 (or x2693 (and x6041 (not x6021)))))
(assert (= x2120 (=> (and (= x986 x5389) (= x331 x4842)) x5514)))
(assert (=> (= (x1211 x5421 1) (x1211 x928 1)) (= x5421 x928)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x5500 1))))
(assert (not (= (x1211 x3992 2) (x1211 x1956 1))))
(assert (x4630 x4231))
(assert (=> (= (x1211 x5917 1) (x1211 x5500 1)) (= x5500 x5917)))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x3645 1)))))
(assert (=> (< (- x4017 1) 10000) (not (= (+ x2042 4) x4017))))
(assert (not (= (x1211 x4017 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x2862 1))))
(assert (= (or (and x4832 (not x2578)) (and x5924 x1645) (and x5023 (not x1175)) (and (not x2815) x1052) (and x3280 x3679) (and x1596 (not x4937)) (and x2785 (not x3016)) (and x4765 x5383) (and (not x5813) x4368) (and x912 x4701) (and x3634 x3861) (and x5027 x5480) (and x4774 (not x663)) (and (not x736) x2525) (and x4608 x5935) (and x5329 x5060) (and x3876 x3745) (and x2287 x1484) (and x5763 (not x963)) (and x676 x1154) (and x3578 x2305) (and x3984 x165) (and x3023 (not x24)) (and x4680 x3371) (and x5261 x2430) (and x4923 (not x3689)) (and x5282 x930) (and x6114 x3825) (and x2361 x2146) (and x4616 x3718) (and x4591 x5842) (and x1614 x4417) (and x1465 (not x2562)) (and (not x118) x4168) (and x1892 x2774) (and x637 (not x4405)) (and (not x1911) x3909) (and (not x1365) x4549) (and x1316 x1346) (and x2832 (not x6151)) (and x3307 x1601) (and (not x5407) x2101) (and x975 x6120) (and x5479 x5024) (and (not x2405) x1134) (and x2058 x5463) (and (not x2375) x2232) (and x1384 (not x1719)) (and x616 x3353) (and (not x5839) x3515) (and x4819 x5634) (and x4162 x3792) (and x5387 x3119) (and (not x2444) x5345) (and x3254 x1964) (and x742 x1363) (and x518 x509) (and x3270 x5654) (and x5452 (not x4029)) (and x1490 x1695) (and x5110 (not x5146)) (and x3425 (not x387)) (and x2006 (not x4458)) (and x412 (not x5045)) (and x4954 x2480) (and x2127 x4240) (and x4586 (not x3530)) (and (not x3597) x2162) (and x4333 x4580) (and x1770 x5713) (and x2348 x827) (and x1878 x5995) (and x3989 x1064) (and x4813 x3235) (and x2794 x190) (and x5821 (not x2573)) (and x3652 x5844) (and x3390 x39) (and x2980 x2588) (and (not x438) x3363) (and x3856 x3364) (and x1669 x3376) (and (not x6119) x5420) (and x5864 (not x545)) (and x2893 x1116) (and x5878 (not x2275)) (and (not x5222) x4984) (and x4720 x1480) (and x3017 x3737) (and x1999 x2201) (and x4602 (not x3038)) (and x4093 x1771) (and x189 x1478) (and x5258 x4933) (and x5626 x305) (and (not x6067) x3938) (and x512 x939) (and x2093 x5960) (and x4786 (not x1600)) (and x248 x581) (and (not x3804) x308) (and (not x3492) x5372) (and x3182 x43) (and x3858 (not x601)) (and x3406 (not x2365)) (and x747 x784) (and x5040 (not x6072)) (and x2462 x3620) (and x4314 x4203) (and (not x55) x3385) (and x6071 x1662) (and x2561 (not x5431)) (and x5362 x2086) (and x53 x2834) (and x4128 x3889) (and x4223 (not x1756)) (and x4829 x2345) (and (not x3579) x488) (and x4901 x5477) (and (not x1111) x565) (and x2545 (not x4019)) (and x1442 (not x2289)) (and x2767 x1797) (and x3556 x940) (and x3987 x3598) (and x701 x4788) (and x1498 x3045) (and (not x2533) x4513) (and x3787 x5208) (and x5741 (not x5588)) (and x4004 x3327) (and x5849 x971) (and x2781 x6089) (and x2523 x3006) (and x5732 (not x3697)) (and x4378 x4516) (and x4807 (not x1791)) (and x2358 x4138) (and (not x1935) x5425) (and x392 x3299) (and x3582 (not x4597)) (and (not x115) x2655) (and x2133 x133) (and x257 x5249) (and x2224 (not x6092)) (and x1065 (not x980)) (and (not x2709) x4213) (and x609 (not x1950)) (and x3290 x4208) (and x1326 x4886) (and x4362 x1403) (and (not x4955) x2074) (and x5400 x977) (and x831 x4850) (and x870 (not x1005)) (and x1854 x2319) (and (not x3169) x1664) (and x3379 x3744) (and x4467 x4948) (and x1127 x5038) (and x3082 x5034) (and x5043 x847) (and x3959 x1030) (and x5633 x613) (and (not x183) x1685) (and x4497 x5096) (and x2624 (not x1834)) (and (not x619) x2805)) x5948))
(assert (not (= (x1211 x4799 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (+ 4 x1186)))))
(assert (x6051 x12))
(assert (not (= 2835717307 (x1211 x928 1))))
(assert (not (= (+ 3 x3962) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (not (= (+ 2 x3962) 3939881817)))
(assert (not (= (+ x1186 3) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (> (+ 10000 1) x3979) (not (= (+ 4 x1186) x3979))))
(assert (not (= (x1211 x3409 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x2042 2))))
(assert (x4630 x697))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x3576 1) x3755))))
(assert (=> (= (x1211 x1849 1) (x1211 x1451 1)) (= x1849 x1451)))
(assert (x6051 x1670))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x946 1)))))
(assert (x4630 x5759))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x4610 1) x3255))))
(assert (not (= (x1211 x4198 1) (+ 3 x1186))))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x4284 1) x5800))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x3755 1)))))
(assert (not (= (+ x98 1) (+ 3 x3962))))
(assert (not (= (+ 3 x3962) (x1211 x4293 1))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x3513 1)) (= 274184521717934524641157099916833587231 x3513)))
(assert (x4630 x5678))
(assert (x4630 x3970))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x3992 2) x4702))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x182 1)))))
(assert (not (= 2835717307 (x1211 x5745 1))))
(assert (= x5761 (=> (and (= x3042 (x6031 (+ x4176 31))) (= x2324 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3042)) (= x1727 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4176) (and (< x4176 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4176))))) (= (x6031 (+ x717 x2324)) x346)) (and (=> x1727 x3198) (=> (not x1727) x2556)))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (+ x3962 5)))))
(assert (not (= (+ x1186 4) (x1211 x902 1))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x3543 1))))
(assert (not (= (+ 1 x3948) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x4630 x2420))
(assert (not (= (x1211 x1849 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= x1225 (and x110 (not x2692))))
(assert (=> (= (x1211 x3755 1) (x1211 x361 1)) (= x3755 x361)))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x928 1)))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x3992 2)))))
(assert (=> (> (+ 10000 1) x3979) (not (= (+ 1 x3962) x3979))))
(assert (=> (< (- x2154 1) 10000) (not (= x2154 (+ 2 x4054)))))
(assert (= (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621)) x4643) (= x6159 (ite (> x409 x4643) 1 0)) (= (x5347 x464 x6159) x8) (= (= 0 x8) x963) (= (ite (not x5497) 1 0) x464) (= x5497 (= 0 x3621))) (and (=> (not x963) x5361) (=> x963 x818))) x2685))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x310 2)))))
(assert (= true x5185))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x3409 1) x3836))))
(assert (x5138 x318 x2334))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x5917 1)))))
(assert (x4630 x5297))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x6069 1))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x1211 x2060 1)))))
(assert (not (= (x1211 x3148 3) (x406 1))))
(assert (=> (= (x1211 x3645 1) (x1211 x3836 1)) (= x3645 x3836)))
(assert (not (= (x1211 x1956 1) (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (+ 1 x2042)))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x3148 3)))))
(assert (not (= (+ x1186 4) 4168891048)))
(assert (not (= (+ x1186 3) 157198259)))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x3513 1))))
(assert (not (= (x1211 x5917 1) 117300739)))
(assert (=> (= (x1211 x1112 1) (x1211 x1956 1)) (= x1112 x1956)))
(assert (=> (> (+ 10000 1) x3409) (not (= (x1211 x4017 1) x3409))))
(assert (x4630 x4503))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x4799 1))))
(assert (= (or (and x2175 x5815) (and x2011 x1963) (and x5783 x195) (and x2519 x4320) (and x5415 (not x4097)) (and x2985 x782)) x324))
(assert (not (= (x1211 x3513 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x1849 1)))))
(assert (=> (= (x1211 x361 1) (x1211 x3645 1)) (= x361 x3645)))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (+ x1186 4)))))
(assert (not (= 2835717307 (x1211 x1112 1))))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x2060 1) x3414))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ x3948 1))))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x3836 1) x3740))))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x3414 1) x1956))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x4293 1)))))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x3543 1) x2601))))
(assert (x4630 x4026))
(assert (=> (> (+ 10000 1) x3575) (not (= (+ 4 x3962) x3575))))
(assert (x4630 x481))
(assert (= (and (not x4362) x1403) x6053))
(assert (not (= (x1211 x4090 3) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (< (- x2060 1) 10000) (not (= (x1211 x3836 1) x2060))))
(assert (=> (< (- x4284 1) 10000) (not (= (x1211 x4218 2) x4284))))
(assert (not (= (+ 2 x4054) (x1211 x5917 1))))
(assert (x4630 x1137))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x1852 1)))))
(assert (x6051 x4648))
(assert (not (= (x1211 x4090 3) (x1211 x4284 1))))
(assert (not (= (x1211 x5745 1) (x1211 x310 2))))
(assert (not (= (x1211 x182 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x1211 x4527 1) 2)))
(assert (x4630 x1737))
(assert (not (= (+ x2042 4) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4630 x4770))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (+ x1186 3)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 2 x4054))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x5745 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 4 x98))))
(assert (= 0 (x5618 x3476)))
(assert (=> (< (- x5800 1) 10000) (not (= (+ x98 3) x5800))))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (+ x1186 3)))))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x1211 x3992 2)))))
(assert (not (= (+ x2042 4) (x1211 x946 1))))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x5500 1)))))
(assert (not (= (x1211 x3409 1) 3939881817)))
(assert (not (= (x1211 x946 1) (+ 3 x1186))))
(assert (and (= (x5041 10 28) 10000000000000000000000000000) (= (x5041 10 17) 100000000000000000) (= (x5041 10 22) 10000000000000000000000) (= 100000000 (x5041 10 8)) (= (x5041 10 13) 10000000000000) (= 1000000000000000000000000 (x5041 10 24)) (= (x5041 10 14) 100000000000000) (= (x5041 10 5) 100000) (= (x5041 10 9) 1000000000) (= (x5041 10 7) 10000000) (= 1000000000000000 (x5041 10 15)) (= 10000000000 (x5041 10 10)) (= (x5041 10 27) 1000000000000000000000000000) (= 1000000000000000000000000000000 (x5041 10 30)) (= 1000000000000 (x5041 10 12)) (= 100000000000 (x5041 10 11)) (= 10000000000000000 (x5041 10 16)) (= (x5041 10 1) 10) (= 100 (x5041 10 2)) (= 100000000000000000000000000000 (x5041 10 29)) (= 10000000000000000000 (x5041 10 19)) (= (x5041 10 0) 1) (= 10000000000000000000000000 (x5041 10 25)) (= 100000000000000000000 (x5041 10 20)) (= 1000 (x5041 10 3)) (= 100000000000000000000000 (x5041 10 23)) (= 100000000000000000000000000 (x5041 10 26)) (= (x5041 10 6) 1000000) (= 1000000000000000000 (x5041 10 18)) (= (x5041 10 4) 10000) (= 1000000000000000000000 (x5041 10 21))))
(assert (x5138 x1543 x2374))
(assert (x6051 x1292))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 x4799 1) x3786))))
(assert (= x2857 (=> (and (= x4653 x1036) (= x657 0)) x5752)))
(assert (not (= (+ x2042 4) (x1211 x3414 1))))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (+ 3 x3962)))))
(assert (= (x3965 x1381) (ite (= x3341 x1381) x4110 (x5268 x1381))))
(assert (=> (> (+ 10000 1) x5800) (not (= (+ 4 x98) x5800))))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x5745 1) x3979))))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 x208 1)))))
(assert (x4630 x667))
(assert (x4630 x951))
(assert (= (=> (and (= x3117 (x6031 (+ x2045 32))) (= (x6031 (+ x2568 4)) x5090) (= (x5347 1461501637330902918203684832716283019655932542975 x1642) x3954) (= x3374 (x5601 x3117)) (= x2931 (x5347 1461501637330902918203684832716283019655932542975 x3374)) (= x1598 (x5347 1461501637330902918203684832716283019655932542975 x4697)) (= (x3910 x1598) x2467) (= (= 0 x2467) x1882) (= x2775 (x6031 (+ x2568 36)))) (and (=> (and (not x1882) (= (< 0 x895) x3027) (or (and x3027 (< x4249 4294967296) (= x2858 1)) (and (not x3027) (= x2858 x895)))) x4884) (=> x1882 x3198))) x3083))
(assert (= x3187 (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x1731) x952) (= x5214 (x3910 x952)) (= (= x5214 0) x505) (= x2144 4) (= x1731 (x5601 x3476))) (and (=> (not x505) x4646) (=> x505 x3198)))))
(assert (x4630 x2116))
(assert (not (= 2835717307 (x1211 274184521717934524641157099916833587231 1))))
(assert (not (= (x1211 x1112 1) 2514000705)))
(assert (=> (= (x1211 x1112 1) (x1211 x4017 1)) (= x4017 x1112)))
(assert (=> (> (+ 10000 1) x4090) (not (= (+ x1186 3) x4090))))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (x1211 x902 1)))))
(assert (x4630 x346))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (x1211 x4610 1)))))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x4090 3) x4800))))
(assert (not (= (x1211 x3836 1) 2743638299)))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x1956 1) x4198))))
(assert (x4630 x452))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x3755 1)))))
(assert (x399 x5500))
(assert (not (= 2743638299 (x1211 x3543 1))))
(assert (x4630 x2535))
(assert (= x4246 (=> (= (= x1348 0) x2361) (and (=> (not x2361) x4812) (=> x2361 x5361)))))
(assert (x4630 x374))
(assert (not (= (x1211 x2862 1) 18446744073709551615)))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (+ 3 x3962)))))
(assert (not (= 3939881817 (+ x2042 1))))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x1852 1) x3979))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x1451 1)))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (+ x5409 1)))))
(assert (not (= (x1211 x4293 1) 274184521717934524641157099916833587202)))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x3409 1)))))
(assert (not (= (+ 3 x98) (+ 1 x2042))))
(assert (not (= (x1211 x208 1) 404098525)))
(assert (= (=> (= (= x459 0) x6071) (and (=> (not x6071) x1394) (=> x6071 x5361))) x1039))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (x1211 x946 1)))))
(assert (x4630 x533))
(assert (= (and (not x4886) x1326) x4984))
(assert (= x4914 (or x679 (and x5127 (not x1141)))))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x3836 1) x1303))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ 2 x2042))))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x5917 1) x928))))
(assert (x4630 x4644))
(assert (not (= (x1211 x902 1) 1)))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (+ x2042 1)))))
(assert (not (= 3 (x1211 x3836 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x5745 1))))
(assert (=> (= (x1211 x1919 1) (x1211 x4527 1)) (= x4527 x1919)))
(assert (not (= (+ 5 x3962) (x1211 x5421 1))))
(assert (x4630 x4420))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x3962 4))))
(assert (= x4398 (and x925 (not x4147))))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x946 1) x1303))))
(assert (= x2711 (=> (and (= x490 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5850)) (= x1614 (or (and (= (<= x6145 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x6145 32)) (> x6145 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x6031 (+ x5980 x490)) x1155) (= (x6031 (+ 31 x6145)) x5850)) (and (=> x1614 x5361) (=> (not x1614) x5604)))))
(assert (not (= (+ 3 x98) (x1211 x5745 1))))
(assert (not (= (+ 2 x2042) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x1211 x208 1) 1)))
(assert (x6051 x5350))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x406 1)))))
(assert (= (and x3779 (not x3606)) x3842))
(assert (= (and x3209 x4657) x2883))
(assert (=> (= (x1211 x1919 1) (x1211 x1852 1)) (= x1852 x1919)))
(assert (x4630 x1455))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (+ x2042 3)))))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (+ x98 3)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x946 1))))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x740 2) x4799))))
(assert (=> (< (- x2417 1) 10000) (not (= (x1211 x5745 1) x2417))))
(assert (= x679 (or (and x468 x3831) (and x1141 x5127) (and x2587 x3977) (and x914 x3127) (and x2140 x3661) (and (not x3330) x4053))))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x208 1) x2549))))
(assert (x4630 x314))
(assert (x4630 x1256))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x935 1)))))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x310 2) x2601))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x5745 1) x3771))))
(assert (= x3672 (and x746 (not x4593))))
(assert (not (= 117300739 (+ x98 4))))
(assert (x4630 x6107))
(assert (not (= (+ 3 x3962) (+ x3948 1))))
(assert (=> (> (+ 10000 1) x3148) (not (= (x1211 x740 2) x3148))))
(assert (= x997 (=> (and (= x1186 (x1211 x310 2)) (= x310 (x5347 1461501637330902918203684832716283019655932542975 x5076)) (= x3050 (= 0 x1574))) (and (=> (not x3050) x2617) (=> x3050 x4994)))))
(assert (x6051 x1073))
(assert (not (= (x1211 x4293 1) 157198259)))
(assert (x4630 x2126))
(assert (not (= (+ x3962 2) 2)))
(assert (x399 x2154))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x3543 1)))))
(assert (= (=> (and (not (< x4502 826074471)) (= (x3910 274184521717934524641157099916833587206) x5886) (not (< x4576 4)) (= x4026 x4576) (= (or (> x1293 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1293 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1293))) x4288) (= x1071 x1919) (= x5243 50942633119752846454219349998365661925608737367104304655302372697894809501696) (> x5886 0) (= x4502 1889567281) (not (= x4502 826074471)) (= x4576 36) (= x1293 (x3337 (- x4576 4)))) (and (=> (not x4288) x5107) (=> x4288 x2857))) x439))
(assert (x4630 x2699))
(assert (x4630 x1309))
(assert (x5138 x1731 x3446))
(assert (=> (< (- x4610 1) 10000) (not (= (+ x2042 2) x4610))))
(assert (=> (= (x1211 x4284 1) (x1211 x3755 1)) (= x3755 x4284)))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (+ 2 x2042)))))
(assert (x5138 x85 x2475))
(assert (= x4633 (and x5261 (not x2430))))
(assert (x4630 x3292))
(assert (= 0 (x731 x4083)))
(assert (not (= 3939881817 (x1211 x4090 3))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x3148 3) x3230))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x935 1)))))
(assert (not (= (+ 2 x3457) (x1211 x3513 1))))
(assert (not (= (x1211 x1852 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x1211 x5500 1) 2514000705)))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x740 2)))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ 3 x1186))))
(assert (x4630 x5992))
(assert (not (= (x1211 x4293 1) (+ 4 x2042))))
(assert (= (=> (= x3978 (= x1216 0)) (and (=> (not x3978) x6117) (=> x3978 x3198))) x596))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ 3 x98)))))
(assert (not (= 4168891048 (x1211 x6069 1))))
(assert (=> (< (- x2845 1) 10000) (not (= (x1211 x902 1) x2845))))
(assert (=> (= (x1211 x361 1) (x1211 x928 1)) (= x928 x361)))
(assert (x5138 x1126 x3205))
(assert (x4630 x6100))
(assert (x4630 x162))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x4017 1) x4198))))
(assert (x4630 x1615))
(assert (x4630 x1525))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 x4284 1) x361))))
(assert (=> (> (+ 10000 1) x4554) (not (= (+ x98 1) x4554))))
(assert (=> (> (+ 10000 1) x3992) (not (= (+ x1186 1) x3992))))
(assert (x4630 x3174))
(assert (x4630 x5856))
(assert (x4630 x2022))
(assert (= (and x2406 (not x857)) x5053))
(assert (=> (> (+ 10000 1) x1338) (not (= (+ x98 4) x1338))))
(assert (=> (< (- x3409 1) 10000) (not (= (x1211 x1849 1) x3409))))
(assert (x4630 x4971))
(assert (not (= (x1211 x4293 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (= x1996 (=> (= (= x4361 0) x1677) (and (=> (not x1677) x2051) (=> x1677 x3198)))))
(assert (=> (< (- x928 1) 10000) (not (= (+ 1 x1186) x928))))
(assert (=> (< (- x3699 1) 10000) (not (= (+ 1 x5409) x3699))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x4800 1)))))
(assert (x4630 x2033))
(assert (not (= (+ 2 x3457) (+ 1 x2042))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x3414 1)))))
(assert (x4630 x772))
(assert (=> (> (+ 10000 1) x693) (not (= (x1211 x3576 1) x693))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x902 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x3992 2)))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (+ x2042 2)))))
(assert (x6051 x4697))
(assert (not (= (+ x3962 3) (x1211 x3645 1))))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x4799 1)))))
(assert (x4630 x3465))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x946 1)))))
(assert (not (= (+ 2 x4054) 274184521717934524641157099916833587202)))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x208 1) x4063))))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (+ 1 x98)))))
(assert (=> (> (+ 10000 1) x3576) (not (= (+ x98 1) x3576))))
(assert (=> (= (x1211 x4527 1) (x1211 x182 1)) (= x4527 x182)))
(assert (=> (< (- x3255 1) 10000) (not (= (x1211 x740 2) x3255))))
(assert (x4630 x2378))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x4017 1)))))
(assert (= (=> (and (= (x6031 (+ x2323 31)) x5044) (= x3980 (x6031 (+ x2811 x1018))) (= x2811 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5044)) (= (or (> x2323 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2323) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2323) true))) x3082)) (and (=> (not x3082) x1125) (=> x3082 x5361))) x2953))
(assert (=> (> (+ 10000 1) x4284) (not (= (+ x3962 3) x4284))))
(assert (not (= (x1211 x2060 1) (+ x5409 1))))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x4284 1)))))
(assert (not (= (x1211 x2862 1) (+ 1 x3962))))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x740 2) x3771))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x740 2))))
(assert (not (= 1889567281 (x1211 x1956 1))))
(assert (=> (> (+ 10000 1) x4113) (not (= (x1211 x1852 1) x4113))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (+ 4 x2042)))))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (+ 1 x5409)))))
(assert (not (= (x1211 x4017 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x406 1)))))
(assert (x6051 x3460))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x4017 1) x4107))))
(assert (=> (> (+ 10000 1) x1775) (not (= (+ x5409 1) x1775))))
(assert (=> (> (+ 10000 1) x83) (not (= (x1211 x4198 1) x83))))
(assert (not (= 404098525 (x1211 x4090 3))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (+ x5409 1)))))
(assert (=> (> (+ 10000 1) x3414) (not (= (+ 1 x1186) x3414))))
(assert (=> (= (x1211 x3645 1) (x1211 x4284 1)) (= x4284 x3645)))
(assert (x4630 x1114))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x3409 1)))))
(assert (=> (< (- x4400 1) 10000) (not (= (+ 4 x1186) x4400))))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x361 1)))))
(assert (x4630 x2069))
(assert (x4630 x4296))
(assert (x4630 x4748))
(assert (x6051 x486))
(assert (x4630 x4904))
(assert (=> (< (- x693 1) 10000) (not (= (x1211 x3148 3) x693))))
(assert (not (= (x1211 x3836 1) (+ x5409 1))))
(assert (x4630 x1515))
(assert (= x2220 (and x3495 x4422)))
(assert (not (= (x1211 x4293 1) (x1211 x3148 3))))
(assert (= x3157 (=> (= x5125 (= x2601 274184521717934524641157099916833587206)) (and (=> (and (< x5967 826074471) (>= x2472 0) (not (< x4666 4)) (= 404098525 x5967) (= 1 x2590) (= 32 x4672) (= (x3910 274184521717934524641157099916833587206) x805) x5125 (not (= x5967 117300739)) (<= x2472 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1920 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (= 157198259 x5967)) (= 4 x4666) (= x4666 x2576) (< 0 x805)) x3571) (=> (not x5125) x1161)))))
(assert (= x2545 (and x5741 x5588)))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x3992 2) x4800))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x1919 1)))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x1112 1)))))
(assert (not (= (x1211 x1852 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (x1211 x4799 1)))))
(assert (= (and x2073 (not x4309)) x6121))
(assert (x4630 x2307))
(assert (x4630 x817))
(assert (not (= (x1211 x3513 1) (+ x3962 5))))
(assert (not (= (x1211 x2060 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x3576 1)))))
(assert (not (= (x1211 x5917 1) 826074471)))
(assert (=> (< (- x2601 1) 10000) (not (= (+ 3 x98) x2601))))
(assert (not (= 2743638299 (x1211 x4293 1))))
(assert (x4630 x988))
(assert (= x4513 (and x975 (not x6120))))
(assert (not (= (x1211 x6069 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (x1211 x6069 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x4630 x394))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x902 1)))))
(assert (not (= (x1211 x361 1) 18446744073709551615)))
(assert (=> (< (- x5917 1) 10000) (not (= (x1211 x4198 1) x5917))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x1211 x4610 1)))))
(assert (x4630 x4459))
(assert (=> (< (- x693 1) 10000) (not (= x693 (+ 4 x1186)))))
(assert (not (= (+ x1186 4) (+ 1 x98))))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (x1211 x4090 3)))))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (x1211 x4284 1)))))
(assert (not (= (+ 4 x98) (+ x98 1))))
(assert (not (= (x1211 x740 2) (+ 4 x1186))))
(assert (not (= (+ 3 x98) (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x361 1) x2758))))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x3513 1) x310))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (+ 3 x1186)))))
(assert (= x5200 (=> (= (= 0 x1446) x3898) (and (=> (not x3898) x1485) (=> (and (= x1674 0) x3898 (= x5606 0)) x5315)))))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (+ x3962 5)))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x4293 1)))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (+ x2042 3)))))
(assert (not (= (x1211 x902 1) (x1211 x4090 3))))
(assert (=> (< (- x5917 1) 10000) (not (= (x1211 x3409 1) x5917))))
(assert (not (= (+ x2042 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x1211 x6069 1) (+ 2 x3457))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x406 1))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x2060 1)))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x928 1) x5500))))
(assert (= (ite (and (not x642) x553 x5353) (x4536 x5444) (x3483 x5444)) (x4182 x5444)))
(assert (x4630 x5715))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 274184521717934524641157099916833587231 1) x2154))))
(assert (not (= 1000000000000000000 (x1211 x4284 1))))
(assert (not (= (+ x1186 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= 3939881817 (+ x3962 4))))
(assert (x6051 x2325))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x1919 1)))))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x902 1)))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x4017 1))))
(assert (=> (< (- x3166 1) 10000) (not (= (+ x98 3) x3166))))
(assert (not (= (+ 1 x1186) (+ x3948 1))))
(assert (=> (> (+ 10000 1) x1852) (not (= (+ 3 x2042) x1852))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x4218 2) x1248))))
(assert (not (= (x1211 x1919 1) 1000000000000000000)))
(assert (not (= (+ x98 1) (x1211 x4610 1))))
(assert (x5138 x6093 x4102))
(assert (=> (< (- x928 1) 10000) (not (= (+ x3962 1) x928))))
(assert (x4630 x5913))
(assert (= (and x650 x1618) x3565))
(assert (= (and x3426 (not x2370)) x5288))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x4799 1) x928))))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x6069 1) x3575))))
(assert (=> (< (- x1303 1) 10000) (not (= x1303 (x1211 x4800 1)))))
(assert (x4630 x5224))
(assert (= (and x4788 (not x701)) x2115))
(assert (x4630 x5085))
(assert (not (= (x1211 x1956 1) (+ x3457 2))))
(assert (=> (= (x1211 x4800 1) (x1211 x3409 1)) (= x4800 x3409)))
(assert (= (=> (and (= (or (and (= (<= x2855 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2855)) (> x2855 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5995) (= x6033 (x6031 (+ x932 128))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1073) x932) (= x1073 (x6031 (+ x2855 31)))) (and (=> x5995 x5361) (=> (not x5995) x1344))) x797))
(assert (=> (= (x1211 x361 1) (x1211 x4799 1)) (= x361 x4799)))
(assert (= 0 (x2210 x4430)))
(assert (x4630 x3393))
(assert (x4630 x5779))
(assert (=> (< (- x952 1) 10000) (not (= (+ x1186 1) x952))))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (x1211 x4800 1)))))
(assert (not (= 2 (x1211 x902 1))))
(assert (not (= (x406 1) (+ x2042 5))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x3543 1)))))
(assert (not (= (+ x1186 3) (x1211 x935 1))))
(assert (x4630 x1351))
(assert (not (= (+ 1 x1186) (+ 2 x3962))))
(assert (not (= (+ x2042 2) (x1211 x208 1))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x946 1)))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x3755 1)))))
(assert (not (= (x1211 x5500 1) 2835717307)))
(assert (x4630 x4281))
(assert (not (= (+ x3962 2) (x1211 x361 1))))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x4090 3) x2758))))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x310 2) x2417))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x3645 1)))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ x2042 4))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x928 1)))))
(assert (=> (= (x1211 x2060 1) (x1211 x4293 1)) (= x2060 x4293)))
(assert (x251 x5044 x1609 x3328 x1885))
(assert (not (= (x1211 x4799 1) 3)))
(assert (x4630 x3261))
(assert (= x1326 (and (not x4813) x3235)))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x3543 1) x4063))))
(assert (= x518 (and x3515 x5839)))
(assert (x251 x983 x2504 x2517 x1760))
(assert (x4630 x148))
(assert (=> (< (- x3409 1) 10000) (not (= (+ 1 x98) x3409))))
(assert (=> (> (+ 10000 1) x3409) (not (= (x1211 x1919 1) x3409))))
(assert (x4630 x4736))
(assert (=> (> (+ 10000 1) x208) (not (= (+ 5 x2042) x208))))
(assert (not (= (x1211 x1919 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x4237 x1368 x2898))
(assert (= x2586 (=> (and (= x4299 (= x3275 0)) (= x5528 (= x798 0)) (= (x5347 x4703 x1588) x3275) (= (ite (< x4671 x1160) 1 0) x1588) (= x4703 (ite (not x5528) 1 0)) (= x4671 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5246)))) (and (=> x4299 x569) (=> (not x4299) x3198)))))
(assert (x4630 x1156))
(assert (= x2223 (and x401 x2157)))
(assert (not (= (x1211 x4090 3) (x406 1))))
(assert (x4630 x5890))
(assert (=> (< (- x83 1) 10000) (not (= (x1211 x4017 1) x83))))
(assert (=> (< (- x935 1) 10000) (not (= (x1211 x361 1) x935))))
(assert (=> (= (x1211 x182 1) (x1211 x1112 1)) (= x1112 x182)))
(assert (x4630 x1550))
(assert (=> (< (- x3255 1) 10000) (not (= (+ 1 x2042) x3255))))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (x1211 x3755 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (+ x3457 2)))))
(assert (x4630 x2231))
(assert (x4630 x4098))
(assert (=> (< (- x1338 1) 10000) (not (= (+ 1 x3962) x1338))))
(assert (=> (= (x1211 x3513 1) (x1211 x2862 1)) (= x2862 x3513)))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x3576 1)))))
(assert (=> (< (- x208 1) 10000) (not (= (+ x4054 2) x208))))
(assert (= (=> (and (= x5119 (< (x3121 x693) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x3121 x693) x3354) (= x955 (x4313 274184521717934524641157099916833587231)) x5119 (= x3587 (= x693 274184521717934524641157099916833587206))) (and (=> (not x3587) x531) (=> x3587 x3298))) x888))
(assert (x4630 x3183))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x3414 1)))))
(assert (not (= 1889567281 (x1211 x2060 1))))
(assert (not (= (x1211 x4799 1) (+ 2 x3962))))
(assert (not (= (x1211 x5500 1) 404098525)))
(assert (=> (= (x1211 x3409 1) (x1211 x902 1)) (= x902 x3409)))
(assert (x4630 x4110))
(assert (=> (< (- x182 1) 10000) (not (= x182 (+ x3962 3)))))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (+ 4 x1186)))))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x4198 1) x3979))))
(assert (=> (> (+ 10000 1) x1598) (not (= (+ x2042 2) x1598))))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 274184521717934524641157099916833587231 1) x6069))))
(assert (=> (> (+ 10000 1) x4107) (not (= (+ 4 x98) x4107))))
(assert (=> (> (+ 10000 1) x3740) (not (= (x1211 x3513 1) x3740))))
(assert (= x5620 x5261))
(assert (= x5071 (or (and x5787 x2999) x4906)))
(assert (not (= (+ x3962 5) (x1211 x3755 1))))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (+ 4 x2042)))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x4293 1)))))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x361 1) x4400))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x3414 1)))))
(assert (= (or (and x2718 x3590) (and x2080 x289)) x441))
(assert (x4630 x2728))
(assert (x5138 x2264 x1819))
(assert (= (x4952 x2954) 0))
(assert (=> (= (x1211 x3409 1) (x1211 x5500 1)) (= x3409 x5500)))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (+ x98 3)))))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x3576 1)))))
(assert (x4630 x2737))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x208 1)))))
(assert (not (= (x1211 x182 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x263 x3246 x5799))
(assert (= x560 (=> (= (> x249 x1162) x3710) (and (=> x3710 x3905) (=> (not x3710) x3555)))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x5917 1))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x928 1))))
(assert (not (= (x1211 x5421 1) (x1211 x310 2))))
(assert (=> (< (- x2154 1) 10000) (not (= (+ 1 x2042) x2154))))
(assert (=> (> (+ 10000 1) x4400) (not (= (x1211 x4800 1) x4400))))
(assert (= (=> (= (= x2549 274184521717934524641157099916833587202) x2634) (and (=> (not x2634) x4095) (=> x2634 x4951))) x938))
(assert (x4630 x2213))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 274184521717934524641157099916833587231 1) x4284))))
(assert (= (ite (= x6054 x3177) x162 (x3167 x6054)) (x3185 x6054)))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x2862 1) x310))))
(assert (not (= 2743638299 (x1211 x4527 1))))
(assert (x4630 x3341))
(assert (= (=> (= (= x5443 0) x4593) (and (=> (not x4593) x453) (=> (and x4593 (= x4045 x4044) (= 0 x606)) x2208))) x586))
(assert (x4630 x4897))
(assert (not (= (+ x98 4) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 x5500 1) x361))))
(assert (= x3916 (and x613 (not x5633))))
(assert (not (= (x1211 x1451 1) 117300739)))
(assert (not (= (x1211 x4800 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x4630 x5894))
(assert (=> (> (+ 10000 1) x2417) (not (= (+ 4 x98) x2417))))
(assert (= x4828 (=> (and (= (ite (< x3669 x2970) 1 0) x3003) (= (= 0 x2160) x1152) (= (ite (not x1152) 1 0) x3968) (= (= 0 x3854) x5588) (= x3669 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2160))) (= x3854 (x5347 x3968 x3003))) (and (=> (not x5588) x5361) (=> x5588 x1517)))))
(assert (not (= (+ 2 x2042) (+ x4054 2))))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x2862 1) x3771))))
(assert (x4630 x5076))
(assert (= x3834 (=> (and (= (x3021 x4936) x2251) (= x3604 (x6031 (+ x5052 4))) (= x3194 (x5347 1461501637330902918203684832716283019655932542975 x2251)) (= (x3910 x4644) x4916) (= (= x4916 0) x3371) (= x4936 (x6031 (+ x383 32)))) (and (=> x3371 x5361) (=> (and (or (and (= x1688 x3516) (not x3267)) (and (= x1688 1) x3267 (> 4294967296 x1003))) (not x3371) (= x3267 (> x3516 0))) x5342)))))
(assert (= (ite (= x1233 x2388) x6030 (x14 x2388)) (x591 x2388)))
(assert (not (= (+ 4 x2042) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x251 x634 x5893 x3319 x4077))
(assert (x4630 x1303))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x4198 1)))))
(assert (x4630 x5963))
(assert (x6051 x5799))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x182 1) x4293))))
(assert (x4630 x3374))
(assert (= (=> (= x6177 (= 0 x2022)) (and (=> (and (= x2413 x2505) (= x4558 x5802) x6177 (= x876 x6152) (= 0 x4986) (= 0 x6091) (= x3766 x3306) (= x1328 x833)) x3614) (=> (not x6177) x843))) x961))
(assert (x4630 x6122))
(assert (= (and (not x1522) x1286) x900))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (+ 1 x5409)))))
(assert (=> (< (- x928 1) 10000) (not (= x928 (x1211 x1919 1)))))
(assert (x4630 x1233))
(assert (not (= (x1211 x3414 1) 4294967296)))
(assert (= x1026 (and x2915 x296)))
(assert (=> (= (x1211 x3513 1) (x1211 x4284 1)) (= x4284 x3513)))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (+ 2 x4054)))))
(assert (=> (> (+ 10000 1) x3786) (not (= (+ 2 x3457) x3786))))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (x1211 x935 1)))))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x935 1) x5917))))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x5917 1) x182))))
(assert (=> (= (x1211 x3576 1) (x1211 x4284 1)) (= x3576 x4284)))
(assert (x251 x5578 x350 x4790 x6173))
(assert (x4630 x398))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x4488) (= x2892 x2130) (= x21 (not (= x2892 x4065))) (= x2130 x2261) (= x3450 x5246) (= x1034 x856) (= x2130 x5816) x21 (>= 1461501637330902918203684832716283019655932542975 x5816) (>= x1206 0) (>= x4488 0) (= x4488 x5437) (<= 0 x2261) (= x3273 x5746) (= x4816 (not x5746)) (>= 1461501637330902918203684832716283019655932542975 x6118) (<= x1206 1461501637330902918203684832716283019655932542975) (= x3676 x3863) (> x5115 99) (>= x6118 0) (<= 0 x5816) (= x4931 x1543) (= x4065 x2025) (= x4572 x1143) (= x1143 x1206) (= (<= x5115 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (<= x2261 1461501637330902918203684832716283019655932542975)) x4957) x3659))
(assert (=> (< (- x182 1) 10000) (not (= x182 (+ 1 x3962)))))
(assert (x4630 x4477))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x5500 1) x3836))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (+ 1 x5409)))))
(assert (x4630 x3323))
(assert (=> (= (x1211 x946 1) (x1211 x3513 1)) (= x946 x3513)))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x902 1)))))
(assert (= x6113 (=> (= x256 (= x561 274184521717934524641157099916833587202)) (and (=> (not x256) x3763) (=> (and (not (< x3442 4)) (>= x1914 0) (= x5511 (x3910 274184521717934524641157099916833587202)) (= 826074471 x5522) (= x3442 x5942) (= x1128 1) (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x5106) (not (< x5522 826074471)) (= x3442 4) x256 (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x3437) (< 0 x5511)) x120)))))
(assert (= x462 (=> (and (= x5695 (x5347 1461501637330902918203684832716283019655932542975 x1642)) (= (x3910 x3699) x5973) (= (x6031 (+ x2952 36)) x820) (= (x5347 1461501637330902918203684832716283019655932542975 x3374) x2555) (= x2221 (x6031 (+ 4 x2952))) (= x3102 (x6031 (+ 64 x2221))) (= x2479 (= x5973 0))) (and (=> x2479 x3198) (=> (and (or (and (= 1 x5904) x6013 (< x6107 4294967296)) (and (= x4426 x5904) (not x6013))) (= (< 0 x4426) x6013) (not x2479)) x4124)))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x3414 1)))))
(assert (=> (= (x1211 x2862 1) (x1211 x182 1)) (= x2862 x182)))
(assert (x2507 x2222 x4500))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ 5 x3962) x4113))))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x361 1)))))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x5745 1) x3699))))
(assert (not (= (x1211 x361 1) (+ x2042 2))))
(assert (= (=> (= (= x1128 0) x2133) (and (=> x2133 x5361) (=> (not x2133) x1837))) x120))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x4293 1) x3543))))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (+ 2 x3457)))))
(assert (x6051 x1368))
(assert (x4630 x4400))
(assert (=> (< (- x6069 1) 10000) (not (= (+ 5 x3962) x6069))))
(assert (not (= (x1211 x1849 1) (+ x98 4))))
(assert (=> (= (x1211 x3576 1) (x1211 x361 1)) (= x3576 x361)))
(assert (=> (< (- x208 1) 10000) (not (= x208 (+ x3457 2)))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (+ 4 x1186)))))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x935 1) x1303))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x5500 1))))
(assert (x4630 x5904))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x3755 1) x3771))))
(assert (not (= (+ 1 x5409) (+ x2042 5))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (+ 2 x3457)))))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x3513 1) x3576))))
(assert (not (= (x1211 x6069 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x4630 x5802))
(assert (= (x4664 x4744) (ite (= x4744 x6002) 0 (x3471 x4744))))
(assert (=> (> (+ 10000 1) x1219) (not (= (x1211 x3576 1) x1219))))
(assert (x4630 x3164))
(assert (=> (= (x1211 x1451 1) (x1211 x928 1)) (= x928 x1451)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x5745 1))))
(assert (= (and x2606 (not x2237)) x4164))
(assert (= (x4133 x2963) (ite (= x2963 x5376) 0 (x1051 x2963))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (+ 1 x2042)))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x1451 1) x2154))))
(assert (= (and x5463 (not x2058)) x1883))
(assert (=> (> (+ 10000 1) x3699) (not (= (x1211 x4017 1) x3699))))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (x1211 x3543 1)))))
(assert (not (= (x1211 x3836 1) 826074471)))
(assert (x4630 x3647))
(assert (x4630 x5705))
(assert (x4630 x6163))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x361 1) x1112))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x946 1)) (= x946 274184521717934524641157099916833587231)))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (x1211 x4610 1)))))
(assert (not (= (+ 5 x2042) 1000000000000000000)))
(assert (not (= (x1211 x3513 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x3148 3)))))
(assert (x399 x4284))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (x1211 x4284 1)))))
(assert (x6051 x3003))
(assert (= (ite (and x2869 (not x3708) x3512) (x3104 x3660) (ite (and (not x3708) (not x3512) (not x5704) x2869) (x4101 x3660) (x2322 x3660))) (x1187 x3660)))
(assert (x4630 x4619))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x3513 1)))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x935 1)))))
(assert (not (= (x1211 x4017 1) (x1211 x3148 3))))
(assert (= x3875 (or (and x290 (not x5283)) (and x4419 x1022))))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 x3992 2)))))
(assert (=> (= (x1211 x4799 1) (x1211 x1849 1)) (= x4799 x1849)))
(assert (not (= (+ 2 x2042) (x1211 x1852 1))))
(assert (not (= (+ x98 1) (+ x2042 4))))
(assert (= (and (not x3050) x57) x2947))
(assert (not (= (+ 5 x2042) (x1211 x3645 1))))
(assert (=> (> (+ 10000 1) x4063) (not (= (+ 1 x1186) x4063))))
(assert (not (= (+ 2 x4054) 2)))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x5917 1) x5745))))
(assert (=> (< (- x4702 1) 10000) (not (= (+ 2 x3962) x4702))))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x928 1) x3645))))
(assert (=> (> (+ 10000 1) x5800) (not (= (x1211 x928 1) x5800))))
(assert (= x5844 (and (not x3646) x5484)))
(assert (=> (= (x1211 x928 1) (x1211 274184521717934524641157099916833587231 1)) (= 274184521717934524641157099916833587231 x928)))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x6069 1) x1598))))
(assert (= (or (and x5198 x4856) (and x5020 x529)) x5750))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x3992 2))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x946 1)))))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ x2042 1) x4113))))
(assert (x6051 x2309))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (+ 1 x3962)))))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (+ x1186 4)))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x5917 1)))))
(assert (x251 x1114 x6155 x2189 x706))
(assert (not (= (+ 5 x3962) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (> (+ 10000 1) x1248) (not (= (+ 5 x3962) x1248))))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (+ 4 x3962)))))
(assert (not (= (+ x3962 2) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (+ 2 x3962)))))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x1219) x2670) (and (=> (and (not (= 157198259 x5518)) (<= 0 x5470) (= (x3910 274184521717934524641157099916833587202) x4180) (> 826074471 x5518) x2670 (= 1 x3228) (> x4180 0) (not (= 117300739 x5518)) (<= x5470 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5997 x4273) (= x533 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= x5518 404098525) (not (> 4 x5997)) (= x5997 4) (= x4176 32)) x5291) (=> (not x2670) x2067))) x3154))
(assert (= (=> (and (= (= x5126 0) x4813) (= (x3910 x3255) x5126) (= (x6031 (+ x3766 36)) x2199) (= x5575 (x6031 (+ 4 x3766)))) (and (=> (and (not x4813) (= x3830 (> x4638 0)) (or (and (= x4339 x833) (= x2413 x660) (= x2881 x4558) (= x876 x5280) (not x3830)) (and (= (x1302 274184521717934524641157099916833587231) x1724) x896 (= (= x80 (x1597 x3255)) x896) (< x4343 4294967296) (= x1744 x2881) x3830 (= x1737 x660) x1393 (= x5280 x395) (= x1393 (<= x1724 (x1597 274184521717934524641157099916833587231))) (= x4339 x3456) (= (x1302 x3255) x80)))) x2354) (=> x4813 x5361))) x843))
(assert (not (= (x1211 x5500 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x740 2))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x2060 1)))))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (x1211 x3836 1)))))
(assert (=> (> (+ 10000 1) x4400) (not (= (x1211 x3645 1) x4400))))
(assert (=> (< (- x740 1) 10000) (not (= x740 (+ x98 1)))))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 x1956 1) x361))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (x1211 x3148 3)))))
(assert (not (= (x1211 x3576 1) 4294967296)))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x4610 1) x6037))))
(assert (x4630 x2167))
(assert (x4630 x1992))
(assert (x251 x373 x101 x317 x1404))
(assert (=> (= (+ x3962 5) (+ x2042 5)) (= x740 x3992)))
(assert (=> (> (+ 10000 1) x3409) (not (= (+ x3962 4) x3409))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x182 1)))))
(assert (not (= (x1211 x1956 1) (+ x3948 1))))
(assert (=> (< (- x1303 1) 10000) (not (= (+ x3962 1) x1303))))
(assert (x4630 x1131))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x4527 1)))))
(assert (not (= (+ 5 x2042) (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (x1211 x1919 1)))))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (+ x98 4)))))
(assert (not (= (x1211 x928 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (not (= (x1211 x208 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x4630 x1818))
(assert (=> (> (+ 10000 1) x4284) (not (= (+ x3962 4) x4284))))
(assert (=> (> (+ 10000 1) x2758) (not (= (+ x3962 4) x2758))))
(assert (=> (> (+ 10000 1) x4017) (not (= (+ 3 x3962) x4017))))
(assert (=> (< (- x4799 1) 10000) (not (= (x1211 x902 1) x4799))))
(assert (not (= 1000000000000000000 (+ 2 x2042))))
(assert (=> (< (- x4610 1) 10000) (not (= (+ 2 x3962) x4610))))
(assert (x4630 x1650))
(assert (x4630 x1095))
(assert (x5138 x4140 x6124))
(assert (= 0 (x5966 x3537)))
(assert (not (= 826074471 (x1211 x3992 2))))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x1956 1)))))
(assert (not (= (+ 3 x2042) (x1211 x935 1))))
(assert (= x1763 (=> (and (<= x4109 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2272)) x4677) (= (x1211 274184521717934524641157099916833587231 1) x3712) (= x3445 (x1211 x902 1)) (= x3994 (x3337 (- x59 x2272))) (= x781 (> x4109 x4677)) (= 274184521717934524641157099916833587231 x3678) (<= 0 x4109) (= (x5347 1461501637330902918203684832716283019655932542975 x456) x902) (= (x400 x3445) x4109)) (and (=> x781 x1839) (=> (not x781) x3079)))))
(assert (= x529 (and x5198 (not x4856))))
(assert (=> (> (+ 10000 1) x182) (not (= (x1211 x4017 1) x182))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (+ x2042 1)))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (+ 1 x3948)))))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x1451 1) x946))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x4198 1)))))
(assert (not (= (x1211 x3992 2) (+ 1 x5409))))
(assert (= (ite (and (not x4813) x3235 x3830) (x4236 x5233) (x3247 x5233)) (x4002 x5233)))
(assert (= (=> (and (= x5795 x70) (= 0 x4163)) x4470) x4893))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x935 1) x3771))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x1849) (not (= (+ 3 x3962) x1849))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x1451 1)))))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (x1211 x928 1)))))
(assert (=> (= (x1211 x1852 1) (x1211 x1112 1)) (= x1112 x1852)))
(assert (not (= (+ x1186 3) (x1211 x208 1))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x3230) (not (= (+ 5 x2042) x3230))))
(assert (= x3030 (and x2599 (not x1938))))
(assert (= (and (not x2127) x4240) x5329))
(assert (not (= (+ 2 x3962) 157198259)))
(assert (=> (> (+ 10000 1) x3414) (not (= (+ x3457 2) x3414))))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x5500 1) x1112))))
(assert (not (= (x1211 x4218 2) (x1211 x4800 1))))
(assert (=> (= (x1211 x1852 1) (x1211 x208 1)) (= x1852 x208)))
(assert (= (and x2634 x1590) x908))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ x2042 2))))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (+ x98 4)))))
(assert (=> (= (x1211 x1451 1) (x1211 x3755 1)) (= x1451 x3755)))
(assert (not (= (x1211 x4218 2) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (=> (= x662 (= 0 x5962)) (and (=> x662 x3198) (=> (not x662) x4684))) x2652))
(assert (x4630 x2320))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x3755 1)))))
(assert (=> (= (x1211 x1451 1) (x1211 x5421 1)) (= x5421 x1451)))
(assert (=> (< (- x4198 1) 10000) (not (= (+ x2042 4) x4198))))
(assert (=> (= (x1211 x1852 1) (x1211 x5421 1)) (= x1852 x5421)))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x3543 1)))))
(assert (x4630 x4148))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x182 1) x740))))
(assert (x4630 x2993))
(assert (not (= (+ x2042 5) (+ 1 x3948))))
(assert (x6051 x5378))
(assert (= x3231 (=> (and (= x4480 0) (= x2759 (x3337 (- x1676 32))) (= (x6031 (+ x6011 100)) x5906) (= x2149 (x6031 (+ 32 x6011))) (= (> x790 0) x381) (= (x5347 1461501637330902918203684832716283019655932542975 x4931) x2549) (= (x6031 (+ x5808 128)) x5394) (= (x6031 (+ x995 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x3730) (= (x3910 x2549) x790) (= x1676 (x3337 (- x5906 x6011))) (= x995 (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x2782)) (= (x6031 (+ 68 x6011)) x3546) (= (x4332 x2149) x2782) (= x5808 (x6031 (+ x6011 36)))) (and (=> (and x381 (or (and (not x5302) (= 0 x5165)) (and (= (> x1011 32) x435) (= x2149 x2061) (= x1965 (x2662 x2061)) (= x5394 x5084) x5302 (or (and (= (x2662 x4879) x4764) (= x4879 (x6031 (+ x6011 64))) x435 (or (and (= x5165 64) (not x6141)) (and (= x6136 (x6031 (+ 128 x5906))) (= (x6031 (+ x6011 96)) x2577) (= x349 (x2662 x2577)) (= (< 96 x1011) x5530) (or (and (= x5165 96) (not x5530)) (and x5530 (= x1182 (> x1011 128)) (not x1182) (= 128 x5165) (= (x6031 (+ x6011 128)) x5197) (= x4302 (x2662 x5197)) (= (x6031 (+ x5906 160)) x1268))) x6141)) (= (x6031 (+ x5906 96)) x3382) (= (> x1011 64) x6141)) (and (= 32 x5165) (not x435))))) (= x664 (< x1011 x5165)) (or (not x664) (and (= (x6031 (+ x1011 x5394)) x4383) x664)) (= (> x1011 0) x5302) (= (x1827 x6011) x1011)) x407) (=> (not x381) x3198)))))
(assert (= x2482 (or (and x5125 x5255) (and x1450 x3128))))
(assert (not (= (x1211 x3414 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= (x1211 x4198 1) (+ 1 x1186))))
(assert (=> (< (- x1467 1) 10000) (not (= (x1211 x5500 1) x1467))))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x3409 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 2 x4054))))
(assert (not (= (+ x3962 5) (x1211 x4610 1))))
(assert (x4630 x633))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x1849 1)))))
(assert (=> (< (- x4554 1) 10000) (not (= (+ 1 x5409) x4554))))
(assert (not (= (x1211 x182 1) 117300739)))
(assert (x4630 x5130))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x3543 1) x3699))))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x4090 3)))))
(assert (x263 x4682 x5330))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x4800 1)))))
(assert (= (and (not x3705) x10) x6127))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (+ x98 1)))))
(assert (x4630 x2245))
(assert (x4630 x611))
(assert (x4630 x4207))
(assert (x4630 x5017))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (+ 2 x2042)))))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x4198 1))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x5917 1))))
(assert (not (= (x1211 x1451 1) (+ x2042 4))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x5745 1))))
(assert (=> (= (x1211 x5500 1) (x1211 x3645 1)) (= x3645 x5500)))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x4218 2)))))
(assert (= x2146 (or (and x925 x4147) (and x4859 x1957))))
(assert (= (and (not x4422) x3495) x2353))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (x1211 x928 1)))))
(assert (=> (= (x1211 x3409 1) (x1211 x4293 1)) (= x4293 x3409)))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (+ 2 x3962)))))
(assert (x4630 x2526))
(assert (= (and x4493 (not x2754)) x2145))
(assert (x4630 x4831))
(assert (x4630 x1295))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x310 2)))))
(assert (=> (< (- x208 1) 10000) (not (= (x1211 x935 1) x208))))
(assert (=> (< (- x4799 1) 10000) (not (= (x1211 x3414 1) x4799))))
(assert (=> (> (+ 10000 1) x3576) (not (= (+ x1186 4) x3576))))
(assert (not (= (+ x3962 1) (+ 5 x3962))))
(assert (=> (= (x1211 x1852 1) (x1211 x5745 1)) (= x1852 x5745)))
(assert (not (= (x1211 x4800 1) (x1211 x3148 3))))
(assert (x4630 x5648))
(assert (not (= (x1211 x6069 1) 274184521717934524641157099916833587202)))
(assert (not (= (+ x3962 3) (x1211 x4800 1))))
(assert (not (= 1000000000000000000 (x1211 x4090 3))))
(assert (not (= (+ x4054 2) (x1211 x3148 3))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x1919 1)))))
(assert (not (= (x1211 x4017 1) 1889567281)))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (+ x3962 5)))))
(assert (x4630 x4558))
(assert (= (and x1590 (not x2634)) x5179))
(assert (not (= (x1211 x3992 2) (x1211 x6069 1))))
(assert (x251 x3300 x1508 x3484 x5769))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x2060 1) x4090))))
(assert (x4630 x2122))
(assert (x5138 x5318 x5218))
(assert (=> (> (+ 10000 1) x3786) (not (= (x1211 x1956 1) x3786))))
(assert (not (= (+ x3962 2) (+ 3 x1186))))
(assert (x4630 x3260))
(assert (=> (< (- x4107 1) 10000) (not (= (x1211 x3992 2) x4107))))
(assert (x399 x2820))
(assert (=> (> (+ 10000 1) x3409) (not (= (+ 3 x3962) x3409))))
(assert (not (= (x1211 x1852 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (= x3510 (or (and x290 x5283) x3875)))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x3576 1)) (= 274184521717934524641157099916833587231 x3576)))
(assert (=> (< (- x1919 1) 10000) (not (= (x1211 x3409 1) x1919))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x1451 1) x3771))))
(assert (x263 x1488 x1061))
(assert (x4630 x2152))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (+ x2042 5)))))
(assert (not (= (+ 2 x3457) 4294967296)))
(assert (=> (< (- x3771 1) 10000) (not (= (x1211 x3645 1) x3771))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (+ x3962 3))))
(assert (=> (< (- x2696 1) 10000) (not (= (x1211 x1849 1) x2696))))
(assert (not (= (x1211 x935 1) (x1211 x3148 3))))
(assert (x6051 x1163))
(assert (=> (< (- x1467 1) 10000) (not (= (+ x2042 1) x1467))))
(assert (=> (< (- x3409 1) 10000) (not (= (x1211 x361 1) x3409))))
(assert (= x2588 (and x5073 x2947)))
(assert (x5138 x5709 x2713))
(assert (x4630 x1166))
(assert (= (and (not x1079) x4947) x5023))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x1849 1) x5421))))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (x1211 x1849 1)))))
(assert (not (= (+ x3962 5) (+ x3948 1))))
(assert (not (= (x1211 x182 1) 1)))
(assert (not (= (x1211 x3576 1) 2)))
(assert (not (= (+ 1 x3948) (x1211 x3414 1))))
(assert (not (= (+ x3962 1) (x1211 x928 1))))
(assert (not (= (+ 3 x3962) (+ x3962 2))))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x3992 2) x4527))))
(assert (x4630 x3102))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x4527 1)) (= 274184521717934524641157099916833587231 x4527)))
(assert (x4630 x3117))
(assert (=> (< (- x693 1) 10000) (not (= x693 (+ 1 x5409)))))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x4284 1) x4198))))
(assert (x251 x5531 x1843 x1385 x5403))
(assert (not (= (+ x3962 3) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (= (x1211 x1849 1) (x1211 x361 1)) (= x1849 x361)))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x4090 3))))
(assert (=> (= (x1211 x3645 1) (x1211 x4293 1)) (= x4293 x3645)))
(assert (x4630 x1852))
(assert (not (= (x1211 x4293 1) 2)))
(assert (x4630 x3781))
(assert (x4630 x3336))
(assert (not (= 157198259 (x1211 x4198 1))))
(assert (not (= (+ x2042 3) 1000000000000000000)))
(assert (not (= 18446744073709551615 (x1211 x4799 1))))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x4090 3)))))
(assert (not (= (x1211 x1112 1) (+ x98 1))))
(assert (not (= (+ x2042 3) (x1211 x740 2))))
(assert (= (x2207 x947) (ite (= x947 x3568) 0 (x5843 x947))))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x3755 1) x3836))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x1852 1) x902))))
(assert (= 0 (x3391 x2167)))
(assert (=> (> (+ 10000 1) x1303) (not (= (+ 2 x2042) x1303))))
(assert (not (= (x1211 x310 2) (x1211 x3148 3))))
(assert (=> (< (- x1775 1) 10000) (not (= (+ x3962 1) x1775))))
(assert (not (= (x1211 x2862 1) 157198259)))
(assert (x4630 x5421))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x3414 1)))))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x3836 1) x2758))))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (x1211 x2060 1)))))
(assert (not (= 3939881817 (x1211 x2060 1))))
(assert (=> (< (- x693 1) 10000) (not (= (x406 1) x693))))
(assert (x4630 x4731))
(assert (x4630 x5942))
(assert (x4630 x2169))
(assert (not (= 2743638299 (x1211 x3513 1))))
(assert (not (= (+ 4 x2042) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x1492 true))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x935 1) x2154))))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (+ 3 x1186)))))
(assert (x4630 x1045))
(assert (=> (< (- x5800 1) 10000) (not (= (+ x2042 2) x5800))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x3645 1)))))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 x5421 1)))))
(assert (x4630 x4048))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 274184521717934524641157099916833587231 1)))))
(assert (x4630 x1627))
(assert (=> (< (- x4284 1) 10000) (not (= (x1211 x928 1) x4284))))
(assert (not (= (+ x4054 2) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= x5807 (and x5703 (not x2865))))
(assert (not (= 1 (+ x1186 1))))
(assert (not (= (x1211 x3414 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x1211 x4218 2) (x1211 x1451 1))))
(assert (=> (= (x1211 x361 1) (x1211 x1919 1)) (= x361 x1919)))
(assert (= (=> (and (= x4590 x5619) (= x1256 x312)) x2242) x375))
(assert (not (= 2 (+ x3962 5))))
(assert (= (ite (and x5731 (not x1694) x494) (x181 x5054) (x4892 x5054)) (x1441 x5054)))
(assert (x4630 x3470))
(assert (= x3265 (=> (and (= (x3088 x5642) x1353) (= (> x1353 18446744073709551615) x4004) (= x5642 (x3608 x1015))) (and (=> (and (not x4004) (= (x6031 (+ x5312 x3768)) x4013) (= (uninterp_mod (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2191) (= x3879 (= x1353 0)) (or (and (not x3879) (= (uninterp_mod (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1419) (= (x6031 (+ 192 x2686)) x4563)) x3879) (= (x6031 (+ x2191 32)) x5312)) x738) (=> x4004 x5361)))))
(assert (= x5372 (and x1396 (not x1435))))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x1919 1)))))
(assert (x4630 x863))
(assert (x4630 x1410))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x1849 1) x4063))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 274184521717934524641157099916833587231 1))))
(assert (x4630 x5194))
(assert (= (=> (and (= x1748 128) (= x4778 (x3910 x3511)) (= x268 (= x4778 0))) (and (=> x268 x3198) (=> (not x268) x2481))) x4814))
(assert (x4630 x6093))
(assert (x4630 x1606))
(assert (=> (> (+ 10000 1) x952) (not (= (x1211 x1451 1) x952))))
(assert (x4630 x2759))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x3992 2)))))
(assert (= x5976 (and x4649 x801)))
(assert (= x1913 (=> (and (= (x3088 x3108) x5737) (= x4937 (> x5737 0))) (and (=> (not x4937) x5361) (=> x4937 x138)))))
(assert (not (= (x1211 x5745 1) 18446744073709551615)))
(assert (x4630 x4243))
(assert (x4630 x3674))
(assert (not (= (x1211 x4198 1) 1)))
(assert (x5138 x314 x1380))
(assert (=> (> (+ 10000 1) x3786) (not (= (+ x3962 2) x3786))))
(assert (x4630 x3160))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x1211 x946 1)))))
(assert (x251 x5344 x4272 x3162 x4495))
(assert (=> (< (- x3543 1) 10000) (not (= (+ 2 x4054) x3543))))
(assert (not (= (x1211 x1451 1) 2)))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x946 1) x928))))
(assert (=> (= (x1211 x4198 1) (x1211 x1852 1)) (= x1852 x4198)))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x4198 1)))))
(assert (=> (> (+ 10000 1) x3836) (not (= x3836 (+ x3457 2)))))
(assert (not (= (x1211 x3543 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (= 0 (x4952 x3032)))
(assert (not (= (+ 4 x1186) (+ x3962 1))))
(assert (not (= (x1211 x4198 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (+ x1186 4) (+ x3948 1))))
(assert (not (= (x1211 x4218 2) (x1211 x3576 1))))
(assert (not (= (+ x2042 1) (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x5917 1)))))
(assert (= (and x4406 x4391) x3792))
(assert (= (x1448 x2993) 0))
(assert (x4630 x5162))
(assert (not (= 3 (x1211 x935 1))))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x4284 1) x2845))))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x1956 1) x3836))))
(assert (not (= (+ x2042 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x4799 1) 10000) (not (= (+ 4 x2042) x4799))))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x3645 1) x4284))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ 3 x3962))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x5917 1) x4090))))
(assert (x6051 x704))
(assert (= x3832 (=> (and (= x4306 x5916) (= x1921 x4531)) x2294)))
(assert (=> (< (- x1303 1) 10000) (not (= x1303 (+ x1186 1)))))
(assert (not (= (x1211 x3836 1) 2514000705)))
(assert (not (= (x1211 x182 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= (x1211 x208 1) 826074471)))
(assert (x4630 x378))
(assert (not (= (x1211 x4090 3) (+ 4 x3962))))
(assert (=> (> (+ 10000 1) x5500) (not (= (x1211 x4610 1) x5500))))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x3511) x5991) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x833) (not (= 157198259 x4143)) (= x180 1) (= x4143 404098525) (= x2393 x1382) (< x4143 826074471) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x5401) (= 4 x1382) (not (< x1382 4)) (not (= x4143 117300739)) (>= x833 0) (= x5547 (x3910 274184521717934524641157099916833587206)) (> x5547 0) (= 32 x2062) x5991) x5428) (=> (not x5991) x3210))) x3793))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x4198 1)))))
(assert (x4630 x3148))
(assert (x4630 x4959))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x406 1)))))
(assert (x6051 x3465))
(assert (not (= (+ x5409 1) (x1211 x1112 1))))
(assert (=> (= (x1211 x928 1) (x1211 x5500 1)) (= x5500 x928)))
(assert (not (= (x1211 x740 2) (x1211 x6069 1))))
(assert (=> (< (- x5421 1) 10000) (not (= (+ x1186 4) x5421))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (+ x4054 2)))))
(assert (=> (> (+ 10000 1) x2154) (not (= (+ x2042 3) x2154))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (+ x1186 1))))
(assert (=> (= (x1211 x4610 1) (x1211 x4799 1)) (= x4799 x4610)))
(assert (x4630 x3643))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (+ x3457 2)))))
(assert (x5138 x1642 x4390))
(assert (x4630 x3334))
(assert (=> (= (x1211 x3836 1) (x1211 x3543 1)) (= x3543 x3836)))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (+ x2042 5)))))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x4799 1)))))
(assert (x4630 x443))
(assert (=> (< (- x740 1) 10000) (not (= (x1211 x4610 1) x740))))
(assert (x4630 x1033))
(assert (not (= (+ 1 x2042) (x1211 x928 1))))
(assert (not (= (x1211 x3409 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x1849 1))))
(assert (not (= (x1211 x1919 1) 2)))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x3992 2) x6069))))
(assert (= (=> (= x1316 (= x5239 0)) (and (=> (not x1316) x2953) (=> x1316 x5361))) x17))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x310 2) x5800))))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x935 1) x561))))
(assert (= (ite (and (not x305) x5626 x757) (x4461 x1803) (x4892 x1803)) (x3314 x1803)))
(assert (= x2481 (=> (= (= 274184521717934524641157099916833587206 x3511) x1581) (and (=> x1581 x681) (=> (not x1581) x4550)))))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (+ 1 x98)))))
(assert (not (= (+ x3962 1) (x1211 x310 2))))
(assert (not (= (x1211 x4527 1) 2835717307)))
(assert (= (=> (and (= (uninterp_mod (* x5085 x4637) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2386) (= x2495 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2351))) (= x2351 (- (/ x2386 1000000000000000000) (uninterp_frac x2386 1000000000000000000))) (= (> x4637 x2495) x248)) (and (=> x248 x5361) (=> (not x248) x4255))) x353))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x1451) (not (= (+ 4 x3962) x1451))))
(assert (not (= (+ x3457 2) (x1211 x361 1))))
(assert (not (= (+ x2042 4) (x1211 x4284 1))))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x1451 1) x1775))))
(assert (x4630 x4407))
(assert (not (= (+ 1 x5409) (x1211 x361 1))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (+ x3962 1))))
(assert (= (=> (and (= (= 0 x2401) x2085) (= x2401 (x3910 x3511)) (= 128 x3482)) (and (=> x2085 x3198) (=> (not x2085) x519))) x320))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x1956 1) x928))))
(assert (not (= (x1211 x3513 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x4017 1)))))
(assert (=> (= (x1211 x4799 1) (x1211 x1112 1)) (= x1112 x4799)))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x1852 1) x2549))))
(assert (x4630 x551))
(assert (not (= (x1211 x1919 1) (+ x3962 4))))
(assert (=> (> (+ 10000 1) x2417) (not (= x2417 (+ x2042 5)))))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 x208 1)))))
(assert (= (=> (and (= (x6031 (+ x1875 x3180)) x4617) (= x5938 (x6031 (+ x1696 31))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5938) x3180) (= (or (and (= true (<= x1696 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1696 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1696)) x4580)) (and (=> (not x4580) x2816) (=> x4580 x5361))) x225))
(assert (= 0 (x1448 x3732)))
(assert (not (= (+ 1 x5409) 1)))
(assert (x4630 x3611))
(assert (= (x4905 x3111) (ite (and x3386 (not x61) x2908) (x4012 x3111) (x3791 x3111))))
(assert (= (or (and x1291 x3335) (and x573 x3534)) x2240))
(assert (= (=> (= x1757 (= 274184521717934524641157099916833587202 x3511)) (and (=> (and (= 4 x617) (>= x4558 0) x1757 (not (= 117300739 x136)) (not (< x617 4)) (not (= x136 157198259)) (> 826074471 x136) (= x180 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4558) (= x67 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= 404098525 x136) (= x2062 32) (= x2393 x617) (= x4752 (x3910 274184521717934524641157099916833587202)) (> x4752 0)) x5428) (=> (not x1757) x991))) x3210))
(assert (= x726 (=> (and (= (x3088 x383) x1121) (= (x3608 x1015) x383) (= (= x691 x1121) x183) (= x691 (x3551 x1629))) (and (=> x183 x1046) (=> (not x183) x5361)))))
(assert (x4630 x802))
(assert (not (= (+ 1 x2042) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x182 1)))))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x5745 1) x3645))))
(assert (not (= 117300739 (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (+ 4 x1186)))))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (x1211 x208 1)))))
(assert (=> (= (x1211 x5745 1) (x1211 x935 1)) (= x935 x5745)))
(assert (=> (> (+ 10000 1) x4702) (not (= x4702 (x406 1)))))
(assert (not (= (+ x2042 4) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x935 1) 10000) (not (= x935 (+ x5409 1)))))
(assert (= x801 (and (not x4857) x4705)))
(assert (=> (> (+ 10000 1) x946) (not (= (+ x4054 2) x946))))
(assert (= x1462 (=> (and (= x3732 (x236 x1822)) (= x4871 (x1208 x5492)) (= x5133 (x3208 x1355)) (= (x5474 x3732) x962) (= x4073 (< 0 x962))) (and (=> (not x4073) x3198) (=> x4073 x5042)))))
(assert (= x2157 (and x1285 x3958)))
(assert (not (= 2 (x1211 x5421 1))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x5745 1)))))
(assert (x4630 x1624))
(assert (=> (> (+ 10000 1) x4284) (not (= (x1211 x3992 2) x4284))))
(assert (not (= (x406 1) (x1211 x3409 1))))
(assert (x4630 x3467))
(assert (x4630 x4016))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x946 1)))))
(assert (not (= (x1211 x902 1) 2835717307)))
(assert (not (= (x1211 x3992 2) (x1211 x928 1))))
(assert (not (= 2514000705 (+ 2 x2042))))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x3645 1) x208))))
(assert (not (= (x1211 x3992 2) (+ 1 x3948))))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x310 2) x6037))))
(assert (x5138 x4931 x779))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x1849 1) x4293))))
(assert (=> (< (- x3255 1) 10000) (not (= (x1211 x1849 1) x3255))))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 x4800 1) x3786))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x208 1) x4113))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x3992 2)))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x3414 1) x902))))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (x1211 x6069 1)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x5917 1))))
(assert (not (= (+ x3962 4) (x1211 x4198 1))))
(assert (= (=> (and (= (= x647 (ite x3351 1 0)) x1243) (= x1086 (= 0 x647)) (= x3351 (not x1086)) (= x3857 (x6031 (+ x3005 32))) (= (x3778 x3857) x647)) (and (=> x1243 x1239) (=> (not x1243) x3198))) x5373))
(assert (x4630 x4802))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x1112 1) x1451))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x4090 3)))))
(assert (x263 x6133 x2875))
(assert (x4630 x4006))
(assert (x4630 x5246))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x3148 3) x1598))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x3409 1))))
(assert (= true x2900))
(assert (= (=> (and (= x373 (x6031 (+ 31 x1204))) (= x5060 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1204) (and (= (<= x1204 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1204)))) (= x5417 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x373)) (= x3860 (x6031 (+ x1806 x5417)))) (and (=> (not x5060) x5337) (=> x5060 x5361))) x3416))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x2862 1) x2862))))
(assert (not (= 3 (+ x1186 1))))
(assert (= (=> (and (or (and (= x3005 x5394) (= (x6031 (+ x5394 x131)) x2478) (= x2478 x3193) (= x4560 (x6031 (+ 63 x2888))) (= x411 (x6031 (+ 96 x5906))) (not x716) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4560) x131)) (and (= x3193 x5394) x716 (= x3005 96))) (= x716 (= x2888 0))) x3795) x5048))
(assert (=> (< (- x1467 1) 10000) (not (= (+ 1 x1186) x1467))))
(assert (=> (> (+ 10000 1) x1089) (not (= (x1211 x4799 1) x1089))))
(assert (= x5631 (=> (and (= x1409 (or (> x1198 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1198)) (< x1198 32)))) (= (x6060 x4810) x1198)) (and (=> (not x1409) x903) (=> x1409 x3198)))))
(assert (= x786 (and x1687 (not x430))))
(assert (x4630 x3074))
(assert (not (= (+ 5 x2042) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x493 (and x1084 x2913)))
(assert (not (= (x1211 x182 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x946 1))))
(assert (not (= 826074471 (x1211 x4198 1))))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (x1211 x1852 1)))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x4198 1)))))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (x1211 x4610 1)))))
(assert (not (= (+ 2 x3962) (x1211 x946 1))))
(assert (not (= (x1211 x4799 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x5917 1))))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x4527 1) x310))))
(assert (not (= 404098525 (x1211 x1852 1))))
(assert (=> (< (- x3230 1) 10000) (not (= (+ x5409 1) x3230))))
(assert (=> (> (+ 10000 1) x4218) (not (= (+ 4 x1186) x4218))))
(assert (=> (< (- x1467 1) 10000) (not (= (x1211 x1852 1) x1467))))
(assert (=> (= (x1211 x5917 1) (x1211 x4527 1)) (= x5917 x4527)))
(assert (not (= (+ 4 x98) (+ 2 x3457))))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (x1211 x3836 1)))))
(assert (x4630 x6004))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x4610 1) x4527))))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (x1211 x1919 1)))))
(assert (x4630 x3412))
(assert (x4630 x4521))
(assert (= x2965 (=> (and (= (x3080 x4554) x4266) (= x74 x1218) (= (x3080 274184521717934524641157099916833587231) x5360) (= x31 (and (<= 0 x5360) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4266)))) (and (=> (and (not x31) (= x3506 0) (= 0 x4050)) x363) (=> x31 x4316)))))
(assert (x4630 x2618))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x1919 1) x3755))))
(assert (not (= 404098525 (x406 1))))
(assert (not (= (+ x1186 1) (+ 3 x3962))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x946 1))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (+ 4 x98)))))
(assert (x4630 x5980))
(assert (not (= (x1211 x4198 1) (+ x2042 5))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x4800 1)))))
(assert (=> (> (+ 10000 1) x4284) (not (= (+ x2042 4) x4284))))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x1338))))
(assert (=> (> (+ 10000 1) x3409) (not (= (x1211 x1852 1) x3409))))
(assert (=> (= (x1211 x4799 1) (x1211 x5917 1)) (= x5917 x4799)))
(assert (x4630 x932))
(assert (= (ite (= x1721 x4013) x1970 (x5294 x4013)) (x6105 x4013)))
(assert (=> (< (- x5617 1) 10000) (not (= (+ x3948 1) x5617))))
(assert (=> (> (+ 10000 1) x5500) (not (= (+ 2 x4054) x5500))))
(assert (=> (< (- x902 1) 10000) (not (= x902 (x1211 x3645 1)))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x3148 3) x3992))))
(assert (=> (= (x1211 x3543 1) (x1211 x3645 1)) (= x3645 x3543)))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x4090 3)))))
(assert (= (=> (and (= x4800 x2651) (= (= x4800 x4546) x1215)) (and (=> (not x1215) x227) (=> (and (>= x2076 0) (= 32 x4035) x1215 (= (x1211 x4800 1) x4447) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2076) (= (x2436 x4447) x2076) (= 1 x2420)) x3868))) x934))
(assert (not (= (x1211 x4293 1) 1000000000000000000)))
(assert (not (= (x1211 x3836 1) 274184521717934524641157099916833587231)))
(assert (=> (< (- x1849 1) 10000) (not (= (+ 1 x5409) x1849))))
(assert (x251 x5736 x557 x1534 x3181))
(assert (not (= (+ 4 x98) 404098525)))
(assert (not (= (x1211 x5421 1) (+ x2042 2))))
(assert (x4630 x2852))
(assert (=> (= (x1211 x4799 1) (x1211 x3543 1)) (= x4799 x3543)))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (+ 5 x3962)))))
(assert (= (and (not x2917) x334) x1103))
(assert (= x894 (and (not x3082) x5034)))
(assert (= (=> (= (= x1411 0) x33) (and (=> (not x33) x442) (=> (and x33 (= x5404 0) (= x522 0)) x2109))) x3368))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x5917 1)))))
(assert (x4630 x4545))
(assert (not (= (x1211 x3148 3) (+ 4 x98))))
(assert (= (and x1883 x129) x1022))
(assert (= x1907 (=> (and (= (x3910 x3511) x5101) (= (x6031 (+ x5918 4)) x2103) (= x5449 (= x5101 0)) (= x5128 (x6031 (+ x5918 36)))) (and (=> x5449 x3198) (=> (and (not x5449) (or (and (= x5136 (x1302 274184521717934524641157099916833587231)) (= x3155 x917) (= (x1302 x3511) x5102) x6009 x1841 (= x2126 x3084) x1554 (= (= x5102 (x2539 x3511)) x1554) (> 4294967296 x1951) (= (<= x5136 (x2539 274184521717934524641157099916833587231)) x6009) (= x822 x2180) (= x4349 x1577)) (and (= x822 x833) (not x1841) (= x4558 x1577) (= x2126 x876) (= x2413 x917))) (= x1841 (> x380 0))) x2683)))))
(assert (= (and (not x4944) x1349) x4146))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x5421 1) x5617))))
(assert (not (= (x1211 x4799 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (ite (and x2869 x3512 (not x3708)) (x2104 x2046) (ite (and (not x3512) (not x5704) (not x3708) x2869) (x2037 x2046) (x756 x2046))) (x4732 x2046)))
(assert (=> (< (- x1598 1) 10000) (not (= (x1211 x310 2) x1598))))
(assert (=> (< (- x6037 1) 10000) (not (= (x1211 x3409 1) x6037))))
(assert (x5138 x4644 x154))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x1919 1))))
(assert (x4630 x3563))
(assert (x4630 x1139))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x1956 1) x3576))))
(assert (= x3787 (and (not x5654) x3270)))
(assert (not (= (x1211 x310 2) (x1211 x3576 1))))
(assert (x4630 x3826))
(assert (x4630 x902))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x208 1) x902))))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x3513 1) x3513))))
(assert (not (= (+ 1 x3948) (x1211 x208 1))))
(assert (x4630 x5376))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x3409 1) x4702))))
(assert (x4630 x3839))
(assert (=> (= (x1211 x935 1) (x1211 x2862 1)) (= x935 x2862)))
(assert (x4630 x3026))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x3576 1))))
(assert (x4630 x389))
(assert (x4630 x3752))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x3148 3))))
(assert (=> (< (- x4800 1) 10000) (not (= (+ 3 x98) x4800))))
(assert (not (= 2743638299 (x1211 x1112 1))))
(assert (not (= (x1211 x310 2) (x1211 x3836 1))))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (+ x1186 1)))))
(assert (= (x4160 x481) 0))
(assert (x4630 x1561))
(assert (x4630 x3085))
(assert (= (or x3782 x5469) x2464))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (+ x1186 1)))))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (x1211 x2060 1)))))
(assert (=> (= (x1211 x361 1) (x1211 x902 1)) (= x361 x902)))
(assert (=> (= (x1211 x2862 1) (x1211 x5917 1)) (= x2862 x5917)))
(assert (not (= (x1211 x740 2) (x1211 x4090 3))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (+ x3962 1)))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x2060 1)) (= x2060 274184521717934524641157099916833587231)))
(assert (x4630 x5267))
(assert (x4630 x5492))
(assert (= x4027 (=> (and (= x5505 (> x1808 0)) (= x1808 (x5609 x3537)) (= (x5645 x4997) x3537) (= (x1565 x5710) x2477)) (and (=> (not x5505) x3198) (=> x5505 x3963)))))
(assert (=> (= (x1211 x4610 1) (x1211 x935 1)) (= x935 x4610)))
(assert (x4630 x201))
(assert (=> (< (- x946 1) 10000) (not (= x946 (+ x2042 4)))))
(assert (=> (= (x1211 x1112 1) (x1211 x4284 1)) (= x1112 x4284)))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (x1211 x4090 3)))))
(assert (not (= (+ x2042 3) (+ 2 x4054))))
(assert (not (= (+ 3 x98) (x1211 x5421 1))))
(assert (= (or (and x419 x2145) (and x2754 x4493)) x2068))
(assert (not (= (x1211 x208 1) 2514000705)))
(assert (not (= 2835717307 (x1211 x3645 1))))
(assert (x4630 x2338))
(assert (not (= (x1211 x4610 1) 826074471)))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x2060 1) x6069))))
(assert (x4630 x5422))
(assert (not (= (x1211 x3513 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (= x1672 (and x1937 x457)))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x2060 1)))))
(assert (x399 x3513))
(assert (x4630 x2017))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (+ x3948 1)))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (+ x3962 4)))))
(assert (not (= (x1211 x4527 1) 4168891048)))
(assert (=> (> (+ 10000 1) x1451) (not (= (+ x4054 2) x1451))))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x1919 1) x1849))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (+ 5 x2042)))))
(assert (not (= (x1211 x3645 1) (+ x3457 2))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x1451 1)))))
(assert (=> (= (x1211 x1852 1) (x1211 x1451 1)) (= x1451 x1852)))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x361 1) x6069))))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (x1211 x3992 2)))))
(assert (=> (> (+ 10000 1) x5745) (not (= (+ 3 x3962) x5745))))
(assert (=> (= (x1211 x3513 1) (x1211 x5917 1)) (= x3513 x5917)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 3 x1186))))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x310 2)))))
(assert (=> (< (- x1112 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x1112))))
(assert (x4630 x4107))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x3409 1))))
(assert (x433 x1058 x132))
(assert (=> (< (- x3699 1) 10000) (not (= (+ 2 x3457) x3699))))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x3414 1) x3699))))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (+ 4 x98)))))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x935 1) x5617))))
(assert (x6051 x1588))
(assert (x4630 x1833))
(assert (x4630 x3228))
(assert (=> (< (- x4644 1) 10000) (not (= (+ 1 x3962) x4644))))
(assert (not (= (x1211 x1956 1) 2743638299)))
(assert (x4630 x5305))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x2862 1))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x935 1)))))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (x1211 x5917 1)))))
(assert (=> (= (x1211 x361 1) (x1211 x5917 1)) (= x361 x5917)))
(assert (not (= (x1211 x182 1) (x1211 x3992 2))))
(assert (=> (= (x1211 x4284 1) (x1211 x3836 1)) (= x4284 x3836)))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 x3148 3)))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x3457 2))))
(assert (= x3555 (=> (and (= x538 274184521717934524641157099916833587231) (= (x5347 1461501637330902918203684832716283019655932542975 x4770) x2862) (= (< x5206 x3698) x1195) (= (x1211 274184521717934524641157099916833587231 1) x5782) (= x3698 (x4471 x278)) (= x5206 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x249))) (= x1500 (x3337 (- x1162 x249))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3698) (<= 0 x3698) (= x278 (x1211 x2862 1))) (and (=> (not x1195) x680) (=> x1195 x3905)))))
(assert (x263 x315 x1438))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x1919 1) x1598))))
(assert (=> (< (- x1089 1) 10000) (not (= (+ x2042 5) x1089))))
(assert (not (= (+ x98 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (=> (< (- x4644 1) 10000) (not (= (x1211 x3992 2) x4644))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x1956 1)))))
(assert (=> (< (- x740 1) 10000) (not (= x740 (+ x2042 2)))))
(assert (x6051 x5531))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x928 1)))))
(assert (x399 x1849))
(assert (x4630 x2308))
(assert (x4630 x6078))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (+ x98 3)))))
(assert (= (=> (= (< 0 x2669) x2815) (and (=> x2815 x1703) (=> (not x2815) x5361))) x2118))
(assert (not (= (x1211 x3645 1) (+ 2 x4054))))
(assert (=> (> (+ 10000 1) x3645) (not (= (+ x2042 2) x3645))))
(assert (= x204 (and x1414 x2791)))
(assert (=> (< (- x4293 1) 10000) (not (= (+ x98 1) x4293))))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 x182 1)))))
(assert (= x3810 (=> (= (= 0 x4773) x430) (and (=> x430 x3198) (=> (not x430) x3890)))))
(assert (x4630 x2575))
(assert (not (= (x1211 x1919 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (and x4213 x2709) x5484))
(assert (=> (> (+ 10000 1) x3513) (not (= (+ 4 x1186) x3513))))
(assert (x4630 x4480))
(assert (x4630 x3053))
(assert (=> (< (- x1919 1) 10000) (not (= (x1211 x5917 1) x1919))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (+ 5 x2042)))))
(assert (= (=> (and (= x3768 (x6031 (+ x2686 160))) (= x3094 (x6031 (+ x2385 64))) (= (x3088 x4972) x1093) (= x2122 1) (= (= x5332 x1093) x5431) (= x1015 (x6031 (+ 64 x2686))) (= x5720 (x5347 1461501637330902918203684832716283019655932542975 x264)) (= x4972 (x3608 x1015)) (= x2385 (x6031 (+ x2686 32))) (= x2595 (x6031 (+ x1015 64))) (= x5067 (x1701 x3094)) (= x5332 (x4455 x5067))) (and (=> (not x5431) x5361) (=> x5431 x3265))) x3173))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (+ 4 x98)))))
(assert (not (= (x1211 x3543 1) (x1211 x3148 3))))
(assert (not (= (+ x5409 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x740 2)))))
(assert (=> (= (x1211 x4800 1) (x1211 x3414 1)) (= x3414 x4800)))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x3576 1) x5800))))
(assert (not (= (+ 4 x3962) 1889567281)))
(assert (x4630 x4453))
(assert (x4630 x1806))
(assert (x4630 x2595))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (+ 3 x1186)))))
(assert (= (=> (and (= x1657 x4418) (= x1708 x3274) (= x2160 x4443)) x2008) x3242))
(assert (=> (= (x1211 x1849 1) (x1211 x3645 1)) (= x1849 x3645)))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (x1211 x3513 1)))))
(assert (= (and (not x1521) x900) x1802))
(assert (x4630 x1386))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (x1211 x3836 1)))))
(assert (=> (< (- x3992 1) 10000) (not (= (+ 3 x3962) x3992))))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (+ x1186 1)))))
(assert (= x903 (=> (and (= x4533 (= x3125 (ite x3320 1 0))) (= x4083 (x6031 (+ 32 x4810))) (= (= 0 x3125) x2455) (= x3320 (not x2455)) (= (x3087 x4083) x3125)) (and (=> x4533 x584) (=> (not x4533) x3198)))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x2042 2))))
(assert (x4630 x1910))
(assert (x4630 x5244))
(assert (x4630 x5693))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x5500 1))))
(assert (= x906 (and (not x1480) x4720)))
(assert (=> (< (- x952 1) 10000) (not (= x952 (+ 3 x98)))))
(assert (= (and x625 (not x4913)) x4794))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (x1211 x5917 1)))))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x6069 1) x3699))))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x5745 1) x4610))))
(assert (=> (> (+ 10000 1) x1338) (not (= (+ x2042 5) x1338))))
(assert (=> (< (- x4107 1) 10000) (not (= (+ 5 x3962) x4107))))
(assert (=> (= (x1211 x3755 1) (x1211 x2862 1)) (= x3755 x2862)))
(assert (= (=> (= x4775 (= 274184521717934524641157099916833587202 x1775)) (and (=> x4775 x525) (=> (not x4775) x3821))) x1800))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ 5 x3962))))
(assert (not (= (x1211 x4610 1) (x1211 x4218 2))))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 x4527 1)))))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x4800 1) x3755))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (+ x1186 1)))))
(assert (= (=> (= x53 (= x1305 0)) (and (=> (not x53) x2369) (=> x53 x5361))) x1835))
(assert (=> (< (- x4702 1) 10000) (not (= (x1211 x5500 1) x4702))))
(assert (=> (< (- x3414 1) 10000) (not (= (+ x2042 1) x3414))))
(assert (= x585 (=> (= (= 274184521717934524641157099916833587206 x4063) x6062) (and (=> (not x6062) x3109) (=> x6062 x3993)))))
(assert (x4630 x2966))
(assert (not (= (+ x2042 5) (+ x1186 1))))
(assert (x4630 x3503))
(assert (not (= (+ 2 x4054) (x1211 x1849 1))))
(assert (=> (= (x1211 x1451 1) (x1211 x1956 1)) (= x1956 x1451)))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x4800 1) x3230))))
(assert (x4630 x3864))
(assert (x4630 x5167))
(assert (not (= (+ x98 4) (+ 2 x4054))))
(assert (not (= (+ x98 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= (+ x3948 1) (+ x2042 1))))
(assert (=> (< (- x4799 1) 10000) (not (= (x1211 x361 1) x4799))))
(assert (x4630 x3222))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x1956 1)))))
(assert (x4630 x3766))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (+ 1 x5409)))))
(assert (x4630 x5489))
(assert (not (= (+ x1186 3) (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x946 1) x3576))))
(assert (=> (< (- x83 1) 10000) (not (= (x1211 x4293 1) x83))))
(assert (x5138 x1400 x563))
(assert (x4630 x3776))
(assert (x4630 x3419))
(assert (not (= 1000000000000000000 (x1211 x4527 1))))
(assert (not (= (+ x2042 4) 2514000705)))
(assert (=> (> (+ 10000 1) x4198) (not (= (x1211 x4799 1) x4198))))
(assert (x6051 x5932))
(assert (not (= 1889567281 (+ 1 x3948))))
(assert (=> (= (x1211 x946 1) (x1211 x4799 1)) (= x4799 x946)))
(assert (not (= (x1211 x2060 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x1112 1)))))
(assert (x4630 x3408))
(assert (not (= (x406 1) (x1211 x3992 2))))
(assert (=> (= (x1211 x2862 1) (x1211 x4799 1)) (= x2862 x4799)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x935 1))))
(assert (x4630 x5895))
(assert (= x1246 (=> (and (= (x3725 x3823) x4585) (= x3257 (> x4585 0))) (and (=> x3257 x42) (=> (and (not x3257) (= 0 x5952)) x643)))))
(assert (x4630 x4784))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x2862 1) x1956))))
(assert (not (= (x1211 x935 1) (x1211 x4090 3))))
(assert (not (= (+ x2042 2) (x1211 x4218 2))))
(assert (not (= (+ 1 x2042) 2514000705)))
(assert (= (=> (= (= x492 0) x2623) (and (=> (not x2623) x3841) (=> x2623 x3198))) x3486))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x5500 1) x3414))))
(assert (=> (= (x1211 x5745 1) (x1211 x4284 1)) (= x5745 x4284)))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x4090 3) x1248))))
(assert (=> (> (+ 10000 1) x935) (not (= (x1211 x310 2) x935))))
(assert (not (= (x1211 x4198 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x1211 x4090 3) (x1211 x310 2))))
(assert (x4630 x2864))
(assert (= 0 (x4192 x5896)))
(assert (not (= (+ x98 1) (+ x3962 2))))
(assert (not (= (+ 1 x3962) (+ x2042 3))))
(assert (=> (= (x1211 x5745 1) (x1211 x6069 1)) (= x6069 x5745)))
(assert (x251 x5254 x2712 x3815 x4046))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (x1211 x4610 1)))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (+ x3962 3)))))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x4284 1) x3513))))
(assert (x4630 x3677))
(assert (not (= 157198259 (x1211 x902 1))))
(assert (= x5840 (or (and x629 x4723) (and x1665 x4099))))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x361 1)))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x2060 1)))))
(assert (=> (> (+ 10000 1) x4799) (not (= (+ 2 x4054) x4799))))
(assert (not (= 1 (x1211 x5421 1))))
(assert (not (= (x1211 x4284 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x2862 1)))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (+ x2042 3)))))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (x1211 x4800 1)))))
(assert (x4630 x4015))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x3513 1) x1219))))
(assert (x4630 x5204))
(assert (=> (< (- x1467 1) 10000) (not (= (x1211 x4799 1) x1467))))
(assert (=> (> (+ 10000 1) x3166) (not (= (x1211 x1919 1) x3166))))
(assert (x4630 x2477))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x740 2)))))
(assert (x4630 x2106))
(assert (= x5266 (=> (and (= x2687 x6027) (= x5945 (and x2687 x6090)) (= x3997 x3107) (= x4816 x6090) (= (not x3997) x6027) (= (not x5945) x3612)) x3612)))
(assert (not (= (x1211 x5917 1) (+ x98 4))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x3576 1)))))
(assert (= (and (not x5901) x1611) x4062))
(assert (not (= (x1211 x946 1) (+ 1 x5409))))
(assert (x4630 x4529))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (+ 2 x2042)))))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (x1211 x4610 1)))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x2862 1)))))
(assert (x4630 x3110))
(assert (not (= (x1211 x5421 1) (+ 3 x1186))))
(assert (= x3010 (or (and (not x2395) x4277) x5724)))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x1852 1)))))
(assert (=> (> (+ 10000 1) x3575) (not (= (+ x4054 2) x3575))))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x5745 1) x561))))
(assert (x4630 x5936))
(assert (not (= (x1211 x1956 1) 4168891048)))
(assert (not (= (x1211 x935 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= 4294967296 (x1211 x6069 1))))
(assert (=> (< (- x2417 1) 10000) (not (= (x1211 x740 2) x2417))))
(assert (=> (= (x1211 x4800 1) (x1211 x3836 1)) (= x4800 x3836)))
(assert (= (x6064 x807) (ite (= x6103 x807) x4453 (x3314 x807))))
(assert (x4630 x1947))
(assert (= (=> (and (= x2970 (x5278 x3683)) (= x5873 (= x2452 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (<= x2820 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2820) (= 0 x1971) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2970) (= (+ x1186 3) x3683) (<= 0 x2970) (<= 0 x2820) (= x2820 (x3375 x1186))) (and (=> x5873 x5442) (=> (not x5873) x2739))) x4994))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x4799 1)))))
(assert (=> (> (+ 10000 1) x3755) (not (= (x1211 x4090 3) x3755))))
(assert (= (and x1418 x1097) x2493))
(assert (x4630 x1353))
(assert (= x4684 (=> (and (= x3468 (x6031 (+ 31 x3188))) (= x2047 (or (and (< x3188 32) (= (<= x3188 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3188))) (= x2930 (x6031 (+ x524 x4363))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3468) x524)) (and (=> (not x2047) x5495) (=> x2047 x3198)))))
(assert (not (= (+ x3962 1) (x1211 x5421 1))))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x902 1) x3755))))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x3992 2) x1248))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x4218 2)))))
(assert (x4630 x992))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x946 1)))))
(assert (= (=> (and (= x611 (x5347 x1670 x5919)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4244)) x1310) (= x1670 (ite (not x6029) 1 0)) (= x4282 (uninterp_mod (* 1000000000000000000 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (< x1310 1000000000000000000) 1 0) x5919) (= (= 0 x4244) x6029) (= x2923 (- (/ x4282 x5952) (uninterp_frac x4282 x5952))) (= x3093 (= 0 x611))) (and (=> (not x3093) x3198) (=> (and x3093 (= x3132 (- (/ x4202 x5952) (uninterp_frac x4202 x5952))) (= x1674 x2923) (= x5606 x3132) (= x4202 (uninterp_mod (* x4244 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5315))) x6116))
(assert (= x622 (or (and x4588 (not x2715)) (and x5449 x708) (and x2974 x5600) (and x3895 x4758) (and (not x1243) x1041) (and x2623 x2470) (and x171 x3865) (and x5466 x1636) (and (not x4881) x3944) (and x1511 (not x3093)) (and x5091 x662) (and x3887 (not x273)) (and x3708 x2869) (and x36 x2564) (and x4953 (not x2665)) (and x1245 (not x92)) (and x3723 x2812) (and (not x4651) x5996) (and x6127 (not x5491)) (and x1776 x710) (and x2084 x1882) (and (not x1631) x3114) (and (not x5447) x2419) (and x414 (not x2570)) (and x304 x2837) (and x5487 (not x6128)) (and x694 x4869) (and x2301 (not x89)) (and x1995 x3935) (and x1851 x5053) (and (not x3024) x56) (and x4794 (not x5097)) (and x2404 (not x580)) (and x487 (not x4581)) (and x3967 (not x5675)) (and x4969 x5135) (and (not x156) x5861) (and (not x5965) x4963) (and x3904 (not x5632)) (and x3705 x10) (and x6084 x2633) (and x4699 x3388) (and x3418 x5071) (and x503 (not x3007)) (and x638 x474) (and x4797 x3387) (and x2803 x2741) (and x2157 (not x401)) (and x1468 (not x5920)) (and x2745 x2137) (and x6083 x2772) (and (not x5340) x6065) (and (not x5505) x436) (and x2362 x2085) (and x2482 x909) (and x417 (not x381)) (and (not x990) x4247) (and x1207 x3141) (and x1958 x776) (and x2606 x2237) (and x2884 (not x4533)) (and x1727 x3427) (and x1409 x2183) (and x505 x390) (and x4283 x2113) (and x3572 x2959) (and x3668 x2047) (and x2792 (not x5644)) (and x2917 x334) (and x5158 x1422) (and x2068 x2486) (and x3794 x4234) (and x1620 x4164) (and x4358 (not x4618)) (and (not x4584) x1707) (and (not x5506) x1105) (and (not x2890) x1672) (and (not x3434) x1557) (and x5012 x3616) (and x786 x4397) (and x5921 x1212) (and x3599 x164) (and x3189 (not x3214)) (and x4177 x5203) (and (not x2925) x4181) (and x5176 (not x5343)) (and (not x4099) x1665) (and (not x2929) x2039) (and x651 x294) (and x1599 x2279) (and (not x4299) x1329) (and (not x5931) x4512) (and x4047 x5978) (and x4032 (not x1702)) (and x3324 x3859) (and x3282 x2240) (and x5541 x5445) (and (not x1489) x2770) (and x3531 x4798) (and (not x2558) x5077) (and x2594 x187) (and x477 x2100) (and (not x572) x2181) (and x1522 x1286) (and (not x2791) x1414) (and x769 (not x4357)) (and x3134 x1529) (and x642 x553) (and x3842 (not x1922)) (and x268 x4114) (and x5163 x1643) (and x5592 x2425) (and x63 x5228) (and x3138 x5807) (and (not x3509) x3348) (and x4145 x4103) (and x18 (not x1960)) (and x1694 x494) (and x4913 x625) (and x5352 x226) (and x1810 x2282) (and x4334 x1026) (and x61 x2908) (and x2883 x6014) (and x2479 x5700) (and x4705 x4857) (and x1677 x441) (and x3978 x5552) (and x3480 (not x4751)) (and x93 x3878) (and x3212 x259) (and x3922 (not x677)) (and x1264 x3947) (and x1687 x430) (and x4600 (not x369)) (and x3606 x3779) (and x4078 x1537) (and (not x4335) x4290) (and x4041 x2326) (and x4575 x5689) (and (not x904) x1644) (and x857 x2406) (and x204 x4654) (and x1025 x260) (and x5939 x4673) (and (not x296) x2915) (and x5168 x2710) (and x5104 (not x3715)) (and (not x3692) x3142) (and x913 x1777) (and (not x3958) x1285) (and (not x5438) x621) (and x5441 (not x1271)) (and (not x2639) x4421) (and (not x4073) x3168) (and x2750 x3819) (and x4683 x3672) (and x3722 (not x6146)) (and x4556 x5750) (and x107 x160) (and x1106 x4275) (and x1785 x3565) (and x911 (not x4624)) (and x234 x322) (and x4518 x3355) (and (not x3514) x1927) (and x1890 x4939) (and x5553 x5408))))
(assert (= x4588 (or (and x457 (not x1937)) (and x3007 x503))))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 x4017 1) x3786))))
(assert (= (=> (and (= x2121 (= x1919 x1071)) (= x2399 x1919)) (and (=> (not x2121) x2857) (=> (and (= x2943 (x2776 x5611)) (<= x2943 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1036 32) (= x5611 (x1211 x1919 1)) (= 1 x657) x2121 (>= x2943 0)) x5752))) x5107))
(assert (=> (> (+ 10000 1) x4400) (not (= (+ x2042 5) x4400))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x4198 1)))))
(assert (=> (< (- x4554 1) 10000) (not (= (+ 4 x2042) x4554))))
(assert (not (= (+ x3962 2) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (not (= (x1211 x4293 1) 4294967296)))
(assert (=> (> (+ 10000 1) x1852) (not (= (x1211 x1956 1) x1852))))
(assert (x4630 x1348))
(assert (x5138 x3970 x2267))
(assert (x4630 x2386))
(assert (not (= (x1211 x208 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (+ x98 4) (x1211 x361 1))))
(assert (=> (= (x1211 x1112 1) (x1211 x3576 1)) (= x1112 x3576)))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x406 1)))))
(assert (not (= 4294967296 (+ x98 3))))
(assert (=> (< (- x935 1) 10000) (not (= x935 (+ x3962 1)))))
(assert (not (= (+ 4 x2042) (x1211 x1919 1))))
(assert (not (= (+ 1 x3962) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (+ 5 x2042)))))
(assert (not (= (+ x98 1) 1000000000000000000)))
(assert (x4630 x1429))
(assert (= (or x2856 (and x5484 x3646)) x1579))
(assert (not (= 117300739 (+ x2042 2))))
(assert (not (= (+ 3 x2042) (x1211 x5500 1))))
(assert (x4630 x3657))
(assert (not (= (x1211 x4527 1) (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x361 1)))))
(assert (x4630 x3853))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (+ 3 x1186)))))
(assert (=> (> (+ 10000 1) x4218) (not (= (x1211 x2862 1) x4218))))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (x1211 x5917 1)))))
(assert (x4630 x1822))
(assert (x4630 x4304))
(assert (= x390 (and x2570 x414)))
(assert (not (= (x1211 x4218 2) 2)))
(assert (x4630 x741))
(assert (not (= (+ x98 1) (x1211 x5917 1))))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x3576 1)))))
(assert (= (=> (and (= x4698 (x3036 x3942)) (= (= 0 x4698) x1079)) (and (=> (not x1079) x3640) (=> (and x1079 (= x5389 0) (= x246 x4842)) x5514))) x3332))
(assert (x4630 x881))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (+ 1 x3948)))))
(assert (x4630 x1792))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x928 1))))
(assert (not (= 2514000705 (x406 1))))
(assert (not (= (x1211 x1919 1) (+ 3 x98))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x4527 1)))))
(assert (=> (> (+ 10000 1) x5917) (not (= (+ 1 x5409) x5917))))
(assert (not (= (x1211 x4799 1) (+ 5 x3962))))
(assert (not (= (x1211 x1451 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x1852 1) x561))))
(assert (= x6125 (and (not x4408) x4344)))
(assert (not (= 2835717307 (x1211 x4610 1))))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x3148 3)))))
(assert (not (= (x1211 x5745 1) 826074471)))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (x1211 x310 2)))))
(assert (not (= (+ x2042 2) (x1211 x3513 1))))
(assert (x4630 x6170))
(assert (= (and x2596 (not x5279)) x6057))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x4284 1)))))
(assert (=> (< (- x4218 1) 10000) (not (= (+ 3 x98) x4218))))
(assert (not (= 404098525 (+ 5 x2042))))
(assert (=> (< (- x4799 1) 10000) (not (= (x1211 x182 1) x4799))))
(assert (x4630 x2746))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x3755 1)))))
(assert (x4630 x3979))
(assert (= x1552 (=> (and (= (< 0 x2970) x3169) (= (uninterp_mod (* x2452 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4016)) (and (=> (and x3169 (= x4917 (- (/ x4016 x2970) (uninterp_frac x4016 x2970))) (= x5597 x4917)) x5955) (=> (not x3169) x5361)))))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (x1211 x4293 1)))))
(assert (not (= (+ x98 3) (+ 1 x3948))))
(assert (=> (= (x1211 x3576 1) (x1211 x208 1)) (= x208 x3576)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x740 2))))
(assert (= x4095 true))
(assert (x4630 x3786))
(assert (not (= (x1211 x310 2) (+ 4 x1186))))
(assert (x4630 x2471))
(assert (not (= (x1211 x3836 1) 157198259)))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x208 1) x6069))))
(assert (not (= (x1211 x208 1) 2743638299)))
(assert (x6051 x2845))
(assert (=> (> (+ 10000 1) x3575) (not (= (+ x3962 3) x3575))))
(assert (= (and x3226 (not x112)) x4607))
(assert (not (= (+ 4 x1186) (x1211 x4218 2))))
(assert (x4630 x4972))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (+ 5 x2042)))))
(assert (not (= (+ 1 x3948) 3939881817)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x1112 1))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x2060 1)))))
(assert (= (x5618 x929) 0))
(assert (=> (= (x1211 x4799 1) (x1211 x4527 1)) (= x4527 x4799)))
(assert (=> (> (+ 10000 1) x3992) (not (= (+ 1 x5409) x3992))))
(assert (not (= (x1211 x740 2) (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x6069 1) x3230))))
(assert (x4630 x4429))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x902 1) x740))))
(assert (=> (= (x1211 x5917 1) (x1211 x946 1)) (= x5917 x946)))
(assert (not (= (x1211 x1852 1) (x1211 x3148 3))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x4800 1))))
(assert (not (= (x1211 x4527 1) (+ 5 x3962))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (+ 4 x1186)))))
(assert (not (= 2743638299 (x1211 x5500 1))))
(assert (not (= (x1211 x3148 3) 274184521717934524641157099916833587206)))
(assert (x4630 x3349))
(assert (=> (> (+ 10000 1) x935) (not (= x935 (x1211 x6069 1)))))
(assert (not (= (x1211 x6069 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x1849 1)))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x4800 1))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x3755 1)))))
(assert (not (= (+ x3948 1) (x1211 x3755 1))))
(assert (x6051 x5709))
(assert (not (= (x1211 x928 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (< (- x1303 1) 10000) (not (= (+ 4 x3962) x1303))))
(assert (not (= (+ x3962 2) (x1211 x740 2))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (+ x1186 3))))
(assert (not (= (+ x5409 1) (x1211 x4800 1))))
(assert (x4630 x4839))
(assert (=> (> (+ 10000 1) x2154) (not (= x2154 (x1211 x928 1)))))
(assert (=> (= (x1211 x208 1) (x1211 x935 1)) (= x935 x208)))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (+ x4054 2)))))
(assert (=> (> (+ 10000 1) x4702) (not (= (+ 3 x3962) x4702))))
(assert (= x4628 (or (and x5825 x3906) (and x908 x2907) (and x5666 x5677) (and x1679 (not x3966)) (and x5241 x979) (and x5521 x2065))))
(assert (=> (> (+ 10000 1) x3699) (not (= (+ x2042 2) x3699))))
(assert (x263 x686 x4872))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x208 1)))))
(assert (=> (> (+ 10000 1) x3575) (not (= (x1211 x4527 1) x3575))))
(assert (= x5507 (=> (and (= x94 (not x1641)) (= (= x2669 0) x1641) (= (x6031 (+ x5563 32)) x4430) (= (x2466 x4430) x2669) (= x6119 (= (ite x94 1 0) x2669))) (and (=> (not x6119) x5361) (=> x6119 x2118)))))
(assert (x4630 x5067))
(assert (= (x861 x5461) 0))
(assert (=> (< (- x1338 1) 10000) (not (= (+ 4 x1186) x1338))))
(assert (=> (< (- x6037 1) 10000) (not (= (x1211 x1852 1) x6037))))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (x1211 x4799 1)))))
(assert (=> (= (x1211 x2862 1) (x1211 x4293 1)) (= x2862 x4293)))
(assert (= (and x4417 (not x1614)) x2074))
(assert (=> (= (x1211 x5745 1) (x1211 x4293 1)) (= x4293 x5745)))
(assert (=> (= (x1211 x1451 1) (x1211 x902 1)) (= x902 x1451)))
(assert (= x1987 (=> (and (= x2886 0) (= x379 x5757)) x3105)))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x2862 1)))))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x3409 1) x3979))))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (+ x2042 1)))))
(assert (= (x1788 x5869) (ite (and x3879 (not x4004) x3327) (x2110 x5869) (x5379 x5869))))
(assert (x4630 x1071))
(assert (not (= (+ x2042 4) (x1211 x4017 1))))
(assert (not (= (x1211 x4799 1) (+ x1186 3))))
(assert (=> (= (x1211 x2060 1) (x1211 x2862 1)) (= x2060 x2862)))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x3576 1)))))
(assert (x4630 x4273))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x3962 2))))
(assert (=> (> (+ 10000 1) x3575) (not (= (x1211 x928 1) x3575))))
(assert (=> (< (- x4017 1) 10000) (not (= (+ x3457 2) x4017))))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (x1211 x3755 1)))))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (+ x3962 2)))))
(assert (not (= (x1211 x2060 1) 2514000705)))
(assert (not (= (x1211 x4090 3) (x1211 x1112 1))))
(assert (x4630 x3304))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x6069 1))))
(assert (not (= 2743638299 (+ x1186 3))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x3414 1)))))
(assert (not (= (+ x1186 1) (x1211 x3543 1))))
(assert (x4630 x4121))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x1451 1) x1303))))
(assert (x4630 x5733))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (+ 2 x3457)))))
(assert (= (=> (= x4616 (= x1972 0)) (and (=> (not x4616) x2711) (=> x4616 x5361))) x2364))
(assert (x4630 x2495))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x5745 1)))))
(assert (x4630 x2186))
(assert (not (= (x1211 x6069 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (=> (and (= 0 x3224) (= x4311 x5862)) x815) x2607))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x3409 1)))))
(assert (x4630 x3917))
(assert (= (and (not x2689) x4956) x4785))
(assert (=> (< (- x2417 1) 10000) (not (= (x1211 x361 1) x2417))))
(assert (x4630 x4795))
(assert (not (= (+ 3 x3962) (+ x3962 1))))
(assert (=> (< (- x1219 1) 10000) (not (= x1219 (+ 4 x1186)))))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x946 1) x4400))))
(assert (not (= 1889567281 (+ 2 x3457))))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x5917 1)))))
(assert (not (= 404098525 (x1211 x4527 1))))
(assert (= (=> (and (= x990 (> x4736 0)) (= x4736 (x244 x2159))) (and (=> x990 x23) (=> (not x990) x3198))) x2840))
(assert (not (= (+ x2042 4) (x1211 x740 2))))
(assert (not (= (x1211 x4799 1) (+ x2042 2))))
(assert (x4630 x3453))
(assert (= (=> (and (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1988) true) (< x1988 32)) (> x1988 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x747) (= x1966 (x6031 (+ 31 x1988))) (= x3942 (x6031 (+ x5396 x1942))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1966) x5396)) (and (=> (not x747) x2206) (=> x747 x5361))) x5670))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ 1 x3962) x4113))))
(assert (=> (> (+ 10000 1) x4090) (not (= (x1211 x4800 1) x4090))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (x1211 x3409 1)))))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x3513 1) x4400))))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x4527 1)))))
(assert (x6051 x1114))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (+ x98 3)))))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x1112 1) x310))))
(assert (=> (< (- x6069 1) 10000) (not (= (+ 1 x98) x6069))))
(assert (not (= (x1211 x182 1) 274184521717934524641157099916833587231)))
(assert (x4630 x2923))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x4800 1)))))
(assert (x4630 x5181))
(assert (not (= (x1211 x4090 3) (x1211 x5745 1))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (+ 3 x2042)))))
(assert (=> (< (- x2601 1) 10000) (not (= (x1211 x2060 1) x2601))))
(assert (not (= (+ x3948 1) (x1211 x310 2))))
(assert (x4630 x4866))
(assert (= (=> (= x3529 (= 274184521717934524641157099916833587206 x2820)) (and (=> x3529 x4583) (=> (not x3529) x4742))) x2036))
(assert (= (ite (= x5782 x4233) x1500 (x4115 x4233)) (x4471 x4233)))
(assert (x4630 x2046))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x361 1)))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (+ 3 x98)))))
(assert (=> (< (- x4554 1) 10000) (not (= x4554 (+ 3 x3962)))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x3755 1)))))
(assert (x4630 x5767))
(assert (x4630 x2649))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x5421 1)))))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (x1211 x4610 1)))))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x3148 3) x2758))))
(assert (not (= 826074471 (+ x98 4))))
(assert (not (= (x1211 x4800 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= 18446744073709551615 (x1211 x3576 1))))
(assert (x4630 x2887))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x4293 1)))))
(assert (=> (> (+ 10000 1) x1089) (not (= (+ 1 x5409) x1089))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x5917 1))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (+ x2042 5)))))
(assert (not (= 1 (x1211 x3414 1))))
(assert (not (= (x1211 x3409 1) (+ x2042 5))))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x1849 1)))))
(assert (= (x1448 x301) 0))
(assert (not (= (x1211 x208 1) (x1211 x4218 2))))
(assert (not (= 3 (x1211 x6069 1))))
(assert (= x5927 (or x3312 (and x4322 x2920))))
(assert (= 0 (x861 x1888)))
(assert (not (= 1000000000000000000 (x1211 x1451 1))))
(assert (=> (> (+ 10000 1) x2601) (not (= (+ x3962 4) x2601))))
(assert (x4630 x37))
(assert (x4630 x5985))
(assert (not (= (x1211 x4527 1) 18446744073709551615)))
(assert (=> (< (- x3513 1) 10000) (not (= (+ 1 x5409) x3513))))
(assert (=> (< (- x2845 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x2845))))
(assert (=> (> (+ 10000 1) x3786) (not (= (+ x4054 2) x3786))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ x98 1))))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x361 1)))))
(assert (= x4826 (=> (and (= (x5474 x2958) x5063) (= (< 18446744073709551615 x5063) x61)) (and (=> x61 x3198) (=> (and (= x2209 (x6031 (+ x1928 32))) (= (x6031 (+ x2209 x3823)) x5082) (or (and (not x3386) (= x2033 (uninterp_mod (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x6130 (x6031 (+ 32 x3823)))) x3386) (= x3386 (= 0 x5063)) (not x61) (= (uninterp_mod (* 32 x5063) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1928)) x5728)))))
(assert (x4630 x5712))
(assert (=> (> (+ 10000 1) x2549) (not (= (+ x3962 2) x2549))))
(assert (x4630 x4113))
(assert (x4630 x5607))
(assert (=> (< (- x182 1) 10000) (not (= x182 (+ x3457 2)))))
(assert (not (= (x1211 x1849 1) 157198259)))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x4218 2)))))
(assert (x4630 x2527))
(assert (x4630 x648))
(assert (not (= (+ x3962 5) 2835717307)))
(assert (=> (< (- x3645 1) 10000) (not (= (+ 2 x3457) x3645))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x4284 1)))))
(assert (not (= (x1211 x4218 2) (x1211 x182 1))))
(assert (x251 x1073 x4352 x5828 x1945))
(assert (x4630 x653))
(assert (not (= 157198259 (x1211 x5745 1))))
(assert (=> (> (+ 10000 1) x6069) (not (= x6069 (x1211 x935 1)))))
(assert (= x110 (and x4605 (not x1581))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x902 1)))))
(assert (= (and x1124 (not x4976)) x4344))
(assert (not (= (+ x3948 1) (+ x98 1))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x1112 1)))))
(assert (x4630 x5841))
(assert (= x4758 (and x572 x2181)))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x1849 1) x1248))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x3836 1)))))
(assert (not (= (+ 3 x2042) (x1211 x4800 1))))
(assert (not (= (x1211 x1112 1) 826074471)))
(assert (x4630 x1505))
(assert (x4630 x4638))
(assert (x4630 x3671))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (+ 2 x4054)))))
(assert (x4630 x2841))
(assert (=> (> (+ 10000 1) x2549) (not (= x2549 (x1211 x3409 1)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ x2042 2))))
(assert (not (= (x1211 x3409 1) (+ 2 x3962))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x208 1))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x1849 1)))))
(assert (not (= (+ 3 x2042) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (x1211 x4293 1) 404098525)))
(assert (x4630 x3454))
(assert (not (= (x1211 x928 1) (+ 3 x1186))))
(assert (= (=> (= (= 0 x1813) x4699) (and (=> (not x4699) x1717) (=> x4699 x3198))) x1838))
(assert (not (= (x1211 x1956 1) (+ x2042 4))))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x5917 1)))))
(assert (=> (< (- x5617 1) 10000) (not (= (x406 1) x5617))))
(assert (= x780 (=> (and (= x3353 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3078) (and (= (<= x3078 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3078 32)))) (= (x6031 (+ x3078 31)) x2671) (= x6094 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2671)) (= x4310 (x6031 (+ x6094 128)))) (and (=> (not x3353) x5852) (=> x3353 x5361)))))
(assert (x4630 x81))
(assert (=> (> (+ 10000 1) x1598) (not (= (x1211 x3576 1) x1598))))
(assert (not (= 274184521717934524641157099916833587231 (+ 1 x3962))))
(assert (not (= (+ x98 4) (x1211 x935 1))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x1919 1) x3992))))
(assert (not (= (+ 1 x2042) 18446744073709551615)))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x3409 1)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x3645 1))))
(assert (=> (= (x1211 x2060 1) (x1211 x4799 1)) (= x4799 x2060)))
(assert (=> (> (+ 10000 1) x5421) (not (= (+ x2042 4) x5421))))
(assert (= x912 (and (not x1154) x676)))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x4799 1)))))
(assert (x4630 x1860))
(assert (not (= (+ 2 x4054) 3)))
(assert (= (=> (= x3364 (= 0 x398)) (and (=> (not x3364) x4492) (=> x3364 x5361))) x1567))
(assert (=> (> (+ 10000 1) x928) (not (= x928 (x1211 x4090 3)))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x4017 1) x3992))))
(assert (x4630 x935))
(assert (x399 x98))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x1849 1)))))
(assert (x4630 x178))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (+ 5 x3962)))))
(assert (not (= 117300739 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (= (x1211 x4017 1) (x1211 x208 1)) (= x208 x4017)))
(assert (not (= (+ x2042 3) 2514000705)))
(assert (x4630 x3150))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x935 1) x5500))))
(assert (x4630 x3494))
(assert (not (= (+ x98 4) 1889567281)))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x4198 1) x4113))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x3409 1)))))
(assert (x4630 x4995))
(assert (x6051 x4178))
(assert (x4630 x3914))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x1112 1)))))
(assert (x4630 x1061))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x740 2)))))
(assert (not (= (x1211 x4799 1) (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (x1211 x4527 1)))))
(assert (not (= 826074471 (x406 1))))
(assert (=> (= (x1211 x5500 1) (x1211 x2060 1)) (= x2060 x5500)))
(assert (not (= (x1211 x3992 2) (x1211 x3513 1))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x3755 1)))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x4799 1)))))
(assert (=> (< (- x4017 1) 10000) (not (= (+ x3962 5) x4017))))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x310 2) x1089))))
(assert (=> (> (+ 10000 1) x361) (not (= (x406 1) x361))))
(assert (not (= (x1211 x5500 1) (+ 2 x3962))))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x4218 2) x3513))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x4017 1)))))
(assert (= (=> (and (= (ite (< x211 x3339) 1 0) x2875) (= x4881 (= x3886 0)) (= x6133 (ite (not x1761) 1 0)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2097)) x211) (= x1761 (= 0 x2097)) (= x3886 (x5347 x6133 x2875))) (and (=> (not x4881) x3198) (=> x4881 x852))) x2541))
(assert (= (and x3966 x1679) x5825))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x182 1) x2601))))
(assert (not (= (x1211 x4284 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x4610 1)))))
(assert (not (= (x1211 x3409 1) (+ x1186 4))))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x3576 1) x182))))
(assert (not (= (x1211 x310 2) (x1211 x5500 1))))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 x4293 1)))))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (+ x5409 1)))))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x3148 3) x2417))))
(assert (= x3878 x590))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x182 1) x1248))))
(assert (= x1269 true))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x1852 1)))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (x1211 x5917 1)))))
(assert (not (= (+ x3962 3) 2514000705)))
(assert (not (= (x1211 x182 1) (+ 2 x3962))))
(assert (=> (< (- x1248 1) 10000) (not (= (+ 1 x5409) x1248))))
(assert (not (= (+ 3 x2042) (+ x3962 5))))
(assert (not (= (x1211 x5500 1) (+ x3962 3))))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x3511) (not (= (x1211 x3148 3) x3511))))
(assert (not (= 1889567281 (x1211 x5421 1))))
(assert (= (and x1065 x980) x1465))
(assert (= x5592 (and (not x3282) x2240)))
(assert (x4630 x2952))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x5917 1)))))
(assert (= (ite (and x1841 x708 (not x5449)) (x2826 x5303) (x3247 x5303)) (x3167 x5303)))
(assert (x4630 x4810))
(assert (x4630 x4376))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (+ x3457 2)))))
(assert (not (= (+ 3 x98) 2514000705)))
(assert (x4630 x4519))
(assert (= (=> (and (= x4890 0) (= x6170 x6138)) x1734) x3915))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (+ 5 x2042)))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (+ x3962 5)))))
(assert (=> (< (- x3786 1) 10000) (not (= (+ x2042 2) x3786))))
(assert (not (= (+ 1 x98) (x1211 x4284 1))))
(assert (not (= (+ x98 3) (x1211 x6069 1))))
(assert (x4630 x3695))
(assert (= x1665 (and x2925 x4181)))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 x3513 1)))))
(assert (=> (= (x1211 x902 1) (x1211 x1852 1)) (= x1852 x902)))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (+ x2042 2)))))
(assert (not (= (+ x1186 3) (x1211 x3543 1))))
(assert (not (= (x1211 x1451 1) 1)))
(assert (=> (< (- x2820 1) 10000) (not (= (x1211 x3576 1) x2820))))
(assert (=> (= (x1211 x182 1) (x1211 x1849 1)) (= x1849 x182)))
(assert (x6051 x1438))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 x2862 1) x3786))))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x5917 1) x3576))))
(assert (not (= (x1211 x4017 1) (+ 2 x2042))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (+ x98 3)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x2042 2))))
(assert (x4630 x1038))
(assert (=> (> (+ 10000 1) x1219) (not (= (+ 3 x3962) x1219))))
(assert (x4630 x1720))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (+ 4 x2042)))))
(assert (not (= 404098525 (x1211 x946 1))))
(assert (x4630 x3151))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (+ 2 x4054)))))
(assert (not (= 404098525 (x1211 x3836 1))))
(assert (x4630 x1160))
(assert (=> (< (- x952 1) 10000) (not (= (+ x2042 3) x952))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (+ x3457 2)))))
(assert (not (= (x1211 x208 1) 274184521717934524641157099916833587231)))
(assert (x4630 x2789))
(assert (= x5562 (=> (and (= x164 (> 0 x4294)) (= x4294 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3749))) (= (uninterp_mod (* x2569 x5035) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2315) (= x3749 (- (/ x2315 1000000000000000000) (uninterp_frac x2315 1000000000000000000)))) (and (=> x164 x3198) (=> (and (= (x5474 x301) x1817) (not x3685) (not x164) (= x2308 x3749) (= (> x1817 1) x3685) (= x4244 x2308)) x854)))))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (+ x98 1)))))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x5745 1) x3230))))
(assert (not (= (x1211 x5745 1) 1000000000000000000)))
(assert (= 0 (x4192 x956)))
(assert (x6051 255))
(assert (not (= (+ x98 3) (x1211 x3836 1))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x1451 1) x5500))))
(assert (x4630 x117))
(assert (=> (= (x1211 x4800 1) (x1211 x3645 1)) (= x3645 x4800)))
(assert (=> (< (- x3148 1) 10000) (not (= (x1211 x4090 3) x3148))))
(assert (= x4117 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4639) (>= x4639 0) (= x4645 x5814) (= (> x3783 x4639) x3906) (= (x88 x106) x4639) (= 274184521717934524641157099916833587231 x2415) (= x106 (x1211 274184521717934524641157099916833587231 1))) (and (=> x3906 x4655) (=> (not x3906) x4526)))))
(assert (= x3299 (or x4962 (and x3101 x732))))
(assert (x4630 x5808))
(assert (x4630 x448))
(assert (= (=> (and (= 0 x2069) (= x1 x6170)) x4432) x1990))
(assert (not (= (x1211 x4198 1) (x1211 x4090 3))))
(assert (x399 x6037))
(assert (x4630 x411))
(assert (=> (= (x1211 x1112 1) (x1211 x1451 1)) (= x1112 x1451)))
(assert (not (= (+ x98 3) (+ 2 x2042))))
(assert (= x4741 (=> (and (= (> x3751 0) x55) (= x4121 (uninterp_mod (* x2897 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and x55 (= x2461 (- (/ x4121 x3751) (uninterp_frac x4121 x3751))) (= x2461 x5602)) x2879) (=> (not x55) x5361)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x361 1))))
(assert (not (= (x1211 x1919 1) 117300739)))
(assert (=> (> (+ 10000 1) x5745) (not (= (+ 1 x3948) x5745))))
(assert (= (ite (and x3235 (not x4813) x3830) (x4236 x333) (x3247 x333)) (x4002 x333)))
(assert (not (= (+ x1186 3) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (x1211 x5917 1)))))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x3414 1) x952))))
(assert (=> (= (x1211 x361 1) (x1211 x4527 1)) (= x361 x4527)))
(assert (not (= 2743638299 (+ 2 x3962))))
(assert (x4630 x1401))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x361 1) x1467))))
(assert (not (= (+ 2 x4054) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= (+ x98 3) (x1211 x902 1))))
(assert (=> (> (+ 10000 1) x2060) (not (= (+ 3 x3962) x2060))))
(assert (x6051 x2793))
(assert (= x1884 (and x1566 x6062)))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (x1211 x5745 1)))))
(assert (=> (= (x1211 x6069 1) (x1211 x2060 1)) (= x2060 x6069)))
(assert (x4630 x998))
(assert (x4630 x4463))
(assert (not (= (+ 1 x3962) (+ 2 x3962))))
(assert (not (= (+ x1186 4) (x1211 x1849 1))))
(assert (x4630 x4678))
(assert (not (= 4294967296 (x1211 x1956 1))))
(assert (x4630 x5016))
(assert (not (= (+ x3962 3) (x1211 x310 2))))
(assert (not (= 404098525 (x1211 x935 1))))
(assert (= x4053 (and x3831 (not x468))))
(assert (=> (< (- x3148 1) 10000) (not (= (+ 1 x5409) x3148))))
(assert (=> (= (x1211 x935 1) (x1211 x3836 1)) (= x935 x3836)))
(assert (x4630 x5128))
(assert (not (= 4294967296 (x1211 x3513 1))))
(assert (=> (= (x1211 x3513 1) (x1211 x4527 1)) (= x4527 x3513)))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (+ 1 x3962)))))
(assert (x4630 x6037))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (x1211 x4017 1)))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x310 2))))
(assert (= x84 (=> (and (= x3331 (x3843 x3005)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3331) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3331) true) (> 32 x3331))) x1785)) (and (=> x1785 x3198) (=> (not x1785) x5373)))))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 x3645 1) x1338))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x3414 1))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (x1211 x2862 1)))))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (+ 4 x98)))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (x1211 x928 1)))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (+ 2 x4054)))))
(assert (=> (= (x1211 x2060 1) (x1211 x4527 1)) (= x4527 x2060)))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (x1211 x3755 1)))))
(assert (=> (< (- x3979 1) 10000) (not (= (x1211 x1956 1) x3979))))
(assert (not (= (+ x1186 4) (+ 1 x2042))))
(assert (not (= (x1211 x4218 2) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (x1211 x2862 1)))))
(assert (x4630 x3619))
(assert (x4630 x2393))
(assert (x4630 x140))
(assert (x4630 x5826))
(assert (not (= (x1211 x3513 1) (+ 1 x3962))))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (x1211 x4610 1)))))
(assert (=> (< (- x3645 1) 10000) (not (= (+ 1 x98) x3645))))
(assert (not (= (x1211 x4090 3) (+ x3948 1))))
(assert (x4630 x2723))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x3543 1)))))
(assert (not (= (x1211 x4610 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (+ 3 x2042)))))
(assert (=> (< (- x928 1) 10000) (not (= x928 (+ x3962 5)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x5745 1))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (+ 2 x2042)))))
(assert (not (= (+ 4 x1186) (x1211 x4799 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x4284 1))))
(assert (=> (> (+ 10000 1) x361) (not (= (+ x2042 4) x361))))
(assert (=> (< (- x2549 1) 10000) (not (= (x1211 x310 2) x2549))))
(assert (= (=> (and (= (= x4644 x4148) x4955) (= x4644 (x5032 x5980)) (= (x5347 1461501637330902918203684832716283019655932542975 x4644) x4148)) (and (=> (not x4955) x5361) (=> x4955 x5402))) x5604))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x5917 1)))))
(assert (x4630 x5816))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x4800 1) x561))))
(assert (not (= (x1211 x4218 2) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x4218 2) x902))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x902 1) x1451))))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x5500 1) x310))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x4527 1)))))
(assert (x4630 x2421))
(assert (not (= (+ x3948 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= x1623 (and x1566 (not x6062))))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x1211 x1852 1)))))
(assert (not (= 2 (x1211 x361 1))))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x3755 1)))))
(assert (x263 x2124 x2019))
(assert (not (= (+ x1186 1) (+ 2 x3457))))
(assert (x4630 x4652))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x1852 1))))
(assert (not (= (x1211 x3414 1) 826074471)))
(assert (=> (< (- x5917 1) 10000) (not (= (x1211 x1451 1) x5917))))
(assert (=> (> (+ 10000 1) x2417) (not (= (+ 1 x1186) x2417))))
(assert (x4630 x6097))
(assert (x4630 x3061))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x1849 1)))))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x208 1)))))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x4527 1) x5421))))
(assert (=> (> (+ 10000 1) x740) (not (= (+ 3 x98) x740))))
(assert (=> (< (- x182 1) 10000) (not (= (x406 1) x182))))
(assert (=> (= (x1211 x928 1) (x1211 x5917 1)) (= x5917 x928)))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x6069 1)))))
(assert (= (=> (and (= (x5953 x5267) x6132) (= (> x6132 0) x5010)) (and (=> (and (= 0 x458) (not x5010)) x1900) (=> x5010 x2304))) x2333))
(assert (=> (< (- x4017 1) 10000) (not (= (x1211 x2060 1) x4017))))
(assert (x4630 x5563))
(assert (=> (< (- x4644 1) 10000) (not (= (+ 5 x2042) x4644))))
(assert (= x1384 (and x5763 x963)))
(assert (x4630 x4766))
(assert (not (= (x1211 x4527 1) (x1211 x4090 3))))
(assert (not (= (x1211 x4799 1) (+ x2042 1))))
(assert (=> (< (- x3409 1) 10000) (not (= (x1211 x3148 3) x3409))))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (+ x98 4)))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (+ x98 3))))
(assert (not (= (x1211 x3414 1) 117300739)))
(assert (x4630 x310))
(assert (= (ite (and (not x2113) x4283 x2973) (x3609 x5263) (x4846 x5263)) (x2055 x5263)))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x5745 1) x6069))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x4218 2))))
(assert (not (= 274184521717934524641157099916833587202 (+ 4 x98))))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x4198 1)))))
(assert (x4630 x809))
(assert (x4630 x3802))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x4017 1)))))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x5500 1) x4800))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x406 1) x3771))))
(assert (=> (> (+ 10000 1) x3979) (not (= x3979 (+ x3457 2)))))
(assert (= (and (not x2623) x2470) x4575))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x4293 1) x2862))))
(assert (not (= 157198259 (+ 4 x1186))))
(assert (x4630 x658))
(assert (=> (< (- x3755 1) 10000) (not (= x3755 (+ 3 x2042)))))
(assert (=> (= (+ 2 x4054) (+ 2 x3457)) (= x3148 x4090)))
(assert (not (= (+ 4 x3962) (x1211 x4284 1))))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x928 1)))))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (x1211 x3414 1)))))
(assert (x5138 x2600 x897))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x4198 1)))))
(assert (=> (< (- x4284 1) 10000) (not (= (x1211 x2060 1) x4284))))
(assert (=> (> (+ 10000 1) x3148) (not (= (x1211 x208 1) x3148))))
(assert (x4630 x3537))
(assert (not (= (x1211 x3148 3) 1000000000000000000)))
(assert (= x852 (=> (and (= x1962 (uninterp_mod (* x3339 x2097) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x2618 0) x92)) (and (=> x92 x5485) (=> (not x92) x3198)))))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (+ 2 x2042)))))
(assert (x4630 x5178))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x3148 3) x4527))))
(assert (x4630 x5272))
(assert (= x3903 (=> (and (= x3111 (x6031 (+ x3823 32))) (= (> 0 x551) x226) (= x4898 (x3542 x3111)) (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4898)) x551)) (and (=> x226 x3198) (=> (and (= (x3725 x3823) x1107) (= x2312 x5952) (= x2312 x4898) (= (> x1107 1) x3346) (not x226) (not x3346)) x643)))))
(assert (not (= (x1211 x4610 1) 1)))
(assert (x4630 x3124))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x4284 1))))
(assert (= (=> (and (= x4014 (x6031 (+ 32 x1624))) (= x328 (x3208 x1355)) (= (x5205 x4014) x3118) (= (= 0 x2477) x2349)) (and (=> (and (= x3334 0) x2349 (= x4044 x5535)) x586) (=> (not x2349) x362))) x5830))
(assert (x4630 x3357))
(assert (not (= (x406 1) (+ 1 x2042))))
(assert (x4630 x3738))
(assert (= (=> (and (= x3103 (x3910 274184521717934524641157099916833587231)) (< 0 x3103) (= x2791 (= x4789 0))) (and (=> (not x2791) x3198) (=> x2791 x5221))) x4957))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (x1211 x3543 1)))))
(assert (x4630 x3645))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x3409 1) x4400))))
(assert (not (= 2743638299 (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x935 1) x6037))))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x5917 1)))))
(assert (=> (< (- x4090 1) 10000) (not (= x4090 (x1211 x4017 1)))))
(assert (not (= (+ 1 x1186) (x1211 x3755 1))))
(assert (not (= (+ x3962 4) 274184521717934524641157099916833587206)))
(assert (x4630 x72))
(assert (=> (< (- x4090 1) 10000) (not (= (+ 5 x2042) x4090))))
(assert (=> (> (+ 10000 1) x3576) (not (= (x1211 x5745 1) x3576))))
(assert (= x1084 (and x6089 (not x2781))))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x3755 1) x3511))))
(assert (not (= (x1211 x902 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (not (= (+ x3962 5) (x1211 x182 1))))
(assert (=> (< (- x3255 1) 10000) (not (= (x1211 x3755 1) x3255))))
(assert (not (= (x1211 x5917 1) 2514000705)))
(assert (not (= 117300739 (x1211 x3513 1))))
(assert (x6051 x2635))
(assert (not (= (x1211 x2060 1) 2743638299)))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (+ x2042 5)))))
(assert (= (x5618 x2522) 0))
(assert (not (= (x1211 x4610 1) 117300739)))
(assert (x4630 x1908))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x740 2)))))
(assert (=> (= (x1211 x3513 1) (x1211 x1451 1)) (= x1451 x3513)))
(assert (= (=> (= x473 (= x3864 0)) (and (=> (not x473) x1907) (=> (and (= x2197 x5918) x473 (= x4558 x5018) (= x4766 x833) (= 0 x1979) (= x6018 x2413) (= x876 x5744) (= x1377 0)) x5275))) x4910))
(assert (x4630 x4293))
(assert (= x1797 (and x2523 (not x3006))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x4799 1)))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x4090 3)))))
(assert (=> (< (- x3771 1) 10000) (not (= x3771 (x1211 x4527 1)))))
(assert (x4630 x3097))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x5500 1)) (= 274184521717934524641157099916833587231 x5500)))
(assert (=> (< (- x1849 1) 10000) (not (= (+ x1186 1) x1849))))
(assert (=> (< (- x1849 1) 10000) (not (= (x1211 x4017 1) x1849))))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x4218 2)))))
(assert (not (= 4168891048 (x1211 x1919 1))))
(assert (=> (< (- x5800 1) 10000) (not (= (+ 2 x3457) x5800))))
(assert (x6051 x6133))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (+ x3962 3)))))
(assert (= x2761 (=> (and (= (> x5989 0) x677) (= (x244 x2159) x5989)) (and (=> (not x677) x3198) (=> (and (= (x6031 (+ 192 x1355)) x5276) (= x772 x620) x677 (= (x236 x1822) x4827) (= (< 1 x3682) x884) (not x884) (= x3682 (x5474 x4827))) x102)))))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (+ 1 x1186)))))
(assert (not (= 1 (x1211 x3836 1))))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (x1211 x2060 1)))))
(assert (not (= 117300739 (+ 1 x3948))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x4198 1))))
(assert (not (= (x1211 x3148 3) 274184521717934524641157099916833587231)))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x3414 1)))))
(assert (x4630 x3724))
(assert (=> (< (- x3699 1) 10000) (not (= (x1211 x3992 2) x3699))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x5500 1)))))
(assert (not (= (x1211 x3645 1) (+ 1 x3948))))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (+ 2 x4054)))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x1919 1) x1248))))
(assert (x4630 x2417))
(assert (x4630 x484))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x4799 1))))
(assert (=> (< (- x1248 1) 10000) (not (= (+ x2042 4) x1248))))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x3148 3) x2601))))
(assert (not (= (+ x4054 2) 4168891048)))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x4610 1) x5421))))
(assert (x4630 x3564))
(assert (x549 x4248))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 x361 1) x3513))))
(assert (=> (> (+ 10000 1) x5745) (not (= (+ 1 x2042) x5745))))
(assert (x399 x3148))
(assert (not (= (x1211 x3992 2) 3)))
(assert (not (= (x1211 x5500 1) (+ x2042 2))))
(assert (=> (< (- x3755 1) 10000) (not (= (+ x2042 4) x3755))))
(assert (=> (< (- x1303 1) 10000) (not (= (x1211 x740 2) x1303))))
(assert (=> (> (+ 10000 1) x2820) (not (= (x1211 x946 1) x2820))))
(assert (not (= (x1211 x1852 1) (+ x3948 1))))
(assert (not (= 3 (x1211 x902 1))))
(assert (x6051 x5915))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x2862 1)))))
(assert (=> (= (x1211 x4610 1) (x1211 x4198 1)) (= x4610 x4198)))
(assert (=> (> (+ 10000 1) x1089) (not (= (+ 3 x2042) x1089))))
(assert (x4630 x28))
(assert (= (or (and x5943 x1897) x1634) x281))
(assert (= x1976 (=> (= x2462 (= 0 x3589)) (and (=> x2462 x5361) (=> (not x2462) x3735)))))
(assert (=> (> (+ 10000 1) x4554) (not (= (x1211 x4800 1) x4554))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x3576 1))))
(assert (= (=> (= x419 (= x3511 274184521717934524641157099916833587202)) (and (=> (not x419) x4762) (=> (and (= x3639 (x3910 274184521717934524641157099916833587202)) (= x978 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (> 4 x351)) (= 4 x351) (not (= 157198259 x5364)) (<= x4558 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 117300739 x5364)) (> x3639 0) (= 1 x1273) (< x5364 826074471) (= x351 4) (>= x4558 0) (= x2434 32) (= 404098525 x5364) x419) x528))) x311))
(assert (not (= (+ x98 4) (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x3992 2)))))
(assert (x4630 x4577))
(assert (not (= 4168891048 (x1211 x4284 1))))
(assert (not (= (x1211 x740 2) (+ 2 x3457))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x935 1)))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (+ 1 x3962)))))
(assert (x4630 x2877))
(assert (=> (> (+ 10000 1) x4063) (not (= (x1211 x1112 1) x4063))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x4800 1)))))
(assert (not (= (x1211 x5917 1) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (x1211 x5500 1)))))
(assert (x4630 x1697))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (x1211 x1956 1)))))
(assert (= x5845 (=> (and (= (x6031 (+ 36 x3860)) x4668) (= x5358 (x5347 1461501637330902918203684832716283019655932542975 x5586)) (= x2287 (= x3149 0)) (= x1386 (x6031 (+ x1416 64))) (= (x3910 x3786) x3149) (= (x6031 (+ x3860 4)) x1416) (= (x5347 1461501637330902918203684832716283019655932542975 x3460) x1309)) (and (=> (and (not x2287) (= x1709 (< 0 x5357)) (or (and (= x510 1) (> 4294967296 x2682) x1709) (and (not x1709) (= x510 x5357)))) x3217) (=> x2287 x5361)))))
(assert (= x5625 (and (not x6059) x891)))
(assert (=> (< (- x3576 1) 10000) (not (= (+ 2 x4054) x3576))))
(assert (not (= (x1211 x935 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (= (x1211 x1852 1) (x1211 x4284 1)) (= x1852 x4284)))
(assert (not (= (x1211 x3414 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x4630 x4354))
(assert (not (= (+ 2 x3457) (x1211 x208 1))))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x1849 1)))))
(assert (= x412 (and (not x3307) x1601)))
(assert (not (= (x1211 x946 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (= (and (not x4775) x2353) x3056))
(assert (not (= (x1211 x310 2) (x1211 x1849 1))))
(assert (= x1685 (or (and x4979 (not x2565)) x2372)))
(assert (= (=> (and (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5254) x455) (= x3389 (x6031 (+ x5229 x455))) (= x3737 (or (and (< x6171 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6171))) (> x6171 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x6031 (+ x6171 31)) x5254)) (and (=> (not x3737) x1189) (=> x3737 x5361))) x4691))
(assert (not (= (x1211 x3755 1) 404098525)))
(assert (=> (> (+ 10000 1) x5421) (not (= (x1211 x4198 1) x5421))))
(assert (=> (= (x1211 x4198 1) (x1211 x3576 1)) (= x3576 x4198)))
(assert (x4630 x3992))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x1919 1)))))
(assert (=> (= (x1211 x3513 1) (x1211 x361 1)) (= x3513 x361)))
(assert (=> (< (- x5617 1) 10000) (not (= x5617 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x3511) (not (= (x1211 x4017 1) x3511))))
(assert (=> (> (+ 10000 1) x5500) (not (= (+ 4 x2042) x5500))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 x1956 1)))))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (+ x5409 1)))))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x182 1) x1956))))
(assert (not (= (+ 4 x3962) (x1211 274184521717934524641157099916833587231 1))))
(assert (not (= 4168891048 (x1211 x2060 1))))
(assert (=> (< (- x4799 1) 10000) (not (= (x1211 x5917 1) x4799))))
(assert (= (or (and x4868 x5760) (and x3880 x4987)) x1643))
(assert (not (= (x1211 x5500 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (> (+ 10000 1) x1775) (not (= (+ 2 x2042) x1775))))
(assert (not (= (+ x2042 1) (x1211 x1451 1))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (+ 3 x98)))))
(assert (= (ite (and (not x4701) x912 x832) (x5930 x5936) (ite (and (not x1605) (not x832) x912 (not x4701)) (x5589 x5936) (x3902 x5936))) (x2530 x5936)))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (+ x3962 5)))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (x1211 x3836 1)))))
(assert (=> (< (- x6037 1) 10000) (not (= (+ x3962 2) x6037))))
(assert (x4630 x2498))
(assert (=> (> (+ 10000 1) x4554) (not (= (x1211 x1852 1) x4554))))
(assert (= x2847 (=> (= x4147 (= x2820 274184521717934524641157099916833587202)) (and (=> (not x4147) x5185) (=> (and (= x1179 10894474682274239493831243662817379401261526446360622092269559273883068006400) (>= x4558 0) (< x3405 826074471) (not (= 117300739 x3405)) (<= x4558 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3910 274184521717934524641157099916833587202) x516) x4147 (= x2630 x5224) (not (< x5224 4)) (not (= x3405 157198259)) (= 4 x5224) (= x3405 404098525) (= 1 x1348) (= x3459 32) (> x516 0)) x4246)))))
(assert (not (= (x1211 x4800 1) 157198259)))
(assert (not (= (x1211 x4293 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x5138 x2028 x4918))
(assert (not (= (+ x3962 3) (x1211 x2862 1))))
(assert (x4630 x5734))
(assert (=> (> (+ 10000 1) x4293) (not (= x4293 (x1211 x3409 1)))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x3414 1)))))
(assert (not (= (x1211 x928 1) 404098525)))
(assert (= x1898 (or x892 x2830)))
(assert (x5138 x1877 x4260))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x5500 1) x3992))))
(assert (x6051 x5734))
(assert (x4630 x5180))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (+ x98 1)))))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (+ x3457 2)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x1849 1))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (+ 2 x2042)))))
(assert (=> (> (+ 10000 1) x1219) (not (= (x1211 x5421 1) x1219))))
(assert (= x3168 (and x4369 (not x3838))))
(assert (=> (< (- x4198 1) 10000) (not (= x4198 (x1211 x5745 1)))))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (+ x3962 2)))))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x1112 1) x3513))))
(assert (= (and x2525 x736) x5878))
(assert (= (ite (= x6054 x2700) x1354 (x88 x6054)) (x1916 x6054)))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x5917 1)))))
(assert (= x1245 (and x4881 x3944)))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x3992 2)))))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x4799 1) x2549))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x1451 1))))
(assert (= x5766 (or x324 (and x782 (not x2985)))))
(assert (=> (< (- x1112 1) 10000) (not (= (x1211 x946 1) x1112))))
(assert (=> (= (x1211 x361 1) (x1211 x4198 1)) (= x361 x4198)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x4090 3))))
(assert (=> (< (- x3645 1) 10000) (not (= x3645 (+ x3962 4)))))
(assert (not (= (x1211 x946 1) (+ 4 x1186))))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x4527 1) x1303))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x5500 1))))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (+ x5409 1)))))
(assert (x4630 x691))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (+ x1186 1)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x3414 1))))
(assert (x4630 x1375))
(assert (not (= (x1211 x361 1) (x1211 x3148 3))))
(assert (not (= (+ x98 1) (x1211 x1919 1))))
(assert (=> (= (x1211 x5500 1) (x1211 x3755 1)) (= x3755 x5500)))
(assert (=> (< (- x310 1) 10000) (not (= (x406 1) x310))))
(assert (not (= (x1211 x182 1) (+ 1 x98))))
(assert (not (= 157198259 (x1211 274184521717934524641157099916833587231 1))))
(assert (not (= (x1211 x928 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= x3696 (or (and (not x261) x20) (and x4870 x1934))))
(assert (x6051 x983))
(assert (=> (= (x1211 x1956 1) (x1211 x3645 1)) (= x1956 x3645)))
(assert (x4630 x2382))
(assert (not (= (x1211 x310 2) 274184521717934524641157099916833587202)))
(assert (= x1529 (and x2678 (not x2349))))
(assert (= x71 (and x1753 (not x3172))))
(assert (x4630 x1749))
(assert (x4630 x1031))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x1451 1)))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x3409 1)))))
(assert (not (= (+ 3 x98) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (x4630 x3022))
(assert (x4630 x3621))
(assert (not (= (x1211 x740 2) (x1211 x208 1))))
(assert (not (= (+ x98 4) (x1211 x4284 1))))
(assert (x4630 x2927))
(assert (x4630 x3783))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x3755 1) x1852))))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (x1211 x3755 1)))))
(assert (x4630 x2722))
(assert (=> (< (- x3576 1) 10000) (not (= x3576 (x1211 x4799 1)))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x3409 1)))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (+ x2042 4)))))
(assert (=> (> (+ 10000 1) x4799) (not (= x4799 (x1211 x5500 1)))))
(assert (x4630 x1556))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x4610 1))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x361 1) x3543))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x1849 1)))))
(assert (x4630 x5325))
(assert (x4630 x371))
(assert (not (= (x1211 x4293 1) 3)))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (+ 1 x3962)))))
(assert (x4630 x2151))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x3576 1) x4527))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x3992) (not (= (+ 3 x1186) x3992))))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x4527 1)))))
(assert (x4630 x2306))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x3836 1) x3645))))
(assert (x4630 x5094))
(assert (=> (= (x1211 x208 1) (x1211 x2862 1)) (= x208 x2862)))
(assert (= x2416 (or (and x5462 x4621) (and x5487 x6128))))
(assert (x4630 x846))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (+ x1186 4)))))
(assert (=> (< (- x4284 1) 10000) (not (= (+ x1186 4) x4284))))
(assert (= x4962 (or (and x2815 x1052) (and (not x4391) x4406))))
(assert (not (= (x406 1) (x1211 x4284 1))))
(assert (= (and x3330 x4053) x914))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x5745 1)))))
(assert (=> (> (+ 10000 1) x1219) (not (= (x1211 x935 1) x1219))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x361 1)))))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x1451 1) x2845))))
(assert (x251 x3468 x3284 x245 x1738))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x4090 3) x4554))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x3409 1))))
(assert (= (and x1134 x2405) x2624))
(assert (not (= (x1211 x3992 2) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (not (= (x1211 x5500 1) 3939881817)))
(assert (not (= (+ x5409 1) (+ x2042 4))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x2060 1)))))
(assert (= x5121 (and (not x4699) x3388)))
(assert (not (= (+ 4 x3962) (+ x2042 3))))
(assert (x4630 x1572))
(assert (= x2619 (and (not x198) x1884)))
(assert (=> (> (+ 10000 1) x3771) (not (= x3771 (x1211 x1849 1)))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ x2042 2))))
(assert (= x1481 (=> (and (= x466 (ite (= x1160 0) (= 0 x1160) (= 0 x5348))) (= (x4685 128) x1160)) (and (=> (and (= x447 x5246) x466) x2054) (=> (not x466) x2586)))))
(assert (=> (> (+ 10000 1) x2820) (not (= x2820 (x1211 x2862 1)))))
(assert (=> (< (- x1303 1) 10000) (not (= (x1211 x1112 1) x1303))))
(assert (=> (< (- x4017 1) 10000) (not (= (+ 3 x2042) x4017))))
(assert (x4630 x3043))
(assert (not (= (+ 5 x3962) (x1211 x1451 1))))
(assert (not (= (x1211 x3543 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (> (+ 10000 1) x4218) (not (= (+ 2 x3457) x4218))))
(assert (x4630 x4241))
(assert (not (= (x1211 x4800 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x6051 x3468))
(assert (x4630 x5304))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x1211 x3645 1)))))
(assert (not (= (x1211 x1919 1) (x406 1))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (+ 4 x2042)))))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x4610 1) x561))))
(assert (= x56 (and x752 x4719)))
(assert (=> (= (x1211 x3414 1) (x1211 x935 1)) (= x935 x3414)))
(assert (=> (< (- x5917 1) 10000) (not (= (+ x98 4) x5917))))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (+ 4 x3962)))))
(assert (not (= (+ 4 x1186) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x4630 x4853))
(assert (not (= (+ 1 x1186) (x1211 x3409 1))))
(assert (=> (> (+ 10000 1) x3699) (not (= (x1211 x4293 1) x3699))))
(assert (x4630 x5795))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x3513 1) x4702))))
(assert (x4630 x1888))
(assert (= x5452 (and x488 x3579)))
(assert (=> (< (- x3979 1) 10000) (not (= (+ 1 x2042) x3979))))
(assert (x4630 x4672))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x3836 1)))))
(assert (not (= (x1211 x1852 1) 1889567281)))
(assert (x4630 x3048))
(assert (not (= (x1211 x1849 1) 4294967296)))
(assert (x4630 x2821))
(assert (x6051 x1238))
(assert (= (=> (= (= 0 x1013) x6114) (and (=> (not x6114) x5981) (=> x6114 x5361))) x3885))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x4284 1)))))
(assert (not (= (x1211 x4218 2) (+ 3 x3962))))
(assert (not (= 1000000000000000000 (x1211 x1112 1))))
(assert (x4630 x2809))
(assert (=> (= (x1211 x3543 1) (x1211 x361 1)) (= x361 x3543)))
(assert (not (= (x1211 x4218 2) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (= (ite (= x3177 x5416) x162 (x3167 x5416)) (x3185 x5416)))
(assert (not (= 2 (x1211 x3543 1))))
(assert (=> (= (x1211 x4017 1) (x1211 x3543 1)) (= x3543 x4017)))
(assert (not (= (+ 2 x3962) (x1211 x1852 1))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x902 1)))))
(assert (x4630 x875))
(assert (x4630 x5756))
(assert (x4630 x1258))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 274184521717934524641157099916833587231 1) x208))))
(assert (not (= (+ 4 x1186) 826074471)))
(assert (x4630 x5175))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x1451 1))))
(assert (=> (< (- x4293 1) 10000) (not (= (+ x98 4) x4293))))
(assert (= (=> (= x6022 (= 274184521717934524641157099916833587206 x5800)) (and (=> x6022 x295) (=> (not x6022) x2574))) x1832))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x2060 1) x2758))))
(assert (x4630 x2673))
(assert (x4630 x3924))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x1112 1))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (+ 1 x98)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x310 2))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ 3 x3962))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x2862 1)) (= x2862 274184521717934524641157099916833587231)))
(assert (=> (< (- x3513 1) 10000) (not (= (x406 1) x3513))))
(assert (= x5463 (and x2655 x115)))
(assert (= x5514 (=> (and (= (> x1006 0) x2573) (= x1006 (x2995 x3768))) (and (=> (not x2573) x5361) (=> (and (= x1860 (x3088 x1259)) (= x3358 (x6031 (+ 192 x2686))) (= x4842 x5980) (= (< 1 x1860) x2650) (not x2650) x2573 (= x1259 (x3608 x1015))) x3090)))))
(assert (x399 x2601))
(assert (=> (< (- x3409 1) 10000) (not (= (+ x2042 1) x3409))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (+ x3962 1)))))
(assert (=> (> (+ 10000 1) x1451) (not (= (+ x3962 3) x1451))))
(assert (x4630 x3076))
(assert (=> (< (- x1598 1) 10000) (not (= (+ x3962 1) x1598))))
(assert (=> (> (+ 10000 1) x2549) (not (= (x1211 x3836 1) x2549))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x3645 1)))))
(assert (x4630 x3224))
(assert (not (= (+ 1 x1186) 4294967296)))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 274184521717934524641157099916833587231 1))))
(assert (x4630 x2344))
(assert (= (or x4622 (and x4268 x5570)) x3586))
(assert (not (= 2 (x1211 x1956 1))))
(assert (=> (> (+ 10000 1) x4090) (not (= (+ x2042 4) x4090))))
(assert (= (and x2059 x5971) x4953))
(assert (= (=> (and (= x96 x5816) (not (> 4 x4070)) (not (= 826074471 x4840)) (= x4287 (x3910 274184521717934524641157099916833587206)) (= x4070 36) (> x4287 0) (= x4070 36) (= (x3337 (- x4070 4)) x2030) (not (> 826074471 x4840)) (= x1881 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (or (and (= true (<= x2030 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2030)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2030)) x2854) (= 1889567281 x4840)) (and (=> x2854 x410) (=> (not x2854) x2094))) x681))
(assert (=> (= (x1211 x2060 1) (x1211 x3576 1)) (= x2060 x3576)))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (+ 3 x98)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x902 1))))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x928 1) x3166))))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x5917 1) x3836))))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (x1211 x3992 2)))))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x361 1) x1956))))
(assert (= true x3278))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x3409 1) x3575))))
(assert (x6051 x4008))
(assert (x4630 x2544))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x3543 1)))))
(assert (=> (> (+ 10000 1) x1303) (not (= (x1211 x3576 1) x1303))))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (x1211 x3992 2)))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x2060 1)))))
(assert (x6051 x2029))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x4610 1)))))
(assert (= (x2037 x2046) (ite (= x2046 x5210) x4710 (x2104 x2046))))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x1451 1) x928))))
(assert (x4630 x335))
(assert (=> (< (- x1849 1) 10000) (not (= (+ 4 x98) x1849))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x902 1)))))
(assert (x4630 x3785))
(assert (=> (> (+ 10000 1) x2862) (not (= (x1211 x928 1) x2862))))
(assert (=> (> (+ 10000 1) x3992) (not (= (+ 4 x1186) x3992))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x1211 x5745 1)))))
(assert (= x613 (and x581 (not x248))))
(assert (=> (> (+ 10000 1) x902) (not (= (x1211 x5421 1) x902))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (+ 2 x4054)))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (+ 2 x4054)))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x1112 1)))))
(assert (x4630 x6144))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x2060 1)))))
(assert (= (ite (and x5353 x553 (not x642)) (x4536 x6068) (x3483 x6068)) (x4182 x6068)))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x4293 1)))))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x310 2) x3755))))
(assert (not (= (x1211 x5917 1) (x406 1))))
(assert (=> (> (+ 10000 1) x361) (not (= (+ x3948 1) x361))))
(assert (x4630 x250))
(assert (not (= (x1211 x310 2) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (< (- x1303 1) 10000) (not (= x1303 (x1211 x2862 1)))))
(assert (x4630 x1034))
(assert (= x1891 (=> (and (= x2274 x666) (= x1862 x4737)) x2142)))
(assert (=> (< (- x561 1) 10000) (not (= x561 (x1211 x361 1)))))
(assert (=> (< (- x3511 1) 10000) (not (= x3511 (x1211 x1956 1)))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x3543 1)))))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x4610 1) x4800))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (+ x3962 4)))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (+ x98 4)))))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x3645 1) x3230))))
(assert (=> (= (x1211 x6069 1) (x1211 x4527 1)) (= x4527 x6069)))
(assert (x4630 x4606))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (x1211 x4799 1)))))
(assert (not (= (+ 2 x2042) 18446744073709551615)))
(assert (x4630 x1060))
(assert (=> (> (+ 10000 1) x952) (not (= (+ x3962 5) x952))))
(assert (= (and x5488 (not x3710)) x223))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (+ 3 x1186)))))
(assert (= (ite (= x1203 x5082) x1129 (x5118 x5082)) (x4555 x5082)))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (x1211 x1451 1)))))
(assert (x549 x5316))
(assert (x6051 x2526))
(assert (not (= (x1211 x1956 1) (+ x98 3))))
(assert (=> (> (+ 10000 1) x3166) (not (= (x1211 x3836 1) x3166))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x3836 1) x3230))))
(assert (=> (> (+ 10000 1) x3166) (not (= (x1211 x4799 1) x3166))))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x208) (not (= (x1211 x4284 1) x208))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x1849 1)))))
(assert (=> (= (x1211 x935 1) (x1211 x1852 1)) (= x1852 x935)))
(assert (not (= (x1211 x3148 3) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= (+ 5 x3962) (x1211 x935 1))))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (+ 2 x4054)))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x1852 1))))
(assert (x4630 x3069))
(assert (not (= (x1211 x1919 1) 274184521717934524641157099916833587231)))
(assert (=> (< (- x4610 1) 10000) (not (= (x1211 x1852 1) x4610))))
(assert (not (= (x1211 x361 1) (x406 1))))
(assert (x6051 x4644))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x6069 1)))))
(assert (= x5760 (and x3880 (not x4987))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x4799 1))))
(assert (not (= (+ x4054 2) 404098525)))
(assert (x4630 x947))
(assert (not (= (x1211 x3992 2) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x4630 x1112))
(assert (= x3701 (=> (and (= x3487 (= x219 0)) (= x219 (x6031 (+ x3621 x1232)))) (and (=> (and x3487 (= x158 x1806)) x111) (=> (not x3487) x3756)))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x3836) (not (= (+ x2042 4) x3836))))
(assert (=> (> (+ 10000 1) x1467) (not (= (+ x2042 3) x1467))))
(assert (x6051 x4703))
(assert (x4630 x2989))
(assert (=> (< (- x3771 1) 10000) (not (= (+ 2 x2042) x3771))))
(assert (= x3221 true))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x2060 1) x3230))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x2862 1))))
(assert (=> (< (- x5421 1) 10000) (not (= (+ x3962 1) x5421))))
(assert (not (= (x1211 x4284 1) (+ x4054 2))))
(assert (= x5852 (=> (and (= (x3910 x3255) x5339) (= x5776 (x2034 128)) (= 4 x332) (= (= 0 x5339) x831)) (and (=> (not x831) x4034) (=> x831 x5361)))))
(assert (x4630 x3058))
(assert (=> (> (+ 10000 1) x3148) (not (= (x1211 x4284 1) x3148))))
(assert (=> (< (- x1775 1) 10000) (not (= (x1211 x928 1) x1775))))
(assert (= x5600 (and x4624 x911)))
(assert (not (= (x1211 x361 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x4630 x2264))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (x1211 x4017 1)))))
(assert (x4630 x2296))
(assert (not (= (+ 1 x1186) (x1211 x4293 1))))
(assert (not (= (x1211 x3409 1) (+ 4 x98))))
(assert (=> (< (- x182 1) 10000) (not (= (x1211 x1849 1) x182))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 274184521717934524641157099916833587202)))
(assert (=> (< (- x208 1) 10000) (not (= (x1211 x361 1) x208))))
(assert (=> (< (- x3979 1) 10000) (not (= x3979 (x1211 x5917 1)))))
(assert (not (= (+ x98 1) (x1211 x6069 1))))
(assert (= (or (and x588 x4568) (and x3020 x4609)) x930))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x902 1)))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x928 1)))))
(assert (x4630 x5742))
(assert (not (= (+ 4 x98) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (> (+ 10000 1) x935) (not (= (x1211 x3576 1) x935))))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x928 1) x4293))))
(assert (x4630 x5028))
(assert (=> (> (+ 10000 1) x3575) (not (= (x1211 x5421 1) x3575))))
(assert (= (=> (and (= x4335 (= 0 x5414)) (= x1174 (= 0 x5287)) (= (x5347 x4207 x37) x5414) (= x4207 (ite (not x1174) 1 0)) (= (ite (> x4165 x2132) 1 0) x37) (= x5287 (uninterp_mod (* x3633 x4873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287)) x2132)) (and (=> (not x4335) x3198) (=> x4335 x3986))) x4336))
(assert (not (= (+ x5409 1) (x1211 x4293 1))))
(assert (not (= (x1211 x4293 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (= x252 (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4745)) x5150) (= (ite (not x2460) 1 0) x201) (= (x5347 x201 x396) x5160) (= (= 0 x5160) x1365) (= x396 (ite (< x5150 x2009) 1 0)) (= x2460 (= x4745 0))) (and (=> x1365 x4298) (=> (not x1365) x5361)))))
(assert (=> (< (- x2549 1) 10000) (not (= (x1211 x3414 1) x2549))))
(assert (= x3215 (=> (and (= x1391 (x6031 (+ x2864 31))) (= (or (and (= true (<= x2864 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2864 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2864)) x6120) (= x1392 (x6031 (+ x3144 x2218))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1391) x3144)) (and (=> x6120 x5361) (=> (not x6120) x6040)))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x1852 1)))))
(assert (=> (> (+ 10000 1) x2601) (not (= (+ 1 x3948) x2601))))
(assert (=> (< (- x3543 1) 10000) (not (= (+ x5409 1) x3543))))
(assert (x4630 x4266))
(assert (not (= (+ 1 x3948) 157198259)))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (x1211 x4800 1)))))
(assert (= 0 (x5966 x3240)))
(assert (x4630 x1544))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) (+ x3962 2))))
(assert (=> (> (+ 10000 1) x3148) (not (= (+ 3 x3962) x3148))))
(assert (=> (< (- x3230 1) 10000) (not (= (x1211 x3755 1) x3230))))
(assert (=> (> (+ 10000 1) x3148) (not (= (+ 1 x1186) x3148))))
(assert (=> (= (x1211 x1112 1) (x1211 x2862 1)) (= x2862 x1112)))
(assert (= (x2581 x2218) (ite (= x2218 x4330) x4546 (x837 x2218))))
(assert (x4630 x5245))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x4293 1))))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x361 1) x1248))))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x5421 1)))))
(assert (x4630 x6133))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1211 x3414 1))))
(assert (not (= 3939881817 (x1211 x3414 1))))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x5421 1) x5800))))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x4800 1) x4293))))
(assert (x4630 x1305))
(assert (not (= (x1211 x2060 1) (+ x4054 2))))
(assert (x4630 x5243))
(assert (=> (< (- x2845 1) 10000) (not (= x2845 (+ x3962 3)))))
(assert (= (x1916 x1632) (ite (= x2700 x1632) x1354 (x88 x1632))))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (+ x4054 2)))))
(assert (=> (> (+ 10000 1) x2417) (not (= (+ x5409 1) x2417))))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (x1211 x740 2)))))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (+ x5409 1)))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (+ x3962 4)))))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x1956 1)))))
(assert (=> (< (- x182 1) 10000) (not (= x182 (+ x1186 4)))))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 274184521717934524641157099916833587231 1) x361))))
(assert (=> (< (- x6037 1) 10000) (not (= (x1211 x208 1) x6037))))
(assert (x4630 x5202))
(assert (x4630 x768))
(assert (=> (> (+ 10000 1) x1248) (not (= x1248 (x1211 x4799 1)))))
(assert (= (=> (and (= (< x5117 x2797) x4516) (= x5117 (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2012)))) (and (=> (not x4516) x848) (=> x4516 x5361))) x2494))
(assert (x4630 x1102))
(assert (not (= (+ x5409 1) (x1211 x4799 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 2 x3457))))
(assert (x399 x2862))
(assert (not (= (x1211 x4090 3) (+ 1 x98))))
(assert (not (= (x1211 x3414 1) (+ 1 x5409))))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (+ x3962 1)))))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x1919 1) x4293))))
(assert (not (= (+ 1 x3962) 274184521717934524641157099916833587206)))
(assert (= x590 (or (and x5265 (not x5186)) x5149)))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x946 1)))))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x182 1) x2845))))
(assert (not (= 3939881817 (+ x3962 3))))
(assert (= (=> (and (= x3864 x783) (= x3 x5918) (= x3927 x1123)) x4910) x5858))
(assert (= x4686 (=> (= (= x2820 274184521717934524641157099916833587206) x4996) (and (=> (and (= 1 x4559) (< 0 x3840) (< x4463 826074471) (= x2543 32) (= (x3910 274184521717934524641157099916833587206) x3840) (not (= 157198259 x4463)) (not (= x4463 117300739)) (= x4463 404098525) (= 4 x3361) x4996 (= x3361 4) (<= 0 x833) (<= x833 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x3361 4)) (= x5113 10894474682274239493831243662817379401261526446360622092269559273883068006400)) x5905) (=> (not x4996) x3757)))))
(assert (x4630 x2543))
(assert (=> (< (- x740 1) 10000) (not (= (x1211 x361 1) x740))))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x3513 1) x6069))))
(assert (x4630 x3871))
(assert (=> (< (- x4090 1) 10000) (not (= (+ x2042 3) x4090))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (x1211 x1956 1)))))
(assert (= (x4999 x5054) (ite (= x5054 x5726) x2276 (x1441 x5054))))
(assert (not (= (+ x3962 1) 3)))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (x1211 x4527 1)))))
(assert (x4630 x4454))
(assert (=> (< (- x4527 1) 10000) (not (= (+ 4 x1186) x4527))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 1000000000000000000)))
(assert (x4630 x3496))
(assert (not (= (x1211 x740 2) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x3645 1))))
(assert (x4630 x4603))
(assert (not (= (x1211 x1919 1) (+ 1 x5409))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x4017 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= (+ 1 x1186) x5745))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x5500 1)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 4 x1186))))
(assert (x4630 x3018))
(assert (=> (< (- x3166 1) 10000) (not (= (x406 1) x3166))))
(assert (= x1450 (and (not x5125) x5255)))
(assert (not (= 1889567281 (+ x1186 4))))
(assert (=> (> (+ 10000 1) x3979) (not (= (x1211 x1451 1) x3979))))
(assert (not (= 4168891048 (x1211 x4017 1))))
(assert (not (= (+ x2042 5) (x1211 x935 1))))
(assert (=> (> (+ 10000 1) x1219) (not (= (x1211 x902 1) x1219))))
(assert (=> (> (+ 10000 1) x182) (not (= (x1211 x4293 1) x182))))
(assert (not (= (+ x2042 4) 4168891048)))
(assert (=> (= (x1211 x1849 1) (x1211 x935 1)) (= x1849 x935)))
(assert (x4630 x5695))
(assert (=> (> (+ 10000 1) x310) (not (= (x1211 x4610 1) x310))))
(assert (= (and (not x304) x2837) x4275))
(assert (x4630 x1155))
(assert (= x4268 (and (not x4291) x493)))
(assert (x4630 x856))
(assert (= (=> (and (= x2841 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477))) (= x2925 (= x6172 0)) (= (ite (< x2841 x276) 1 0) x1163) (= (ite (not x5098) 1 0) x4718) (= x6172 (x5347 x4718 x1163)) (= x5098 (= 0 x2477))) (and (=> x2925 x1194) (=> (not x2925) x3198))) x2411))
(assert (=> (= (x1211 x3543 1) (x1211 x4610 1)) (= x4610 x3543)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 3 x98))))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x1112 1)))))
(assert (= (=> (and (= 0 x3453) (= x2498 x5326)) x5005) x3981))
(assert (x4630 x4411))
(assert (not (= (x1211 x740 2) 2514000705)))
(assert (not (= (+ 1 x98) (x1211 x4800 1))))
(assert (= x5978 (and x2229 x27)))
(assert (x4630 x437))
(assert (x4630 x5987))
(assert (x4630 x3513))
(assert (x4630 x3452))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (+ x3948 1)))))
(assert (not (= (x1211 x935 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x5745 1) x1112))))
(assert (not (= (+ x3457 2) 1)))
(assert (not (= (x1211 x2060 1) (+ 1 x1186))))
(assert (not (= (x1211 x3992 2) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x4630 x4153))
(assert (not (= (x1211 x1956 1) 18446744073709551615)))
(assert (not (= 3 (x1211 x3148 3))))
(assert (not (= (x1211 x935 1) 2743638299)))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (+ x3962 2)))))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x3543 1)))))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x1956 1)))))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x5917 1) x1089))))
(assert (=> (> (+ 10000 1) x3414) (not (= x3414 (x1211 x4800 1)))))
(assert (= (=> (and (= x3927 x447) (= x5918 x2005) (= x5246 x3864)) x4910) x2054))
(assert (not (= (x1211 x3836 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (+ x1186 3)))))
(assert (not (= (x1211 x935 1) 2514000705)))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x3543 1) x4800))))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x3576 1)))))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x1852 1) x4218))))
(assert (x4630 x5088))
(assert (not (= (x1211 x902 1) (+ 1 x5409))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x361 1))))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x2060 1) x2845))))
(assert (not (= (x1211 x935 1) 1889567281)))
(assert (=> (> (+ 10000 1) x3575) (not (= (+ x2042 4) x3575))))
(assert (x4630 x2043))
(assert (x4630 x4302))
(assert (=> (< (- x902 1) 10000) (not (= x902 (x1211 x3148 3)))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x182 1)))))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (x1211 x5745 1)))))
(assert (x4630 x556))
(assert (x4630 x4070))
(assert (=> (= (x1211 x4284 1) (x1211 x182 1)) (= x4284 x182)))
(assert (=> (> (+ 10000 1) x3786) (not (= (x1211 x3836 1) x3786))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x4017 1)))))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x4113) (not (= (+ x2042 4) x4113))))
(assert (not (= (x1211 x902 1) 3939881817)))
(assert (= (=> (and (= x4681 x4035) (= x2420 0)) x3868) x227))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (+ 4 x1186)))))
(assert (not (= (x1211 x3513 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (x4630 x4825))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ 1 x3948)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x361 1))))
(assert (x4630 x1432))
(assert (=> (> (+ 10000 1) x946) (not (= (x406 1) x946))))
(assert (= x5623 (=> (and (= x2797 x5900) (= x1018 x3389)) x4058)))
(assert (x4630 x1690))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (x1211 x6069 1)))))
(assert (x6051 x2307))
(assert (x4630 x4242))
(assert (x4630 x1216))
(assert (=> (> (+ 10000 1) x5617) (not (= (+ x2042 2) x5617))))
(assert (x4630 x4510))
(assert (=> (> (+ 10000 1) x4063) (not (= (x1211 x3992 2) x4063))))
(assert (= (x4732 x4970) (ite (and (not x3708) x3512 x2869) (x2104 x4970) (ite (and (not x5704) x2869 (not x3708) (not x3512)) (x2037 x4970) (x756 x4970)))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x1211 x3513 1)))))
(assert (= x1052 (and x5420 x6119)))
(assert (=> (> (+ 10000 1) x693) (not (= (+ x2042 5) x693))))
(assert (=> (< (- x693 1) 10000) (not (= (+ x98 1) x693))))
(assert (=> (> (+ 10000 1) x4063) (not (= x4063 (x1211 x5500 1)))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (+ 3 x3962)))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (+ x3457 2)))))
(assert (x6051 x464))
(assert (not (= (x1211 x3148 3) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x5745 1) x1219))))
(assert (= x2285 (=> (and (= (x3501 x2167) x104) (= (< 0 x104) x3952)) (and (=> x3952 x1786) (=> (not x3952) x6058)))))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x4800 1) x4063))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x3755 1))))
(assert (x4630 x2892))
(assert (not (= (x1211 x1849 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x3576 1)))))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (x1211 x5745 1)))))
(assert (x4630 x1222))
(assert (= (x1448 x2937) 0))
(assert (x4630 x5348))
(assert (x4630 x4916))
(assert (=> (< (- x2549 1) 10000) (not (= (x1211 x5421 1) x2549))))
(assert (=> (= (x1211 x902 1) (x1211 x3513 1)) (= x902 x3513)))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (< (- x4198 1) 10000) (not (= (+ 2 x2042) x4198))))
(assert (=> (< (- x740 1) 10000) (not (= x740 (x1211 x935 1)))))
(assert (not (= (+ 2 x3962) (x1211 x4284 1))))
(assert (not (= (+ x4054 2) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= (x406 1) (+ x3962 1))))
(assert (= (and x3070 (not x5579)) x2419))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x3543 1) x3645))))
(assert (=> (> (+ 10000 1) x1248) (not (= (x1211 x5421 1) x1248))))
(assert (x4630 x3244))
(assert (x251 x44 x868 x4757 x4598))
(assert (not (= (x1211 x740 2) (x1211 x4284 1))))
(assert (not (= (x1211 x208 1) 157198259)))
(assert (=> (> (+ 10000 1) x4107) (not (= (x1211 x4610 1) x4107))))
(assert (= x3388 x1327))
(assert (x4630 x792))
(assert (= x5940 (=> (and (= x1739 (x5474 x2958)) (= (< 0 x1739) x4584)) (and (=> x4584 x1805) (=> (not x4584) x3198)))))
(assert (= (x2241 x6049) 0))
(assert (x5138 x4098 x1373))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x182 1)))))
(assert (not (= (x1211 x3576 1) (+ 2 x2042))))
(assert (=> (< (- x2758 1) 10000) (not (= (x1211 x5917 1) x2758))))
(assert (=> (= (x1211 x935 1) (x1211 x5917 1)) (= x5917 x935)))
(assert (=> (= (x1211 x4610 1) (x1211 x5745 1)) (= x4610 x5745)))
(assert (not (= (x1211 x208 1) (+ 1 x98))))
(assert (not (= (x1211 x3148 3) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 117300739 (+ 5 x2042))))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x182 1) x3513))))
(assert (x399 x1219))
(assert (=> (> (+ 10000 1) x3836) (not (= (+ x2042 1) x3836))))
(assert (x4630 x2103))
(assert (x4630 x5900))
(assert (= (=> (and (= x3667 (x3337 (- x2371 x3766))) (= x579 (x6031 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x5523))) (= (x6031 (+ x3766 100)) x2371) (= (x45 x5451) x197) (= (x5347 1461501637330902918203684832716283019655932542975 x5076) x4554) (= x4139 0) (= x2819 (x6031 (+ 128 x2179))) (= x2179 (x6031 (+ x3766 36))) (= x5648 (x3337 (- x3667 32))) (= (x6031 (+ 68 x3766)) x5037) (= (> x628 0) x5222) (= (x3910 x4554) x628) (= (x5347 26959946667150639794667015087019630673637144422540572481103610249215 x197) x5523) (= (x6031 (+ x3766 32)) x5451)) (and (=> (and (= (< 0 x74) x707) (or (and (= (x3773 x1780) x5555) (or (and (= x727 (< 64 x74)) (or (and (not x727) (= x4627 64)) (and (= x1845 (< 96 x74)) (= (x3773 x3686) x4051) (= x1548 (x6031 (+ x2371 128))) (or (and (= x1460 (x3773 x5368)) (not x6035) (= (x6031 (+ 128 x3766)) x5368) x1845 (= 128 x4627) (= x6035 (> x74 128)) (= x6085 (x6031 (+ x2371 160)))) (and (not x1845) (= 96 x4627))) x727 (= (x6031 (+ x3766 96)) x3686))) (= (x6031 (+ x3766 64)) x1136) (= (x6031 (+ 96 x2371)) x1978) x5647 (= (x3773 x1136) x2027)) (and (= 32 x4627) (not x5647))) (= x5647 (> x74 32)) (= x2336 x2819) x707 (= x1780 x5451)) (and (not x707) (= x4627 0))) x5222 (= (x4055 x3766) x74) (= x4662 (< x74 x4627)) (or (not x4662) (and (= x886 (x6031 (+ x2819 x74))) x4662))) x2965) (=> (not x5222) x5361))) x2003))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x3755 1)))))
(assert (not (= (+ 4 x3962) (x1211 x4527 1))))
(assert (= x1590 (and x1503 (not x2346))))
(assert (not (= (x1211 x740 2) (x1211 x3543 1))))
(assert (=> (= (x1211 x6069 1) (x1211 x928 1)) (= x6069 x928)))
(assert (not (= 2514000705 (+ x98 4))))
(assert (x4630 x3285))
(assert (=> (< (- x4400 1) 10000) (not (= x4400 (x1211 x5917 1)))))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (x1211 x361 1)))))
(assert (=> (> (+ 10000 1) x3755) (not (= (+ x1186 4) x3755))))
(assert (=> (= (x1211 x4284 1) (x1211 x1451 1)) (= x1451 x4284)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1211 x208 1))))
(assert (=> (< (- x1775 1) 10000) (not (= (+ x1186 4) x1775))))
(assert (= (and x2247 x2702) x1065))
(assert (x4630 x1655))
(assert (not (= 1889567281 (x1211 x902 1))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ 3 x3962))))
(assert (x251 x2966 x3485 x4059 x1148))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (x1211 x4198 1)))))
(assert (=> (= (x1211 x6069 1) (x1211 x1451 1)) (= x1451 x6069)))
(assert (=> (> (+ 10000 1) x4113) (not (= x4113 (x1211 x4527 1)))))
(assert (x4630 x1853))
(assert (=> (< (- x1338 1) 10000) (not (= (x1211 x5745 1) x1338))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x361 1)))))
(assert (not (= 2835717307 (x1211 x740 2))))
(assert (= (and (not x5078) x5868) x4877))
(assert (=> (< (- x3836 1) 10000) (not (= (x1211 x3992 2) x3836))))
(assert (not (= (x1211 x2060 1) (x1211 x3992 2))))
(assert (= (and (not x6104) x2668) x4841))
(assert (not (= (x1211 x3645 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (x4630 x6172))
(assert (x4630 x3969))
(assert (x4630 x4822))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x5917 1))))
(assert (=> (> (+ 10000 1) x6037) (not (= x6037 (x1211 x1956 1)))))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x182 1) x2758))))
(assert (=> (< (- x4218 1) 10000) (not (= (x1211 x4293 1) x4218))))
(assert (x4630 x3305))
(assert (not (= (x1211 x4527 1) 1889567281)))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x4610 1)))))
(assert (not (= (x1211 x310 2) 18446744073709551615)))
(assert (not (= 117300739 (+ x5409 1))))
(assert (x4630 x6138))
(assert (=> (< (- x3543 1) 10000) (not (= (+ x3962 1) x3543))))
(assert (=> (= (x1211 x182 1) (x1211 x4293 1)) (= x4293 x182)))
(assert (=> (= (x1211 x946 1) (x1211 x1852 1)) (= x1852 x946)))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 274184521717934524641157099916833587231 1)))))
(assert (=> (> (+ 10000 1) x5500) (not (= (+ 1 x98) x5500))))
(assert (not (= (x1211 x4800 1) 274184521717934524641157099916833587202)))
(assert (not (= (+ 2 x4054) (x1211 x4800 1))))
(assert (not (= (+ x2042 2) (x1211 x3645 1))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x1919 1)))))
(assert (not (= (+ 1 x1186) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x4630 x1003))
(assert (x6051 x1507))
(assert (=> (> (+ 10000 1) x693) (not (= (+ x3962 2) x693))))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (+ x98 1)))))
(assert (= x4518 (and x494 (not x1694))))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (x1211 x1919 1)))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x3543 1)))))
(assert (=> (> (+ 10000 1) x3513) (not (= (+ x3948 1) x3513))))
(assert (= x3426 (and x1503 x2346)))
(assert (=> (> (+ 10000 1) x4284) (not (= (+ 2 x3962) x4284))))
(assert (x4630 x5114))
(assert (=> (> (+ 10000 1) x2601) (not (= (+ x5409 1) x2601))))
(assert (=> (> (+ 10000 1) x4293) (not (= (+ 5 x3962) x4293))))
(assert (not (= (+ 5 x2042) (x1211 274184521717934524641157099916833587231 1))))
(assert (= (and x3311 (not x3523)) x2298))
(assert (not (= 1 (+ x3962 1))))
(assert (not (= 2514000705 (x1211 x6069 1))))
(assert (x4630 x1635))
(assert (=> (< (- x2417 1) 10000) (not (= x2417 (x1211 x3576 1)))))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (+ x3962 1)))))
(assert (=> (> (+ 10000 1) x3511) (not (= (x1211 x4218 2) x3511))))
(assert (=> (> (+ 10000 1) x208) (not (= (+ 3 x3962) x208))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (x1211 x4527 1)))))
(assert (=> (< (- x3786 1) 10000) (not (= (+ 3 x3962) x3786))))
(assert (not (= (+ 4 x1186) (x1211 x1451 1))))
(assert (x4630 x634))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x4799 1)))))
(assert (not (= (+ x2042 5) (x1211 x4293 1))))
(assert (x4630 x2696))
(assert (x4630 x4152))
(assert (=> (> (+ 10000 1) x361) (not (= (+ x2042 5) x361))))
(assert (not (= (+ 1 x1186) (x1211 x4799 1))))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (+ x1186 3)))))
(assert (not (= 2743638299 (x1211 x1919 1))))
(assert (not (= (+ 3 x1186) (x1211 x902 1))))
(assert (= x1539 (=> (and (= (x6031 (+ x2138 31)) x2325) (= x1332 (x6031 (+ x3113 x5710))) (= x3113 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2325)) (= x651 (or (> x2138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2138 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2138 32))))) (and (=> (not x651) x4027) (=> x651 x3198)))))
(assert (x4630 x3946))
(assert (x4630 x4665))
(assert (x4630 x4423))
(assert (x4630 x3942))
(assert (not (= 1000000000000000000 (x1211 x2862 1))))
(assert (not (= (+ 3 x98) (x1211 x4799 1))))
(assert (= (and x908 (not x2907)) x1679))
(assert (x4630 x2786))
(assert (not (= (+ x1186 4) 2)))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x1852 1)))))
(assert (=> (< (- x902 1) 10000) (not (= (+ x98 4) x902))))
(assert (=> (> (+ 10000 1) x1338) (not (= (+ 2 x3457) x1338))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (+ x1186 4)))))
(assert (not (= (x1211 x5917 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x5917 1) x2417))))
(assert (=> (> (+ 10000 1) x3575) (not (= (x1211 x4218 2) x3575))))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x4284 1) x1451))))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x3409 1)))))
(assert (not (= (x1211 x3513 1) 18446744073709551615)))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x946 1)))))
(assert (x4630 x4696))
(assert (x6051 x3508))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x4799 1)))))
(assert (=> (= (x1211 x5421 1) (x1211 x1956 1)) (= x1956 x5421)))
(assert (= (=> (and (= x5156 68) (= x3891 (or (and (> 64 x200) (= true (<= x200 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x200 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 1889567281 x3535)) (= 2835717307 x3535) (= x3864 x5637) (= x1507 x5816) (not (> 826074471 x3535)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x875) (= x2738 (x3910 274184521717934524641157099916833587202)) (= x5156 x1477) (> x2738 0) (not (= x3535 2514000705)) (not (= x3535 826074471)) (not (> 4 x5156)) (= (x3337 (- x5156 4)) x200)) (and (=> x3891 x2607) (=> (not x3891) x1029))) x5729))
(assert (x4630 x5328))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x3409 1)))))
(assert (=> (< (- x740 1) 10000) (not (= x740 (+ 4 x1186)))))
(assert (= (and (not x3744) x3379) x57))
(assert (= x5626 (and (not x3101) x732)))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (+ x2042 4)))))
(assert (not (= (x1211 x4610 1) (x406 1))))
(assert (=> (< (- x83 1) 10000) (not (= (x1211 x5421 1) x83))))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (x1211 x1852 1)))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x4610 1))))
(assert (=> (> (+ 10000 1) x310) (not (= (+ 3 x3962) x310))))
(assert (x4630 x2825))
(assert (not (= (+ 1 x98) 274184521717934524641157099916833587202)))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x208 1) x4702))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (x1211 x4799 1)))))
(assert (= (and (not x588) x4568) x3020))
(assert (=> (= (x1211 x1919 1) (x1211 x3409 1)) (= x3409 x1919)))
(assert (=> (= (x1211 x5745 1) (x1211 x3576 1)) (= x3576 x5745)))
(assert (= (=> (and (= x2911 x5143) (= 0 x3762)) x6010) x1839))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x4090 3) x3992))))
(assert (=> (< (- x740 1) 10000) (not (= (x1211 x6069 1) x740))))
(assert (not (= (x1211 x3645 1) 274184521717934524641157099916833587231)))
(assert (= (- (/ x5545 2) (uninterp_frac x5545 2)) (x1044 x5545 1)))
(assert (=> (< (- x1219 1) 10000) (not (= (x1211 x5917 1) x1219))))
(assert (= (=> (and (= (x6031 (+ x2952 x4271)) x823) (= x4271 (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4201)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6107) true) (< x6107 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6107)) x1599) (= (x6031 (+ x6107 31)) x4201)) (and (=> (not x1599) x3436) (=> x1599 x3198))) x2773))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x902 1) x4017))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (+ x4054 2)))))
(assert (x4630 x1406))
(assert (=> (> (+ 10000 1) x2417) (not (= (+ x3962 1) x2417))))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (x1211 x4610 1)))))
(assert (not (= (+ 3 x3962) 3)))
(assert (x4630 x2559))
(assert (=> (= (x1211 x3836 1) (x1211 x5500 1)) (= x5500 x3836)))
(assert (not (= (x1211 x4527 1) (+ x4054 2))))
(assert (= x10 (and x1207 (not x3141))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x693) (not (= (+ 3 x98) x693))))
(assert (not (= (+ x98 3) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= (x1211 x1112 1) (+ x3962 1))))
(assert (not (= (+ 1 x3948) 1461501637330902918203684832716283019655932542975)))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (+ 1 x98)))))
(assert (= (and x3977 (not x2587)) x5127))
(assert (x4630 x4677))
(assert (not (= 4168891048 (+ x3962 5))))
(assert (x4630 x5385))
(assert (x4630 x2822))
(assert (=> (> (+ 10000 1) x1451) (not (= (x1211 x935 1) x1451))))
(assert (=> (< (- x5500 1) 10000) (not (= x5500 (+ 1 x1186)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x3414 1))))
(assert (=> (< (- x1303 1) 10000) (not (= (x1211 x1852 1) x1303))))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (+ 3 x3962)))))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (+ 2 x3457)))))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (+ x2042 5)))))
(assert (=> (< (- x2549 1) 10000) (not (= (+ x2042 3) x2549))))
(assert (=> (= (x1211 x4017 1) (x1211 x4800 1)) (= x4017 x4800)))
(assert (x4630 x451))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x3414 1)) (= 274184521717934524641157099916833587231 x3414)))
(assert (=> (< (- x4107 1) 10000) (not (= (+ 2 x4054) x4107))))
(assert (=> (< (- x4644 1) 10000) (not (= x4644 (+ 4 x2042)))))
(assert (x399 x3511))
(assert (=> (= (x1211 x4799 1) (x1211 x3755 1)) (= x4799 x3755)))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (x1211 x5421 1)))))
(assert (not (= (x1211 x5917 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x6051 x3874))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x3148 3))))
(assert (x4630 x5994))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (+ x3962 2)))))
(assert (not (= 117300739 (x1211 x5745 1))))
(assert (not (= (x1211 x3992 2) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (< (- x4400 1) 10000) (not (= (x1211 x4610 1) x4400))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x4527 1))))
(assert (not (= (x1211 x6069 1) (+ 2 x2042))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x3755 1))))
(assert (not (= (+ 4 x2042) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (= x3855 (and x2633 (not x6084))))
(assert (not (= (x1211 x5500 1) (+ x1186 3))))
(assert (not (= (+ 1 x5409) (+ 5 x3962))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (+ 4 x1186)))))
(assert (=> (> (+ 10000 1) x208) (not (= (+ 1 x1186) x208))))
(assert (= x3779 (and x1422 (not x5158))))
(assert (x399 x4090))
(assert (not (= (x1211 x361 1) (+ 1 x1186))))
(assert (=> (< (- x3575 1) 10000) (not (= (+ x3962 5) x3575))))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x208 1) x740))))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (+ x4054 2)))))
(assert (x4630 x2870))
(assert (x4630 x5007))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x935 1) x3230))))
(assert (not (= (+ 4 x98) (x1211 x3645 1))))
(assert (= x1181 (and (not x4138) x2358)))
(assert (x4630 x4768))
(assert (x4630 x5259))
(assert (x399 x4218))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x4799 1) x3230))))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x4198 1) x6069))))
(assert (=> (> (+ 10000 1) x4527) (not (= (+ 1 x2042) x4527))))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x3645 1) x3755))))
(assert (=> (< (- x3755 1) 10000) (not (= (x1211 x182 1) x3755))))
(assert (= (=> (and (= x5784 (x6031 (+ x2477 x5443))) (= (= 0 x5784) x3838)) (and (=> (not x3838) x1462) (=> (and (= x3972 x4048) x3838) x4620))) x536))
(assert (=> (> (+ 10000 1) x2845) (not (= (x1211 x3148 3) x2845))))
(assert (=> (= (x1211 x361 1) (x1211 x4293 1)) (= x4293 x361)))
(assert (not (= (x1211 x3576 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x1303 1) 10000) (not (= (x1211 x4610 1) x1303))))
(assert (x4630 x3149))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x4527 1))))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (x1211 x4800 1)))))
(assert (= (=> (= (= x3511 274184521717934524641157099916833587206) x2754) (and (=> (not x2754) x311) (=> (and (= 1 x1273) (not (= x3833 157198259)) (<= x833 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5561 4) (> 826074471 x3833) (= x5561 4) x2754 (= x3833 404098525) (>= x833 0) (not (> 4 x5561)) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x364) (< 0 x5292) (not (= 117300739 x3833)) (= (x3910 274184521717934524641157099916833587206) x5292) (= x2434 32)) x528))) x519))
(assert (= (x2603 x3071) (ite (= x3071 x2116) 0 (x6007 x3071))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x946 1)))))
(assert (= x893 (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x688) x4469) (= (= x4469 x688) x513)) (and (=> (and (<= 0 x3866) (= 32 x5757) (= (x1211 x928 1) x5772) x513 (= x928 (x5347 1461501637330902918203684832716283019655932542975 x5709)) (= (x3247 x5772) x3866) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3866) (= x2886 1)) x3105) (=> (not x513) x1987)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x1186 4))))
(assert (not (= (x1211 x4090 3) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4630 x6043))
(assert (x4630 x2119))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (x1211 x4090 3)))))
(assert (=> (< (- x1248 1) 10000) (not (= (x1211 x3755 1) x1248))))
(assert (x4630 x5364))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (x1211 x3755 1)))))
(assert (x4630 x3409))
(assert (not (= (+ x3962 3) (x1211 x5421 1))))
(assert (=> (< (- x5917 1) 10000) (not (= (x1211 x740 2) x5917))))
(assert (x4630 x4198))
(assert (x4630 x3482))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x2862 1) x2758))))
(assert (= x1125 (=> (and (= (x4941 x1018) x3751) (= (ite (= 0 x3751) (= x3751 0) (= x2897 0)) x568)) (and (=> (and x568 (= 0 x5602)) x2879) (=> (not x568) x2075)))))
(assert (=> (> (+ 10000 1) x83) (not (= (x1211 x4527 1) x83))))
(assert (=> (> (+ 10000 1) x361) (not (= x361 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (+ 4 x98)))))
(assert (=> (> (+ 10000 1) x83) (not (= (+ x3962 5) x83))))
(assert (x399 x3962))
(assert (=> (= (+ 4 x1186) (+ x2042 4)) (= x3992 x310)))
(assert (= x5884 (=> (and (< 0 x3630) (not (> 826074471 x5183)) (= x3424 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x1533 (x3337 (- x2939 4))) (not (= 826074471 x5183)) (= x933 (or (> x1533 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1533) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1533))))) (not (> 4 x2939)) (= 36 x2939) (= x2264 x5816) (= (x3910 274184521717934524641157099916833587202) x3630) (= x5183 1889567281) (= x2939 36)) (and (=> (not x933) x4401) (=> x933 x3915)))))
(assert (=> (> (+ 10000 1) x208) (not (= (+ 4 x3962) x208))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x4218 2))))
(assert (=> (= (x1211 x2862 1) (x1211 x5500 1)) (= x2862 x5500)))
(assert (=> (< (- x4644 1) 10000) (not (= (x1211 x1919 1) x4644))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x3755 1)))))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x946 1)))))
(assert (=> (= (x1211 x1852 1) (x1211 x4610 1)) (= x1852 x4610)))
(assert (=> (= (x1211 x1451 1) (x1211 x361 1)) (= x1451 x361)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (+ 4 x98))))
(assert (x4630 x4721))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x4218 2)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (> (+ 10000 1) x1338) (not (= (x1211 x5500 1) x1338))))
(assert (not (= (+ x3948 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (+ x2042 4)))))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x4293 1) x1956))))
(assert (=> (< (- x2417 1) 10000) (not (= (+ 2 x2042) x2417))))
(assert (= (and x6063 x5121) x2183))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x6069 1)))))
(assert (x4630 x4815))
(assert (=> (> (+ 10000 1) x4107) (not (= x4107 (x1211 x2862 1)))))
(assert (=> (= (x1211 x4610 1) (x1211 x3836 1)) (= x4610 x3836)))
(assert (not (= (+ 4 x3962) (x406 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x3543 1))))
(assert (x4630 x3535))
(assert (x4630 x917))
(assert (x4630 x4508))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (x1211 x3645 1)))))
(assert (= (=> (and (= x3330 (= x688 x5029)) (= x5029 (x5347 1461501637330902918203684832716283019655932542975 x688))) (and (=> (not x3330) x4893) (=> x3330 x1205))) x1099))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x3414 1) x3576))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x3409 1) x3543))))
(assert (not (= (+ x2042 4) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x3755) (not (= (+ x4054 2) x3755))))
(assert (not (= 1000000000000000000 (x1211 x3543 1))))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x4198 1) x4800))))
(assert (x6051 x4577))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x1112 1) x2601))))
(assert (x4630 x2272))
(assert (not (= 2514000705 (x1211 x2862 1))))
(assert (=> (< (- x5617 1) 10000) (not (= (+ x2042 3) x5617))))
(assert (x4630 x361))
(assert (x4630 x1962))
(assert (not (= 2835717307 (x1211 x3513 1))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 274184521717934524641157099916833587202 (+ x98 3))))
(assert (not (= (+ 1 x3948) (x1211 x2862 1))))
(assert (not (= (x1211 x3414 1) (+ 2 x3457))))
(assert (x4630 x2190))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x3992 2) x3645))))
(assert (x4630 x5916))
(assert (= (or x3684 x393) x860))
(assert (=> (= (x1211 x6069 1) (x1211 x3645 1)) (= x6069 x3645)))
(assert (x4630 x3568))
(assert (=> (= (x1211 x3645 1) (x1211 x5745 1)) (= x5745 x3645)))
(assert (=> (< (- x3786 1) 10000) (not (= (x1211 x6069 1) x3786))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (+ 1 x3948)))))
(assert (x251 x3412 x1043 x1535 x5026))
(assert (x4630 x3302))
(assert (x5138 x3374 x3178))
(assert (not (= 826074471 (x1211 x740 2))))
(assert (not (= (+ 4 x3962) (+ 1 x98))))
(assert (= x4491 (or (and (not x752) x4719) x2416)))
(assert (x4630 x5597))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ 2 x3962))))
(assert (not (= (x1211 x935 1) 18446744073709551615)))
(assert (= (=> (and (= x5204 (x3167 x4096)) (<= 0 x5204) (= x4096 (x1211 274184521717934524641157099916833587231 1)) (= (> x3864 x5204) x2458) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5204) (= x2367 x5637) (= 274184521717934524641157099916833587231 x3704)) (and (=> x2458 x2607) (=> (not x2458) x1538))) x5574))
(assert (x4630 x5937))
(assert (=> (> (+ 10000 1) x3409) (not (= (x1211 x3755 1) x3409))))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (x1211 x1956 1)))))
(assert (=> (< (- x1303 1) 10000) (not (= (+ x1186 4) x1303))))
(assert (=> (< (- x4107 1) 10000) (not (= x4107 (+ x2042 1)))))
(assert (not (= 2514000705 (x1211 x4800 1))))
(assert (=> (> (+ 10000 1) x4644) (not (= x4644 (x1211 x3645 1)))))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (+ 3 x2042)))))
(assert (=> (< (- x935 1) 10000) (not (= (+ x2042 5) x935))))
(assert (=> (< (- x3740 1) 10000) (not (= (+ x3962 3) x3740))))
(assert (x4630 x13))
(assert (x4630 x5066))
(assert (=> (< (- x4063 1) 10000) (not (= (x1211 x902 1) x4063))))
(assert (x4630 x2954))
(assert (not (= (x1211 x946 1) 3939881817)))
(assert (not (= (x1211 x2060 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 2835717307 (+ x3962 3))))
(assert (not (= (x1211 x1919 1) (+ 4 x98))))
(assert (x4630 x1674))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (x1211 x3576 1)))))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x3543 1) x561))))
(assert (=> (= (x1211 x5917 1) (x1211 x4284 1)) (= x4284 x5917)))
(assert (=> (< (- x2758 1) 10000) (not (= (+ 3 x3962) x2758))))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x6069 1) x1956))))
(assert (x399 x3786))
(assert (=> (> (+ 10000 1) x1112) (not (= (x1211 x3513 1) x1112))))
(assert (=> (> (+ 10000 1) x3992) (not (= (+ 3 x98) x3992))))
(assert (x4630 x4865))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x3414 1))))
(assert (x263 x4820 x5350))
(assert (not (= (+ x3962 2) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x1211 x4090 3)))))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x928 1) x1919))))
(assert (=> (= (x1211 x902 1) (x1211 x1919 1)) (= x902 x1919)))
(assert (not (= (x1211 x4610 1) 4168891048)))
(assert (not (= (x1211 x3836 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (= (x1211 x4799 1) (x1211 274184521717934524641157099916833587231 1)) (= 274184521717934524641157099916833587231 x4799)))
(assert (not (= (x1211 x310 2) (x1211 x3414 1))))
(assert (=> (= (x1211 x3836 1) (x1211 x208 1)) (= x208 x3836)))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 274184521717934524641157099916833587231 1) x3513))))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (x1211 x1956 1)))))
(assert (=> (> (+ 10000 1) x693) (not (= (+ 1 x3948) x693))))
(assert (=> (> (+ 10000 1) x3414) (not (= (+ x1186 4) x3414))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (+ x2042 1)))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (+ 2 x3457)))))
(assert (x4630 x3990))
(assert (=> (< (- x3166 1) 10000) (not (= x3166 (x1211 x4198 1)))))
(assert (not (= 3 (x1211 x4218 2))))
(assert (x4630 x3928))
(assert (not (= (+ x98 3) (x1211 x3513 1))))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x1451 1) x1089))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (x1211 x3836 1)))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x182 1)))))
(assert (not (= (+ 2 x4054) 1889567281)))
(assert (not (= 2 (x1211 x1852 1))))
(assert (not (= 117300739 (x1211 x5500 1))))
(assert (x433 x5316 x4248))
(assert (= x1638 (=> (and (= x5123 (x6031 (+ x1333 x2422))) (= x1141 (< x5123 x1333))) (and (=> (and (= x1912 x1330) (= 1 x4163) (= x1956 (x5347 1461501637330902918203684832716283019655932542975 x394)) (= (x1211 x1956 1) x384) (= x70 32) (not x1141)) x4470) (=> x1141 x4893)))))
(assert (=> (> (+ 10000 1) x935) (not (= (x1211 x4284 1) x935))))
(assert (=> (> (+ 10000 1) x4702) (not (= (+ x98 4) x4702))))
(assert (x6051 x3970))
(assert (x4630 x5925))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x928 1))))
(assert (x4630 x3994))
(assert (=> (= (x1211 x2862 1) (x1211 x3409 1)) (= x3409 x2862)))
(assert (not (= 3939881817 (x1211 x5917 1))))
(assert (=> (< (- x928 1) 10000) (not (= (+ 1 x98) x928))))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x4799 1) x4554))))
(assert (x4630 x2138))
(assert (=> (= (x1211 x1451 1) (x1211 x4527 1)) (= x1451 x4527)))
(assert (=> (= (x1211 x310 2) (x1211 x740 2)) (= x310 x740)))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 x3543 1)))))
(assert (not (= (x1211 x3543 1) 3939881817)))
(assert (=> (< (- x1112 1) 10000) (not (= (+ 1 x5409) x1112))))
(assert (x263 x4210 x1263))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x1849 1)))))
(assert (=> (< (- x2549 1) 10000) (not (= (x1211 x3576 1) x2549))))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x361 1) x4702))))
(assert (= x2032 (and (not x4701) x912)))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x3575) (not (= (x1211 x1849 1) x3575))))
(assert (= x2693 (or (and x1842 x4692) (and x6104 x2668) (and x781 x3920) (and (not x5366) x4841) (and x6041 x6021) (and x5910 x1234))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ x1186 1))))
(assert (x399 x928))
(assert (=> (< (- x2862 1) 10000) (not (= (x1211 x1956 1) x2862))))
(assert (not (= (x1211 x4293 1) (+ x3962 1))))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (x1211 x4218 2)))))
(assert (x4630 x297))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (+ 1 x3948)))))
(assert (not (= (+ x3962 2) (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x2758) (not (= (x1211 x3576 1) x2758))))
(assert (=> (< (- x2060 1) 10000) (not (= x2060 (+ 2 x3457)))))
(assert (not (= (x1211 x4610 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (ite (= x4086 x5502) x1530 (x5969 x5502)) (x942 x5502)))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x4293 1)))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x1451 1)))))
(assert (x4630 x4385))
(assert (x4630 x228))
(assert (=> (> (+ 10000 1) x561) (not (= (+ 1 x3962) x561))))
(assert (=> (< (- x4702 1) 10000) (not (= x4702 (+ 3 x2042)))))
(assert (not (= 3939881817 (+ 2 x3457))))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 274184521717934524641157099916833587231 1) x2601))))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (+ x2042 4)))))
(assert (= (=> (= (= 0 x945) x5654) (and (=> (not x5654) x1658) (=> x5654 x5361))) x4022))
(assert (not (= (x1211 x1112 1) (+ x2042 3))))
(assert (=> (= (x1211 x4527 1) (x1211 x5421 1)) (= x4527 x5421)))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x208 1))))
(assert (x4630 x5451))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (+ x3962 5)))))
(assert (x4630 x2874))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (x1211 x928 1)))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x208 1)))))
(assert (x433 x3159 x3581))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x4090 3))))
(assert (not (= (+ 1 x3948) 274184521717934524641157099916833587202)))
(assert true)
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 x902 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x4800 1))))
(assert (=> (> (+ 10000 1) x3414) (not (= (+ 2 x4054) x3414))))
(assert (=> (> (+ 10000 1) x4293) (not (= (+ x2042 2) x4293))))
(assert (x4630 x3553))
(assert (=> (> (+ 10000 1) x902) (not (= (+ 3 x3962) x902))))
(assert (x4630 x1612))
(assert (not (= 2743638299 (x1211 x4800 1))))
(assert (=> (< (- x3740 1) 10000) (not (= (x1211 x2862 1) x3740))))
(assert (=> (< (- x935 1) 10000) (not (= (+ 1 x1186) x935))))
(assert (not (= (x1211 x3992 2) (x1211 x946 1))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (+ 4 x2042)))))
(assert (not (= (x1211 x3645 1) (+ x2042 1))))
(assert (x4630 x2270))
(assert (=> (< (- x1112 1) 10000) (not (= (x1211 x4284 1) x1112))))
(assert (not (= (x1211 x3513 1) 2)))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x4198 1) x310))))
(assert (=> (= (x1211 x3645 1) (x1211 274184521717934524641157099916833587231 1)) (= 274184521717934524641157099916833587231 x3645)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 3 x3962))))
(assert (= (=> (and (= x3719 (ite (= 0 x3428) (= 0 x3428) (= 0 x463))) (= (x1823 x4310) x3428)) (and (=> (not x3719) x1859) (=> (and (= 0 x2716) x3719) x3663))) x4675))
(assert (= (x5966 x1624) 0))
(assert (= (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)) x3323) (= (= 0 x1410) x5170) (= x1475 (ite (not x5170) 1 0)) (= x4028 (ite (< x3323 x2043) 1 0)) (= x1547 (x5347 x1475 x4028)) (= (= 0 x1547) x1489)) (and (=> x1489 x3536) (=> (not x1489) x3198))) x3466))
(assert (=> (> (+ 10000 1) x1219) (not (= (+ 5 x2042) x1219))))
(assert (not (= (+ x3962 5) (+ 4 x1186))))
(assert (not (= (x1211 x928 1) (+ x2042 2))))
(assert (= (or (and (not x187) x2594) (and (not x3418) x5071)) x1810))
(assert (not (= (+ 2 x2042) 1)))
(assert (x4630 x1959))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x3409 1))))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x5917 1) x4017))))
(assert (x4630 x3713))
(assert (= x5603 (=> (= (= x4063 274184521717934524641157099916833587202) x5020) (and (=> (and (not (= x3995 117300739)) (not (< x3039 4)) (>= x4558 0) x5020 (= 404098525 x3995) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x697) (= (x3910 274184521717934524641157099916833587202) x1131) (= x3039 4) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4558) (= 1 x687) (= 4 x3039) (= 32 x2800) (> 826074471 x3995) (not (= x3995 157198259)) (< 0 x1131)) x3700) (=> (not x5020) x1277)))))
(assert (not (= (x406 1) (x1211 x4293 1))))
(assert (not (= (x1211 x4293 1) (x1211 x4090 3))))
(assert (=> (= (x1211 x4799 1) (x1211 x4800 1)) (= x4799 x4800)))
(assert (=> (> (+ 10000 1) x2060) (not (= (x1211 x1852 1) x2060))))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x1112 1) x5421))))
(assert (=> (= (x1211 x4017 1) (x1211 x4527 1)) (= x4017 x4527)))
(assert (=> (= (x1211 x935 1) (x1211 274184521717934524641157099916833587231 1)) (= x935 274184521717934524641157099916833587231)))
(assert (not (= 826074471 (x1211 x4800 1))))
(assert (x4630 x5517))
(assert (=> (< (- x902 1) 10000) (not (= (+ 1 x1186) x902))))
(assert (=> (> (+ 10000 1) x3513) (not (= x3513 (+ x3962 1)))))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x4527 1) x3511))))
(assert (not (= 274184521717934524641157099916833587202 (+ x3457 2))))
(assert (=> (= (x1211 x946 1) (x1211 x3543 1)) (= x946 x3543)))
(assert (= x5728 (=> (and (= x752 (> x1576 0)) (= x1576 (x5474 x2958))) (and (=> x752 x5398) (=> (and (= x1381 x5082) (not x752)) x1246)))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x3513 1)))))
(assert (=> (= (x1211 x3645 1) (x1211 x5421 1)) (= x3645 x5421)))
(assert (= (=> (and (= (x3931 x717) x4000) (= (ite (= 0 x4000) (= x4000 0) (= x3781 0)) x3062)) (and (=> (and x3062 (= x41 0)) x770) (=> (not x3062) x1122))) x2556))
(assert (= x4417 (and (not x4616) x3718)))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x4610 1) x5800))))
(assert (=> (< (- x5745 1) 10000) (not (= (x1211 x1919 1) x5745))))
(assert (=> (> (+ 10000 1) x3166) (not (= (x1211 x5917 1) x3166))))
(assert (=> (< (- x4218 1) 10000) (not (= x4218 (x1211 x361 1)))))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x1451 1) x2696))))
(assert (not (= 826074471 (x1211 x1852 1))))
(assert (=> (< (- x4063 1) 10000) (not (= (+ 5 x3962) x4063))))
(assert (= (and x107 (not x160)) x414))
(assert (= x2515 (or (and (not x2121) x3925) (and x4288 x2220))))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x3755 1) x2417))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x928 1) x3771))))
(assert (= (and (not x3556) x940) x4368))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x3992 2) x2601))))
(assert (not (= (x1211 x4284 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x4630 x1667))
(assert (=> (< (- x3166 1) 10000) (not (= (+ x2042 4) x3166))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ 4 x1186))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x5421 1)))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1211 x208 1))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (= (x1211 x4017 1) (x1211 x4198 1)) (= x4198 x4017)))
(assert (x4630 x2276))
(assert (=> (< (- x2862 1) 10000) (not (= (+ x3962 1) x2862))))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x3414 1) x3255))))
(assert (x4630 x879))
(assert (= (=> (= x3307 (= 0 x3022)) (and (=> (not x3307) x4126) (=> x3307 x5361))) x4367))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x3148 3) x1089))))
(assert (x5138 x1872 x4973))
(assert (=> (< (- x4113 1) 10000) (not (= x4113 (x1211 x2862 1)))))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x2862 1) x6069))))
(assert (x2660 x1368 x274))
(assert (=> (< (- x2820 1) 10000) (not (= (+ 4 x1186) x2820))))
(assert (=> (> (+ 10000 1) x2601) (not (= x2601 (+ 2 x2042)))))
(assert (not (= (x1211 x3992 2) (x1211 x208 1))))
(assert (not (= (x1211 x2060 1) (+ 2 x2042))))
(assert (= (ite (and x2908 (not x61) x3386) (x4012 x4849) (x3791 x4849)) (x4905 x4849)))
(assert (= x5838 (=> (and (= x661 x6069) (= x640 (= x1633 x6069))) (and (=> (and (= x4669 (x1211 x6069 1)) (= 32 x6099) (= x1680 (x4033 x4669)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1680) (= 1 x1427) x640 (>= x1680 0)) x5439) (=> (not x640) x1290)))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (+ 1 x1186)))))
(assert (not (= 1 (x1211 x1852 1))))
(assert (not (= (+ 1 x2042) (+ 2 x3962))))
(assert (=> (> (+ 10000 1) x5617) (not (= x5617 (x1211 x6069 1)))))
(assert (not (= (x1211 x4800 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x3543 1))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (x1211 x935 1)))))
(assert (not (= (+ 5 x2042) (x1211 x4017 1))))
(assert (x4630 x4613))
(assert (x4630 x379))
(assert (= x2683 (=> (= (= x380 0) x3616) (and (=> (not x3616) x898) (=> x3616 x3198)))))
(assert (= (x1110 x3099) (ite (and x912 (not x4701) x832) (x6007 x3099) (ite (and (not x832) x912 (not x4701) (not x1605)) (x2603 x3099) (x1407 x3099)))))
(assert (=> (< (- x561 1) 10000) (not (= (x406 1) x561))))
(assert (not (= (+ x3962 3) (x1211 x3576 1))))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (x1211 x5421 1)))))
(assert (not (= (+ 3 x98) (x1211 x3645 1))))
(assert (not (= 3939881817 (+ 4 x98))))
(assert (x4630 x1698))
(assert (not (= (+ x1186 3) (x1211 x3148 3))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x1186 4))))
(assert (=> (> (+ 10000 1) x4284) (not (= x4284 (x1211 x4284 1)))))
(assert (x4630 x2775))
(assert (not (= (x1211 x3992 2) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x4218 2))))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x4284 1) x3230))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (+ x2042 1)))))
(assert (=> (< (- x4610 1) 10000) (not (= x4610 (x1211 x4017 1)))))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (x1211 x3513 1)))))
(assert (not (= (+ x2042 1) (x1211 x4090 3))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x4284 1)))))
(assert (not (= 404098525 (x1211 x1956 1))))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (< (- x3148 1) 10000) (not (= (+ 1 x2042) x3148))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (x1211 x2862 1)))))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x3992 2) x3992))))
(assert (=> (= (x1211 x361 1) (x1211 x208 1)) (= x361 x208)))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x1956 1) x561))))
(assert (not (= (x1211 x1852 1) (+ x1186 1))))
(assert (=> (< (- x83 1) 10000) (not (= (+ 2 x3457) x83))))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x3992 2) x4799))))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x4610 1)))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (x1211 x4799 1)))))
(assert (not (= 157198259 (x1211 x3513 1))))
(assert (not (= (x1211 x928 1) (+ x2042 4))))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x3255) x4309) (and (=> (not x4309) x2429) (=> x4309 x3800))) x1200))
(assert (= x581 (and x1175 x5023)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x4284 1))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (x1211 x1849 1)))))
(assert (not (= (x1211 x3414 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (= (x1211 x3409 1) (x1211 x3755 1)) (= x3409 x3755)))
(assert (x6051 x314))
(assert (not (= (x1211 x3148 3) (x1211 x4198 1))))
(assert (x4630 x4363))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1211 x208 1))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x5917 1)))))
(assert (=> (> (+ 10000 1) x3543) (not (= x3543 (+ x98 3)))))
(assert (=> (= (x1211 x1956 1) (x1211 x4800 1)) (= x4800 x1956)))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x5421 1) x2154))))
(assert (=> (< (- x5617 1) 10000) (not (= (x1211 x5917 1) x5617))))
(assert (not (= 117300739 (x1211 x4527 1))))
(assert (not (= (x1211 x4198 1) (+ x4054 2))))
(assert (= 0 (x5810 x4879)))
(assert (=> (> (+ 10000 1) x3409) (not (= (x1211 x6069 1) x3409))))
(assert (not (= (x1211 x4284 1) (+ x98 3))))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x3755 1)))))
(assert (not (= (x1211 x902 1) 4294967296)))
(assert (not (= (x1211 x5421 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (not (= (x1211 x4017 1) (x1211 x310 2))))
(assert (=> (= (x1211 x2862 1) (x1211 x4284 1)) (= x4284 x2862)))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x1451 1)))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (+ 3 x1186)))))
(assert (not (= (+ 1 x3948) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (+ 1 x3962)))))
(assert (= x3475 (=> (and (= x671 4) (= (x5347 1461501637330902918203684832716283019655932542975 x2706) x2154) (= x276 (x6031 (+ x4873 x5764))) (= (x1946 x3118) x2706) (= (x3910 x2154) x1374) (= (= x1374 0) x260)) (and (=> (not x260) x2807) (=> x260 x3198)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x935 1))))
(assert (=> (> (+ 10000 1) x5917) (not (= (x1211 x5745 1) x5917))))
(assert (=> (< (- x928 1) 10000) (not (= (+ 4 x98) x928))))
(assert (= x1041 (and x3565 (not x1785))))
(assert (=> (< (- x4610 1) 10000) (not (= (x1211 x4218 2) x4610))))
(assert (x4630 x5234))
(assert (not (= (+ x5409 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (+ x1186 3)))))
(assert (x4630 x959))
(assert (=> (> (+ 10000 1) x1919) (not (= (x1211 x3513 1) x1919))))
(assert (=> (< (- x1248 1) 10000) (not (= (+ 3 x3962) x1248))))
(assert (=> (= (x1211 x1919 1) (x1211 x208 1)) (= x208 x1919)))
(assert (=> (> (+ 10000 1) x4554) (not (= x4554 (x1211 x946 1)))))
(assert (x4630 x1562))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x946 1)))))
(assert (= (x5589 x5985) (ite (= x5985 x3124) x6002 (x5930 x5985))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x1956 1))))
(assert (x4630 x1263))
(assert (not (= (x1211 x4017 1) (x1211 x4090 3))))
(assert (not (= (+ 5 x3962) 826074471)))
(assert (= x1999 (and x1579 (not x1230))))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x1451 1) x3255))))
(assert (=> (> (+ 10000 1) x3771) (not (= (+ 5 x2042) x3771))))
(assert (=> (= (x1211 x946 1) (x1211 x902 1)) (= x946 x902)))
(assert (=> (= (x1211 x3576 1) (x1211 x5917 1)) (= x3576 x5917)))
(assert (not (= (x1211 x5917 1) 2743638299)))
(assert (= (=> (and (= 3 x5779) x972 (= x3611 x1176) (<= x5756 1461501637330902918203684832716283019655932542975) (= (> (x3910 274184521717934524641157099916833587202) 0) x1729) (= x2239 (x1302 274184521717934524641157099916833587231)) (= x633 x1779) (<= x469 1461501637330902918203684832716283019655932542975) (<= 0 x2239) (= x469 x4123) (<= x633 1461501637330902918203684832716283019655932542975) (= x1176 x688) (<= 0 x5756) (= x5385 x2025) (> x297 99) x1729 (<= x2025 1461501637330902918203684832716283019655932542975) (= x4123 x105) (= x4194 false) (>= 1461501637330902918203684832716283019655932542975 x688) (= x5194 x1574) (= x298 x2452) x6156 (<= 0 x688) x1108 (= (x1302 274184521717934524641157099916833587202) x4504) (= x1408 x4545) (= x6156 (= x4052 x5385)) (= false x2804) (= x812 (x1302 274184521717934524641157099916833587206)) (= x5595 3939881817) (= (< 0 (x3910 274184521717934524641157099916833587231)) x1108) (>= x812 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x297) true) (= false x1736) (<= 0 x633) (= x1190 false) (= x4052 x1176) (>= x3611 0) (>= 1461501637330902918203684832716283019655932542975 x3611) (<= 0 x4504) (<= 0 x469) (= x972 (< 0 (x3910 274184521717934524641157099916833587206))) (>= x2025 0) (= x4140 x5076)) x4258) x4724))
(assert (x4630 x5219))
(assert (=> (< (- x3576 1) 10000) (not (= (x1211 x3148 3) x3576))))
(assert (=> (< (- x3771 1) 10000) (not (= (+ x3962 1) x3771))))
(assert (= (ite (and (not x4701) x912 x832) (x6007 x3071) (ite (and (not x832) (not x4701) (not x1605) x912) (x2603 x3071) (x1407 x3071))) (x1110 x3071)))
(assert (x4630 x4997))
(assert (=> (< (- x83 1) 10000) (not (= (x1211 x946 1) x83))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (+ 5 x3962)))))
(assert (not (= (x1211 x740 2) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x4630 x4343))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x4800 1)))))
(assert (=> (> (+ 10000 1) x4610) (not (= x4610 (+ 1 x2042)))))
(assert (= (x1227 x6164) (ite (= x5304 x6164) 0 (x4838 x6164))))
(assert (=> (> (+ 10000 1) x3543) (not (= (x1211 x4218 2) x3543))))
(assert (=> (< (- x361 1) 10000) (not (= (x1211 x935 1) x361))))
(assert (x4630 x1324))
(assert (=> (= (x1211 x3755 1) (x1211 x1956 1)) (= x3755 x1956)))
(assert (= (=> (and (= (x5474 x301) x5259) (= (> x5259 0) x2665)) (and (=> (not x2665) x3198) (=> x2665 x3759))) x5030))
(assert (=> (> (+ 10000 1) x693) (not (= (+ x2042 1) x693))))
(assert (=> (< (- x361 1) 10000) (not (= (x1211 x5917 1) x361))))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x208 1) x4527))))
(assert (=> (> (+ 10000 1) x3230) (not (= (x1211 x4610 1) x3230))))
(assert (= (and x4168 x118) x1478))
(assert (x4630 x4505))
(assert (not (= (+ 4 x2042) (x1211 x1112 1))))
(assert (= x3525 (and x2564 (not x36))))
(assert (x4630 x2136))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x4799 1)))))
(assert (x4630 x901))
(assert (=> (< (- x3645 1) 10000) (not (= (x1211 x935 1) x3645))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x1919 1))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (+ x5409 1)))))
(assert (=> (< (- x740 1) 10000) (not (= x740 (+ x2042 1)))))
(assert (not (= 2743638299 (x1211 x4284 1))))
(assert (=> (> (+ 10000 1) x4400) (not (= (x1211 x2060 1) x4400))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x2862 1)))))
(assert (not (= (x1211 x1112 1) (+ 1 x1186))))
(assert (not (= (+ 3 x98) (+ x3962 2))))
(assert (not (= 3 (x1211 x3513 1))))
(assert (=> (> (+ 10000 1) x310) (not (= x310 (x1211 x3543 1)))))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x3409 1) x5617))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x3576 1)))))
(assert (not (= (x1211 x4218 2) (x1211 x4799 1))))
(assert (=> (> (+ 10000 1) x3786) (not (= (x1211 x5421 1) x3786))))
(assert (not (= 18446744073709551615 (+ 2 x4054))))
(assert (not (= (+ x98 4) (x1211 x5500 1))))
(assert (not (= (x1211 x3755 1) 117300739)))
(assert (not (= (+ x3962 5) (x1211 274184521717934524641157099916833587231 1))))
(assert (=> (> (+ 10000 1) x3543) (not (= (+ x2042 4) x3543))))
(assert (=> (= (x1211 x2060 1) (x1211 x3543 1)) (= x2060 x3543)))
(assert (=> (= (x1211 x4198 1) (x1211 x902 1)) (= x4198 x902)))
(assert (not (= (x1211 x361 1) 274184521717934524641157099916833587231)))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x3148 3) x1467))))
(assert (=> (< (- x3836 1) 10000) (not (= x3836 (x1211 x4610 1)))))
(assert (=> (> (+ 10000 1) x2060) (not (= x2060 (x1211 x4218 2)))))
(assert (= x5488 (and x3245 (not x3805))))
(assert (= 0 (x4838 x6164)))
(assert (x4630 x380))
(assert (not (= 404098525 (+ 1 x2042))))
(assert (=> (> (+ 10000 1) x3755) (not (= x3755 (x1211 x2862 1)))))
(assert (x4630 x561))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ 1 x5409))))
(assert (x399 x1598))
(assert (=> (> (+ 10000 1) x3255) (not (= x3255 (x1211 x5917 1)))))
(assert (=> (= (+ x1186 4) (+ x3962 4)) (= x310 x740)))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x4284 1)))))
(assert (x4630 x5926))
(assert (x4630 x3251))
(assert (not (= (+ x1186 4) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x3409 1) x3771))))
(assert (not (= (x1211 x1919 1) 2514000705)))
(assert (not (= (x1211 x310 2) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x1956 1)))))
(assert (= (ite (= x1412 x3177) x162 (x3167 x1412)) (x3185 x1412)))
(assert (not (= (+ 1 x3962) (x1211 x5500 1))))
(assert (x4630 x1304))
(assert (x4630 x91))
(assert (=> (< (- x693 1) 10000) (not (= x693 (x1211 x4799 1)))))
(assert (not (= (x1211 x3414 1) (+ 1 x1186))))
(assert (not (= (+ 3 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (= (x1211 x3576 1) (x1211 x3645 1)) (= x3645 x3576)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 1 x2042))))
(assert (x4630 x4559))
(assert (=> (= (x1211 x3755 1) (x1211 x5917 1)) (= x3755 x5917)))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x399 x5409))
(assert (= x1207 (and (not x3212) x259)))
(assert (x4630 x2505))
(assert (x6051 x197))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x4198 1) x561))))
(assert (x399 x1956))
(assert (x4630 x5003))
(assert (not (= (x1211 x361 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (not (= 274184521717934524641157099916833587202 (x1211 x2862 1))))
(assert (not (= (x1211 x1451 1) 274184521717934524641157099916833587231)))
(assert (x4630 x5414))
(assert (=> (= (x1211 x3414 1) (x1211 x2060 1)) (= x2060 x3414)))
(assert (=> (< (- x3992 1) 10000) (not (= (x1211 x4799 1) x3992))))
(assert (x4630 x1629))
(assert (x4630 x1751))
(assert (x4630 x985))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (x1211 x2060 1)))))
(assert (=> (= (x1211 x5745 1) (x1211 x3836 1)) (= x3836 x5745)))
(assert (=> (> (+ 10000 1) x2820) (not (= (+ x5409 1) x2820))))
(assert (=> (> (+ 10000 1) x561) (not (= x561 (x1211 x3836 1)))))
(assert (=> (= (x1211 x3645 1) (x1211 x2862 1)) (= x2862 x3645)))
(assert (not (= (x1211 x3513 1) (+ x1186 4))))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (x1211 x4800 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x3645 1)))))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x3148 3) x3543))))
(assert (=> (< (- x2154 1) 10000) (not (= (x1211 x361 1) x2154))))
(assert (x4630 x816))
(assert (= (=> (= (= x1580 0) x4314) (and (=> x4314 x5361) (=> (not x4314) x4547))) x2193))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ x1186 4))))
(assert (not (= (+ 4 x2042) 274184521717934524641157099916833587202)))
(assert (=> (= (x1211 x2862 1) (x1211 x902 1)) (= x2862 x902)))
(assert (=> (= (x1211 x4198 1) (x1211 x4527 1)) (= x4198 x4527)))
(assert (= x5428 (=> (= (= x180 0) x4145) (and (=> x4145 x3198) (=> (not x4145) x5013)))))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (x1211 x5500 1)))))
(assert (x399 x561))
(assert (=> (< (- x3575 1) 10000) (not (= x3575 (+ x98 1)))))
(assert (x399 x3771))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x740 2))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x6069 1)))))
(assert (=> (> (+ 10000 1) x2696) (not (= x2696 (x1211 x4610 1)))))
(assert (=> (> (+ 10000 1) x2758) (not (= x2758 (x1211 x4800 1)))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x4017 1)))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x4800 1) x5745))))
(assert (not (= 18446744073709551615 (x1211 x3148 3))))
(assert (x4630 x5911))
(assert (x6051 x456))
(assert (=> (< (- x1303 1) 10000) (not (= (+ 2 x3457) x1303))))
(assert (not (= (x1211 x182 1) (+ x2042 3))))
(assert (=> (= (x1211 x1849 1) (x1211 x928 1)) (= x1849 x928)))
(assert (x4630 x2987))
(assert (x4630 x4009))
(assert (not (= (x1211 x361 1) (+ 4 x3962))))
(assert (= (and x1417 (not x2516)) x5864))
(assert (=> (< (- x1598 1) 10000) (not (= x1598 (x1211 x1451 1)))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (x1211 x740 2)))))
(assert (x4630 x5481))
(assert (=> (< (- x6069 1) 10000) (not (= (x1211 x1849 1) x6069))))
(assert (not (= (x1211 x946 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (= (and (not x3978) x5552) x4869))
(assert (=> (> (+ 10000 1) x5800) (not (= (x406 1) x5800))))
(assert (= x2908 (and x4581 x487)))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (x1211 x3513 1)))))
(assert (= (x5966 x2492) 0))
(assert (=> (> (+ 10000 1) x83) (not (= x83 (x1211 x4800 1)))))
(assert (x4630 x1718))
(assert (= x3759 (=> (and (= x4577 (x5601 x3175)) (= (< 0 x1635) x5920) (= x1635 (x3725 x3823)) (= x3175 (x6031 (+ x301 32)))) (and (=> (not x5920) x3198) (=> x5920 x684)))))
(assert (=> (> (+ 10000 1) x1467) (not (= x1467 (+ 1 x3962)))))
(assert (not (= (x1211 x3409 1) 1889567281)))
(assert (=> (< (- x6037 1) 10000) (not (= (+ x2042 2) x6037))))
(assert (= x5861 (and x4421 x2639)))
(assert (not (= (+ 1 x1186) (x1211 x5421 1))))
(assert (not (= 117300739 (x1211 x6069 1))))
(assert (not (= (x1211 x3148 3) (x1211 x902 1))))
(assert (x4630 x1220))
(assert (not (= 274184521717934524641157099916833587231 (x1211 x4610 1))))
(assert (x4630 x943))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x2862 1) x2601))))
(assert (= (=> (= (= x4365 0) x2137) (and (=> x2137 x3198) (=> (not x2137) x3926))) x1486))
(assert (= (ite (and x5626 x757 (not x305)) (x4461 x2951) (x4892 x2951)) (x3314 x2951)))
(assert (x4630 x2720))
(assert (= (and (not x260) x1025) x289))
(assert (x4630 x3296))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x4090 3) x3166))))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (+ 1 x98)))))
(assert (=> (< (- x902 1) 10000) (not (= (x1211 x1112 1) x902))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x310 2))))
(assert (=> (< (- x1451 1) 10000) (not (= (x1211 x1852 1) x1451))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ 3 x2042))))
(assert (x4630 x3301))
(assert (=> (> (+ 10000 1) x928) (not (= (+ x1186 4) x928))))
(assert (x4630 x6165))
(assert (= x4646 (=> (= x1291 (= 274184521717934524641157099916833587206 x952)) (and (=> (not x1291) x1926) (=> (and (not (> 826074471 x2544)) (= x2544 826074471) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2836) x1291 (<= 0 x2836) (not (< x1350 4)) (= x1350 x2144) (< 0 x1981) (= 32 x82) (= 1 x2663) (= x5882 22270923681254677845691103109158760375340177724800803888364822332811285364736) (= x1350 4) (= (x3910 274184521717934524641157099916833587206) x1981)) x3317)))))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (x406 1)))))
(assert (x4630 x2212))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x1919 1)))))
(assert (x4630 x4239))
(assert (not (= 4168891048 (+ x1186 3))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (+ x3457 2)))))
(assert (=> (< (- x1956 1) 10000) (not (= (x1211 x1919 1) x1956))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x4198 1)))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (+ 2 x3457)))))
(assert (not (= (x1211 x1852 1) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x1849 1)))))
(assert (not (= (x1211 x4527 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x4630 x579))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x5745 1) x4554))))
(assert (=> (> (+ 10000 1) x4644) (not (= (x1211 x1451 1) x4644))))
(assert (=> (< (- x3992 1) 10000) (not (= x3992 (+ 5 x2042)))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 18446744073709551615)))
(assert (=> (> (+ 10000 1) x740) (not (= (+ x3962 1) x740))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ x4054 2))))
(assert (= (=> (and (= x1013 x3453) (= x5326 x607)) x3885) x5005))
(assert (=> (< (- x2154 1) 10000) (not (= (+ 2 x3457) x2154))))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x902 1) x1852))))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x5917 1) x4527))))
(assert (x251 x12 x5056 x1969 x905))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x406 1)))))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 x4799 1) x361))))
(assert (not (= 1 (x1211 x1849 1))))
(assert (x4630 x5494))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x1211 x361 1)))))
(assert (x4630 x2753))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (+ 4 x98)))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (+ 3 x1186)))))
(assert (=> (< (- x361 1) 10000) (not (= x361 (x1211 x928 1)))))
(assert (=> (> (+ 10000 1) x740) (not (= (+ x3962 5) x740))))
(assert (not (= 117300739 (x1211 x208 1))))
(assert (=> (= (x1211 274184521717934524641157099916833587231 1) (x1211 x1956 1)) (= 274184521717934524641157099916833587231 x1956)))
(assert (=> (> (+ 10000 1) x4113) (not (= (x406 1) x4113))))
(assert (=> (> (+ 10000 1) x902) (not (= x902 (x1211 x946 1)))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1211 x310 2))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x361 1))))
(assert (=> (= (x1211 x208 1) (x1211 x6069 1)) (= x6069 x208)))
(assert (=> (> (+ 10000 1) x5745) (not (= x5745 (x1211 x4799 1)))))
(assert (not (= (x1211 x1852 1) 117300739)))
(assert (=> (= (x1211 x4017 1) (x1211 x5917 1)) (= x4017 x5917)))
(assert (x4630 x4702))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x3414 1) x6069))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (+ 1 x3948)))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x4610 1)))))
(assert (= (or x5139 (and x6057 x4356)) x1356))
(assert (= true x5099))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x5421 1) x2601))))
(assert (=> (< (- x4800 1) 10000) (not (= x4800 (+ 1 x98)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x3755 1))))
(assert (x4630 x5252))
(assert (=> (> (+ 10000 1) x5917) (not (= x5917 (x1211 x2862 1)))))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x3992 2) x4113))))
(assert (= (x5509 (- x3857 x411)) 0))
(assert (= x547 (and x5222 x4984)))
(assert (x4630 x2542))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x3543 1)))))
(assert (= (x1584 128) (x51 128)))
(assert (=> (< (- x561 1) 10000) (not (= (+ x2042 3) x561))))
(assert (= (=> (and (= x3743 x5895) (= x5668 x5478)) x2986) x3780))
(assert (= x2638 (and x1995 (not x3935))))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (+ 3 x3962)))))
(assert (= 0 (x1448 x2296)))
(assert (not (= (x1211 x1919 1) 3)))
(assert (=> (> (+ 10000 1) x952) (not (= x952 (x1211 x4284 1)))))
(assert (=> (= (x1211 x3836 1) (x1211 x4198 1)) (= x4198 x3836)))
(assert (not (= 274184521717934524641157099916833587202 (+ 1 x3962))))
(assert (= x3881 (=> (and (= x2270 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028))) (= (= x1028 0) x6016) (= (ite (> x5681 x2270) 1 0) x5799) (= (ite (not x6016) 1 0) x3246) (= (uninterp_mod (* x2921 x5742) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1028) (= x5524 (x5347 x3246 x5799)) (= (= x5524 0) x3016)) (and (=> (not x3016) x5361) (=> x3016 x3202)))))
(assert (not (= (+ x2042 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (x1211 x3148 3) (x1211 x3836 1))))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x5421 1) x4702))))
(assert (= x3204 (=> (and (= x2152 (x2790 x1155)) (= x4416 (> x2152 0))) (and (=> (and (= 0 x4929) (not x4416)) x2656) (=> x4416 x86)))))
(assert (not (= (x1211 x3645 1) (x1211 x3992 2))))
(assert (= (=> (and (= (x3337 (- x1340 4)) x3135) (> x2407 0) (= 1889567281 x5686) (not (< x1340 4)) (not (= 826074471 x5686)) (= 36 x1340) (= x2407 (x3910 274184521717934524641157099916833587202)) (= x4800 x4546) (not (> 826074471 x5686)) (= x1202 (or (> x3135 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3135 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x3135)))) (= x690 x1340) (= x811 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (and (=> x1202 x227) (=> (not x1202) x934))) x4187))
(assert (not (= (x1211 x946 1) (x1211 x3148 3))))
(assert (= x3944 (or (and x5978 (not x4047)) (and x3028 (not x2135)) (and (not x2229) x27))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x4610 1))))
(assert (=> (> (+ 10000 1) x2862) (not (= (x1211 x5500 1) x2862))))
(assert (x4630 x5977))
(assert (not (= (x1211 x310 2) 2835717307)))
(assert (not (= (+ 1 x1186) 2)))
(assert (x4630 x2222))
(assert (x4630 x2577))
(assert (=> (< (- x208 1) 10000) (not (= x208 (+ x2042 2)))))
(assert (x4630 x3460))
(assert (=> (< (- x6037 1) 10000) (not (= (+ x3962 4) x6037))))
(assert (not (= (x1211 x3409 1) 18446744073709551615)))
(assert (not (= (x1211 x1852 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (> (+ 10000 1) x5800) (not (= x5800 (+ x3948 1)))))
(assert (=> (> (+ 10000 1) x361) (not (= (x1211 x310 2) x361))))
(assert (=> (< (- x693 1) 10000) (not (= x693 (+ x1186 3)))))
(assert (not (= (x1211 x3513 1) (+ 4 x2042))))
(assert (=> (< (- x1775 1) 10000) (not (= x1775 (x1211 x4284 1)))))
(assert (=> (= (x1211 x361 1) (x1211 x1852 1)) (= x361 x1852)))
(assert (= (x5966 x1472) 0))
(assert (=> (< (- x935 1) 10000) (not (= (+ x3457 2) x935))))
(assert (not (= (x1211 x182 1) (+ 4 x2042))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (+ x2042 1)))))
(assert (= x5212 (=> (and (= x4273 4) (= (= 0 x5189) x2741) (= x5189 (x3910 x1219)) (= (x6031 (+ x4256 x2593)) x3781) (= (x5347 1461501637330902918203684832716283019655932542975 x486) x1219) (= x486 (x1323 x6164))) (and (=> (not x2741) x3584) (=> x2741 x3198)))))
(assert (x4630 x946))
(assert (= (ite (and x2869 x3512 (not x3708)) (x2104 x4014) (ite (and (not x3708) x2869 (not x3512) (not x5704)) (x2037 x4014) (x756 x4014))) (x4732 x4014)))
(assert (x4630 x3029))
(assert (=> (> (+ 10000 1) x2601) (not (= (+ 1 x3962) x2601))))
(assert (not (= (+ 1 x3948) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x182 1))))
(assert (=> (< (- x3230 1) 10000) (not (= (+ x3962 5) x3230))))
(assert (=> (< (- x561 1) 10000) (not (= x561 (+ 4 x1186)))))
(assert (=> (= (x1211 x3409 1) (x1211 x208 1)) (= x208 x3409)))
(assert (= (=> (and (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x511)) x2722) (= (x5435 x5515) x511) (= (> 0 x2722) x322) (= x5515 (x6031 (+ 32 x5267)))) (and (=> x322 x3198) (=> (and (= (x5953 x5267) x3058) (= x2203 x511) (= x458 x2203) (= (> x3058 1) x6045) (not x322) (not x6045)) x1900))) x1747))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1211 x1956 1))))
(assert (=> (= (x1211 x928 1) (x1211 x3414 1)) (= x928 x3414)))
(assert (x6051 x85))
(assert (=> (< (- x6069 1) 10000) (not (= x6069 (x1211 x1919 1)))))
(assert (not (= (x1211 x1112 1) (+ x4054 2))))
(assert (not (= (x1211 x928 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x1211 x3414 1) 274184521717934524641157099916833587206)))
(assert (not (= (+ 1 x98) (+ 3 x98))))
(assert (=> (> (+ 10000 1) x3148) (not (= x3148 (+ 1 x3948)))))
(assert (= (x789 x1780) 0))
(assert (= 0 (x4192 x5039)))
(assert (x4630 x4634))
(assert (=> (< (- x4554 1) 10000) (not (= (x1211 x902 1) x4554))))
(assert (x4630 x2261))
(assert (not (= (+ x1186 1) (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x3255) (not (= (x1211 x4527 1) x3255))))
(assert (not (= (x1211 x6069 1) 1)))
(assert (not (= (x1211 x3543 1) (x406 1))))
(assert (x4630 x5137))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x208 1)))))
(assert (= (=> (and (= (x3910 274184521717934524641157099916833587206) x4476) (not (> 4 x5565)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3304) (= x5565 36) (< 0 x4476) (= x3258 (x3337 (- x5565 4))) (= x1586 x5816) (not (= 826074471 x5707)) (= 36 x5565) (= x198 (or (> x3258 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3258)) (< x3258 32)))) (= x5707 1889567281) (not (> 826074471 x5707))) (and (=> (not x198) x672) (=> x198 x1990))) x3993))
(assert (x5138 x688 x5598))
(assert (= (=> (and (= x2381 (x6031 (+ x2258 32))) (= (x352 x2381) x13) (= (x214 x2686) x3849) (= x3646 (= x3621 0))) (and (=> (not x3646) x2252) (=> (and (= x4382 x1018) x3646 (= 0 x2797)) x4058))) x4364))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x902 1))))
(assert (not (= (+ 3 x3962) (x1211 x4090 3))))
(assert (x4630 x2845))
(assert (= (and x2279 (not x1599)) x911))
(assert (x4630 x639))
(assert (= x3550 (=> (and (= x1692 (x6031 (+ x2686 192))) (= (x3337 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)) x5959) (= x3390 (< x5959 0)) (= x1185 (x880 x1692))) (and (=> (and (= (x2995 x3768) x1010) (= (< 1 x1010) x134) (not x134) (= x207 x1185) (= x207 x1411) (not x3390)) x3368) (=> x3390 x5361)))))
(assert (= x3479 (=> (= (= 0 x5157) x5163) (and (=> x5163 x3198) (=> (not x5163) x4340)))))
(assert (not (= (x1211 x4090 3) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x946) (not (= (+ 4 x1186) x946))))
(assert (=> (> (+ 10000 1) x1852) (not (= (x1211 x928 1) x1852))))
(assert (x4630 x1257))
(assert (not (= (+ x3457 2) (+ x2042 2))))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x902 1) x2154))))
(assert (not (= (+ x3962 3) (x1211 x4017 1))))
(assert (x4630 x4165))
(assert (= (x88 x6054) (ite (and (not x1694) x494 x5731) (x2332 x6054) (x3247 x6054))))
(assert (=> (< (- x3148 1) 10000) (not (= x3148 (x1211 x1112 1)))))
(assert (not (= 4294967296 (x1211 x5421 1))))
(assert (x4630 x6055))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (x1211 x3513 1)))))
(assert (not (= (+ x3962 4) (+ x3948 1))))
(assert (not (= (x1211 x3645 1) (+ x1186 1))))
(assert (=> (< (- x3230 1) 10000) (not (= x3230 (x1211 x3576 1)))))
(assert (= (and (not x3002) x4215) x18))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (x1211 x1849 1)))))
(assert (=> (< (- x361 1) 10000) (not (= (x1211 x902 1) x361))))
(assert (=> (= (x1211 x4527 1) (x1211 x3755 1)) (= x3755 x4527)))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x4198 1)))))
(assert (x6051 x3081))
(assert (x4630 x6008))
(assert (= (=> (and (= (ite (not x4366) 1 0) x571) (= x4366 (= x5898 0)) (= x387 (= 0 x205)) (= x205 (x5347 x571 x5489)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2452)) x4795) (= (ite (< x4795 x2017) 1 0) x5489)) (and (=> (not x387) x5361) (=> x387 x2905))) x2873))
(assert (=> (> (+ 10000 1) x2060) (not (= (+ 2 x3962) x2060))))
(assert (= (=> (= (= x4554 274184521717934524641157099916833587202) x5564) (and (=> x5564 x3829) (=> (not x5564) x2900))) x5510))
(assert (x4630 x688))
(assert (not (= (+ x3962 1) (x1211 x902 1))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x928 1))))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (+ 3 x1186)))))
(assert (=> (< (- x902 1) 10000) (not (= x902 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x6069 1) x2154))))
(assert (not (= (x1211 x6069 1) (+ x2042 1))))
(assert (x5138 x4995 x3433))
(assert (not (= (x1211 x4218 2) (x1211 x4198 1))))
(assert (=> (= (x1211 x4799 1) (x1211 x3414 1)) (= x3414 x4799)))
(assert (=> (> (+ 10000 1) x2601) (not (= (+ 1 x2042) x2601))))
(assert (not (= (x1211 x1849 1) (+ x3962 4))))
(assert (x4630 x5330))
(assert (not (= (+ 3 x2042) (x1211 x902 1))))
(assert (x4630 x2303))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x5917 1)))))
(assert (=> (> (+ 10000 1) x3786) (not (= x3786 (x1211 x3576 1)))))
(assert (=> (< (- x1956 1) 10000) (not (= x1956 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 x5917 1)))))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x1956 1) x4702))))
(assert (not (= (x1211 x4198 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x4630 x5639))
(assert (=> (< (- x1112 1) 10000) (not (= (x1211 x935 1) x1112))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (+ 2 x3457)))))
(assert (=> (> (+ 10000 1) x1775) (not (= x1775 (x1211 x6069 1)))))
(assert (x4630 x1971))
(assert (not (= (x1211 x3992 2) 18446744073709551615)))
(assert (=> (< (- x928 1) 10000) (not (= (x1211 x3836 1) x928))))
(assert (not (= (x1211 x4198 1) (+ 1 x2042))))
(assert (x4630 x1402))
(assert (=> (> (+ 10000 1) x1852) (not (= (+ x4054 2) x1852))))
(assert (x4630 x5410))
(assert (not (= (+ x1186 3) (x1211 x2060 1))))
(assert (= (x2603 x3099) (ite (= x3099 x2116) 0 (x6007 x3099))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (x1211 x3543 1)))))
(assert (x6051 x6159))
(assert (=> (< (- x1849 1) 10000) (not (= x1849 (x1211 x3836 1)))))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x310 2)))))
(assert (=> (> (+ 10000 1) x1303) (not (= x1303 (x1211 x1849 1)))))
(assert (=> (> (+ 10000 1) x3166) (not (= x3166 (+ 2 x3457)))))
(assert (not (= (x1211 x946 1) (x1211 x4090 3))))
(assert (not (= (x1211 x935 1) (x1211 x3992 2))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (+ x2042 2)))))
(assert (not (= (+ 5 x3962) (x1211 x310 2))))
(assert (=> (< (- x6037 1) 10000) (not (= x6037 (x1211 x5500 1)))))
(assert (= (=> (and (= x2299 (x6031 (+ x4865 128))) (= (x5347 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5734) x4865) (= (or (and (> 32 x28) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x28))) (> x28 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2893) (= x5734 (x6031 (+ x28 31)))) (and (=> x2893 x5361) (=> (not x2893) x428))) x4492))
(assert (not (= (x1211 x3409 1) 274184521717934524641157099916833587202)))
(assert (x4630 x2931))
(assert (x4630 x5230))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ x98 1))))
(assert (=> (< (- x3543 1) 10000) (not (= (+ 3 x1186) x3543))))
(assert (= (or x1949 (and x6147 x1929)) x3435))
(assert (not (= (+ 4 x2042) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (+ 3 x98)))))
(assert (x4630 x4108))
(assert (x6051 x3061))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x946 1))))
(assert (not (= (x1211 x361 1) 2743638299)))
(assert (not (= (+ 2 x3457) (x1211 x2862 1))))
(assert (x4630 x4964))
(assert (x2660 x5545 x3239))
(assert (= x1105 (and x748 (not x1321))))
(assert (=> (> (+ 10000 1) x4799) (not (= (x1211 x946 1) x4799))))
(assert (=> (< (- x3414 1) 10000) (not (= (x1211 x740 2) x3414))))
(assert (x4630 x5836))
(assert (not (= (x1211 x3992 2) (x1211 x5745 1))))
(assert (x6051 x5817))
(assert (not (= (x1211 x4218 2) 1889567281)))
(assert (=> (< (- x1852 1) 10000) (not (= x1852 (x1211 x3576 1)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1211 x4017 1))))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x1852 1) x5800))))
(assert (x4630 x5744))
(assert (=> (> (+ 10000 1) x3699) (not (= (x1211 x946 1) x3699))))
(assert (=> (= (+ x3962 4) (+ 4 x98)) (= x4218 x740)))
(assert (=> (< (- x3166 1) 10000) (not (= (x1211 x1852 1) x3166))))
(assert (x4630 x2492))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x2060 1)))))
(assert (=> (< (- x4799 1) 10000) (not (= x4799 (x1211 x1451 1)))))
(assert (not (= 404098525 (+ 3 x3962))))
(assert (=> (> (+ 10000 1) x5500) (not (= (x1211 x902 1) x5500))))
(assert (not (= (x1211 x2060 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x182) (not (= (+ 1 x2042) x182))))
(assert (not (= (x1211 x3992 2) 2514000705)))
(assert (x263 x1038 x3310))
(assert (x4630 x3126))
(assert (x4630 x3886))
(assert (x4630 x661))
(assert (=> (> (+ 10000 1) x3511) (not (= (+ 2 x3457) x3511))))
(assert (not (= (+ x98 4) 274184521717934524641157099916833587231)))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x928 1)))))
(assert (x4630 x325))
(assert (= x5539 (=> (and (= x4365 x4239) (= x388 x3713)) x1486)))
(assert (x4630 x1689))
(assert (x4630 x3686))
(assert (not (= (+ x3962 3) 1000000000000000000)))
(assert (=> (> (+ 10000 1) x1775) (not (= (x1211 x4610 1) x1775))))
(assert (=> (< (- x5917 1) 10000) (not (= (x1211 x5421 1) x5917))))
(assert (not (= (+ 5 x3962) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x3992) (not (= x3992 (x1211 x4284 1)))))
(assert (x4630 x2658))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (x1211 x5500 1)))))
(assert (=> (= (x1211 x3414 1) (x1211 x4284 1)) (= x4284 x3414)))
(assert (=> (< (- x1919 1) 10000) (not (= x1919 (+ 1 x5409)))))
(assert (not (= (+ x1186 3) 1461501637330902918203684832716283019655932542975)))
(assert (x4630 x1073))
(assert (x4630 x1050))
(assert (= x2463 (=> (and (= (x6031 (+ x3503 32)) x5263) (= (x2866 x5263) x1140) (= x5462 (= x1140 0))) (and (=> (not x5462) x5940) (=> (and x5462 (= x5082 x2281)) x4525)))))
(assert (x6051 x6093))
(assert (x4630 x3084))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x3576 1)))))
(assert (=> (= (+ 1 x3962) (+ 1 x2042)) (= x3992 x740)))
(assert (= x5036 (=> (and (= x817 (x2984 x5563)) (= x4391 (> x817 0))) (and (=> x4391 x2125) (=> (not x4391) x1703)))))
(assert (not (= (+ x3962 4) (+ 1 x2042))))
(assert (=> (< (- x4527 1) 10000) (not (= (x1211 x3645 1) x4527))))
(assert (=> (< (- x3148 1) 10000) (not (= (+ 2 x4054) x3148))))
(assert (=> (> (+ 10000 1) x3575) (not (= x3575 (+ x2042 1)))))
(assert (=> (= (x1211 x4198 1) (x1211 x208 1)) (= x4198 x208)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 4 x98))))
(assert (=> (> (+ 10000 1) x561) (not (= (x1211 x3414 1) x561))))
(assert (x4630 x4564))
(assert (not (= (x1211 x4610 1) 1461501637330902918203684832716283019655932542976)))
(assert (x4630 x4861))
(assert (not (= (x1211 x3513 1) 274184521717934524641157099916833587231)))
(assert (= x4965 (=> (= x257 (= x5983 0)) (and (=> x257 x5361) (=> (not x257) x3215)))))
(assert (= x1658 (=> (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5933) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5933) true) (> 32 x5933))) x5208) (and (=> (not x5208) x799) (=> x5208 x5361)))))
(assert (not (= 2835717307 (x1211 x4800 1))))
(assert (x4630 x3589))
(assert (= x4948 (and (not x3652) x5844)))
(assert (=> (< (- x1338 1) 10000) (not (= x1338 (x1211 x1849 1)))))
(assert (not (= (x1211 x740 2) 274184521717934524641157099916833587206)))
(assert (not (= 1 (x1211 x3148 3))))
(assert (x4630 x1254))
(assert (=> (= (x1211 x3645 1) (x1211 x3513 1)) (= x3645 x3513)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x3962 5))))
(assert (=> (> (+ 10000 1) x1112) (not (= (x406 1) x1112))))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x3645 1) x4800))))
(assert (not (= (+ 3 x1186) 3939881817)))
(assert (x4630 x510))
(assert (= (=> (= x5666 (< x4639 x5814)) (and (=> (not x5666) x4235) (=> x5666 x4655))) x4526))
(assert (=> (= (x1211 x935 1) (x1211 x3513 1)) (= x3513 x935)))
(assert (x4630 x1411))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ x5409 1))))
(assert (= (and (not x2282) x1810) x2869))
(assert (=> (< (- x952 1) 10000) (not (= (+ x1186 4) x952))))
(assert (not (= (x1211 x946 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= 4294967296 (x1211 x5745 1))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x902 1))))
(assert (not (= (x1211 274184521717934524641157099916833587231 1) 2743638299)))
(assert (x4630 x2943))
(assert (=> (< (- x3414 1) 10000) (not (= x3414 (+ 1 x3948)))))
(assert (=> (> (+ 10000 1) x935) (not (= (+ x3962 5) x935))))
(assert (not (= (x1211 x5421 1) (+ 2 x3457))))
(assert (not (= (x1211 x3543 1) (+ 1 x3962))))
(assert (=> (> (+ 10000 1) x4090) (not (= x4090 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x4017) (not (= (x1211 x4090 3) x4017))))
(assert (not (= (x1211 x4198 1) (+ x5409 1))))
(assert (=> (< (- x4293 1) 10000) (not (= x4293 (x1211 x4284 1)))))
(assert (not (= (+ 3 x2042) (x1211 x4198 1))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x4284 1))))
(assert (not (= (x1211 x1956 1) (+ 3 x3962))))
(assert (= x680 (=> (and (= x2000 (> x3698 x2200)) (= x2200 (x6031 (+ x3698 x249)))) (and (=> x2000 x3905) (=> (and (= x5803 32) (not x2000) (= 1 x3043) (= x3543 (x5347 1461501637330902918203684832716283019655932542975 x4770)) (= x5300 x1649) (= (x1211 x3543 1) x5371)) x3407)))))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x310 2) x5500))))
(assert (= (ite (= x1806 x1050) x3642 (x5187 x1806)) (x5875 x1806)))
(assert (= x1264 (and x1777 (not x913))))
(assert (x4630 x4789))
(assert (=> (> (+ 10000 1) x1956) (not (= x1956 (x1211 x935 1)))))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x310 2)))))
(assert (not (= (+ 4 x98) (x1211 x1956 1))))
(assert (= x5096 (and x2613 (not x5873))))
(assert (not (= (x1211 x6069 1) 2835717307)))
(assert (=> (< (- x5800 1) 10000) (not (= (x1211 x3836 1) x5800))))
(assert (=> (> (+ 10000 1) x946) (not (= x946 (x1211 274184521717934524641157099916833587231 1)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 1 x2042))))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (+ 4 x2042)))))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x946 1) x310))))
(assert (=> (> (+ 10000 1) x2060) (not (= (+ x98 3) x2060))))
(assert (not (= 18446744073709551615 (x1211 x946 1))))
(assert (not (= 3 (x1211 x1451 1))))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (+ 4 x2042)))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1211 x3576 1))))
(assert (=> (> (+ 10000 1) x4198) (not (= x4198 (+ 5 x2042)))))
(assert (=> (< (- x5421 1) 10000) (not (= (x1211 x5421 1) x5421))))
(assert (= (and (not x3947) x1264) x4512))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x182 1) x3645))))
(assert (=> (> (+ 10000 1) x3699) (not (= x3699 (x1211 x3148 3)))))
(assert (= (=> (and (= x3564 (x3910 x2696)) (= x5773 (x6031 (+ 64 x3596))) (= (x5347 1461501637330902918203684832716283019655932542975 x4871) x858) (= x5831 (x5347 1461501637330902918203684832716283019655932542975 x3695)) (= x5921 (= 0 x3564)) (= x3596 (x6031 (+ 4 x2673))) (= (x6031 (+ x2673 36)) x3657)) (and (=> (and (or (and (= x2725 1) (> 4294967296 x4508) x4257) (and (= x2725 x3851) (not x4257))) (not x5921) (= x4257 (< 0 x3851))) x3469) (=> x5921 x3198))) x2139))
(assert (=> (< (- x4107 1) 10000) (not (= (+ x2042 4) x4107))))
(assert (x4630 x1972))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x1849 1))))
(assert (x6051 x5167))
(assert (=> (= (x1211 x4284 1) (x1211 x4800 1)) (= x4800 x4284)))
(assert (=> (= (x1211 x3576 1) (x1211 x1852 1)) (= x3576 x1852)))
(assert (=> (> (+ 10000 1) x2154) (not (= (x1211 x4090 3) x2154))))
(assert (=> (> (+ 10000 1) x1956) (not (= (x1211 x4090 3) x1956))))
(assert (=> (> (+ 10000 1) x4702) (not (= (+ x3962 1) x4702))))
(assert (not (= (+ x98 4) (x1211 x208 1))))
(assert (x4630 x1199))
(assert (= x5753 (=> (and (<= x5256 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5209 x1574) (= x4829 (= x5256 2)) (= x5898 x2452) (<= 0 x5256)) (and (=> x4829 x5361) (=> (not x4829) x5832)))))
(assert (= (ite (= x5303 x3177) x162 (x3167 x5303)) (x3185 x5303)))
(assert (x4630 x4196))
(assert (=> (< (- x561 1) 10000) (not (= (x1211 x2060 1) x561))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1211 x3414 1))))
(assert (not (= 1889567281 (x1211 x5500 1))))
(assert (=> (< (- x310 1) 10000) (not (= (x1211 x208 1) x310))))
(assert (=> (< (- x4527 1) 10000) (not (= x4527 (x1211 x4284 1)))))
(assert (x4630 x3071))
(assert (= (x2690 x2868) (ite (and (not x4813) x3235 x3830) (x1856 x2868) (x4892 x2868))))
(assert (=> (< (- x3409 1) 10000) (not (= (+ 3 x1186) x3409))))
(assert (=> (< (- x4293 1) 10000) (not (= (x1211 x1956 1) x4293))))
(assert (x251 x2526 x2627 x1020 x30))
(assert (x4630 x4481))
(assert (= x417 (and x4518 (not x3355))))
(assert (x4630 x1107))
(assert (not (= (+ 5 x3962) (x1211 x3645 1))))
(assert (not (= (x1211 x2060 1) (+ x3962 5))))
(assert (=> (< (- x83 1) 10000) (not (= x83 (+ x3962 1)))))
(assert (=> (< (- x3511 1) 10000) (not (= (x1211 x5917 1) x3511))))
(assert (x4630 x3548))
(assert (x4630 x4086))
(assert (x4630 x2538))
(assert (=> (< (- x3255 1) 10000) (not (= x3255 (+ 3 x3962)))))
(assert (=> (= (x1211 x3543 1) (x1211 x5917 1)) (= x5917 x3543)))
(assert (=> (< (- x4610 1) 10000) (not (= (x1211 x4610 1) x4610))))
(assert (x4630 x306))
(assert (= 0 (x2102 x4810)))
(assert (=> (< (- x1849 1) 10000) (not (= (x1211 x1451 1) x1849))))
(assert (=> (> (+ 10000 1) x3771) (not (= (x1211 x1956 1) x3771))))
(assert (not (= (x1211 x3755 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x1089) (not (= x1089 (+ x3962 2)))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (x1211 x1956 1)))))
(assert (x4630 x5656))
(assert (= (or (and x513 x4146) x3100) x5621))
(assert (not (= (x1211 x4017 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 x5421 1) x4800))))
(assert (not (= 274184521717934524641157099916833587206 (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x3979) (not (= (+ x3962 5) x3979))))
(assert (=> (> (+ 10000 1) x4293) (not (= (x1211 x902 1) x4293))))
(assert (= x1925 (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x688) x4964) (= x4217 (= x4964 x688))) (and (=> (not x4217) x1178) (=> x4217 x3472)))))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x3755 1) x928))))
(assert (=> (> (+ 10000 1) x310) (not (= (+ 5 x2042) x310))))
(assert (x4630 x2214))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 3 x2042))))
(assert (=> (> (+ 10000 1) x5421) (not (= (+ 4 x98) x5421))))
(assert (=> (> (+ 10000 1) x2862) (not (= (x1211 x3645 1) x2862))))
(assert (= x1703 (=> (and (= x1432 x546) (= x2441 x2934) (= x3161 x240) (= x4835 x1941) (= x1657 x659) (= x233 x4443) (= x1060 x6100)) x4067)))
(assert (=> (< (- x1451 1) 10000) (not (= (+ x2042 5) x1451))))
(assert (not (= (x1211 x4284 1) (x1211 x310 2))))
(assert (=> (> (+ 10000 1) x1338) (not (= x1338 (x1211 x3409 1)))))
(assert (=> (> (+ 10000 1) x3511) (not (= (+ x1186 3) x3511))))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x1211 x4800 1)))))
(assert (=> (= (x1211 x902 1) (x1211 x182 1)) (= x182 x902)))
(assert (not (= (x1211 x3409 1) 274184521717934524641157099916833587231)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 274184521717934524641157099916833587231 1))))
(assert (= (=> (and (= (x5347 1461501637330902918203684832716283019655932542975 x4871) x5715) (= x1145 (x3910 x4702)) (= (= 0 x1145) x3212) (= (x5347 1461501637330902918203684832716283019655932542975 x3695) x3176) (= x3554 (x6031 (+ x4048 4))) (= (x5601 x929) x3695) (= (x6031 (+ x4048 36)) x2004) (= (x6031 (+ x3732 32)) x929) (= (x5347 1461501637330902918203684832716283019655932542975 x5133) x4702)) (and (=> x3212 x3198) (=> (and (not x3212) (or (and (= x3131 x5556) (not x4206)) (and (> 4294967296 x5790) (= x5556 1) x4206)) (= (< 0 x3131) x4206)) x5811))) x5042))
(assert (=> (> (+ 10000 1) x5800) (not (= (x1211 x4293 1) x5800))))
(assert (not (= (x1211 x3148 3) (+ x98 3))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (+ x3962 2)))))
(assert (=> (< (- x3836 1) 10000) (not (= (+ 3 x2042) x3836))))
(assert (= x5599 (=> (and (= x1656 (x3088 x3108)) (= (< 0 x1656) x5605)) (and (=> (and (= x2388 x1629) (not x5605)) x3204) (=> x5605 x5058)))))
(assert (not (= 3 (x1211 x740 2))))
(assert (=> (< (- x3513 1) 10000) (not (= x3513 (x1211 x4017 1)))))
(assert (not (= (x1211 x902 1) 274184521717934524641157099916833587231)))
(assert (= (or (and (not x3500) x1103) x4262) x2447))
(assert (not (= (x1211 x361 1) (+ 1 x3962))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1211 x3645 1))))
(assert (=> (> (+ 10000 1) x693) (not (= x693 (x1211 x1451 1)))))
(assert (=> (> (+ 10000 1) x182) (not (= x182 (x1211 x4527 1)))))
(assert (=> (< (- x2845 1) 10000) (not (= (x1211 x4293 1) x2845))))
(assert (x4630 x4024))
(assert (x4630 x2434))
(assert (=> (= (x1211 x1451 1) (x1211 x5917 1)) (= x1451 x5917)))
(assert (=> (< (- x902 1) 10000) (not (= (+ 1 x3962) x902))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (+ x2042 1)))))
(assert (= x1194 (=> (and (= (uninterp_mod (* x2477 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2552) (= (> x1639 0) x4099)) (and (=> (and x4099 (= (- (/ x2552 x1639) (uninterp_frac x2552 x1639)) x4912) (= x4912 x5116)) x2740) (=> (not x4099) x3198)))))
(assert (=> (> (+ 10000 1) x3699) (not (= (+ 3 x3962) x3699))))
(assert (not (= (+ x3962 3) (+ 4 x98))))
(assert (x4630 x2511))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x310 2) x928))))
(assert (= (and x2772 (not x6083)) x5104))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x1211 x928 1)))))
(assert (=> (< (- x693 1) 10000) (not (= (x1211 x2060 1) x693))))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x4198 1) x952))))
(assert (=> (= (x1211 x5421 1) (x1211 x935 1)) (= x935 x5421)))
(assert (=> (< (- x902 1) 10000) (not (= x902 (+ x1186 4)))))
(assert (not (= 2 (+ 1 x98))))
(assert (x4630 x3929))
(assert (= x3763 true))
(assert (=> (< (- x1451 1) 10000) (not (= (x1211 x5745 1) x1451))))
(assert (=> (> (+ 10000 1) x5745) (not (= (x1211 x3409 1) x5745))))
(assert (=> (> (+ 10000 1) x4218) (not (= x4218 (x1211 x3513 1)))))
(assert (not (= (x1211 x3576 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (> (+ 10000 1) x4017) (not (= x4017 (+ 1 x3962)))))
(assert (=> (> (+ 10000 1) x2549) (not (= (+ 4 x98) x2549))))
(assert (not (= (+ 4 x2042) (+ 2 x2042))))
(assert (=> (< (- x361 1) 10000) (not (= (+ x3457 2) x361))))
(assert (= (and x4247 x990) x2248))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x3543))))
(assert (=> (> (+ 10000 1) x5617) (not (= (x1211 x5500 1) x5617))))
(assert (not (= (x1211 x1919 1) (+ x4054 2))))
(assert (=> (< (- x4090 1) 10000) (not (= (x406 1) x4090))))
(assert (=> (< (- x946 1) 10000) (not (= x946 (x1211 x4198 1)))))
(assert (= (=> (and (> 4168891048 x4806) (not (< x4806 3939881817)) (not (> 2743638299 x4806)) (= 3939881817 x4806) (not (> 4 x297)) (= (or (> x768 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x768)) (> 96 x768))) x742) (= x768 (x3337 (- x297 4)))) (and (=> (not x742) x174) (=> x742 x5361))) x4894))
(assert (not (= (x1211 x3148 3) 826074471)))
(assert (=> (< (- x3699 1) 10000) (not (= (+ x3962 5) x3699))))
(assert (=> (> (+ 10000 1) x2060) (not (= (x1211 x4017 1) x2060))))
(assert (=> (< (- x2758 1) 10000) (not (= x2758 (+ x4054 2)))))
(assert (x6051 x3009))
(assert (x4630 x5608))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x208 1) x4610))))
(assert (not (= (x1211 x740 2) 4168891048)))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (x1211 x4198 1)))))
(assert (= x3241 (=> (and (= x3648 (= x5471 x935)) (= x935 x5786)) (and (=> (and x3648 (<= 0 x1947) (= 32 x5496) (= 1 x4071) (= (x1211 x935 1) x4834) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1947) (= (x2436 x4834) x1947)) x859) (=> (not x3648) x2249)))))
(assert (x4630 x5157))
(assert (=> (> (+ 10000 1) x740) (not (= x740 (x1211 x4090 3)))))
(assert (not (= (x1211 x4284 1) (+ 1 x5409))))
(assert (=> (< (- x3409 1) 10000) (not (= (x1211 x946 1) x3409))))
(assert (=> (< (- x952 1) 10000) (not (= x952 (x1211 x1112 1)))))
(assert (=> (> (+ 10000 1) x5421) (not (= (+ 1 x1186) x5421))))
(assert (= (=> (and (= (x236 x1822) x1222) (= x642 (< 18446744073709551615 x6163)) (= x6163 (x5474 x1222))) (and (=> x642 x3198) (=> (and (= (x6031 (+ 32 x3163)) x3091) (= x5353 (= x6163 0)) (not x642) (or (and (= x5370 (uninterp_mod (* x6163 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x5353) (= x2151 (x6031 (+ x1355 192)))) x5353) (= (x6031 (+ x2159 x3091)) x2568) (= x3163 (uninterp_mod (* 32 x6163) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1542))) x1487))
(assert (x6051 x1653))
(assert (x4630 x2027))
(assert (not (= 826074471 (x1211 x4293 1))))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (x1211 x3645 1)))))
(assert (=> (> (+ 10000 1) x182) (not (= (+ 1 x5409) x182))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x5745 1))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x3543 1)))))
(assert (=> (= (x1211 x1956 1) (x1211 x4527 1)) (= x4527 x1956)))
(assert (not (= (x1211 x3543 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (< (- x946 1) 10000) (not (= (x1211 x4284 1) x946))))
(assert (not (= (+ 2 x2042) 1889567281)))
(assert (=> (< (- x4198 1) 10000) (not (= (+ x1186 1) x4198))))
(assert (=> (> (+ 10000 1) x4527) (not (= x4527 (x1211 x4017 1)))))
(assert (x4630 x2415))
(assert (=> (> (+ 10000 1) x5500) (not (= (+ x3962 2) x5500))))
(assert (=> (> (+ 10000 1) x2696) (not (= (+ 1 x98) x2696))))
(assert (not (= (x1211 x208 1) (+ x3962 1))))
(assert (x4630 x3047))
(assert (=> (< (- x4063 1) 10000) (not (= x4063 (+ 5 x2042)))))
(assert (not (= (x1211 x3645 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x3645) (not (= x3645 (x1211 x946 1)))))
(assert (= (=> (= x5581 (= x5800 274184521717934524641157099916833587202)) (and (=> x5581 x1085) (=> (not x5581) x5934))) x2574))
(assert (=> (< (- x3786 1) 10000) (not (= x3786 (+ x3948 1)))))
(assert (=> (< (- x5745 1) 10000) (not (= x5745 (x1211 x1112 1)))))
(assert (x4630 x5578))
(assert (=> (> (+ 10000 1) x4527) (not (= (x1211 x1852 1) x4527))))
(assert (=> (< (- x361 1) 10000) (not (= (x1211 x1451 1) x361))))
(assert (x4630 x3543))
(assert (not (= (+ x1186 1) (+ 4 x1186))))
(assert (x6051 x396))
(assert (x6051 x2124))
(assert (=> (< (- x5500 1) 10000) (not (= (x1211 x4293 1) x5500))))
(assert (x399 x3255))
(assert (x4630 x4880))
(assert (not (= (+ 1 x98) (x1211 x361 1))))
(assert (=> (> (+ 10000 1) x4702) (not (= (x1211 x4218 2) x4702))))
(assert (= x2412 x1414))
(assert (=> (= (x1211 x3755 1) (x1211 x946 1)) (= x3755 x946)))
(assert (=> (< (- x5800 1) 10000) (not (= x5800 (x1211 x3414 1)))))
(assert (not (= (x1211 x4284 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x263 x3662 x3741))
(assert (= x2347 (or x3526 (and x2914 x552))))
(assert (not (= (x1211 x4800 1) 2)))
(assert (not (= (x1211 x3543 1) (+ x3457 2))))
(assert (not (= 3 (x1211 x4284 1))))
(assert (not (= (+ 4 x3962) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x2084 (and x6065 x5340)))
(assert (=> (> (+ 10000 1) x5421) (not (= x5421 (+ 2 x3962)))))
(assert (=> (< (- x1112 1) 10000) (not (= x1112 (x1211 x740 2)))))
(assert (x4630 x5473))
(assert (=> (> (+ 10000 1) x6069) (not (= (x1211 x4293 1) x6069))))
(assert (x4630 x2041))
(assert (= x2760 (and (not x2893) x1116)))
(assert (=> (> (+ 10000 1) x2417) (not (= (x1211 x4527 1) x2417))))
(assert (x4630 x1449))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x1211 x902 1)))))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 274184521717934524641157099916833587231 1) x3836))))
(assert (=> (= (x1211 x3543 1) (x1211 x4293 1)) (= x4293 x3543)))
(assert (not (= (x1211 x3992 2) 1889567281)))
(assert (not (= (x1211 x1852 1) 2743638299)))
(assert (not (= (x1211 x3836 1) (+ 1 x3948))))
(assert (x4630 x2423))
(assert (=> (> (+ 10000 1) x1451) (not (= x1451 (+ x3948 1)))))
(assert (=> (< (- x4198 1) 10000) (not (= (x1211 x946 1) x4198))))
(assert (x4630 x6145))
(assert (not (= (x1211 x4198 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (< (- x952 1) 10000) (not (= (x1211 x1849 1) x952))))
(assert (=> (= (x1211 x902 1) (x1211 x1112 1)) (= x902 x1112)))
(assert (not (= (x1211 x4090 3) (+ 2 x3457))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x740 2))))
(assert (=> (< (- x2696 1) 10000) (not (= x2696 (x1211 x4218 2)))))
(assert (= x1786 (=> (and (= (x3501 x2167) x4860) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4860) (and (= (<= x4860 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x4860))) x2774)) (and (=> (not x2774) x1787) (=> x2774 x5361)))))
(assert (= x939 (and x3119 (not x5387))))
(assert (=> (> (+ 10000 1) x3836) (not (= (x1211 x6069 1) x3836))))
(assert (=> (= (x1211 x902 1) (x1211 x4293 1)) (= x902 x4293)))
(assert (not (= (x1211 x946 1) 1889567281)))
(assert (=> (< (- x2820 1) 10000) (not (= x2820 (x1211 x182 1)))))
(assert (=> (< (- x1089 1) 10000) (not (= (x1211 x3645 1) x1089))))
(assert (= (ite (= x161 x5688) x3268 (x5618 x5688)) (x2487 x5688)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1211 x1112 1))))
(assert (not (= (+ x1186 3) 826074471)))
(assert (=> (> (+ 10000 1) x4400) (not (= x4400 (x406 1)))))
(assert (not (= (x1211 x4527 1) 274184521717934524641157099916833587231)))
(assert (=> (> (+ 10000 1) x6069) (not (= (+ 1 x3962) x6069))))
(assert (=> (> (+ 10000 1) x2696) (not (= (x1211 x4799 1) x2696))))
(assert (x4630 x4355))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (x1211 x208 1)))))
(assert (=> (< (- x5917 1) 10000) (not (= x5917 (x406 1)))))
(assert (=> (> (+ 10000 1) x1775) (not (= (+ x98 4) x1775))))
(assert (=> (< (- x310 1) 10000) (not (= x310 (x1211 x5917 1)))))
(assert (=> (< (- x3740 1) 10000) (not (= x3740 (x1211 x1112 1)))))
(assert (x4630 x795))
(assert (not (= (x1211 x3543 1) (x1211 x310 2))))
(assert (= x5341 (=> (and (= x1712 x5983) (= x3041 x2864)) x4965)))
(assert (not (= (x1211 x3148 3) 4294967296)))
(assert (x4630 x2749))
(assert (x4630 x2164))
(assert (x4630 x1868))
(assert (not (= 3939881817 (x1211 x4017 1))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x2042 3))))
(assert (=> (> (+ 10000 1) x4610) (not (= (x1211 x3645 1) x4610))))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x2060 1) x1467))))
(assert (=> (< (- x2601 1) 10000) (not (= x2601 (+ x98 4)))))
(assert (not (= 1000000000000000000 (+ 3 x98))))
(assert (x4630 x1475))
(assert (x4630 x4627))
(assert (= (and (not x710) x1776) x3880))
(assert (not (= (x1211 x2862 1) (+ 4 x3962))))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (+ x3962 5)))))
(assert (not (= 18446744073709551615 (+ x3962 2))))
(assert (=> (= (x1211 x3409 1) (x1211 x928 1)) (= x928 x3409)))
(assert (=> (> (+ 10000 1) x3511) (not (= (+ 3 x2042) x3511))))
(assert (=> (> (+ 10000 1) x1248) (not (= (+ x1186 1) x1248))))
(assert (=> (< (- x4800 1) 10000) (not (= (x1211 274184521717934524641157099916833587231 1) x4800))))
(assert (= x964 (=> (= x3355 (= 0 x451)) (and (=> (not x3355) x3231) (=> x3355 x3198)))))
(assert (=> (< (- x1219 1) 10000) (not (= (+ 4 x3962) x1219))))
(assert (x4630 x6005))
(assert (=> (< (- x2758 1) 10000) (not (= (+ 4 x2042) x2758))))
(assert (= (and x3123 x4217) x6150))
(assert (x399 x946))
(assert (= (and x4785 (not x2670)) x175))
(assert (x4630 x4330))
(assert (not (= (x1211 x1451 1) (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x928) (not (= (x1211 x4800 1) x928))))
(assert (x4630 x5316))
(assert (=> (> (+ 10000 1) x1467) (not (= (+ x2042 5) x1467))))
(assert (not (= (x1211 x182 1) (+ x98 3))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 x3576 1)))))
(assert (=> (< (- x2820 1) 10000) (not (= (x1211 x3409 1) x2820))))
(assert (not (= (+ 5 x2042) (x1211 x928 1))))
(assert (=> (> (+ 10000 1) x4800) (not (= (x1211 x2862 1) x4800))))
(assert (x4630 x5143))
(assert (not (= (x1211 x3576 1) (+ 2 x3962))))
(assert (=> (> (+ 10000 1) x2862) (not (= x2862 (x1211 x5745 1)))))
(assert (= (x4173 x99) (ite (and x1403 x2297 (not x4362)) (x1331 x99) (x9 x99))))
(assert (=> (> (+ 10000 1) x1219) (not (= x1219 (x1211 x1956 1)))))
(assert (not (= (x1211 x740 2) (+ 3 x98))))
(assert (=> (< (- x1451 1) 10000) (not (= x1451 (x1211 x3645 1)))))
(assert (=> (< (- x2060 1) 10000) (not (= (+ x4054 2) x2060))))
(assert (x4630 x1259))
(assert (=> (< (- x4113 1) 10000) (not (= (x1211 x182 1) x4113))))
(assert (x4630 x823))
(assert (=> (= (x1211 x946 1) (x1211 x4017 1)) (= x4017 x946)))
(assert (=> (> (+ 10000 1) x1248) (not (= x1248 (x1211 x935 1)))))
(assert (=> (< (- x2549 1) 10000) (not (= x2549 (+ x1186 3)))))
(assert (x263 x901 x5915))
(assert (not (= (+ x3948 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (< (- x5421 1) 10000) (not (= x5421 (x406 1)))))
(assert (not (= (x1211 x946 1) 274184521717934524641157099916833587202)))
(assert (=> (= (x1211 x902 1) (x1211 x3414 1)) (= x902 x3414)))
(assert (not (= 274184521717934524641157099916833587231 (+ 5 x3962))))
(assert (not (= (x1211 x1451 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x4630 x4125))
(assert (= 0 (x2178 x5515)))
(assert (not (= 826074471 (x1211 x1956 1))))
(assert (x4630 x1716))
(assert (=> (> (+ 10000 1) x2601) (not (= (x1211 x6069 1) x2601))))
(assert (=> (= (x1211 x4293 1) (x1211 x4198 1)) (= x4198 x4293)))
(assert (not (= (x1211 x1956 1) 157198259)))
(assert (= x3254 (and x1935 x5425)))
(assert (not (= 1 (x1211 x5500 1))))
(assert (=> (> (+ 10000 1) x3645) (not (= (x1211 x3148 3) x3645))))
(assert (=> (< (- x4610 1) 10000) (not (= (x1211 x4198 1) x4610))))
(assert (not (= (x1211 x6069 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= 3 (x1211 x2862 1))))
(assert (=> (= (x1211 x935 1) (x1211 x1956 1)) (= x935 x1956)))
(assert (=> (> (+ 10000 1) x3740) (not (= x3740 (+ 4 x98)))))
(assert (=> (> (+ 10000 1) x5500) (not (= x5500 (x1211 x4527 1)))))
(assert (=> (< (- x6069 1) 10000) (not (= (+ x98 3) x6069))))
(assert (=> (< (- x5917 1) 10000) (not (= (x1211 x182 1) x5917))))
(assert (=> (> (+ 10000 1) x2549) (not (= (+ x3962 5) x2549))))
(assert (=> (< (- x3543 1) 10000) (not (= (x1211 x3755 1) x3543))))
(assert (=> (> (+ 10000 1) x1775) (not (= (+ x2042 5) x1775))))
(assert (= (x4536 x5444) 0))
(assert (not (= 3 (+ 4 x2042))))
(assert (not (= 3 (x1211 x182 1))))
(assert (=> (> (+ 10000 1) x928) (not (= (+ 3 x2042) x928))))
(assert (= (x861 x2141) 0))
(assert (not (= (+ x4054 2) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x1211 x4799 1) (+ 2 x3457))))
(assert (= x3329 (=> (= (= x1089 274184521717934524641157099916833587206) x3200) (and (=> (not x3200) x830) (=> (and (< x3443 826074471) (= x3443 404098525) (not (> 4 x3674)) (= x4459 x3674) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x2810) (= x949 1) (<= 0 x943) (not (= 117300739 x3443)) (> x3602 0) (= 32 x6171) (not (= x3443 157198259)) (= 4 x3674) (= (x3910 274184521717934524641157099916833587206) x3602) (<= x943 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3200) x1191)))))
(assert (=> (= (x1211 x946 1) (x1211 x1956 1)) (= x946 x1956)))
(assert (=> (> (+ 10000 1) x3513) (not (= (x1211 x4527 1) x3513))))
(assert (= (x5950 x3942) (ite (= x3942 x2723) x1071 (x3321 x3942))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (x1211 x4218 2)))))
(assert (=> (> (+ 10000 1) x740) (not (= (x1211 x310 2) x740))))
(assert (=> (> (+ 10000 1) x3992) (not (= (x1211 x902 1) x3992))))
(assert (not (= 157198259 (+ x3962 3))))
(assert (not (= (+ x98 4) (x1211 x4800 1))))
(assert (not (= (x1211 x4799 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (= (+ x98 4) (+ x1186 4)) (= x4218 x310)))
(assert (=> (> (+ 10000 1) x1338) (not (= (+ x98 1) x1338))))
(assert (=> (< (- x4113 1) 10000) (not (= (+ 2 x4054) x4113))))
(assert (=> (> (+ 10000 1) x1849) (not (= (x1211 x3148 3) x1849))))
(assert (not (= 1889567281 (x1211 x3148 3))))
(assert (=> (> (+ 10000 1) x3414) (not (= (x1211 x902 1) x3414))))
(assert (not (= (+ 1 x2042) (x1211 x1956 1))))
(assert (=> (> (+ 10000 1) x6037) (not (= (x1211 x3513 1) x6037))))
(assert (x4630 x2076))
(assert (=> (> (+ 10000 1) x3511) (not (= x3511 (x1211 274184521717934524641157099916833587231 1)))))
(assert (= 0 (x861 x2258)))
(assert (=> (< (- x4702 1) 10000) (not (= (x1211 x4090 3) x4702))))
(assert (= (and x3500 x1103) x4247))
(assert (=> (> (+ 10000 1) x4107) (not (= (+ x98 3) x4107))))
(assert (=> (= (x1211 x3836 1) (x1211 x902 1)) (= x902 x3836)))
(assert (=> (> (+ 10000 1) x3414) (not (= (+ 1 x3962) x3414))))
(assert (=> (< (- x1852 1) 10000) (not (= (x1211 x4017 1) x1852))))
(assert (= (ite (= x5791 x4433) 0 (x5667 x4433)) (x3115 x4433)))
(assert (not (= (x1211 x3836 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1211 x935 1))))
(assert (= (=> (and (= (> x6082 0) x5236) (= (x5474 x4711) x6082) (= x4711 (x236 x1822))) (and (=> (and (= x3823 x5710) (not x5236)) x889) (=> x5236 x2484))) x1066))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1211 x3992 2))))
(assert (=> (> (+ 10000 1) x1849) (not (= x1849 (+ x2042 2)))))
(assert (=> (< (- x3409 1) 10000) (not (= x3409 (x406 1)))))
(assert (=> (= (x1211 x4799 1) (x1211 x4017 1)) (= x4017 x4799)))
(assert (x4630 x5074))
(assert (=> (> (+ 10000 1) x1467) (not (= (x1211 x3513 1) x1467))))
(assert (= x3825 (or x4574 x3586)))
(assert (=> (> (+ 10000 1) x3755) (not (= (+ x3457 2) x3755))))
(assert (= x5708 (=> (and (= x3383 (x2534 x13)) (= (x3910 x1089) x6023) (= x409 (x6031 (+ x1973 x2921))) (= x2480 (= x6023 0)) (= 4 x4459) (= x1089 (x5347 1461501637330902918203684832716283019655932542975 x3383))) (and (=> x2480 x5361) (=> (not x2480) x3329)))))
(assert (x4630 x2323))
(assert (not (= (x1211 x1849 1) (+ x98 3))))
(assert (=> (< (- x4017 1) 10000) (not (= x4017 (x1211 x3836 1)))))
(assert (=> (< (- x3575 1) 10000) (not (= (x1211 x2060 1) x3575))))
(assert (=> (> (+ 10000 1) x3409) (not (= x3409 (x1211 x4284 1)))))
(assert (=> (> (+ 10000 1) x1852) (not (= x1852 (x1211 x3543 1)))))
(assert (=> (< (- x3543 1) 10000) (not (= x3543 (x1211 x2060 1)))))
(assert (=> (< (- x4284 1) 10000) (not (= x4284 (x1211 x740 2)))))
(assert (=> (> (+ 10000 1) x3230) (not (= x3230 (+ 2 x4054)))))
(assert (= x4714 (=> (= (= x4822 0) x4608) (and (=> (not x4608) x797) (=> x4608 x5361)))))
(assert (= x5144 (and (not x642) x553)))
(assert (not (= (x1211 x4090 3) (x1211 x4799 1))))
(assert (not (= 4294967296 (x1211 x2862 1))))
(assert (=> (< (- x1089 1) 10000) (not (= x1089 (x1211 x902 1)))))
(assert (=> (< (- x1775 1) 10000) (not (= (x1211 x935 1) x1775))))
(assert (=> (> (+ 10000 1) x1112) (not (= x1112 (x1211 x3836 1)))))
(assert (x4630 x5210))
(assert (=> (> (+ 10000 1) x1598) (not (= x1598 (x1211 x1956 1)))))
(assert (=> (> (+ 10000 1) x2845) (not (= x2845 (+ 1 x3962)))))
(assert (=> (< (- x902 1) 10000) (not (= (+ x2042 5) x902))))
(assert (=> (= (x1211 x3543 1) (x1211 x1112 1)) (= x3543 x1112)))
(assert (=> (> (+ 10000 1) x3511) (not (= (x1211 x6069 1) x3511))))
(assert (=> (> (+ 10000 1) x1919) (not (= x1919 (x1211 x4610 1)))))
(assert (not (= (x1211 x4527 1) (+ 3 x98))))
(assert (not (= (+ 1 x1186) (x1211 x6069 1))))
(assert (not (= (+ 2 x3962) (+ 2 x3457))))
(assert (not (= (x1211 x4198 1) (+ 3 x3962))))
(assert (=> (< (- x5745 1) 10000) (not (= (+ 3 x1186) x5745))))
(assert (= (x1448 x3044) 0))
(assert (=> (< (- x3699 1) 10000) (not (= x3699 (x1211 x3409 1)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1211 x5421 1))))
(assert (not (= 18446744073709551615 (x1211 x4090 3))))
(assert (x263 x4761 x5859))
(assert (=> (> (+ 10000 1) x4800) (not (= x4800 (x1211 x1451 1)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ x5409 1))))
(assert (x4630 x712))
(assert (=> (< (- x310 1) 10000) (not (= (+ x3457 2) x310))))
(assert (x4630 x3728))
(assert (=> (= (x1211 x4293 1) (x1211 x928 1)) (= x4293 x928)))
(assert (x4630 x3144))
(assert (= (and (not x3895) x4758) x3723))
(assert (not (= (+ x3962 3) (+ x4054 2))))
(assert (x4630 x2472))
(assert (=> (> (+ 10000 1) x4198) (not (= (+ x2042 1) x4198))))
(assert (=> (< (- x1451 1) 10000) (not (= (x1211 x4218 2) x1451))))
(assert (not (= (x1211 x3836 1) 4168891048)))
(assert (x5138 x3431 x5411))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1211 x4017 1))))
(assert (=> (< (- x1248 1) 10000) (not (= x1248 (x1211 x946 1)))))
(assert (=> (< (- x3513 1) 10000) (not (= (x1211 x3992 2) x3513))))
(assert (=> (< (- x2060 1) 10000) (not (= (x1211 x208 1) x2060))))
(assert (=> (> (+ 10000 1) x3576) (not (= x3576 (x1211 x928 1)))))
(assert (=> (< (- x2862 1) 10000) (not (= x2862 (+ x98 1)))))
(assert (x4630 x4031))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1211 x182 1))))
(assert (x4630 x2717))
(assert (=> (< (- x1467 1) 10000) (not (= x1467 (x1211 x4293 1)))))
(assert (= (=> (and (= x984 x3576) (= x2622 x1651) (> x1762 0) (= (x3337 (- x1651 4)) x3502) (not (> 826074471 x2378)) (not (< x1651 4)) (= 1889567281 x2378) (= x1762 (x3910 274184521717934524641157099916833587206)) (= 36 x1651) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4802) (not (= x2378 826074471)) (= (or (> x3502 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3502 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3502 32))) x595)) (and (=> (not x595) x4226) (=> x595 x775))) x5829))
(assert (x4630 x4682))
(assert (= x4037 (=> (and (= (> x319 0) x2247) (= x319 (x3088 x1307))) (and (=> x2247 x3583) (=> (and (= x5573 0) (not x2247)) x367)))))
(check-sat)
