(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x914 0)) (((x872 (x868 Real)) (x7 (x304 x914) (x542 Real)) (x1392 (x1474 x914) (x257 x914) (x513 Real)))))
(declare-fun x233 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x1144 () x914)
(declare-fun x1165 () x914)
(declare-fun x1001 () x914)
(declare-fun x1274 () x914)
(declare-fun x130 () Real)
(declare-fun x827 () Bool)
(declare-fun x783 () Real)
(declare-fun x898 () Bool)
(declare-fun x978 (Real Real) Real)
(declare-fun x1511 () Real)
(declare-fun x486 (x914) Real)
(declare-fun x861 () Bool)
(declare-fun x626 () Real)
(declare-fun x88 () Bool)
(declare-fun x141 () Real)
(declare-fun x1085 () Bool)
(declare-fun x272 () Bool)
(declare-fun x1267 () Real)
(declare-fun x155 () Real)
(declare-fun x1404 () Real)
(declare-fun x1005 () Bool)
(declare-fun x1613 () Real)
(declare-fun x105 () Real)
(declare-fun x154 () Real)
(declare-fun x140 () Real)
(declare-fun x601 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x1126 () Real)
(declare-fun x552 () Real)
(declare-fun x815 () Real)
(declare-fun x1157 () Bool)
(declare-fun x1042 () Real)
(declare-fun x571 () Bool)
(declare-fun x1 () Real)
(declare-fun x517 () Bool)
(declare-fun x148 () Bool)
(declare-fun x1219 () x914)
(declare-fun x461 () Real)
(declare-fun x792 () Bool)
(declare-fun x816 () Real)
(declare-fun x915 () Bool)
(declare-fun x704 () Real)
(declare-fun x521 () x914)
(declare-fun x705 (Real) Real)
(declare-fun x1163 () Real)
(declare-fun x717 () Real)
(declare-fun x19 () Bool)
(declare-fun x121 () x914)
(declare-fun x1197 () Bool)
(declare-fun x930 () Real)
(declare-fun x483 () x914)
(declare-fun x1149 () Real)
(declare-fun x1295 () Bool)
(declare-fun x1421 () Real)
(declare-fun x1049 () Real)
(declare-fun x113 () Real)
(declare-fun x215 () Bool)
(declare-fun x613 () Real)
(declare-fun x407 () Real)
(declare-fun x1374 () Real)
(declare-fun x473 () Real)
(declare-fun x597 () Real)
(declare-fun x576 () Bool)
(declare-fun x632 () Real)
(declare-fun x410 () Bool)
(declare-fun x447 () Real)
(declare-fun x91 () x914)
(declare-fun x1288 () Real)
(declare-fun x699 () Bool)
(declare-fun x249 () Real)
(declare-fun x754 () x914)
(declare-fun x118 () Real)
(declare-fun x1537 () Real)
(declare-fun x1472 () x914)
(declare-fun x748 () Real)
(declare-fun x340 () x914)
(declare-fun x170 () Bool)
(declare-fun x1606 () Real)
(declare-fun x1062 () Bool)
(declare-fun x1191 () x914)
(declare-fun x238 () Bool)
(declare-fun x22 () x914)
(declare-fun x851 () Bool)
(declare-fun x204 () Real)
(declare-fun x144 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x741 () Real)
(declare-fun x624 () Real)
(declare-fun x628 (Real) Real)
(declare-fun x913 (x914) Real)
(declare-fun x905 () Real)
(declare-fun x1307 () Real)
(declare-fun x594 () Real)
(declare-fun x789 () x914)
(declare-fun x1278 () Real)
(declare-fun x991 () Real)
(declare-fun x287 () Real)
(declare-fun x1469 () Real)
(declare-fun x152 () Real)
(declare-fun x41 () Real)
(declare-fun x569 () x914)
(declare-fun x620 () x914)
(declare-fun x1258 () Real)
(declare-fun x580 () Bool)
(declare-fun x1038 () Real)
(declare-fun x1586 () Real)
(declare-fun x535 () x914)
(declare-fun x574 () Bool)
(declare-fun x65 () Real)
(declare-fun x1590 () Real)
(declare-fun x292 () Real)
(declare-fun x178 () Bool)
(declare-fun x462 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x199 () Real)
(declare-fun x296 () Real)
(declare-fun x728 () Bool)
(declare-fun x766 () Real)
(declare-fun x180 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x697 () Real)
(declare-fun x1201 () Bool)
(declare-fun x639 () Bool)
(declare-fun x1148 () Real)
(declare-fun x962 () Real)
(declare-fun x124 () Real)
(declare-fun x279 () Real)
(declare-fun x102 () Real)
(declare-fun x640 () Real)
(declare-fun x895 () Bool)
(declare-fun x971 () Bool)
(declare-fun x714 (x914) Real)
(declare-fun x128 () Bool)
(declare-fun x1153 () Real)
(declare-fun x780 () Real)
(declare-fun x182 () Real)
(declare-fun x1137 () Real)
(declare-fun x1187 () Real)
(declare-fun x1322 () x914)
(declare-fun x1595 () Real)
(declare-fun x890 () Real)
(declare-fun x30 () Real)
(declare-fun x1077 () x914)
(declare-fun x1279 () Bool)
(declare-fun x1162 (Real Real) Real)
(declare-fun x1007 () Real)
(declare-fun x677 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x44 () Bool)
(declare-fun x676 () Bool)
(declare-fun x841 () Real)
(declare-fun x211 () Bool)
(declare-fun x283 () x914)
(declare-fun x54 () Bool)
(declare-fun x1549 () Real)
(declare-fun x1339 () Bool)
(declare-fun x82 () Real)
(declare-fun x673 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x832 () Bool)
(declare-fun x983 () Bool)
(declare-fun x1430 () x914)
(declare-fun x664 () Real)
(declare-fun x1023 () Bool)
(declare-fun x52 () Real)
(declare-fun x1245 () Real)
(declare-fun x342 () Real)
(declare-fun x1115 () x914)
(declare-fun x1110 () Bool)
(declare-fun x1460 () Real)
(declare-fun x241 () x914)
(declare-fun x1596 () Real)
(declare-fun x650 () Real)
(declare-fun x921 () Real)
(declare-fun x1297 () Real)
(declare-fun x1548 () Real)
(declare-fun x1277 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x446 () Real)
(declare-fun x9 () Real)
(declare-fun x595 () Real)
(declare-fun x966 () Real)
(declare-fun x809 () Bool)
(declare-fun x218 () Bool)
(declare-fun x453 () Real)
(declare-fun x244 () Bool)
(declare-fun x1017 () x914)
(declare-fun x649 () Real)
(declare-fun x201 () Real)
(declare-fun x1555 () x914)
(declare-fun x633 () Bool)
(declare-fun x145 () Bool)
(declare-fun x1520 () Real)
(declare-fun x749 () Real)
(declare-fun x1522 () Real)
(declare-fun x1264 () Real)
(declare-fun x1576 () Real)
(declare-fun x1075 () Real)
(declare-fun x1544 () Bool)
(declare-fun x1417 () Real)
(declare-fun x230 () Real)
(declare-fun x168 () Real)
(declare-fun x1458 () x914)
(declare-fun x1539 () Bool)
(declare-fun x568 () Real)
(declare-fun x793 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x1466 () Real)
(declare-fun x103 () Real)
(declare-fun x418 () Real)
(declare-fun x1002 () Real)
(declare-fun x560 () Real)
(declare-fun x526 () Real)
(declare-fun x1503 () Real)
(declare-fun x830 () Real)
(declare-fun x1443 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x724 () Real)
(declare-fun x935 () Real)
(declare-fun x195 () x914)
(declare-fun x925 () Bool)
(declare-fun x1533 () Real)
(declare-fun x873 () Real)
(declare-fun x1063 () x914)
(declare-fun x379 () Real)
(declare-fun x488 () Bool)
(declare-fun x186 () Real)
(declare-fun x803 () Real)
(declare-fun x360 () Real)
(declare-fun x762 () Bool)
(declare-fun x388 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x616 () Real)
(declare-fun x1531 () x914)
(declare-fun x1015 () Real)
(declare-fun x1145 () Bool)
(declare-fun x431 () Real)
(declare-fun x112 () Bool)
(declare-fun x1175 () x914)
(declare-fun x1034 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x1570 () Real)
(declare-fun x786 () Bool)
(declare-fun x1312 (Real) Real)
(declare-fun x623 () Real)
(declare-fun x1529 () Real)
(declare-fun x556 () Real)
(declare-fun x248 () Real)
(declare-fun x999 () Bool)
(declare-fun x416 () Real)
(declare-fun x1453 () Real)
(declare-fun x1082 () Bool)
(declare-fun x916 () x914)
(declare-fun x1088 () x914)
(declare-fun x1020 () Bool)
(declare-fun x869 () Bool)
(declare-fun x850 () Real)
(declare-fun x1319 () Real)
(declare-fun x1324 () Real)
(declare-fun x1087 () Real)
(declare-fun x582 () Real)
(declare-fun x652 () Bool)
(declare-fun x1484 () Real)
(declare-fun x654 () x914)
(declare-fun x502 () x914)
(declare-fun x679 () Real)
(declare-fun x922 () Bool)
(declare-fun x53 () x914)
(declare-fun x660 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x702 () Bool)
(declare-fun x765 () Bool)
(declare-fun x1037 () x914)
(declare-fun x1605 () Real)
(declare-fun x423 () Bool)
(declare-fun x1601 () x914)
(declare-fun x1384 () Real)
(declare-fun x1159 () Real)
(declare-fun x1562 () Real)
(declare-fun x1234 () Bool)
(declare-fun x1362 () Real)
(declare-fun x1350 (Real) Real)
(declare-fun x48 () Real)
(declare-fun x567 () Bool)
(declare-fun x511 () x914)
(declare-fun x853 () Real)
(declare-fun x1103 () Bool)
(declare-fun x1540 () Real)
(declare-fun x1323 () x914)
(declare-fun x855 () x914)
(declare-fun x900 () Real)
(declare-fun x737 () Bool)
(declare-fun x49 () Real)
(declare-fun x998 () Real)
(declare-fun x806 () x914)
(declare-fun x545 () Real)
(declare-fun x1231 () Real)
(declare-fun x682 () x914)
(declare-fun x1413 () x914)
(declare-fun x337 () Real)
(declare-fun x429 () Real)
(declare-fun x1229 () Bool)
(declare-fun x996 () Real)
(declare-fun x1052 () Real)
(declare-fun x417 () Real)
(declare-fun x1116 () Bool)
(declare-fun x106 () Real)
(declare-fun x1106 () Real)
(declare-fun x278 () Bool)
(declare-fun x1388 () x914)
(declare-fun x383 () Bool)
(declare-fun x181 () Real)
(declare-fun x135 () Real)
(declare-fun x1335 () Bool)
(declare-fun x1249 () Real)
(declare-fun x219 () Bool)
(declare-fun x735 () Bool)
(declare-fun x217 () x914)
(declare-fun x1073 () Real)
(declare-fun x336 () x914)
(declare-fun x117 () Real)
(declare-fun x505 () x914)
(declare-fun x197 () Real)
(declare-fun x904 () Real)
(declare-fun x81 () Real)
(declare-fun x1211 () x914)
(declare-fun x604 () Real)
(declare-fun x1173 () Real)
(declare-fun x833 () Bool)
(declare-fun x557 () Bool)
(declare-fun x137 () Bool)
(declare-fun x455 () Bool)
(declare-fun x378 () Real)
(declare-fun x621 () Real)
(declare-fun x362 () Bool)
(declare-fun x1432 () Real)
(declare-fun x1098 () x914)
(declare-fun x493 () x914)
(declare-fun x1479 () Real)
(declare-fun x125 () Bool)
(declare-fun x164 () Real)
(declare-fun x131 () Real)
(declare-fun x494 () Real)
(declare-fun x1218 () Bool)
(declare-fun x460 () Real)
(declare-fun x59 () Bool)
(declare-fun x421 () Bool)
(declare-fun x992 () Real)
(declare-fun x1256 () Real)
(declare-fun x1547 () Real)
(declare-fun x1046 () Real)
(declare-fun x871 () Bool)
(declare-fun x802 () x914)
(declare-fun x1174 () Bool)
(declare-fun x605 () Real)
(declare-fun x450 () Real)
(declare-fun x984 () Real)
(declare-fun x85 () Bool)
(declare-fun x465 () Real)
(declare-fun x1147 () Real)
(declare-fun x504 () Real)
(declare-fun x471 () Real)
(declare-fun x324 () Real)
(declare-fun x1344 () x914)
(declare-fun x1603 () x914)
(declare-fun x1310 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x1431 () Real)
(declare-fun x1572 () Bool)
(declare-fun x490 () Real)
(declare-fun x1009 () Real)
(declare-fun x845 () Bool)
(declare-fun x990 () x914)
(declare-fun x1111 () Real)
(declare-fun x1206 () Bool)
(declare-fun x957 () Bool)
(declare-fun x297 () Bool)
(declare-fun x709 () Bool)
(declare-fun x1261 () x914)
(declare-fun x666 () Bool)
(declare-fun x222 () Bool)
(declare-fun x934 () Bool)
(declare-fun x1253 () x914)
(declare-fun x1351 () x914)
(declare-fun x670 () Bool)
(declare-fun x347 () Bool)
(declare-fun x584 () Real)
(declare-fun x51 () Bool)
(declare-fun x761 () Real)
(declare-fun x565 () Real)
(declare-fun x333 () x914)
(declare-fun x1255 () Real)
(declare-fun x31 () Bool)
(declare-fun x327 () Real)
(declare-fun x1436 () Real)
(declare-fun x436 () Real)
(declare-fun x1290 () x914)
(declare-fun x1419 () Real)
(declare-fun x530 () Real)
(declare-fun x796 () Bool)
(declare-fun x797 () Bool)
(declare-fun x391 () Bool)
(declare-fun x228 () Real)
(declare-fun x1209 () Real)
(declare-fun x402 () Bool)
(declare-fun x17 () Real)
(declare-fun x1441 () Bool)
(declare-fun x740 (x914) Real)
(declare-fun x725 () x914)
(declare-fun x711 () Bool)
(declare-fun x259 () Real)
(declare-fun x773 () Real)
(declare-fun x940 () Bool)
(declare-fun x834 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x331 () Real)
(declare-fun x33 () Real)
(declare-fun x951 () Real)
(declare-fun x1382 () Real)
(declare-fun x942 () Real)
(declare-fun x572 () Real)
(declare-fun x722 () Bool)
(declare-fun x784 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x769 () Real)
(declare-fun x366 () Real)
(declare-fun x1156 () x914)
(declare-fun x958 () Real)
(declare-fun x778 () Bool)
(declare-fun x943 () Real)
(declare-fun x581 () Real)
(declare-fun x819 () Real)
(declare-fun x693 () Bool)
(declare-fun x995 () Real)
(declare-fun x1140 () x914)
(declare-fun x772 () Bool)
(declare-fun x364 () x914)
(declare-fun x1030 () Real)
(declare-fun x519 (x914) Real)
(declare-fun x1019 () Real)
(declare-fun x736 () Real)
(declare-fun x36 () Real)
(declare-fun x617 () Real)
(declare-fun x179 () Bool)
(declare-fun x965 () Bool)
(declare-fun x361 () x914)
(declare-fun x70 () Real)
(declare-fun x1405 () Bool)
(declare-fun x1067 () Real)
(declare-fun x1369 () Bool)
(declare-fun x847 () x914)
(declare-fun x1424 (x914) Real)
(declare-fun x836 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x1390 () Real)
(declare-fun x838 () Bool)
(declare-fun x1534 () Real)
(declare-fun x691 () Real)
(declare-fun x1546 () Real)
(declare-fun x458 () Bool)
(declare-fun x680 () x914)
(declare-fun x920 () Bool)
(declare-fun x226 () x914)
(declare-fun x637 () Real)
(declare-fun x99 () Real)
(declare-fun x1086 () Bool)
(declare-fun x579 () Real)
(declare-fun x1066 () Real)
(declare-fun x359 () Bool)
(declare-fun x1477 () Real)
(declare-fun x357 () Real)
(declare-fun x169 () Bool)
(declare-fun x874 () x914)
(declare-fun x713 () Bool)
(declare-fun x79 () Real)
(declare-fun x1391 () Bool)
(declare-fun x332 () x914)
(declare-fun x220 () x914)
(declare-fun x1190 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x986 () Real)
(declare-fun x1345 () Bool)
(declare-fun x738 () Bool)
(declare-fun x338 () Real)
(declare-fun x328 () x914)
(declare-fun x1270 () x914)
(declare-fun x1399 (x914) Real)
(declare-fun x1222 () x914)
(declare-fun x715 () Real)
(declare-fun x1578 () Bool)
(declare-fun x611 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x5 () Bool)
(declare-fun x901 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x906 () Bool)
(declare-fun x323 () Bool)
(declare-fun x344 () Real)
(declare-fun x928 () Real)
(declare-fun x354 () Real)
(declare-fun x107 () x914)
(declare-fun x1461 () x914)
(declare-fun x1489 () Real)
(declare-fun x16 () Bool)
(declare-fun x548 () Real)
(declare-fun x1213 (x914) Real)
(declare-fun x1356 () Real)
(declare-fun x47 () Bool)
(declare-fun x216 () x914)
(declare-fun x975 () Real)
(declare-fun x1515 () Real)
(declare-fun x13 () x914)
(declare-fun x1604 () Real)
(declare-fun x396 () x914)
(declare-fun x527 () Real)
(declare-fun x960 () Real)
(declare-fun x1561 () Bool)
(declare-fun x1481 () x914)
(declare-fun x591 () x914)
(declare-fun x976 () Real)
(declare-fun x311 () Real)
(declare-fun x350 () x914)
(declare-fun x1513 () Real)
(declare-fun x236 () Bool)
(declare-fun x1385 () Real)
(declare-fun x627 () Bool)
(declare-fun x185 (x914) Real)
(declare-fun x306 () Bool)
(declare-fun x559 () Bool)
(declare-fun x1366 () Real)
(declare-fun x487 () x914)
(declare-fun x162 () Bool)
(declare-fun x439 () x914)
(declare-fun x1024 () Real)
(declare-fun x1566 () Real)
(declare-fun x271 () Bool)
(declare-fun x1349 () x914)
(declare-fun x1045 () Bool)
(declare-fun x828 () Real)
(declare-fun x1161 () Bool)
(declare-fun x989 () Real)
(declare-fun x1143 () Bool)
(declare-fun x1220 () x914)
(declare-fun x1139 () Bool)
(declare-fun x326 () Real)
(declare-fun x224 () Real)
(declare-fun x270 () Real)
(declare-fun x967 (x914) Real)
(declare-fun x1429 () x914)
(declare-fun x726 () Real)
(declare-fun x1108 () Bool)
(declare-fun x313 () x914)
(declare-fun x947 () x914)
(declare-fun x609 () Real)
(declare-fun x1228 () Real)
(declare-fun x658 () Real)
(declare-fun x903 () Real)
(declare-fun x322 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x69 () x914)
(declare-fun x1285 () Bool)
(declare-fun x163 () Real)
(declare-fun x776 () Bool)
(declare-fun x1465 () x914)
(declare-fun x239 () Bool)
(declare-fun x894 () Real)
(declare-fun x38 (x914) Real)
(declare-fun x742 () Real)
(declare-fun x111 () Real)
(declare-fun x374 () Real)
(declare-fun x631 () Real)
(declare-fun x1000 () Real)
(declare-fun x317 () Bool)
(declare-fun x84 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x919 () Bool)
(declare-fun x1340 () Real)
(declare-fun x1131 () x914)
(declare-fun x1538 () Real)
(declare-fun x1543 () Bool)
(declare-fun x1437 () Real)
(declare-fun x1411 () Real)
(declare-fun x822 () Bool)
(declare-fun x752 () Bool)
(declare-fun x37 () Real)
(declare-fun x1525 () Real)
(declare-fun x320 () Real)
(declare-fun x2 () x914)
(declare-fun x1420 () Bool)
(declare-fun x442 () Real)
(declare-fun x1011 () Real)
(declare-fun x805 () Bool)
(declare-fun x729 () Real)
(declare-fun x1003 () Bool)
(declare-fun x698 () x914)
(declare-fun x45 () Real)
(declare-fun x1243 () Bool)
(declare-fun x83 () Real)
(declare-fun x731 () x914)
(declare-fun x551 () Real)
(declare-fun x1357 () Real)
(declare-fun x1117 () x914)
(declare-fun x1107 () x914)
(declare-fun x96 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x1338 () Real)
(declare-fun x172 () Real)
(declare-fun x718 (x914) Real)
(declare-fun x1292 () Bool)
(declare-fun x425 () Bool)
(declare-fun x67 () Bool)
(declare-fun x1524 () x914)
(declare-fun x1004 () Bool)
(declare-fun x829 () Real)
(declare-fun x791 () Real)
(declare-fun x1302 () x914)
(declare-fun x1425 () Real)
(declare-fun x1250 () Real)
(declare-fun x908 () Real)
(declare-fun x390 () Bool)
(declare-fun x1039 () x914)
(declare-fun x824 () Bool)
(declare-fun x1584 () Real)
(declare-fun x814 () Bool)
(declare-fun x136 () Real)
(declare-fun x554 () Real)
(declare-fun x1203 () Real)
(declare-fun x308 () Real)
(declare-fun x1061 () Real)
(declare-fun x854 () Real)
(declare-fun x481 () Real)
(declare-fun x1125 () x914)
(declare-fun x80 () Bool)
(declare-fun x1521 () Real)
(declare-fun x1574 () Real)
(declare-fun x891 () x914)
(declare-fun x400 () Real)
(declare-fun x428 () Real)
(declare-fun x583 () Real)
(declare-fun x356 () x914)
(declare-fun x1500 () x914)
(declare-fun x376 () Real)
(declare-fun x235 () Real)
(declare-fun x1394 () Real)
(declare-fun x1026 () Real)
(declare-fun x1476 () Bool)
(declare-fun x399 () x914)
(declare-fun x746 () Real)
(declare-fun x739 () Real)
(declare-fun x963 () Real)
(declare-fun x1502 () Real)
(declare-fun x712 () Real)
(declare-fun x1363 () Real)
(declare-fun x593 () Real)
(declare-fun x1181 () Bool)
(declare-fun x799 () x914)
(declare-fun x134 () Real)
(declare-fun x1184 () Real)
(declare-fun x655 () Bool)
(declare-fun x1280 () x914)
(declare-fun x206 () x914)
(declare-fun x528 () Real)
(declare-fun x1402 () Real)
(declare-fun x1188 () Bool)
(declare-fun x78 () Real)
(declare-fun x896 () Real)
(declare-fun x918 (x914) Real)
(declare-fun x1398 () Bool)
(declare-fun x849 (x914) Real)
(declare-fun x358 () x914)
(declare-fun x196 () Real)
(declare-fun x1330 () Bool)
(declare-fun x485 () x914)
(declare-fun x1056 () x914)
(declare-fun x114 () Bool)
(declare-fun x706 () Real)
(declare-fun x1189 () Real)
(declare-fun x1059 () Bool)
(declare-fun x683 () Real)
(declare-fun x414 () x914)
(declare-fun x1609 () Real)
(declare-fun x842 () Real)
(declare-fun x1096 () Real)
(declare-fun x263 () Bool)
(declare-fun x231 () Bool)
(declare-fun x515 () Real)
(declare-fun x570 () Real)
(declare-fun x380 () Real)
(declare-fun x839 () Real)
(declare-fun x212 () Bool)
(declare-fun x1588 () Real)
(declare-fun x508 () Bool)
(declare-fun x27 () Real)
(declare-fun x1444 () Bool)
(declare-fun x23 () Bool)
(declare-fun x440 () Real)
(declare-fun x302 (Real) Real)
(declare-fun x656 () Real)
(declare-fun x1580 () Real)
(declare-fun x817 () Bool)
(declare-fun x798 () Bool)
(declare-fun x497 () Real)
(declare-fun x1303 () Real)
(declare-fun x1377 () Real)
(declare-fun x1032 () x914)
(declare-fun x1304 () Bool)
(declare-fun x948 () x914)
(declare-fun x760 () Real)
(declare-fun x1022 () Real)
(declare-fun x282 () Real)
(declare-fun x252 () Real)
(declare-fun x1386 () Bool)
(declare-fun x109 () Bool)
(declare-fun x909 () Bool)
(declare-fun x558 () Real)
(declare-fun x1315 (x914) Real)
(declare-fun x1435 () Real)
(declare-fun x1269 () Bool)
(declare-fun x1371 () Real)
(declare-fun x177 () Real)
(declare-fun x1309 () Real)
(declare-fun x675 () Bool)
(declare-fun x1212 () Real)
(declare-fun x71 () Real)
(declare-fun x1473 () x914)
(declare-fun x1367 () Real)
(declare-fun x384 () Real)
(declare-fun x1602 () Bool)
(declare-fun x424 () Real)
(declare-fun x427 () Bool)
(declare-fun x1308 () Real)
(declare-fun x1505 () Real)
(declare-fun x50 () x914)
(declare-fun x665 () x914)
(declare-fun x1373 () Real)
(declare-fun x119 () Bool)
(declare-fun x1008 () Real)
(declare-fun x606 () Real)
(declare-fun x1150 (Real) Real)
(declare-fun x92 () Real)
(declare-fun x687 () Real)
(declare-fun x1217 () Real)
(declare-fun x1021 () x914)
(declare-fun x139 () Bool)
(declare-fun x1083 () Real)
(declare-fun x610 () Real)
(declare-fun x779 () Real)
(declare-fun x1416 () Real)
(declare-fun x708 () Real)
(declare-fun x689 () x914)
(declare-fun x1414 () Bool)
(declare-fun x1422 () Real)
(declare-fun x477 () x914)
(declare-fun x1081 () Real)
(declare-fun x1078 () Real)
(declare-fun x449 () x914)
(declare-fun x1556 () Bool)
(declare-fun x1246 () Real)
(declare-fun x1053 (Real) Real)
(declare-fun x1057 () Bool)
(declare-fun x553 () Real)
(declare-fun x956 () x914)
(declare-fun x1428 () Real)
(declare-fun x820 () x914)
(declare-fun x756 () Real)
(declare-fun x392 () Bool)
(declare-fun x40 () Bool)
(declare-fun x1244 () Real)
(declare-fun x89 () Real)
(declare-fun x587 (Real) Real)
(declare-fun x369 () Real)
(declare-fun x1272 () Real)
(declare-fun x353 () Bool)
(declare-fun x90 () Real)
(declare-fun x1079 () Real)
(declare-fun x456 () Real)
(declare-fun x1259 () Real)
(declare-fun x21 () Bool)
(declare-fun x1172 () Real)
(declare-fun x877 () x914)
(declare-fun x1287 () Real)
(declare-fun x926 () Bool)
(declare-fun x63 () Real)
(declare-fun x1051 () Real)
(declare-fun x1587 () Bool)
(declare-fun x977 () x914)
(declare-fun x1446 () Real)
(declare-fun x634 () Real)
(declare-fun x15 () Bool)
(declare-fun x1396 () Real)
(declare-fun x66 () x914)
(declare-fun x566 () Real)
(declare-fun x1029 () Real)
(declare-fun x389 () Real)
(declare-fun x1221 () Real)
(declare-fun x441 () Real)
(declare-fun x866 () Bool)
(declare-fun x1317 () x914)
(declare-fun x1327 () Real)
(declare-fun x24 () Real)
(declare-fun x1054 () Real)
(declare-fun x1332 () Bool)
(declare-fun x1482 (x914) Real)
(declare-fun x1545 () Real)
(declare-fun x464 () Real)
(declare-fun x1205 () Real)
(declare-fun x831 () Real)
(declare-fun x409 () Real)
(declare-fun x448 () Real)
(declare-fun x1510 () Bool)
(declare-fun x937 () x914)
(declare-fun x275 () Real)
(declare-fun x1442 () Real)
(declare-fun x468 () Bool)
(declare-fun x18 () x914)
(declare-fun x269 () Real)
(declare-fun x1370 () x914)
(declare-fun x284 () Bool)
(declare-fun x503 () Bool)
(declare-fun x1360 () Real)
(declare-fun x318 () Real)
(declare-fun x1180 () Real)
(declare-fun x860 () Bool)
(declare-fun x1132 () x914)
(declare-fun x1512 () Real)
(declare-fun x496 () x914)
(declare-fun x1294 () Real)
(declare-fun x73 () Real)
(declare-fun x1091 () Bool)
(declare-fun x1314 () Real)
(declare-fun x1591 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1135 () Real)
(declare-fun x1133 () Real)
(declare-fun x1122 () Real)
(declare-fun x846 () x914)
(declare-fun x686 (Real) Real)
(declare-fun x1198 () Real)
(declare-fun x1403 () Real)
(declare-fun x588 () Bool)
(declare-fun x3 () x914)
(declare-fun x387 () Bool)
(declare-fun x980 () Real)
(declare-fun x707 () Bool)
(declare-fun x12 () Real)
(declare-fun x1070 () x914)
(declare-fun x489 () Real)
(declare-fun x648 () Bool)
(declare-fun x1171 () Real)
(declare-fun x1445 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x191 () Real)
(declare-fun x28 () Real)
(declare-fun x156 () Real)
(declare-fun x685 () Real)
(declare-fun x540 () Bool)
(declare-fun x840 () Bool)
(declare-fun x912 () Real)
(declare-fun x1262 () Real)
(declare-fun x459 () Bool)
(declare-fun x684 () x914)
(declare-fun x245 () Real)
(declare-fun x492 () Real)
(declare-fun x1571 () Bool)
(declare-fun x520 () Real)
(declare-fun x790 () Real)
(declare-fun x1468 () Real)
(declare-fun x1199 () Real)
(declare-fun x781 () Real)
(declare-fun x622 () Real)
(declare-fun x618 () Bool)
(declare-fun x907 () Real)
(declare-fun x375 () Real)
(declare-fun x500 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x1041 () Real)
(declare-fun x419 () x914)
(declare-fun x250 () x914)
(declare-fun x142 () Real)
(declare-fun x578 () Bool)
(declare-fun x770 () x914)
(declare-fun x944 () Real)
(declare-fun x214 () Real)
(declare-fun x647 () x914)
(declare-fun x586 (Real) Real)
(declare-fun x993 () Bool)
(declare-fun x1353 () Real)
(declare-fun x120 () Real)
(declare-fun x603 () Real)
(declare-fun x818 () Real)
(declare-fun x1129 () Real)
(declare-fun x432 () Bool)
(declare-fun x1508 () Real)
(declare-fun x126 () Bool)
(declare-fun x516 () x914)
(declare-fun x590 () Real)
(declare-fun x794 () Real)
(declare-fun x1010 () x914)
(declare-fun x1134 () Bool)
(declare-fun x401 () Real)
(declare-fun x1434 () Real)
(declare-fun x435 () Real)
(declare-fun x1553 () Bool)
(declare-fun x864 () x914)
(declare-fun x184 () x914)
(declare-fun x98 () Bool)
(declare-fun x1237 () Real)
(declare-fun x969 () x914)
(declare-fun x348 () Bool)
(declare-fun x158 () Real)
(declare-fun x763 () Real)
(declare-fun x157 () Real)
(declare-fun x1013 () Real)
(declare-fun x1364 (Real) Real)
(declare-fun x377 () Bool)
(declare-fun x555 (Real) Real)
(declare-fun x577 () Real)
(declare-fun x1483 () x914)
(declare-fun x1375 () Real)
(declare-fun x457 () Real)
(declare-fun x1166 () Bool)
(declare-fun x897 () Real)
(declare-fun x884 (x914) Real)
(declare-fun x1105 () x914)
(declare-fun x638 () Real)
(declare-fun x143 () Real)
(declare-fun x1235 () Real)
(declare-fun x301 () Real)
(declare-fun x532 () x914)
(declare-fun x1440 () x914)
(declare-fun x1076 () Real)
(declare-fun x430 () Real)
(declare-fun x4 () Real)
(declare-fun x370 () Real)
(declare-fun x663 () Bool)
(declare-fun x1286 () Real)
(declare-fun x470 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1227 () Real)
(declare-fun x74 () x914)
(declare-fun x1266 () Real)
(declare-fun x674 () x914)
(declare-fun x875 () Real)
(declare-fun x1036 () Real)
(declare-fun x592 () x914)
(declare-fun x72 () Real)
(declare-fun x745 () x914)
(declare-fun x286 () Bool)
(declare-fun x355 () Bool)
(declare-fun x225 () Bool)
(declare-fun x671 () Bool)
(declare-fun x1006 () Real)
(declare-fun x406 () Real)
(declare-fun x1241 (x914) Real)
(declare-fun x411 () Real)
(declare-fun x1058 () Real)
(declare-fun x835 () Bool)
(declare-fun x1119 () Real)
(declare-fun x550 () x914)
(declare-fun x1343 () Real)
(declare-fun x1499 () Real)
(declare-fun x1439 () Real)
(declare-fun x1236 () Real)
(declare-fun x1223 () Real)
(declare-fun x1151 () Bool)
(declare-fun x150 () Bool)
(declare-fun x209 () Real)
(declare-fun x614 () Real)
(declare-fun x341 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1215 () Real)
(declare-fun x1558 () Real)
(declare-fun x451 (Real) Real)
(declare-fun x774 () x914)
(declare-fun x1454 () Bool)
(declare-fun x1263 () x914)
(declare-fun x413 () Bool)
(declare-fun x857 () Real)
(declare-fun x882 () x914)
(declare-fun x994 () Bool)
(declare-fun x1099 () Real)
(declare-fun x1451 () Real)
(declare-fun x1517 () Bool)
(declare-fun x75 () x914)
(declare-fun x1195 () x914)
(declare-fun x589 () Real)
(declare-fun x1611 () Real)
(declare-fun x1104 () Real)
(declare-fun x1014 () Bool)
(declare-fun x767 () Bool)
(declare-fun x232 () x914)
(declare-fun x598 () Real)
(declare-fun x1599 () Real)
(declare-fun x700 () Bool)
(declare-fun x801 () Real)
(declare-fun x1449 () x914)
(declare-fun x288 () Real)
(declare-fun x183 () Real)
(declare-fun x546 () Bool)
(declare-fun x881 () Real)
(declare-fun x412 () Real)
(declare-fun x149 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x1090 () x914)
(declare-fun x1583 () x914)
(declare-fun x1575 () Real)
(declare-fun x531 () Bool)
(declare-fun x166 () Bool)
(declare-fun x303 () Real)
(declare-fun x398 () Real)
(declare-fun x852 () x914)
(declare-fun x1359 () Real)
(declare-fun x732 () Bool)
(declare-fun x363 () Real)
(declare-fun x42 () Bool)
(declare-fun x1528 () x914)
(declare-fun x883 () Real)
(declare-fun x730 () Bool)
(declare-fun x743 () Bool)
(declare-fun x298 () x914)
(declare-fun x43 () Bool)
(declare-fun x1158 () x914)
(declare-fun x316 () Real)
(declare-fun x434 () Real)
(declare-fun x1491 () Real)
(declare-fun x104 () x914)
(declare-fun x35 () Real)
(declare-fun x482 () Bool)
(declare-fun x335 (Real) Real)
(declare-fun x352 () Real)
(declare-fun x1016 () Real)
(declare-fun x1380 () Real)
(declare-fun x77 () Bool)
(declare-fun x1608 () Real)
(declare-fun x26 () Real)
(declare-fun x602 () x914)
(declare-fun x899 () x914)
(declare-fun x393 () Bool)
(declare-fun x159 () Real)
(declare-fun x758 () Real)
(declare-fun x885 () Real)
(declare-fun x509 () x914)
(declare-fun x954 () Real)
(declare-fun x1138 () Real)
(declare-fun x115 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x657 () Real)
(declare-fun x1282 () Real)
(declare-fun x547 () Bool)
(declare-fun x1462 () x914)
(declare-fun x29 () Real)
(declare-fun x1065 (Real) Real)
(declare-fun x1535 () Real)
(declare-fun x629 () x914)
(declare-fun x349 () Bool)
(declare-fun x330 (Real) Real)
(declare-fun x1387 () x914)
(declare-fun x466 () Real)
(declare-fun x607 () Real)
(declare-fun x202 () Real)
(declare-fun x949 () Real)
(declare-fun x887 () x914)
(declare-fun x1475 () x914)
(declare-fun x599 (Real) Real)
(declare-fun x491 () Real)
(declare-fun x281 () Real)
(declare-fun x1610 () Real)
(declare-fun x234 () Real)
(declare-fun x86 () Real)
(declare-fun x952 () x914)
(declare-fun x518 () Real)
(declare-fun x1040 () Real)
(declare-fun x1316 () Real)
(declare-fun x198 () Bool)
(declare-fun x1600 () Real)
(declare-fun x176 () x914)
(declare-fun x800 () x914)
(declare-fun x151 () Bool)
(declare-fun x959 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x325 () Bool)
(declare-fun x290 (Real) Real)
(declare-fun x433 () Real)
(declare-fun x985 () Bool)
(declare-fun x405 () x914)
(declare-fun x1541 () Real)
(declare-fun x146 () Bool)
(declare-fun x93 () Real)
(declare-fun x892 () Real)
(declare-fun x213 () Real)
(declare-fun x720 () Real)
(declare-fun x1365 () x914)
(declare-fun x506 () Bool)
(declare-fun x295 () Real)
(declare-fun x1507 () Real)
(declare-fun x480 () x914)
(declare-fun x1563 () Real)
(declare-fun x46 () Real)
(declare-fun x1494 () Bool)
(declare-fun x1326 () Real)
(declare-fun x669 () Real)
(declare-fun x643 () Real)
(declare-fun x437 () Real)
(declare-fun x695 () x914)
(declare-fun x973 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x1100 () Real)
(declare-fun x1291 () Real)
(declare-fun x939 (Real) Real)
(declare-fun x902 () x914)
(declare-fun x886 () Real)
(declare-fun x1124 () Real)
(declare-fun x1183 () Real)
(declare-fun x538 () Real)
(declare-fun x878 () Real)
(declare-fun x319 () Real)
(declare-fun x55 () Real)
(declare-fun x1311 () Real)
(declare-fun x1102 () Bool)
(declare-fun x309 () Bool)
(declare-fun x1486 () Real)
(declare-fun x1247 () Real)
(declare-fun x1333 () Real)
(declare-fun x382 () Real)
(declare-fun x1177 (Real) Real)
(declare-fun x329 () x914)
(declare-fun x426 () Real)
(declare-fun x1564 () Real)
(declare-fun x64 () Real)
(declare-fun x1069 () x914)
(declare-fun x1192 () Real)
(declare-fun x1121 () Real)
(declare-fun x1101 () Bool)
(declare-fun x859 () Bool)
(declare-fun x194 () Bool)
(declare-fun x848 () Bool)
(declare-fun x310 () Bool)
(declare-fun x837 () Bool)
(declare-fun x911 () Real)
(declare-fun x1182 () Bool)
(declare-fun x862 () Bool)
(declare-fun x1379 () Real)
(declare-fun x294 () Real)
(declare-fun x193 () Real)
(declare-fun x1123 () Bool)
(declare-fun x351 () Real)
(declare-fun x1072 () Real)
(declare-fun x771 () Bool)
(declare-fun x321 () Real)
(declare-fun x1433 () Real)
(declare-fun x970 () Bool)
(declare-fun x932 () Real)
(declare-fun x1275 () Bool)
(declare-fun x1506 () x914)
(declare-fun x1154 () Real)
(declare-fun x563 () Bool)
(declare-fun x68 () Real)
(declare-fun x1612 () x914)
(declare-fun x1299 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x265 () Real)
(declare-fun x1463 (x914) Real)
(declare-fun x1577 () Bool)
(declare-fun x273 () Real)
(declare-fun x1410 () Bool)
(declare-fun x171 () Real)
(declare-fun x858 () Bool)
(declare-fun x668 () Bool)
(declare-fun x210 () x914)
(declare-fun x1185 () Real)
(declare-fun x1257 () Bool)
(declare-fun x314 () Real)
(declare-fun x1318 () Real)
(declare-fun x615 () Bool)
(declare-fun x133 () Bool)
(declare-fun x1232 () x914)
(declare-fun x561 () Bool)
(declare-fun x207 () Real)
(declare-fun x165 () Real)
(declare-fun x946 () Bool)
(declare-fun x1128 () Real)
(declare-fun x108 () Bool)
(declare-fun x443 () Real)
(declare-fun x635 () Real)
(declare-fun x927 () Real)
(declare-fun x256 (Real) Real)
(declare-fun x681 () Bool)
(declare-fun x826 () Real)
(declare-fun x1565 () Bool)
(declare-fun x507 () Real)
(declare-fun x804 () Bool)
(declare-fun x1136 () Real)
(declare-fun x865 () Real)
(declare-fun x1025 () Real)
(declare-fun x893 () Real)
(declare-fun x880 () Bool)
(declare-fun x1509 () Real)
(declare-fun x1504 () Real)
(declare-fun x1160 () Real)
(declare-fun x696 () Real)
(declare-fun x1519 () x914)
(declare-fun x1251 () Real)
(declare-fun x690 () Real)
(declare-fun x1225 (Real) Real)
(declare-fun x1097 () Bool)
(declare-fun x1094 () Real)
(declare-fun x1487 (Real) Real)
(declare-fun x619 () Bool)
(declare-fun x56 () x914)
(declare-fun x537 () Bool)
(declare-fun x129 () x914)
(declare-fun x1467 () x914)
(declare-fun x1113 () Real)
(declare-fun x39 () Real)
(declare-fun x305 () Bool)
(declare-fun x1296 () x914)
(declare-fun x1179 () x914)
(declare-fun x1407 () Real)
(declare-fun x1557 () Real)
(declare-fun x203 () Real)
(declare-fun x403 () Real)
(declare-fun x95 () Real)
(declare-fun x982 () Bool)
(declare-fun x1242 () Real)
(declare-fun x246 () x914)
(declare-fun x1146 () Real)
(declare-fun x444 () Real)
(declare-fun x1271 () Real)
(declare-fun x499 () Bool)
(declare-fun x1355 () Real)
(declare-fun x339 () Real)
(declare-fun x315 () Bool)
(declare-fun x612 () x914)
(declare-fun x941 () Real)
(declare-fun x1381 () Bool)
(declare-fun x138 () Real)
(declare-fun x1216 () Bool)
(declare-fun x300 () Bool)
(declare-fun x747 () Bool)
(declare-fun x408 () Bool)
(declare-fun x1214 () Real)
(declare-fun x1401 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x1423 () Real)
(declare-fun x255 () Bool)
(declare-fun x1109 () x914)
(declare-fun x544 () Real)
(declare-fun x843 () x914)
(declare-fun x1047 () Real)
(declare-fun x1284 () Real)
(declare-fun x404 () Real)
(declare-fun x755 () Bool)
(declare-fun x452 () Real)
(declare-fun x974 () Bool)
(declare-fun x972 () Bool)
(declare-fun x938 () Bool)
(declare-fun x659 () Bool)
(declare-fun x1448 () x914)
(declare-fun x1031 () Real)
(declare-fun x1337 () Bool)
(declare-fun x454 () Real)
(declare-fun x1536 () Real)
(declare-fun x132 () Real)
(declare-fun x61 () x914)
(declare-fun x1438 () Bool)
(declare-fun x529 () Bool)
(declare-fun x395 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x373 () Real)
(declare-fun x1342 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x289 () Real)
(declare-fun x1334 (Real) Real)
(declare-fun x775 () Bool)
(declare-fun x32 () Bool)
(declare-fun x1155 () Real)
(declare-fun x1293 () x914)
(declare-fun x856 () Real)
(declare-fun x1200 () Real)
(declare-fun x1298 () Real)
(declare-fun x575 (Real) Real)
(declare-fun x751 () Bool)
(declare-fun x723 () x914)
(declare-fun x1518 () x914)
(declare-fun x280 () x914)
(declare-fun x716 () Real)
(declare-fun x945 () Real)
(declare-fun x1560 () Real)
(declare-fun x777 () Bool)
(declare-fun x474 () Real)
(declare-fun x1321 () Real)
(declare-fun x394 () Real)
(declare-fun x57 () x914)
(declare-fun x1170 () x914)
(declare-fun x1331 () Real)
(declare-fun x1118 () x914)
(declare-fun x251 () Real)
(declare-fun x662 (x914) Real)
(declare-fun x968 () Real)
(declare-fun x1127 () Real)
(declare-fun x1248 () Real)
(declare-fun x987 () Real)
(declare-fun x484 () Real)
(declare-fun x1523 () x914)
(declare-fun x94 () Real)
(declare-fun x285 () Real)
(declare-fun x653 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1354 () Real)
(declare-fun x1495 () Real)
(declare-fun x1478 () Real)
(declare-fun x522 () Real)
(declare-fun x1459 () Real)
(declare-fun x385 () x914)
(declare-fun x10 () Real)
(declare-fun x997 () x914)
(declare-fun x386 () Real)
(declare-fun x397 () Real)
(declare-fun x1568 () Bool)
(declare-fun x539 () Bool)
(declare-fun x367 (Real) x914)
(declare-fun x1043 () Real)
(declare-fun x1485 () Bool)
(declare-fun x187 () x914)
(declare-fun x1427 () Real)
(declare-fun x787 () Bool)
(declare-fun x227 (Real) Real)
(declare-fun x876 () Bool)
(declare-fun x1230 () Real)
(declare-fun x1497 () Real)
(declare-fun x782 () x914)
(declare-fun x721 () Real)
(declare-fun x97 () Bool)
(declare-fun x710 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x237 () x914)
(declare-fun x365 () Real)
(declare-fun x312 () Real)
(declare-fun x262 () Bool)
(declare-fun x1289 () Real)
(declare-fun x543 () Bool)
(declare-fun x549 () Real)
(declare-fun x1582 () Bool)
(declare-fun x512 () Real)
(declare-fun x764 () Real)
(declare-fun x1415 () Bool)
(declare-fun x267 () Bool)
(declare-fun x445 () Bool)
(declare-fun x147 () x914)
(declare-fun x261 () Real)
(declare-fun x1368 () Real)
(declare-fun x167 () Bool)
(declare-fun x1348 () Real)
(declare-fun x1089 () Real)
(declare-fun x160 () Real)
(declare-fun x174 () Real)
(declare-fun x472 () Real)
(declare-fun x6 () Real)
(declare-fun x981 () Bool)
(declare-fun x274 () Bool)
(declare-fun x110 () x914)
(declare-fun x247 (x914) Real)
(declare-fun x910 () x914)
(declare-fun x1238 () Real)
(declare-fun x1141 () Bool)
(declare-fun x1027 () x914)
(declare-fun x260 () Real)
(declare-fun x533 () Real)
(declare-fun x514 () Real)
(declare-fun x127 () Real)
(declare-fun x811 () Bool)
(declare-fun x1406 () Real)
(declare-fun x1516 () Real)
(declare-fun x1033 () Real)
(declare-fun x825 () x914)
(declare-fun x1283 () Real)
(declare-fun x1080 () Bool)
(declare-fun x307 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x1074 () Real)
(declare-fun x1573 () Real)
(declare-fun x1455 () x914)
(declare-fun x14 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x636 () Real)
(declare-fun x293 () x914)
(declare-fun x917 () Real)
(declare-fun x495 () Real)
(declare-fun x964 () Real)
(declare-fun x759 () Real)
(declare-fun x541 () Real)
(declare-fun x1300 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x1239 () x914)
(declare-fun x1593 () x914)
(declare-fun x1457 () Bool)
(declare-fun x188 () x914)
(declare-fun x469 () Real)
(declare-fun x1567 () x914)
(declare-fun x923 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x813 () Real)
(declare-fun x1325 () Bool)
(declare-fun x479 () Real)
(declare-fun x173 () Bool)
(declare-fun x123 () Bool)
(declare-fun x476 () Real)
(declare-fun x525 () Real)
(declare-fun x122 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x536 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x1306 () Real)
(declare-fun x1488 () Real)
(declare-fun x988 () Real)
(declare-fun x1204 () Bool)
(declare-fun x667 () x914)
(declare-fun x11 (x914) Real)
(declare-fun x1084 () Bool)
(declare-fun x719 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x153 () Bool)
(declare-fun x1559 () Real)
(declare-fun x101 () Real)
(declare-fun x254 () Real)
(declare-fun x1594 () Bool)
(declare-fun x276 () Bool)
(declare-fun x475 () Bool)
(declare-fun x678 () Real)
(declare-fun x562 () Real)
(declare-fun x879 () Real)
(declare-fun x931 () Bool)
(declare-fun x478 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x867 () Real)
(declare-fun x645 () Real)
(declare-fun x694 () Real)
(declare-fun x415 () Real)
(declare-fun x564 () Bool)
(declare-fun x744 () Real)
(declare-fun x1598 () Bool)
(declare-fun x961 () Bool)
(declare-fun x933 () Real)
(declare-fun x268 () x914)
(declare-fun x1408 () x914)
(declare-fun x768 () x914)
(declare-fun x936 () x914)
(declare-fun x463 () Real)
(declare-fun x733 () Real)
(declare-fun x345 () Bool)
(declare-fun x870 () Bool)
(declare-fun x785 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x600 () x914)
(declare-fun x644 () x914)
(declare-fun x757 () Bool)
(declare-fun x371 () Bool)
(declare-fun x291 () Bool)
(declare-fun x641 () Bool)
(declare-fun x821 () Bool)
(declare-fun x368 () Real)
(declare-fun x1393 () Real)
(declare-fun x1114 () Real)
(define-fun x734 ((x914 x914) (x34 Real)) x914 (ite ((_ is x7) x914) (x7 (x304 x914) (+ x34 (x542 x914))) (ite ((_ is x1392) x914) (x1392 (x1474 x914) (x257 x914) (+ x34 (x513 x914))) (x872 (+ x34 (x868 x914))))))
(define-fun x372 ((x1372 Real)) Real (ite (and (>= x1372 0) (< x1372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1372 (- x1372 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x25 ((x1372 Real)) Real (ite (and (>= x1372 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1372 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1372) x1372))
(define-fun x253 ((x585 Real)) Bool (and (<= 0 x585) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x585)))
(define-fun x1336 ((x585 Real)) Bool (and (= (x1162 115792089237316195423570985008687907853269984665640564039457584007913129639935 x585) x585) (= (x1162 x585 115792089237316195423570985008687907853269984665640564039457584007913129639935) x585)))
(define-fun x1527 ((x585 Real)) Bool (and (= 0 (x1162 0 x585)) (= (x1162 x585 0) 0)))
(define-fun x661 ((x585 Real)) Bool (= x585 (x1162 x585 x585)))
(define-fun x608 ((x585 Real)) Bool (and (x1336 x585) (x661 x585) (x1527 x585)))
(define-fun x8 ((x585 Real)) Bool (= (x1162 1461501637330902918203684832716283019655932542975 (x1162 1461501637330902918203684832716283019655932542975 x585)) (x1162 1461501637330902918203684832716283019655932542975 x585)))
(define-fun x343 ((x585 Real)) Bool (=> (and (>= x585 0) (< x585 1461501637330902918203684832716283019655932542976)) (= (x1162 1461501637330902918203684832716283019655932542975 x585) x585)))
(define-fun x1012 ((x585 Real)) Bool (=> (= (x1162 1461501637330902918203684832716283019655932542975 x585) x585) (and (>= x585 0) (> 1461501637330902918203684832716283019655932542976 x585))))
(define-fun x863 ((x585 Real)) Bool (=> (and (>= x585 1461501637330902918203684832716283019655932542976) (< x585 2923003274661805836407369665432566039311865085952)) (= (- x585 1461501637330902918203684832716283019655932542976) (x1162 1461501637330902918203684832716283019655932542975 x585))))
(define-fun x1456 ((x585 Real) (x1305 Real)) Bool (and (= x585 (+ (* x1305 1461501637330902918203684832716283019655932542976) (x1162 1461501637330902918203684832716283019655932542975 x585))) (<= 0 x1305)))
(define-fun x1193 ((x585 Real) (x1224 Real)) Bool (and (x1456 x585 x1224) (x1012 x585) (x343 x585) (x863 x585) (x8 x585)))
(define-fun x240 ((x585 Real) (x1305 Real)) Bool (= (x1162 x585 x1305) (x1162 x1305 x585)))
(define-fun x1579 ((x585 Real) (x1305 Real)) Bool (and (<= 0 (x1162 x585 x1305)) (=> (>= x1305 0) (<= (x1162 x585 x1305) x1305)) (=> (<= 0 x585) (>= x585 (x1162 x585 x1305)))))
(define-fun x1551 ((x585 Real) (x1305 Real)) Bool (and (x240 x585 x1305) (x1579 x585 x1305)))
(define-fun x1112 ((x585 Real) (x1224 Real)) Bool (and (x1551 x585 1461501637330902918203684832716283019655932542975) (x1193 x585 x1224)))
(define-fun x420 ((x585 Real)) Bool (= (x1162 26959946667150639794667015087019630673637144422540572481103610249215 x585) (x1162 26959946667150639794667015087019630673637144422540572481103610249215 (x1162 26959946667150639794667015087019630673637144422540572481103610249215 x585))))
(define-fun x534 ((x585 Real)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x585) (>= x585 0)) (= x585 (x1162 26959946667150639794667015087019630673637144422540572481103610249215 x585))))
(define-fun x929 ((x585 Real)) Bool (=> (= x585 (x1162 26959946667150639794667015087019630673637144422540572481103610249215 x585)) (and (< x585 26959946667150639794667015087019630673637144422540572481103610249216) (<= 0 x585))))
(define-fun x1328 ((x585 Real)) Bool (=> (and (< x585 53919893334301279589334030174039261347274288845081144962207220498432) (>= x585 26959946667150639794667015087019630673637144422540572481103610249216)) (= (- x585 26959946667150639794667015087019630673637144422540572481103610249216) (x1162 26959946667150639794667015087019630673637144422540572481103610249215 x585))))
(define-fun x264 ((x585 Real) (x1305 Real)) Bool (and (>= x1305 0) (= (+ (* x1305 26959946667150639794667015087019630673637144422540572481103610249216) (x1162 26959946667150639794667015087019630673637144422540572481103610249215 x585)) x585)))
(define-fun x823 ((x585 Real) (x1224 Real)) Bool (and (x264 x585 x1224) (x929 x585) (x1328 x585) (x534 x585) (x420 x585)))
(define-fun x1426 ((x585 Real) (x1224 Real)) Bool (and (x1551 x585 26959946667150639794667015087019630673637144422540572481103610249215) (x823 x585 x1224)))
(define-fun x1550 ((x585 Real)) Bool (= (x1162 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1162 115792089237316195423570985008687907853269984665640564039457584007913129639904 x585)) (x1162 115792089237316195423570985008687907853269984665640564039457584007913129639904 x585)))
(define-fun x467 ((x585 Real)) Bool (=> (and (>= x585 0) (> 32 x585)) (= (x1162 115792089237316195423570985008687907853269984665640564039457584007913129639904 x585) 0)))
(define-fun x651 ((x585 Real) (x1305 Real) (x888 Real) (x208 Real)) Bool (and (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x888) (= x585 (+ (* 32 x888) (* x208 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1305)) (> 1 x208) (< x1305 32) (>= x208 0) (<= 0 x888) (>= x1305 0) (= (* x888 32) (x1162 115792089237316195423570985008687907853269984665640564039457584007913129639904 x585))))
(define-fun x807 ((x585 Real) (x753 Real) (x1498 Real) (x1320 Real)) Bool (and (x1550 x585) (x467 x585) (x651 x585 x753 x1498 x1320)))
(define-fun x573 ((x585 Real) (x753 Real) (x1498 Real) (x1320 Real)) Bool (and (x807 x585 x753 x1498 x1320) (x1551 x585 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1329 ((x346 Real)) Real (x302 x346))
(define-fun x243 ((x346 Real)) Real (ite (= x346 128) x230 (x686 x346)))
(define-fun x692 ((x346 Real)) Real (ite (and (>= x346 160) (< x346 (+ x433 160))) (x302 (+ (- x346 160) x816)) (x243 x346)))
(define-fun x1130 ((x346 Real)) Real (ite (= x254 x346) 0 (x692 x346)))
(define-fun x116 ((x346 Real)) Real (ite (and (<= x964 x346) (< x346 (+ x964 x760))) (x302 (+ (- x346 x964) x1613)) (x227 x346)))
(define-fun x1501 ((x346 x914)) Real (ite (= x1165 x346) x471 (x11 x346)))
(define-fun x788 ((x346 x914)) Real (ite (= x346 x1219) x471 (x11 x346)))
(define-fun x200 ((x346 x914)) Real (ite (= x346 x843) x471 (x185 x346)))
(define-fun x205 ((x346 x914)) Real (ite (= x232 x346) x471 (x185 x346)))
(define-fun x523 ((x346 x914)) Real (ite (and x23 x1275) (x185 x346) (ite (and x835 x919) (x11 x346) (ite (and (not x1414) x14) (x200 x346) (x205 x346)))))
(define-fun x1207 ((x346 x914)) Real (ite (= x346 x1220) x471 (x1463 x346)))
(define-fun x703 ((x346 x914)) Real (ite (= x346 x293) x471 (x1463 x346)))
(define-fun x524 ((x346 x914)) Real (ite (= x346 x1519) x471 (x1463 x346)))
(define-fun x1168 ((x346 x914)) Real (ite (= x346 x280) x471 (x884 x346)))
(define-fun x924 ((x346 x914)) Real (ite (= x667 x346) x471 (x884 x346)))
(define-fun x258 ((x346 x914)) Real (ite (= x346 x187) x471 (x884 x346)))
(define-fun x501 ((x346 x914)) Real (ite (and x1275 x23) (x884 x346) (ite (and x919 x835) (x1463 x346) (ite (and (not x1190) x1325 (not x51)) (x1168 x346) (ite (and x1325 x1190 (not x51)) (x924 x346) (x258 x346))))))
(define-fun x60 ((x346 x914)) Real (ite (= x206 x346) x986 (x1399 x346)))
(define-fun x688 ((x346 x914)) Real (ite (= x176 x346) x1343 (x1213 x346)))
(define-fun x1068 ((x346 x914)) Real (ite (and (not x1414) x14) (x688 x346) (x1213 x346)))
(define-fun x20 ((x346 x914)) Real (ite (and x1275 x23) (x1213 x346) (ite (and x919 x835) (x1399 x346) (x1068 x346))))
(define-fun x1464 ((x346 x914)) Real (ite (= x129 x346) x373 (x1482 x346)))
(define-fun x381 ((x346 x914)) Real (ite (= x346 x997) x495 (x714 x346)))
(define-fun x510 ((x346 x914)) Real (ite (and x1325 (not x1190) (not x51)) (x381 x346) (x714 x346)))
(define-fun x229 ((x346 x914)) Real (ite (and x1275 x23) (x714 x346) (ite (and x919 x835) (x1482 x346) (x510 x346))))
(define-fun x100 ((x346 x914)) Real (ite (= x346 x847) x1374 (x38 x346)))
(define-fun x1044 ((x346 x914)) Real (ite (= x361 x346) x155 (x967 x346)))
(define-fun x1526 ((x346 x914)) Real (ite (and x1275 x23) (x1315 x346) (ite (and x835 x919) (x849 x346) (ite (and x1517 (not x115) x14 (not x1062)) (x967 x346) (ite (and (not x1062) x14 (not x1517)) (x1315 x346) (ite (and x1062 x14) (x1315 x346) (x1044 x346)))))))
(define-fun x1176 ((x346 Real)) Real (ite (= x346 x1558) x440 (x587 x346)))
(define-fun x889 ((x346 Real)) Real (ite (= x685 x346) x621 (x1176 x346)))
(define-fun x422 ((x346 Real)) Real (ite (and x805 x5) (x587 x346) (x889 x346)))
(define-fun x1254 ((x346 Real)) Real (ite (= x346 x30) x794 (x422 x346)))
(define-fun x642 ((x346 Real)) Real (ite (= x346 x1159) x81 (x586 x346)))
(define-fun x1048 ((x346 Real)) Real (ite (= x346 x1416) x1264 (x1150 x346)))
(define-fun x1490 ((x346 Real)) Real (ite (= x1250 x346) x1297 (x1048 x346)))
(define-fun x795 ((x346 Real)) Real (ite (and x1325 (not x1190) (not x51)) (x1490 x346) (ite (and x1325 (not x51) x1190) (x1490 x346) (x1150 x346))))
(define-fun x630 ((x346 x914)) Real (ite (= x346 x745) x988 (x740 x346)))
(define-fun x190 ((x346 x914)) Real (ite (and x970 x263) (x740 x346) (x630 x346)))
(define-fun x189 ((x346 x914)) Real (ite (= x346 x1175) x1311 (x1424 x346)))
(define-fun x1208 ((x346 x914)) Real (ite (and x805 x601) (x1424 x346) (x189 x346)))
(define-fun x161 ((x346 Real)) Real (ite (= x1362 x346) x463 (x795 x346)))
(define-fun x812 ((x346 Real)) Real (ite (= x346 x605) x1192 (x1312 x346)))
(define-fun x1252 ((x346 Real)) Real (ite (and x23 x1275) (x1150 x346) (ite (and x919 x835) (x587 x346) (ite (and (not x115) x14 x1517 (not x1062)) (x1312 x346) (ite (and x14 (not x1062) (not x1517)) (x290 x346) (ite (and x1062 x14) (x290 x346) (x812 x346)))))))
(define-fun x58 ((x346 Real)) Real (ite (= x346 x1478) x622 (x1252 x346)))
(define-fun x175 ((x346 Real)) Real (ite (= x1172 x346) x1255 (x58 x346)))
(define-fun x266 ((x346 Real)) Real (ite (= x70 x346) x201 (x175 x346)))
(define-fun x498 ((x346 Real)) Real (ite (= x346 x803) x152 (x266 x346)))
(define-fun x672 ((x346 Real)) Real (ite (= x346 x928) 32 (x498 x346)))
(define-fun x1346 ((x346 Real)) Real (ite (= x346 x1586) x55 (x1364 x346)))
(define-fun x192 ((x346 Real)) Real (ite (= x186 x346) 0 (x335 x346)))
(define-fun x1492 ((x346 Real)) Real (ite (= 0 x346) 1 (x1177 x346)))
(define-fun x1347 ((x346 Real)) Real (ite (= x346 0) 1 (x1177 x346)))
(define-fun x299 ((x346 Real)) Real (ite (and x137 x231) (x1492 x346) (x1347 x346)))
(define-fun x1028 ((x346 Real)) Real (ite (= x1258 x346) x397 (x256 x346)))
(define-fun x808 ((x346 Real)) Real (ite (= x1258 x346) x1215 (x256 x346)))
(define-fun x1273 ((x346 Real)) Real (ite (= x1258 x346) x687 (x1053 x346)))
(define-fun x701 ((x346 Real)) Real (ite (and (<= x1503 x346) (> (+ x687 x1503) x346)) (x299 (+ 0 (- x346 x1503))) (x1273 x346)))
(define-fun x955 ((x346 Real)) Real (ite (and (not x793) x194) (x701 x346) (x1053 x346)))
(define-fun x221 ((x346 Real)) Real (ite (= x1537 x346) x570 (x955 x346)))
(define-fun x1210 ((x346 Real)) Real (ite (= x346 x1122) x1223 (x221 x346)))
(define-fun x223 ((x346 Real)) Real (ite (= x830 x346) x1235 (x1210 x346)))
(define-fun x810 ((x346 Real)) Real (ite (= x346 x1249) x1604 (x223 x346)))
(define-fun x242 ((x346 Real)) Real (ite (= x346 x930) 32 (x810 x346)))
(define-fun x1169 ((x346 Real)) Real (ite (= x398 x346) x1282 (x575 x346)))
(define-fun x1554 ((x346 Real)) Real (ite (= x583 x346) 0 (x705 x346)))
(define-fun x1178 ((x346 x914)) Real (ite (= x346 (x367 274184521717934524641157099916833587206)) x1327 (x1241 x346)))
(define-fun x844 ((x346 x914)) Real (ite (= (x367 x1230) x346) x1189 (x1178 x346)))
(define-fun x1167 ((x346 x914)) Real (ite (= (x367 x1230) x346) x813 (x844 x346)))
(define-fun x1092 ((x346 x914)) Real (ite (= x346 (x367 274184521717934524641157099916833587206)) x24 (x1167 x346)))
(define-fun x1226 ((x346 x914)) Real (ite (= (x367 274184521717934524641157099916833587206) x346) x1512 (x1092 x346)))
(define-fun x1194 ((x346 x914)) Real (ite (= (x367 x562) x346) x1563 (x1226 x346)))
(define-fun x1095 ((x346 x914)) Real (ite (= x298 x346) x818 (x486 x346)))
(define-fun x1120 ((x346 x914)) Real (ite (= x1523 x346) x590 (x1095 x346)))
(define-fun x87 ((x346 x914)) Real (ite (and x231 x137) (x1120 x346) (x486 x346)))
(define-fun x950 ((x346 x914)) Real (ite (= x346 x449) x530 (x87 x346)))
(define-fun x1071 ((x346 Real)) Real (ite (= 0 x346) 1 (x1065 x346)))
(define-fun x1542 ((x346 Real)) Real (ite (= x346 x407) x721 (x628 x346)))
(define-fun x1552 ((x346 x914)) Real (ite (= x346 x1349) x10 (x519 x346)))
(define-fun x1383 ((x346 x914)) Real (ite (= x505 x346) x759 (x1552 x346)))
(define-fun x438 ((x346 x914)) Real (ite (and x231 x137) (x519 x346) (x1383 x346)))
(define-fun x596 ((x346 x914)) Real (ite (= x1027 x346) x742 (x438 x346)))
(define-fun x1585 ((x346 Real)) Real (ite (= x346 0) 1 (x1065 x346)))
(define-fun x62 ((x346 Real)) Real (ite (= x407 x346) x690 (x628 x346)))
(define-fun x1400 ((x346 Real)) Real (ite (and x752 x425) (x1071 x346) (x1585 x346)))
(define-fun x625 ((x346 x914)) Real (ite (= x346 (x367 x562)) x545 (x1194 x346)))
(define-fun x979 ((x346 Real)) Real (ite (= x407 x346) x1368 (x330 x346)))
(define-fun x1301 ((x346 Real)) Real (ite (and (<= x430 x346) (< x346 (+ x1368 x430))) (x1400 (+ 0 (- x346 x430))) (x979 x346)))
(define-fun x750 ((x346 Real)) Real (ite (and x291 x1145) (x330 x346) (x1301 x346)))
(define-fun x334 ((x585 Real)) Bool (=> (and (not (= x585 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= x585 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x585 2532887486)) (not (= 759532456 x585)) (not (= 1000000000000000000 x585)) (not (= 274184521717934524641157099916833587218 x585)) (not (= 2960351575 x585)) (not (= 2514000705 x585)) (not (= 649617121 x585)) (not (= x585 115792089237316195423570985008687907853269984665640564039457)) (not (= 2835717307 x585)) (not (= x585 2512682246)) (not (= x585 604800)) (not (= x585 2690754053)) (not (= x585 2418364589)) (> x585 10000) (not (= x585 2939843472)) (not (= x585 2798343961)) (not (= 635128645 x585)) (not (= x585 826074471)) (not (= x585 1986467848)) (not (= x585 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 2293535753 x585)) (not (= x585 2868243304)) (not (= 18446744073709551615 x585)) (not (= x585 69947311)) (not (= x585 2211524764)) (not (= x585 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x585 2061678023)) (not (= x585 274184521717934524641157099916833587206)) (not (= x585 468353030)) (not (= 911411945 x585)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x585)) (not (= 1889567281 x585)) (not (= x585 1461501637330902918203684832716283019655932542975)) (not (= 142201243 x585)) (not (= 87118632 x585)) (not (= 274184521717934524641157099916833587214 x585)) (not (= 1968616202 x585)) (not (= x585 2743102681)) (not (= x585 2258409472)) (not (= x585 2764855426))) (not ((_ is x872) (x367 x585)))))
(assert (axiom_frac_bound (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x656 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x230 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1119 x1548 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1311 x1549 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x512 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1548 x1119 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x1311 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1608 x512 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x182 x617 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x228 x988 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x369 x525 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x558 1000000000000000000 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x617 x748 (uninterp_frac (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x656 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x230 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1119 x1548 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1311 x1549 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x512 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1548 x1119 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x1311 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1608 x512 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x182 x617 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x228 x988 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x369 x525 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x558 1000000000000000000 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x617 x748 (uninterp_frac (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x656 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x230 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1119 x1548 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1311 x1549 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x512 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1548 x1119 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x1311 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1608 x512 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x182 x617 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x228 x988 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x369 x525 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x558 1000000000000000000 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x617 x748 (uninterp_frac (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1199 1000000000000000000))
(assert (axiom_frac_zero x1199 1000000000000000000 1000000000000000000 x656 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 32 x230 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x1119 x1548 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x1311 x1549 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x1407 x512 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x1548 x1119 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x1549 x1311 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x1608 x512 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x182 x617 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x228 x988 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x369 x525 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x558 1000000000000000000 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_zero x1199 1000000000000000000 x617 x748 (uninterp_frac x1199 1000000000000000000)))
(assert (axiom_frac_bound x1209 x1316))
(assert (axiom_frac_zero x1209 x1316 1000000000000000000 x656 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 32 x230 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x1119 x1548 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x1311 x1549 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x1407 x512 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x1548 x1119 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x1549 x1311 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x1608 x512 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x182 x617 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x228 x988 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x369 x525 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x558 1000000000000000000 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_zero x1209 x1316 x617 x748 (uninterp_frac x1209 x1316)))
(assert (axiom_frac_bound x1246 1000000000000000000))
(assert (axiom_frac_zero x1246 1000000000000000000 1000000000000000000 x656 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 32 x230 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x1119 x1548 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x1311 x1549 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x1407 x512 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x1548 x1119 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x1549 x1311 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x1608 x512 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x182 x617 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x228 x988 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x369 x525 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x558 1000000000000000000 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_zero x1246 1000000000000000000 x617 x748 (uninterp_frac x1246 1000000000000000000)))
(assert (axiom_frac_bound x1306 x196))
(assert (axiom_frac_zero x1306 x196 1000000000000000000 x656 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 32 x230 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x1119 x1548 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x1311 x1549 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x1407 x512 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x1548 x1119 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x1549 x1311 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x1608 x512 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x182 x617 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x228 x988 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x369 x525 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x558 1000000000000000000 (uninterp_frac x1306 x196)))
(assert (axiom_frac_zero x1306 x196 x617 x748 (uninterp_frac x1306 x196)))
(assert (axiom_frac_bound x1419 1000000000000000000))
(assert (axiom_frac_zero x1419 1000000000000000000 1000000000000000000 x656 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 32 x230 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x1119 x1548 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x1311 x1549 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x1407 x512 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x1548 x1119 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x1549 x1311 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x1608 x512 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x182 x617 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x228 x988 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x369 x525 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x558 1000000000000000000 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_zero x1419 1000000000000000000 x617 x748 (uninterp_frac x1419 1000000000000000000)))
(assert (axiom_frac_bound x301 1000000000000000000))
(assert (axiom_frac_zero x301 1000000000000000000 1000000000000000000 x656 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 32 x230 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x1119 x1548 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x1311 x1549 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x1407 x512 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x1548 x1119 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x1549 x1311 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x1608 x512 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x182 x617 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x228 x988 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x369 x525 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x558 1000000000000000000 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_frac_zero x301 1000000000000000000 x617 x748 (uninterp_frac x301 1000000000000000000)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x1000))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1007))
(assert (axiom_int_approximation x1008))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1015))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1024))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1026))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1041))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1046))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1051))
(assert (axiom_int_approximation x1052))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1119))
(assert (axiom_int_approximation x1121))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1124))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1133))
(assert (axiom_int_approximation x1135))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x1138))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1147))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x1149))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1154))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x1160))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1185))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x1189))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1205))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1227))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1231))
(assert (axiom_int_approximation x1235))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x1237))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1247))
(assert (axiom_int_approximation x1248))
(assert (axiom_int_approximation x1249))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x1262))
(assert (axiom_int_approximation x1264))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1267))
(assert (axiom_int_approximation x127))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1286))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1308))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1314))
(assert (axiom_int_approximation x1316))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1321))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1326))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x1331))
(assert (axiom_int_approximation x1333))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1357))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1360))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1363))
(assert (axiom_int_approximation x1366))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1371))
(assert (axiom_int_approximation x1373))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1377))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x138))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1382))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1393))
(assert (axiom_int_approximation x1394))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1403))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1407))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1416))
(assert (axiom_int_approximation x1417))
(assert (axiom_int_approximation x1419))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1425))
(assert (axiom_int_approximation x1427))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1433))
(assert (axiom_int_approximation x1434))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1436))
(assert (axiom_int_approximation x1437))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1468))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1479))
(assert (axiom_int_approximation x1484))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1488))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1495))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1505))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x1508))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1512))
(assert (axiom_int_approximation x1513))
(assert (axiom_int_approximation x1515))
(assert (axiom_int_approximation x1516))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1520))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x1529))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x1538))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1541))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1549))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1562))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1566))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1570))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1574))
(assert (axiom_int_approximation x1575))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1584))
(assert (axiom_int_approximation x1586))
(assert (axiom_int_approximation x1588))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x1590))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1596))
(assert (axiom_int_approximation x1599))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1605))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1608))
(assert (axiom_int_approximation x1609))
(assert (axiom_int_approximation x1610))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1613))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x27))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x279))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x282))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x321))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x453))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x472))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x507))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x530))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x554))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x560))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x605))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x631))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x65))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x715))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x721))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x73))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x736))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x760))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x763))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x803))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x815))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x886))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x890))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x907))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x935))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x943))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x963))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x975))
(assert (axiom_int_approximation x976))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x987))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x989))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x991))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x996))
(assert (axiom_int_approximation x998))
(assert (x334 x63))
(assert (= (=> (and (<= x1507 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1507 x1221) (not (= x553 2743102681)) (not (> 2293535753 x553)) (not (= 2764855426 x553)) (not (> 2690754053 x553)) (<= 0 x1507) (= x364 (x1392 (x367 x905) (x872 5) 0)) (= x1507 (x20 x268)) (>= 1461501637330902918203684832716283019655932542975 x472) (not (= 2690754053 x553)) (< x553 2960351575) (= 2798343961 x553) (= (x1392 (x367 x472) x364 0) x268) (= (x718 (x367 274184521717934524641157099916833587206)) x1547) (< 0 x1547)) (=> (and (= x1221 x1284) (= x873 x904) (= x1154 x944) (= x64 x1529) (= x1354 x1610)) x15)) x432))
(assert (x253 x1282))
(assert (x253 x756))
(assert (= (ite (= x1251 x1289) x1318 (x161 x1251)) (x290 x1251)))
(assert (x334 x1286))
(assert (x253 x1009))
(assert (x253 x1172))
(assert (= (x1364 x29) (ite (= x614 x29) x436 (x1487 x29))))
(assert (=> (> (+ 10000 1) x1024) (= (x367 x1024) (x872 x1024))))
(assert (=> (> (+ 10000 1) x624) (= (x872 x624) (x367 x624))))
(assert (x253 x1171))
(assert (= (x247 (x367 x1187)) x1187))
(assert (x253 x613))
(assert (= x1435 (x247 (x367 x1435))))
(assert (=> (< (- x623 1) 10000) (= (x872 x623) (x367 x623))))
(assert (= x90 (x1350 x248)))
(assert (= (x587 x1535) (ite (and x784 x1565) (x227 x1535) (x116 x1535))))
(assert (= x880 x546))
(assert (= (ite (= x376 x1308) x1291 (x451 x1308)) (x1487 x1308)))
(assert (=> (< (- x893 1) 10000) (= (x872 x893) (x367 x893))))
(assert (= (x872 635128645) (x367 635128645)))
(assert (= (ite (= x894 x376) x1291 (x451 x894)) (x1487 x894)))
(assert (= (x247 (x367 x1610)) x1610))
(assert (x253 x1058))
(assert (= (x872 2960351575) (x367 2960351575)))
(assert (= (x1334 x894) (ite (= x1083 x894) x45 (x1225 x894))))
(assert (x253 x1529))
(assert (x334 x1024))
(assert (x253 x941))
(assert (x253 x49))
(assert (= (ite (= x1289 x131) x1318 (x161 x131)) (x290 x131)))
(assert (= 826074471 (x247 (x872 826074471))))
(assert (x253 x495))
(assert (= x1434 (x247 (x367 x1434))))
(assert (= (x1312 x1308) (ite (= x1308 x589) x551 (x290 x1308))))
(assert (= (ite (= x507 x1289) x1318 (x161 x507)) (x290 x507)))
(assert (= (x686 224) 0))
(assert (= x163 (x247 (x367 x163))))
(assert (x334 x454))
(assert (x253 x135))
(assert (x253 x741))
(assert (= (ite (and (not x1532) (not x797) x1401 x970) (x38 x1413) (ite (and x970 (not x1401) (not x797)) (x849 x1413) (ite (and x797 x970) (x849 x1413) (x100 x1413)))) (x1315 x1413)))
(assert (x253 x321))
(assert (x253 x598))
(assert (= x1325 (or (and x1450 x915) x1055)))
(assert (x334 274184521717934524641157099916833587214))
(assert (= x345 (or (and (not x728) x233) (and x730 (not x167)))))
(assert (x253 x1262))
(assert (= x871 (=> (and (= x757 (> x1451 0)) (= (x25 (- x484 1)) x1451)) (and (=> (not x757) x145) (=> x757 x1086)))))
(assert (x253 x773))
(assert (= (x247 (x872 2939843472)) 2939843472))
(assert (= x792 (and (not x1447) x1330)))
(assert (=> (< (- x607 1) 10000) (= (x872 x607) (x367 x607))))
(assert (= x898 (and x1450 (not x915))))
(assert (= (x367 274184521717934524641157099916833587214) (x872 274184521717934524641157099916833587214)))
(assert (x253 x1477))
(assert (= (x555 x204) (ite (= x204 x106) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x204))))
(assert (x253 x251))
(assert (= (ite (= x856 x29) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x242 x29)) (x1225 x29)))
(assert (x253 x165))
(assert (= (ite (and x1565 x784) (x227 x1432) (x116 x1432)) (x587 x1432)))
(assert (x253 x92))
(assert (= x691 (x247 (x367 x691))))
(assert (x253 x594))
(assert (x253 x1266))
(assert (x334 x181))
(assert (= (ite (= x697 x318) x368 (x1350 x318)) (x586 x318)))
(assert (x253 x856))
(assert (x253 x296))
(assert (x253 x1286))
(assert (= (and x1494 x710) x233))
(assert (x253 x1541))
(assert (=> (< (- x1574 1) 10000) (= (x367 x1574) (x872 x1574))))
(assert (x253 x649))
(assert (x253 x761))
(assert (x253 x634))
(assert (x253 x65))
(assert (x253 x1600))
(assert (= (x290 x1348) (ite (= x1289 x1348) x1318 (x161 x1348))))
(assert (=> (> (+ 10000 1) x379) (= (x367 x379) (x872 x379))))
(assert (x253 x1343))
(assert (= x638 (x247 (x367 x638))))
(assert (=> (> (+ 10000 1) x1286) (= (x872 x1286) (x367 x1286))))
(assert (=> (< (- x1046 1) 10000) (= (x872 x1046) (x367 x1046))))
(assert (x253 x1385))
(assert (=> (> (+ 10000 1) x26) (= (x367 x26) (x872 x26))))
(assert (x253 x988))
(assert (= (x247 (x367 x472)) x472))
(assert (= (x247 (x367 x1433)) x1433))
(assert (x253 x528))
(assert (=> (> (+ 10000 1) x518) (= (x872 x518) (x367 x518))))
(assert (= (x714 x1132) (ite (and x805 x5) (x1482 x1132) (ite (and x805 x1093 (not x5)) (x1482 x1132) (x1464 x1132)))))
(assert (x334 x562))
(assert (=> (< (- x664 1) 10000) (= (x367 x664) (x872 x664))))
(assert (= x597 (x247 (x367 x597))))
(assert (= (x247 (x367 x903)) x903))
(assert (= (x586 x389) (ite (= x389 x697) x368 (x1350 x389))))
(assert (x334 x164))
(assert (x334 x903))
(assert (= 0 (x686 x803)))
(assert (= (x872 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x367 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x334 x949))
(assert (= (x1225 x507) (ite (= x507 x856) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x242 x507))))
(assert (x253 x1508))
(assert (x253 x491))
(assert (= (x247 (x367 x203)) x203))
(assert (= (x247 (x367 x457)) x457))
(assert (x253 x515))
(assert (x253 x1536))
(assert (x253 x581))
(assert (= (ite (= x248 x1249) x90 (x1254 x1249)) (x1350 x1249)))
(assert (x334 x94))
(assert (x253 x127))
(assert (x253 x1198))
(assert (= x1026 (x247 (x367 x1026))))
(assert (= x606 (x247 (x367 x606))))
(assert (x253 x52))
(assert (x334 x1588))
(assert (x253 x1353))
(assert (x253 x1402))
(assert (= (x367 2258409472) (x872 2258409472)))
(assert (= (x1487 x507) (ite (= x507 x376) x1291 (x451 x507))))
(assert (x253 x1185))
(assert (x253 x759))
(assert (x334 x518))
(assert (x253 x479))
(assert (x334 x942))
(assert (x334 x417))
(assert (x253 x685))
(assert (x253 x1611))
(assert (= (x247 (x367 x380)) x380))
(assert (= (x335 x507) (ite (and x1174 x309 x310 x1045 x1582 (not x455)) (x1364 x507) (ite (and x310 x1045 (not x1174) x1582 x309) (x1487 x507) (ite (and x1582 x310 (not x1045) x309) (x451 x507) (ite (and (not x1582) x310 x309) (x555 x507) (x1346 x507)))))))
(assert (= (x686 x1432) 0))
(assert (x334 x691))
(assert (=> (> (+ 10000 1) x1428) (= (x872 x1428) (x367 x1428))))
(assert (x334 x113))
(assert (= (x247 (x367 x476)) x476))
(assert (= (x38 x439) (ite (= x882 x439) x1557 (x849 x439))))
(assert (= x919 x784))
(assert (= (ite (= x1348 x589) x551 (x290 x1348)) (x1312 x1348)))
(assert (x253 x1122))
(assert (x253 x565))
(assert (=> (< (- x905 1) 10000) (= (x367 x905) (x872 x905))))
(assert (= (x451 x507) (ite (= x507 x1054) x1522 (x555 x507))))
(assert (= (ite (and x611 x970) (x1501 x887) (x788 x887)) (x185 x887)))
(assert (= (ite (= x640 x1308) x230 (x1130 x640)) (x227 x640)))
(assert (= (x247 (x367 x1133)) x1133))
(assert (=> (> (+ 10000 1) x566) (= (x367 x566) (x872 x566))))
(assert (= (ite (= x389 x1289) x1318 (x161 x389)) (x290 x389)))
(assert (= x394 (x247 (x367 x394))))
(assert (x334 x606))
(assert (x253 x172))
(assert (= x752 (and x946 x347)))
(assert (x253 x504))
(assert (= (=> (and (not (> 2690754053 x962)) (>= x285 0) (not (= x962 2764855426)) (= (x1392 (x367 x1435) x1253 0) x516) (= x962 2798343961) (> x415 0) (= (x20 x516) x285) (not (> 2293535753 x962)) (= (x1392 (x367 x1434) (x872 5) 0) x1253) (<= x1435 1461501637330902918203684832716283019655932542975) (= x1124 x285) (not (= x962 2743102681)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x285) (< x962 2960351575) (not (= x962 2690754053)) (= x415 (x718 (x367 274184521717934524641157099916833587206)))) (=> (and (= x1043 x1154) (= x1529 x1286) (= x1124 x4) (= x6 x904)) x359)) x267))
(assert (= x113 (x247 (x367 x113))))
(assert (x334 x1516))
(assert (= (ite (and x231 x137) (x1028 x204) (x808 x204)) (x1053 x204)))
(assert (x253 x1129))
(assert (= x295 (x247 (x367 x295))))
(assert (= 0 (x686 160)))
(assert (= (ite (and x310 (not x322) x309) (x335 x1308) (x192 x1308)) (x256 x1308)))
(assert (= (x1487 x29) (ite (= x376 x29) x1291 (x451 x29))))
(assert (= (x586 x1159) (ite (= x697 x1159) x368 (x1350 x1159))))
(assert (x253 x1236))
(assert (=> (< (- x945 1) 10000) (= (x367 x945) (x872 x945))))
(assert (= x683 (x247 (x367 x683))))
(assert (x253 x1479))
(assert (x253 x158))
(assert (x253 x715))
(assert (x253 x595))
(assert (x253 x369))
(assert (= (x247 (x872 2512682246)) 2512682246))
(assert (= x308 (x247 (x367 x308))))
(assert (x334 x607))
(assert (= (x451 x1432) (ite (= x1432 x1054) x1522 (x555 x1432))))
(assert (= x77 true))
(assert (x253 x790))
(assert (= (ite (and x1174 x310 x1045 x309 (not x455) x1582) (x1364 x1308) (ite (and x310 x1582 x1045 (not x1174) x309) (x1487 x1308) (ite (and x309 (not x1045) x310 x1582) (x451 x1308) (ite (and (not x1582) x309 x310) (x555 x1308) (x1346 x1308))))) (x335 x1308)))
(assert (= 0 (x686 x1251)))
(assert (x253 x463))
(assert (= (ite (= x1083 x635) x45 (x1225 x635)) (x1334 x635)))
(assert (=> (< (- x1171 1) 10000) (= (x872 x1171) (x367 x1171))))
(assert (= (ite (= x1308 x1054) x1522 (x555 x1308)) (x451 x1308)))
(assert (=> (< (- x172 1) 10000) (= (x367 x172) (x872 x172))))
(assert (x253 x209))
(assert (x253 x106))
(assert (x253 x944))
(assert (= (x1350 x389) (ite (= x389 x248) x90 (x1254 x389))))
(assert (= (+ (x247 x1063) 1) (x247 (x734 x1063 1))))
(assert (x253 x409))
(assert (x253 x254))
(assert (x253 x327))
(assert (x253 x1137))
(assert (x253 x607))
(assert (x253 x720))
(assert (= (x1350 x30) (ite (= x248 x30) x90 (x1254 x30))))
(assert (= (and x231 (not x137)) x1330))
(assert (= (x185 x477) (ite (and x611 x970) (x1501 x477) (x788 x477))))
(assert (x253 x637))
(assert (x253 x354))
(assert (= x339 (x247 (x367 x339))))
(assert (x253 x1360))
(assert (x253 x658))
(assert (= (ite (and x1565 x784) (x227 x605) (x116 x605)) (x587 x605)))
(assert (x334 x338))
(assert (x334 x497))
(assert (x253 x932))
(assert (= x1171 (x247 (x367 x1171))))
(assert (= (x256 x1535) (ite (and (not x322) x310 x309) (x335 x1535) (x192 x1535))))
(assert (x253 x904))
(assert (= x1431 (x247 (x367 x1431))))
(assert (= (ite (and x611 x970) (x1399 x268) (x60 x268)) (x1213 x268)))
(assert (x334 x1271))
(assert (= (x247 (x872 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x253 x962))
(assert (x253 x1428))
(assert (x253 x1515))
(assert (x1551 x1353 x706))
(assert (= x1352 (and x670 (not x166))))
(assert (x253 x484))
(assert (x334 x841))
(assert (= (=> (and (> x1442 0) (>= x598 0) (= x532 (x1392 (x367 x606) (x872 6) 0)) (= x598 x1013) (not (= x581 2061678023)) (= x581 2258409472) (< x581 2293535753) (not (> 911411945 x581)) (not (= x581 1968616202)) (not (= x581 2211524764)) (not (= 1986467848 x581)) (= (x523 x1070) x598) (= (x1392 (x367 x386) x532 0) x1070) (= (x718 (x367 274184521717934524641157099916833587206)) x1442) (<= x386 1461501637330902918203684832716283019655932542975) (not (< x581 1968616202)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x598)) (=> (and (= x1529 x1574) (= x94 x904) (= x1013 x36) (= x865 x1154)) x574)) x778))
(assert (= x546 x198))
(assert (x253 x1466))
(assert (x334 x1600))
(assert (= x1123 (=> (and (= (< 0 x604) x1494) (= (x25 (- x344 1)) x604)) (and (=> (not x1494) x940) (=> x1494 x1196)))))
(assert (= (=> (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x625 (x367 274184521717934524641157099916833587206))) x1444) (= x545 (x1194 (x367 x562))) (or (and (= x158 (x750 x1163)) (< 0 x158) (= x158 x365) (= x941 (x750 x29)) (not (or (and (= (<= x941 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x941)) (> x941 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x866 (= x365 (ite x43 1 0)) (= x737 (= x158 0)) (= (not x737) x43) (= x1163 (x372 (+ 32 x29)))) (not x866)) (= x921 (x750 x29)) (not (= 0 x572)) (= (< 0 x921) x866) (= x1003 (> x230 2)) (or (and x1145 (= x29 96)) (and (not x1145) (= (x372 (+ 96 x930)) x430) (= x29 x407))) (= (= 0 x1368) x1145) (not x1003) x1444) x277) x1561))
(assert (= (ite (= x340 x361) x1040 (x1315 x361)) (x967 x361)))
(assert (= x403 (x247 (x367 x403))))
(assert (x253 x842))
(assert (=> (> (+ 10000 1) x724) (= (x872 x724) (x367 x724))))
(assert (= (x247 (x367 x344)) x344))
(assert (x253 x1521))
(assert (x253 x1264))
(assert (= x1086 (=> (and (<= x522 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x522) (= (= x522 0) x957) (= x952 (x1392 (x367 x1451) (x872 6) 0)) (= (x185 x50) x522) (= x50 (x1392 (x367 x1355) x952 0)) (= x1355 (x1162 1461501637330902918203684832716283019655932542975 x781))) (and (=> (and (= x1303 (x25 (- x1451 1))) x957 (not x755) (= x755 (< 0 x1303))) x145) (=> (and (not x957) (= x1423 x1451)) x1116)))))
(assert (x253 x404))
(assert (= (ite (and (not x797) (not x1532) x1401 x970) (x586 x1249) (ite (and (not x797) x970 (not x1401)) (x1350 x1249) (ite (and x797 x970) (x1350 x1249) (x642 x1249)))) (x1150 x1249)))
(assert (= (x1487 x1163) (ite (= x376 x1163) x1291 (x451 x1163))))
(assert (= x484 (x247 (x367 x484))))
(assert (x253 x1127))
(assert (= (x367 1986467848) (x872 1986467848)))
(assert (x253 x1124))
(assert (x334 x1360))
(assert (=> (> (+ 10000 1) x1009) (= (x872 x1009) (x367 x1009))))
(assert (=> (> (+ 10000 1) x203) (= (x872 x203) (x367 x203))))
(assert (= (ite (and x1565 x784) (x227 x131) (x116 x131)) (x587 x131)))
(assert (x253 x234))
(assert (x253 x624))
(assert (= (x872 142201243) (x367 142201243)))
(assert (x253 x259))
(assert (x253 x803))
(assert (x253 x522))
(assert (x253 x397))
(assert (= (x247 (x367 x338)) x338))
(assert (= x47 (=> (and (= 142201243 x1147) (= x684 (x1392 (x367 x157) x333 0)) (< x1147 2293535753) (= x874 (x1392 (x367 x1486) (x872 9) 0)) (= x461 (x1424 x684)) (= (x1392 (x367 x756) x874 0) x333) (not (= 87118632 x1147)) (< x1147 911411945) (not (= 69947311 x1147)) (>= 1461501637330902918203684832716283019655932542975 x756) (> 468353030 x1147) (>= x461 0) (>= 1461501637330902918203684832716283019655932542975 x157) (= x780 (x718 (x367 274184521717934524641157099916833587206))) (> x780 0) (= x265 x461) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x461)) (=> (and (= x1529 x1538) (= x1154 x1564) (= x938 (<= x9 x935)) (= x265 x9) (= x840 (and x860 x938)) (= x715 x904)) x1091))))
(assert (= (x247 (x367 x905)) x905))
(assert (x253 x41))
(assert (x253 x1173))
(assert (= (x247 (x367 x1217)) x1217))
(assert (=> (< (- x181 1) 10000) (= (x872 x181) (x367 x181))))
(assert (x253 x1566))
(assert (= (x587 x697) (ite (and x784 x1565) (x227 x697) (x116 x697))))
(assert (= (x247 (x367 x607)) x607))
(assert (=> (> (+ 10000 1) x193) (= (x872 x193) (x367 x193))))
(assert (= (x247 (x367 x292)) x292))
(assert (= (ite (and (not x300) x348 x133 x59 x946 x347) (x575 x29) (ite (and x347 x348 (not x133) x946 x59) (x599 x29) (ite (and (not x348) x59 x347 x946) (x1334 x29) (ite (and x946 (not x59) x347) (x1225 x29) (x1169 x29))))) (x705 x29)))
(assert (x253 x494))
(assert (= (x227 x589) (ite (= x1308 x589) x230 (x1130 x589))))
(assert (x253 x1538))
(assert (= (ite (= x803 x1289) x1318 (x161 x803)) (x290 x803)))
(assert (x334 x850))
(assert (= (ite (and (not x1532) x970 x1401 (not x797)) (x38 x340) (ite (and x970 (not x797) (not x1401)) (x849 x340) (ite (and x970 x797) (x849 x340) (x100 x340)))) (x1315 x340)))
(assert (=> (< (- x865 1) 10000) (= (x872 x865) (x367 x865))))
(assert (=> (> (+ 10000 1) x491) (= (x872 x491) (x367 x491))))
(assert (x253 x476))
(assert (= (x1315 x61) (ite (and (not x1532) x970 x1401 (not x797)) (x38 x61) (ite (and (not x1401) x970 (not x797)) (x849 x61) (ite (and x970 x797) (x849 x61) (x100 x61))))))
(assert (x253 x1192))
(assert (x253 x450))
(assert (x334 x1333))
(assert (= (ite (= x803 x589) x551 (x290 x803)) (x1312 x803)))
(assert (= (=> (and (<= x881 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x689 (x1392 (x367 x1360) x396 0)) (= x396 (x1392 (x367 x344) (x872 7) 0)) (= x1360 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x421 (< 0 x881)) (= x1109 (x1392 (x367 x1575) x689 0)) (= (x1463 x1109) x881) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x1575) (>= x881 0)) (and (=> (not x421) x1300) (=> (and (= x1271 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x680 (x1392 (x367 x729) x1481 0)) (<= x1580 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1580 (x1424 x680)) (<= 0 x1580) (= x1580 x1311) (= x1481 (x1392 (x367 x1271) x891 0)) x421 (= x729 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= x645 0) (= (x1392 (x367 x344) (x872 9) 0) x891)) x1097))) x1339))
(assert (= (ite (and x1565 x784) (x227 x635) (x116 x635)) (x587 x635)))
(assert (= (x586 x1348) (ite (= x697 x1348) x368 (x1350 x1348))))
(assert (x334 x1355))
(assert (= (x247 (x872 635128645)) 635128645))
(assert (x253 x318))
(assert (= (ite (and x1565 x784) (x227 x1163) (x116 x1163)) (x587 x1163)))
(assert (x253 x1291))
(assert (=> (> (+ 10000 1) x998) (= (x367 x998) (x872 x998))))
(assert (= x1198 (x247 (x367 x1198))))
(assert (= (x247 (x367 x1043)) x1043))
(assert (x253 x308))
(assert (= x784 x1361))
(assert (= (ite (= x1308 x131) x230 (x1130 x131)) (x227 x131)))
(assert (= (x256 x389) (ite (and (not x322) x309 x310) (x335 x389) (x192 x389))))
(assert (x253 x1417))
(assert (= (x247 (x367 x842)) x842))
(assert (x253 x160))
(assert (= x362 x482))
(assert (= x1553 x478))
(assert (= (x1364 x1249) (ite (= x614 x1249) x436 (x1487 x1249))))
(assert (x334 x476))
(assert (= (x247 (x872 1000000000000000000)) 1000000000000000000))
(assert (x334 x1433))
(assert (= (ite (= x1251 x1054) x1522 (x555 x1251)) (x451 x1251)))
(assert (x253 x363))
(assert (= (=> (= x1546 x1560) x965) x222))
(assert (= x1157 (=> (= (= 274184521717934524641157099916833587214 x562) x166) (and (=> (not x166) x1034) (=> (and (= x259 x1223) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x549) (= x441 x1321) (= (x25 (- x314 x259)) x742) (not x707) (= x902 (x1392 (x367 x736) (x872 1) 0)) (<= x1321 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x572 1) (= x1027 (x1392 (x367 274184521717934524641157099916833587206) (x872 1) 0)) (= x1599 x259) (not (= 649617121 x224)) (= (+ x441 x917) x791) (not x1134) (> x245 0) (= 2835717307 x224) (= x707 (> x259 x314)) (= (x25 (- x1590 4)) x357) (= (x1392 (x367 274184521717934524641157099916833587206) (x872 1) 0) x1601) (not (< x224 649617121)) (= x848 (>= (+ x1599 x1321) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x690 x548) (= x418 274184521717934524641157099916833587206) (= x570 x736) (= x1321 (x596 x902)) (= x1590 68) (= x1368 32) (not (= 826074471 x224)) (= (x718 (x367 274184521717934524641157099916833587214)) x245) (= x1134 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x357)) (> 64 x357)) (> x357 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1038 x1590) (= x515 274184521717934524641157099916833587206) x166 (not (> 4 x1590)) (not (= 1889567281 x224)) (= x917 x1599) (<= x314 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x224 2514000705)) (not x848) (>= 1461501637330902918203684832716283019655932542975 x736) (= x1386 (> x1599 x314)) (>= x1321 0) (>= x314 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1321 x1599)) (= x736 x1606) (not x1386) (= (x438 x1601) x314)) x1561)))))
(assert (= x193 (x247 (x367 x193))))
(assert (= (ite (and x309 (not x322) x310) (x335 x29) (x192 x29)) (x256 x29)))
(assert (= (x555 x131) (ite (= x131 x106) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x131))))
(assert (x253 x905))
(assert (= (ite (and x137 x231) (x1028 x894) (x808 x894)) (x1053 x894)))
(assert (x253 x373))
(assert (=> (< (- x716 1) 10000) (= (x367 x716) (x872 x716))))
(assert (= (ite (= x217 x340) x1040 (x1315 x217)) (x967 x217)))
(assert (x253 x766))
(assert (= (ite (and x5 x805) (x1207 x1270) (ite (and x805 x1093 (not x5)) (x703 x1270) (x524 x1270))) (x884 x1270)))
(assert (x253 x1016))
(assert (x253 x433))
(assert (= (x247 (x367 x998)) x998))
(assert (x253 x980))
(assert (x253 x1081))
(assert (x253 x1562))
(assert (x608 x781))
(assert (x334 x1247))
(assert (x253 x1043))
(assert (= (x872 2293535753) (x367 2293535753)))
(assert (= (x1312 x894) (ite (= x589 x894) x551 (x290 x894))))
(assert (x1112 x1559 x1436))
(assert (x253 x635))
(assert (= (x1053 x29) (ite (and x137 x231) (x1028 x29) (x808 x29))))
(assert (x253 x473))
(assert (x253 x1545))
(assert (x253 x430))
(assert (x253 x1))
(assert (= (x367 1000000000000000000) (x872 1000000000000000000)))
(assert (x253 x1459))
(assert (x253 x968))
(assert (x334 x1499))
(assert (x253 x177))
(assert (x253 x691))
(assert (= (x247 (x367 x214)) x214))
(assert (=> (< (- x1595 1) 10000) (= (x367 x1595) (x872 x1595))))
(assert (=> (< (- x89 1) 10000) (= (x367 x89) (x872 x89))))
(assert (x334 x865))
(assert (x334 x1431))
(assert (= (=> (and (= x125 (= 0 x73)) (or (and (= x1311 x933) (= x313 (x1392 (x367 x998) x1518 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x933) (>= x933 0) (= x645 1) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x989) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x998) (not x125) (= x933 (x1424 x313)) (= x1518 (x1392 (x367 x989) x480 0)) (= x480 (x1392 (x367 x73) (x872 9) 0))) (and x125 (= x645 0) (= x1311 0)))) x1097) x648))
(assert (=> (> (+ 10000 1) x295) (= (x872 x295) (x367 x295))))
(assert (x334 x1089))
(assert (= (and x323 x1277) x785))
(assert (x253 x6))
(assert (x253 x991))
(assert (x334 x756))
(assert (x253 x1148))
(assert (= (ite (= x248 x803) x90 (x1254 x803)) (x1350 x803)))
(assert (x253 x1559))
(assert (= (x367 87118632) (x872 87118632)))
(assert (= x993 x787))
(assert (= (x1150 x29) (ite (and x970 (not x1532) x1401 (not x797)) (x586 x29) (ite (and (not x797) (not x1401) x970) (x1350 x29) (ite (and x970 x797) (x1350 x29) (x642 x29))))))
(assert (x253 x829))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1513) (= x1132 (x1392 (x367 x1133) x855 0)) (= (x1213 x802) x196) (= (x1392 (x367 x1379) x104 0) x1222) (= x855 (x1392 (x367 x841) x550 0)) (= (x1392 (x367 x344) (x872 6) 0) x104) (= (x913 x1440) x90) (or (and (not x1108) (= 0 x228)) (and x1108 (= x180 (= 0 x1513)) (= x920 (> x471 x1609)) (= x1609 (x1350 x248)) (or (and (= x270 x471) (not x920)) (and (= x270 x763) (= x763 (x1350 x248)) x920)) (or (and (not (< x270 x1513)) (= (x25 (- x270 x1513)) x469) (= x995 604800) (= x228 x207) (= x207 (ite (< x469 604800) x469 604800)) (not x180)) (and (= x311 (x1350 x30)) x180 (= x228 x1422) (= x1422 (x25 (- x270 x311))) (not (> x311 x270)))))) (= (x372 (+ 32 x30)) x248) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x794) (= x1319 (x1350 x248)) (<= 0 x196) (= x1416 (x372 (+ 64 x30))) (<= 0 x656) (= (> x1319 x1513) x1108) (or (and (= (x1162 1461501637330902918203684832716283019655932542975 x781) x49) (not x263) (= (x1392 (x367 x49) x1387 0) x745) (= x1387 (x1392 (x367 x344) (x872 10) 0))) x263) (= x802 (x1392 (x367 x1047) x1158 0)) (= x1063 (x1392 (x367 x344) (x872 1) 0)) (= (x662 x1063) x794) (>= x1513 0) (= x841 (x1162 1461501637330902918203684832716283019655932542975 x781)) (<= x90 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (< 0 x196) (= 1 x1353) (= x706 (ite (< 115792089237316195423570985008687907853269984665640564039457 x656) 1 0)) (or (not x1401) (and (= x479 0) (= x1555 (x1392 (x367 x344) (x872 4) 0)) (= (* x617 x748) x1199) (= (x372 (+ x1477 160)) x697) (= x13 (x1392 (x367 x344) (x872 11) 0)) (= x610 x124) (= (x1392 (x367 x1073) x937 0) x1472) (= x1557 (+ x556 x831)) (<= 0 x479) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x1600) (= x140 (x1350 x697)) (= x130 (x1162 1461501637330902918203684832716283019655932542975 x781)) (<= 0 x748) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x1073) (= x1317 (x1392 (x367 x1283) x13 0)) (= (x1392 (x367 x113) x647 0) x969) (= (x1350 x1308) x1525) (<= x279 1461501637330902918203684832716283019655932542975) (> x230 0) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x113) (< 0 x1525) (= x331 x556) (= x882 (x1392 (x367 x279) x1472 0)) (= (x1392 (x367 x130) x1555 0) x937) (<= x366 1461501637330902918203684832716283019655932542975) (= x124 (- (/ x1199 1000000000000000000) (uninterp_frac x1199 1000000000000000000))) (> x230 0) (= (x302 x269) x288) x1401 (= x279 (x302 x269)) (<= x331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (not x1532) (and (= (- (/ x1419 1000000000000000000) (uninterp_frac x1419 1000000000000000000)) x324) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x182 x617)) (= x324 x447) (= x897 (x302 x1357)) (< 1 x230) (< 1 x1008) (< 1 x230) (= x554 (x38 x439)) (= x1371 (x1162 1461501637330902918203684832716283019655932542975 x781)) (< (+ x324 x779) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x636 x779) (= x664 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= x1603 (x1392 (x367 x1171) x496 0)) (>= x154 0) (>= x554 0) (>= 1461501637330902918203684832716283019655932542975 x1479) (= x1357 (x372 (+ 64 x595))) (>= 1461501637330902918203684832716283019655932542975 x897) (= x1374 (+ x1203 x1126)) (> x230 1) (= (x1392 (x367 x344) (x872 11) 0) x496) (= (x302 x1357) x1479) (= x1419 (* x182 x617)) (= x1159 (x372 (+ x1477 192))) (= (< 2 x230) x1412) x1532 (= (x1392 (x367 x883) x1098 0) x847) (= x154 (x38 x847)) (= (x1392 (x367 x181) x910 0) x1098) (= (x302 x1357) x883) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x154 x656)) (= (x586 x1159) x779) (= x656 x1126) (<= x182 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x154 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x977 (x1392 (x367 x344) (x872 4) 0)) (= x1008 (x586 x1308)) (= x181 (x1162 1461501637330902918203684832716283019655932542975 x951)) (>= x182 0) (<= x883 1461501637330902918203684832716283019655932542975) (= (x918 x1156) x182) (not x1412) (= (+ x636 x447) x81) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1171) (= (x1392 (x367 x1371) x820 0) x1115) (= (x1392 (x367 x1051) x977 0) x910) (= x1203 x154) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x554) (= (x1392 (x367 x664) x1115 0) x1001) (= x554 0) (= x820 (x1392 (x367 x344) (x872 4) 0)) (= x1051 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= (x1392 (x367 x1479) x1001 0) x439) (= x1156 (x1392 (x367 x897) x1603 0)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x748) (= x816 x269) (< 0 x230) (= x1078 x140) (= x1351 (x1392 (x367 x1600) x969 0)) (= (> x230 1) x1532) (= x479 (x849 x350)) (= x1283 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= (x302 x269) x366) (= x647 (x1392 (x367 x344) (x872 4) 0)) (< (* x617 x748) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x140 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x331 0) (< (+ x656 x331) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x479 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x368 (+ x1078 x610)) (= x831 x656) (= (x918 x731) x748) (= (x1392 (x367 x366) x1317 0) x731) (= x350 (x1392 (x367 x288) x1351 0)) (<= x288 1461501637330902918203684832716283019655932542975) (= x331 (x849 x882)))) (= (- (/ x1306 x196) (uninterp_frac x1306 x196)) x617) (= x1605 0) (= x1605 (x1162 x1353 x706)) (= (uninterp_mod (* 1000000000000000000 x656) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1306) (= x1401 (> x230 0)) (not x797)) x797) (= x1133 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= (= 0 x656) x797) (<= x656 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1379) (<= x196 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x794) (= (= 0 x261) x263) (>= x90 0) (= (= x228 0) x611) (= x550 (x1392 (x367 x344) (x872 3) 0)) (= (x714 x1132) x656) (= (x11 x1222) x1513) (= (x1392 (x367 x344) (x872 5) 0) x1158) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1047) (or (and (= (x1162 1461501637330902918203684832716283019655932542975 x781) x174) (= (x1392 (x367 x174) x1365 0) x1165) (= x1365 (x1392 (x367 x344) (x872 6) 0)) x611) (and (= (x1392 (x367 x344) (x872 6) 0) x956) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x853 x1367)) (= x411 x1367) (= (* x228 x988) x411) (= (x1392 (x367 x518) x956 0) x1219) (= x360 x853) (= x206 (x1392 (x367 x1248) x1449 0)) (<= x853 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x360 x117) x986) (= x117 x1367) (not x611) (< (* x228 x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x518) (= x853 (x1399 x206)) (>= x853 0) (= (x1392 (x367 x344) (x872 5) 0) x1449) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1248))) (= (x734 x1063 1) x1440)) x1234) x1597))
(assert (x253 x1038))
(assert (=> (< (- x1435 1) 10000) (= (x872 x1435) (x367 x1435))))
(assert (= x482 x108))
(assert (= (ite (and (not x797) x970 (not x1532) x1401) (x38 x1462) (ite (and (not x797) x970 (not x1401)) (x849 x1462) (ite (and x970 x797) (x849 x1462) (x100 x1462)))) (x1315 x1462)))
(assert (x253 x669))
(assert (x253 x1468))
(assert (x1426 x33 x1314))
(assert (x1551 x1160 x1515))
(assert (x253 x1497))
(assert (x334 x552))
(assert (x334 x1435))
(assert (= (x247 (x367 x1271)) x1271))
(assert (=> (< (- x127 1) 10000) (= (x367 x127) (x872 x127))))
(assert (x253 x389))
(assert (x253 x401))
(assert (= x1064 (and x743 x1587)))
(assert (= (x872 2764855426) (x367 2764855426)))
(assert (x253 x942))
(assert (= (x1053 x1163) (ite (and x231 x137) (x1028 x1163) (x808 x1163))))
(assert (x253 x428))
(assert (= x727 (and x1594 x757)))
(assert (x253 x424))
(assert (=> (> (+ 10000 1) x366) (= (x872 x366) (x367 x366))))
(assert (= (x247 (x872 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (=> (and (= x468 (= x1560 0)) (or (and (= 0 x1469) (= x369 0) x468) (and (= x369 x879) (not x468) (<= 0 x879) (= (x1392 (x367 x1560) (x872 9) 0) x210) (<= x879 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x634) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x234) (= (x1392 (x367 x234) x210 0) x493) (= x521 (x1392 (x367 x634) x493 0)) (= x1469 1) (= (x1208 x521) x879)))) x751) x965))
(assert (x253 x94))
(assert (=> (> (+ 10000 1) x584) (= (x367 x584) (x872 x584))))
(assert (x253 x958))
(assert (= 0 (x686 x1535)))
(assert (=> (< (- x912 1) 10000) (= (x367 x912) (x872 x912))))
(assert (= (x247 (x367 x744)) x744))
(assert (x253 x1187))
(assert (x253 x4))
(assert (=> (< (- x1031 1) 10000) (= (x367 x1031) (x872 x1031))))
(assert (= x454 (x247 (x367 x454))))
(assert (= (x575 x1163) (ite (= x1163 x758) x294 (x599 x1163))))
(assert (= (x247 (x872 2690754053)) 2690754053))
(assert (= (x247 (x367 x386)) x386))
(assert (= x1470 (=> (and (= x121 (x1392 (x367 x893) (x872 3) 0)) (= x490 (x229 x385)) (= (x1392 (x367 x724) x121 0) x69) (= x1244 2743102681) (not (> 2690754053 x1244)) (< x1244 2960351575) (not (> 2293535753 x1244)) (not (= x1244 2690754053)) (<= 0 x490) (= x490 x1406) (>= 1461501637330902918203684832716283019655932542975 x724) (< 0 x1087) (= (x1392 (x367 x1307) x69 0) x385) (<= x490 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1307 1461501637330902918203684832716283019655932542975) (= x1087 (x718 (x367 274184521717934524641157099916833587206)))) (=> (and (= x904 x1247) (= x1406 x281) (= x624 x1529) (= x1354 x379) (= x1154 x1187)) x1281))))
(assert (=> (< (- x1396 1) 10000) (= (x872 x1396) (x367 x1396))))
(assert (x334 x214))
(assert (x334 x127))
(assert (= x1576 (x247 (x367 x1576))))
(assert (=> (> (+ 10000 1) x1600) (= (x872 x1600) (x367 x1600))))
(assert (= (x451 x29) (ite (= x29 x1054) x1522 (x555 x29))))
(assert (x253 x196))
(assert (x253 x1076))
(assert (x253 x1357))
(assert (x253 x17))
(assert (= 0 (x686 x697)))
(assert (= (x587 x1159) (ite (and x784 x1565) (x227 x1159) (x116 x1159))))
(assert (= (x290 x1432) (ite (= x1432 x1289) x1318 (x161 x1432))))
(assert (= (=> (and (not (< x1066 2293535753)) (not (= x1066 2690754053)) (> 2960351575 x1066) (= x1114 (x718 (x367 274184521717934524641157099916833587206))) (= (x1392 (x367 x597) x246 0) x1125) (not (= x1066 2743102681)) (>= x342 0) (< 0 x1114) (>= 1461501637330902918203684832716283019655932542975 x597) (= (x1399 x1125) x342) (not (< x1066 2690754053)) (= (x1392 (x367 x632) (x872 5) 0) x246) (not (= x1066 2764855426)) (= 2798343961 x1066) (= x593 x342) (<= x342 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x95 x593) (= x904 x1576) (= x1529 x339) (= x1154 x584)) x149)) x306))
(assert (x253 x638))
(assert (= (x587 x1308) (ite (and x1565 x784) (x227 x1308) (x116 x1308))))
(assert (x334 x1155))
(assert (x253 x841))
(assert (x253 x157))
(assert (= (ite (= x1432 x589) x551 (x290 x1432)) (x1312 x1432)))
(assert (x253 x248))
(assert (=> (< (- x46 1) 10000) (= (x367 x46) (x872 x46))))
(assert (x253 x1205))
(assert (= (x367 604800) (x872 604800)))
(assert (= x359 (=> (and (<= x6 1461501637330902918203684832716283019655932542975) (not (= 2690754053 x1402)) (= x1131 (x1392 (x367 x1286) x1211 0)) (= x1211 (x1392 (x367 x1043) (x872 3) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x191) (>= x191 0) (< 0 x582) (= (x718 (x367 274184521717934524641157099916833587206)) x582) (= (x229 x990) x191) (= (x1392 (x367 x6) x1131 0) x990) (= 2743102681 x1402) (>= 1461501637330902918203684832716283019655932542975 x1286) (not (> 2690754053 x1402)) (< x1402 2960351575) (= x966 x191) (not (> 2293535753 x1402))) (=> (and (= x1295 (>= x4 x136)) (= x136 x966) (= x1154 x905) (= x1529 x472)) x432))))
(assert (= x783 (x247 (x367 x783))))
(assert (= (x587 x318) (ite (and x1565 x784) (x227 x318) (x116 x318))))
(assert (= (ite (and x309 x1045 x310 x1174 x1582 (not x455)) (x1364 x635) (ite (and (not x1174) x310 x1582 x309 x1045) (x1487 x635) (ite (and x310 x309 (not x1045) x1582) (x451 x635) (ite (and x309 x310 (not x1582)) (x555 x635) (x1346 x635))))) (x335 x635)))
(assert (x253 x544))
(assert (= x1111 (x247 (x367 x1111))))
(assert (= x841 (x247 (x367 x841))))
(assert (=> (< (- x1610 1) 10000) (= (x872 x1610) (x367 x1610))))
(assert (= (ite (= x1432 x106) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x1432)) (x555 x1432)))
(assert (x608 x1185))
(assert (x253 x1223))
(assert (x334 x604))
(assert (x253 x279))
(assert (= (x587 x1249) (ite (and x1565 x784) (x227 x1249) (x116 x1249))))
(assert (= (x256 x894) (ite (and (not x322) x310 x309) (x335 x894) (x192 x894))))
(assert (= (x872 1889567281) (x367 1889567281)))
(assert (= x715 (x247 (x367 x715))))
(assert (x253 x417))
(assert (x1112 x541 x854))
(assert (x253 x24))
(assert (= x198 x681))
(assert (x253 x164))
(assert (=> (> (+ 10000 1) x873) (= (x872 x873) (x367 x873))))
(assert (= (x247 (x367 x577)) x577))
(assert (=> (< (- x632 1) 10000) (= (x872 x632) (x367 x632))))
(assert (x253 x626))
(assert (=> (< (- x1072 1) 10000) (= (x872 x1072) (x367 x1072))))
(assert (x253 x155))
(assert (= (x247 (x367 x566)) x566))
(assert (x253 x1421))
(assert (x334 x120))
(assert (x253 x1149))
(assert (=> (> (+ 10000 1) x118) (= (x872 x118) (x367 x118))))
(assert (= (x247 (x367 x1)) x1))
(assert (= (x247 (x367 x120)) x120))
(assert (x253 x1029))
(assert (= x668 x993))
(assert (x253 x1489))
(assert (= (x247 (x367 x736)) x736))
(assert (= x1188 x653))
(assert (x253 x1374))
(assert (x334 x1217))
(assert (x253 x935))
(assert (= (x227 x318) (ite (= x318 x1308) x230 (x1130 x318))))
(assert (= (=> (= x1331 x912) x1457) x16))
(assert (= (x1487 x635) (ite (= x376 x635) x1291 (x451 x635))))
(assert (x253 x1271))
(assert (= (x247 (x367 x900)) x900))
(assert (= (x247 (x367 x127)) x127))
(assert (= (x247 (x872 1889567281)) 1889567281))
(assert (x253 x252))
(assert (x253 x111))
(assert (x334 x638))
(assert (= (ite (= x882 x217) x1557 (x849 x217)) (x38 x217)))
(assert (= (x290 x204) (ite (= x1289 x204) x1318 (x161 x204))))
(assert (= (x247 (x872 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x253 x90))
(assert (x253 x995))
(assert (x334 x1511))
(assert (= x1278 (x247 (x367 x1278))))
(assert (x334 x1584))
(assert (x253 x1453))
(assert (x253 x678))
(assert (=> (< (- x1588 1) 10000) (= (x872 x1588) (x367 x1588))))
(assert (= (x227 x204) (ite (= x204 x1308) x230 (x1130 x204))))
(assert (x253 x1379))
(assert (= x713 (=> (and (>= 1461501637330902918203684832716283019655932542975 x649) (> 2690754053 x1366) (= x72 (x718 (x367 274184521717934524641157099916833587206))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x696) (<= 0 x696) (= x1149 x696) (= (x1392 (x367 x1533) (x872 4) 0) x768) (= x1010 (x1392 (x367 x193) x1179 0)) (< 0 x72) (>= 1461501637330902918203684832716283019655932542975 x1024) (= (x849 x1010) x696) (= 2532887486 x1366) (= x184 (x1392 (x367 x1024) x768 0)) (>= 1461501637330902918203684832716283019655932542975 x193) (not (= 2293535753 x1366)) (not (= 2418364589 x1366)) (not (> 2293535753 x1366)) (= (x1392 (x367 x649) x184 0) x1179) (> 2960351575 x1366) (not (= 2512682246 x1366))) (=> (and (= x254 (x372 (+ x433 160))) (not (< 18446744073709551615 x230)) (not (> 2293535753 x712)) (= x951 x1384) (= x816 (x372 (+ 36 x481))) (>= x631 0) (> 2960351575 x712) (= x1106 x1041) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1076) (<= x1613 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1613) (<= x1076 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1613 x1076))) (= (uninterp_mod (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1385) (= (and x139 x1485) x845) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1613)) (or (and (not x1565) (= x964 (x372 (+ 160 x1477))) (= (uninterp_mod (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x760)) x1565) (<= 0 x943) x845 (= x886 (x25 (- x101 1))) (= (x372 (+ 4 x481)) x595) (= x943 x1540) (= x1520 (x718 (x367 274184521717934524641157099916833587206))) (not (> 2690754053 x712)) (= (x372 (+ 160 x65)) x1308) (= x712 2939843472) (> x1613 163) (= (x372 (+ x433 32)) x819) (>= 1461501637330902918203684832716283019655932542975 x609) (not (< x101 1)) (<= x1019 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x976 x1149) (not (= x712 2743102681)) (<= 0 x1019) (>= 1461501637330902918203684832716283019655932542975 x631) (>= 1461501637330902918203684832716283019655932542975 x943) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x650) (and (> 160 x650) (= true (<= x650 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x951 x79) (>= 1461501637330902918203684832716283019655932542975 x781) (= x867 x781) (= (x372 (+ x1385 x816)) x1242) (= (x302 x595) x230) (= x481 x679) (>= x609 0) (= x433 (uninterp_mod (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1558 (x372 (+ x1308 x819))) (< 0 x1520) (= (x372 (+ x481 35)) x1076) (<= x951 1461501637330902918203684832716283019655932542975) (= x766 x839) (= 128 x1491) (= x1540 x1061) (= x344 x1536) (= x766 0) (= x344 x890) (= x650 (x25 (- x1613 4))) (not (= 2764855426 x712)) (= x631 x28) (not (= x712 2690754053)) (= x65 (uninterp_mod (* 32 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1477 (x372 (+ x65 32))) (= x1565 (= 0 x230)) (not (< x1106 x344)) (not (< x1613 4)) (not (< x1613 x1242)) (= x1142 (> x886 0)) (not (= 2868243304 x712)) (not (> x679 18446744073709551615)) (= x252 x471) (= x139 (>= x1200 x976)) (= x781 x1121) (< x1106 x1019) (not (= x712 2798343961)) (= x105 x1106) (or (not x1142) (and (not (< x101 1)) (= (< 1 x101) x999) (= (x25 (- x101 1)) x177) (or (and (= (x1130 128) x1067) x999 (= x538 (x1130 128)) (= (x1130 160) x1559) (not (= x717 x514)) (= (x1162 1461501637330902918203684832716283019655932542975 x1129) x717) (or (and (= (x1130 224) x141) (= x307 (> x101 3)) (= x958 (x1162 1461501637330902918203684832716283019655932542975 x141)) x1101 (not x307) (= x52 (x1162 1461501637330902918203684832716283019655932542975 x541)) (not (= x52 x958)) (= (x1130 128) x1373) (= (x1130 128) x409) (> x1373 2) (< 0 x409) (= x541 (x1130 160))) (not x1101)) (< 0 x1067) (< 1 x538) (= (> x101 2) x1101) (= x514 (x1162 1461501637330902918203684832716283019655932542975 x1559)) (= x1129 (x1130 192))) (not x999)) (not (> x177 1)) x1142)) (= (x1130 128) x101)) x1204))))
(assert (= x1283 (x247 (x367 x1283))))
(assert (x253 x1326))
(assert (= (ite (= x847 x882) x1557 (x849 x847)) (x38 x847)))
(assert (= (ite (= x697 x204) x368 (x1350 x204)) (x586 x204)))
(assert (x334 x366))
(assert (= (ite (and x1401 (not x1532) (not x797) x970) (x586 x605) (ite (and x970 (not x1401) (not x797)) (x1350 x605) (ite (and x970 x797) (x1350 x605) (x642 x605)))) (x1150 x605)))
(assert (= (ite (= x589 x1289) x1318 (x161 x589)) (x290 x589)))
(assert (x253 x1403))
(assert (=> (< (- x157 1) 10000) (= (x367 x157) (x872 x157))))
(assert (= (ite (= x1251 x1308) x230 (x1130 x1251)) (x227 x1251)))
(assert (= (ite (= x758 x29) x294 (x599 x29)) (x575 x29)))
(assert (= (x555 x389) (ite (= x106 x389) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x389))))
(assert (x253 x415))
(assert (=> (< (- x841 1) 10000) (= (x367 x841) (x872 x841))))
(assert (= x321 (x247 (x367 x321))))
(assert (= (and x785 x1539) x730))
(assert (= (=> (= (> x230 1) x946) (and (=> (not x946) x277) (=> (and x946 (= (x372 (+ x830 36)) x1537) (= (x955 x1308) x790) x1476 (or (not x162) (and (= (x372 (+ x669 x407)) x583) x162)) (= (x955 x389) x1223) (> x790 1) (= x1476 (> x1033 0)) (= (x1162 26959946667150639794667015087019630673637144422540572481103610249215 x594) x520) (<= x562 1461501637330902918203684832716283019655932542975) (or (and (= (< 32 x669) x348) (= (x1225 x1251) x45) (or (and x348 (= x507 (x372 (+ x830 64))) (or (and x133 (= x894 (x372 (+ 96 x830))) (= x758 (x372 (+ 128 x930))) (or (and (not x567) x300 (= (> x669 128) x567) (= x1282 (x575 x635)) (= x635 (x372 (+ 128 x830))) (= x398 (x372 (+ x930 160))) (= 128 x428)) (and (not x300) (= x428 96))) (= x300 (< 96 x669)) (= x294 (x599 x894))) (and (= x428 64) (not x133))) (= (x372 (+ 96 x930)) x434) (= x1338 (x1334 x507)) (= (> x669 64) x133)) (and (= 32 x428) (not x348))) (= x1083 x407) (= x1251 x1249) x59) (and (not x59) (= x428 0))) (= (x223 x1249) x594) (= x1235 (x25 (- x560 32))) (= x560 (x25 (- x930 x830))) (< 1 x230) (= x1122 (x372 (+ 68 x830))) (= 0 x83) (= x669 (x1225 x830)) (= (x302 x370) x562) (= (x372 (+ 192 x1477)) x389) (= (x372 (+ x595 64)) x370) (= x930 (x372 (+ 100 x830))) (= x162 (> x428 x669)) (= (> x669 0) x59) (= x1033 (x718 (x367 x562))) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x570) (= x1604 (x372 (+ x520 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= (x372 (+ x830 32)) x1249) (= (x372 (+ 128 x1537)) x407) (= x856 (x372 (+ x1537 96)))) x1161))) x1514))
(assert (x253 x207))
(assert (x253 x36))
(assert (= (x1364 x204) (ite (= x614 x204) x436 (x1487 x204))))
(assert (= (ite (= x589 x635) x551 (x290 x635)) (x1312 x635)))
(assert (x1112 x781 x474))
(assert (= (x247 (x367 x1511)) x1511))
(assert (=> (< (- x1451 1) 10000) (= (x367 x1451) (x872 x1451))))
(assert (= x786 (or (and x898 (not x1035)) (and x1587 (not x743)) (and x1018 x1064))))
(assert (= (x1225 x1163) (ite (= x856 x1163) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x242 x1163))))
(assert (= (x247 (x872 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x253 x1537))
(assert (x253 x645))
(assert (= (ite (and x137 x231) (x1028 x1251) (x808 x1251)) (x1053 x1251)))
(assert (x334 x1043))
(assert (x253 x881))
(assert (=> (< (- x944 1) 10000) (= (x367 x944) (x872 x944))))
(assert (= x153 (=> (and (= (x1392 (x367 x616) x329 0) x419) (> 911411945 x533) (< x533 2293535753) (not (= x533 468353030)) (= x329 (x1392 (x367 x1278) x1056 0)) (>= x1042 0) (= x1056 (x1392 (x367 x327) (x872 7) 0)) (not (> 468353030 x533)) (>= 1461501637330902918203684832716283019655932542975 x616) (< 0 x1411) (= (x718 (x367 274184521717934524641157099916833587206)) x1411) (>= 1461501637330902918203684832716283019655932542975 x1278) (= x1042 (x1463 x419)) (= 759532456 x533) (= x1042 x448) (not (= x533 635128645)) (<= x1042 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x120 x1529) (= x448 x249) x561 (= x1154 x1428) (= x561 (>= x249 x1052))) x1268))))
(assert (=> (< (- x900 1) 10000) (= (x367 x900) (x872 x900))))
(assert (x253 x1159))
(assert (=> (< (- x338 1) 10000) (= (x872 x338) (x367 x338))))
(assert (x253 x466))
(assert (=> (< (- x616 1) 10000) (= (x872 x616) (x367 x616))))
(assert (x253 x28))
(assert (x253 x1499))
(assert (x253 x1575))
(assert (= (x628 x29) (ite (and (not x162) x347 x946) (x705 x29) (x1554 x29))))
(assert (x253 x156))
(assert (= x1471 (=> (and (= x569 (x1392 (x367 x308) x1528 0)) (<= 0 x657) (= (x1463 x56) x657) (= (x1392 (x367 x1072) (x872 7) 0) x1528) (= x719 (= x657 0)) (= x56 (x1392 (x367 x454) x569 0)) (= x454 (x1162 1461501637330902918203684832716283019655932542975 x951)) (<= x657 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x308)) (and (=> (and (not x1229) (= x1229 (> x1228 0)) (= (x25 (- x1072 1)) x1228) x719) x506) (=> (and (= x968 x1072) (not x719)) x402)))))
(assert (x253 x1288))
(assert (x253 x533))
(assert (x253 x1096))
(assert (x334 x279))
(assert (x253 x582))
(assert (x253 x1375))
(assert (= x653 x362))
(assert (= (x247 (x367 x1360)) x1360))
(assert (x253 x490))
(assert (= (=> (= 0 x1560) x965) x170))
(assert (= 18446744073709551615 (x247 (x872 18446744073709551615))))
(assert (x253 x900))
(assert (= (x247 (x367 x897)) x897))
(assert (x253 x683))
(assert (x334 x403))
(assert (x253 x943))
(assert (x334 x783))
(assert (= (x587 x803) (ite (and x784 x1565) (x227 x803) (x116 x803))))
(assert (= (ite (and x425 x752) (x1542 x29) (x62 x29)) (x330 x29)))
(assert (=> (< (- x1433 1) 10000) (= (x367 x1433) (x872 x1433))))
(assert (=> (< (- x649 1) 10000) (= (x367 x649) (x872 x649))))
(assert (= x922 (or (and (not x757) x1594) (and x957 x727) (and (not x1454) x1378))))
(assert (x253 x1013))
(assert (= (x1213 x1524) (ite (and x970 x611) (x1399 x1524) (x60 x1524))))
(assert (x253 x136))
(assert (= (ite (= x1054 x1348) x1522 (x555 x1348)) (x451 x1348)))
(assert (x334 x945))
(assert (x334 x174))
(assert (= x576 x108))
(assert (x253 x99))
(assert (= 0 (x686 x1249)))
(assert true)
(assert (x253 x1040))
(assert (= (x1053 x1535) (ite (and x137 x231) (x1028 x1535) (x808 x1535))))
(assert (x334 x960))
(assert (x253 x1368))
(assert (x334 x649))
(assert (x253 x186))
(assert (x253 x357))
(assert (= x960 (x247 (x367 x960))))
(assert (x253 x191))
(assert (= (ite (= x248 x1535) x90 (x1254 x1535)) (x1350 x1535)))
(assert (= (x367 274184521717934524641157099916833587206) (x872 274184521717934524641157099916833587206)))
(assert (= x1151 (or (and x719 x1233) (and (not x547) x1358) (and x747 (not x1141)))))
(assert (=> (> (+ 10000 1) x1511) (= (x367 x1511) (x872 x1511))))
(assert (=> (< (- x339 1) 10000) (= (x367 x339) (x872 x339))))
(assert (x334 x1031))
(assert (x253 x1548))
(assert (x253 x1189))
(assert (= (ite (= x605 x697) x368 (x1350 x605)) (x586 x605)))
(assert (x253 x1242))
(assert (x253 x1609))
(assert (= (x367 2418364589) (x872 2418364589)))
(assert (x253 x1534))
(assert (=> (> (+ 10000 1) x1379) (= (x872 x1379) (x367 x1379))))
(assert (x253 x294))
(assert (x253 x102))
(assert (x253 x1486))
(assert (x253 x138))
(assert (= (ite (= x248 x894) x90 (x1254 x894)) (x1350 x894)))
(assert (x253 x1228))
(assert (x253 x370))
(assert (= (x555 x318) (ite (= x318 x106) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x318))))
(assert (= x1361 x98))
(assert (x253 x583))
(assert (= (=> (= (> x484 0) x1454) (and (=> (not x1454) x145) (=> x1454 x934))) x114))
(assert (x334 x327))
(assert (x253 x1231))
(assert (x334 x308))
(assert (= 2798343961 (x247 (x872 2798343961))))
(assert (x253 x1604))
(assert (= x787 x880))
(assert (= x670 (and (not x425) x752)))
(assert (x334 x1047))
(assert (x334 x1396))
(assert (x334 x828))
(assert (= x194 (or (and x1330 x1447) (and x231 x137))))
(assert (=> (< (- x94 1) 10000) (= (x367 x94) (x872 x94))))
(assert (=> (> (+ 10000 1) x214) (= (x367 x214) (x872 x214))))
(assert (= (x586 x1308) (ite (= x1308 x697) x368 (x1350 x1308))))
(assert (x253 x1215))
(assert (= (x247 (x367 x327)) x327))
(assert (=> (< (- x942 1) 10000) (= (x367 x942) (x872 x942))))
(assert (x253 x1371))
(assert (x253 x378))
(assert (x253 x1425))
(assert (x334 x6))
(assert (=> (> (+ 10000 1) x1584) (= (x872 x1584) (x367 x1584))))
(assert (= (x555 x1163) (ite (= x1163 x106) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x1163))))
(assert (x253 x617))
(assert (x253 x1522))
(assert (x253 x1259))
(assert (= (ite (= x697 x1163) x368 (x1350 x1163)) (x586 x1163)))
(assert (= (x247 (x367 x1248)) x1248))
(assert (x253 x1407))
(assert (= (x247 (x367 x624)) x624))
(assert (x253 x469))
(assert (= (ite (= x605 x1308) x230 (x1130 x605)) (x227 x605)))
(assert (x253 x230))
(assert (x253 x35))
(assert (= 274184521717934524641157099916833587214 (x247 (x367 274184521717934524641157099916833587214))))
(assert (x253 x365))
(assert (= (ite (= x507 x1083) x45 (x1225 x507)) (x1334 x507)))
(assert (x253 x763))
(assert (= x1325 x274))
(assert (= (x555 x1535) (ite (= x106 x1535) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x1535))))
(assert (x253 x1308))
(assert (=> (> (+ 10000 1) x1355) (= (x872 x1355) (x367 x1355))))
(assert (x253 x1303))
(assert (=> (> (+ 10000 1) x842) (= (x872 x842) (x367 x842))))
(assert (= (ite (and x784 x1565) (x227 x894) (x116 x894)) (x587 x894)))
(assert (= (x247 (x872 142201243)) 142201243))
(assert (= (x451 x1163) (ite (= x1163 x1054) x1522 (x555 x1163))))
(assert (x253 x614))
(assert (= (x1150 x635) (ite (and (not x797) x1401 x970 (not x1532)) (x586 x635) (ite (and x970 (not x1401) (not x797)) (x1350 x635) (ite (and x970 x797) (x1350 x635) (x642 x635))))))
(assert (x253 x514))
(assert (=> (< (- x638 1) 10000) (= (x872 x638) (x367 x638))))
(assert (x334 x1439))
(assert (=> (< (- x741 1) 10000) (= (x367 x741) (x872 x741))))
(assert (= (x686 x635) 0))
(assert (x253 x326))
(assert (= (x38 x340) (ite (= x882 x340) x1557 (x849 x340))))
(assert (= (x1150 x1308) (ite (and x1401 (not x1532) (not x797) x970) (x586 x1308) (ite (and (not x797) x970 (not x1401)) (x1350 x1308) (ite (and x797 x970) (x1350 x1308) (x642 x1308))))))
(assert (x253 x609))
(assert (x334 x1198))
(assert (= (ite (and x1401 x970 (not x1532) (not x797)) (x586 x1432) (ite (and (not x1401) x970 (not x797)) (x1350 x1432) (ite (and x970 x797) (x1350 x1432) (x642 x1432)))) (x1150 x1432)))
(assert (=> (< (- x321 1) 10000) (= (x872 x321) (x367 x321))))
(assert (= (x247 (x367 x649)) x649))
(assert (= (x1312 x605) (ite (= x605 x589) x551 (x290 x605))))
(assert (x334 x292))
(assert (x253 x1054))
(assert (x253 x1135))
(assert (= (x247 (x367 x756)) x756))
(assert (x253 x1019))
(assert (x253 x1478))
(assert (x334 x1403))
(assert (x253 x986))
(assert (= x417 (x247 (x367 x417))))
(assert (= (x227 x1163) (ite (= x1163 x1308) x230 (x1130 x1163))))
(assert (x253 x444))
(assert (= (ite (and x784 x1565) (x227 x640) (x116 x640)) (x587 x640)))
(assert (x253 x801))
(assert (x334 x1111))
(assert (x253 x984))
(assert (=> (< (- x472 1) 10000) (= (x872 x472) (x367 x472))))
(assert (= x1307 (x247 (x367 x1307))))
(assert (= (x367 759532456) (x872 759532456)))
(assert (x334 x203))
(assert (x253 x739))
(assert (x334 x321))
(assert (= (x247 (x367 x1309)) x1309))
(assert (= (x247 (x872 2960351575)) 2960351575))
(assert (x253 x907))
(assert (x253 x748))
(assert (x253 x124))
(assert (x253 x850))
(assert (x253 x1423))
(assert (x334 x1434))
(assert (x253 x130))
(assert (x253 x1217))
(assert (x253 x68))
(assert (=> (< (- x691 1) 10000) (= (x872 x691) (x367 x691))))
(assert (x253 x912))
(assert (= (x247 (x367 x944)) x944))
(assert (= 2835717307 (x247 (x872 2835717307))))
(assert (= (and x1337 x641) x747))
(assert (= x1058 (x247 (x367 x1058))))
(assert (=> (< (- x63 1) 10000) (= (x367 x63) (x872 x63))))
(assert (x253 x1384))
(assert (= (x247 (x367 x1009)) x1009))
(assert (x253 x1406))
(assert (x334 x1595))
(assert (= (x247 (x367 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x253 x464))
(assert (= (ite (= x248 x507) x90 (x1254 x507)) (x1350 x507)))
(assert (= (=> (= (< 0 x344) x547) (and (=> (not x547) x506) (=> x547 x390))) x1300))
(assert (x334 x1497))
(assert (x253 x1033))
(assert (=> (> (+ 10000 1) x1560) (= (x872 x1560) (x367 x1560))))
(assert (=> (< (- x476 1) 10000) (= (x367 x476) (x872 x476))))
(assert (x253 x384))
(assert (=> (< (- x1133 1) 10000) (= (x872 x1133) (x367 x1133))))
(assert (= (x247 (x367 x288)) x288))
(assert (x253 x10))
(assert (x253 x1340))
(assert (x253 x1094))
(assert (=> (> (+ 10000 1) x417) (= (x872 x417) (x367 x417))))
(assert (= (x1150 x589) (ite (and x970 (not x797) x1401 (not x1532)) (x586 x589) (ite (and (not x797) (not x1401) x970) (x1350 x589) (ite (and x797 x970) (x1350 x589) (x642 x589))))))
(assert (x334 x1371))
(assert (x334 x1073))
(assert (= (=> (and (= x606 x1154) (= x1529 x386)) x778) x277))
(assert (= x1024 (x247 (x367 x1024))))
(assert (= 1986467848 (x247 (x872 1986467848))))
(assert (= x1161 (=> (and x1304 x1020 (= (x1092 (x367 x562)) x1036) (= (= 274184521717934524641157099916833587218 x562) x425) (= (x1092 (x367 274184521717934524641157099916833587206)) x1512) (= (x1092 (x367 274184521717934524641157099916833587206)) x579) (= x1038 x669) (= (<= 0 x579) x1332) (= x1020 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1226 (x367 x562)))) (= (x1226 (x367 x562)) x1563) x1332 (= x1304 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036))) (and (=> (and (= x613 2835717307) (<= x442 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x718 (x367 274184521717934524641157099916833587218)) x452) (= x442 (x87 x75)) (= x437 x1007) (= (+ x1212 x1238) x444) (not (= x613 649617121)) (= x1417 274184521717934524641157099916833587206) (= (< x442 x437) x1607) (= x1238 x437) x425 (<= 0 x442) (not (> 649617121 x613)) (not (= x613 1889567281)) (= 68 x17) (not (< x17 4)) (not (= x613 826074471)) (= (>= (+ x1326 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x571) (= x17 x1038) (not x1607) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1326) (= x394 x93) (= x394 x570) (not (= x613 2514000705)) (= x102 76450787359836037641860180984291677749980919077056822294353438043884394381312) (>= x1326 0) (= x75 (x1392 (x367 274184521717934524641157099916833587206) (x872 1) 0)) (<= x394 1461501637330902918203684832716283019655932542975) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x48) true) (> 64 x48)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x48)) x1186) (= x721 x143) (not x571) (= x1223 x1007) (= (< x442 x1007) x150) (not x1186) (= 32 x1368) (< 0 x452) (= (x950 x1090) x1326) (not x150) (= (x25 (- x17 4)) x48) (= x449 (x1392 (x367 274184521717934524641157099916833587206) (x872 1) 0)) (< (+ x437 x1326) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1212 x1326) (= (x25 (- x442 x1007)) x530) (= 274184521717934524641157099916833587206 x160) (= 1 x572) (= x1090 (x1392 (x367 x394) (x872 1) 0))) x1561) (=> (not x425) x1157)))))
(assert (= (x247 (x872 2211524764)) 2211524764))
(assert (=> (< (- x1089 1) 10000) (= (x872 x1089) (x367 x1089))))
(assert (x253 x794))
(assert (= (x1364 x635) (ite (= x635 x614) x436 (x1487 x635))))
(assert (= (x247 (x367 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (=> (> (+ 10000 1) x1439) (= (x367 x1439) (x872 x1439))))
(assert (= (x1315 x217) (ite (and (not x797) x970 x1401 (not x1532)) (x38 x217) (ite (and (not x797) x970 (not x1401)) (x849 x217) (ite (and x797 x970) (x849 x217) (x100 x217))))))
(assert (x253 x352))
(assert (x608 x1353))
(assert (= (ite (and x611 x970) (x1501 x1070) (x788 x1070)) (x185 x1070)))
(assert (x253 x120))
(assert (x253 x418))
(assert (x334 x991))
(assert (x253 x1183))
(assert (x253 x992))
(assert (x334 x1545))
(assert (x253 x64))
(assert (= 0 (x686 x131)))
(assert (x253 x1367))
(assert (x253 x857))
(assert (= x699 (=> (= x1035 (< 0 x484)) (and (=> (not x1035) x170) (=> x1035 x146)))))
(assert (x253 x1354))
(assert (= x1391 (=> (and (= x1446 (x11 x1191)) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1031) (= x167 (= 0 x1446)) (= (x1392 (x367 x344) (x872 6) 0) x695) (>= x1446 0) (= (x1392 (x367 x1031) x695 0) x1191) (<= x1446 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> x167 x1123) (=> (and (not x167) (= x344 x1331)) x16)))))
(assert (x253 x572))
(assert (x253 x622))
(assert (= (x247 (x872 911411945)) 911411945))
(assert (=> (> (+ 10000 1) x989) (= (x367 x989) (x872 x989))))
(assert (= (ite (= x882 x61) x1557 (x849 x61)) (x38 x61)))
(assert (x334 x1133))
(assert (x253 x551))
(assert (= (x335 x389) (ite (and x310 x1582 x1045 (not x455) x1174 x309) (x1364 x389) (ite (and x310 x309 x1045 x1582 (not x1174)) (x1487 x389) (ite (and x310 x309 x1582 (not x1045)) (x451 x389) (ite (and x309 x310 (not x1582)) (x555 x389) (x1346 x389)))))))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x247 (x872 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= (or (and (not x957) x727) (and x272 (not x1530))) x459))
(assert (x253 x1432))
(assert (x253 x82))
(assert (x253 x894))
(assert (=> (< (- x6 1) 10000) (= (x367 x6) (x872 x6))))
(assert (x334 x73))
(assert (x253 x1491))
(assert (= (x1053 x507) (ite (and x137 x231) (x1028 x507) (x808 x507))))
(assert (x253 x604))
(assert (=> (> (+ 10000 1) x562) (= (x872 x562) (x367 x562))))
(assert (= (x227 x1535) (ite (= x1308 x1535) x230 (x1130 x1535))))
(assert (= x347 x194))
(assert (=> (< (- x1180 1) 10000) (= (x367 x1180) (x872 x1180))))
(assert (x334 x744))
(assert (x253 x873))
(assert (x253 x366))
(assert (= (ite (and x970 (not x1532) x1401 (not x797)) (x586 x389) (ite (and (not x797) (not x1401) x970) (x1350 x389) (ite (and x970 x797) (x1350 x389) (x642 x389)))) (x1150 x389)))
(assert (x334 x632))
(assert (= (x247 (x367 x279)) x279))
(assert (=> (> (+ 10000 1) x960) (= (x872 x960) (x367 x960))))
(assert (= x1047 (x247 (x367 x1047))))
(assert (= (x247 (x872 2868243304)) 2868243304))
(assert (x253 x403))
(assert (x253 x368))
(assert (x608 1461501637330902918203684832716283019655932542975))
(assert (x253 x830))
(assert (x253 x197))
(assert (= 0 (x686 x507)))
(assert (=> (< (- x1371 1) 10000) (= (x872 x1371) (x367 x1371))))
(assert (x253 x12))
(assert (x334 x883))
(assert (=> (< (- x380 1) 10000) (= (x872 x380) (x367 x380))))
(assert (x253 x1564))
(assert (x334 x634))
(assert (x253 x893))
(assert (x253 x37))
(assert (x253 x1570))
(assert (x608 x1559))
(assert (x253 x324))
(assert (= (x686 x894) 0))
(assert (= x1281 (=> (and (not (< x708 2293535753)) (> x209 0) (= x209 (x718 (x367 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x379) (= x1570 x165) (= x165 (x1526 x61)) (= x1455 (x1392 (x367 x1187) (x872 4) 0)) (not (= x708 2418364589)) (not (= x708 2512682246)) (<= x165 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x165 0) (= x535 (x1392 (x367 x624) x1455 0)) (= x708 2532887486) (<= x1247 1461501637330902918203684832716283019655932542975) (= x61 (x1392 (x367 x379) x1088 0)) (not (= x708 2293535753)) (<= x624 1461501637330902918203684832716283019655932542975) (< x708 2690754053) (= (x1392 (x367 x1247) x535 0) x1088) (< x708 2960351575)) x983)))
(assert (x253 x733))
(assert (x253 x1251))
(assert (=> (> (+ 10000 1) x279) (= (x872 x279) (x367 x279))))
(assert (x253 x883))
(assert (x253 x29))
(assert (=> (< (- x552 1) 10000) (= (x367 x552) (x872 x552))))
(assert (= (x686 x29) 0))
(assert (x253 x1433))
(assert (= (x247 (x367 x949)) x949))
(assert (= (ite (= x640 x248) x90 (x1254 x640)) (x1350 x640)))
(assert (=> (> (+ 10000 1) x729) (= (x367 x729) (x872 x729))))
(assert (= (x290 x605) (ite (= x1289 x605) x1318 (x161 x605))))
(assert (x253 x865))
(assert (x253 x1557))
(assert (x253 x213))
(assert (=> (> (+ 10000 1) x1516) (= (x367 x1516) (x872 x1516))))
(assert (= (ite (and x5 x805) (x1207 x754) (ite (and x805 x1093 (not x5)) (x703 x754) (x524 x754))) (x884 x754)))
(assert (x253 x819))
(assert (= (x367 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x872 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (= (ite (= x1054 x894) x1522 (x555 x894)) (x451 x894)))
(assert (= 2293535753 (x247 (x872 2293535753))))
(assert (x253 x1584))
(assert (x253 x507))
(assert (x253 x744))
(assert (= (ite (and x1565 x784) (x227 x507) (x116 x507)) (x587 x507)))
(assert (= (x247 (x367 x1560)) x1560))
(assert (x334 x905))
(assert (=> (> (+ 10000 1) x949) (= (x872 x949) (x367 x949))))
(assert (x253 x1138))
(assert (x253 x118))
(assert (x253 x1267))
(assert (x253 x650))
(assert (= (x1364 x1535) (ite (= x1535 x614) x436 (x1487 x1535))))
(assert (= (x884 x1144) (ite (and x805 x5) (x1207 x1144) (ite (and (not x5) x1093 x805) (x703 x1144) (x524 x1144)))))
(assert (x253 x1289))
(assert (x334 x998))
(assert (=> (> (+ 10000 1) x903) (= (x367 x903) (x872 x903))))
(assert (=> (> (+ 10000 1) x1533) (= (x367 x1533) (x872 x1533))))
(assert (x253 x1121))
(assert (x253 x202))
(assert (x253 x717))
(assert (x334 x1026))
(assert (= (ite (= x882 x1462) x1557 (x849 x1462)) (x38 x1462)))
(assert (x253 x1442))
(assert (x253 x1319))
(assert (x1112 x951 x1377))
(assert (=> (> (+ 10000 1) x606) (= (x872 x606) (x367 x606))))
(assert (= x989 (x247 (x367 x989))))
(assert (=> (> (+ 10000 1) x897) (= (x367 x897) (x872 x897))))
(assert (= 0 (x686 x1348)))
(assert (= (x330 x1163) (ite (and x752 x425) (x1542 x1163) (x62 x1163))))
(assert (x334 x1180))
(assert (x253 x704))
(assert (= (x1150 x507) (ite (and x970 (not x1532) x1401 (not x797)) (x586 x507) (ite (and x970 (not x1401) (not x797)) (x1350 x507) (ite (and x797 x970) (x1350 x507) (x642 x507))))))
(assert (x334 x1575))
(assert (x253 x875))
(assert (x334 x130))
(assert (x253 x911))
(assert (= (ite (= x376 x1251) x1291 (x451 x1251)) (x1487 x1251)))
(assert (x334 x234))
(assert (x253 x134))
(assert (=> (< (- x1047 1) 10000) (= (x367 x1047) (x872 x1047))))
(assert (x334 x1486))
(assert (= (x872 2514000705) (x367 2514000705)))
(assert (x334 x46))
(assert (x253 x721))
(assert (= (=> (and (= (x25 (- x344 1)) x1072) (= x1141 (< 0 x1072))) (and (=> (not x1141) x506) (=> x1141 x1471))) x693))
(assert (= x1595 (x247 (x367 x1595))))
(assert (= (x1150 x1163) (ite (and x1401 (not x797) (not x1532) x970) (x586 x1163) (ite (and (not x1401) (not x797) x970) (x1350 x1163) (ite (and x970 x797) (x1350 x1163) (x642 x1163))))))
(assert (x253 x380))
(assert (= (ite (= x1083 x1163) x45 (x1225 x1163)) (x1334 x1163)))
(assert (= x1243 (=> (and (>= x464 0) (= false x1441) (= x400 5) x838 (= x1420 false) (= x28 x35) (>= x904 0) (= x466 x720) x151 (= x325 false) (>= x35 0) (= x1111 x1154) (= x1025 (x1241 (x367 274184521717934524641157099916833587206))) (= x76 (> (x718 (x367 274184521717934524641157099916833587206)) 0)) (= 2939843472 x1153) (= x1155 x1529) (= (x1241 (x367 274184521717934524641157099916833587214)) x1508) (<= x35 1461501637330902918203684832716283019655932542975) (<= x1354 1461501637330902918203684832716283019655932542975) (>= x1529 0) (<= x904 1461501637330902918203684832716283019655932542975) (>= x1508 0) (<= x720 1461501637330902918203684832716283019655932542975) (= x811 false) (= x464 (x1241 (x367 274184521717934524641157099916833587218))) (>= x720 0) (>= x1025 0) x76 (= x151 (< 0 (x718 (x367 274184521717934524641157099916833587214)))) (<= x1529 1461501637330902918203684832716283019655932542975) (= x838 (< 0 (x718 (x367 274184521717934524641157099916833587218)))) (>= x1354 0)) x85)))
(assert (= x458 x84))
(assert (= (x247 (x367 x1180)) x1180))
(assert (= (x256 x204) (ite (and x309 (not x322) x310) (x335 x204) (x192 x204))))
(assert (=> (> (+ 10000 1) x1431) (= (x367 x1431) (x872 x1431))))
(assert (x253 x742))
(assert (= (=> (and (not (= 2293535753 x134)) (>= 1461501637330902918203684832716283019655932542975 x873) (not (= x134 2418364589)) (<= x1596 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1392 (x367 x1610) x147 0) x1413) (> 2690754053 x134) (not (> 2293535753 x134)) (= x312 (x718 (x367 274184521717934524641157099916833587206))) (= x134 2532887486) (= (x1392 (x367 x64) x770 0) x1388) (> x312 0) (= x770 (x1392 (x367 x944) (x872 4) 0)) (> 2960351575 x134) (= x1127 x1596) (<= x64 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1610) (= x1596 (x1526 x1413)) (= (x1392 (x367 x873) x1388 0) x147) (>= x1596 0) (not (= x134 2512682246))) x529) x15))
(assert (= (ite (= x1348 x614) x436 (x1487 x1348)) (x1364 x1348)))
(assert (= (x247 (x367 x64)) x64))
(assert (x334 x1278))
(assert (= x536 (=> (and (= x948 (x1392 (x367 x1562) x682 0)) (= x426 (x884 x754)) (= (x1392 (x367 x484) (x872 7) 0) x682) (>= x426 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x426) (= x915 (> x426 0)) (= x1562 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x960) (= x754 (x1392 (x367 x960) x948 0))) (and (=> (not x915) x699) (=> (and (= (x1208 x1037) x1002) (= x369 x1002) (<= x1002 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x476 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= x241 (x1392 (x367 x623) x846 0)) (= x1037 (x1392 (x367 x476) x241 0)) (= x846 (x1392 (x367 x484) (x872 9) 0)) x915 (= 0 x1469) (>= x1002 0) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x623)) x751)))))
(assert (= x945 (x247 (x367 x945))))
(assert (= (x185 x91) (ite (and x611 x970) (x1501 x91) (x788 x91))))
(assert (x253 x605))
(assert (= x850 (x247 (x367 x850))))
(assert (x253 x960))
(assert (x253 x1321))
(assert (x253 x897))
(assert (x253 x1026))
(assert (x253 x1244))
(assert (= 2743102681 (x247 (x872 2743102681))))
(assert (x253 x338))
(assert (x253 x589))
(assert (x253 x1324))
(assert (x253 x311))
(assert (= x506 (=> (= 0 x73) x648)))
(assert (= (x227 x894) (ite (= x1308 x894) x230 (x1130 x894))))
(assert (x253 x1446))
(assert (x253 x331))
(assert (= (and x310 x309) x231))
(assert (x253 x954))
(assert (x253 x512))
(assert (x253 x976))
(assert (= (x1225 x830) (ite (= x830 x856) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x242 x830))))
(assert (x253 x1580))
(assert (= (ite (= x434 x29) x1338 (x1334 x29)) (x599 x29)))
(assert (x253 x1154))
(assert (x253 x131))
(assert (=> (> (+ 10000 1) x1016) (= (x367 x1016) (x872 x1016))))
(assert (x253 x1511))
(assert (x253 x434))
(assert (x253 x815))
(assert (x253 x579))
(assert (x334 x1046))
(assert (= x230 (x227 x1308)))
(assert (= x660 (or (and (not x1494) x710) (and x728 x233) (and x785 (not x1539)))))
(assert (=> (< (- x1538 1) 10000) (= (x872 x1538) (x367 x1538))))
(assert (=> (> (+ 10000 1) x308) (= (x872 x308) (x367 x308))))
(assert (= 0 (x686 x318)))
(assert (x253 x903))
(assert (x334 x683))
(assert (x253 x1563))
(assert (= (x1350 x605) (ite (= x605 x248) x90 (x1254 x605))))
(assert (= (+ 1 (x247 x3)) (x247 (x734 x3 1))))
(assert (= (ite (and x805 x5) (x1482 x385) (ite (and (not x5) x1093 x805) (x1482 x385) (x1464 x385))) (x714 x385)))
(assert (=> (< (- x1058 1) 10000) (= (x872 x1058) (x367 x1058))))
(assert (x253 x1247))
(assert (x253 x1540))
(assert (= x14 (or x236 (and x274 (not x1276)))))
(assert (x253 x101))
(assert (= (x247 (x367 x829)) x829))
(assert (=> (> (+ 10000 1) x683) (= (x367 x683) (x872 x683))))
(assert (= (ite (= x803 x1308) x230 (x1130 x803)) (x227 x803)))
(assert (x253 x1363))
(assert (= (x367 1461501637330902918203684832716283019655932542975) (x872 1461501637330902918203684832716283019655932542975)))
(assert (x253 x351))
(assert (x253 x1574))
(assert (= (x247 (x367 x1588)) x1588))
(assert (x253 x538))
(assert (= (x367 911411945) (x872 911411945)))
(assert (= (=> (and (= x1382 (x25 (- x484 1))) (= (< 0 x1382) x743)) (and (=> x743 x80) (=> (not x743) x170))) x388))
(assert (x253 x1114))
(assert (x253 x339))
(assert (= x49 (x247 (x367 x49))))
(assert (x253 x181))
(assert (= x234 (x247 (x367 x234))))
(assert (x253 x1046))
(assert (= x1277 x805))
(assert (= (x247 (x367 x912)) x912))
(assert (=> (> (+ 10000 1) x1) (= (x872 x1) (x367 x1))))
(assert (=> (< (- x744 1) 10000) (= (x367 x744) (x872 x744))))
(assert (x253 x141))
(assert (= (=> (= 0 x403) x413) x145))
(assert (= (x367 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x872 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x247 (x367 x157)) x157))
(assert (= (ite (= x1413 x882) x1557 (x849 x1413)) (x38 x1413)))
(assert (x334 x172))
(assert (x253 x295))
(assert (= (ite (= x204 x376) x1291 (x451 x204)) (x1487 x204)))
(assert (= 759532456 (x247 (x872 759532456))))
(assert (= (ite (= x1251 x856) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x242 x1251)) (x1225 x1251)))
(assert (x253 x1558))
(assert (x608 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x869 (=> (and (= (x718 (x367 274184521717934524641157099916833587206)) x197) (< x1390 911411945) (= x877 (x1392 (x367 x127) (x872 10) 0)) (> 2293535753 x1390) (= x22 (x1392 (x367 x577) x877 0)) (< 0 x197) (<= x1421 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1421 x289) (<= x577 1461501637330902918203684832716283019655932542975) (< x1390 468353030) (= 69947311 x1390) (<= 0 x1421) (= x1421 (x740 x22))) (=> (and (= x756 x1529) (= x289 x935) (= x157 x904) (= x1154 x1486)) x47))))
(assert (x253 x55))
(assert (=> (< (- x78 1) 10000) (= (x367 x78) (x872 x78))))
(assert (x334 x64))
(assert (x334 x616))
(assert (x253 x1599))
(assert (x253 x1422))
(assert (= 0 (x686 192)))
(assert (= (ite (= x614 x1251) x436 (x1487 x1251)) (x1364 x1251)))
(assert (=> (< (- x1111 1) 10000) (= (x872 x1111) (x367 x1111))))
(assert (x253 x1075))
(assert (x253 x73))
(assert (= (x1150 x1535) (ite (and x1401 (not x1532) (not x797) x970) (x586 x1535) (ite (and (not x1401) x970 (not x797)) (x1350 x1535) (ite (and x797 x970) (x1350 x1535) (x642 x1535))))))
(assert (x253 x760))
(assert (x334 x89))
(assert (x253 x1083))
(assert (x253 x382))
(assert (= (ite (and (not x455) x1174 x309 x310 x1582 x1045) (x1364 x29) (ite (and x1582 x309 (not x1174) x1045 x310) (x1487 x29) (ite (and x310 x309 (not x1045) x1582) (x451 x29) (ite (and x309 (not x1582) x310) (x555 x29) (x1346 x29))))) (x335 x29)))
(assert (= x1382 (x247 (x367 x1382))))
(assert (x253 x1087))
(assert (= (and x517 x148) x1587))
(assert (x253 x1416))
(assert (=> (> (+ 10000 1) x1575) (= (x367 x1575) (x872 x1575))))
(assert (x253 x1227))
(assert (= x1257 (=> (and (not (= x1489 0)) (= (< (x1167 (x367 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x923) (= (= x687 0) x793) (= (x955 x204) x1427) (or (not x1310) (and (= x171 (x955 x1535)) (= x1535 (x372 (+ x204 32))) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733) true) (> 32 x733)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733))) (= (= x171 0) x305) (< 0 x171) (= x1148 x171) (= x733 (x955 x204)) x1310 (= (not x305) x772) (= (ite x772 1 0) x1148))) x923 (or (and (not x793) (= (x372 (+ x1075 x1258)) x103) (= (x1162 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1185) x1075) (= x1258 x204) (= x1503 (x372 (+ 96 x928))) (= x830 x103) (= x1185 (x372 (+ 63 x687)))) (and (= x204 96) (= x1258 x830) x793)) (= (x1167 (x367 274184521717934524641157099916833587206)) x24) (= x1310 (> x1427 0)) (= x813 (x844 (x367 x1230)))) x1514)))
(assert (x334 x1058))
(assert (= x475 (=> (= x1539 (> x344 0)) (and (=> (not x1539) x940) (=> x1539 x1391)))))
(assert (= (x247 (x367 x213)) x213))
(assert (x334 x484))
(assert (= 1968616202 (x247 (x872 1968616202))))
(assert (x253 x643))
(assert (x253 x1025))
(assert (= (x247 (x367 x1575)) x1575))
(assert (x253 x285))
(assert (= (x872 2798343961) (x367 2798343961)))
(assert (x253 x1495))
(assert (= (x872 2512682246) (x367 2512682246)))
(assert (x253 x289))
(assert (= (ite (= x635 x434) x1338 (x1334 x635)) (x599 x635)))
(assert (= x741 (x247 (x367 x741))))
(assert (x253 x30))
(assert (=> (> (+ 10000 1) x394) (= (x872 x394) (x367 x394))))
(assert (x334 x380))
(assert (x253 x1007))
(assert (= x623 (x247 (x367 x623))))
(assert (x253 x457))
(assert (= x751 (=> (and (or x1004 (and (= x424 (x1162 1461501637330902918203684832716283019655932542975 x781)) (not x1004) (= x453 (x1162 1461501637330902918203684832716283019655932542975 x951)))) (or (and (= x626 (x372 (+ 128 x30))) (or (and (not x286) (= x525 0)) (and (= (> x471 x260) x445) (or (and x445 (= x282 x1534) (= (x1490 x1250) x1534)) (and (not x445) (= x471 x282))) (= (x1490 x1250) x260) (= (= x354 0) x503) x286 (or (and (= (x25 (- x282 x354)) x296) (= (ite (> 604800 x296) x296 604800) x1521) (= x525 x1521) (not x503) (not (> x354 x282)) (= x954 604800)) (and (not (> x987 x282)) x503 (= (x1490 x1416) x987) (= x525 x526) (= x526 (x25 (- x282 x987))))))) (= x1264 (x662 x1296)) (= x1297 (x913 x1077)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1264) (= x1239 (x1392 (x367 x1588) x358 0)) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1046) (= (x1392 (x367 x484) (x872 7) 0) x629) (>= x1297 0) (<= 0 x1264) (= x1588 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= x815 (x1490 x1250)) (= (< x354 x815) x286) (<= x354 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1392 (x367 x1046) x629 0) x358) (= (x884 x1239) x354) (= x1250 (x372 (+ x30 96))) (= x1077 (x734 x1296 1)) (>= x354 0) (= x1190 (= x525 0)) (<= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x51) (or (and (= (x1162 1461501637330902918203684832716283019655932542975 x781) x417) (= (x1392 (x367 x417) x1429 0) x1370) (= x1429 (x1392 (x367 x484) (x872 7) 0)) (= (x1392 (x367 x1497) x1370 0) x667) x1190 (= x1362 x626) (= x1497 (x1162 1461501637330902918203684832716283019655932542975 x951))) (and (= x1433 (x1162 1461501637330902918203684832716283019655932542975 x951)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1094 x1484)) (not x1190) (= x603 x1094) (= x1484 x1256) (= (x1392 (x367 x1180) x612 0) x1280) (= (x1392 (x367 x741) x511 0) x1170) (= x1362 x626) (= (x1392 (x367 x484) (x872 3) 0) x612) (= x1094 (x714 x997)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1094) (= x1287 x1484) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x1272) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1180) (= (+ x1256 x603) x495) (< (* x369 x525) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x511 (x1392 (x367 x484) (x872 7) 0)) (>= x1094 0) (= x280 (x1392 (x367 x1433) x1170 0)) (= (* x369 x525) x1287) (= x997 (x1392 (x367 x1272) x1280 0)) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x741))) (= (x1392 (x367 x484) (x872 1) 0) x1296)) (and (= (x1392 (x367 x484) (x872 7) 0) x188) (= x187 (x1392 (x367 x443) x1039 0)) (= (x1392 (x367 x1016) x188 0) x1039) (= x443 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= x1016 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x1362 x1416) x51)) (= x1004 (= 0 x1469)) (= (= x369 0) x51)) x1181)))
(assert (=> (> (+ 10000 1) x604) (= (x367 x604) (x872 x604))))
(assert (x253 x562))
(assert (= (x247 (x872 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= x911 (x247 (x367 x911))))
(assert (= (x1150 x894) (ite (and (not x797) x1401 (not x1532) x970) (x586 x894) (ite (and x970 (not x1401) (not x797)) (x1350 x894) (ite (and x797 x970) (x1350 x894) (x642 x894))))))
(assert (= x1355 (x247 (x367 x1355))))
(assert (= x21 x681))
(assert (= (ite (and x1565 x784) (x227 x389) (x116 x389)) (x587 x389)))
(assert (= (=> (and (or (and (= x363 0) (= 0 x1548) x219) (and (<= x1173 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1173 0) (= (= 0 x1173) x1510) (= x163 (x1162 1461501637330902918203684832716283019655932542975 x781)) (or (and (= x1173 x1548) (not x1510) (= 1 x363)) (and (= x1548 0) (= x363 0) x1510)) (= (x1392 (x367 x163) x216 0) x399) (= x1173 (x190 x399)) (not x219) (= (x1392 (x367 x403) (x872 10) 0) x216))) (= x219 (= 0 x403))) x627) x413))
(assert (= (x599 x894) (ite (= x434 x894) x1338 (x1334 x894))))
(assert (x253 x1509))
(assert (= (x872 274184521717934524641157099916833587218) (x367 274184521717934524641157099916833587218)))
(assert (= x1272 (x247 (x367 x1272))))
(assert (=> (< (- x64 1) 10000) (= (x872 x64) (x367 x64))))
(assert (= (=> (= (> x344 x1106) x835) (and (=> (and (= x70 x1558) x835) x1398) (=> (not x835) x1339))) x1204))
(assert (x253 x867))
(assert (x253 x554))
(assert (x253 x570))
(assert (= (x555 x70) (ite (= x106 x70) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x70))))
(assert (x253 x1283))
(assert (x253 x1298))
(assert (= (=> (and (= x683 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= (= x416 0) x148) (= (x1392 (x367 x484) (x872 7) 0) x237) (<= 0 x416) (= x825 (x1392 (x367 x683) x237 0)) (= (x884 x1144) x416) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x416) (= x842 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= (x1392 (x367 x842) x825 0) x1144)) (and (=> (and (not x148) (= x484 x1546)) x222) (=> x148 x388))) x146))
(assert (= (x1053 x1249) (ite (and x231 x137) (x1028 x1249) (x808 x1249))))
(assert (= (x247 (x367 x491)) x491))
(assert (=> (> (+ 10000 1) x130) (= (x367 x130) (x872 x130))))
(assert (x253 x154))
(assert (= (x247 (x367 x1545)) x1545))
(assert (= x942 (x247 (x367 x942))))
(assert (= (ite (and (not x797) x970 (not x1532) x1401) (x586 x131) (ite (and x970 (not x1401) (not x797)) (x1350 x131) (ite (and x970 x797) (x1350 x131) (x642 x131)))) (x1150 x131)))
(assert (= (x1213 x516) (ite (and x970 x611) (x1399 x516) (x60 x516))))
(assert (x334 x394))
(assert (x253 x1133))
(assert (= (x1487 x318) (ite (= x376 x318) x1291 (x451 x318))))
(assert (=> (> (+ 10000 1) x484) (= (x367 x484) (x872 x484))))
(assert (x253 x826))
(assert (=> (> (+ 10000 1) x292) (= (x367 x292) (x872 x292))))
(assert (x253 x1437))
(assert (= x6 (x247 (x367 x6))))
(assert (= x632 (x247 (x367 x632))))
(assert (x253 x631))
(assert (= x458 x576))
(assert (= x1230 (x247 (x367 x1230))))
(assert (= (ite (= x697 x1251) x368 (x1350 x1251)) (x586 x1251)))
(assert (= (ite (= x1432 x1308) x230 (x1130 x1432)) (x227 x1432)))
(assert (= (and x898 x1035) x517))
(assert (x253 x885))
(assert (= x77 x901))
(assert (x253 x679))
(assert (= (ite (= x589 x1163) x551 (x290 x1163)) (x1312 x1163)))
(assert (x334 x472))
(assert (= (ite (and x805 x5) (x1482 x226) (ite (and x805 x1093 (not x5)) (x1482 x226) (x1464 x226))) (x714 x226)))
(assert (x253 x1002))
(assert (= (ite (= x248 x204) x90 (x1254 x204)) (x1350 x204)))
(assert (x253 x736))
(assert (= (x555 x1249) (ite (= x106 x1249) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x1249))))
(assert (x253 x407))
(assert (x334 x288))
(assert (= (ite (= x318 x1289) x1318 (x161 x318)) (x290 x318)))
(assert (x253 x344))
(assert (x253 x724))
(assert (= x893 (x247 (x367 x893))))
(assert (x253 x48))
(assert (x334 x1))
(assert (= (ite (= x697 x248) x90 (x1254 x697)) (x1350 x697)))
(assert (= (ite (and x347 x133 x348 x946 x59 (not x300)) (x575 x1163) (ite (and x347 x946 x348 (not x133) x59) (x599 x1163) (ite (and x59 x347 x946 (not x348)) (x1334 x1163) (ite (and (not x59) x347 x946) (x1225 x1163) (x1169 x1163))))) (x705 x1163)))
(assert (x253 x1504))
(assert (x253 x597))
(assert (= (ite (= x389 x614) x436 (x1487 x389)) (x1364 x389)))
(assert (= (x247 (x367 x1497)) x1497))
(assert (x334 x893))
(assert (x253 x525))
(assert (x253 x1106))
(assert (=> (> (+ 10000 1) x443) (= (x872 x443) (x367 x443))))
(assert (x253 x566))
(assert (= (x1053 x389) (ite (and x231 x137) (x1028 x389) (x808 x389))))
(assert (x253 x552))
(assert (x334 x1072))
(assert (= x26 (x247 (x367 x26))))
(assert (x253 x1362))
(assert (x334 x1428))
(assert (x253 x342))
(assert (x253 x780))
(assert (= (x247 (x367 x1428)) x1428))
(assert (= (x290 x1163) (ite (= x1289 x1163) x1318 (x161 x1163))))
(assert (x253 x81))
(assert (x573 x1185 x406 x1404 x1022))
(assert (= (ite (and x137 x231) (x1028 x635) (x808 x635)) (x1053 x635)))
(assert (x608 x141))
(assert (= (x247 (x367 x1031)) x1031))
(assert (= x172 (x247 (x367 x172))))
(assert (= 1461501637330902918203684832716283019655932542975 (x247 (x872 1461501637330902918203684832716283019655932542975))))
(assert (=> (< (- x1564 1) 10000) (= (x367 x1564) (x872 x1564))))
(assert (x334 x443))
(assert (= (x1312 x507) (ite (= x507 x589) x551 (x290 x507))))
(assert (x253 x394))
(assert (= (ite (and (not x1532) (not x797) x1401 x970) (x38 x361) (ite (and x970 (not x797) (not x1401)) (x849 x361) (ite (and x797 x970) (x849 x361) (x100 x361)))) (x1315 x361)))
(assert (= (x247 (x872 2764855426)) 2764855426))
(assert (=> (> (+ 10000 1) x1073) (= (x367 x1073) (x872 x1073))))
(assert (x253 x443))
(assert (= (x247 (x367 x664)) x664))
(assert (= (ite (and x611 x970) (x1399 x802) (x60 x802)) (x1213 x802)))
(assert (= x164 (x247 (x367 x164))))
(assert (= (x451 x1249) (ite (= x1249 x1054) x1522 (x555 x1249))))
(assert (x334 x736))
(assert (x608 x1160))
(assert (= (x256 x1163) (ite (and x310 x309 (not x322)) (x335 x1163) (x192 x1163))))
(assert (x253 x1258))
(assert (= x616 (x247 (x367 x616))))
(assert (= (x686 x589) 0))
(assert (= (x247 (x367 x63)) x63))
(assert (x253 x560))
(assert (= (x1334 x29) (ite (= x29 x1083) x45 (x1225 x29))))
(assert (= (x247 (x367 x118)) x118))
(assert (x253 x1250))
(assert (= x604 (x247 (x367 x604))))
(assert (x253 x1072))
(assert (x253 x1359))
(assert (x253 x1111))
(assert (x253 x400))
(assert (= (x247 (x872 468353030)) 468353030))
(assert (x253 x1079))
(assert (= (or (and x1064 (not x1018)) (and x517 (not x148))) x615))
(assert (= x46 (x247 (x367 x46))))
(assert (x253 x199))
(assert (= x584 (x247 (x367 x584))))
(assert (= (ite (= x61 x340) x1040 (x1315 x61)) (x967 x61)))
(assert (= x716 (x247 (x367 x716))))
(assert (x253 x656))
(assert (x608 x706))
(assert (x253 x1272))
(assert (=> (> (+ 10000 1) x1230) (= (x367 x1230) (x872 x1230))))
(assert (=> (< (- x1198 1) 10000) (= (x872 x1198) (x367 x1198))))
(assert (x253 x416))
(assert (x253 x314))
(assert (= (x247 (x367 x769)) x769))
(assert (=> (> (+ 10000 1) x911) (= (x872 x911) (x367 x911))))
(assert (= x1398 (=> (= (< 0 x230) x310) (and (=> (not x310) x277) (=> (and (or (and (= x1054 x1258) (= (< 32 x111) x1045) x1582 (or (and (not x1045) (= x892 32)) (and (or (and (not x1174) (= 64 x892)) (and x1174 (or (and (= x1586 (x372 (+ x928 160))) (= (x1364 x1348) x55) x455 (= x892 128) (= x1348 (x372 (+ x70 128))) (not x833) (= x833 (< 128 x111))) (and (= x892 96) (not x455))) (= x614 (x372 (+ 128 x928))) (= x455 (< 96 x111)) (= (x1487 x318) x436) (= x318 (x372 (+ 96 x70))))) (= x1432 (x372 (+ x70 64))) (= x1174 (< 64 x111)) (= (x451 x1432) x1291) (= x376 (x372 (+ x928 96))) x1045)) (= x803 x131) (= (x555 x131) x1522)) (and (not x1582) (= x892 0))) (= (x1162 26959946667150639794667015087019630673637144422540572481103610249215 x33) x450) (= x322 (> x892 x111)) (< 0 x1245) (= x655 (< 0 x1135)) (= (x372 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x450)) x152) (= (x372 (+ 100 x70)) x928) (> x230 0) (= (x1252 x640) x1255) x655 (= x1230 (x302 x251)) (= (x1252 x1308) x1245) (= (x372 (+ x70 68)) x1172) (= (x718 (x367 x1230)) x1135) (= x201 (x25 (- x183 32))) (= x1258 (x372 (+ 128 x1478))) (= (< 0 x111) x1582) (= x251 x816) (= x622 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= x1478 (x372 (+ x70 36))) (= (x372 (+ 96 x1478)) x106) (= (x25 (- x928 x70)) x183) (or (not x322) (and (= x186 (x372 (+ x111 x1258))) x322)) (= x803 (x372 (+ x70 32))) (= x111 (x555 x70)) (= 0 x1502) (>= 1461501637330902918203684832716283019655932542975 x1230) (= (x266 x803) x33) x310 (= x640 (x372 (+ x1477 160)))) x798)))))
(assert (x253 x1249))
(assert (x334 x1230))
(assert (x253 x282))
(assert (x608 x541))
(assert (x253 x945))
(assert (= (x367 1968616202) (x872 1968616202)))
(assert (= x873 (x247 (x367 x873))))
(assert (x253 x1431))
(assert (=> (> (+ 10000 1) x1497) (= (x367 x1497) (x872 x1497))))
(assert (x253 x46))
(assert (= (x714 x990) (ite (and x805 x5) (x1482 x990) (ite (and x805 (not x5) x1093) (x1482 x990) (x1464 x990)))))
(assert (= (ite (= x507 x614) x436 (x1487 x507)) (x1364 x507)))
(assert (=> (< (- x850 1) 10000) (= (x872 x850) (x367 x850))))
(assert (= (x38 x361) (ite (= x361 x882) x1557 (x849 x361))))
(assert (x253 x33))
(assert (= (x335 x1535) (ite (and x1174 (not x455) x309 x1045 x1582 x310) (x1364 x1535) (ite (and x309 x1582 x1045 (not x1174) x310) (x1487 x1535) (ite (and (not x1045) x310 x1582 x309) (x451 x1535) (ite (and x309 (not x1582) x310) (x555 x1535) (x1346 x1535)))))))
(assert (= (+ 1 (x247 x1296)) (x247 (x734 x1296 1))))
(assert (x253 x726))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x247 (x872 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (= x798 (=> (and (= (= x1230 274184521717934524641157099916833587218) x137) x1285 (= x111 x1340) (= (< x1138 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1202) (= (x1178 (x367 x1230)) x1189) (= (>= x1100 0) x775) (= x1327 (x1241 (x367 274184521717934524641157099916833587206))) x775 (= x1138 (x1241 (x367 x1230))) (= (x1241 (x367 274184521717934524641157099916833587206)) x1100) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1178 (x367 x1230))) x1285) x1202) (and (=> (not x137) x499) (=> (and (not (= 649617121 x1298)) (= x71 274184521717934524641157099916833587206) (= x1011 x1000) (= x622 x497) (= x298 (x1392 (x367 274184521717934524641157099916833587206) (x872 1) 0)) (not x341) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1541) (= x646 (< x326 x1011)) (= x1255 x303) (not (< x1504 4)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1011 x1425)) (not (= x1298 826074471)) (= (x1392 (x367 274184521717934524641157099916833587206) (x872 1) 0) x800) (= (x1392 (x367 x497) (x872 1) 0) x899) (= x1262 (x25 (- x1504 4))) (= x1611 274184521717934524641157099916833587206) (= (x1392 (x367 x497) (x872 1) 0) x1523) (not (= x1298 2514000705)) (>= x326 0) (not x652) (>= 1461501637330902918203684832716283019655932542975 x497) (= x1425 (x1095 x899)) x137 (< 0 x92) (not x926) (= x1340 x1504) (= x885 x497) (= x1425 x319) (= x590 (+ x319 x1000)) (= x341 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1262) (and (> 64 x1262) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1262) true)))) (= 1 x1489) (not (> 649617121 x1298)) (= x1504 68) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x326) (= 2835717307 x1298) (= x326 (x486 x800)) (<= x1425 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x397 x544) (= (x718 (x367 274184521717934524641157099916833587218)) x92) (not x646) (<= 0 x1425) (= x818 (x25 (- x326 x303))) (= (>= (+ x1011 x1425) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x926) (= 32 x687) (= (> x303 x326) x652) (= x1011 x303) (not (= x1298 1889567281))) x1257)))))
(assert (x253 x690))
(assert (= (x335 x1163) (ite (and x1174 x1582 x1045 x310 (not x455) x309) (x1364 x1163) (ite (and x1045 x309 x1582 x310 (not x1174)) (x1487 x1163) (ite (and x1582 x309 (not x1045) x310) (x451 x1163) (ite (and x310 x309 (not x1582)) (x555 x1163) (x1346 x1163)))))))
(assert (x253 x78))
(assert (= (x872 2939843472) (x367 2939843472)))
(assert (= (ite (= x507 x697) x368 (x1350 x507)) (x586 x507)))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x382) (<= 0 x382) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1403) (= x382 (x11 x220)) (= x323 (= 0 x382)) (= x220 (x1392 (x367 x1403) x591 0)) (= x591 (x1392 (x367 x344) (x872 6) 0))) (and (=> x323 x475) (=> (and (= (x1392 (x367 x344) (x872 10) 0) x405) (= (x1392 (x367 x1026) x405 0) x782) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x199) (= (x740 x782) x199) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1026) (not x323) (<= 0 x199) (= x199 x988) (= 0 x261)) x1597))) x796))
(assert (= (x247 (x367 x1439)) x1439))
(assert (= x1188 x98))
(assert (x253 x228))
(assert (=> (> (+ 10000 1) x1271) (= (x872 x1271) (x367 x1271))))
(assert (= (ite (and x970 x1401 (not x1532) (not x797)) (x586 x318) (ite (and (not x797) x970 (not x1401)) (x1350 x318) (ite (and x970 x797) (x1350 x318) (x642 x318)))) (x1150 x318)))
(assert (= 2258409472 (x247 (x872 2258409472))))
(assert (=> (> (+ 10000 1) x1486) (= (x872 x1486) (x367 x1486))))
(assert (x253 x1596))
(assert (x334 x1171))
(assert (x253 x1278))
(assert (=> (< (- x457 1) 10000) (= (x367 x457) (x872 x457))))
(assert (= (ite (= x1535 x1054) x1522 (x555 x1535)) (x451 x1535)))
(assert (x334 x49))
(assert (= (x1150 x204) (ite (and (not x1532) (not x797) x970 x1401) (x586 x204) (ite (and (not x797) x970 (not x1401)) (x1350 x204) (ite (and x797 x970) (x1350 x204) (x642 x204))))))
(assert (x253 x1533))
(assert (x253 x1200))
(assert (x253 x1008))
(assert (x253 x224))
(assert (= (x247 (x367 x634)) x634))
(assert (x253 x1011))
(assert (= (x575 x635) (ite (= x758 x635) x294 (x599 x635))))
(assert (x334 x842))
(assert (x253 x1576))
(assert (x253 x1067))
(assert (x334 x344))
(assert (= (ite (and x611 x970) (x1399 x176) (x60 x176)) (x1213 x176)))
(assert (= x991 (x247 (x367 x991))))
(assert (= x1247 (x247 (x367 x1247))))
(assert (x253 x440))
(assert (x253 x769))
(assert (= (ite (= x248 x1251) x90 (x1254 x1251)) (x1350 x1251)))
(assert (= x272 (and x1378 x1454)))
(assert (= (x367 2743102681) (x872 2743102681)))
(assert (= (x1350 x1432) (ite (= x1432 x248) x90 (x1254 x1432))))
(assert (= (ite (= x697 x635) x368 (x1350 x635)) (x586 x635)))
(assert (= (x247 (x367 x1562)) x1562))
(assert (= (x555 x29) (ite (= x106 x29) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x29))))
(assert (= (ite (and x5 x805) (x1482 x997) (ite (and x805 x1093 (not x5)) (x1482 x997) (x1464 x997))) (x714 x997)))
(assert (= x291 (or (and x752 x425) (and x166 x670))))
(assert (= x443 (x247 (x367 x443))))
(assert (x253 x273))
(assert (x253 x201))
(assert (= (x1487 x1249) (ite (= x376 x1249) x1291 (x451 x1249))))
(assert (= (x227 x1159) (ite (= x1159 x1308) x230 (x1130 x1159))))
(assert (= (x587 x29) (ite (and x1565 x784) (x227 x29) (x116 x29))))
(assert (= (ite (= x248 x1159) x90 (x1254 x1159)) (x1350 x1159)))
(assert (= (ite (= x589 x640) x551 (x290 x640)) (x1312 x640)))
(assert (= (=> (and (<= 0 x82) (= 2743102681 x1324) (< 0 x1393) (= x82 x875) (<= x1576 1461501637330902918203684832716283019655932542975) (= (x1392 (x367 x1576) x1021 0) x1105) (not (= 2690754053 x1324)) (< x1324 2960351575) (= x283 (x1392 (x367 x584) (x872 3) 0)) (= x1021 (x1392 (x367 x339) x283 0)) (<= x339 1461501637330902918203684832716283019655932542975) (= (x1482 x1105) x82) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x82) (not (< x1324 2690754053)) (= (x718 (x367 274184521717934524641157099916833587206)) x1393) (not (< x1324 2293535753))) (=> (and (= x1154 x127) (= x1466 x875) (= x1529 x577) (= (>= x95 x1466) x860)) x869)) x149))
(assert (x253 x1590))
(assert (=> (< (- x1187 1) 10000) (= (x872 x1187) (x367 x1187))))
(assert (x1112 x1129 x435))
(assert (x334 x584))
(assert (x253 x453))
(assert (= x562 (x247 (x367 x562))))
(assert (x253 x288))
(assert (= (x256 x635) (ite (and x310 x309 (not x322)) (x335 x635) (x192 x635))))
(assert (= (x1312 x318) (ite (= x589 x318) x551 (x290 x318))))
(assert (= (ite (= x1289 x1249) x1318 (x161 x1249)) (x290 x1249)))
(assert (x253 x1128))
(assert (x253 x105))
(assert (x334 x1187))
(assert (x253 x261))
(assert (= x1051 (x247 (x367 x1051))))
(assert (= (x247 (x367 x1486)) x1486))
(assert (=> (> (+ 10000 1) x597) (= (x872 x597) (x367 x597))))
(assert (x253 x541))
(assert (x253 x886))
(assert (= (ite (= x434 x1163) x1338 (x1334 x1163)) (x599 x1163)))
(assert (= (x247 (x367 x1479)) x1479))
(assert (x253 x949))
(assert (x253 x1061))
(assert (x334 x624))
(assert (x253 x1520))
(assert (= (ite (= x1289 x1362) x1318 (x161 x1362)) (x290 x1362)))
(assert (x253 x975))
(assert (= (x451 x635) (ite (= x1054 x635) x1522 (x555 x635))))
(assert (x253 x1309))
(assert (= x953 (or (and (not x719) x1233) (and (not x641) x1337))))
(assert (x253 x853))
(assert (x253 x1153))
(assert (x608 x951))
(assert (x334 x1307))
(assert (x253 x729))
(assert (= (ite (and x1401 (not x1532) x970 (not x797)) (x586 x1251) (ite (and x970 (not x797) (not x1401)) (x1350 x1251) (ite (and x797 x970) (x1350 x1251) (x642 x1251)))) (x1150 x1251)))
(assert (= (ite (= x697 x1308) x230 (x1130 x697)) (x227 x697)))
(assert (x253 x1608))
(assert (x253 x26))
(assert (x253 x429))
(assert (x608 x33))
(assert (= (x290 x635) (ite (= x1289 x635) x1318 (x161 x635))))
(assert (= (x555 x1348) (ite (= x1348 x106) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x1348))))
(assert (= (x555 x507) (ite (= x106 x507) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x507))))
(assert (x253 x1099))
(assert (x253 x1348))
(assert (= (x335 x1251) (ite (and x1582 x310 x1174 x309 (not x455) x1045) (x1364 x1251) (ite (and x309 x1045 x1582 x310 (not x1174)) (x1487 x1251) (ite (and x309 x1582 x310 (not x1045)) (x451 x1251) (ite (and (not x1582) x309 x310) (x555 x1251) (x1346 x1251)))))))
(assert (= (x586 x589) (ite (= x697 x589) x368 (x1350 x589))))
(assert (x334 x912))
(assert (x253 x1605))
(assert (x334 x1533))
(assert (x253 x749))
(assert (= (ite (= x1432 x697) x368 (x1350 x1432)) (x586 x1432)))
(assert (x253 x193))
(assert (x253 x71))
(assert (= (x884 x1239) (ite (and x5 x805) (x1207 x1239) (ite (and x1093 (not x5) x805) (x703 x1239) (x524 x1239)))))
(assert (= x934 (=> (and (= x1006 (x185 x91)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1006) (= (x1392 (x367 x380) x600 0) x91) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x380) (= x1530 (= x1006 0)) (= (x1392 (x367 x484) (x872 6) 0) x600) (>= x1006 0)) (and (=> x1530 x871) (=> (and (= x1423 x484) (not x1530)) x1116)))))
(assert (x253 x930))
(assert (x253 x27))
(assert (=> (> (+ 10000 1) x164) (= (x872 x164) (x367 x164))))
(assert (= (=> (and (= (= 0 x558) x1062) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x1217) (= (x913 x789) x1318) (= x1408 (x1392 (x367 x484) (x872 5) 0)) (<= 0 x1316) (= (x1392 (x367 x1217) x864 0) x226) (< x1041 x1453) (= x1323 (x1392 (x367 x484) (x872 3) 0)) (= (x1392 (x367 x769) x1408 0) x1524) (= (x185 x887) x494) (or (and (not x32) (= x761 (x1162 1461501637330902918203684832716283019655932542975 x781))) x32) (= (x1392 (x367 x1396) x1323 0) x864) (= (x662 x1612) x463) (>= x463 0) (= x1396 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x1612 (x1392 (x367 x484) (x872 1) 0)) (<= x494 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x463 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= (> x471 x908) x278) (= (= x494 0) x1397) (or (and (not (< x992 x494)) (= (x25 (- x992 x494)) x1074) (= (ite (< x1074 604800) x1074 604800) x1288) (= x1119 x1288) (not x1397) (= 604800 x1015)) (and (= x1096 x1119) (= x1096 (x25 (- x992 x132))) x1397 (not (< x992 x132)) (= (x290 x1362) x132))) (or (and (= x992 x471) (not x278)) (and x278 (= x142 (x290 x1289)) (= x142 x992))) (= (x290 x1289) x908) x832) (and (not x832) (= x1119 0))) (= x558 (x510 x226)) (= x32 (= x363 0)) (= (x1392 (x367 x484) (x872 6) 0) x1290) (= (x734 x1612 1) x789) (or (and (= x235 (* x1548 x1119)) (<= x27 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1343 (+ x374 x1294)) (= x176 (x1392 (x367 x1309) x2 0)) (<= 0 x27) (= x27 (x1213 x176)) (not x1414) (< (* x1119 x1548) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x552 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x27 x374) (= x235 x1488) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x27 x1488)) (= x328 (x1392 (x367 x484) (x872 6) 0)) (= x1294 x1488) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1309) (= (x1392 (x367 x552) x328 0) x843) (= x2 (x1392 (x367 x484) (x872 5) 0))) (and (= x232 (x1392 (x367 x829) x1344 0)) (= x1344 (x1392 (x367 x484) (x872 6) 0)) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x829) x1414)) (<= 0 x494) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1316) (= x292 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x1495 (x372 (+ 64 x1362))) (= x1316 (x1068 x1524)) (= (> x1128 x494) x832) (<= x558 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1453 (x372 (+ x344 2))) (= (= 0 x1119) x1414) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x484)) (= (x372 (+ x1362 32)) x1289) (<= 0 x558) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x769) (>= x1318 0) (or x1062 (and (< 0 x1316) (= x512 (- (/ x1209 x1316) (uninterp_frac x1209 x1316))) (= x1517 (> x230 0)) (= (ite (> x558 115792089237316195423570985008687907853269984665640564039457) 1 0) x1515) (= 0 x726) (or (and (< 0 x230) (<= x607 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1407) (= x638 (x302 x1079)) (= (x1392 (x367 x1516) x654 0) x1293) (< (+ x857 x801) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1392 (x367 x484) (x872 4) 0) x1430) (> x1437 0) (= x991 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= x1437 (x290 x1308)) (= (x1392 (x367 x828) x1107 0) x1140) (= x589 (x372 (+ 160 x1477))) (= x896 x927) (= x828 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= (x1315 x340) x927) (<= 0 x927) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x900) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x932) (>= 1461501637330902918203684832716283019655932542975 x638) (= x1407 (x918 x1461)) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x1516) (= (x1392 (x367 x903) x592 0) x1461) (= (x1392 (x367 x991) x1140 0) x1593) (> x230 0) (= x275 x801) (> x230 0) x1517 (= (* x1407 x512) x1246) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1407 x512)) (<= 0 x1407) (= (x1392 (x367 x900) x1473 0) x592) (= (x1392 (x367 x607) x1293 0) x1462) (= (x1392 (x367 x783) x1430 0) x654) (>= 1461501637330902918203684832716283019655932542975 x903) (= (x302 x1079) x903) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x783) (= (x1315 x1462) x932) (= x801 (- (/ x1246 1000000000000000000) (uninterp_frac x1246 1000000000000000000))) (= x551 (+ x275 x460)) (= (< 1 x230) x115) (or (and (= x1205 (x967 x361)) (<= x1205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (* x1608 x512) x301) (= (+ x1030 x764) x155) (= x764 x1205) (= (+ x320 x1237) x1192) (= x1266 (x1312 x1308)) (= x984 (x372 (+ 64 x595))) (= (x1392 (x367 x164) x1302 0) x57) (= x1032 (x1392 (x367 x1499) x1232 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x558 x1205)) (= x26 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x320 x1136) (= x558 x1030) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x156) (= x12 (x1312 x605)) (= x1136 (- (/ x301 1000000000000000000) (uninterp_frac x301 1000000000000000000))) (= x12 x1237) (= x156 (x967 x217)) (<= 0 x1608) (<= x203 1461501637330902918203684832716283019655932542975) (<= 0 x156) (<= x321 1461501637330902918203684832716283019655932542975) (= x620 (x1392 (x367 x942) x1567 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1608 x512)) (= (x1392 (x367 x338) x620 0) x674) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x1499) (= (x918 x414) x1608) (> x230 1) (= (x1392 (x367 x566) x674 0) x361) (= x605 (x372 (+ x1477 192))) (= (x1392 (x367 x484) (x872 4) 0) x1567) (<= 0 x1205) x115 (= (x1392 (x367 x484) (x872 11) 0) x1302) (= x164 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x338) (= x414 (x1392 (x367 x321) x57 0)) (= x203 (x302 x984)) (= x321 (x302 x984)) (< 1 x230) (= (< 2 x230) x462) (not x462) (> x230 1) (< 1 x1266) (= x1232 (x1392 (x367 x26) x485 0)) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x942) (= (x1392 (x367 x484) (x872 4) 0) x485) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1136 x12)) (<= x566 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1608) (= (x302 x984) x566) (= x217 (x1392 (x367 x203) x1032 0)) (= x156 0)) (not x115)) (= x816 x1079) (= x460 x857) (= (x1392 (x367 x484) (x872 11) 0) x1473) (<= 0 x932) (<= x927 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1040 (+ x896 x878)) (= (x1392 (x367 x638) x1593 0) x340) (= x558 x878) (= (x302 x1079) x607) (= (x290 x589) x857) (= x932 0) (= x1107 (x1392 (x367 x484) (x872 4) 0)) (< (+ x927 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x1517)) (= x1209 (uninterp_mod (* x558 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x726 (x1162 x1160 x1515)) (not x1062) (= x1160 1))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1318) (= x1495 x70) (= (x1392 (x367 x292) x1290 0) x887) (= (x290 x1289) x1128)) x1398) x627))
(assert (= (=> (and (= x1184 x1127) (= x735 (or (not x178) x1216)) (= (<= x1184 x1284) x861) (= (and x1295 x861) x1216)) (and (=> (and (= x904 x1307) (= x893 x1154) (= x1529 x724) (= x1468 2939843472) (= true x858) (= x429 87118632)) x1470) x735)) x529))
(assert (= (ite (= x29 x697) x368 (x1350 x29)) (x586 x29)))
(assert (= (=> (= x1447 (= x1230 274184521717934524641157099916833587214)) (and (=> (not x1447) x1405) (=> (and (= x1465 (x1392 (x367 274184521717934524641157099916833587206) (x872 1) 0)) (= (x519 x1465) x1214) (not x1014) (= x492 (x25 (- x384 4))) (= x687 32) (= x412 x1255) (not (= 649617121 x352)) x1447 (= x168 (x718 (x367 274184521717934524641157099916833587214))) (not (= 1889567281 x352)) (= (x1392 (x367 x491) (x872 1) 0) x332) (= x1356 x1029) (= x1342 (< x1214 x446)) (= x446 x1113) (not (= x352 826074471)) (= (> x412 x1214) x317) (<= x1214 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x384 x1340) (not x317) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x446 x1029)) (not x972) (<= 0 x1029) (not (> 649617121 x352)) (= x384 68) (>= x1214 0) (not (> 4 x384)) (> x168 0) (= x1014 (>= (+ x446 x1029) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1349 (x1392 (x367 274184521717934524641157099916833587206) (x872 1) 0)) (= (+ x1356 x1113) x759) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x492) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x492) true) (< x492 64))) x972) (not x1342) (not (= 2514000705 x352)) (<= x1029 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x68 274184521717934524641157099916833587206) (= x1489 1) (= x352 2835717307) (= x1573 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x491 x159) (= x658 274184521717934524641157099916833587206) (= x412 x446) (= x491 x622) (= x1029 (x1552 x332)) (<= x491 1461501637330902918203684832716283019655932542975) (= x1215 x1099) (= (x1392 (x367 x491) (x872 1) 0) x505) (= x10 (x25 (- x1214 x412)))) x1257))) x499))
(assert (x253 x454))
(assert (= (x247 (x367 x552)) x552))
(assert (x253 x1297))
(assert (=> (> (+ 10000 1) x1051) (= (x872 x1051) (x367 x1051))))
(assert (= (x587 x1251) (ite (and x1565 x784) (x227 x1251) (x116 x1251))))
(assert (x253 x1595))
(assert (= (x872 2835717307) (x367 2835717307)))
(assert (x253 x95))
(assert (= x666 (or x953 x1151)))
(assert (x253 x163))
(assert (x253 x303))
(assert (x334 274184521717934524641157099916833587218))
(assert (= 2418364589 (x247 (x872 2418364589))))
(assert (x253 x1073))
(assert (x1112 x141 x337))
(assert (= x85 (=> (and (not (= x643 2061678023)) (>= x1231 0) (= x1375 x1231) (not (= 1986467848 x643)) (= x643 2258409472) (not (< x643 1968616202)) (< x643 2293535753) (= x509 (x1392 (x367 x1155) x1506 0)) (= (x718 (x367 274184521717934524641157099916833587206)) x637) (= (x1392 (x367 x1111) (x872 6) 0) x1506) (= x1231 (x11 x509)) (not (< x643 911411945)) (not (= 2211524764 x643)) (not (= 1968616202 x643)) (<= x1155 1461501637330902918203684832716283019655932542975) (> x637 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1231)) (=> (and (= x616 x904) (= x1529 x1278) (= x327 x1154) (= x1052 x1375)) x153))))
(assert (x253 x379))
(assert (x253 x270))
(assert (x253 x716))
(assert (x253 x1382))
(assert (= (x367 649617121) (x872 649617121)))
(assert (=> (< (- x783 1) 10000) (= (x367 x783) (x872 x783))))
(assert (x253 x39))
(assert (x253 x966))
(assert (= (x247 (x367 x1286)) x1286))
(assert (x253 x708))
(assert (x334 x897))
(assert (= (x247 (x367 x1396)) x1396))
(assert (=> (< (- x288 1) 10000) (= (x872 x288) (x367 x288))))
(assert (= (and x547 x1358) x1337))
(assert (x253 x1380))
(assert (=> (> (+ 10000 1) x1434) (= (x872 x1434) (x367 x1434))))
(assert (x253 x1146))
(assert (x608 x594))
(assert (x253 x1373))
(assert (= x78 (x247 (x367 x78))))
(assert (x334 x1479))
(assert (x253 x431))
(assert (=> (< (- x49 1) 10000) (= (x367 x49) (x872 x49))))
(assert (= (ite (= x1054 x204) x1522 (x555 x204)) (x451 x204)))
(assert (= (ite (= x640 x697) x368 (x1350 x640)) (x586 x640)))
(assert (=> (< (- x1576 1) 10000) (= (x872 x1576) (x367 x1576))))
(assert (x334 x623))
(assert (= x883 (x247 (x367 x883))))
(assert (x253 x1460))
(assert (x253 x1546))
(assert (=> (< (- x769 1) 10000) (= (x872 x769) (x367 x769))))
(assert (x253 x183))
(assert (= (x872 2061678023) (x367 2061678023)))
(assert (x253 x497))
(assert (= (=> (and (not (= x1183 2690754053)) (= x1259 x678) (>= x1259 0) (not (> 2690754053 x1183)) (not (= x1183 2743102681)) (< x1183 2960351575) (= 2798343961 x1183) (not (= 2764855426 x1183)) (= x1069 (x1392 (x367 x78) (x872 5) 0)) (= (x1392 (x367 x1089) x1069 0) x936) (not (< x1183 2293535753)) (= (x1399 x936) x1259) (> x431 0) (= (x718 (x367 274184521717934524641157099916833587206)) x431) (<= x1089 1461501637330902918203684832716283019655932542975) (<= x1259 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x1595 x1154) (= x1529 x457) (= x678 x99) (= x1198 x1354) (= x945 x904)) x1050)) x539))
(assert (= (ite (= x389 x376) x1291 (x451 x389)) (x1487 x389)))
(assert (= (x872 2868243304) (x367 2868243304)))
(assert (= x80 (=> (and (= x63 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= (x1392 (x367 x89) x1195 0) x1270) (= x1195 (x1392 (x367 x63) x947 0)) (= x89 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= (= 0 x39) x1018) (= x947 (x1392 (x367 x1382) (x872 7) 0)) (<= x39 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x884 x1270) x39) (<= 0 x39)) (and (=> (and (= x1546 x1382) (not x1018)) x222) (=> (and (= x1236 (x25 (- x1382 1))) x1018 (= (< 0 x1236) x427) (not x427)) x170)))))
(assert (=> (> (+ 10000 1) x113) (= (x872 x113) (x367 x113))))
(assert (x334 x1560))
(assert (x253 x1230))
(assert (= x181 (x247 (x367 x181))))
(assert (x253 x265))
(assert (= (x1350 x1348) (ite (= x248 x1348) x90 (x1254 x1348))))
(assert (=> (> (+ 10000 1) x829) (= (x872 x829) (x367 x829))))
(assert (= (x227 x29) (ite (= x29 x1308) x230 (x1130 x29))))
(assert (x334 x1248))
(assert (= (ite (= x29 x1289) x1318 (x161 x29)) (x290 x29)))
(assert (= 604800 (x247 (x872 604800))))
(assert (x334 x1610))
(assert (= (ite (= x248 x635) x90 (x1254 x635)) (x1350 x635)))
(assert (x253 x1235))
(assert (x608 x1129))
(assert (= true x1034))
(assert (x253 x623))
(assert (x253 x1209))
(assert (x334 x26))
(assert (x253 x816))
(assert (= (ite (and x611 x970) (x1501 x50) (x788 x50)) (x185 x50)))
(assert (x253 x1366))
(assert (x253 x818))
(assert (x253 x1333))
(assert (= (x247 (x872 69947311)) 69947311))
(assert (= x901 x84))
(assert (= (x686 x605) 0))
(assert (x253 x70))
(assert (= (ite (= x856 x635) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x242 x635)) (x1225 x635)))
(assert (x253 x1136))
(assert (= (x628 x1163) (ite (and x946 x347 (not x162)) (x705 x1163) (x1554 x1163))))
(assert (=> (> (+ 10000 1) x1283) (= (x367 x1283) (x872 x1283))))
(assert (x253 x168))
(assert (= (x967 x1413) (ite (= x340 x1413) x1040 (x1315 x1413))))
(assert (= (x247 (x367 x1403)) x1403))
(assert (=> (> (+ 10000 1) x1403) (= (x367 x1403) (x872 x1403))))
(assert (x253 x1560))
(assert (=> (> (+ 10000 1) x403) (= (x872 x403) (x367 x403))))
(assert (x253 x1147))
(assert (x253 x1549))
(assert (= x1584 (x247 (x367 x1584))))
(assert (= (ite (= x1308 x1289) x1318 (x161 x1308)) (x290 x1308)))
(assert (= (x247 (x367 x89)) x89))
(assert (=> (< (- x1545 1) 10000) (= (x367 x1545) (x872 x1545))))
(assert (= x1181 (=> (and (= (x1162 1461501637330902918203684832716283019655932542975 x781) x118) (= (x1392 (x367 x118) x723 0) x477) (= x1276 (= x749 0)) (= x723 (x1392 (x367 x484) (x872 6) 0)) (>= x749 0) (<= x749 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x749 (x185 x477))) (and (=> x1276 x114) (=> (and (= 0 x363) (<= x704 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x46) (not x1276) (= (x1392 (x367 x484) (x872 10) 0) x1117) (= (x1392 (x367 x46) x1117 0) x852) (= x704 (x190 x852)) (= x1548 x704) (<= 0 x704)) x627)))))
(assert (= (and x272 x1530) x1594))
(assert (= x1405 true))
(assert (=> (> (+ 10000 1) x991) (= (x872 x991) (x367 x991))))
(assert (= (ite (= x318 x248) x90 (x1254 x318)) (x1350 x318)))
(assert (=> (< (- x756 1) 10000) (= (x367 x756) (x872 x756))))
(assert (= (x247 (x872 649617121)) 649617121))
(assert (= (and x274 x1276) x1378))
(assert (= (ite (= x248 x131) x90 (x1254 x131)) (x1350 x131)))
(assert (=> (< (- x1217 1) 10000) (= (x872 x1217) (x367 x1217))))
(assert (x253 x1119))
(assert (= (x884 x725) (ite (and x5 x805) (x1207 x725) (ite (and (not x5) x805 x1093) (x703 x725) (x524 x725)))))
(assert (x253 x548))
(assert (x253 x489))
(assert (x253 x1024))
(assert (x253 x140))
(assert (= (ite (= x614 x894) x436 (x1487 x894)) (x1364 x894)))
(assert (x253 x89))
(assert (= (ite (= x1289 x1535) x1318 (x161 x1535)) (x290 x1535)))
(assert (=> (< (- x213 1) 10000) (= (x367 x213) (x872 x213))))
(assert (x253 x1513))
(assert (= x1055 (or x615 x786)))
(assert (x253 x152))
(assert (x253 x1525))
(assert (x253 x590))
(assert (= (x247 (x367 x497)) x497))
(assert (x253 x657))
(assert (x253 x892))
(assert (x253 x203))
(assert (= (ite (and x1045 x309 x1174 x1582 (not x455) x310) (x1364 x894) (ite (and x1582 x309 (not x1174) x1045 x310) (x1487 x894) (ite (and x1582 x310 (not x1045) x309) (x451 x894) (ite (and (not x1582) x310 x309) (x555 x894) (x1346 x894))))) (x335 x894)))
(assert (x253 x989))
(assert (= (x555 x894) (ite (= x106 x894) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x894))))
(assert (x253 x1434))
(assert (=> (> (+ 10000 1) x497) (= (x367 x497) (x872 x497))))
(assert (x253 x1316))
(assert (x334 x1309))
(assert (= (=> (and (= (x1392 (x367 x604) (x872 6) 0) x250) (= x1566 (x11 x806)) (= x806 (x1392 (x367 x1439) x250 0)) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1439) (= (= x1566 0) x728) (<= x1566 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1566 0)) (and (=> (and (not x728) (= x604 x1331)) x16) (=> (and (= x1415 (< 0 x963)) (= x963 (x25 (- x604 1))) x728 (not x1415)) x940))) x1196))
(assert (x253 x182))
(assert (= (ite (= x318 x1054) x1522 (x555 x318)) (x451 x318)))
(assert (x253 x1338))
(assert (x334 x78))
(assert (x334 x1382))
(assert (x253 x1535))
(assert (x253 x593))
(assert (= x1268 (=> (and (not (= x694 2211524764)) (not (< x694 911411945)) (not (< x694 1968616202)) (not (= x694 2061678023)) (not (= 1968616202 x694)) (< 0 x1459) (= (x11 x1467) x565) (= (x718 (x367 274184521717934524641157099916833587206)) x1459) (= (x1392 (x367 x120) x74 0) x1467) (< x694 2293535753) (not (= 1986467848 x694)) (<= 0 x565) (= x565 x1509) (= x694 2258409472) (>= 1461501637330902918203684832716283019655932542975 x120) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x565) (= (x1392 (x367 x1428) (x872 6) 0) x74)) (=> (and (= x1529 x597) x563 (= x1509 x465) (= x563 (not (= x465 0))) (= 0 x351) (= x1154 x632)) x306))))
(assert (x253 x530))
(assert (x253 x1255))
(assert (x253 x204))
(assert (= (ite (and x1565 x784) (x227 x589) (x116 x589)) (x587 x589)))
(assert (= (ite (= x697 x894) x368 (x1350 x894)) (x586 x894)))
(assert (x334 x944))
(assert (x253 x376))
(assert (=> (> (+ 10000 1) x234) (= (x872 x234) (x367 x234))))
(assert (x253 x1586))
(assert (= (ite (= x589 x1251) x551 (x290 x1251)) (x1312 x1251)))
(assert (= (=> (and (not (> 468353030 x401)) (= x401 759532456) (<= 0 x375) (= (x1392 (x367 x865) (x872 7) 0) x1583) (= x375 (x501 x725)) (> x41 0) (= x41 (x718 (x367 274184521717934524641157099916833587206))) (<= x375 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x725 (x1392 (x367 x94) x1448 0)) (> 2293535753 x401) (< x401 911411945) (= x375 x528) (not (= x401 468353030)) (>= 1461501637330902918203684832716283019655932542975 x94) (<= x1574 1461501637330902918203684832716283019655932542975) (not (= 635128645 x401)) (= (x1392 (x367 x1574) x1583 0) x1448)) (=> (and (= (>= x36 x975) x178) (= x975 x528) (= x1529 x1435) (= x1434 x1154)) x267)) x574))
(assert (x334 x193))
(assert (= x983 (=> (and (= x1591 (>= x281 x1460)) (= x1460 x1570) (= x1591 x119)) x119)))
(assert (x253 x398))
(assert (x253 x245))
(assert (= 2514000705 (x247 (x872 2514000705))))
(assert (x253 x79))
(assert (= (ite (and x1401 (not x1532) (not x797) x970) (x586 x640) (ite (and (not x797) (not x1401) x970) (x1350 x640) (ite (and x797 x970) (x1350 x640) (x642 x640)))) (x1150 x640)))
(assert (x334 x729))
(assert (= (ite (= x589 x1249) x551 (x290 x1249)) (x1312 x1249)))
(assert (= (ite (= x1308 x389) x230 (x1130 x389)) (x227 x389)))
(assert (x334 x295))
(assert (x334 x911))
(assert (= (=> (= x1423 x403) x413) x1116))
(assert (x253 x1573))
(assert (= (x872 826074471) (x367 826074471)))
(assert (= (x586 x1535) (ite (= x1535 x697) x368 (x1350 x1535))))
(assert (x253 x921))
(assert (x253 x526))
(assert (x253 x1245))
(assert (x253 x448))
(assert (x253 x1006))
(assert (= x805 (or (and x421 x284) x666)))
(assert (= (x247 (x367 x1371)) x1371))
(assert (x253 x461))
(assert (=> (> (+ 10000 1) x715) (= (x367 x715) (x872 x715))))
(assert (= (x290 x894) (ite (= x1289 x894) x1318 (x161 x894))))
(assert (x334 274184521717934524641157099916833587206))
(assert (= x1451 (x247 (x367 x1451))))
(assert (= (x247 (x872 87118632)) 87118632))
(assert (= x402 (=> (= x968 x73) x648)))
(assert (x253 x697))
(assert (x253 x292))
(assert (x334 x829))
(assert (x253 x1051))
(assert (= x1516 (x247 (x367 x1516))))
(assert (x253 x1052))
(assert (x253 x1311))
(assert (x253 x1503))
(assert (= (x367 18446744073709551615) (x872 18446744073709551615)))
(assert (= (x247 (x367 x729)) x729))
(assert (x253 x1180))
(assert (=> (> (+ 10000 1) x883) (= (x367 x883) (x872 x883))))
(assert (x253 x1066))
(assert (=> (> (+ 10000 1) x174) (= (x872 x174) (x367 x174))))
(assert (x253 x113))
(assert (= (x367 26959946667150639794667015087019630673637144422540572481103610249215) (x872 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (x1150 x803) (ite (and x1401 x970 (not x1532) (not x797)) (x586 x803) (ite (and x970 (not x797) (not x1401)) (x1350 x803) (ite (and x797 x970) (x1350 x803) (x642 x803))))))
(assert (x253 x1036))
(assert (x253 x781))
(assert (x334 x339))
(assert (x253 x143))
(assert (x253 x93))
(assert (= (ite (and x1565 x784) (x227 x1348) (x116 x1348)) (x587 x1348)))
(assert (= (x1350 x1308) (ite (= x248 x1308) x90 (x1254 x1308))))
(assert (= (x290 x640) (ite (= x640 x1289) x1318 (x161 x640))))
(assert (= 0 (x686 x640)))
(assert (= (ite (= x1163 x614) x436 (x1487 x1163)) (x1364 x1163)))
(assert (= (=> (and (>= x1081 0) (= x1081 x1104) (> 468353030 x980) (> 2293535753 x980) (= 142201243 x980) (= (x1392 (x367 x715) x1261 0) x602) (>= 1461501637330902918203684832716283019655932542975 x1538) (not (= x980 69947311)) (= (x1392 (x367 x1564) (x872 9) 0) x1263) (= x1261 (x1392 (x367 x1538) x1263 0)) (> 911411945 x980) (> x1049 0) (= x1081 (x1424 x602)) (<= x715 1461501637330902918203684832716283019655932542975) (not (= x980 87118632)) (<= x1081 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1049 (x718 (x367 274184521717934524641157099916833587206)))) (=> (and (= x588 (> x1137 0)) (= x316 0) (= (and x840 x588) x971) (= x1089 x1529) (= x1137 x1104) (= x78 x1154)) x539)) x1091))
(assert (x253 x386))
(assert (= (x247 (x367 x1072)) x1072))
(assert (x334 x741))
(assert (= 274184521717934524641157099916833587214 (x247 (x872 274184521717934524641157099916833587214))))
(assert (x253 x481))
(assert (x253 x706))
(assert (x253 x1547))
(assert (= (x247 (x367 x366)) x366))
(assert (x253 x640))
(assert (x253 x312))
(assert (x253 x791))
(assert (x253 x687))
(assert (= (ite (= x248 x29) x90 (x1254 x29)) (x1350 x29)))
(assert (= (ite (= x697 x1249) x368 (x1350 x1249)) (x586 x1249)))
(assert (x253 x1284))
(assert (= (x1312 x1535) (ite (= x589 x1535) x551 (x290 x1535))))
(assert (=> (< (- x1562 1) 10000) (= (x872 x1562) (x367 x1562))))
(assert (= (x1350 x589) (ite (= x589 x248) x90 (x1254 x589))))
(assert (x253 x1104))
(assert (= (x686 x1163) 0))
(assert (x253 x249))
(assert (x253 x1089))
(assert (x334 x566))
(assert (x253 x606))
(assert (x253 x1610))
(assert (= (x367 2690754053) (x872 2690754053)))
(assert (= (ite (= x697 x131) x368 (x1350 x131)) (x586 x131)))
(assert (= (x247 (x367 x1016)) x1016))
(assert (=> (> (+ 10000 1) x1307) (= (x872 x1307) (x367 x1307))))
(assert (x253 x1015))
(assert (x253 x142))
(assert (x253 x518))
(assert (= x724 (x247 (x367 x724))))
(assert (x253 x558))
(assert (=> (> (+ 10000 1) x327) (= (x872 x327) (x367 x327))))
(assert (=> (< (- x1360 1) 10000) (= (x872 x1360) (x367 x1360))))
(assert (= 0 (x686 x1159)))
(assert (x253 x9))
(assert (= x174 (x247 (x367 x174))))
(assert (= x1450 (and x23 (not x1275))))
(assert (x334 x1562))
(assert (= (=> (and (< x287 2690754053) (not (= 2418364589 x287)) (>= 1461501637330902918203684832716283019655932542975 x945) (not (= 2512682246 x287)) (not (= 2293535753 x287)) (= x487 (x1392 (x367 x457) x1458 0)) (= x1380 x473) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x473) (>= 1461501637330902918203684832716283019655932542975 x1198) (> x138 0) (= (x1392 (x367 x1198) x799 0) x53) (<= x457 1461501637330902918203684832716283019655932542975) (> 2960351575 x287) (= (x1392 (x367 x1595) (x872 4) 0) x1458) (= x287 2532887486) (not (< x287 2293535753)) (= (x849 x53) x473) (>= x473 0) (= (x718 (x367 274184521717934524641157099916833587206)) x138) (= (x1392 (x367 x945) x487 0) x799)) (=> (and (= x911 x1154) (= (>= x99 x739) x1556) (= x1485 (and x971 x1556)) (= x1545 x1529) (= x1380 x739) (= x904 x214)) x771)) x1050))
(assert (= (ite (and x309 x1045 x1582 x1174 x310 (not x455)) (x1364 x1249) (ite (and x310 x1582 x1045 x309 (not x1174)) (x1487 x1249) (ite (and (not x1045) x310 x309 x1582) (x451 x1249) (ite (and (not x1582) x310 x309) (x555 x1249) (x1346 x1249))))) (x335 x1249)))
(assert (not x1243))
(assert (= (x367 468353030) (x872 468353030)))
(assert (= (x247 (x367 x1574)) x1574))
(assert (x253 x839))
(assert (x334 x597))
(assert (x253 x964))
(assert (= x1073 (x247 (x367 x1073))))
(assert (= (x247 (x367 x1538)) x1538))
(assert (x334 x1379))
(assert (= (x256 x1251) (ite (and x309 x310 (not x322)) (x335 x1251) (x192 x1251))))
(assert (x253 x375))
(assert (x253 x1331))
(assert (x253 x779))
(assert (x253 x63))
(assert (= (x247 (x872 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x253 x632))
(assert (x253 x1394))
(assert (x253 x908))
(assert (x334 x1051))
(assert (x253 x1031))
(assert (=> (< (- x828 1) 10000) (= (x872 x828) (x367 x828))))
(assert (= (x451 x389) (ite (= x389 x1054) x1522 (x555 x389))))
(assert (= (x256 x1249) (ite (and (not x322) x309 x310) (x335 x1249) (x192 x1249))))
(assert (= (x555 x1308) (ite (= x106 x1308) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x1308))))
(assert (x253 x1502))
(assert (x253 x927))
(assert (= (x227 x635) (ite (= x635 x1308) x230 (x1130 x635))))
(assert (= (or x345 x660) x19))
(assert (x334 x213))
(assert (= (ite (= x697 x803) x368 (x1350 x803)) (x586 x803)))
(assert (x253 x933))
(assert (x253 x1074))
(assert (x253 x1221))
(assert (x253 x103))
(assert (x253 x1469))
(assert (= (x247 (x367 x73)) x73))
(assert (= x710 (and x167 x730)))
(assert (x253 x446))
(assert (= x1333 (x247 (x367 x1333))))
(assert (x334 x457))
(assert (= x1233 (and x747 x1141)))
(assert (x253 x171))
(assert (x334 x1009))
(assert (= (x247 (x367 x1499)) x1499))
(assert (= (ite (and x1565 x784) (x227 x204) (x116 x204)) (x587 x204)))
(assert (x253 x890))
(assert (x253 x1100))
(assert (= (ite (= x589 x389) x551 (x290 x389)) (x1312 x389)))
(assert (= (x335 x204) (ite (and x310 x1582 x309 x1174 (not x455) x1045) (x1364 x204) (ite (and (not x1174) x310 x1582 x309 x1045) (x1487 x204) (ite (and x309 (not x1045) x1582 x310) (x451 x204) (ite (and (not x1582) x309 x310) (x555 x204) (x1346 x204)))))))
(assert (x253 x1393))
(assert (= (x872 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x367 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x334 x1016))
(assert (x253 x1588))
(assert (=> (< (- x454 1) 10000) (= (x367 x454) (x872 x454))))
(assert (x253 x1318))
(assert (x253 x828))
(assert (= (ite (and (not x1532) (not x797) x1401 x970) (x586 x1348) (ite (and x970 (not x1401) (not x797)) (x1350 x1348) (ite (and x970 x797) (x1350 x1348) (x642 x1348)))) (x1150 x1348)))
(assert (x253 x1390))
(assert (x253 x1427))
(assert (x253 x174))
(assert (x253 x1163))
(assert (=> (< (- x634 1) 10000) (= (x872 x634) (x367 x634))))
(assert (x253 x132))
(assert (x253 x214))
(assert (= x828 (x247 (x367 x828))))
(assert (x253 x1613))
(assert (x253 x1248))
(assert (= (x367 2211524764) (x872 2211524764)))
(assert (x334 x1272))
(assert (= x1457 (=> (and (= x557 (= x912 0)) (or (and x557 (= 0 x988) (= 0 x261)) (and (= (= x202 0) x994) (= (x1392 (x367 x912) (x872 10) 0) x110) (not x557) (= x336 (x1392 (x367 x213) x110 0)) (= (x740 x336) x202) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x213) (<= 0 x202) (or (and x994 (= 0 x988) (= x261 0)) (and (= x988 x202) (not x994) (= x261 1))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x202)))) x1597)))
(assert (x253 x998))
(assert (=> (< (- x73 1) 10000) (= (x367 x73) (x872 x73))))
(assert (= (=> (and (= x1275 (> x484 x1106)) (= (x372 (+ 1 x344)) x484) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1536))) (and (=> (and x1275 (= x70 x1416)) x1398) (=> (not x1275) x536))) x1234))
(assert (=> (< (- x1272 1) 10000) (= (x872 x1272) (x367 x1272))))
(assert (x253 x1041))
(assert (= (x227 x1249) (ite (= x1308 x1249) x230 (x1130 x1249))))
(assert (=> (< (- x736 1) 10000) (= (x872 x736) (x367 x736))))
(assert (x253 x879))
(assert (= (x247 (x367 x865)) x865))
(assert (x334 x1538))
(assert (x253 x1155))
(assert (x334 x491))
(assert (x253 x260))
(assert (=> (> (+ 10000 1) x1382) (= (x872 x1382) (x367 x1382))))
(assert (=> (< (- x386 1) 10000) (= (x872 x386) (x367 x386))))
(assert (x334 x715))
(assert (x334 x1564))
(assert (= (=> (and (= (= 0 x773) x641) (= x773 (x1463 x66)) (>= x773 0) (= x172 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= (x1392 (x367 x949) x1475 0) x66) (= (x1392 (x367 x172) x356 0) x1475) (<= x773 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1392 (x367 x344) (x872 7) 0) x356) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x949)) (and (=> x641 x693) (=> (and (not x641) (= x968 x344)) x402))) x390))
(assert (=> (< (- x1333 1) 10000) (= (x872 x1333) (x367 x1333))))
(assert (x253 x1214))
(assert (x253 x712))
(assert (=> (< (- x1479 1) 10000) (= (x367 x1479) (x872 x1479))))
(assert (= (ite (= x589 x131) x551 (x290 x131)) (x1312 x131)))
(assert (x253 x1355))
(assert (x253 x269))
(assert (x253 x436))
(assert (x253 x1396))
(assert (=> (> (+ 10000 1) x344) (= (x367 x344) (x872 x344))))
(assert (x253 x996))
(assert (x334 x1451))
(assert (x253 x1507))
(assert (x253 x696))
(assert (x253 x465))
(assert (=> (< (- x163 1) 10000) (= (x367 x163) (x872 x163))))
(assert (= (x555 x635) (ite (= x106 x635) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x635))))
(assert (x253 x287))
(assert (x253 x452))
(assert (x253 x1488))
(assert (= x970 x23))
(assert (= (x872 69947311) (x367 69947311)))
(assert (x253 x520))
(assert (x253 x1049))
(assert (= x1379 (x247 (x367 x1379))))
(assert (= (or (and x23 x1275) x14 (and x835 x919)) x309))
(assert (x253 x1411))
(assert (x334 x157))
(assert (x334 x386))
(assert (=> (< (- x120 1) 10000) (= (x367 x120) (x872 x120))))
(assert (x253 x987))
(assert (= (ite (= x1308 x614) x436 (x1487 x1308)) (x1364 x1308)))
(assert (= x1578 x668))
(assert (x253 x746))
(assert (x1426 x594 x86))
(assert (= x1553 x1578))
(assert (= (x247 (x367 x1533)) x1533))
(assert (x253 x492))
(assert (= x236 (or x922 x459)))
(assert (=> (> (+ 10000 1) x1026) (= (x367 x1026) (x872 x1026))))
(assert (x334 x873))
(assert (=> (< (- x1248 1) 10000) (= (x872 x1248) (x367 x1248))))
(assert (= 0 (x686 x389)))
(assert (x253 x1435))
(assert (= (x1487 x1535) (ite (= x1535 x376) x1291 (x451 x1535))))
(assert (x334 x118))
(assert (= (x247 (x367 x518)) x518))
(assert (=> (< (- x1043 1) 10000) (= (x367 x1043) (x872 x1043))))
(assert (x253 x1439))
(assert (x253 x1606))
(assert (= (x247 (x367 x379)) x379))
(assert (x253 x951))
(assert (= (ite (= x29 x589) x551 (x290 x29)) (x1312 x29)))
(assert (x334 x664))
(assert (x253 x621))
(assert (x253 x1484))
(assert (x253 x783))
(assert (x334 x1576))
(assert (x253 x928))
(assert (= (ite (and x309 x310 (not x322)) (x335 x507) (x192 x507)) (x256 x507)))
(assert (= (x686 x204) 0))
(assert (x253 x1307))
(assert (= x970 (or (and x1277 (not x323)) x19)))
(assert (= (x247 (x367 x130)) x130))
(assert (= (x247 (x734 x1612 1)) (+ (x247 x1612) 1)))
(assert (x334 x379))
(assert (= (x555 x1251) (ite (= x106 x1251) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x672 x1251))))
(assert (x253 x1451))
(assert (x253 x527))
(assert (x253 x471))
(assert (=> (> (+ 10000 1) x577) (= (x367 x577) (x872 x577))))
(assert (x334 x769))
(assert (x253 x694))
(assert (= 2532887486 (x247 (x872 2532887486))))
(assert (= (x872 2532887486) (x367 2532887486)))
(assert (x253 x584))
(assert (x253 x1306))
(assert (x253 x316))
(assert (x253 x1516))
(assert (x253 x1160))
(assert (=> (< (- x1247 1) 10000) (= (x367 x1247) (x872 x1247))))
(assert (= x1600 (x247 (x367 x1600))))
(assert (x253 x437))
(assert (x253 x442))
(assert (x334 x163))
(assert (x253 x664))
(assert (= x1564 (x247 (x367 x1564))))
(assert (x334 x716))
(assert (= (and (not x421) x284) x1358))
(assert (x253 x758))
(assert (x334 x989))
(assert (= (ite (= x248 x1163) x90 (x1254 x1163)) (x1350 x1163)))
(assert (x253 x159))
(assert (= (x227 x1348) (ite (= x1348 x1308) x230 (x1130 x1348))))
(assert (= (x247 (x367 x1089)) x1089))
(assert (= (ite (= x507 x1308) x230 (x1130 x507)) (x227 x507)))
(assert (x334 x724))
(assert (= (=> (and (= (= x645 0) x601) (or (and (= (x1392 (x367 x1058) x774 0) x665) (= (x1392 (x367 x344) (x872 9) 0) x774) (= x1175 (x1392 (x367 x691) x665 0)) (not x601) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1058) (= x691 (x1162 1461501637330902918203684832716283019655932542975 x951))) x601) (= (= x1311 0) x5) (or (and (= x30 x1558) x5 (= x107 (x1392 (x367 x1431) x1483 0)) (= x744 (x1162 1461501637330902918203684832716283019655932542975 x951)) (= x1431 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x1483 (x1392 (x367 x344) (x872 7) 0)) (= (x1392 (x367 x744) x107 0) x1220)) (and (>= x621 0) (= (x1392 (x367 x295) x1531 0) x502) (= (x889 x685) x1394) (= x1093 (= 0 x1549)) (>= x440 0) (or (and x777 (= (> x471 x1146) x1395) (= (= x404 0) x931) (= (x889 x685) x1146) (or (and (not (< x1227 x1363)) (= x1363 (x889 x1558)) x931 (= x1359 x1549) (= (x25 (- x1227 x1363)) x1359)) (and (not (> x404 x1227)) (= x1549 x826) (= x489 604800) (= (ite (> 604800 x996) x996 604800) x826) (= x996 (x25 (- x1227 x404))) (not x931))) (or (and x1395 (= x1227 x527) (= (x889 x685) x527)) (and (= x471 x1227) (not x1395)))) (and (not x777) (= x1549 0))) (= x195 (x734 x3 1)) (<= x404 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x295 (x1162 1461501637330902918203684832716283019655932542975 x781)) (not x5) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x621) (= x621 (x913 x195)) (or (and (= (x1162 1461501637330902918203684832716283019655932542975 x951) x716) (= (* x1549 x1311) x456) (= x916 (x1392 (x367 x344) (x872 7) 0)) (= (+ x1505 x568) x373) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x135 x1267)) (= x850 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x1505 x135) (= x1511 (x1162 1461501637330902918203684832716283019655932542975 x951)) (<= 0 x1267) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1311 x1549)) (<= x1267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x30 x504) (= (x1482 x129) x1267) (= x1333 (x1162 1461501637330902918203684832716283019655932542975 x781)) (= x129 (x1392 (x367 x1511) x1118 0)) (= (x1392 (x367 x716) x1322 0) x1519) (= x1267 x568) (= (x1392 (x367 x1333) x916 0) x1322) (= x135 x456) (= (x1392 (x367 x344) (x872 3) 0) x698) (not x1093) (= (x1392 (x367 x850) x698 0) x1118)) (and x1093 (= x504 x30) (= x1017 (x1392 (x367 x344) (x872 7) 0)) (= x293 (x1392 (x367 x1584) x1500 0)) (= (x1162 1461501637330902918203684832716283019655932542975 x781) x1009) (= x1500 (x1392 (x367 x1009) x1017 0)) (= (x1162 1461501637330902918203684832716283019655932542975 x951) x1584))) (= x483 (x1392 (x367 x1) x502 0)) (= (x1392 (x367 x344) (x872 7) 0) x1531) (= x777 (> x1394 x404)) (= (x1392 (x367 x344) (x872 1) 0) x3) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x440) (= x685 (x372 (+ 32 x1558))) (= x1 (x1162 1461501637330902918203684832716283019655932542975 x951)) (<= 0 x404) (= (x662 x3) x440) (= (x1463 x483) x404) (= x504 (x372 (+ x1558 64)))))) x796) x1097))
(assert (= (or x291 (and (not x946) x347) (and x309 (not x310))) x478))
(assert (x608 x1515))
(assert (x253 x1042))
(assert (x608 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (< (- x1155 1) 10000) (= (x367 x1155) (x872 x1155))))
(assert (x253 x963))
(assert (x253 x45))
(assert (x253 x412))
(assert (x253 x577))
(assert (= (x367 115792089237316195423570985008687907853269984665640564039457) (x872 115792089237316195423570985008687907853269984665640564039457)))
(assert (=> (> (+ 10000 1) x1499) (= (x367 x1499) (x872 x1499))))
(assert (= x1155 (x247 (x367 x1155))))
(assert (x253 x616))
(assert (x334 x1283))
(assert (x253 x281))
(assert (= (ite (= x894 x856) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x242 x894)) (x1225 x894)))
(assert (x253 x72))
(assert (=> (< (- x1278 1) 10000) (= (x872 x1278) (x367 x1278))))
(assert (x253 x1047))
(assert (=> (> (+ 10000 1) x1309) (= (x367 x1309) (x872 x1309))))
(assert (= (ite (= x376 x1348) x1291 (x451 x1348)) (x1487 x1348)))
(assert (x253 x472))
(assert (x334 x1574))
(assert (x253 x426))
(assert (x334 x577))
(assert (x334 x900))
(assert (= (and x919 (not x835)) x284))
(assert (= (ite (and x137 x231) (x1028 x1308) (x808 x1308)) (x1053 x1308)))
(assert (x253 x549))
(assert (= (=> (= x912 0) x1457) x940))
(assert (= (ite (= x204 x589) x551 (x290 x204)) (x1312 x204)))
(assert (= x771 (=> (and (<= 0 x273) (= x37 2743102681) (= x273 (x1482 x18)) (= (x1392 (x367 x214) x1274 0) x18) (= (x1392 (x367 x1545) x644 0) x1274) (not (= 2690754053 x37)) (>= 1461501637330902918203684832716283019655932542975 x1545) (> x907 0) (not (< x37 2293535753)) (not (> 2690754053 x37)) (= x746 x273) (= x644 (x1392 (x367 x911) (x872 3) 0)) (= x907 (x718 (x367 274184521717934524641157099916833587206))) (> 2960351575 x37) (<= x214 1461501637330902918203684832716283019655932542975) (<= x273 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x1024 x1529) (= x1354 x193) (= x1154 x1533) (= x649 x904) (= x746 x1200)) x713))))
(assert (x253 x83))
(assert (= (x247 (x872 2061678023)) 2061678023))
(assert (x253 x553))
(assert (= x1046 (x247 (x367 x1046))))
(assert (= x94 (x247 (x367 x94))))
(assert (x253 x1184))
(assert (= (x290 x1289) x1318))
(check-sat)
