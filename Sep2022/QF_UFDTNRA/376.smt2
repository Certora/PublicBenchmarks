(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x30 0)) (((x734 (x141 Real)) (x453 (x460 x30) (x616 x30) (x179 Real)) (x46 (x224 x30) (x8 Real)))))
(declare-fun x706 () Bool)
(declare-fun x924 () Real)
(declare-fun x71 (Real) Real)
(declare-fun x618 () Real)
(declare-fun x261 () Real)
(declare-fun x698 () Real)
(declare-fun x244 () Bool)
(declare-fun x937 () Real)
(declare-fun x317 () Real)
(declare-fun x372 () Real)
(declare-fun x786 () Real)
(declare-fun x221 () Real)
(declare-fun x384 () Bool)
(declare-fun x936 () Real)
(declare-fun x78 () Real)
(declare-fun x574 () Bool)
(declare-fun x446 () Real)
(declare-fun x736 () Real)
(declare-fun x634 () Bool)
(declare-fun x448 () Bool)
(declare-fun x14 () Real)
(declare-fun x833 () Bool)
(declare-fun x450 () Bool)
(declare-fun x624 () Real)
(declare-fun x955 () Real)
(declare-fun x355 () Real)
(declare-fun x679 () Bool)
(declare-fun x331 () Bool)
(declare-fun x541 () Real)
(declare-fun x633 () Real)
(declare-fun x822 () Real)
(declare-fun x837 () Real)
(declare-fun x876 () Real)
(declare-fun x529 () Real)
(declare-fun x566 () Real)
(declare-fun x483 () Real)
(declare-fun x130 () Bool)
(declare-fun x192 () Real)
(declare-fun x473 () Real)
(declare-fun x443 () Bool)
(declare-fun x120 () Real)
(declare-fun x229 (Real) Real)
(declare-fun x461 () Real)
(declare-fun x143 () Real)
(declare-fun x196 () Real)
(declare-fun x64 () Real)
(declare-fun x803 () Real)
(declare-fun x220 () Real)
(declare-fun x314 (x30) Real)
(declare-fun x684 () Real)
(declare-fun x858 () Real)
(declare-fun x140 () Bool)
(declare-fun x569 (Real Real) Real)
(declare-fun x416 () Real)
(declare-fun x203 () Real)
(declare-fun x431 (Real) Real)
(declare-fun x939 () Bool)
(declare-fun x943 () Bool)
(declare-fun x490 () Real)
(declare-fun x239 () Real)
(declare-fun x524 () Bool)
(declare-fun x296 () Real)
(declare-fun x240 () Real)
(declare-fun x291 () Real)
(declare-fun x717 () Real)
(declare-fun x139 () Real)
(declare-fun x378 () Real)
(declare-fun x236 () Bool)
(declare-fun x888 () Bool)
(declare-fun x339 () Real)
(declare-fun x373 () Real)
(declare-fun x62 () Real)
(declare-fun x843 (x30) Real)
(declare-fun x814 () Real)
(declare-fun x90 () Real)
(declare-fun x689 () x30)
(declare-fun x434 () Bool)
(declare-fun x323 () Real)
(declare-fun x322 () Real)
(declare-fun x126 (Real Real) Real)
(declare-fun x873 () Real)
(declare-fun x231 () Real)
(declare-fun x286 () Real)
(declare-fun x357 () Bool)
(declare-fun x691 () Real)
(declare-fun x942 () x30)
(declare-fun x69 () Real)
(declare-fun x368 () Real)
(declare-fun x332 () Real)
(declare-fun x250 () Real)
(declare-fun x191 () Bool)
(declare-fun x149 () Real)
(declare-fun x649 () Bool)
(declare-fun x207 () Real)
(declare-fun x171 () Real)
(declare-fun x856 () Bool)
(declare-fun x423 () Real)
(declare-fun x499 () Real)
(declare-fun x530 () Real)
(declare-fun x352 () Bool)
(declare-fun x813 () Real)
(declare-fun x578 () Real)
(declare-fun x276 () Bool)
(declare-fun x394 () Real)
(declare-fun x580 () Real)
(declare-fun x902 () Real)
(declare-fun x811 () Real)
(declare-fun x549 (Real Real) Real)
(declare-fun x22 () Bool)
(declare-fun x19 () Real)
(declare-fun x794 () Bool)
(declare-fun x789 () Real)
(declare-fun x135 (Real) Real)
(declare-fun x868 () Real)
(declare-fun x360 () Bool)
(declare-fun x55 () Bool)
(declare-fun x72 () Real)
(declare-fun x351 () Real)
(declare-fun x57 () Real)
(declare-fun x570 () Bool)
(declare-fun x921 () Real)
(declare-fun x439 () Real)
(declare-fun x102 () Real)
(declare-fun x799 () Real)
(declare-fun x80 () Real)
(declare-fun x21 (Real) Real)
(declare-fun x299 () Real)
(declare-fun x844 () Real)
(declare-fun x604 () Real)
(declare-fun x544 () Real)
(declare-fun x739 () Bool)
(declare-fun x562 () Real)
(declare-fun x534 () Real)
(declare-fun x617 (Real) Real)
(declare-fun x622 () Real)
(declare-fun x795 () Real)
(declare-fun x906 () Bool)
(declare-fun x407 () Real)
(declare-fun x807 () Real)
(declare-fun x287 () Real)
(declare-fun x246 () Bool)
(declare-fun x526 () Real)
(declare-fun x904 () x30)
(declare-fun x598 () Bool)
(declare-fun x426 () Bool)
(declare-fun x173 () x30)
(declare-fun x588 () Real)
(declare-fun x333 (Real) Real)
(declare-fun x780 () Real)
(declare-fun x640 () Real)
(declare-fun x474 () Bool)
(declare-fun x590 () Real)
(declare-fun x946 () Real)
(declare-fun x150 () Real)
(declare-fun x153 () Bool)
(declare-fun x719 () Real)
(declare-fun x877 () Bool)
(declare-fun x195 () Real)
(declare-fun x723 () Real)
(declare-fun x228 (Real) Real)
(declare-fun x245 () Bool)
(declare-fun x951 () Real)
(declare-fun x255 () Real)
(declare-fun x893 () Real)
(declare-fun x938 () Real)
(declare-fun x793 () Bool)
(declare-fun x801 () Real)
(declare-fun x881 () Real)
(declare-fun x557 () Real)
(declare-fun x671 () Real)
(declare-fun x481 () Bool)
(declare-fun x438 () Real)
(declare-fun x154 (Real) Real)
(declare-fun x657 () Bool)
(declare-fun x882 () Bool)
(declare-fun x242 () Bool)
(declare-fun x202 () Real)
(declare-fun x295 () x30)
(declare-fun x592 () Real)
(declare-fun x522 () Real)
(declare-fun x335 () Real)
(declare-fun x68 () Real)
(declare-fun x612 () Real)
(declare-fun x201 () Real)
(declare-fun x638 () Real)
(declare-fun x283 () Real)
(declare-fun x277 () Real)
(declare-fun x867 (Real) Real)
(declare-fun x476 () Bool)
(declare-fun x59 () Real)
(declare-fun x114 () Real)
(declare-fun x198 (x30) Real)
(declare-fun x175 () Real)
(declare-fun x825 () Real)
(declare-fun x292 () Real)
(declare-fun x484 () Bool)
(declare-fun x65 () Bool)
(declare-fun x258 () Real)
(declare-fun x753 () Bool)
(declare-fun x704 () Real)
(declare-fun x752 () Real)
(declare-fun x447 () Real)
(declare-fun x330 () Real)
(declare-fun x687 () Real)
(declare-fun x507 () Bool)
(declare-fun x792 () Bool)
(declare-fun x887 () Bool)
(declare-fun x166 () Real)
(declare-fun x583 () Bool)
(declare-fun x730 () Real)
(declare-fun x899 () Real)
(declare-fun x720 () Real)
(declare-fun x560 () Bool)
(declare-fun x935 () Bool)
(declare-fun x495 () Real)
(declare-fun x872 () Real)
(declare-fun x528 () Real)
(declare-fun x247 () Real)
(declare-fun x725 () Bool)
(declare-fun x380 () Real)
(declare-fun x587 () Real)
(declare-fun x293 () Real)
(declare-fun x940 () Real)
(declare-fun x367 (Real) Real)
(declare-fun x862 () Real)
(declare-fun x303 () Real)
(declare-fun x273 () Bool)
(declare-fun x651 (x30) Real)
(declare-fun x690 () Real)
(declare-fun x662 () Real)
(declare-fun x389 () Bool)
(declare-fun x230 () Bool)
(declare-fun x406 () Real)
(declare-fun x573 () Bool)
(declare-fun x176 (Real) Real)
(declare-fun x100 () Real)
(declare-fun x883 () Real)
(declare-fun x773 () Real)
(declare-fun x39 () Real)
(declare-fun x515 () Bool)
(declare-fun x511 () Bool)
(declare-fun x922 () Real)
(declare-fun x812 () x30)
(declare-fun x109 () Bool)
(declare-fun x523 () Real)
(declare-fun x568 () Real)
(declare-fun x952 () Real)
(declare-fun x731 () Real)
(declare-fun x635 () Real)
(declare-fun x665 () Real)
(declare-fun x437 () Real)
(declare-fun x546 () Real)
(declare-fun x49 () Real)
(declare-fun x413 () Real)
(declare-fun x593 (Real) Real)
(declare-fun x493 () Real)
(declare-fun x542 () Bool)
(declare-fun x458 () Real)
(declare-fun x53 () Real)
(declare-fun x97 () Bool)
(declare-fun x695 () Real)
(declare-fun x551 () Real)
(declare-fun x732 () Real)
(declare-fun x646 () Real)
(declare-fun x218 () Real)
(declare-fun x182 () Real)
(declare-fun x586 () Bool)
(declare-fun x94 () Real)
(declare-fun x853 () Bool)
(declare-fun x821 () Real)
(declare-fun x865 () Real)
(declare-fun x537 () Real)
(declare-fun x661 (x30) Real)
(declare-fun x932 () Bool)
(declare-fun x577 () Real)
(declare-fun x653 () Real)
(declare-fun x216 () Real)
(declare-fun x885 () Real)
(declare-fun x576 () Real)
(declare-fun x334 () Real)
(declare-fun x385 () Real)
(declare-fun x42 () Real)
(declare-fun x621 () Bool)
(declare-fun x715 (Real) Real)
(declare-fun x710 () Real)
(declare-fun x895 () Real)
(declare-fun x58 () Bool)
(declare-fun x761 () Bool)
(declare-fun x354 () Real)
(declare-fun x213 () Real)
(declare-fun x559 () Real)
(declare-fun x324 () Real)
(declare-fun x272 () Real)
(declare-fun x757 () Real)
(declare-fun x155 () Real)
(declare-fun x957 () Real)
(declare-fun x558 () Real)
(declare-fun x563 () Real)
(declare-fun x382 () Real)
(declare-fun x117 () Real)
(declare-fun x269 () Real)
(declare-fun x802 () Real)
(declare-fun x663 () Real)
(declare-fun x672 () Real)
(declare-fun x219 () Real)
(declare-fun x205 (Real) Real)
(declare-fun x764 () Real)
(declare-fun x376 () Real)
(declare-fun x745 () Real)
(declare-fun x631 () Bool)
(declare-fun x241 () Real)
(declare-fun x134 () Real)
(declare-fun x86 () Bool)
(declare-fun x136 () Bool)
(declare-fun x395 () Real)
(declare-fun x779 () Real)
(declare-fun x909 () Real)
(declare-fun x778 () Real)
(declare-fun x652 () Real)
(declare-fun x505 () Real)
(declare-fun x824 () Real)
(declare-fun x600 () Real)
(declare-fun x319 () Real)
(declare-fun x266 () Real)
(declare-fun x850 () Bool)
(declare-fun x164 () Real)
(declare-fun x953 () x30)
(declare-fun x328 () Real)
(declare-fun x535 () Bool)
(declare-fun x724 () Real)
(declare-fun x625 () Real)
(declare-fun x686 () Bool)
(declare-fun x896 () Bool)
(declare-fun x409 () Bool)
(declare-fun x908 () Real)
(declare-fun x436 () Bool)
(declare-fun x113 () Real)
(declare-fun x347 () Bool)
(declare-fun x428 () Real)
(declare-fun x129 () Real)
(declare-fun x744 () Real)
(declare-fun x540 () Real)
(declare-fun x459 (Real) Real)
(declare-fun x835 () Real)
(declare-fun x861 () Real)
(declare-fun x836 () Real)
(declare-fun x602 () Real)
(declare-fun x358 () Real)
(declare-fun x694 () Bool)
(declare-fun x364 () Real)
(declare-fun x776 () Bool)
(declare-fun x188 () Real)
(declare-fun x108 () Bool)
(declare-fun x223 () Real)
(declare-fun x683 () Real)
(declare-fun x782 () Bool)
(declare-fun x50 () Real)
(declare-fun x607 () Bool)
(declare-fun x502 () Real)
(declare-fun x685 (Real) x30)
(declare-fun x133 (Real) Real)
(declare-fun x104 (Real) Real)
(declare-fun x386 () Bool)
(declare-fun x880 () Bool)
(declare-fun x128 () Real)
(declare-fun x468 () Bool)
(declare-fun x696 () Real)
(declare-fun x74 () Real)
(declare-fun x878 () Real)
(declare-fun x845 () Bool)
(declare-fun x847 () Bool)
(declare-fun x597 () Real)
(declare-fun x33 () Real)
(declare-fun x852 () Real)
(declare-fun x855 () Real)
(declare-fun x110 () Real)
(declare-fun x11 () Real)
(declare-fun x581 () Real)
(declare-fun x487 () Bool)
(declare-fun x630 () Real)
(declare-fun x879 () Real)
(declare-fun x193 () Real)
(declare-fun x626 () Real)
(declare-fun x898 () Real)
(declare-fun x912 () Real)
(declare-fun x288 () Real)
(declare-fun x254 () Real)
(declare-fun x670 () Real)
(declare-fun x152 () Real)
(declare-fun x800 () Real)
(declare-fun x660 () Real)
(declare-fun x204 () Real)
(declare-fun x7 () Real)
(declare-fun x77 () Real)
(declare-fun x465 () Real)
(declare-fun x480 () Real)
(declare-fun x664 () Real)
(declare-fun x23 () Real)
(declare-fun x655 () Real)
(declare-fun x918 () Real)
(declare-fun x356 () Real)
(declare-fun x67 () Real)
(declare-fun x726 () Bool)
(declare-fun x371 () Real)
(declare-fun x815 () Real)
(declare-fun x820 () Real)
(declare-fun x486 () Real)
(declare-fun x740 () Real)
(declare-fun x479 () Real)
(declare-fun x388 (Real) Real)
(declare-fun x415 (Real) Real)
(declare-fun x905 () x30)
(declare-fun x345 (Real) Real)
(declare-fun x785 () Real)
(declare-fun x15 () Real)
(declare-fun x919 () Real)
(declare-fun x727 () Real)
(declare-fun x713 () Real)
(declare-fun x781 () Bool)
(declare-fun x599 () Bool)
(declare-fun x449 () Real)
(declare-fun x917 () Real)
(declare-fun x514 () Real)
(declare-fun x238 (Real) Real)
(declare-fun x168 () Real)
(declare-fun x208 () Real)
(declare-fun x96 () Real)
(declare-fun x929 () Real)
(declare-fun x556 () Real)
(declare-fun x644 () Real)
(declare-fun x158 () Bool)
(declare-fun x960 () Real)
(declare-fun x869 () Real)
(declare-fun x206 () Real)
(declare-fun x200 () x30)
(declare-fun x123 () Real)
(declare-fun x711 () Real)
(declare-fun x768 () Real)
(declare-fun x506 () Bool)
(declare-fun x278 (x30) Real)
(declare-fun x907 () Bool)
(declare-fun x302 () Bool)
(declare-fun x482 () Bool)
(declare-fun x457 () Bool)
(declare-fun x750 () Real)
(declare-fun x318 () Real)
(declare-fun x613 () Real)
(declare-fun x99 () Bool)
(declare-fun x930 () Real)
(declare-fun x931 () x30)
(declare-fun x346 () Real)
(declare-fun x677 () Real)
(declare-fun x398 () Real)
(declare-fun x676 () Real)
(declare-fun x82 (Real) Real)
(declare-fun x420 () Real)
(declare-fun x279 () Real)
(declare-fun x181 () Real)
(declare-fun x41 () Real)
(declare-fun x281 () Real)
(declare-fun x714 () Real)
(declare-fun x47 () Real)
(declare-fun x285 () Real)
(declare-fun x894 () Real)
(declare-fun x391 () Real)
(declare-fun x263 () Real)
(declare-fun x316 () Bool)
(declare-fun x703 () Real)
(declare-fun x892 () Real)
(declare-fun x199 () Real)
(declare-fun x656 () Real)
(declare-fun x27 () Bool)
(declare-fun x840 () Real)
(declare-fun x692 () Real)
(declare-fun x809 () Real)
(declare-fun x172 () Real)
(declare-fun x818 () Bool)
(declare-fun x306 () Real)
(declare-fun x762 () Real)
(declare-fun x92 () Real)
(declare-fun x451 () Real)
(declare-fun x886 (Real) Real)
(declare-fun x520 () Bool)
(declare-fun x393 () Real)
(declare-fun x945 () Real)
(declare-fun x184 () Real)
(declare-fun x377 () Real)
(declare-fun x751 () Bool)
(declare-fun x897 () Real)
(declare-fun x632 () Bool)
(declare-fun x702 (Real) Real)
(declare-fun x832 () Bool)
(declare-fun x212 () Real)
(declare-fun x111 () Real)
(declare-fun x841 () Bool)
(declare-fun x83 () Real)
(declare-fun x87 () Real)
(declare-fun x469 () Real)
(declare-fun x105 () Bool)
(declare-fun x180 () Real)
(declare-fun x875 () Real)
(declare-fun x237 () Real)
(declare-fun x783 () Real)
(declare-fun x186 () Real)
(declare-fun x60 () Real)
(declare-fun x348 () Real)
(declare-fun x673 () Bool)
(declare-fun x312 () Bool)
(declare-fun x260 () Real)
(declare-fun x93 () Real)
(declare-fun x787 () Real)
(declare-fun x521 () Real)
(declare-fun x669 () Real)
(declare-fun x18 () Real)
(declare-fun x748 () Real)
(declare-fun x699 () Real)
(declare-fun x118 () Real)
(declare-fun x728 () Real)
(declare-fun x365 () Real)
(declare-fun x243 () Real)
(declare-fun x214 () Real)
(declare-fun x961 () Real)
(declare-fun x177 () Real)
(declare-fun x248 () Real)
(declare-fun x264 () Real)
(declare-fun x399 () Real)
(declare-fun x705 () Real)
(declare-fun x737 () Real)
(declare-fun x543 () Real)
(declare-fun x914 () Bool)
(declare-fun x743 () Real)
(declare-fun x342 () Real)
(declare-fun x584 () Real)
(declare-fun x615 () Real)
(declare-fun x758 () Real)
(declare-fun x819 () Bool)
(declare-fun x533 () Bool)
(declare-fun x5 () Bool)
(declare-fun x132 () Real)
(declare-fun x767 () Bool)
(declare-fun x463 () Real)
(declare-fun x148 () Real)
(declare-fun x370 () Bool)
(declare-fun x497 () Real)
(declare-fun x575 () Bool)
(declare-fun x257 () Real)
(declare-fun x98 () Real)
(declare-fun x10 () Bool)
(declare-fun x2 () Real)
(declare-fun x419 () Real)
(declare-fun x36 () Bool)
(declare-fun x103 () Real)
(declare-fun x701 () Real)
(declare-fun x756 (Real) Real)
(declare-fun x338 () Real)
(declare-fun x226 (Real) Real)
(declare-fun x147 () Real)
(declare-fun x375 () x30)
(declare-fun x4 () Real)
(declare-fun x854 () Real)
(declare-fun x25 () Real)
(declare-fun x455 () Real)
(declare-fun x639 () Real)
(declare-fun x742 () Real)
(declare-fun x900 () Real)
(declare-fun x17 (Real) Real)
(declare-fun x268 (x30) Real)
(declare-fun x708 () Real)
(declare-fun x849 () Real)
(declare-fun x115 () Bool)
(declare-fun x178 () Real)
(declare-fun x232 () Real)
(declare-fun x606 () Bool)
(declare-fun x550 () Real)
(declare-fun x681 () Bool)
(declare-fun x518 () Bool)
(declare-fun x501 () Real)
(declare-fun x759 () Real)
(declare-fun x944 () Real)
(declare-fun x366 () Bool)
(declare-fun x215 () Real)
(declare-fun x866 () Bool)
(declare-fun x828 () Real)
(declare-fun x582 () Real)
(declare-fun x519 () Real)
(declare-fun x29 () Real)
(declare-fun x112 () Bool)
(declare-fun x165 () Real)
(declare-fun x125 () Real)
(declare-fun x810 () Real)
(declare-fun x411 () Bool)
(declare-fun x738 () Real)
(declare-fun x327 () Real)
(declare-fun x52 () Real)
(declare-fun x424 () Real)
(declare-fun x947 () Bool)
(declare-fun x509 () Real)
(declare-fun x553 () x30)
(declare-fun x666 () Real)
(declare-fun x234 () Real)
(declare-fun x396 () Real)
(declare-fun x442 () Real)
(declare-fun x440 () Real)
(declare-fun x422 () Bool)
(declare-fun x265 () Real)
(declare-fun x142 () Bool)
(declare-fun x741 () Bool)
(declare-fun x359 () Real)
(declare-fun x282 () Real)
(declare-fun x884 () Bool)
(declare-fun x233 () Real)
(declare-fun x774 () Real)
(declare-fun x864 () Real)
(declare-fun x160 () Real)
(declare-fun x791 () Bool)
(declare-fun x494 () Bool)
(declare-fun x838 () Real)
(declare-fun x552 (Real) Real)
(declare-fun x754 () Real)
(declare-fun x26 () Bool)
(declare-fun x300 () Real)
(declare-fun x608 () Real)
(declare-fun x3 () Real)
(declare-fun x350 () Real)
(declare-fun x146 () Real)
(declare-fun x387 () Real)
(declare-fun x369 () Bool)
(declare-fun x516 () Bool)
(declare-fun x344 () Real)
(declare-fun x603 () Real)
(declare-fun x343 (Real) Real)
(declare-fun x217 () Bool)
(declare-fun x496 () Bool)
(declare-fun x916 (Real Real) Real)
(declare-fun x712 () Bool)
(declare-fun x830 () Bool)
(declare-fun x313 () Real)
(declare-fun x915 () Bool)
(declare-fun x925 () Bool)
(declare-fun x189 () Real)
(declare-fun x81 () Real)
(declare-fun x404 () Real)
(declare-fun x614 () Real)
(declare-fun x362 () Real)
(declare-fun x962 () Real)
(declare-fun x531 (Real) Real)
(declare-fun x536 () Real)
(declare-fun x859 () Real)
(declare-fun x89 () Bool)
(declare-fun x538 () Real)
(declare-fun x561 () Real)
(declare-fun x650 () Real)
(declare-fun x678 () Real)
(declare-fun x44 () Bool)
(declare-fun x851 () Real)
(declare-fun x145 () Bool)
(declare-fun x48 () Real)
(declare-fun x408 () Real)
(declare-fun x106 () Bool)
(declare-fun x61 () Real)
(declare-fun x771 () Real)
(declare-fun x948 () Real)
(declare-fun x636 () Bool)
(declare-fun x337 () Bool)
(declare-fun x249 () Bool)
(declare-fun x823 () Real)
(declare-fun x571 () Real)
(declare-fun x305 () Real)
(declare-fun x84 () Real)
(declare-fun x433 () Real)
(declare-fun x137 () Real)
(declare-fun x308 () Real)
(declare-fun x889 () Real)
(declare-fun x870 () Real)
(declare-fun x589 () Real)
(declare-fun x954 () Real)
(declare-fun x435 () Real)
(declare-fun x765 () Real)
(declare-fun x816 () Real)
(declare-fun x251 () Real)
(declare-fun x472 () Real)
(declare-fun x397 () Real)
(declare-fun x709 () Real)
(declare-fun x901 () Real)
(declare-fun x517 () Real)
(declare-fun x63 () Bool)
(declare-fun x116 () Real)
(declare-fun x16 () Real)
(declare-fun x471 () Real)
(declare-fun x682 () Bool)
(declare-fun x66 () Real)
(declare-fun x225 () Real)
(declare-fun x307 () x30)
(declare-fun x259 () Real)
(declare-fun x489 () Bool)
(declare-fun x548 () Bool)
(declare-fun x805 () Real)
(declare-fun x410 () Real)
(declare-fun x340 () Bool)
(declare-fun x508 () Real)
(declare-fun x637 () Real)
(declare-fun x280 () Real)
(declare-fun x777 () Bool)
(declare-fun x95 () Real)
(declare-fun x301 () Real)
(declare-fun x903 () Real)
(declare-fun x675 (x30) Real)
(declare-fun x271 () Real)
(declare-fun x693 () Real)
(declare-fun x290 () Real)
(declare-fun x462 () Bool)
(declare-fun x194 () x30)
(declare-fun x390 () Real)
(declare-fun x262 () Real)
(declare-fun x654 () Real)
(declare-fun x311 () Bool)
(declare-fun x798 () Real)
(declare-fun x329 () Real)
(declare-fun x310 () Real)
(declare-fun x167 () Real)
(declare-fun x275 () Bool)
(declare-fun x958 () Real)
(declare-fun x760 () Real)
(declare-fun x190 () Real)
(declare-fun x647 () Real)
(declare-fun x668 () Real)
(declare-fun x500 () Real)
(declare-fun x38 () Real)
(declare-fun x594 () Bool)
(declare-fun x414 () Bool)
(declare-fun x619 () Real)
(declare-fun x197 () Real)
(declare-fun x949 () Real)
(declare-fun x187 (Real) Real)
(declare-fun x572 () Real)
(declare-fun x959 () Bool)
(declare-fun x427 () Bool)
(declare-fun x591 () Real)
(declare-fun x464 () Bool)
(declare-fun x927 () Real)
(declare-fun x763 () Bool)
(declare-fun x891 () Real)
(declare-fun x400 () Real)
(declare-fun x700 () Real)
(declare-fun x627 () Real)
(declare-fun x454 () Real)
(declare-fun x131 (Real Real) Real)
(declare-fun x235 () Real)
(declare-fun x183 () Real)
(declare-fun x611 () Real)
(declare-fun x467 () Bool)
(declare-fun x309 () Real)
(declare-fun x547 () Bool)
(declare-fun x341 () Real)
(declare-fun x85 () Real)
(declare-fun x539 () Real)
(declare-fun x432 () Real)
(declare-fun x716 () Bool)
(declare-fun x56 (Real) Real)
(define-fun x45 ((x30 x30) (x456 Real)) x30 (ite ((_ is x46) x30) (x46 (x224 x30) (+ x456 (x8 x30))) (ite ((_ is x453) x30) (x453 (x460 x30) (x616 x30) (+ x456 (x179 x30))) (x734 (+ (x141 x30) x456)))))
(define-fun x659 ((x721 Real)) Real (ite (and (< x721 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x721)) x721 (- x721 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x804 ((x721 Real)) Real (ite (and (> 0 x721) (>= x721 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x721) x721))
(define-fun x920 ((x418 Real)) Bool (and (< x418 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x418)))
(define-fun x722 ((x418 Real)) Bool (and (= x418 (x549 x418 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x418 (x549 115792089237316195423570985008687907853269984665640564039457584007913129639935 x418))))
(define-fun x13 ((x418 Real)) Bool (and (= (x549 x418 0) 0) (= 0 (x549 0 x418))))
(define-fun x170 ((x418 Real)) Bool (= (x549 x418 x418) x418))
(define-fun x498 ((x418 Real)) Bool (and (x722 x418) (x170 x418) (x13 x418)))
(define-fun x839 ((x418 Real)) Bool (= (x549 20282409603651670423947251286015 x418) (x549 20282409603651670423947251286015 (x549 20282409603651670423947251286015 x418))))
(define-fun x403 ((x418 Real)) Bool (=> (and (> 20282409603651670423947251286016 x418) (<= 0 x418)) (= x418 (x549 20282409603651670423947251286015 x418))))
(define-fun x444 ((x418 Real)) Bool (=> (= (x549 20282409603651670423947251286015 x418) x418) (and (<= 0 x418) (> 20282409603651670423947251286016 x418))))
(define-fun x75 ((x418 Real)) Bool (=> (and (< x418 40564819207303340847894502572032) (<= 20282409603651670423947251286016 x418)) (= (x549 20282409603651670423947251286015 x418) (- x418 20282409603651670423947251286016))))
(define-fun x315 ((x418 Real) (x620 Real)) Bool (and (>= x620 0) (= (+ (x549 20282409603651670423947251286015 x418) (* x620 20282409603651670423947251286016)) x418)))
(define-fun x567 ((x418 Real) (x846 Real)) Bool (and (x75 x418) (x839 x418) (x444 x418) (x315 x418 x846) (x403 x418)))
(define-fun x138 ((x418 Real) (x620 Real)) Bool (= (x549 x418 x620) (x549 x620 x418)))
(define-fun x863 ((x418 Real) (x620 Real)) Bool (and (=> (<= 0 x620) (<= (x549 x418 x620) x620)) (<= 0 (x549 x418 x620)) (=> (<= 0 x418) (>= x418 (x549 x418 x620)))))
(define-fun x848 ((x418 Real) (x620 Real)) Bool (and (x138 x418 x620) (x863 x418 x620)))
(define-fun x707 ((x418 Real) (x846 Real)) Bool (and (x567 x418 x846) (x848 x418 20282409603651670423947251286015)))
(define-fun x941 ((x418 Real)) Bool (= (x531 x418) (ite (> 10141204801825835211973625643008 (x549 x418 20282409603651670423947251286015)) (x549 x418 20282409603651670423947251286015) (+ 115792089237316195423570985008687907853269984645358154435805913583965878353920 (x549 x418 20282409603651670423947251286015)))))
(define-fun x788 ((x418 Real)) Bool (= (x549 1 x418) (x549 1 (x549 1 x418))))
(define-fun x6 ((x418 Real)) Bool (=> (and (< x418 2) (<= 0 x418)) (= x418 (x549 1 x418))))
(define-fun x585 ((x418 Real)) Bool (=> (= x418 (x549 1 x418)) (and (<= 0 x418) (< x418 2))))
(define-fun x871 ((x418 Real)) Bool (=> (and (>= x418 2) (< x418 4)) (= (x549 1 x418) (- x418 2))))
(define-fun x76 ((x418 Real) (x620 Real)) Bool (and (>= x620 0) (= x418 (+ (x549 1 x418) (* 2 x620)))))
(define-fun x911 ((x418 Real) (x846 Real)) Bool (and (x6 x418) (x585 x418) (x871 x418) (x76 x418 x846) (x788 x418)))
(define-fun x478 ((x418 Real) (x846 Real)) Bool (and (x911 x418 x846) (x848 x418 1)))
(define-fun x274 ((x418 Real)) Bool (= (x549 255 (x549 255 x418)) (x549 255 x418)))
(define-fun x336 ((x418 Real)) Bool (=> (and (>= x418 0) (< x418 256)) (= (x549 255 x418) x418)))
(define-fun x545 ((x418 Real)) Bool (=> (= x418 (x549 255 x418)) (and (< x418 256) (>= x418 0))))
(define-fun x595 ((x418 Real)) Bool (=> (and (> 512 x418) (>= x418 256)) (= (x549 255 x418) (- x418 256))))
(define-fun x174 ((x418 Real) (x620 Real)) Bool (and (>= x620 0) (= (+ (* 256 x620) (x549 255 x418)) x418)))
(define-fun x641 ((x418 Real) (x846 Real)) Bool (and (x336 x418) (x274 x418) (x595 x418) (x174 x418 x846) (x545 x418)))
(define-fun x294 ((x418 Real) (x846 Real)) Bool (and (x848 x418 255) (x641 x418 x846)))
(define-fun x79 ((x418 Real)) Bool (= (x549 1461501637330902918203684832716283019655932542975 (x549 1461501637330902918203684832716283019655932542975 x418)) (x549 1461501637330902918203684832716283019655932542975 x418)))
(define-fun x513 ((x418 Real)) Bool (=> (and (<= 0 x418) (< x418 1461501637330902918203684832716283019655932542976)) (= x418 (x549 1461501637330902918203684832716283019655932542975 x418))))
(define-fun x860 ((x418 Real)) Bool (=> (= x418 (x549 1461501637330902918203684832716283019655932542975 x418)) (and (< x418 1461501637330902918203684832716283019655932542976) (<= 0 x418))))
(define-fun x628 ((x418 Real)) Bool (=> (and (< x418 2923003274661805836407369665432566039311865085952) (>= x418 1461501637330902918203684832716283019655932542976)) (= (- x418 1461501637330902918203684832716283019655932542976) (x549 1461501637330902918203684832716283019655932542975 x418))))
(define-fun x555 ((x418 Real) (x620 Real)) Bool (and (= (+ (* x620 1461501637330902918203684832716283019655932542976) (x549 1461501637330902918203684832716283019655932542975 x418)) x418) (<= 0 x620)))
(define-fun x452 ((x418 Real) (x846 Real)) Bool (and (x513 x418) (x79 x418) (x555 x418 x846) (x860 x418) (x628 x418)))
(define-fun x161 ((x418 Real) (x846 Real)) Bool (and (x452 x418 x846) (x848 x418 1461501637330902918203684832716283019655932542975)))
(define-fun x769 ((x418 Real)) Bool (= (x549 65535 x418) (x549 65535 (x549 65535 x418))))
(define-fun x554 ((x418 Real)) Bool (=> (and (> 65536 x418) (>= x418 0)) (= (x549 65535 x418) x418)))
(define-fun x834 ((x418 Real)) Bool (=> (= x418 (x549 65535 x418)) (and (<= 0 x418) (< x418 65536))))
(define-fun x934 ((x418 Real)) Bool (=> (and (>= x418 65536) (> 131072 x418)) (= (x549 65535 x418) (- x418 65536))))
(define-fun x379 ((x418 Real) (x620 Real)) Bool (and (= x418 (+ (* 65536 x620) (x549 65535 x418))) (>= x620 0)))
(define-fun x525 ((x418 Real) (x846 Real)) Bool (and (x934 x418) (x379 x418 x846) (x769 x418) (x554 x418) (x834 x418)))
(define-fun x718 ((x418 Real) (x846 Real)) Bool (and (x525 x418 x846) (x848 x418 65535)))
(define-fun x124 ((x418 Real)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x418)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x131 x418 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x151 ((x418 Real)) Bool (and (= (x131 x418 0) x418) (= (x131 0 x418) x418)))
(define-fun x532 ((x418 Real)) Bool (= x418 (x131 x418 x418)))
(define-fun x466 ((x418 Real)) Bool (and (x532 x418) (x124 x418) (x151 x418)))
(define-fun x605 ((x418 Real) (x620 Real)) Bool (= (x131 x418 x620) (x131 x620 x418)))
(define-fun x34 ((x418 Real) (x620 Real)) Bool (and (=> (<= 0 x418) (>= (x131 x418 x620) x418)) (<= (x131 x418 x620) (+ x418 x620)) (=> (>= x620 0) (>= (x131 x418 x620) x620))))
(define-fun x790 ((x418 Real) (x620 Real)) Bool (and (x605 x418 x620) (x34 x418 x620)))
(define-fun x485 ((x418 Real)) Bool (= (x549 1099511627775 (x549 1099511627775 x418)) (x549 1099511627775 x418)))
(define-fun x35 ((x418 Real)) Bool (=> (and (< x418 1099511627776) (<= 0 x418)) (= (x549 1099511627775 x418) x418)))
(define-fun x913 ((x418 Real)) Bool (=> (= x418 (x549 1099511627775 x418)) (and (<= 0 x418) (> 1099511627776 x418))))
(define-fun x512 ((x418 Real)) Bool (=> (and (> 2199023255552 x418) (>= x418 1099511627776)) (= (- x418 1099511627776) (x549 1099511627775 x418))))
(define-fun x729 ((x418 Real) (x620 Real)) Bool (and (<= 0 x620) (= (+ (x549 1099511627775 x418) (* 1099511627776 x620)) x418)))
(define-fun x784 ((x418 Real) (x846 Real)) Bool (and (x485 x418) (x729 x418 x846) (x913 x418) (x35 x418) (x512 x418)))
(define-fun x12 ((x418 Real) (x846 Real)) Bool (and (x784 x418 x846) (x848 x418 1099511627775)))
(define-fun x253 ((x418 Real)) Bool (= (x549 18446744073709551615 (x549 18446744073709551615 x418)) (x549 18446744073709551615 x418)))
(define-fun x417 ((x418 Real)) Bool (=> (and (<= 0 x418) (< x418 18446744073709551616)) (= (x549 18446744073709551615 x418) x418)))
(define-fun x503 ((x418 Real)) Bool (=> (= (x549 18446744073709551615 x418) x418) (and (>= x418 0) (> 18446744073709551616 x418))))
(define-fun x267 ((x418 Real)) Bool (=> (and (>= x418 18446744073709551616) (> 36893488147419103232 x418)) (= (- x418 18446744073709551616) (x549 18446744073709551615 x418))))
(define-fun x54 ((x418 Real) (x620 Real)) Bool (and (= (+ (* 18446744073709551616 x620) (x549 18446744073709551615 x418)) x418) (<= 0 x620)))
(define-fun x304 ((x418 Real) (x846 Real)) Bool (and (x417 x418) (x253 x418) (x267 x418) (x54 x418 x846) (x503 x418)))
(define-fun x227 ((x418 Real) (x846 Real)) Bool (and (x848 x418 18446744073709551615) (x304 x418 x846)))
(define-fun x284 ((x418 Real)) Bool (= (x549 340282366920938463463374607431768211455 x418) (x549 340282366920938463463374607431768211455 (x549 340282366920938463463374607431768211455 x418))))
(define-fun x88 ((x418 Real)) Bool (=> (and (< x418 340282366920938463463374607431768211456) (>= x418 0)) (= x418 (x549 340282366920938463463374607431768211455 x418))))
(define-fun x642 ((x418 Real)) Bool (=> (= (x549 340282366920938463463374607431768211455 x418) x418) (and (<= 0 x418) (> 340282366920938463463374607431768211456 x418))))
(define-fun x210 ((x418 Real)) Bool (=> (and (<= 340282366920938463463374607431768211456 x418) (> 680564733841876926926749214863536422912 x418)) (= (- x418 340282366920938463463374607431768211456) (x549 340282366920938463463374607431768211455 x418))))
(define-fun x831 ((x418 Real) (x620 Real)) Bool (and (= x418 (+ (x549 340282366920938463463374607431768211455 x418) (* 340282366920938463463374607431768211456 x620))) (<= 0 x620)))
(define-fun x144 ((x418 Real) (x846 Real)) Bool (and (x88 x418) (x284 x418) (x210 x418) (x831 x418 x846) (x642 x418)))
(define-fun x70 ((x418 Real) (x846 Real)) Bool (and (x848 x418 340282366920938463463374607431768211455) (x144 x418 x846)))
(define-fun x297 ((x418 Real)) Bool (= (x715 x418) (ite (> 170141183460469231731687303715884105728 (x549 x418 340282366920938463463374607431768211455)) (x549 x418 340282366920938463463374607431768211455) (+ (x549 x418 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480))))
(define-fun x91 ((x766 Real)) Real (ite (= 128 x766) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x756 x766)))
(define-fun x270 ((x766 Real)) Real (ite (= 128 x766) x239 (x431 x766)))
(define-fun x510 ((x766 Real)) Real (ite (= 160 x766) x960 (x270 x766)))
(define-fun x735 ((x766 Real)) Real (ite (= 192 x766) x391 (x510 x766)))
(define-fun x222 ((x766 Real)) Real (ite (= x766 224) x625 (x735 x766)))
(define-fun x565 ((x766 Real)) Real (ite (= x766 256) x195 (x222 x766)))
(define-fun x374 ((x766 Real)) Real (ite (= 128 x766) x619 (x91 x766)))
(define-fun x441 ((x766 Real)) Real (ite (= 160 x766) x568 (x374 x766)))
(define-fun x24 ((x766 Real)) Real (ite (= x766 192) x277 (x441 x766)))
(define-fun x770 ((x766 Real)) Real (ite (= x766 224) x798 (x24 x766)))
(define-fun x20 ((x766 Real)) Real (ite (= x766 256) x774 (x770 x766)))
(define-fun x445 ((x766 Real)) Real (ite (= 0 x766) x356 (x229 x766)))
(define-fun x211 ((x766 Real)) Real (ite (= 32 x766) x919 (x445 x766)))
(define-fun x289 ((x766 Real)) Real (ite (= x766 64) x921 (x211 x766)))
(define-fun x890 ((x766 Real)) Real (ite (= 96 x766) x376 (x289 x766)))
(define-fun x928 ((x766 Real)) Real (ite (= 128 x766) x529 (x890 x766)))
(define-fun x933 ((x766 Real)) Real (ite (= x766 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x56 x766)))
(define-fun x645 ((x766 Real)) Real (ite (= 128 x766) x239 (x388 x766)))
(define-fun x829 ((x766 Real)) Real (ite (= x766 160) x713 (x645 x766)))
(define-fun x363 ((x766 Real)) Real (ite (= 192 x766) x391 (x829 x766)))
(define-fun x162 ((x766 Real)) Real (ite (= 224 x766) x625 (x363 x766)))
(define-fun x658 ((x766 Real)) Real (ite (= x766 256) x195 (x162 x766)))
(define-fun x209 ((x766 Real)) Real (ite (= x766 128) x94 (x933 x766)))
(define-fun x610 ((x766 Real)) Real (ite (= x766 160) x695 (x209 x766)))
(define-fun x733 ((x766 Real)) Real (ite (= 192 x766) x380 (x610 x766)))
(define-fun x674 ((x766 Real)) Real (ite (= x766 224) x800 (x733 x766)))
(define-fun x401 ((x766 Real)) Real (ite (= x766 256) x358 (x674 x766)))
(define-fun x564 ((x766 Real)) Real (ite (= x766 0) x745 (x205 x766)))
(define-fun x421 ((x766 Real)) Real (ite (= 32 x766) x780 (x564 x766)))
(define-fun x697 ((x766 Real)) Real (ite (= 64 x766) x671 (x421 x766)))
(define-fun x119 ((x766 Real)) Real (ite (= x766 96) x566 (x697 x766)))
(define-fun x9 ((x766 Real)) Real (ite (= 128 x766) x924 (x119 x766)))
(define-fun x629 ((x766 Real)) Real (ite (= x766 544) 0 (x176 x766)))
(define-fun x797 ((x766 Real)) Real (ite (= x766 576) x72 (x226 x766)))
(define-fun x643 ((x766 Real)) Real (ite (= 608 x766) x668 (x345 x766)))
(define-fun x1 ((x766 Real)) Real (ite (= x766 640) x805 (x333 x766)))
(define-fun x827 ((x766 Real)) Real (ite (= x766 672) x318 (x82 x766)))
(define-fun x667 ((x766 Real)) Real (ite (= x766 704) x260 (x238 x766)))
(define-fun x817 ((x766 Real)) Real (ite (= x766 736) x395 (x552 x766)))
(define-fun x185 ((x766 Real)) Real (ite (= 768 x766) x16 (x228 x766)))
(define-fun x51 ((x766 Real)) Real (ite (= 128 x766) x67 (x415 x766)))
(define-fun x492 ((x766 Real)) Real (ite (= x766 160) x640 (x51 x766)))
(define-fun x857 ((x766 Real)) Real (ite (= x766 192) x203 (x492 x766)))
(define-fun x430 ((x766 Real)) Real (ite (= x766 224) x212 (x857 x766)))
(define-fun x40 ((x766 Real)) Real (ite (= x766 256) x589 (x430 x766)))
(define-fun x601 ((x766 Real)) Real (ite (= x766 800) x483 (x135 x766)))
(define-fun x412 ((x766 Real)) Real (ite (= x766 832) x473 (x601 x766)))
(define-fun x491 ((x766 Real)) Real (ite (= 864 x766) x801 (x412 x766)))
(define-fun x747 ((x766 Real)) Real (ite (= 896 x766) x111 (x491 x766)))
(define-fun x256 ((x766 Real)) Real (ite (= 928 x766) x177 (x747 x766)))
(define-fun x623 ((x766 Real)) Real (ite (= x766 0) x334 (x886 x766)))
(define-fun x429 ((x766 Real)) Real (ite (= x766 32) x490 (x623 x766)))
(define-fun x680 ((x766 Real)) Real (ite (= x766 64) x64 (x429 x766)))
(define-fun x159 ((x766 Real)) Real (ite (= 96 x766) x704 (x680 x766)))
(define-fun x749 ((x766 Real)) Real (ite (= x766 128) x57 (x159 x766)))
(define-fun x874 ((x766 Real)) Real (ite (= x766 544) 0 (x867 x766)))
(define-fun x477 ((x766 Real)) Real (ite (= 576 x766) x603 (x343 x766)))
(define-fun x163 ((x766 Real)) Real (ite (= 608 x766) x292 (x702 x766)))
(define-fun x383 ((x766 Real)) Real (ite (= 640 x766) x293 (x104 x766)))
(define-fun x325 ((x766 Real)) Real (ite (= x766 672) x732 (x21 x766)))
(define-fun x405 ((x766 Real)) Real (ite (= 704 x766) x68 (x154 x766)))
(define-fun x252 ((x766 Real)) Real (ite (= 736 x766) x889 (x71 x766)))
(define-fun x926 ((x766 Real)) Real (ite (= x766 768) x664 (x459 x766)))
(define-fun x772 ((x766 Real)) Real (ite (= x766 128) x67 (x133 x766)))
(define-fun x504 ((x766 Real)) Real (ite (= 160 x766) x18 (x772 x766)))
(define-fun x349 ((x766 Real)) Real (ite (= x766 192) x203 (x504 x766)))
(define-fun x101 ((x766 Real)) Real (ite (= x766 224) x212 (x349 x766)))
(define-fun x353 ((x766 Real)) Real (ite (= 256 x766) x589 (x101 x766)))
(define-fun x31 ((x766 Real)) Real (ite (= x766 800) x287 (x617 x766)))
(define-fun x361 ((x766 Real)) Real (ite (= 832 x766) x696 (x31 x766)))
(define-fun x127 ((x766 Real)) Real (ite (= x766 864) x811 (x361 x766)))
(define-fun x37 ((x766 Real)) Real (ite (= 896 x766) x922 (x127 x766)))
(define-fun x755 ((x766 Real)) Real (ite (= 928 x766) x359 (x37 x766)))
(define-fun x648 ((x766 Real)) Real (ite (= x766 0) x139 (x367 x766)))
(define-fun x475 ((x766 Real)) Real (ite (= 32 x766) x62 (x648 x766)))
(define-fun x320 ((x766 Real)) Real (ite (= x766 64) x624 (x475 x766)))
(define-fun x688 ((x766 Real)) Real (ite (= x766 96) x266 (x320 x766)))
(define-fun x425 ((x766 Real)) Real (ite (= 128 x766) x945 (x688 x766)))
(define-fun x488 ((x766 Real)) Real (ite (= x766 128) x239 (x17 x766)))
(define-fun x826 ((x766 Real)) Real (ite (= 160 x766) x807 (x488 x766)))
(define-fun x842 ((x766 Real)) Real (ite (= x766 192) x391 (x826 x766)))
(define-fun x527 ((x766 Real)) Real (ite (= x766 224) x625 (x842 x766)))
(define-fun x910 ((x766 Real)) Real (ite (= x766 256) x195 (x527 x766)))
(define-fun x298 ((x766 Real)) Real (ite (= x766 800) x296 (x135 x766)))
(define-fun x381 ((x766 Real)) Real (ite (= 832 x766) x80 (x298 x766)))
(define-fun x746 ((x766 Real)) Real (ite (= x766 864) x190 (x381 x766)))
(define-fun x392 ((x766 Real)) Real (ite (= 896 x766) x385 (x746 x766)))
(define-fun x806 ((x766 Real)) Real (ite (= 928 x766) x240 (x392 x766)))
(define-fun x950 ((x766 Real)) Real (ite (= x766 0) x362 (x886 x766)))
(define-fun x156 ((x766 Real)) Real (ite (= x766 32) x872 (x950 x766)))
(define-fun x470 ((x766 Real)) Real (ite (= 64 x766) x562 (x156 x766)))
(define-fun x43 ((x766 Real)) Real (ite (= 96 x766) x192 (x470 x766)))
(define-fun x956 ((x766 Real)) Real (ite (= 128 x766) x120 (x43 x766)))
(define-fun x609 ((x766 Real)) Real (ite (= x766 128) x239 (x593 x766)))
(define-fun x107 ((x766 Real)) Real (ite (= 160 x766) x608 (x609 x766)))
(define-fun x579 ((x766 Real)) Real (ite (= 192 x766) x391 (x107 x766)))
(define-fun x321 ((x766 Real)) Real (ite (= x766 224) x625 (x579 x766)))
(define-fun x32 ((x766 Real)) Real (ite (= x766 256) x195 (x321 x766)))
(define-fun x122 ((x766 Real)) Real (ite (= 800 x766) x786 (x617 x766)))
(define-fun x326 ((x766 Real)) Real (ite (= 832 x766) x208 (x122 x766)))
(define-fun x775 ((x766 Real)) Real (ite (= 864 x766) x563 (x326 x766)))
(define-fun x73 ((x766 Real)) Real (ite (= 896 x766) x123 (x775 x766)))
(define-fun x808 ((x766 Real)) Real (ite (= x766 928) x465 (x73 x766)))
(define-fun x796 ((x766 Real)) Real (ite (= x766 0) x852 (x367 x766)))
(define-fun x402 ((x766 Real)) Real (ite (= 32 x766) x451 (x796 x766)))
(define-fun x121 ((x766 Real)) Real (ite (= x766 64) x290 (x402 x766)))
(define-fun x596 ((x766 Real)) Real (ite (= x766 96) x4 (x121 x766)))
(define-fun x28 ((x766 Real)) Real (ite (= 128 x766) x683 (x596 x766)))
(define-fun x169 ((x766 Real)) Real (ite (and x776 x518) (x256 x766) (x806 x766)))
(define-fun x157 ((x766 Real)) Real (ite (and x312 x673) (x755 x766) (x808 x766)))
(define-fun x923 ((x418 Real)) Bool (=> (and (not (= 4062139261 x418)) (not (= 1168994686 x418)) (not (= 18446744073709551616 x418)) (not (= x418 1099511627775)) (not (= 274184521717934524641157099916833587211 x418)) (not (= 274184521717934524641157099916833587244 x418)) (not (= 1208925819614629174706175 x418)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x418)) (not (= x418 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (not (= 274184521717934524641157099916833587223 x418)) (not (= 4033150093 x418)) (not (= x418 340282366920938463463374607431768211455)) (not (= 170141183460469231731687303715884105727 x418)) (not (= x418 1208925819614629174706176)) (not (= x418 65535)) (not (= x418 3638949393)) (not (= x418 3253611544)) (not (= 274184521717934524641157099916833587231 x418)) (not (= 340282366920938463463374607431768211456 x418)) (not (= 2362581449 x418)) (not (= x418 3257672857)) (not (= 65536 x418)) (not (= x418 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 3889878717 x418)) (not (= 10141204801825835211973625643007 x418)) (not (= 1099511627776 x418)) (not (= x418 274184521717934524641157099916833587233)) (not (= 4272920204 x418)) (not (= 20282409603651670423947251286016 x418)) (not (= 2068668150 x418)) (not (= x418 274184521717934524641157099916833587235)) (not (= 1110625635 x418)) (not (= x418 18446744073709551615)) (not (= x418 950698303)) (not (= x418 115197700812830431890159100217698998050002284567939525164234024451216521560064)) (not (= 1461501637330902918203684832716283019655932542975 x418)) (not (= 20282409603651670423947251286015 x418)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x418)) (> x418 10000) (not (= 274184521717934524641157099916833587227 x418))) (not ((_ is x734) (x685 x418)))))
(assert (axiom_frac_bound (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x715 x868) x447 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x319 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x330 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x432 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129 x708 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x132 x652 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168 x132 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x175 x338 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x178 x691 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x215 x519 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x954 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x836 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 x11 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x330 x11 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x332 x501 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346 (x715 x254) (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x377 x220 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x691 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x423 x523 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x183 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x539 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x814 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x501 x332 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x423 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x534 x371 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x539 x471 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x612 x558 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x653 x699 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x660 x178 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x178 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x387 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x814 x471 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x816 x178 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x822 x129 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x825 x25 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x234 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x407 (uninterp_frac (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x715 x868) x447 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x319 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x330 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x432 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129 x708 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x132 x652 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168 x132 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x175 x338 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x178 x691 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x215 x519 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x954 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x836 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 x11 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x330 x11 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x332 x501 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346 (x715 x254) (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x377 x220 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x691 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x423 x523 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x183 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x539 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x814 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x501 x332 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x423 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x534 x371 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x539 x471 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x612 x558 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x653 x699 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x660 x178 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x178 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x387 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x814 x471 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x816 x178 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x822 x129 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x825 x25 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x234 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x407 (uninterp_frac (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x715 x868) x447 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x319 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x330 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x432 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129 x708 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x132 x652 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168 x132 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x175 x338 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x178 x691 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x215 x519 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x954 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x836 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 x11 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x330 x11 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x332 x501 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346 (x715 x254) (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x377 x220 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x691 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x423 x523 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x183 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x539 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x814 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x501 x332 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x423 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x534 x371 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x539 x471 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x612 x558 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x653 x699 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x660 x178 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x178 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x387 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x814 x471 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x816 x178 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x822 x129 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x825 x25 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x234 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x407 (uninterp_frac (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x715 x868) x447 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x319 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x330 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x432 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129 x708 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x132 x652 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168 x132 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x175 x338 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x178 x691 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x215 x519 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x954 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x836 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 x11 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x330 x11 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x332 x501 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346 (x715 x254) (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x377 x220 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x691 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x423 x523 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x183 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x539 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x814 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x501 x332 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x423 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x534 x371 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x539 x471 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x612 x558 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x653 x699 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x660 x178 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x178 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x387 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x814 x471 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x816 x178 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x822 x129 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x825 x25 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x234 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x407 (uninterp_frac (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x715 x868) x447 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x319 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x330 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x432 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129 x708 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x132 x652 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168 x132 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x175 x338 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x178 x691 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x215 x519 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x954 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x836 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 x11 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x330 x11 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x332 x501 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346 (x715 x254) (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x377 x220 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x691 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x423 x523 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x183 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x539 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x814 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x501 x332 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x423 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x534 x371 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x539 x471 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x612 x558 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x653 x699 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x660 x178 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x178 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x387 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x814 x471 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x816 x178 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x822 x129 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x825 x25 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x234 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x407 (uninterp_frac (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x715 x868) x447 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x319 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x330 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x11 x432 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129 x708 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x132 x652 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168 x132 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x175 x338 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x178 x691 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x215 x519 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x954 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x836 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 x11 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x330 x11 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x332 x501 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346 (x715 x254) (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x377 x220 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x691 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x423 x523 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x183 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x539 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x471 x814 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x501 x332 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x423 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x534 x371 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x539 x471 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x612 x558 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x653 x699 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x660 x178 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x178 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x387 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x814 x471 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x816 x178 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x822 x129 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x825 x25 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x234 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x954 x407 (uninterp_frac (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 (x715 x868) x447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x11 x319 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x11 x330 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x11 x432 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x129 x708 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x132 x652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x168 x132 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x175 x338 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x178 x691 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x215 x519 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x234 x954 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x243 x836 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x319 x11 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x330 x11 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x332 x501 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x346 (x715 x254) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x377 x220 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x387 x691 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x423 x523 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x471 x183 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x471 x539 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x471 x814 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x501 x332 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x523 x423 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x534 x371 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x539 x471 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x612 x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x653 x699 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x660 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x691 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x691 x387 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x814 x471 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x816 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x822 x129 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x825 x25 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x954 x234 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183 x954 x407 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 (x715 x868) x447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x11 x319 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x11 x330 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x11 x432 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x129 x708 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x132 x652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x168 x132 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x175 x338 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x178 x691 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x215 x519 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x234 x954 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x243 x836 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x319 x11 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x330 x11 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x332 x501 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x346 (x715 x254) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x377 x220 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x387 x691 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x423 x523 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x471 x183 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x471 x539 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x471 x814 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x501 x332 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x523 x423 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x534 x371 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x539 x471 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x612 x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x653 x699 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x660 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x691 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x691 x387 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x814 x471 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x816 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x822 x129 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x825 x25 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x954 x234 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x954 x407 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 (x715 x868) x447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x11 x319 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x11 x330 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x11 x432 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x129 x708 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x132 x652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x168 x132 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x175 x338 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x178 x691 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x215 x519 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x234 x954 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x243 x836 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x319 x11 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x330 x11 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x332 x501 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x346 (x715 x254) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x377 x220 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x387 x691 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x423 x523 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x471 x183 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x471 x539 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x471 x814 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x501 x332 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x523 x423 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x534 x371 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x539 x471 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x612 x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x653 x699 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x660 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x691 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x691 x387 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x814 x471 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x816 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x822 x129 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x825 x25 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x954 x234 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330 x954 x407 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 (x715 x868) x447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x11 x319 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x11 x330 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x11 x432 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x129 x708 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x132 x652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x168 x132 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x175 x338 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x178 x691 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x215 x519 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x234 x954 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x243 x836 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x319 x11 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x330 x11 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x332 x501 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x346 (x715 x254) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x377 x220 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x387 x691 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x423 x523 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x471 x183 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x471 x539 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x471 x814 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x501 x332 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x523 x423 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x534 x371 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x539 x471 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x612 x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x653 x699 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x660 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x691 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x691 x387 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x814 x471 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x816 x178 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x822 x129 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x825 x25 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x954 x234 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558 x954 x407 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)))
(assert (axiom_frac_bound x129 x183))
(assert (axiom_frac_zero x129 x183 (x715 x868) x447 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x11 x319 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x11 x330 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x11 x432 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x129 x708 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x132 x652 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x168 x132 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x175 x338 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x178 x691 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x215 x519 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x234 x954 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x243 x836 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x319 x11 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x330 x11 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x332 x501 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x346 (x715 x254) (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x377 x220 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x387 x691 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x423 x523 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x471 x183 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x471 x539 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x471 x814 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x501 x332 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x523 x423 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x534 x371 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x539 x471 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x612 x558 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x653 x699 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x660 x178 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x691 x178 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x691 x387 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x814 x471 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x816 x178 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x822 x129 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x825 x25 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x954 x234 (uninterp_frac x129 x183)))
(assert (axiom_frac_zero x129 x183 x954 x407 (uninterp_frac x129 x183)))
(assert (axiom_frac_bound x129 x330))
(assert (axiom_frac_zero x129 x330 (x715 x868) x447 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x11 x319 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x11 x330 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x11 x432 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x129 x708 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x132 x652 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x168 x132 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x175 x338 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x178 x691 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x215 x519 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x234 x954 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x243 x836 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x319 x11 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x330 x11 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x332 x501 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x346 (x715 x254) (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x377 x220 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x387 x691 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x423 x523 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x471 x183 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x471 x539 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x471 x814 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x501 x332 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x523 x423 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x534 x371 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x539 x471 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x612 x558 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x653 x699 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x660 x178 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x691 x178 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x691 x387 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x814 x471 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x816 x178 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x822 x129 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x825 x25 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x954 x234 (uninterp_frac x129 x330)))
(assert (axiom_frac_zero x129 x330 x954 x407 (uninterp_frac x129 x330)))
(assert (axiom_frac_bound x269 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 (x715 x868) x447 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x11 x319 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x11 x330 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x11 x432 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x129 x708 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x132 x652 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x168 x132 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x175 x338 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x178 x691 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x215 x519 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x234 x954 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x243 x836 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x319 x11 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x330 x11 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x332 x501 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x346 (x715 x254) (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x377 x220 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x387 x691 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x423 x523 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x471 x183 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x471 x539 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x471 x814 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x501 x332 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x523 x423 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x534 x371 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x539 x471 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x612 x558 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x653 x699 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x660 x178 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x691 x178 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x691 x387 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x814 x471 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x816 x178 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x822 x129 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x825 x25 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x954 x234 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x269 1461501637330902918203684832716283019655932542976 x954 x407 (uninterp_frac x269 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x269 374144419156711147060143317175368453031918731001856))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 (x715 x868) x447 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x11 x319 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x11 x330 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x11 x432 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x129 x708 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x132 x652 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x168 x132 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x175 x338 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x178 x691 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x215 x519 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x234 x954 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x243 x836 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x319 x11 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x330 x11 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x332 x501 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x346 (x715 x254) (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x377 x220 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x387 x691 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x423 x523 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x471 x183 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x471 x539 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x471 x814 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x501 x332 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x523 x423 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x534 x371 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x539 x471 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x612 x558 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x653 x699 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x660 x178 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x691 x178 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x691 x387 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x814 x471 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x816 x178 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x822 x129 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x825 x25 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x954 x234 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x269 374144419156711147060143317175368453031918731001856 x954 x407 (uninterp_frac x269 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_bound x509 2))
(assert (axiom_frac_zero x509 2 (x715 x868) x447 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x11 x319 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x11 x330 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x11 x432 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x129 x708 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x132 x652 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x168 x132 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x175 x338 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x178 x691 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x215 x519 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x234 x954 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x243 x836 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x319 x11 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x330 x11 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x332 x501 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x346 (x715 x254) (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x377 x220 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x387 x691 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x423 x523 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x471 x183 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x471 x539 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x471 x814 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x501 x332 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x523 x423 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x534 x371 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x539 x471 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x612 x558 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x653 x699 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x660 x178 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x691 x178 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x691 x387 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x814 x471 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x816 x178 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x822 x129 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x825 x25 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x954 x234 (uninterp_frac x509 2)))
(assert (axiom_frac_zero x509 2 x954 x407 (uninterp_frac x509 2)))
(assert (axiom_frac_bound x540 2))
(assert (axiom_frac_zero x540 2 (x715 x868) x447 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x11 x319 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x11 x330 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x11 x432 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x129 x708 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x132 x652 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x168 x132 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x175 x338 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x178 x691 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x215 x519 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x234 x954 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x243 x836 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x319 x11 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x330 x11 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x332 x501 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x346 (x715 x254) (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x377 x220 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x387 x691 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x423 x523 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x471 x183 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x471 x539 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x471 x814 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x501 x332 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x523 x423 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x534 x371 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x539 x471 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x612 x558 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x653 x699 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x660 x178 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x691 x178 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x691 x387 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x814 x471 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x816 x178 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x822 x129 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x825 x25 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x954 x234 (uninterp_frac x540 2)))
(assert (axiom_frac_zero x540 2 x954 x407 (uninterp_frac x540 2)))
(assert (axiom_frac_bound x571 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 (x715 x868) x447 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x11 x319 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x11 x330 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x11 x432 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x129 x708 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x132 x652 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x168 x132 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x175 x338 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x178 x691 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x215 x519 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x234 x954 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x243 x836 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x319 x11 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x330 x11 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x332 x501 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x346 (x715 x254) (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x377 x220 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x387 x691 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x423 x523 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x471 x183 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x471 x539 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x471 x814 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x501 x332 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x523 x423 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x534 x371 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x539 x471 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x612 x558 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x653 x699 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x660 x178 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x691 x178 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x691 x387 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x814 x471 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x816 x178 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x822 x129 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x825 x25 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x954 x234 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x571 1461501637330902918203684832716283019655932542976 x954 x407 (uninterp_frac x571 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x571 6277101735386680763835789423207666416102355444464034512896))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 (x715 x868) x447 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x11 x319 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x11 x330 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x11 x432 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x129 x708 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x132 x652 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x168 x132 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x175 x338 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x178 x691 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x215 x519 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x234 x954 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x243 x836 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x319 x11 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x330 x11 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x332 x501 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x346 (x715 x254) (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x377 x220 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x387 x691 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x423 x523 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x471 x183 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x471 x539 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x471 x814 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x501 x332 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x523 x423 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x534 x371 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x539 x471 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x612 x558 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x653 x699 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x660 x178 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x691 x178 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x691 x387 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x814 x471 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x816 x178 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x822 x129 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x825 x25 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x954 x234 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x571 6277101735386680763835789423207666416102355444464034512896 x954 x407 (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_bound x571 95780971304118053647396689196894323976171195136475136))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 (x715 x868) x447 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x11 x319 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x11 x330 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x11 x432 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x129 x708 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x132 x652 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x168 x132 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x175 x338 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x178 x691 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x215 x519 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x234 x954 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x243 x836 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x319 x11 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x330 x11 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x332 x501 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x346 (x715 x254) (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x377 x220 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x387 x691 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x423 x523 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x471 x183 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x471 x539 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x471 x814 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x501 x332 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x523 x423 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x534 x371 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x539 x471 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x612 x558 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x653 x699 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x660 x178 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x691 x178 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x691 x387 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x814 x471 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x816 x178 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x822 x129 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x825 x25 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x954 x234 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x571 95780971304118053647396689196894323976171195136475136 x954 x407 (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_bound x78 x561))
(assert (axiom_frac_zero x78 x561 (x715 x868) x447 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x11 x319 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x11 x330 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x11 x432 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x129 x708 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x132 x652 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x168 x132 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x175 x338 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x178 x691 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x215 x519 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x234 x954 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x243 x836 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x319 x11 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x330 x11 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x332 x501 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x346 (x715 x254) (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x377 x220 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x387 x691 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x423 x523 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x471 x183 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x471 x539 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x471 x814 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x501 x332 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x523 x423 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x534 x371 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x539 x471 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x612 x558 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x653 x699 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x660 x178 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x691 x178 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x691 x387 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x814 x471 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x816 x178 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x822 x129 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x825 x25 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x954 x234 (uninterp_frac x78 x561)))
(assert (axiom_frac_zero x78 x561 x954 x407 (uninterp_frac x78 x561)))
(assert (axiom_frac_bound x951 x687))
(assert (axiom_frac_zero x951 x687 (x715 x868) x447 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x11 x319 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x11 x330 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x11 x432 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x129 x708 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x132 x652 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x168 x132 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x175 x338 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x178 x691 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x215 x519 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x234 x954 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x243 x836 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x319 x11 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x330 x11 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x332 x501 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x346 (x715 x254) (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x377 x220 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x387 x691 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x423 x523 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x471 x183 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x471 x539 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x471 x814 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x501 x332 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x523 x423 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x534 x371 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x539 x471 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x612 x558 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x653 x699 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x660 x178 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x691 x178 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x691 x387 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x814 x471 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x816 x178 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x822 x129 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x825 x25 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x954 x234 (uninterp_frac x951 x687)))
(assert (axiom_frac_zero x951 x687 x954 x407 (uninterp_frac x951 x687)))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x128))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x146))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x189))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x2))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x216))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x247))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x262))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x264))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x279))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x282))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x322))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x334))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x348))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x472))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x499))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x523))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x53))
(assert (axiom_int_approximation x530))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x539))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x559))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x57))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x588))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x62))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x693))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x699))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x728))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x731))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x736))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x760))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x765))
(assert (axiom_int_approximation x768))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x802))
(assert (axiom_int_approximation x803))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x810))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x815))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x820))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x822))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x85))
(assert (axiom_int_approximation x851))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x859))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x870))
(assert (axiom_int_approximation x872))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x909))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x922))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x940))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x952))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x98))
(assert (x498 x258))
(assert (x920 x723))
(assert (x498 1461501637330902918203684832716283019655932542975))
(assert (x498 x42))
(assert (x920 x68))
(assert (x920 x544))
(assert (x920 x207))
(assert (x920 x962))
(assert (x920 x197))
(assert (x920 x754))
(assert (x920 x310))
(assert (= 274184521717934524641157099916833587244 (x268 (x685 274184521717934524641157099916833587244))))
(assert (x920 x286))
(assert (x920 x396))
(assert (x920 x543))
(assert (x920 x410))
(assert (= (=> (and (= (> (x314 (x685 274184521717934524641157099916833587233)) 0) x833) (>= x759 0) x832 (<= x239 1208925819614629174706175) (<= 0 x195) (= 274184521717934524641157099916833587233 x225) (>= 255 x591) (= x114 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x281 x633) x58 x5 (= x148 x754) (>= x591 0) (>= 255 x576) (>= x458 0) (<= 0 x364) (>= x239 0) (not (= x684 3257672857)) (= 274184521717934524641157099916833587233 x580) (>= x259 0) (>= x67 0) (<= 0 x676) (= x684 4272920204) (= (> (x314 (x685 274184521717934524641157099916833587231)) 0) x657) (>= x897 0) (>= x754 0) (= x458 x148) (>= 20282409603651670423947251286015 x183) (not (= 2362581449 x684)) (= (x565 256) x774) (= false x302) (= x355 4033150093) (= (x843 x200) x618) (>= 20282409603651670423947251286015 x265) (>= 1461501637330902918203684832716283019655932542975 x946) (>= 20282409603651670423947251286015 x635) (= (x531 x810) x720) (= (x565 160) x568) (> 1110625635 x291) (= 0 x181) (= x942 (x453 (x685 x633) (x734 1) 0)) (= (x278 (x685 274184521717934524641157099916833587233)) x912) (= x849 x435) (>= 255 x902) (> x286 0) (= (x565 128) x356) (= x427 (< 0 (x314 (x685 274184521717934524641157099916833587223)))) (>= x587 0) (< x239 1208925819614629174706176) (<= 0 x195) (>= 18446744073709551615 x757) (>= x810 0) (>= 18446744073709551615 x364) (<= x471 18446744073709551615) (>= x765 0) (= x375 (x453 (x685 x348) (x734 5) 0)) (= (or (and (= true (<= x720 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x720)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x720)) x370) (> 2068668150 x291) (>= x424 0) (= x433 x946) (>= x773 0) (< x195 1208925819614629174706176) (= x58 (< 0 (x314 (x685 274184521717934524641157099916833587211)))) (<= 0 x912) (= x759 (x278 (x685 274184521717934524641157099916833587223))) (<= 0 x330) (= x322 (x278 (x685 274184521717934524641157099916833587211))) (<= x618 65535) (> 1168994686 x291) (>= x635 0) (>= 18446744073709551615 x11) (>= 1208925819614629174706175 x67) (= x639 x181) (>= 18446744073709551615 x676) (= x619 (x565 128)) (<= 0 x471) (<= x74 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x514) (= (> (x314 (x685 274184521717934524641157099916833587227)) 0) x5) (>= 20282409603651670423947251286015 x810) (<= 0 x183) (= x517 (x314 (x685 274184521717934524641157099916833587211))) (not (> 4 x288)) (<= x391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x195 1208925819614629174706175) (<= 0 x265) (<= 0 x322) (= (x314 (x685 274184521717934524641157099916833587233)) x286) (<= 0 x625) x833 (>= x391 0) (>= 1208925819614629174706175 x589) (= x587 (x278 (x685 274184521717934524641157099916833587227))) (<= x522 18446744073709551615) (= (x565 224) x798) (< x810 20282409603651670423947251286016) (>= 1099511627775 x765) x427 (= (< 0 (x314 (x685 274184521717934524641157099916833587244))) x832) (>= 1208925819614629174706175 x195) (>= x589 0) (>= x239 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (= x200 (x453 (x685 x348) (x734 5) 0)) (<= x239 1208925819614629174706175) (= x794 (> (x314 (x685 274184521717934524641157099916833587235)) 0)) (>= 255 x259) (= false x481) (<= 0 x514) (= (x278 (x685 274184521717934524641157099916833587235)) x354) (not (< x291 950698303)) (<= x556 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x754) (= (x531 x440) x254) (= x291 950698303) (<= 0 x757) (<= x748 1099511627775) (not (> 2362581449 x684)) (= x288 4) x794 (= x529 (x565 256)) (>= x556 0) (or (and (<= x11 18446744073709551615) (= x440 x66) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x778) (and (< x778 0) (= (<= x778 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x531 x85) x670) (= (x549 20282409603651670423947251286015 x85) x505) (not (> x505 10141204801825835211973625643007)) (= x66 (x804 (- 0 x670))) x370 (< (* x11 x432) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x690 x85) (not (= x670 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (* x11 x432) x690) (> 18446744073709551616 x11) (= x432 (x549 20282409603651670423947251286015 x778)) (<= 0 x11) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x720)) (= x778 (x804 (- 0 x720)))) (and (not (or (> x720 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x720 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x720 0)))) (= x600 x752) (not (< 10141204801825835211973625643007 x838)) (= (x549 20282409603651670423947251286015 x720) x814) (= x838 (x549 20282409603651670423947251286015 x600)) (= x600 x440) (not x370) (< (* x814 x471) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 18446744073709551615 x471) (= (* x471 x814) x752) (> 18446744073709551616 x471) (<= 0 x471))) (<= 0 x618) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x960) (not (= 4062139261 x684)) (<= 0 x522) (= x897 x348) (<= 0 x748) (= false x476) (>= x11 0) (>= 1461501637330902918203684832716283019655932542975 x897) (<= x458 1461501637330902918203684832716283019655932542975) (<= 0 x404) (<= 0 x354) (>= x902 0) (= x960 (x198 x942)) (= x305 0) (= (x278 (x685 274184521717934524641157099916833587244)) x404) (>= x576 0) (>= 20282409603651670423947251286015 x330) (<= 0 x960) (< 0 x517) (= x508 128) (<= x424 1461501637330902918203684832716283019655932542975) (= x773 (x278 (x685 274184521717934524641157099916833587231))) (<= x348 1461501637330902918203684832716283019655932542975) (= false x153) (= x376 (x565 224)) (= x921 (x565 192)) (> 65536 x618) (= (x565 192) x277) (>= x74 0) x657 (>= x946 0) (= x810 (x661 x375)) (= x288 4) (= x849 x424) (= x919 (x565 160))) x636) x462))
(assert (x498 x382))
(assert (x920 x528))
(assert (x848 x263 x663))
(assert (x920 x433))
(assert (= 65536 (x268 (x734 65536))))
(assert (x920 x254))
(assert (x920 x558))
(assert (x920 x201))
(assert (= (=> (and (= x469 (ite x725 1 0)) (= (not x753) x725) (= x753 (or (and (= (<= x783 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x783)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x783)))) x36) x109))
(assert (x920 x509))
(assert (x920 x96))
(assert (x498 x893))
(assert (= (x734 18446744073709551615) (x685 18446744073709551615)))
(assert (= (or x468 (and (not x474) x246)) x542))
(assert (x920 x764))
(assert (x920 x164))
(assert (x920 x318))
(assert (x920 x296))
(assert (x297 x254))
(assert (x920 x351))
(assert (x920 x502))
(assert (x920 x561))
(assert (= 274184521717934524641157099916833587233 (x268 (x685 274184521717934524641157099916833587233))))
(assert (x498 x309))
(assert (x920 x787))
(assert (x920 x241))
(assert (x920 x376))
(assert (= (x268 (x685 x876)) x876))
(assert (x920 x588))
(assert (x920 x835))
(assert (x920 x917))
(assert (x920 x540))
(assert (x498 x486))
(assert (x498 x455))
(assert (x920 x889))
(assert (x498 x622))
(assert (x920 x497))
(assert (x920 x261))
(assert (= (x268 (x734 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (x498 x738))
(assert (x920 x704))
(assert (= (x268 (x734 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x920 x300))
(assert (x923 274184521717934524641157099916833587231))
(assert (x920 x175))
(assert (x920 x814))
(assert (x920 x354))
(assert (x920 x483))
(assert (x707 x248 x611))
(assert (x920 x282))
(assert (x498 x727))
(assert (x920 x293))
(assert (x294 x218 x23))
(assert (x920 x582))
(assert (x227 x125 x630))
(assert (x498 x84))
(assert (x920 x428))
(assert (x920 x172))
(assert (x498 x351))
(assert (x920 x258))
(assert (= (x685 1099511627775) (x734 1099511627775)))
(assert (x70 x868 x559))
(assert (x920 x299))
(assert (x707 x440 x537))
(assert (x920 x372))
(assert (x920 x120))
(assert (and (= (x569 10 27) 1000000000000000000000000000) (= (x569 10 23) 100000000000000000000000) (= (x569 10 16) 10000000000000000) (= (x569 10 11) 100000000000) (= 1000 (x569 10 3)) (= (x569 10 26) 100000000000000000000000000) (= 100000000000000000000 (x569 10 20)) (= (x569 10 29) 100000000000000000000000000000) (= (x569 10 1) 10) (= (x569 10 12) 1000000000000) (= 1000000000000000 (x569 10 15)) (= (x569 10 28) 10000000000000000000000000000) (= 1000000000000000000000 (x569 10 21)) (= (x569 10 2) 100) (= (x569 10 30) 1000000000000000000000000000000) (= 10000000000000000000 (x569 10 19)) (= 100000000 (x569 10 8)) (= 100000000000000 (x569 10 14)) (= (x569 10 25) 10000000000000000000000000) (= (x569 10 4) 10000) (= (x569 10 10) 10000000000) (= 1000000 (x569 10 6)) (= 10000000 (x569 10 7)) (= (x569 10 18) 1000000000000000000) (= (x569 10 0) 1) (= (x569 10 5) 100000) (= 10000000000000 (x569 10 13)) (= (x569 10 9) 1000000000) (= (x569 10 17) 100000000000000000) (= (x569 10 24) 1000000000000000000000000) (= 10000000000000000000000 (x569 10 22))))
(assert (x920 x248))
(assert (= x244 (or (and (not x426) x422) x793)))
(assert (x920 x568))
(assert (x707 x720 x821))
(assert (x498 x103))
(assert (x920 x710))
(assert (x920 x272))
(assert (= x877 (and x673 (not x312))))
(assert (x920 x852))
(assert (x707 x365 x918))
(assert (= (- (/ x571 95780971304118053647396689196894323976171195136475136) (uninterp_frac x571 95780971304118053647396689196894323976171195136475136)) (x916 x571 176)))
(assert (= 3889878717 (x268 (x734 3889878717))))
(assert (= (=> (and (= (> x149 0) x494) (= (x20 256) x526) (= x196 (uninterp_mod (* x346 (x715 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x516 (not x847)) (= x235 0) (= x346 (x549 340282366920938463463374607431768211455 x730)) (>= 1208925819614629174706175 x526) (= (and (= true (<= x730 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x730 0)) x847) (= x149 (x549 255 x218)) (= (x20 128) x899) (<= x899 1208925819614629174706175) (not (ite x516 x516 (and (= (<= x730 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 170141183460469231731687303715884105727 x730)))) (= (x20 160) x730)) (and (=> x494 x520) (=> (and (= x396 x196) (not x494)) x136))) x636))
(assert (x920 x309))
(assert (= x246 x244))
(assert (x920 x81))
(assert (x941 x308))
(assert (x498 x540))
(assert (= (x268 (x734 57896044618658097711785492504343953926634992332820282019728792003956564819968)) 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x920 x618))
(assert (x466 x957))
(assert (x920 x259))
(assert (x227 x84 x541))
(assert (x920 x148))
(assert (= (x734 20282409603651670423947251286016) (x685 20282409603651670423947251286016)))
(assert (= x819 (=> (and (= x741 (< 1 x446)) (= (x549 255 x218) x446) (not x741) (= x396 x221)) x136)))
(assert (x920 x805))
(assert (= (x268 (x734 1208925819614629174706175)) 1208925819614629174706175))
(assert (=> (< (- x382 1) 10000) (= (x685 x382) (x734 x382))))
(assert (x920 x900))
(assert (x920 x854))
(assert (x478 x618 x677))
(assert (x848 x528 x692))
(assert (x920 x64))
(assert (x920 x742))
(assert (x920 x358))
(assert (=> (< (- x917 1) 10000) (= (x734 x917) (x685 x917))))
(assert (x920 x269))
(assert (x923 x633))
(assert (= x884 (and x548 x55)))
(assert (x920 x435))
(assert (x920 x183))
(assert (x920 x391))
(assert (x920 x74))
(assert (x920 x11))
(assert (x920 x647))
(assert (x498 x521))
(assert (= (x734 4033150093) (x685 4033150093)))
(assert (x920 x870))
(assert (x920 x768))
(assert (x920 x635))
(assert (x920 x571))
(assert (x920 x708))
(assert (x920 x800))
(assert (= (x685 274184521717934524641157099916833587227) (x734 274184521717934524641157099916833587227)))
(assert (x920 x362))
(assert (x920 x420))
(assert (x920 x69))
(assert (x478 x540 x737))
(assert (x498 x125))
(assert (= (x268 (x734 115792089237316195423570985008687907853269984655499359237631748795939503996928)) 115792089237316195423570985008687907853269984655499359237631748795939503996928))
(assert (x920 x521))
(assert (x920 x322))
(assert (x498 x463))
(assert (x920 x94))
(assert (x70 x744 x714))
(assert (= 274184521717934524641157099916833587235 (x268 (x685 274184521717934524641157099916833587235))))
(assert (x707 x202 x251))
(assert (x498 x47))
(assert (= (x268 (x685 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x718 x81 x637))
(assert (x920 x348))
(assert (x920 x530))
(assert (x920 x4))
(assert (= (=> (= x63 (= x390 274184521717934524641157099916833587233)) (and (=> (not x63) x236) (=> (and (= x362 (x910 128)) (= (x910 160) x80) (= (x910 256) x120) (= x872 (x910 160)) (= (x453 (x685 x633) (x734 1) 0) x812) (= x271 160) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x807) (= 4 x188) (not (> 2362581449 x419)) (>= 1208925819614629174706175 x195) (not (< x188 4)) (> 1208925819614629174706176 x195) (not (= 2362581449 x419)) (= 4 x188) (= x698 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x192 (x910 224)) (>= x239 0) (= x400 (x314 (x685 274184521717934524641157099916833587233))) x63 (>= x391 0) (= x190 (x910 192)) (<= 0 x195) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (<= 0 x807) (> x400 0) (= x961 1) (= (x910 224) x385) (>= x625 0) (<= x391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x296 (x910 128)) (= x807 (x198 x812)) (= (x910 192) x562) (> 1208925819614629174706176 x239) (not (= 3257672857 x419)) (= x419 4272920204) (>= 1208925819614629174706175 x239) (not (= x419 4062139261)) (= (x910 256) x240)) x880))) x716))
(assert (= (x916 x509 1) (- (/ x509 2) (uninterp_frac x509 2))))
(assert (x498 x824))
(assert (x920 x952))
(assert (= (x685 1110625635) (x734 1110625635)))
(assert (x920 x551))
(assert (x923 x272))
(assert (x920 x313))
(assert (x920 x292))
(assert (x920 x280))
(assert (x920 x432))
(assert (x161 x372 x538))
(assert (x920 x961))
(assert (x498 x95))
(assert (= (x734 1099511627776) (x685 1099511627776)))
(assert (x920 x279))
(assert (x920 x335))
(assert (= (x268 (x734 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (x920 x695))
(assert (x920 x556))
(assert (x920 x660))
(assert (x920 x341))
(assert (x920 x664))
(assert (x920 x786))
(assert (x920 x625))
(assert (x920 x143))
(assert (x498 x613))
(assert (x920 x646))
(assert (x920 x938))
(assert (x920 x237))
(assert (x920 x720))
(assert (= (and x422 x426) x518))
(assert (x466 x116))
(assert (x920 x394))
(assert (x920 x676))
(assert (x920 x885))
(assert (x920 x536))
(assert (= (x734 3257672857) (x685 3257672857)))
(assert (not x462))
(assert (x920 x139))
(assert (x920 x260))
(assert (= (x268 (x734 170141183460469231731687303715884105727)) 170141183460469231731687303715884105727))
(assert (x941 x85))
(assert (x920 x203))
(assert (= x316 x599))
(assert (x920 x849))
(assert (x920 x223))
(assert (x920 x893))
(assert (x718 x727 x180))
(assert (x498 x342))
(assert (x920 x639))
(assert (= (x734 1208925819614629174706175) (x685 1208925819614629174706175)))
(assert (x920 x67))
(assert (x920 x946))
(assert (x920 x597))
(assert (x920 x221))
(assert (= (x685 1461501637330902918203684832716283019655932542975) (x734 1461501637330902918203684832716283019655932542975)))
(assert (x498 x571))
(assert (x707 x600 x416))
(assert (x498 x373))
(assert (x920 x437))
(assert (x920 x338))
(assert (x920 x178))
(assert (x920 x872))
(assert (x920 x875))
(assert (x920 x342))
(assert (= x55 (and x474 x246)))
(assert (x161 x824 x700))
(assert (x941 x440))
(assert (x920 x644))
(assert (= (x734 3889878717) (x685 3889878717)))
(assert (x920 x840))
(assert (= x27 (=> (and (= (and (= (<= x258 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x258 0)) x273) (>= 1208925819614629174706175 x768) (= x557 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x581) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x581)) (> 0 x581))) 1 0)) (= x199 x750) (= (ite (not x681) 1 0) x602) (>= 1208925819614629174706175 x927) (= (x804 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x581)) x261) (= (ite (or (and (= (<= x703 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x572 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x572 x703)) (and (<= x572 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x703))) 1 0) x894) (= x102 (x549 x557 x137)) (= (* x215 x519) x255) (not (= 0 x644)) (not (or (and (> 160 x77) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x77) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x77))) (= (not x273) x915) (= (x549 x602 x894) x241) (= x258 (x157 832)) (= x681 (or (> x581 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x581 0) (= (<= x581 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x383 640) x449) (= x768 (x157 800)) (= (x804 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x581)) x703) (= (x549 340282366920938463463374607431768211455 x258) x699) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572)) (= x750 (x659 (+ x572 x581))) (= x927 (x157 928)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x215 x519)) (= (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x261)) (< x572 x261)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x261) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572))) 1 0) x137) (= x215 (uninterp_mod (* x653 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x519 (x549 18446744073709551615 x463)) (= x102 0) (not (ite x915 x915 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x258)) (< 170141183460469231731687303715884105727 x258)))) (= x572 x255) (= x241 0) (= x463 (x325 672))) x767)))
(assert (x920 x225))
(assert (x920 x334))
(assert (x920 x576))
(assert (x920 x346))
(assert (x920 x862))
(assert (x498 x218))
(assert (x920 x165))
(assert (x498 x692))
(assert (= (- (/ x269 374144419156711147060143317175368453031918731001856) (uninterp_frac x269 374144419156711147060143317175368453031918731001856)) (x916 x269 168)))
(assert (= (x734 20282409603651670423947251286015) (x685 20282409603651670423947251286015)))
(assert (x920 x440))
(assert (x920 x171))
(assert (x70 x258 x828))
(assert (x478 x895 x461))
(assert (x920 x419))
(assert (x920 x945))
(assert (x920 x810))
(assert (x920 x291))
(assert (x920 x743))
(assert (x498 340282366920938463463374607431768211455))
(assert (= x506 (=> (and (= (uninterp_mod (* (x715 x868) x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x581) (= 0 x892) (= (and (= (<= x835 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x835 0)) x89) (= (not x89) x443) (= (x401 160) x835) (= (x401 128) x795) (= x447 (x549 340282366920938463463374607431768211455 x835)) (= x536 (x549 255 x218)) (<= x795 1208925819614629174706175) (not (ite x443 x443 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x835) true) (> x835 170141183460469231731687303715884105727)))) (= x764 (x401 256)) (= x474 (> x536 0)) (>= 1208925819614629174706175 x764)) (and (=> x474 x845) (=> (and (not x474) (= x581 x783)) x109)))))
(assert (= x511 (or (and x673 x312) (and x877 x632))))
(assert (x498 x201))
(assert (x920 x400))
(assert (x498 x730))
(assert (x920 x469))
(assert (x920 x519))
(assert (= (x268 (x734 3253611544)) 3253611544))
(assert (x920 x92))
(assert (x920 x332))
(assert (= (=> (and (= x751 (not (= x865 0))) (= x865 (x549 1 x618))) (and (=> (and (not x751) (= x196 x221)) x819) (=> x751 x947))) x520))
(assert (x920 x762))
(assert (x920 x359))
(assert (x920 x881))
(assert (x790 x957 x116))
(assert (x848 x622 x493))
(assert (x920 x25))
(assert (x920 x924))
(assert (x920 x215))
(assert (x920 x779))
(assert (x920 x78))
(assert (= (x734 170141183460469231731687303715884105727) (x685 170141183460469231731687303715884105727)))
(assert (x498 x528))
(assert (x498 x237))
(assert (x227 x95 x479))
(assert (= (x685 950698303) (x734 950698303)))
(assert (x920 x152))
(assert (x920 x454))
(assert (= 4033150093 (x268 (x734 4033150093))))
(assert (x920 x902))
(assert (x920 x281))
(assert (x920 x493))
(assert (x920 x61))
(assert (= 274184521717934524641157099916833587227 (x268 (x734 274184521717934524641157099916833587227))))
(assert (x498 x600))
(assert (x920 x789))
(assert (x920 x423))
(assert (x227 x613 x49))
(assert (x70 x254 x550))
(assert (x498 x646))
(assert (= 4272920204 (x268 (x734 4272920204))))
(assert (x920 x18))
(assert (x920 x602))
(assert (x920 x446))
(assert (x920 x750))
(assert (x920 x47))
(assert (x920 x691))
(assert (x920 x129))
(assert (= (x734 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x685 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x498 x202))
(assert (x920 x134))
(assert (x920 x110))
(assert (= (or (and x63 x856) (and x518 x776)) x347))
(assert (x923 274184521717934524641157099916833587233))
(assert (= (x734 4062139261) (x685 4062139261)))
(assert (x920 x147))
(assert (x923 274184521717934524641157099916833587211))
(assert (x920 x424))
(assert (= x917 (x268 (x685 x917))))
(assert (x498 x835))
(assert (x718 x582 x29))
(assert (= (x685 274184521717934524641157099916833587235) (x734 274184521717934524641157099916833587235)))
(assert (= (and x856 (not x63)) x594))
(assert (x920 x836))
(assert (x920 x865))
(assert (x498 x577))
(assert (= (=> (and (= 544 x544) (= (x549 18446744073709551615 x92) x293) (= (x675 x553) x653) (<= x653 340282366920938463463374607431768211455) (= x472 (x549 1461501637330902918203684832716283019655932542975 x875)) (= (x549 18446744073709551615 x84) x664) (= 800 x480) (= x312 (= 274184521717934524641157099916833587235 x472)) (<= 0 x653) (= x875 (x163 608)) (= (x477 576) x372) (> 340282366920938463463374607431768211456 x653) (= x173 (x453 (x685 x844) (x734 6) 0)) (= x917 (x549 1461501637330902918203684832716283019655932542975 x372)) (= x553 (x453 (x685 x917) x173 0)) (= x844 (x549 1461501637330902918203684832716283019655932542975 x382)) (= (x916 x269 168) x84)) (and (=> (and (= 4272920204 x53) (= 160 x77) (>= x589 0) (= x624 (x353 192)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x840) (not (= 3257672857 x53)) (<= x203 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x353 192) x811) (> x39 0) (= x922 (x353 224)) (<= 0 x203) (= x139 (x353 128)) x312 (= (x353 224) x266) (= x204 4) (>= x18 0) (= (x453 (x685 x633) (x734 1) 0) x904) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x18) (= x696 (x353 160)) (= x287 (x353 128)) (>= x212 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x212) (= (x651 x904) x18) (>= 1208925819614629174706175 x589) (<= 0 x67) (= x359 (x353 256)) (not (< x53 2362581449)) (<= x67 1208925819614629174706175) (= (x353 256) x945) (> 1208925819614629174706176 x67) (= x62 (x353 160)) (> 1208925819614629174706176 x589) (not (= 2362581449 x53)) (= 1 x644) (= x204 4) (= (x314 (x685 274184521717934524641157099916833587235)) x39) (not (= 4062139261 x53)) (not (< x204 4))) x27) (=> (not x312) x105))) x448))
(assert (x920 x202))
(assert (x920 x177))
(assert (x920 x672))
(assert (= x311 (=> (= x570 (or (and (< x581 0) (= true (<= x581 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x581))) (and (=> (and (not x570) (= 1 x469)) x36) (=> (and (= (x549 1461501637330902918203684832716283019655932542975 x571) x603) (= (x916 x571 192) x521) (= x515 (< 0 x509)) x570 (= (x916 x571 176) x486) (or (and (or (and (= (> x509 1) x586) (= x543 x92) (= x543 (uninterp_mod (* x612 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558)) x870) x389 (not (< x870 x612)) (or (and (= x524 (< 1 x909)) (= (x916 x509 1) x909) (= x299 (x549 1 x509)) (= x242 (= x299 0)) (= x612 (ite x242 1 10)) (not x524) (= 100 x558) x586) (and (= x612 1) (= x558 10) (not x586)))) (and (not x389) (= (x569 10 x509) x92))) x515 (= x128 (x549 x42 x47)) (= (ite (> 78 x509) 1 0) x47) (= 1 x528) (= x692 (ite (> 32 x509) 1 0)) (= (= 0 (x131 x128 x110)) x389) (= x110 (x549 x528 x692)) (= x42 1)) (and (= x92 1) (not x515))) (= x889 (x549 65535 x521)) (= x323 (x916 x571 160)) (= (x549 65535 x323) x732) (= (x549 255 x455) x509) (= (x549 255 x218) x614) (= (x549 65535 x486) x68) (= x455 (x916 x269 160)) (= x292 (x549 1461501637330902918203684832716283019655932542975 x269)) (> x614 0)) x448)))))
(assert (= 274184521717934524641157099916833587223 (x268 (x734 274184521717934524641157099916833587223))))
(assert (x498 x308))
(assert (x161 x348 x160))
(assert (x920 x77))
(assert (x920 x757))
(assert (= x880 (=> (and (= (x659 (+ x93 x196)) x604) (= x859 (x804 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x196))) (= (x549 340282366920938463463374607431768211455 x744) x220) (not (= 0 x961)) (= x93 x760) (< (* x534 x371) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x549 18446744073709551615 x723) x371) (= x627 (x549 x301 x678)) (= (* x534 x371) x760) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x271) (and (< x271 160) (= true (<= x271 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x231 0) (= x384 (and (< 0 x744) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x744) true))) (= x113 (x169 800)) (= (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x93) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x908)) (< x908 x93)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x908) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x93))) 1 0) x663) (= x604 x221) (= (x169 928) x166) (= x143 (x1 640)) (= (ite (or (and (> x859 x93) (= (<= x93 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x859))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x93) (<= x859 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x678) (= (not x384) x574) (= (x549 x263 x663) x231) (not (ite x574 x574 (and (= (<= x744 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x744 170141183460469231731687303715884105727)))) (= (uninterp_mod (* x377 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x534) (>= 1208925819614629174706175 x166) (= x627 0) (= x744 (x169 832)) (= x908 (x804 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x196))) (= (or (> x196 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x196 0) (= true (<= x196 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x694) (<= x113 1208925819614629174706175) (= x723 (x827 672)) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x196) (and (< x196 0) (= (<= x196 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) 1 0) x301) (= x263 (ite (not x694) 1 0)) (not (> x93 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x819)))
(assert (x920 x580))
(assert (x848 x602 x894))
(assert (x920 x526))
(assert (x920 x891))
(assert (x920 x84))
(assert (x920 x811))
(assert (x920 x951))
(assert (x920 x901))
(assert (= (x734 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x685 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x920 x557))
(assert (x920 x407))
(assert (x920 x899))
(assert (= 274184521717934524641157099916833587231 (x268 (x734 274184521717934524641157099916833587231))))
(assert (= (x685 3253611544) (x734 3253611544)))
(assert (x920 x85))
(assert (= (x916 x269 160) (- (/ x269 1461501637330902918203684832716283019655932542976) (uninterp_frac x269 1461501637330902918203684832716283019655932542976))))
(assert (x920 x936))
(assert (x848 x301 x678))
(assert (x920 x960))
(assert (x920 x879))
(assert (x920 x208))
(assert (= (or (and (not x494) x316) x414) x793))
(assert (x920 x778))
(assert (x920 x731))
(assert (x920 x235))
(assert (x941 x90))
(assert (x920 x319))
(assert (= x191 x360))
(assert (x498 x618))
(assert (x920 x803))
(assert (x920 x844))
(assert (x920 x802))
(assert (x920 x909))
(assert (x707 x342 x19))
(assert (x920 x330))
(assert (x920 x490))
(assert (x848 x893 x454))
(assert (x923 x917))
(assert (= (x685 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x734 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x920 x365))
(assert (x920 x220))
(assert (x920 x463))
(assert (= (and x877 (not x632)) x575))
(assert (x920 x247))
(assert (= x844 (x268 (x685 x844))))
(assert (x920 x48))
(assert (x920 x102))
(assert (= (x734 3638949393) (x685 3638949393)))
(assert (x498 x90))
(assert (x498 x778))
(assert (= x191 (or x542 (and x884 (not x570)))))
(assert (x227 x103 x728))
(assert (x920 x329))
(assert (x920 x748))
(assert (x920 x589))
(assert (x920 x404))
(assert (x920 x195))
(assert (x920 x382))
(assert (x920 x895))
(assert (x920 x692))
(assert (x920 x633))
(assert (x920 x566))
(assert (= x97 x631))
(assert (x920 x439))
(assert (= x939 (=> (and (= (x916 x269 168) x613) (= 800 x815) (= x377 (x675 x905)) (= x824 (x643 608)) (= x272 (x549 1461501637330902918203684832716283019655932542975 x348)) (= x307 (x453 (x685 x272) (x734 6) 0)) (<= 0 x377) (= (x797 576) x206) (>= 340282366920938463463374607431768211455 x377) (= x776 (= x390 274184521717934524641157099916833587235)) (= (x549 1461501637330902918203684832716283019655932542975 x824) x390) (= x16 (x549 18446744073709551615 x613)) (= 544 x313) (= x905 (x453 (x685 x876) x307 0)) (= (x549 18446744073709551615 x201) x805) (= (x549 1461501637330902918203684832716283019655932542975 x206) x876) (> 340282366920938463463374607431768211456 x377)) (and (=> (not x776) x716) (=> (and (not (= x940 4062139261)) (<= 0 x212) (<= x67 1208925819614629174706175) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x962) (= x334 (x40 128)) (= x473 (x40 160)) (= x57 (x40 256)) (<= x212 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x453 (x685 x633) (x734 1) 0) x689) (= x483 (x40 128)) (= 4 x785) (not (= x940 3257672857)) x776 (= x940 4272920204) (= (x40 160) x490) (= 1 x961) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x203) (> 1208925819614629174706176 x67) (<= 0 x589) (= x164 (x314 (x685 274184521717934524641157099916833587235))) (>= x640 0) (not (< x785 4)) (> 1208925819614629174706176 x589) (= x111 (x40 224)) (= x785 4) (<= 0 x203) (>= x67 0) (= x640 (x651 x689)) (= (x40 256) x177) (= (x40 224) x704) (= 160 x271) (not (< x940 2362581449)) (= x64 (x40 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x640) (>= 1208925819614629174706175 x589) (not (= x940 2362581449)) (< 0 x164) (= (x40 192) x801)) x880)))))
(assert (x707 x85 x799))
(assert (= 274184521717934524641157099916833587235 (x268 (x734 274184521717934524641157099916833587235))))
(assert (x498 x582))
(assert (x920 x937))
(assert (x920 x903))
(assert (= (=> (and (= x217 (= 0 x469)) (= x86 (not x217)) (= (ite x86 1 0) x938)) (=> (= (not (= x938 0)) x631) x97)) x36))
(assert (x920 x166))
(assert (x920 x306))
(assert (x920 x234))
(assert (x920 x517))
(assert (x920 x678))
(assert (x920 x53))
(assert (x920 x640))
(assert (x920 x709))
(assert (x498 x873))
(assert (x161 x269 x52))
(assert (x941 x248))
(assert (x920 x305))
(assert (x920 x308))
(assert (x498 x269))
(assert (x920 x773))
(assert (x920 x137))
(assert (x920 x824))
(assert (= (x685 340282366920938463463374607431768211455) (x734 340282366920938463463374607431768211455)))
(assert (x920 x957))
(assert (x294 x873 x83))
(assert (= (and x884 x570) x673))
(assert (x707 x665 x809))
(assert (x920 x823))
(assert (x498 x372))
(assert (x920 x732))
(assert (= (x734 1168994686) (x685 1168994686)))
(assert (= (x734 4272920204) (x685 4272920204)))
(assert (= (x268 (x734 1168994686)) 1168994686))
(assert (x498 x723))
(assert (x498 x248))
(assert (= (x268 (x734 20282409603651670423947251286016)) 20282409603651670423947251286016))
(assert (x920 x795))
(assert (= 274184521717934524641157099916833587227 (x268 (x685 274184521717934524641157099916833587227))))
(assert (= x382 (x268 (x685 x382))))
(assert (x920 x239))
(assert (x920 x87))
(assert (= x468 (or (and (not x548) x55) x511)))
(assert (x920 x72))
(assert (x920 x745))
(assert (x920 x922))
(assert (=> (< (- x844 1) 10000) (= (x685 x844) (x734 x844))))
(assert (x920 x14))
(assert (x920 x118))
(assert (x920 x919))
(assert (= (x268 (x734 3638949393)) 3638949393))
(assert (x920 x168))
(assert (x920 x196))
(assert (x920 x66))
(assert (x920 x948))
(assert (x920 x650))
(assert (x920 x186))
(assert (x920 x563))
(assert (x848 x557 x137))
(assert (x920 x622))
(assert (x498 x137))
(assert (= 18446744073709551615 (x268 (x734 18446744073709551615))))
(assert (x923 x844))
(assert (x920 x287))
(assert (x920 x765))
(assert (x920 x774))
(assert (= (x734 1208925819614629174706176) (x685 1208925819614629174706176)))
(assert (x920 x471))
(assert (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x268 (x734 115197700812830431890159100217698998050002284567939525164234024451216521560064))))
(assert (x498 x875))
(assert (x498 20282409603651670423947251286015))
(assert (x920 x385))
(assert (= 1110625635 (x268 (x734 1110625635))))
(assert (x498 18446744073709551615))
(assert (= (x685 18446744073709551616) (x734 18446744073709551616)))
(assert (x920 x738))
(assert (x920 x373))
(assert (x920 x188))
(assert (x920 x114))
(assert (x920 x546))
(assert (x920 x858))
(assert (x920 x42))
(assert (x920 x371))
(assert (x920 x590))
(assert (= x947 (=> (= x426 (or (and (= true (<= x196 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x196 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x196))) (and (=> (and (not x426) (= x223 1)) x598) (=> (and (= x873 (x916 x269 160)) (= (x916 x571 160) x81) (= (x549 65535 x727) x395) (= x260 (x549 65535 x582)) (= x484 (< 0 x540)) (= x668 (x549 1461501637330902918203684832716283019655932542975 x269)) x426 (or (and (= 1 x201) (not x484)) (and (or (and (not x112) (= (x569 10 x540) x201)) (and (= (> x540 1) x115) (not (< x186 x825)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)) x186) (= (uninterp_mod (* x825 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x439) x112 (or (and (= 1 x825) (not x115) (= 10 x25)) (and (= (= 0 x885) x634) (= x25 100) (= x925 (> x710 1)) (= x885 (x549 1 x540)) (not x925) (= (x916 x540 1) x710) x115 (= x825 (ite x634 1 10)))) (= x439 x201))) (= x116 (x549 x646 x351)) (= x420 (ite (< x540 78) 1 0)) (= x957 (x549 x309 x420)) (= (ite (> 32 x540) 1 0) x351) (= (= 0 (x131 x957 x116)) x112) (= x309 1) (= 1 x646) x484)) (= (x549 255 x218) x232) (= (x549 1461501637330902918203684832716283019655932542975 x571) x72) (= (x916 x571 176) x582) (= x540 (x549 255 x873)) (= x318 (x549 65535 x81)) (< 0 x232) (= x727 (x916 x571 192))) x939)))))
(assert (x920 x95))
(assert (x920 x592))
(assert (x920 x801))
(assert (x227 x463 x666))
(assert (x920 x451))
(assert (x920 x100))
(assert (x920 x387))
(assert (x498 x868))
(assert (x920 x897))
(assert (= (- (/ x571 1461501637330902918203684832716283019655932542976) (uninterp_frac x571 1461501637330902918203684832716283019655932542976)) (x916 x571 160)))
(assert (x920 x317))
(assert (x920 x39))
(assert (= (x268 (x734 1099511627775)) 1099511627775))
(assert (= (x685 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x734 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (=> (< (- x633 1) 10000) (= (x734 x633) (x685 x633))))
(assert (x920 x578))
(assert (x920 x264))
(assert (x498 x509))
(assert (x498 x81))
(assert (x498 x301))
(assert (x920 x181))
(assert (x920 x930))
(assert (x920 x7))
(assert (= (x734 65536) (x685 65536)))
(assert (= 65535 (x268 (x734 65535))))
(assert (x498 x254))
(assert (x498 x440))
(assert (x920 x355))
(assert (x227 x201 x3))
(assert (x923 x348))
(assert (x498 x810))
(assert (x920 x883))
(assert (x920 x438))
(assert (=> (> (+ 10000 1) x876) (= (x734 x876) (x685 x876))))
(assert (x498 x438))
(assert (= (x734 65535) (x685 65535)))
(assert (= (x916 x540 1) (- (/ x540 2) (uninterp_frac x540 2))))
(assert (= (x685 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x734 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x272 (x268 (x685 x272))))
(assert (x920 x123))
(assert (x920 x653))
(assert (x920 x243))
(assert (x920 x240))
(assert (x920 x740))
(assert (x161 x875 x393))
(assert (x70 x730 x724))
(assert (x920 x206))
(assert (x920 x380))
(assert (x920 x838))
(assert (= (x685 274184521717934524641157099916833587223) (x734 274184521717934524641157099916833587223)))
(assert (x920 x128))
(assert (x707 x577 x864))
(assert (= (x268 (x734 4062139261)) 4062139261))
(assert (x923 274184521717934524641157099916833587227))
(assert (= 10141204801825835211973625643007 (x268 (x734 10141204801825835211973625643007))))
(assert (x920 x495))
(assert (x161 x571 x638))
(assert (x920 x600))
(assert (=> (> (+ 10000 1) x272) (= (x685 x272) (x734 x272))))
(assert (x920 x944))
(assert (x707 x237 x717))
(assert (x498 65535))
(assert (x920 x683))
(assert (= x633 (x268 (x685 x633))))
(assert (x920 x954))
(assert (= (x734 2068668150) (x685 2068668150)))
(assert (x920 x572))
(assert (x920 x624))
(assert (= (and x518 (not x776)) x856))
(assert (x920 x613))
(assert (x920 x277))
(assert (x920 x398))
(assert (x498 1))
(assert (x920 x265))
(assert (x920 x458))
(assert (x920 x591))
(assert (x920 x604))
(assert (x920 x250))
(assert (x920 x399))
(assert (x920 x192))
(assert (x498 x557))
(assert (x920 x368))
(assert (x920 x727))
(assert (x920 x288))
(assert (=> (< (- x348 1) 10000) (= (x685 x348) (x734 x348))))
(assert (x498 x454))
(assert (and (= 4294967296 (x569 2 32)) (= 6277101735386680763835789423207666416102355444464034512896 (x569 2 192)) (= (x569 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x569 2 56) 72057594037927936) (= 281474976710656 (x569 2 48)) (= (x569 2 120) 1329227995784915872903807060280344576) (= 5708990770823839524233143877797980545530986496 (x569 2 152)) (= (x569 2 128) 340282366920938463463374607431768211456) (= (x569 2 168) 374144419156711147060143317175368453031918731001856) (= (x569 2 0) 1) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x569 2 232)) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x569 2 240)) (= (x569 2 144) 22300745198530623141535718272648361505980416) (= (x569 2 176) 95780971304118053647396689196894323976171195136475136) (= 5192296858534827628530496329220096 (x569 2 112)) (= 309485009821345068724781056 (x569 2 88)) (= 1461501637330902918203684832716283019655932542976 (x569 2 160)) (= (x569 2 64) 18446744073709551616) (= 16777216 (x569 2 24)) (= (x569 2 40) 1099511627776) (= 411376139330301510538742295639337626245683966408394965837152256 (x569 2 208)) (= (x569 2 8) 256) (= (x569 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x569 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= (x569 2 80) 1208925819614629174706176) (= (x569 2 216) 105312291668557186697918027683670432318895095400549111254310977536) (= (x569 2 96) 79228162514264337593543950336) (= 4722366482869645213696 (x569 2 72)) (= (x569 2 16) 65536) (= 20282409603651670423947251286016 (x569 2 104)) (= 24519928653854221733733552434404946937899825954937634816 (x569 2 184)) (= 87112285931760246646623899502532662132736 (x569 2 136)) (= (x569 2 200) 1606938044258990275541962092341162602522202993782792835301376)))
(assert (x920 x523))
(assert (x920 x62))
(assert (= x105 (=> (= (= 274184521717934524641157099916833587233 x472) x632) (and (=> (not x632) x369) (=> (and (= 4272920204 x891) (<= 0 x391) (< x195 1208925819614629174706176) (<= x608 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x282 4) (= (x32 224) x4) (< x239 1208925819614629174706176) (= x852 (x32 128)) (= 160 x77) (<= x195 1208925819614629174706175) (= (x32 160) x208) (>= 1208925819614629174706175 x239) (= (x32 224) x123) (>= x608 0) (<= 0 x625) (= 1 x644) (= x290 (x32 192)) (not (= 4062139261 x891)) (<= 0 x195) (= 4 x282) (= (x32 192) x563) (= (x32 128) x786) (<= x391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x314 (x685 274184521717934524641157099916833587233)) x588) (= x465 (x32 256)) (= x451 (x32 160)) (<= 0 x239) (= x194 (x453 (x685 x633) (x734 1) 0)) (= x683 (x32 256)) (not (= 3257672857 x891)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x341) (not (> 2362581449 x891)) x632 (not (< x282 4)) (< 0 x588) (not (= 2362581449 x891)) (= x608 (x198 x194)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)) x27)))))
(assert (x707 x810 x283))
(assert (x920 x344))
(assert (x920 x873))
(assert (= (x685 274184521717934524641157099916833587244) (x734 274184521717934524641157099916833587244)))
(assert (x923 274184521717934524641157099916833587223))
(assert true)
(assert (x498 x493))
(assert (x920 x587))
(assert (x920 x898))
(assert (x920 x698))
(assert (x12 x738 x38))
(assert (= 274184521717934524641157099916833587244 (x268 (x734 274184521717934524641157099916833587244))))
(assert (x920 x390))
(assert (x848 x309 x420))
(assert (x920 x303))
(assert (x498 x665))
(assert (x920 x465))
(assert (x920 x377))
(assert (x920 x395))
(assert (x920 x408))
(assert (x920 x684))
(assert (x920 x807))
(assert (x498 x348))
(assert (= (=> (and (= (not (= x937 0)) x548) (= (x549 1 x895) x937)) (and (=> (and (not x548) (= x199 x581)) x767) (=> x548 x311))) x845))
(assert (= (x734 274184521717934524641157099916833587211) (x685 274184521717934524641157099916833587211)))
(assert (x920 x204))
(assert (x920 x703))
(assert (x920 x744))
(assert (= 1208925819614629174706176 (x268 (x734 1208925819614629174706176))))
(assert (x920 x93))
(assert (x920 x80))
(assert (x920 x508))
(assert (x920 x480))
(assert (x920 x687))
(assert (= 2362581449 (x268 (x734 2362581449))))
(assert (x920 x16))
(assert (x161 x382 x499))
(assert (x920 x455))
(assert (x498 1099511627775))
(assert (x161 x206 x50))
(assert (x920 x876))
(assert (x920 x615))
(assert (x920 x713))
(assert (x920 x783))
(assert (x920 x892))
(assert (x920 x696))
(assert (x920 x912))
(assert (x920 x262))
(assert (x920 x199))
(assert (x498 x365))
(assert (x920 x665))
(assert (x920 x529))
(assert (x466 x128))
(assert (x920 x216))
(assert (x718 x521 x413))
(assert (x920 x668))
(assert (x920 x608))
(assert (x227 x723 x219))
(assert (x707 x778 x837))
(assert (x920 x868))
(assert (x718 x486 x257))
(assert (x297 x868))
(assert (x920 x57))
(assert (x920 x614))
(assert (x920 x730))
(assert (x498 x720))
(assert (x790 x128 x110))
(assert (x920 x663))
(assert (= x136 (=> (and (= (not x682) x99) (= x223 (ite x99 1 0)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x396) true) (> 0 x396)) (> x396 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x682)) x598)))
(assert (x498 x85))
(assert (x718 x323 x327))
(assert (= 1461501637330902918203684832716283019655932542975 (x268 (x734 1461501637330902918203684832716283019655932542975))))
(assert (x920 x116))
(assert (x498 x420))
(assert (x920 x113))
(assert (x498 x92))
(assert (x498 x206))
(assert (x920 x212))
(assert (x920 x103))
(assert (x920 x534))
(assert (x498 x678))
(assert (x920 x815))
(assert (= (x734 340282366920938463463374607431768211456) (x685 340282366920938463463374607431768211456)))
(assert (x920 x562))
(assert (x920 x785))
(assert (x920 x612))
(assert (x70 x835 x705))
(assert (x920 x447))
(assert (= (x685 2362581449) (x734 2362581449)))
(assert (x920 x603))
(assert (= x414 (or x347 (and x65 (not x751)))))
(assert (x498 x744))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x268 (x734 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x920 x90))
(assert (x920 x652))
(assert (x920 x825))
(assert (x848 x42 x47))
(assert (x920 x619))
(assert (x920 x655))
(assert (= 3257672857 (x268 (x734 3257672857))))
(assert (= (x916 x571 192) (- (/ x571 6277101735386680763835789423207666416102355444464034512896) (uninterp_frac x571 6277101735386680763835789423207666416102355444464034512896))))
(assert (x920 x759))
(assert (x920 x627))
(assert (x498 x263))
(assert (x920 x581))
(assert (x920 x111))
(assert (= (=> (and (= (x549 255 x218) x300) (not x726) (= x726 (> x300 1)) (= x783 x199)) x109) x767))
(assert (x707 x373 x350))
(assert (x920 x908))
(assert (x920 x514))
(assert (x466 x110))
(assert (= 274184521717934524641157099916833587211 (x268 (x685 274184521717934524641157099916833587211))))
(assert (x920 x271))
(assert (x920 x699))
(assert (x920 x859))
(assert (= (x268 (x685 x348)) x348))
(assert (= x236 true))
(assert (x920 x522))
(assert (= x369 true))
(assert (x920 x822))
(assert (x498 255))
(assert (x920 x501))
(assert (x498 x894))
(assert (x227 x92 x758))
(assert (= (x268 (x734 274184521717934524641157099916833587211)) 274184521717934524641157099916833587211))
(assert (x227 x438 x669))
(assert (x920 x323))
(assert (x920 x940))
(assert (= (x268 (x734 18446744073709551616)) 18446744073709551616))
(assert (x920 x539))
(assert (x920 x584))
(assert (x478 x509 x719))
(assert (x498 x323))
(assert (x920 x816))
(assert (x920 x894))
(assert (x920 x132))
(assert (x923 x876))
(assert (= (x268 (x734 950698303)) 950698303))
(assert (x920 x60))
(assert (x920 x290))
(assert (= 340282366920938463463374607431768211455 (x268 (x734 340282366920938463463374607431768211455))))
(assert (x920 x921))
(assert (x920 x125))
(assert (= (and x494 x316) x65))
(assert (x923 274184521717934524641157099916833587235))
(assert (x920 x577))
(assert (x920 x486))
(assert (x498 x602))
(assert (x941 x810))
(assert (x920 x472))
(assert (x707 x90 x339))
(assert (x923 274184521717934524641157099916833587244))
(assert (x498 x663))
(assert (x923 x382))
(assert (= (x685 274184521717934524641157099916833587231) (x734 274184521717934524641157099916833587231)))
(assert (x920 x701))
(assert (x920 x301))
(assert (= (x734 10141204801825835211973625643007) (x685 10141204801825835211973625643007)))
(assert (x498 x895))
(assert (x920 x670))
(assert (x920 x149))
(assert (= (x268 (x734 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x920 x15))
(assert (x848 x646 x351))
(assert (= x598 (=> (and (= (not x366) x386) (= (ite x386 1 0) x898) (= x366 (= 0 x223))) (=> (and (> x789 0) (not (= x193 3257672857)) (>= x713 0) (= 4272920204 x193) (<= x248 20282409603651670423947251286015) (> x952 3) (> 1099511627776 x60) (= x394 128) (>= x779 0) (not (= x193 2362581449)) (= x868 (x531 x90)) (= x450 (< 0 x129)) (= x60 x633) (>= 65535 x895) (> 1168994686 x495) (>= x248 0) (> 1208925819614629174706176 x195) (= (x658 224) x800) (= (x843 x931) x895) (> x7 0) (not (= x193 4062139261)) (>= x625 0) (= x96 x639) (= x22 (or (and (= true (<= x665 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x665 0)) (> x665 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 2068668150 x14)) (= x738 (x804 (- x633 x748))) (= x883 0) (not (< x60 x748)) (<= x779 1461501637330902918203684832716283019655932542975) (<= x171 1461501637330902918203684832716283019655932542975) (>= x399 0) (= (x549 1099511627775 x738) x129) (= x317 274184521717934524641157099916833587233) (= x745 (x658 128)) (<= 0 x171) (= (x658 256) x358) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (> 1208925819614629174706176 x239) (= (x658 256) x924) (= (x314 (x685 274184521717934524641157099916833587211)) x789) (= x435 x879) (= (x658 224) x566) (>= x748 0) (not (< x14 3638949393)) (= x148 x264) (<= x399 1461501637330902918203684832716283019655932542975) (= (not (= x898 0)) x340) (or (and (= x782 (< x660 x691)) (>= x183 0) (= (ite (< x742 x11) 1 0) x454) (= (x549 18446744073709551615 x438) x398) (< x183 20282409603651670423947251286016) (<= 0 x11) (= x949 x365) (= x471 x213) (< (+ x615 x471) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183)) x87) (= x406 x202) (<= 0 x471) (< x183 20282409603651670423947251286016) (<= x183 20282409603651670423947251286015) (> 18446744073709551616 x11) (= 0 x823) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x330)) x742) (<= 0 x11) (or x914 (and (> x183 0) (> 20282409603651670423947251286016 x183) (not (< 18446744073709551615 x762)) (<= x183 20282409603651670423947251286015) (= x736 x762) (= 0 x862) (= (x549 18446744073709551615 x95) x172) (>= x183 0) (= (uninterp_mod x129 x183) x862) (not x914) (= x762 (- (/ x129 x183) (uninterp_frac x129 x183))) (= x95 (+ x736 x33)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x514 x762)) (= x33 x514) (>= 18446744073709551615 x514) (>= x514 0) (> 18446744073709551616 x514) (>= 18446744073709551615 x95))) (<= x471 18446744073709551615) (>= x11 0) (< x11 18446744073709551616) (= (x549 x893 x454) x61) (< x183 20282409603651670423947251286016) (= x410 x851) (< x471 18446744073709551616) (= x130 (> x740 x330)) (<= x471 18446744073709551615) (> 18446744073709551616 x471) (= (x549 18446744073709551615 x103) x787) (<= 0 x330) (<= x11 18446744073709551615) (= x813 (* x11 x330)) x450 (> 20282409603651670423947251286016 x330) (>= 20282409603651670423947251286015 x330) (or (and (not x230) (= x310 x285) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x310 x590)) (= (+ x771 x155) x303) (= x310 x155) (= x822 x303) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x816 x178)) (not (> x303 18446744073709551615)) (= x590 x771) (= (* x816 x178) x285)) (and (= x652 (x804 (- x816 x660))) (< (+ x590 x100) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x280 (+ x442 x693)) (= x936 x500) (= x878 (* x660 x178)) (= (* x132 x652) x397) (= x936 x397) (= x590 x442) (not (> x147 18446744073709551615)) x230 (= x878 x100) (not (< x816 x660)) (< (* x132 x652) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x822 x147) (< (* x660 x178) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x378 x280) (= (+ x378 x500) x147) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x936 x280)) (= x693 x100))) (or (and (= x816 x134) (not x464) (= 0 x152) (= (- (/ x951 x687) (uninterp_frac x951 x687)) x134) (= (uninterp_mod x951 x687) x152)) (and (= 0 x816) x464)) (= x687 (x549 20282409603651670423947251286015 x237)) (< (* x243 x836) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x189 x11) (= (* x129 x708) x146) (>= 18446744073709551615 x103) (<= 0 x330) (< x330 20282409603651670423947251286016) (or x130 (and (< x330 20282409603651670423947251286016) (= x530 (- (/ x129 x330) (uninterp_frac x129 x330))) (= x958 x530) (= (uninterp_mod x129 x330) x408) (>= 18446744073709551615 x125) (= x522 x955) (= (x549 18446744073709551615 x125) x250) (> 18446744073709551616 x522) (> x330 0) (<= x522 18446744073709551615) (= 0 x408) (>= x522 0) (= x125 (+ x955 x958)) (< (+ x530 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< 18446744073709551615 x530)) (>= 20282409603651670423947251286015 x330) (not x130) (>= x330 0))) (>= 18446744073709551615 x11) (< (+ x410 x11) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite (< x87 x471) 1 0) x493) (= x214 x954) (<= x438 18446744073709551615) (= x146 x539) (or (and (not x782) (= x41 x654) (= x590 x626) (= x654 x708) (= x900 x328) (= x328 (* x691 x178)) (< (+ x590 x900) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x178 x691)) (= x234 (+ x626 x2)) (< (* x234 x954) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2 x900) (= x41 (* x954 x234)) (not (< 18446744073709551615 x654))) (and (= x929 x655) (= x279 x708) (= x168 (x804 (- x691 x660))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x165 x655)) (= x662 x590) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x168 x132)) (= x407 (+ x150 x929)) x782 (= x182 x584) (= (* x660 x178) x182) (= (+ x662 x656) x165) (= x656 x584) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x660 x178)) (= x279 x861) (< (+ x590 x584) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x861 (* x954 x407)) (= x150 x165) (= (* x168 x132) x117) (< (* x954 x407) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< x691 x660)) (= x655 x117) (not (< 18446744073709551615 x279)))) (< x11 18446744073709551616) (>= 20282409603651670423947251286015 x183) (= x167 (* x822 x129)) (= (* x330 x11) x406) (= x823 (x549 x622 x493)) (>= x183 0) (>= 18446744073709551615 x471) (<= 0 x183) (> 18446744073709551616 x11) (= x158 (= x330 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x822 x129)) (= x841 (= x561 0)) (< (* x175 x338) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x11 0) (> 18446744073709551616 x471) (= x167 x319) (>= x471 0) (= (x549 18446744073709551615 x103) x551) (= x851 (* x319 x11)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x691 x387)) (= 0 x61) (not (> x437 1)) (= x501 x787) (= x59 x615) (< x471 18446744073709551616) (= x237 x855) (= x813 x577) (= (+ x869 x213) x103) (<= x330 20282409603651670423947251286015) (= (< x183 x740) x914) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x539 x471)) (<= 0 x471) (= (> x816 x660) x230) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x129 x708)) (<= x11 18446744073709551615) (not (< 18446744073709551615 x410)) (= x903 (x549 18446744073709551615 x438)) (= (x804 (- 1 x437)) x387) (= (= 0 x183) x142) (= x561 (x549 20282409603651670423947251286015 x365)) (= x214 (* x387 x691)) (>= 20282409603651670423947251286015 x183) (= x464 (= 0 x687)) (not (> x615 18446744073709551615)) (= x869 x615) (= (ite (not x158) 1 0) x893) (<= 0 x330) (= x233 x410) (<= x330 20282409603651670423947251286015) (< x330 20282409603651670423947251286016) (or (and (= (uninterp_mod x78 x561) x672) (= 0 x672) (= x329 (- (/ x78 x561) (uninterp_frac x78 x561))) (not x841) (= x691 x329)) (and x841 (= x691 0))) (<= 0 x471) (<= x471 18446744073709551615) (= x951 (x549 20282409603651670423947251286015 x577)) (<= x11 18446744073709551615) (= x78 (x549 20282409603651670423947251286015 x202)) (= x59 (* x471 x539)) (< (* x11 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite (not x142) 1 0) x622) (= x438 (+ x233 x189)) (= x398 x423) (= (* x471 x183) x949) (= (* x471 x183) x855)) (and (not x450) (= x471 x501) (= x423 x11))) (not (< x14 3253611544)) (> 1110625635 x495) (= x858 x435) (<= 0 x930) (>= x264 0) (<= x368 1461501637330902918203684832716283019655932542975) (= (x314 (x685 274184521717934524641157099916833587211)) x7) (<= x264 1461501637330902918203684832716283019655932542975) (<= x748 1099511627775) (not (> 4 x502)) (not (> 4 x952)) (> x197 0) (= (x658 160) x780) (= true (<= x952 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x248 (x661 x295)) (not (< x193 2362581449)) (> 1099511627776 x748) (= (x198 x953) x713) (<= x382 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x930) (not (> 950698303 x495)) (= x295 (x453 (x685 x382) (x734 5) 0)) (= x665 (x531 x248)) (= x502 4) (= x118 x633) (= x148 x368) (= 274184521717934524641157099916833587233 x247) (or (and (= x650 (x804 (- 0 x647))) (= (x549 20282409603651670423947251286015 x373) x523) (not (= x665 115792089237316195423570985008687907853269984655499359237631748795939503996928)) x22 (<= x423 18446744073709551615) (= x650 x90) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x647)) (not (> x344 10141204801825835211973625643007)) (< x423 18446744073709551616) (= (x531 x308) x647) (<= 0 x423) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x373) (and (= true (<= x373 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x373)))) (= x820 (* x423 x523)) (= x373 (x804 (- 0 x665))) (= x344 (x549 20282409603651670423947251286015 x308)) (= x820 x308) (< (* x523 x423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (not (> x69 10141204801825835211973625643007)) (>= x501 0) (<= x501 18446744073709551615) (not x22) (= x711 x342) (< x501 18446744073709551616) (= x342 x90) (< (* x501 x332) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x549 20282409603651670423947251286015 x665) x332) (= (x549 20282409603651670423947251286015 x342) x69) (= x711 (* x332 x501)) (not (or (and (= (<= x665 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x665)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x665))))) (not (> 3889878717 x14)) (= x399 x879) (= x930 x858) (<= x195 1208925819614629174706175) (= x502 4) (= x382 x897) (= x197 (x314 (x685 274184521717934524641157099916833587233))) (<= 0 x195) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x597) (= (x453 (x685 x633) (x734 1) 0) x953) (= (x658 128) x94) (= 4033150093 x14) (= (x658 192) x671) (< x248 20282409603651670423947251286016) (>= x239 0) (>= x391 0) (= x883 x639) (= (x658 160) x695) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x713) (< x895 65536) (<= x239 1208925819614629174706175) (= (x453 (x685 x382) (x734 5) 0) x931) (= 0 x96) (< x495 2068668150) (= (x658 192) x380) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x391) (<= 0 x368) (>= x895 0) (not (= 3889878717 x14)) (= 950698303 x495) x340) x506))))
(assert (x920 x505))
(assert (x294 x455 x184))
(assert (x707 x308 x324))
(assert (x920 x364))
(assert (= (x685 274184521717934524641157099916833587233) (x734 274184521717934524641157099916833587233)))
(assert (x920 x780))
(assert (x920 x193))
(assert (x920 x190))
(assert (= true x599))
(assert (x920 x473))
(assert (= x422 (and x751 x65)))
(assert (x920 x263))
(assert (x920 x449))
(assert (x920 x218))
(assert (x920 x266))
(assert (x920 x927))
(assert (x920 x356))
(assert (= (x268 (x734 2068668150)) 2068668150))
(assert (x920 x671))
(assert (x920 x98))
(assert (x920 x231))
(assert (x920 x654))
(assert (x920 x798))
(assert (= (x268 (x734 1099511627776)) 1099511627776))
(assert (= (x268 (x685 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (x920 x232))
(check-sat)
