(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x1726 0)) (((x1088 (x3000 x1726) (x2353 Real)) (x2802 (x1467 x1726) (x1378 x1726) (x678 Real)) (x348 (x2464 Real)))))
(declare-fun x2945 () Real)
(declare-fun x2076 () Real)
(declare-fun x634 () Bool)
(declare-fun x15 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x1065 () Real)
(declare-fun x2380 () Real)
(declare-fun x1551 () Real)
(declare-fun x1317 (Real) Real)
(declare-fun x1180 () Real)
(declare-fun x2852 () Bool)
(declare-fun x1819 (Real) Real)
(declare-fun x2486 () Bool)
(declare-fun x71 (Real) Real)
(declare-fun x1160 (Real) Real)
(declare-fun x2971 () Real)
(declare-fun x2678 () Real)
(declare-fun x849 () Real)
(declare-fun x881 () Bool)
(declare-fun x1271 (Real) Real)
(declare-fun x1472 () Real)
(declare-fun x139 () Real)
(declare-fun x2697 () Real)
(declare-fun x1258 () Real)
(declare-fun x2477 () Real)
(declare-fun x2315 () Bool)
(declare-fun x278 () Real)
(declare-fun x628 () Bool)
(declare-fun x1181 (Real) Real)
(declare-fun x767 () Real)
(declare-fun x2876 () Real)
(declare-fun x1831 () Real)
(declare-fun x2271 (x1726) Real)
(declare-fun x2927 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x859 () Real)
(declare-fun x2824 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x2692 () Real)
(declare-fun x1091 () Real)
(declare-fun x2021 () Real)
(declare-fun x2444 () Real)
(declare-fun x1208 () Bool)
(declare-fun x610 () Real)
(declare-fun x2277 () Real)
(declare-fun x673 () Real)
(declare-fun x2451 () Real)
(declare-fun x153 () Real)
(declare-fun x1999 () x1726)
(declare-fun x2386 () Real)
(declare-fun x1436 () Real)
(declare-fun x683 () Bool)
(declare-fun x1362 () Real)
(declare-fun x1534 (Real) Real)
(declare-fun x959 () Real)
(declare-fun x625 () Real)
(declare-fun x2241 () Bool)
(declare-fun x1445 () Real)
(declare-fun x653 () Real)
(declare-fun x227 () Real)
(declare-fun x2149 () Real)
(declare-fun x2221 () Bool)
(declare-fun x1066 () Real)
(declare-fun x997 () Bool)
(declare-fun x461 () Real)
(declare-fun x950 () Real)
(declare-fun x155 () Real)
(declare-fun x1976 () Real)
(declare-fun x1832 () Real)
(declare-fun x280 () Real)
(declare-fun x811 () Real)
(declare-fun x3002 () Real)
(declare-fun x637 () Real)
(declare-fun x3048 () Real)
(declare-fun x1186 () Bool)
(declare-fun x734 () Real)
(declare-fun x982 () Real)
(declare-fun x599 () Real)
(declare-fun x568 () Real)
(declare-fun x3021 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1396 () Real)
(declare-fun x1974 () Real)
(declare-fun x2238 () Real)
(declare-fun x1774 (Real) Real)
(declare-fun x1870 () Real)
(declare-fun x309 () Real)
(declare-fun x2627 () Bool)
(declare-fun x58 () Real)
(declare-fun x2126 () Real)
(declare-fun x759 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x2492 () Real)
(declare-fun x1693 () Real)
(declare-fun x1925 () Real)
(declare-fun x526 () Real)
(declare-fun x1867 () Real)
(declare-fun x1848 () Real)
(declare-fun x924 () Real)
(declare-fun x1846 () Real)
(declare-fun x1267 () Real)
(declare-fun x2916 () Real)
(declare-fun x2715 () Bool)
(declare-fun x55 () Real)
(declare-fun x1422 () Real)
(declare-fun x2245 (Real) Real)
(declare-fun x366 () Real)
(declare-fun x2469 () Real)
(declare-fun x2407 () Bool)
(declare-fun x1678 () Real)
(declare-fun x993 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x1381 () Real)
(declare-fun x1025 () Bool)
(declare-fun x2901 () Real)
(declare-fun x3004 () Bool)
(declare-fun x1389 () Real)
(declare-fun x2223 () Real)
(declare-fun x2906 () Real)
(declare-fun x1336 () Bool)
(declare-fun x1465 () Real)
(declare-fun x473 () Real)
(declare-fun x1815 () Real)
(declare-fun x2586 () Real)
(declare-fun x2653 () Real)
(declare-fun x2738 () Real)
(declare-fun x1658 () Bool)
(declare-fun x18 () Real)
(declare-fun x1550 () Bool)
(declare-fun x2549 () Real)
(declare-fun x703 () Bool)
(declare-fun x2501 () Real)
(declare-fun x1058 () Bool)
(declare-fun x718 () Real)
(declare-fun x508 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x2556 () Real)
(declare-fun x1778 () Real)
(declare-fun x1662 () Bool)
(declare-fun x1358 () Real)
(declare-fun x433 () Real)
(declare-fun x1070 () Real)
(declare-fun x2078 () Bool)
(declare-fun x1196 () Real)
(declare-fun x2044 () Bool)
(declare-fun x2534 () Bool)
(declare-fun x563 () Real)
(declare-fun x2569 () Real)
(declare-fun x495 () Real)
(declare-fun x985 () Real)
(declare-fun x400 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x1449 () Real)
(declare-fun x502 () Real)
(declare-fun x1370 (Real) Real)
(declare-fun x2025 () Bool)
(declare-fun x132 () Bool)
(declare-fun x915 (Real) Real)
(declare-fun x629 () Real)
(declare-fun x2450 () Real)
(declare-fun x2770 () Real)
(declare-fun x2018 (Real) Real)
(declare-fun x427 () Bool)
(declare-fun x2849 () Real)
(declare-fun x884 () Bool)
(declare-fun x34 () Real)
(declare-fun x332 () Real)
(declare-fun x1475 () Real)
(declare-fun x63 (Real) Real)
(declare-fun x1587 () Real)
(declare-fun x1189 () Bool)
(declare-fun x2200 () Bool)
(declare-fun x2732 () Bool)
(declare-fun x2080 () Real)
(declare-fun x2660 () Real)
(declare-fun x2716 () Real)
(declare-fun x64 () Bool)
(declare-fun x129 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x1261 () Real)
(declare-fun x1022 () Real)
(declare-fun x207 () Bool)
(declare-fun x810 () Real)
(declare-fun x659 () Real)
(declare-fun x3046 () Real)
(declare-fun x932 () Real)
(declare-fun x288 () Real)
(declare-fun x2941 () Real)
(declare-fun x1453 () Real)
(declare-fun x1703 () Real)
(declare-fun x2879 () Real)
(declare-fun x2618 () Real)
(declare-fun x904 () Real)
(declare-fun x50 () Real)
(declare-fun x3020 () Real)
(declare-fun x115 () Real)
(declare-fun x521 () Real)
(declare-fun x1497 () Real)
(declare-fun x2042 () Real)
(declare-fun x1665 () Bool)
(declare-fun x3042 () Bool)
(declare-fun x1012 () Real)
(declare-fun x1674 () Real)
(declare-fun x1924 () Bool)
(declare-fun x420 () Real)
(declare-fun x965 () Real)
(declare-fun x1900 () Bool)
(declare-fun x2582 () Bool)
(declare-fun x3027 () Bool)
(declare-fun x1672 () Real)
(declare-fun x1917 () Bool)
(declare-fun x383 () Real)
(declare-fun x1311 () Bool)
(declare-fun x1002 () Real)
(declare-fun x973 () Real)
(declare-fun x796 () Real)
(declare-fun x128 () Bool)
(declare-fun x2784 () Real)
(declare-fun x11 () Real)
(declare-fun x394 () Real)
(declare-fun x2833 () Real)
(declare-fun x352 () Real)
(declare-fun x1712 () Real)
(declare-fun x1201 () Real)
(declare-fun x441 () Bool)
(declare-fun x2679 () Real)
(declare-fun x2748 () Bool)
(declare-fun x1339 () Real)
(declare-fun x1557 () Real)
(declare-fun x1864 () Real)
(declare-fun x1477 () Real)
(declare-fun x2229 () Real)
(declare-fun x2801 () Real)
(declare-fun x2474 () Real)
(declare-fun x1568 () Real)
(declare-fun x1076 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x2188 () Real)
(declare-fun x1773 () Real)
(declare-fun x532 () Real)
(declare-fun x416 () Real)
(declare-fun x1361 () Real)
(declare-fun x2249 () Bool)
(declare-fun x2997 (Real) Real)
(declare-fun x1735 () Bool)
(declare-fun x782 () Bool)
(declare-fun x1496 () Real)
(declare-fun x1748 () Real)
(declare-fun x1679 () Bool)
(declare-fun x446 () Real)
(declare-fun x1528 (Real) Real)
(declare-fun x210 () Bool)
(declare-fun x2993 (Real) Real)
(declare-fun x2706 () Bool)
(declare-fun x1350 () Real)
(declare-fun x2929 () Real)
(declare-fun x2002 () Bool)
(declare-fun x317 () Real)
(declare-fun x2038 () Real)
(declare-fun x1 () Real)
(declare-fun x2853 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x1386 () Real)
(declare-fun x449 () Real)
(declare-fun x2172 (Real) Real)
(declare-fun x1348 () Real)
(declare-fun x2937 () Real)
(declare-fun x3003 () Real)
(declare-fun x1972 () Real)
(declare-fun x2168 () Real)
(declare-fun x1278 () Real)
(declare-fun x2224 () Bool)
(declare-fun x2327 () Real)
(declare-fun x187 () Bool)
(declare-fun x1794 () Real)
(declare-fun x1087 () Real)
(declare-fun x2875 () Bool)
(declare-fun x2513 () Real)
(declare-fun x878 () Real)
(declare-fun x505 () Real)
(declare-fun x2153 () Real)
(declare-fun x2462 () Bool)
(declare-fun x2856 () Real)
(declare-fun x2009 () Real)
(declare-fun x991 () Bool)
(declare-fun x1036 () Real)
(declare-fun x1530 () Real)
(declare-fun x1481 () Bool)
(declare-fun x698 () Bool)
(declare-fun x1937 () Bool)
(declare-fun x2192 () Real)
(declare-fun x677 () Real)
(declare-fun x1301 () Bool)
(declare-fun x3005 () Bool)
(declare-fun x2053 () Real)
(declare-fun x1838 () Bool)
(declare-fun x1340 (Real) Real)
(declare-fun x2339 () Real)
(declare-fun x1943 () Real)
(declare-fun x458 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x2538 () Real)
(declare-fun x1966 (Real) Real)
(declare-fun x2156 (Real) Real)
(declare-fun x2118 () Bool)
(declare-fun x516 () Bool)
(declare-fun x641 () Bool)
(declare-fun x1360 () Real)
(declare-fun x1341 () Real)
(declare-fun x1784 () Real)
(declare-fun x1789 () Real)
(declare-fun x646 () Real)
(declare-fun x222 () Bool)
(declare-fun x3014 () Bool)
(declare-fun x2866 () Real)
(declare-fun x1927 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x744 () Bool)
(declare-fun x1742 () Real)
(declare-fun x2096 () Real)
(declare-fun x2598 () Real)
(declare-fun x84 () Bool)
(declare-fun x318 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x1878 () Real)
(declare-fun x2911 () Bool)
(declare-fun x537 () Bool)
(declare-fun x655 () Real)
(declare-fun x1296 () Bool)
(declare-fun x981 () Real)
(declare-fun x264 () Bool)
(declare-fun x2956 () Real)
(declare-fun x1907 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x2242 () Real)
(declare-fun x1247 () Bool)
(declare-fun x143 (x1726) Real)
(declare-fun x2086 () Bool)
(declare-fun x1245 () Real)
(declare-fun x2605 () Real)
(declare-fun x1542 () Real)
(declare-fun x1741 () Bool)
(declare-fun x1795 (Real) Real)
(declare-fun x2520 () Bool)
(declare-fun x1414 () Real)
(declare-fun x1163 () Real)
(declare-fun x1751 () Real)
(declare-fun x2789 () Real)
(declare-fun x451 () Real)
(declare-fun x2968 () Real)
(declare-fun x1948 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x1952 (Real) Real)
(declare-fun x104 (Real) Real)
(declare-fun x78 () Real)
(declare-fun x1388 () Bool)
(declare-fun x2601 () x1726)
(declare-fun x1468 () Bool)
(declare-fun x2984 () Real)
(declare-fun x4 () Bool)
(declare-fun x2343 () Real)
(declare-fun x2923 () Real)
(declare-fun x614 () Bool)
(declare-fun x3034 () Real)
(declare-fun x2102 () Bool)
(declare-fun x2409 () Real)
(declare-fun x550 () Real)
(declare-fun x2274 () Real)
(declare-fun x173 () Bool)
(declare-fun x1443 () Real)
(declare-fun x2965 () Real)
(declare-fun x814 () Real)
(declare-fun x1124 () Real)
(declare-fun x2574 () Bool)
(declare-fun x2425 () Real)
(declare-fun x615 () Bool)
(declare-fun x1716 () Real)
(declare-fun x2419 () x1726)
(declare-fun x631 () Real)
(declare-fun x2491 () Real)
(declare-fun x249 () Real)
(declare-fun x2298 () Real)
(declare-fun x489 () Bool)
(declare-fun x650 () Bool)
(declare-fun x336 () Real)
(declare-fun x787 () Real)
(declare-fun x45 () Real)
(declare-fun x1633 () Real)
(declare-fun x2203 () Bool)
(declare-fun x1274 () Real)
(declare-fun x2345 () Real)
(declare-fun x1575 (Real) Real)
(declare-fun x122 () Real)
(declare-fun x1634 () Real)
(declare-fun x2820 () Real)
(declare-fun x2015 () Bool)
(declare-fun x1692 () Real)
(declare-fun x1156 () Real)
(declare-fun x2276 () Real)
(declare-fun x2160 () Real)
(declare-fun x2321 () Real)
(declare-fun x804 () Real)
(declare-fun x3007 () Bool)
(declare-fun x1217 () Real)
(declare-fun x2858 (Real) Real)
(declare-fun x2928 () Real)
(declare-fun x2811 () Real)
(declare-fun x2043 () Real)
(declare-fun x2559 () Real)
(declare-fun x1373 () Real)
(declare-fun x649 () Bool)
(declare-fun x100 () Real)
(declare-fun x388 () Bool)
(declare-fun x2688 () Real)
(declare-fun x1934 () Bool)
(declare-fun x2890 () Real)
(declare-fun x748 () Real)
(declare-fun x2213 () Real)
(declare-fun x923 () Bool)
(declare-fun x2346 () Real)
(declare-fun x523 () Bool)
(declare-fun x1714 () Real)
(declare-fun x1074 () Real)
(declare-fun x2909 () Bool)
(declare-fun x633 () Bool)
(declare-fun x2553 () Real)
(declare-fun x1739 () Real)
(declare-fun x1897 () Real)
(declare-fun x694 () Real)
(declare-fun x1991 () Real)
(declare-fun x667 () Real)
(declare-fun x1752 () Bool)
(declare-fun x2502 () Real)
(declare-fun x2141 () Bool)
(declare-fun x414 () Real)
(declare-fun x1062 () Real)
(declare-fun x2720 (Real) Real)
(declare-fun x109 () Bool)
(declare-fun x2755 () Bool)
(declare-fun x1338 () Real)
(declare-fun x2532 () Real)
(declare-fun x791 () Real)
(declare-fun x431 () Bool)
(declare-fun x166 () Bool)
(declare-fun x205 (Real) Real)
(declare-fun x230 () Real)
(declare-fun x137 (Real) Real)
(declare-fun x1903 (Real) Real)
(declare-fun x1708 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x2615 () Real)
(declare-fun x663 () Bool)
(declare-fun x1646 () Real)
(declare-fun x1883 () Real)
(declare-fun x1102 () Real)
(declare-fun x1522 (Real) Real)
(declare-fun x2142 () Real)
(declare-fun x1424 () Real)
(declare-fun x1054 () Bool)
(declare-fun x2717 () Real)
(declare-fun x2106 () Real)
(declare-fun x1377 () Bool)
(declare-fun x2978 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x1593 () Real)
(declare-fun x2883 () Real)
(declare-fun x2356 () Real)
(declare-fun x2649 () Real)
(declare-fun x788 () Real)
(declare-fun x389 () Real)
(declare-fun x268 () x1726)
(declare-fun x2399 () Bool)
(declare-fun x1463 () Real)
(declare-fun x2762 () Real)
(declare-fun x957 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x828 () Real)
(declare-fun x2077 () Real)
(declare-fun x1049 () Real)
(declare-fun x1439 () Real)
(declare-fun x547 () Bool)
(declare-fun x2297 () Real)
(declare-fun x1259 () Real)
(declare-fun x1910 () Real)
(declare-fun x1051 () Real)
(declare-fun x1404 () Real)
(declare-fun x1956 () Bool)
(declare-fun x2318 () Real)
(declare-fun x676 () Bool)
(declare-fun x1871 () Real)
(declare-fun x255 () Bool)
(declare-fun x2209 () Real)
(declare-fun x79 () Real)
(declare-fun x507 () Real)
(declare-fun x2522 () Real)
(declare-fun x1327 () Bool)
(declare-fun x338 () Bool)
(declare-fun x2828 () Real)
(declare-fun x1516 () Real)
(declare-fun x1628 () Real)
(declare-fun x1935 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x851 () Real)
(declare-fun x757 () Real)
(declare-fun x25 () Real)
(declare-fun x2395 () Real)
(declare-fun x1011 () Bool)
(declare-fun x269 () Real)
(declare-fun x1759 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x360 () Real)
(declare-fun x1750 () Real)
(declare-fun x1601 () Real)
(declare-fun x1310 () Real)
(declare-fun x62 () Real)
(declare-fun x228 () Real)
(declare-fun x162 () Real)
(declare-fun x1371 () Bool)
(declare-fun x2682 () Bool)
(declare-fun x384 () Bool)
(declare-fun x708 () Bool)
(declare-fun x331 () Real)
(declare-fun x2639 () Real)
(declare-fun x234 () Bool)
(declare-fun x2418 () Real)
(declare-fun x2599 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x160 () Real)
(declare-fun x2670 () Real)
(declare-fun x1182 () Real)
(declare-fun x842 () Bool)
(declare-fun x43 () Real)
(declare-fun x2434 () Real)
(declare-fun x999 () Bool)
(declare-fun x2954 () Real)
(declare-fun x2265 () Real)
(declare-fun x1565 () Real)
(declare-fun x2344 () Real)
(declare-fun x2497 () Real)
(declare-fun x693 () Bool)
(declare-fun x1990 () Real)
(declare-fun x2174 () Bool)
(declare-fun x2250 () Real)
(declare-fun x925 () Bool)
(declare-fun x144 () Real)
(declare-fun x2779 () Real)
(declare-fun x870 () Bool)
(declare-fun x2246 () Real)
(declare-fun x2957 () Real)
(declare-fun x2509 () Real)
(declare-fun x2406 () Real)
(declare-fun x1756 () Real)
(declare-fun x1823 () Real)
(declare-fun x67 () Real)
(declare-fun x1027 () Bool)
(declare-fun x1545 () Real)
(declare-fun x863 () Real)
(declare-fun x60 () Real)
(declare-fun x1032 () Bool)
(declare-fun x1559 () Real)
(declare-fun x2379 () Real)
(declare-fun x2792 () Real)
(declare-fun x1326 () Bool)
(declare-fun x969 () Bool)
(declare-fun x396 (Real) Real)
(declare-fun x2323 () Bool)
(declare-fun x829 () Real)
(declare-fun x509 () Real)
(declare-fun x1806 () Bool)
(declare-fun x2496 (x1726) Real)
(declare-fun x1939 () Real)
(declare-fun x987 () Real)
(declare-fun x1509 () Bool)
(declare-fun x1669 () Real)
(declare-fun x880 () Real)
(declare-fun x896 () Bool)
(declare-fun x1063 () Real)
(declare-fun x1513 () Real)
(declare-fun x1488 () Bool)
(declare-fun x1873 () Real)
(declare-fun x1824 () Real)
(declare-fun x2831 () Real)
(declare-fun x325 () Real)
(declare-fun x978 () Bool)
(declare-fun x1077 () Real)
(declare-fun x1638 () Real)
(declare-fun x1444 () Real)
(declare-fun x853 () Bool)
(declare-fun x2374 () Bool)
(declare-fun x2033 () Real)
(declare-fun x638 () Real)
(declare-fun x1157 () Real)
(declare-fun x2263 () Real)
(declare-fun x426 () Real)
(declare-fun x2463 () Bool)
(declare-fun x1277 () Real)
(declare-fun x967 () Real)
(declare-fun x1615 () Real)
(declare-fun x2198 () Bool)
(declare-fun x1482 (Real) Real)
(declare-fun x1276 () Real)
(declare-fun x2592 () Real)
(declare-fun x476 () Real)
(declare-fun x1605 () Real)
(declare-fun x1014 () Real)
(declare-fun x299 () Real)
(declare-fun x2803 () Real)
(declare-fun x2367 () Real)
(declare-fun x579 () Real)
(declare-fun x2845 () Bool)
(declare-fun x217 () Real)
(declare-fun x321 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x1667 (Real) Real)
(declare-fun x553 () Real)
(declare-fun x1879 () Bool)
(declare-fun x945 () Real)
(declare-fun x418 () Real)
(declare-fun x1306 () Real)
(declare-fun x2056 () Bool)
(declare-fun x2101 () Bool)
(declare-fun x1328 (Real) Real)
(declare-fun x1643 () Real)
(declare-fun x13 () Bool)
(declare-fun x2630 () Real)
(declare-fun x2408 () Real)
(declare-fun x2060 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x169 () Real)
(declare-fun x656 () Real)
(declare-fun x2656 () Bool)
(declare-fun x2443 () Bool)
(declare-fun x916 () Real)
(declare-fun x2199 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x235 () Bool)
(declare-fun x2563 () Bool)
(declare-fun x765 () Bool)
(declare-fun x2983 () Real)
(declare-fun x428 () Real)
(declare-fun x773 () Bool)
(declare-fun x57 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x2430 () Real)
(declare-fun x858 () Real)
(declare-fun x177 () Real)
(declare-fun x1264 () Bool)
(declare-fun x1490 () Real)
(declare-fun x2973 () Real)
(declare-fun x766 () Real)
(declare-fun x1093 () Real)
(declare-fun x214 () Real)
(declare-fun x1250 () Real)
(declare-fun x2211 () Real)
(declare-fun x1954 () x1726)
(declare-fun x2439 () Real)
(declare-fun x1673 () Real)
(declare-fun x463 () Real)
(declare-fun x1085 () Bool)
(declare-fun x995 () Real)
(declare-fun x3052 () Bool)
(declare-fun x2178 () Real)
(declare-fun x2046 () Real)
(declare-fun x2739 () Real)
(declare-fun x2260 () Bool)
(declare-fun x1959 () Real)
(declare-fun x2132 () Real)
(declare-fun x869 () Real)
(declare-fun x2650 () Real)
(declare-fun x31 () Bool)
(declare-fun x747 () Bool)
(declare-fun x2173 () Bool)
(declare-fun x292 () Real)
(declare-fun x1318 () Real)
(declare-fun x2460 () Real)
(declare-fun x190 () Real)
(declare-fun x2206 () Real)
(declare-fun x761 () Bool)
(declare-fun x424 () Real)
(declare-fun x1142 () Real)
(declare-fun x375 () Real)
(declare-fun x1547 () Real)
(declare-fun x2974 () Real)
(declare-fun x203 () Real)
(declare-fun x1975 () Real)
(declare-fun x1901 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x2658 () Real)
(declare-fun x1035 () Bool)
(declare-fun x1963 () Real)
(declare-fun x2785 () Bool)
(declare-fun x1470 () Real)
(declare-fun x1569 () Real)
(declare-fun x2371 () Real)
(declare-fun x1200 () Real)
(declare-fun x135 () Bool)
(declare-fun x3033 () Real)
(declare-fun x342 () Bool)
(declare-fun x1710 () Real)
(declare-fun x1109 () x1726)
(declare-fun x147 () Real)
(declare-fun x1880 () Real)
(declare-fun x2398 () Real)
(declare-fun x1080 () Bool)
(declare-fun x737 () Real)
(declare-fun x2862 () Bool)
(declare-fun x364 () Real)
(declare-fun x297 () Real)
(declare-fun x1894 () Bool)
(declare-fun x2723 () Bool)
(declare-fun x14 () Real)
(declare-fun x2536 () Real)
(declare-fun x1791 () Real)
(declare-fun x1450 (Real) Real)
(declare-fun x541 () Real)
(declare-fun x1428 (x1726) Real)
(declare-fun x809 () Real)
(declare-fun x1462 () Real)
(declare-fun x2646 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x947 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x3036 () Real)
(declare-fun x914 () Real)
(declare-fun x2915 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x2967 () Real)
(declare-fun x1420 () Real)
(declare-fun x2891 () Real)
(declare-fun x1129 () Bool)
(declare-fun x382 () Real)
(declare-fun x1441 () Real)
(declare-fun x2447 () Bool)
(declare-fun x2331 () Real)
(declare-fun x543 () Real)
(declare-fun x2360 () Real)
(declare-fun x2555 () Real)
(declare-fun x1064 () Real)
(declare-fun x1841 () Bool)
(declare-fun x1555 () Real)
(declare-fun x1105 () Real)
(declare-fun x668 () Bool)
(declare-fun x2014 () Bool)
(declare-fun x1021 () Real)
(declare-fun x167 () Real)
(declare-fun x2742 () Real)
(declare-fun x282 () Bool)
(declare-fun x2835 () Real)
(declare-fun x2859 () Real)
(declare-fun x490 () Real)
(declare-fun x1221 () Real)
(declare-fun x988 () Real)
(declare-fun x2844 () x1726)
(declare-fun x1847 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x805 (Real) Real)
(declare-fun x32 () Bool)
(declare-fun x1556 () Real)
(declare-fun x481 () Real)
(declare-fun x435 () Bool)
(declare-fun x1251 () Real)
(declare-fun x2729 () Real)
(declare-fun x2155 () Real)
(declare-fun x455 () Real)
(declare-fun x2791 () Bool)
(declare-fun x2798 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x536 () Bool)
(declare-fun x29 () Bool)
(declare-fun x1224 () Real)
(declare-fun x876 () Real)
(declare-fun x1145 () Bool)
(declare-fun x1535 () Real)
(declare-fun x2871 () Real)
(declare-fun x1868 () Real)
(declare-fun x1607 () Bool)
(declare-fun x860 () Bool)
(declare-fun x1804 () Real)
(declare-fun x1305 () Real)
(declare-fun x2488 () Real)
(declare-fun x1862 () Real)
(declare-fun x2996 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x33 (Real) Real)
(declare-fun x121 () Bool)
(declare-fun x2030 () Real)
(declare-fun x1754 () Real)
(declare-fun x2767 () Real)
(declare-fun x237 () Real)
(declare-fun x2864 () Real)
(declare-fun x1084 () Bool)
(declare-fun x1837 () Real)
(declare-fun x339 () Real)
(declare-fun x1621 () Bool)
(declare-fun x1720 () Real)
(declare-fun x1753 () Bool)
(declare-fun x390 () Real)
(declare-fun x818 () Real)
(declare-fun x252 () Real)
(declare-fun x2552 () Real)
(declare-fun x2016 () Real)
(declare-fun x675 () Real)
(declare-fun x1766 () Real)
(declare-fun x1400 () Real)
(declare-fun x2757 () Real)
(declare-fun x90 () Real)
(declare-fun x2112 () Real)
(declare-fun x131 () Real)
(declare-fun x577 () x1726)
(declare-fun x1695 () Real)
(declare-fun x2545 () Bool)
(declare-fun x1150 () Real)
(declare-fun x1517 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x1544 () Real)
(declare-fun x2128 () Real)
(declare-fun x1047 () Bool)
(declare-fun x2977 () Real)
(declare-fun x1856 () Bool)
(declare-fun x939 (Real) Real)
(declare-fun x1651 () Real)
(declare-fun x1977 (x1726) Real)
(declare-fun x2063 (Real) Real)
(declare-fun x146 () Bool)
(declare-fun x77 () Bool)
(declare-fun x2235 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x259 () Real)
(declare-fun x136 () Real)
(declare-fun x2476 () Bool)
(declare-fun x2631 () Bool)
(declare-fun x3031 () Real)
(declare-fun x1031 () Bool)
(declare-fun x1563 () Real)
(declare-fun x1571 () Real)
(declare-fun x1630 () Bool)
(declare-fun x1929 () Real)
(declare-fun x545 () Real)
(declare-fun x2519 () Real)
(declare-fun x3056 () Bool)
(declare-fun x2571 () Bool)
(declare-fun x775 () Real)
(declare-fun x1567 () Real)
(declare-fun x2895 () Bool)
(declare-fun x888 () Bool)
(declare-fun x684 () Real)
(declare-fun x2354 () Real)
(declare-fun x1782 (Real) Real)
(declare-fun x1936 () Real)
(declare-fun x700 () Real)
(declare-fun x1944 () Real)
(declare-fun x363 () Real)
(declare-fun x1997 () Bool)
(declare-fun x1611 (Real) Real)
(declare-fun x2255 (Real) Real)
(declare-fun x195 () Real)
(declare-fun x273 () Real)
(declare-fun x1293 () Real)
(declare-fun x485 () Real)
(declare-fun x154 () Real)
(declare-fun x1178 () Real)
(declare-fun x184 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x124 () Bool)
(declare-fun x283 (Real) Real)
(declare-fun x938 () Real)
(declare-fun x2942 () Real)
(declare-fun x1826 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x976 () Real)
(declare-fun x200 () Real)
(declare-fun x2309 () Real)
(declare-fun x367 () Real)
(declare-fun x1553 () Real)
(declare-fun x307 (Real) Real)
(declare-fun x1945 () Real)
(declare-fun x1459 () Real)
(declare-fun x2764 (Real) Real)
(declare-fun x2675 () Real)
(declare-fun x1617 () Real)
(declare-fun x1083 () Real)
(declare-fun x503 () Bool)
(declare-fun x975 () Real)
(declare-fun x1375 () Bool)
(declare-fun x1744 () Real)
(declare-fun x2662 () Bool)
(declare-fun x221 () Bool)
(declare-fun x2035 () Real)
(declare-fun x1800 () Real)
(declare-fun x1597 () Real)
(declare-fun x1696 () Bool)
(declare-fun x806 () Bool)
(declare-fun x2635 () Real)
(declare-fun x1365 () Real)
(declare-fun x2499 () Real)
(declare-fun x1637 () Bool)
(declare-fun x2936 () Real)
(declare-fun x1369 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1801 () Real)
(declare-fun x622 () Real)
(declare-fun x2578 () Bool)
(declare-fun x370 () Real)
(declare-fun x892 () Real)
(declare-fun x1009 () Real)
(declare-fun x832 () Real)
(declare-fun x1171 () Bool)
(declare-fun x1904 () Real)
(declare-fun x1960 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x244 () Bool)
(declare-fun x2570 () x1726)
(declare-fun x2416 () Real)
(declare-fun x2823 () Bool)
(declare-fun x1153 () Real)
(declare-fun x687 () Real)
(declare-fun x2636 () Real)
(declare-fun x2642 () Real)
(declare-fun x2130 () Real)
(declare-fun x578 () Bool)
(declare-fun x313 () Real)
(declare-fun x369 () Bool)
(declare-fun x108 () Real)
(declare-fun x2899 () Bool)
(declare-fun x1123 () Real)
(declare-fun x961 () Real)
(declare-fun x2926 () Bool)
(declare-fun x1029 (Real) Real)
(declare-fun x1402 () Real)
(declare-fun x2295 () Real)
(declare-fun x2070 () Bool)
(declare-fun x1882 () Real)
(declare-fun x2966 () Real)
(declare-fun x2994 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1024 () Real)
(declare-fun x1166 () Real)
(declare-fun x333 () Bool)
(declare-fun x1785 () Real)
(declare-fun x1110 () x1726)
(declare-fun x6 () Real)
(declare-fun x2440 () Real)
(declare-fun x730 () Bool)
(declare-fun x412 () Real)
(declare-fun x1071 () Real)
(declare-fun x1096 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x861 () Bool)
(declare-fun x762 () Real)
(declare-fun x484 () Real)
(declare-fun x1928 () Real)
(declare-fun x2061 () Real)
(declare-fun x1576 () Real)
(declare-fun x753 () Real)
(declare-fun x2591 () Real)
(declare-fun x2336 () Bool)
(declare-fun x371 () Real)
(declare-fun x1118 () Real)
(declare-fun x2167 (Real) Real)
(declare-fun x2105 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x272 () Real)
(declare-fun x2921 () Real)
(declare-fun x2624 () Real)
(declare-fun x51 () x1726)
(declare-fun x1458 () Bool)
(declare-fun x817 () Bool)
(declare-fun x1622 () Real)
(declare-fun x1484 () Real)
(declare-fun x955 () Real)
(declare-fun x1353 () Bool)
(declare-fun x130 (Real) Real)
(declare-fun x2039 () Bool)
(declare-fun x1619 (Real) Real)
(declare-fun x651 (Real) Real)
(declare-fun x240 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x1158 () Real)
(declare-fun x2357 () Real)
(declare-fun x1614 () Real)
(declare-fun x1699 () Bool)
(declare-fun x1392 () Real)
(declare-fun x2894 () Real)
(declare-fun x821 () Real)
(declare-fun x2435 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x2365 () Real)
(declare-fun x1775 () Bool)
(declare-fun x2914 () Real)
(declare-fun x65 () Real)
(declare-fun x2873 () Real)
(declare-fun x2542 () Real)
(declare-fun x2815 () Real)
(declare-fun x2377 () Bool)
(declare-fun x1383 () Real)
(declare-fun x2028 () Bool)
(declare-fun x657 (Real) Real)
(declare-fun x2737 () Bool)
(declare-fun x627 () Real)
(declare-fun x1734 () Bool)
(declare-fun x1308 () Real)
(declare-fun x514 () Real)
(declare-fun x2135 () Bool)
(declare-fun x450 () x1726)
(declare-fun x2550 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x798 (Real) Real)
(declare-fun x1762 (Real) Real)
(declare-fun x1333 () Real)
(declare-fun x2484 () Real)
(declare-fun x1275 () x1726)
(declare-fun x1592 (Real) x1726)
(declare-fun x152 () Bool)
(declare-fun x1238 () Real)
(declare-fun x1344 () Bool)
(declare-fun x175 () Bool)
(declare-fun x510 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x2932 () Bool)
(declare-fun x2698 () Real)
(declare-fun x964 () Real)
(declare-fun x1101 () Real)
(declare-fun x2869 () Real)
(declare-fun x181 () Bool)
(declare-fun x685 () Real)
(declare-fun x170 () Real)
(declare-fun x1770 () Real)
(declare-fun x3050 () Real)
(declare-fun x263 () Real)
(declare-fun x399 () Real)
(declare-fun x1657 () Bool)
(declare-fun x709 () Real)
(declare-fun x1398 () Real)
(declare-fun x1067 () Real)
(declare-fun x1962 () Real)
(declare-fun x1931 () Real)
(declare-fun x3025 () Real)
(declare-fun x862 () Real)
(declare-fun x158 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x1451 (Real) Real)
(declare-fun x2472 () Real)
(declare-fun x1650 () Bool)
(declare-fun x1524 () Real)
(declare-fun x2589 () Real)
(declare-fun x192 () Real)
(declare-fun x2690 () Real)
(declare-fun x588 () Bool)
(declare-fun x2026 () Real)
(declare-fun x72 () Real)
(declare-fun x1736 () Real)
(declare-fun x2972 () Real)
(declare-fun x2378 () Bool)
(declare-fun x1072 () Real)
(declare-fun x756 () Real)
(declare-fun x711 () Real)
(declare-fun x2387 () Real)
(declare-fun x487 () Real)
(declare-fun x2758 () Bool)
(declare-fun x2272 (x1726) Real)
(declare-fun x1836 () Real)
(declare-fun x1858 () Real)
(declare-fun x8 () Bool)
(declare-fun x2572 () Real)
(declare-fun x868 () Real)
(declare-fun x2057 () Real)
(declare-fun x549 () Real)
(declare-fun x609 (Real) Real)
(declare-fun x871 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1038 () Real)
(declare-fun x1322 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x770 () Real)
(declare-fun x1561 () Bool)
(declare-fun x1745 () Real)
(declare-fun x1827 () Real)
(declare-fun x794 () Real)
(declare-fun x1115 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x972 () Real)
(declare-fun x833 () Real)
(declare-fun x2131 () Real)
(declare-fun x565 () Real)
(declare-fun x1508 () Real)
(declare-fun x1446 () Real)
(declare-fun x310 () Real)
(declare-fun x875 () Real)
(declare-fun x929 () Real)
(declare-fun x725 (Real) Real)
(declare-fun x329 () Real)
(declare-fun x1432 () Real)
(declare-fun x2661 () Bool)
(declare-fun x1573 () Real)
(declare-fun x1777 (Real) Real)
(declare-fun x1654 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x2819 () Real)
(declare-fun x219 () Real)
(declare-fun x3039 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x1406 () Real)
(declare-fun x408 () Real)
(declare-fun x1455 (Real) Real)
(declare-fun x2348 () Bool)
(declare-fun x745 () Bool)
(declare-fun x359 () Real)
(declare-fun x91 () Bool)
(declare-fun x343 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x1240 () Real)
(declare-fun x2629 () Real)
(declare-fun x2151 () Real)
(declare-fun x2766 () Real)
(declare-fun x460 () Real)
(declare-fun x3044 () Real)
(declare-fun x2422 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1411 () Real)
(declare-fun x813 () Bool)
(declare-fun x314 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1039 () Real)
(declare-fun x1981 () x1726)
(declare-fun x2490 () Real)
(declare-fun x1447 () Bool)
(declare-fun x1079 () Real)
(declare-fun x2479 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x527 () Real)
(declare-fun x1405 () Bool)
(declare-fun x1164 () Real)
(declare-fun x1232 () Real)
(declare-fun x780 () Real)
(declare-fun x1706 () Real)
(declare-fun x1033 () Real)
(declare-fun x2048 () Real)
(declare-fun x2127 () Real)
(declare-fun x1225 () Real)
(declare-fun x1905 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x1331 () Real)
(declare-fun x2177 () Bool)
(declare-fun x2175 () Real)
(declare-fun x498 () Real)
(declare-fun x1347 () Real)
(declare-fun x2847 () Real)
(declare-fun x1626 () Bool)
(declare-fun x2703 () Real)
(declare-fun x358 () Bool)
(declare-fun x850 (x1726) Real)
(declare-fun x2373 () Real)
(declare-fun x2892 () Bool)
(declare-fun x647 () Real)
(declare-fun x1393 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x2719 () Bool)
(declare-fun x2665 () Real)
(declare-fun x2786 () Bool)
(declare-fun x2154 () Real)
(declare-fun x2710 () Real)
(declare-fun x2449 () Real)
(declare-fun x2072 () Bool)
(declare-fun x2179 () Real)
(declare-fun x3055 () Real)
(declare-fun x1086 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x2517 () Real)
(declare-fun x1395 () Real)
(declare-fun x2776 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x2826 () Real)
(declare-fun x171 () Real)
(declare-fun x558 () Real)
(declare-fun x2995 (Real) Real)
(declare-fun x740 () Bool)
(declare-fun x2121 (Real) Real)
(declare-fun x1043 () Real)
(declare-fun x1223 () Real)
(declare-fun x19 () Real)
(declare-fun x61 () Real)
(declare-fun x1584 () Real)
(declare-fun x2069 () Bool)
(declare-fun x2487 () Real)
(declare-fun x2335 () Real)
(declare-fun x1803 () Real)
(declare-fun x2342 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x2317 () x1726)
(declare-fun x2701 () Real)
(declare-fun x799 () Real)
(declare-fun x2214 () Real)
(declare-fun x1632 () Real)
(declare-fun x500 () Real)
(declare-fun x843 () Real)
(declare-fun x2609 () Real)
(declare-fun x385 () Real)
(declare-fun x1372 () Bool)
(declare-fun x2285 () Real)
(declare-fun x2143 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x754 () Bool)
(declare-fun x882 () Real)
(declare-fun x2774 () Real)
(declare-fun x792 () Real)
(declare-fun x781 () Real)
(declare-fun x1149 () Real)
(declare-fun x361 () Real)
(declare-fun x970 (Real) Real)
(declare-fun x1483 () Real)
(declare-fun x482 () Real)
(declare-fun x936 () Bool)
(declare-fun x2085 () Real)
(declare-fun x1591 () Bool)
(declare-fun x1942 (x1726) Real)
(declare-fun x182 () Real)
(declare-fun x294 () Real)
(declare-fun x556 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x1682 () Real)
(declare-fun x1788 () Real)
(declare-fun x2905 () Bool)
(declare-fun x2073 (Real) Real)
(declare-fun x2091 () Bool)
(declare-fun x2992 () Bool)
(declare-fun x1840 () Real)
(declare-fun x2410 () Real)
(declare-fun x2809 () Real)
(declare-fun x2426 (Real) Real)
(declare-fun x2962 () Real)
(declare-fun x946 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x1629 () Real)
(declare-fun x618 () Real)
(declare-fun x1743 () Real)
(declare-fun x1368 () Real)
(declare-fun x81 () Bool)
(declare-fun x2099 () Real)
(declare-fun x2455 () Real)
(declare-fun x2176 () Bool)
(declare-fun x157 () Real)
(declare-fun x2427 () Bool)
(declare-fun x2047 () Real)
(declare-fun x990 () Real)
(declare-fun x211 () Bool)
(declare-fun x2740 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x315 () Real)
(declare-fun x1521 () Real)
(declare-fun x2750 () Bool)
(declare-fun x2535 () Real)
(declare-fun x2854 () Real)
(declare-fun x3045 () Real)
(declare-fun x2351 () Real)
(declare-fun x1992 () Real)
(declare-fun x777 () Real)
(declare-fun x903 () Real)
(declare-fun x784 () Real)
(declare-fun x2275 () Real)
(declare-fun x1385 () Real)
(declare-fun x1887 () Real)
(declare-fun x561 () Real)
(declare-fun x2721 () Real)
(declare-fun x2623 () Real)
(declare-fun x1671 () Bool)
(declare-fun x2368 () Real)
(declare-fun x548 () Real)
(declare-fun x2981 () Bool)
(declare-fun x362 () Real)
(declare-fun x1725 () Real)
(declare-fun x2040 () Bool)
(declare-fun x2568 () Real)
(declare-fun x179 () Real)
(declare-fun x2773 () Real)
(declare-fun x1681 () Real)
(declare-fun x1886 () Real)
(declare-fun x1946 () Real)
(declare-fun x238 () Real)
(declare-fun x1325 (Real) Real)
(declare-fun x196 () Real)
(declare-fun x466 () Real)
(declare-fun x2081 () Real)
(declare-fun x639 () x1726)
(declare-fun x573 () Real)
(declare-fun x1860 () Bool)
(declare-fun x1916 () Real)
(declare-fun x1857 () Real)
(declare-fun x474 () Real)
(declare-fun x483 () Real)
(declare-fun x1155 () Real)
(declare-fun x1114 () Real)
(declare-fun x1705 () Real)
(declare-fun x429 () Real)
(declare-fun x2902 () Real)
(declare-fun x790 () Real)
(declare-fun x2150 () Real)
(declare-fun x1958 (Real) Real)
(declare-fun x710 () Bool)
(declare-fun x432 () Bool)
(declare-fun x2736 () Bool)
(declare-fun x1760 () Real)
(declare-fun x1797 () Real)
(declare-fun x2726 () Real)
(declare-fun x2428 () Real)
(declare-fun x1511 () Real)
(declare-fun x1128 () Real)
(declare-fun x1046 () Real)
(declare-fun x1346 () Real)
(declare-fun x816 () Real)
(declare-fun x212 () Bool)
(declare-fun x442 () Real)
(declare-fun x1577 () Real)
(declare-fun x1664 () Real)
(declare-fun x513 () Bool)
(declare-fun x393 () Real)
(declare-fun x3051 () Real)
(declare-fun x2328 (Real) Real)
(declare-fun x874 () Real)
(declare-fun x2248 () Real)
(declare-fun x1254 () Real)
(declare-fun x2608 () Bool)
(declare-fun x1151 () Real)
(declare-fun x2144 () Real)
(declare-fun x2364 () Real)
(declare-fun x812 () Real)
(declare-fun x2181 () Real)
(declare-fun x2358 () Real)
(declare-fun x837 () Bool)
(declare-fun x1523 () Real)
(declare-fun x3016 (Real) Real)
(declare-fun x542 () Real)
(declare-fun x386 () Real)
(declare-fun x1298 () Bool)
(declare-fun x518 () Real)
(declare-fun x1297 () Real)
(declare-fun x1985 () Real)
(declare-fun x933 () Real)
(declare-fun x2713 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x2311 () Real)
(declare-fun x285 () Real)
(declare-fun x1207 () Bool)
(declare-fun x300 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x2511 () Real)
(declare-fun x919 () Real)
(declare-fun x885 () Real)
(declare-fun x16 () Real)
(declare-fun x271 () Real)
(declare-fun x1583 () Real)
(declare-fun x2704 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x742 () Real)
(declare-fun x2341 () Real)
(declare-fun x512 () Real)
(declare-fun x2059 (Real Real) Real)
(declare-fun x1562 () Real)
(declare-fun x1779 () Bool)
(declare-fun x2514 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x479 () Bool)
(declare-fun x1464 () Real)
(declare-fun x180 () Real)
(declare-fun x1683 () Bool)
(declare-fun x2319 () Real)
(declare-fun x1476 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x2262 () Real)
(declare-fun x496 () Real)
(declare-fun x2170 () Real)
(declare-fun x2090 () Real)
(declare-fun x2672 () Bool)
(declare-fun x702 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x1755 () Real)
(declare-fun x2448 () Real)
(declare-fun x2347 () Real)
(declare-fun x355 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x138 () Real)
(declare-fun x436 () Real)
(declare-fun x1941 () Bool)
(declare-fun x42 () x1726)
(declare-fun x2466 () Real)
(declare-fun x801 (Real) Real)
(declare-fun x1642 () Real)
(declare-fun x540 () Bool)
(declare-fun x1211 () Real)
(declare-fun x387 () Bool)
(declare-fun x1492 () Real)
(declare-fun x2632 () Bool)
(declare-fun x2201 () Real)
(declare-fun x1330 () Real)
(declare-fun x1906 () Real)
(declare-fun x1666 () Real)
(declare-fun x2041 () Real)
(declare-fun x2256 () Real)
(declare-fun x186 () Real)
(declare-fun x1961 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x242 () Real)
(declare-fun x2045 () Bool)
(declare-fun x2846 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x2718 () Real)
(declare-fun x1746 () Bool)
(declare-fun x926 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x2795 (Real) Real)
(declare-fun x410 () Real)
(declare-fun x1816 () Real)
(declare-fun x24 () Real)
(declare-fun x2193 () Real)
(declare-fun x645 () Bool)
(declare-fun x2279 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x2897 () Real)
(declare-fun x572 () Real)
(declare-fun x1500 () Bool)
(declare-fun x1146 () Real)
(declare-fun x1056 () Real)
(declare-fun x2139 () Real)
(declare-fun x2593 () Real)
(declare-fun x2036 (Real) Real)
(declare-fun x40 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x215 () Bool)
(declare-fun x1399 () Real)
(declare-fun x3008 () Real)
(declare-fun x1069 () Real)
(declare-fun x1843 () Real)
(declare-fun x1461 () Real)
(declare-fun x189 () Bool)
(declare-fun x1933 () Real)
(declare-fun x2087 () Real)
(declare-fun x2385 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x905 () Real)
(declare-fun x2125 (Real) Real)
(declare-fun x2332 () Real)
(declare-fun x1425 (x1726) Real)
(declare-fun x2896 () Real)
(declare-fun x2296 () Real)
(declare-fun x35 () Real)
(declare-fun x2924 () Bool)
(declare-fun x111 () Bool)
(declare-fun x245 (Real) Real)
(declare-fun x415 () Real)
(declare-fun x296 () Real)
(declare-fun x555 () Real)
(declare-fun x3018 (Real) Real)
(declare-fun x2680 () x1726)
(declare-fun x197 () Real)
(declare-fun x2495 () Real)
(declare-fun x825 () Real)
(declare-fun x529 () Real)
(declare-fun x911 () Bool)
(declare-fun x2576 () Real)
(declare-fun x506 (Real) Real)
(declare-fun x803 () Real)
(declare-fun x406 (Real) Real)
(declare-fun x2058 () Real)
(declare-fun x395 () Real)
(declare-fun x2446 () Bool)
(declare-fun x2291 () Real)
(declare-fun x2084 () Real)
(declare-fun x30 () Real)
(declare-fun x721 () Real)
(declare-fun x1191 () Real)
(declare-fun x1430 () Real)
(declare-fun x486 () Real)
(declare-fun x1982 () Bool)
(declare-fun x457 () Real)
(declare-fun x2230 () Bool)
(declare-fun x1953 () Real)
(declare-fun x1303 () Real)
(declare-fun x674 () Real)
(declare-fun x2123 () Bool)
(declare-fun x2900 () Real)
(declare-fun x1487 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x2082 () Real)
(declare-fun x1719 () Bool)
(declare-fun x2006 () Real)
(declare-fun x2194 () Bool)
(declare-fun x1532 () Real)
(declare-fun x1610 () Real)
(declare-fun x1656 () Bool)
(declare-fun x2185 () Real)
(declare-fun x1299 () Real)
(declare-fun x590 () Real)
(declare-fun x9 () Real)
(declare-fun x257 () Real)
(declare-fun x819 () Real)
(declare-fun x598 () Real)
(declare-fun x1676 () Real)
(declare-fun x284 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x576 () Real)
(declare-fun x2423 () Bool)
(declare-fun x1859 () Real)
(declare-fun x3006 () Bool)
(declare-fun x2843 () Bool)
(declare-fun x447 () Real)
(declare-fun x258 () Real)
(declare-fun x586 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x1722 () Real)
(declare-fun x1793 () Bool)
(declare-fun x515 () Real)
(declare-fun x1376 () Bool)
(declare-fun x867 () Real)
(declare-fun x1921 () Real)
(declare-fun x632 () Bool)
(declare-fun x906 () Real)
(declare-fun x2799 () Real)
(declare-fun x1853 () Real)
(declare-fun x1315 () Real)
(declare-fun x2707 (Real) Real)
(declare-fun x2010 () Bool)
(declare-fun x440 () Real)
(declare-fun x681 () Real)
(declare-fun x1349 () Real)
(declare-fun x1895 () Real)
(declare-fun x1161 () Real)
(declare-fun x1139 () Real)
(declare-fun x1268 () Real)
(declare-fun x2711 () Real)
(declare-fun x643 () Real)
(declare-fun x1586 () Real)
(declare-fun x2959 () Bool)
(declare-fun x2546 () Real)
(declare-fun x86 () Real)
(declare-fun x1687 () Real)
(declare-fun x2666 () Bool)
(declare-fun x1566 () Real)
(declare-fun x1235 () Real)
(declare-fun x2117 () Bool)
(declare-fun x1585 () Real)
(declare-fun x1902 (Real) Real)
(declare-fun x3047 () Bool)
(declare-fun x1218 () Real)
(declare-fun x1996 (Real) Real)
(declare-fun x2305 () Real)
(declare-fun x2403 () Real)
(declare-fun x188 () Real)
(declare-fun x2453 () Real)
(declare-fun x1807 () Real)
(declare-fun x1172 () Bool)
(declare-fun x1810 (Real) Real)
(declare-fun x539 () Real)
(declare-fun x2107 () Real)
(declare-fun x1620 () Real)
(declare-fun x1119 () Real)
(declare-fun x133 () Bool)
(declare-fun x552 (Real) Real)
(declare-fun x2744 () Real)
(declare-fun x585 () Real)
(declare-fun x800 () Real)
(declare-fun x10 () Bool)
(declare-fun x1005 () Real)
(declare-fun x2359 () Real)
(declare-fun x1783 () Real)
(declare-fun x2329 () Bool)
(declare-fun x2806 () Real)
(declare-fun x1120 () Real)
(declare-fun x1249 () Real)
(declare-fun x1574 () Real)
(declare-fun x1209 () Real)
(declare-fun x1364 () Bool)
(declare-fun x776 () Bool)
(declare-fun x723 () Real)
(declare-fun x2515 () Bool)
(declare-fun x764 () Real)
(declare-fun x583 () Bool)
(declare-fun x373 () Real)
(declare-fun x425 () Real)
(declare-fun x524 () Real)
(declare-fun x779 () Real)
(declare-fun x601 () Bool)
(declare-fun x2621 () Real)
(declare-fun x1192 () Real)
(declare-fun x672 () Bool)
(declare-fun x2982 () Real)
(declare-fun x37 () Real)
(declare-fun x501 () Real)
(declare-fun x648 () Bool)
(declare-fun x2196 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x619 () Real)
(declare-fun x2654 () Bool)
(declare-fun x1930 () Real)
(declare-fun x1300 () Real)
(declare-fun x2999 () Bool)
(declare-fun x2493 () Real)
(declare-fun x2694 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x335 () x1726)
(declare-fun x452 () Real)
(declare-fun x2055 () Real)
(declare-fun x1197 () Real)
(declare-fun x1594 () Real)
(declare-fun x1095 (Real) Real)
(declare-fun x848 () Real)
(declare-fun x1660 () Real)
(declare-fun x857 () Real)
(declare-fun x1199 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x1438 () Real)
(declare-fun x423 (Real) Real)
(declare-fun x1202 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1707 () Real)
(declare-fun x1454 () Real)
(declare-fun x114 () Bool)
(declare-fun x571 () Bool)
(declare-fun x1821 () Real)
(declare-fun x1167 () Real)
(declare-fun x2458 () Real)
(declare-fun x1727 () Real)
(declare-fun x2146 () Real)
(declare-fun x311 () x1726)
(declare-fun x2886 () Real)
(declare-fun x1028 () Real)
(declare-fun x2481 () Real)
(declare-fun x612 () Real)
(declare-fun x2963 () Real)
(declare-fun x729 () Real)
(declare-fun x89 () Real)
(declare-fun x839 () x1726)
(declare-fun x774 () Real)
(declare-fun x1367 () Real)
(declare-fun x239 (x1726) Real)
(declare-fun x2731 () Real)
(declare-fun x772 () Real)
(declare-fun x471 () Real)
(declare-fun x2420 () Real)
(declare-fun x353 (Real) Real)
(declare-fun x895 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x566 () Bool)
(declare-fun x1418 () Real)
(declare-fun x2587 () Real)
(declare-fun x2857 () Real)
(declare-fun x1000 () Real)
(declare-fun x1688 () Real)
(declare-fun x101 () Bool)
(declare-fun x2494 () Real)
(declare-fun x2751 () Real)
(declare-fun x2349 () Real)
(declare-fun x920 () Real)
(declare-fun x106 () Real)
(declare-fun x736 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x2304 () Real)
(declare-fun x126 (x1726) Real)
(declare-fun x2525 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x1130 () x1726)
(declare-fun x3035 () Real)
(declare-fun x2673 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x2829 () Real)
(declare-fun x1227 () Bool)
(declare-fun x2104 () Real)
(declare-fun x492 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x996 () Bool)
(declare-fun x2292 () Bool)
(declare-fun x1809 () Real)
(declare-fun x1107 () Real)
(declare-fun x688 () Bool)
(declare-fun x1631 () Real)
(declare-fun x2239 () Real)
(declare-fun x70 () Real)
(declare-fun x2384 () Real)
(declare-fun x2878 () Real)
(declare-fun x2626 () Bool)
(declare-fun x265 () Bool)
(declare-fun x815 () Real)
(declare-fun x243 () Real)
(declare-fun x477 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x391 () Real)
(declare-fun x1193 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x2023 (Real) Real)
(declare-fun x807 (Real) Real)
(declare-fun x2870 () Real)
(declare-fun x1730 () Bool)
(declare-fun x2293 () Real)
(declare-fun x623 () Real)
(declare-fun x608 () Real)
(declare-fun x1342 () Bool)
(declare-fun x962 () Bool)
(declare-fun x1222 (Real) Real)
(declare-fun x2837 () Real)
(declare-fun x2903 () Bool)
(declare-fun x1732 () Real)
(declare-fun x1501 () Real)
(declare-fun x584 () Real)
(declare-fun x2184 () Real)
(declare-fun x1518 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x1875 () Real)
(declare-fun x2663 () Real)
(declare-fun x3022 () x1726)
(declare-fun x439 () Real)
(declare-fun x2429 () Real)
(declare-fun x1675 () Bool)
(declare-fun x1771 () Real)
(declare-fun x2401 () Real)
(declare-fun x1505 () Bool)
(declare-fun x763 () Bool)
(declare-fun x22 () Real)
(declare-fun x879 () Real)
(declare-fun x2696 () Bool)
(declare-fun x1175 () Real)
(declare-fun x1147 () Real)
(declare-fun x1606 () Real)
(declare-fun x2152 () Bool)
(declare-fun x422 () Real)
(declare-fun x2093 () Real)
(declare-fun x1440 () Real)
(declare-fun x2313 () Bool)
(declare-fun x2827 () Real)
(declare-fun x261 () Real)
(declare-fun x2885 () Bool)
(declare-fun x2640 () Real)
(declare-fun x2743 () Bool)
(declare-fun x491 () Real)
(declare-fun x1094 () Real)
(declare-fun x1415 () Real)
(declare-fun x1998 () Real)
(declare-fun x2288 (Real) Real)
(declare-fun x1697 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x1183 () Real)
(declare-fun x172 () Bool)
(declare-fun x1244 () Real)
(declare-fun x866 () Real)
(declare-fun x2637 () Real)
(declare-fun x1216 () Real)
(declare-fun x654 () Real)
(declare-fun x402 () Real)
(declare-fun x530 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x1677 () Real)
(declare-fun x1818 () Real)
(declare-fun x1919 () Real)
(declare-fun x2541 () Real)
(declare-fun x1589 () Real)
(declare-fun x1103 () Bool)
(declare-fun x306 () Real)
(declare-fun x1560 () Real)
(declare-fun x2596 () Real)
(declare-fun x1911 () Real)
(declare-fun x953 () Real)
(declare-fun x1829 () Real)
(declare-fun x1491 () Bool)
(declare-fun x2877 (Real Real) Real)
(declare-fun x1356 () Real)
(declare-fun x1580 () Real)
(declare-fun x1135 () Bool)
(declare-fun x1473 () Real)
(declare-fun x54 () Bool)
(declare-fun x856 () Real)
(declare-fun x1519 () Real)
(declare-fun x951 () Real)
(declare-fun x2783 (Real) Real)
(declare-fun x2975 () Real)
(declare-fun x2796 () Bool)
(declare-fun x2190 () Real)
(declare-fun x952 () Real)
(declare-fun x1787 () Bool)
(declare-fun x2507 (Real) Real)
(declare-fun x1384 () Bool)
(declare-fun x2611 () Real)
(declare-fun x2888 () Real)
(declare-fun x2603 () Real)
(declare-fun x771 () Real)
(declare-fun x2095 () Real)
(declare-fun x2389 () Bool)
(declare-fun x2524 () Real)
(declare-fun x1382 () Real)
(declare-fun x716 () Bool)
(declare-fun x595 (Real) Real)
(declare-fun x2989 () Real)
(declare-fun x1291 () Real)
(declare-fun x1653 () Bool)
(declare-fun x966 () Real)
(declare-fun x1717 () Bool)
(declare-fun x1729 () Bool)
(declare-fun x2397 (Real) Real)
(declare-fun x2778 () Real)
(declare-fun x1309 () Bool)
(declare-fun x697 () Bool)
(declare-fun x256 () Bool)
(declare-fun x1334 () x1726)
(declare-fun x2180 () x1726)
(declare-fun x605 () Real)
(declare-fun x971 () Real)
(declare-fun x690 () Bool)
(declare-fun x2987 () Real)
(declare-fun x1125 () Real)
(declare-fun x345 () Real)
(declare-fun x82 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x411 () Real)
(declare-fun x267 () Real)
(declare-fun x893 () Real)
(declare-fun x582 () Real)
(declare-fun x746 () Real)
(declare-fun x1537 () Bool)
(declare-fun x224 (Real) Real)
(declare-fun x2648 () Real)
(declare-fun x2772 () Real)
(declare-fun x199 () Bool)
(declare-fun x3011 () Real)
(declare-fun x2527 () Bool)
(declare-fun x1896 () Bool)
(declare-fun x2610 () Real)
(declare-fun x1448 () Bool)
(declare-fun x2284 () Real)
(declare-fun x1986 () Real)
(declare-fun x1252 () Real)
(declare-fun x2607 () Real)
(declare-fun x459 () Real)
(declare-fun x797 () Real)
(declare-fun x1737 () Real)
(declare-fun x983 () Real)
(declare-fun x93 () Bool)
(declare-fun x319 () Real)
(declare-fun x935 () Bool)
(declare-fun x46 () Real)
(declare-fun x2461 () Real)
(declare-fun x778 () Real)
(declare-fun x2947 () Bool)
(declare-fun x1469 () Real)
(declare-fun x2848 () Real)
(declare-fun x2186 () Real)
(declare-fun x201 () Real)
(declare-fun x1738 () Bool)
(declare-fun x2261 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x105 () Real)
(declare-fun x1768 () Real)
(declare-fun x2322 () Real)
(declare-fun x467 () Real)
(declare-fun x48 () Real)
(declare-fun x1890 () Real)
(declare-fun x1288 () Bool)
(declare-fun x2814 () Real)
(declare-fun x2019 () Bool)
(declare-fun x827 () Bool)
(declare-fun x295 () Real)
(declare-fun x499 () Real)
(declare-fun x1205 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x1162 () Real)
(declare-fun x194 () Real)
(declare-fun x142 () Bool)
(declare-fun x1006 () Real)
(declare-fun x2761 () Real)
(declare-fun x1608 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x293 () Real)
(declare-fun x570 () Real)
(declare-fun x2671 () Real)
(declare-fun x1319 () Bool)
(declare-fun x2129 () Real)
(declare-fun x145 () Real)
(declare-fun x2613 () Real)
(declare-fun x2917 () Real)
(declare-fun x246 () Real)
(declare-fun x1548 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x3009 () Real)
(declare-fun x1922 () x1726)
(declare-fun x98 () Real)
(declare-fun x1017 () Real)
(declare-fun x2547 (x1726) Real)
(declare-fun x1640 () Real)
(declare-fun x1410 () Bool)
(declare-fun x1704 () Real)
(declare-fun x2270 (Real) Real)
(declare-fun x2908 () Real)
(declare-fun x2746 (x1726) Real)
(declare-fun x2529 () x1726)
(declare-fun x1122 () Bool)
(declare-fun x836 () Bool)
(declare-fun x738 () Real)
(declare-fun x119 () Bool)
(declare-fun x2753 () x1726)
(declare-fun x347 () Bool)
(declare-fun x2564 () Real)
(declare-fun x2560 () Bool)
(declare-fun x2561 () Real)
(declare-fun x1994 () Real)
(declare-fun x662 () Bool)
(declare-fun x597 () Real)
(declare-fun x1909 () Real)
(declare-fun x2508 () Bool)
(declare-fun x2485 () Real)
(declare-fun x1229 () Real)
(declare-fun x281 () Real)
(declare-fun x2865 () Bool)
(declare-fun x2693 () Real)
(declare-fun x290 () Real)
(declare-fun x1431 () Real)
(declare-fun x907 () Bool)
(declare-fun x251 () Real)
(declare-fun x2393 () Bool)
(declare-fun x640 () Real)
(declare-fun x75 () Real)
(declare-fun x909 () Real)
(declare-fun x1718 () Real)
(declare-fun x1078 () Bool)
(declare-fun x2299 () Bool)
(declare-fun x958 () Real)
(declare-fun x2516 () Real)
(declare-fun x1068 () Real)
(declare-fun x1830 () Real)
(declare-fun x2674 () Bool)
(declare-fun x1579 () Real)
(declare-fun x855 () Real)
(declare-fun x2625 () Real)
(declare-fun x2518 () Real)
(declare-fun x213 () Real)
(declare-fun x1912 () Bool)
(declare-fun x1141 () Real)
(declare-fun x2037 () Real)
(declare-fun x602 () Bool)
(declare-fun x696 () Real)
(declare-fun x494 () Real)
(declare-fun x1627 () Real)
(declare-fun x1323 () Real)
(declare-fun x1154 () Real)
(declare-fun x1285 () Bool)
(declare-fun x954 () Real)
(declare-fun x2215 () Real)
(declare-fun x891 () Real)
(declare-fun x2120 () Real)
(declare-fun x1286 () Bool)
(declare-fun x1257 () Real)
(declare-fun x1892 () Bool)
(declare-fun x635 (x1726) Real)
(declare-fun x2253 () Real)
(declare-fun x444 () Real)
(declare-fun x226 () Bool)
(declare-fun x808 () Bool)
(declare-fun x2254 () Real)
(declare-fun x913 () Real)
(declare-fun x823 () Real)
(declare-fun x2769 () Bool)
(declare-fun x1648 () Real)
(declare-fun x707 () Bool)
(declare-fun x2383 () Real)
(declare-fun x1988 () Real)
(declare-fun x1106 () Real)
(declare-fun x1354 () Bool)
(declare-fun x611 () Real)
(declare-fun x250 () Real)
(declare-fun x695 () Bool)
(declare-fun x1828 () Real)
(declare-fun x116 () Real)
(declare-fun x2938 () Real)
(declare-fun x2813 () Real)
(declare-fun x713 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x979 () Real)
(declare-fun x2874 () Real)
(declare-fun x2759 () Bool)
(declare-fun x783 () Real)
(declare-fun x344 () Real)
(declare-fun x1920 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x2702 (x1726) Real)
(declare-fun x1357 () Bool)
(declare-fun x2747 () Real)
(declare-fun x2473 () Real)
(declare-fun x621 () Bool)
(declare-fun x41 () Bool)
(declare-fun x1169 () Real)
(declare-fun x1869 () Real)
(declare-fun x1329 () Real)
(declare-fun x968 () Real)
(declare-fun x1578 () Real)
(declare-fun x2216 () Real)
(declare-fun x94 () Bool)
(declare-fun x398 () Real)
(declare-fun x831 () Bool)
(declare-fun x2205 () Real)
(declare-fun x1623 () Real)
(declare-fun x438 () Real)
(declare-fun x2115 () Bool)
(declare-fun x644 () Real)
(declare-fun x2817 () Real)
(declare-fun x2912 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1226 (Real) Real)
(declare-fun x191 () Bool)
(declare-fun x2136 (Real) Real)
(declare-fun x1015 () Real)
(declare-fun x2760 () Real)
(declare-fun x437 () Bool)
(declare-fun x159 () Real)
(declare-fun x39 () x1726)
(declare-fun x2324 () Bool)
(declare-fun x2595 () Real)
(declare-fun x376 () Real)
(declare-fun x949 () Bool)
(declare-fun x2182 () Real)
(declare-fun x1324 () Real)
(declare-fun x2301 () Bool)
(declare-fun x204 () Bool)
(declare-fun x2991 () Real)
(declare-fun x1792 () Bool)
(declare-fun x1215 (Real) Real)
(declare-fun x2884 (Real Real) Real)
(declare-fun x2475 () Real)
(declare-fun x531 () Real)
(declare-fun x2034 () Real)
(declare-fun x2164 () Bool)
(declare-fun x727 () Real)
(declare-fun x899 () Real)
(declare-fun x1661 () Real)
(declare-fun x95 (Real) Real)
(declare-fun x320 () Bool)
(declare-fun x1034 () Real)
(declare-fun x596 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x682 () Bool)
(declare-fun x660 () Bool)
(declare-fun x2145 () Real)
(declare-fun x2530 () Bool)
(declare-fun x262 () Real)
(declare-fun x1023 () Bool)
(declare-fun x922 () Bool)
(declare-fun x575 () Real)
(declare-fun x464 () Bool)
(declare-fun x1098 () Real)
(declare-fun x247 () Real)
(declare-fun x2222 (Real) Real)
(declare-fun x872 () Bool)
(declare-fun x989 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x769 () Real)
(declare-fun x286 () Real)
(declare-fun x156 () Real)
(declare-fun x260 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x2124 () Real)
(declare-fun x327 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x2066 () Real)
(declare-fun x1995 () Bool)
(declare-fun x564 () Real)
(declare-fun x630 () Real)
(declare-fun x2686 () Real)
(declare-fun x1265 (Real) Real)
(declare-fun x185 () Real)
(declare-fun x1877 () Bool)
(declare-fun x1190 () Real)
(declare-fun x1965 () Bool)
(declare-fun x1572 () Real)
(declare-fun x1041 () Real)
(declare-fun x174 () Bool)
(declare-fun x1898 () Real)
(declare-fun x2825 () Real)
(declare-fun x900 () Bool)
(declare-fun x2376 () Bool)
(declare-fun x974 () Real)
(declare-fun x1514 () Bool)
(declare-fun x1442 () Real)
(declare-fun x2913 () Bool)
(declare-fun x1359 () Real)
(declare-fun x1407 () Real)
(declare-fun x980 () Real)
(declare-fun x2628 () Bool)
(declare-fun x2793 () Real)
(declare-fun x1874 () Bool)
(declare-fun x287 () Real)
(declare-fun x334 () Bool)
(declare-fun x1495 () x1726)
(declare-fun x1851 () Real)
(declare-fun x1289 () Bool)
(declare-fun x1234 () Real)
(declare-fun x699 () Real)
(declare-fun x2005 () Bool)
(declare-fun x960 () Bool)
(declare-fun x2267 () Bool)
(declare-fun x2898 (x1726) Real)
(declare-fun x504 () Bool)
(declare-fun x478 () Real)
(declare-fun x739 () Bool)
(declare-fun x2240 () Real)
(declare-fun x2634 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x1060 () Real)
(declare-fun x1195 () Real)
(declare-fun x2645 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x1294 () Real)
(declare-fun x323 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x1602 () Real)
(declare-fun x92 () Real)
(declare-fun x454 () Real)
(declare-fun x1616 () Bool)
(declare-fun x2361 () Real)
(declare-fun x720 (Real) Real)
(declare-fun x493 () Bool)
(declare-fun x2668 () Real)
(declare-fun x341 () x1726)
(declare-fun x123 () Real)
(declare-fun x2644 () Bool)
(declare-fun x847 () Real)
(declare-fun x3030 () Real)
(declare-fun x918 (Real) Real)
(declare-fun x2620 () Real)
(declare-fun x733 () Bool)
(declare-fun x2734 () Real)
(declare-fun x760 () Bool)
(declare-fun x2616 () Bool)
(declare-fun x2424 () Real)
(declare-fun x462 () Real)
(declare-fun x2363 () Real)
(declare-fun x1596 () Real)
(declare-fun x636 () Real)
(declare-fun x822 () Real)
(declare-fun x2861 () Bool)
(declare-fun x2071 () Real)
(declare-fun x404 () Bool)
(declare-fun x1724 () Real)
(declare-fun x1426 () Real)
(declare-fun x2588 () Bool)
(declare-fun x99 () Real)
(declare-fun x1020 () Bool)
(declare-fun x2745 () Real)
(declare-fun x898 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x2219 () Real)
(declare-fun x88 () Real)
(declare-fun x112 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x2794 () Real)
(declare-fun x2054 () Real)
(declare-fun x1764 () Real)
(declare-fun x1345 () Bool)
(declare-fun x3054 (x1726) Real)
(declare-fun x824 () Real)
(declare-fun x1007 () Bool)
(declare-fun x2922 () Real)
(declare-fun x127 () Real)
(declare-fun x2436 () Real)
(declare-fun x2228 () Real)
(declare-fun x1179 () Real)
(declare-fun x1272 () Real)
(declare-fun x2303 () Bool)
(declare-fun x2986 (Real) Real)
(declare-fun x1073 () Real)
(declare-fun x1082 () Bool)
(declare-fun x2402 () Real)
(declare-fun x1168 () Real)
(declare-fun x2822 () Bool)
(declare-fun x1701 () Real)
(declare-fun x316 () Bool)
(declare-fun x2134 () Real)
(declare-fun x1010 () Real)
(declare-fun x229 () Bool)
(declare-fun x2433 () Real)
(declare-fun x141 () Bool)
(declare-fun x2594 () Real)
(declare-fun x305 () Bool)
(declare-fun x1239 () Real)
(declare-fun x419 () Real)
(declare-fun x2340 () Bool)
(declare-fun x1090 (Real) Real)
(declare-fun x2266 () Real)
(declare-fun x1529 () Real)
(declare-fun x2788 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x751 () Real)
(declare-fun x732 () Real)
(declare-fun x1811 () Real)
(declare-fun x992 () Real)
(declare-fun x1423 () Real)
(declare-fun x1964 () Real)
(declare-fun x2554 () Bool)
(declare-fun x2259 (Real) Real)
(declare-fun x1335 () Bool)
(declare-fun x886 () Bool)
(declare-fun x2689 () Bool)
(declare-fun x2140 () Bool)
(declare-fun x2191 () Real)
(declare-fun x1421 () Bool)
(declare-fun x497 () Real)
(declare-fun x2930 () Bool)
(declare-fun x894 () Bool)
(declare-fun x1914 () Real)
(declare-fun x2227 () Real)
(declare-fun x2722 () Real)
(declare-fun x5 () Real)
(declare-fun x2695 () Real)
(declare-fun x2287 () Real)
(declare-fun x2851 () Bool)
(declare-fun x2049 () Real)
(declare-fun x356 () Real)
(declare-fun x889 () Real)
(declare-fun x1863 (Real) Real)
(declare-fun x830 () Bool)
(declare-fun x1812 () Real)
(declare-fun x1159 () Bool)
(declare-fun x517 () Real)
(declare-fun x2728 () Real)
(declare-fun x302 (Real) Real)
(declare-fun x2212 () Real)
(declare-fun x719 () Bool)
(declare-fun x2281 () Real)
(declare-fun x2333 () Real)
(declare-fun x1711 () Real)
(declare-fun x165 () Bool)
(declare-fun x589 () Real)
(declare-fun x470 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x1600 () Real)
(declare-fun x2531 () Real)
(declare-fun x1765 () Real)
(declare-fun x2017 () Real)
(declare-fun x2573 () Real)
(declare-fun x1989 () Bool)
(declare-fun x1849 () Real)
(declare-fun x581 () Real)
(declare-fun x1270 () Real)
(declare-fun x1174 () Bool)
(declare-fun x1269 () Real)
(declare-fun x1781 () Real)
(declare-fun x2749 () Real)
(declare-fun x2218 () Bool)
(declare-fun x2116 () Bool)
(declare-fun x665 () Real)
(declare-fun x594 () Real)
(declare-fun x689 () Bool)
(declare-fun x2375 () Real)
(declare-fun x1206 (Real) Real)
(declare-fun x2669 () Bool)
(declare-fun x117 () Real)
(declare-fun x2933 () Bool)
(declare-fun x2088 () Real)
(declare-fun x1332 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x372 () Real)
(declare-fun x1949 () Bool)
(declare-fun x2362 () Real)
(declare-fun x1861 () Bool)
(declare-fun x274 () Bool)
(declare-fun x1655 () Bool)
(declare-fun x2289 () Real)
(declare-fun x1636 () Real)
(declare-fun x1255 () Bool)
(declare-fun x2810 () Bool)
(declare-fun x2148 () Real)
(declare-fun x2483 () Real)
(declare-fun x1394 () Real)
(declare-fun x2119 () Real)
(declare-fun x1219 () Real)
(declare-fun x877 () Real)
(declare-fun x2840 () Real)
(declare-fun x3049 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x354 () Real)
(declare-fun x403 () Real)
(declare-fun x1412 () Real)
(declare-fun x534 () Bool)
(declare-fun x2893 () Real)
(declare-fun x604 () Real)
(declare-fun x2064 () x1726)
(declare-fun x2307 () Real)
(declare-fun x2619 () Real)
(declare-fun x2855 () Bool)
(declare-fun x1387 () Real)
(declare-fun x2990 () Real)
(declare-fun x998 () Real)
(declare-fun x1790 () Real)
(declare-fun x2768 () Real)
(declare-fun x2617 () Real)
(declare-fun x276 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x2467 () Real)
(declare-fun x198 () Bool)
(declare-fun x38 () Real)
(declare-fun x2031 () Bool)
(declare-fun x1281 () Real)
(declare-fun x3017 () Real)
(declare-fun x902 (Real) Real)
(declare-fun x1108 () Bool)
(declare-fun x1030 () Real)
(declare-fun x930 () Bool)
(declare-fun x2699 () Real)
(declare-fun x2204 (Real) Real)
(declare-fun x2562 () Real)
(declare-fun x2775 () Bool)
(declare-fun x3012 () Real)
(declare-fun x1539 (Real) Real)
(declare-fun x453 () Real)
(declare-fun x661 () Bool)
(declare-fun x1938 () Real)
(declare-fun x183 () Bool)
(declare-fun x840 () Real)
(declare-fun x2741 () Bool)
(declare-fun x2187 () Real)
(declare-fun x1761 () Bool)
(declare-fun x2867 () Real)
(declare-fun x658 () Real)
(declare-fun x941 () Real)
(declare-fun x2765 () Real)
(declare-fun x934 () Real)
(declare-fun x1321 () x1726)
(declare-fun x236 () Real)
(declare-fun x592 () Real)
(declare-fun x1456 () Real)
(declare-fun x2960 () Bool)
(declare-fun x1055 () Real)
(declare-fun x2540 () Real)
(declare-fun x1993 () Bool)
(declare-fun x1639 () Real)
(declare-fun x232 () Real)
(declare-fun x706 () Real)
(declare-fun x1026 () Real)
(declare-fun x921 () Real)
(declare-fun x2543 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x680 () Real)
(declare-fun x1457 () Real)
(declare-fun x2252 () Real)
(declare-fun x600 () Real)
(declare-fun x613 () Bool)
(declare-fun x2503 () Real)
(declare-fun x1872 () Real)
(declare-fun x1968 () Real)
(declare-fun x2103 () Real)
(declare-fun x413 () Real)
(declare-fun x2812 () Real)
(declare-fun x1603 () Bool)
(declare-fun x574 () Real)
(declare-fun x2944 () Bool)
(declare-fun x430 () Real)
(declare-fun x1652 () Real)
(declare-fun x2392 () Bool)
(declare-fun x2413 () Real)
(declare-fun x2355 () Real)
(declare-fun x2931 (Real) Real)
(declare-fun x303 () Real)
(declare-fun x1498 () Bool)
(declare-fun x1018 () Real)
(declare-fun x2007 () Real)
(declare-fun x652 () Bool)
(declare-fun x69 () Real)
(declare-fun x897 () Real)
(declare-fun x2471 () Bool)
(declare-fun x2217 () Real)
(declare-fun x36 () Bool)
(declare-fun x2677 () Real)
(declare-fun x2089 () Real)
(declare-fun x901 () Real)
(declare-fun x409 () Bool)
(declare-fun x2147 () Real)
(declare-fun x931 () Real)
(declare-fun x2612 () Real)
(declare-fun x1489 () Real)
(declare-fun x948 () x1726)
(declare-fun x1366 () x1726)
(declare-fun x1670 () x1726)
(declare-fun x1437 () Bool)
(declare-fun x1198 () Real)
(declare-fun x2273 (x1726) Real)
(declare-fun x2414 () Real)
(declare-fun x1390 (Real) Real)
(declare-fun x722 () Real)
(declare-fun x2539 (Real) Real)
(declare-fun x223 () Real)
(declare-fun x3041 () Real)
(declare-fun x1241 () Real)
(declare-fun x2581 () Real)
(declare-fun x1417 () Real)
(declare-fun x377 () Real)
(declare-fun x2068 () Bool)
(declare-fun x443 () Real)
(declare-fun x1947 () Real)
(declare-fun x2400 () Real)
(declare-fun x193 () Real)
(declare-fun x1733 () Bool)
(declare-fun x616 () Real)
(declare-fun x96 () Bool)
(declare-fun x2889 () Real)
(declare-fun x1363 () Bool)
(declare-fun x2979 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x1854 () Real)
(declare-fun x468 () Real)
(declare-fun x2940 () Real)
(declare-fun x2456 () Bool)
(declare-fun x2445 () Real)
(declare-fun x2278 () Real)
(declare-fun x749 () Bool)
(declare-fun x2725 () Real)
(declare-fun x2681 () Real)
(declare-fun x2566 () Bool)
(declare-fun x3001 () Real)
(declare-fun x2454 () Real)
(declare-fun x53 () Real)
(declare-fun x2700 () Real)
(declare-fun x2754 () Real)
(declare-fun x2836 () Real)
(declare-fun x1380 () Real)
(declare-fun x2004 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x826 () Bool)
(declare-fun x225 (Real) Real)
(declare-fun x2904 () Bool)
(declare-fun x752 () Real)
(declare-fun x241 () Real)
(declare-fun x1923 () Real)
(declare-fun x1595 () Real)
(declare-fun x1013 () Bool)
(declare-fun x374 () Real)
(declare-fun x2316 () x1726)
(declare-fun x1003 () Real)
(declare-fun x1143 () Real)
(declare-fun x1769 (Real) Real)
(declare-fun x1713 () Real)
(declare-fun x2652 () x1726)
(declare-fun x1590 () Bool)
(declare-fun x2338 (Real) Real)
(declare-fun x2961 () Real)
(declare-fun x1510 () Real)
(declare-fun x1052 () Real)
(declare-fun x2683 () Bool)
(declare-fun x2382 () Real)
(declare-fun x1132 () Bool)
(declare-fun x2457 () Real)
(declare-fun x942 () Bool)
(declare-fun x164 () Real)
(declare-fun x2370 () Bool)
(declare-fun x1499 () Real)
(declare-fun x2234 () Real)
(declare-fun x1845 (Real) Real)
(declare-fun x3053 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x587 () Bool)
(declare-fun x1242 () Real)
(declare-fun x1698 () Real)
(declare-fun x562 () Bool)
(declare-fun x1230 () Real)
(declare-fun x2108 () Real)
(declare-fun x917 () Real)
(declare-fun x2326 () Real)
(declare-fun x3028 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x820 () Real)
(declare-fun x2777 () Real)
(declare-fun x2651 () Real)
(declare-fun x2468 () Real)
(declare-fun x2412 () Real)
(declare-fun x538 () Bool)
(declare-fun x927 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x2092 () Real)
(declare-fun x120 () Real)
(declare-fun x2958 () Real)
(declare-fun x1040 () Real)
(declare-fun x28 () Real)
(declare-fun x1478 () Real)
(declare-fun x956 () x1726)
(declare-fun x312 () Real)
(declare-fun x835 () Bool)
(declare-fun x1460 () Real)
(declare-fun x2171 () Real)
(declare-fun x2207 () Real)
(declare-fun x445 () Bool)
(declare-fun x1194 () Real)
(declare-fun x1618 () Real)
(declare-fun x289 () Real)
(declare-fun x1747 () Real)
(declare-fun x1641 () Real)
(declare-fun x2159 (Real) Real)
(declare-fun x834 () Bool)
(declare-fun x984 () Real)
(declare-fun x1865 () Real)
(declare-fun x2565 () Bool)
(declare-fun x1256 () Real)
(declare-fun x2756 () Real)
(declare-fun x1283 () Real)
(declare-fun x23 () Bool)
(declare-fun x2676 () Real)
(declare-fun x2366 () Real)
(declare-fun x1970 () Bool)
(declare-fun x2157 () Real)
(declare-fun x525 () Real)
(declare-fun x421 () Real)
(declare-fun x2244 () Real)
(declare-fun x2872 () Real)
(declare-fun x1987 () Real)
(declare-fun x231 () Real)
(declare-fun x2210 () Real)
(declare-fun x883 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x1984 () Real)
(declare-fun x854 () Real)
(declare-fun x1957 () Bool)
(declare-fun x49 () Real)
(declare-fun x2807 () Bool)
(declare-fun x2220 () Real)
(declare-fun x2558 () Real)
(declare-fun x2557 () Real)
(declare-fun x1885 () Bool)
(declare-fun x76 () Bool)
(declare-fun x670 () Real)
(declare-fun x2114 () Bool)
(declare-fun x846 () Real)
(declare-fun x2158 () Bool)
(declare-fun x554 () Real)
(declare-fun x1835 () Bool)
(declare-fun x691 () Real)
(declare-fun x2137 () Real)
(declare-fun x1099 () Real)
(declare-fun x351 () x1726)
(declare-fun x253 () Real)
(declare-fun x379 () Real)
(declare-fun x2334 () Real)
(declare-fun x149 () Real)
(declare-fun x1075 (x1726) Real)
(declare-fun x535 () Real)
(declare-fun x841 () Real)
(declare-fun x1536 () x1726)
(declare-fun x2432 () Real)
(declare-fun x2600 (x1726) Real)
(declare-fun x291 () Real)
(declare-fun x2790 () Real)
(declare-fun x3 () Bool)
(declare-fun x620 () Real)
(declare-fun x603 () Real)
(declare-fun x1165 () Real)
(declare-fun x1233 () Real)
(declare-fun x2735 () Real)
(declare-fun x1044 (Real) Real)
(declare-fun x2258 () Real)
(declare-fun x865 () Bool)
(declare-fun x1554 () x1726)
(declare-fun x793 () Real)
(declare-fun x2841 () Real)
(declare-fun x1979 () Bool)
(declare-fun x1955 () Real)
(declare-fun x2881 () Real)
(declare-fun x701 () Bool)
(declare-fun x397 () Real)
(declare-fun x1808 () Real)
(declare-fun x52 () Real)
(declare-fun x2264 () Real)
(declare-fun x2970 () Real)
(declare-fun x2442 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x743 () Bool)
(declare-fun x986 () Bool)
(declare-fun x1136 () Real)
(declare-fun x1844 () Real)
(declare-fun x350 () Real)
(declare-fun x1480 () Real)
(declare-fun x2189 (Real) Real)
(declare-fun x176 () Bool)
(declare-fun x2950 (Real) Real)
(declare-fun x1855 () Real)
(declare-fun x1740 () Bool)
(declare-fun x1100 () Real)
(declare-fun x2381 () Real)
(declare-fun x2687 () Real)
(declare-fun x1494 (Real) Real)
(declare-fun x1263 () Real)
(declare-fun x2459 () Bool)
(declare-fun x80 () Real)
(declare-fun x488 () Real)
(declare-fun x1685 () Real)
(declare-fun x1881 () Real)
(declare-fun x248 () Real)
(declare-fun x1231 () Real)
(declare-fun x381 () Bool)
(declare-fun x304 () Real)
(declare-fun x928 (Real) Real)
(declare-fun x47 () Real)
(declare-fun x838 () Real)
(declare-fun x731 () Real)
(declare-fun x2953 () Real)
(declare-fun x852 () Bool)
(declare-fun x557 () Bool)
(declare-fun x140 () Bool)
(declare-fun x2804 () Real)
(declare-fun x1689 () Real)
(declare-fun x2544 () Bool)
(declare-fun x1889 () Real)
(declare-fun x943 () Real)
(declare-fun x2850 () Bool)
(declare-fun x1940 () Real)
(declare-fun x1140 () Real)
(declare-fun x1749 () Bool)
(declare-fun x110 () Real)
(declare-fun x2350 () Bool)
(declare-fun x1684 () Real)
(declare-fun x208 () Bool)
(declare-fun x2664 () Bool)
(declare-fun x83 () Real)
(declare-fun x202 () Bool)
(declare-fun x2003 () Real)
(declare-fun x308 () Real)
(declare-fun x2597 () Real)
(declare-fun x209 () Bool)
(declare-fun x580 () Bool)
(declare-fun x1805 () Real)
(declare-fun x519 () Real)
(declare-fun x1969 () Real)
(declare-fun x1558 () Real)
(declare-fun x1515 () Bool)
(declare-fun x2505 () Bool)
(declare-fun x569 () Real)
(declare-fun x2388 () Real)
(declare-fun x2286 () Bool)
(declare-fun x59 () Real)
(declare-fun x2925 () Real)
(declare-fun x2952 () Real)
(declare-fun x1213 () Real)
(declare-fun x266 () Real)
(declare-fun x591 () Real)
(declare-fun x2097 () Bool)
(declare-fun x1799 () Real)
(declare-fun x1552 () Real)
(declare-fun x2480 () Bool)
(declare-fun x511 (Real) Real)
(declare-fun x1780 () Real)
(declare-fun x1776 () Real)
(declare-fun x1802 () Real)
(declare-fun x2684 () Real)
(declare-fun x2465 () Real)
(declare-fun x270 () Real)
(declare-fun x74 () Real)
(declare-fun x7 () Bool)
(declare-fun x2882 () Real)
(declare-fun x2452 () Bool)
(declare-fun x2816 () Real)
(declare-fun x2763 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x97 () Real)
(declare-fun x337 () Real)
(declare-fun x1452 () Real)
(declare-fun x2500 () Real)
(declare-fun x2437 () Real)
(declare-fun x2577 () Real)
(declare-fun x522 () Bool)
(declare-fun x2868 () Real)
(declare-fun x1852 () Real)
(declare-fun x890 (Real) Real)
(declare-fun x2655 () Bool)
(declare-fun x705 () Real)
(declare-fun x2510 () Bool)
(declare-fun x1279 () Real)
(declare-fun x102 () Real)
(declare-fun x401 () Real)
(declare-fun x1266 () Real)
(declare-fun x1541 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x666 () Real)
(declare-fun x148 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x2920 () Bool)
(declare-fun x1796 () Real)
(declare-fun x617 () Real)
(declare-fun x3024 () Real)
(declare-fun x17 () Real)
(declare-fun x2727 () Bool)
(declare-fun x3023 () Real)
(declare-fun x206 () Real)
(declare-fun x1204 () Real)
(declare-fun x544 () Real)
(declare-fun x2709 () Real)
(declare-fun x1564 () Real)
(declare-fun x2584 () Real)
(declare-fun x1798 () Bool)
(declare-fun x2781 () Bool)
(declare-fun x3013 () Bool)
(declare-fun x322 () Bool)
(declare-fun x1690 () Real)
(declare-fun x1185 () Bool)
(declare-fun x1126 () Real)
(declare-fun x1053 () Real)
(declare-fun x1758 () Real)
(declare-fun x1137 () Bool)
(declare-fun x1314 (Real) Real)
(declare-fun x520 () Real)
(declare-fun x324 () Bool)
(declare-fun x2590 () Bool)
(declare-fun x125 (Real) Real)
(declare-fun x465 () Bool)
(declare-fun x887 (Real) Real)
(declare-fun x1184 () Real)
(declare-fun x2498 () Real)
(declare-fun x714 () Real)
(declare-fun x3029 () Real)
(declare-fun x1876 () Real)
(declare-fun x1503 () Bool)
(declare-fun x1057 () Real)
(declare-fun x1214 (Real Real) Real)
(declare-fun x2575 () Real)
(declare-fun x1549 () Real)
(declare-fun x218 () Real)
(declare-fun x469 () Real)
(declare-fun x1772 () Real)
(declare-fun x2506 () Bool)
(declare-fun x1507 () Real)
(declare-fun x1188 () Real)
(declare-fun x873 () Bool)
(declare-fun x2489 () Real)
(declare-fun x1104 () Real)
(declare-fun x1173 () Real)
(declare-fun x642 () Bool)
(declare-fun x626 () Real)
(declare-fun x2548 () Real)
(declare-fun x3040 () Bool)
(declare-fun x741 () Real)
(declare-fun x2310 () Real)
(declare-fun x2482 () Bool)
(declare-fun x1486 () Real)
(declare-fun x368 () Real)
(declare-fun x1967 () Real)
(declare-fun x20 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x134 () Bool)
(declare-fun x3032 () Real)
(declare-fun x330 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x434 () Real)
(declare-fun x2075 () Real)
(declare-fun x3026 (Real Real) Real)
(declare-fun x2622 () Real)
(declare-fun x1401 () Real)
(declare-fun x2832 () Real)
(declare-fun x1170 () Bool)
(declare-fun x2110 () Real)
(declare-fun x365 () Bool)
(declare-fun x1604 () Real)
(declare-fun x2752 () Real)
(declare-fun x2935 () Real)
(declare-fun x1644 () Bool)
(declare-fun x789 () Real)
(declare-fun x3010 () Real)
(declare-fun x2821 () Bool)
(declare-fun x1598 () Real)
(declare-fun x2714 () Real)
(declare-fun x2771 () Real)
(declare-fun x2797 () Real)
(declare-fun x1037 () Real)
(declare-fun x2247 () Real)
(declare-fun x1212 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x1884 () Real)
(declare-fun x724 () Bool)
(declare-fun x1097 () Real)
(declare-fun x546 () Real)
(define-fun x1408 ((x1726 x1726) (x1113 Real)) x1726 (ite ((_ is x2802) x1726) (x2802 (x1467 x1726) (x1378 x1726) (+ (x678 x1726) x1113)) (ite ((_ is x1088) x1726) (x1088 (x3000 x1726) (+ x1113 (x2353 x1726))) (x348 (+ x1113 (x2464 x1726))))))
(define-fun x864 ((x1504 Real)) Real (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1504) (>= x1504 0)) x1504 (- x1504 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x163 ((x1504 Real)) Real (ite (and (> 0 x1504) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1504)) (+ x1504 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1504))
(define-fun x107 ((x1220 Real)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1220) (<= 0 x1220)))
(define-fun x275 ((x1220 Real)) Bool (and (= x1220 (x3026 x1220 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x1220 (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1220))))
(define-fun x1081 ((x1220 Real)) Bool (and (= (x3026 0 x1220) 0) (= 0 (x3026 x1220 0))))
(define-fun x977 ((x1220 Real)) Bool (= (x3026 x1220 x1220) x1220))
(define-fun x405 ((x1220 Real)) Bool (and (x1081 x1220) (x275 x1220) (x977 x1220)))
(define-fun x349 ((x1220 Real)) Bool (= (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1220) (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1220))))
(define-fun x2712 ((x1220 Real)) Bool (=> (and (<= 0 x1220) (< x1220 32)) (= (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1220) 0)))
(define-fun x704 ((x1220 Real) (x1526 Real) (x3015 Real) (x624 Real)) Bool (and (= (+ (* 32 x3015) x1526 (* x624 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1220) (>= x1526 0) (< x1526 32) (< x3015 3618502788666131106986593281521497120414687020801267626233049500247285301248) (<= 0 x624) (< x624 1) (<= 0 x3015) (= (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1220) (* x3015 32))))
(define-fun x2780 ((x1220 Real) (x1479 Real) (x1050 Real) (x1111 Real)) Bool (and (x704 x1220 x1479 x1050 x1111) (x2712 x1220) (x349 x1220)))
(define-fun x2251 ((x1220 Real) (x1526 Real)) Bool (= (x3026 x1220 x1526) (x3026 x1526 x1220)))
(define-fun x768 ((x1220 Real) (x1526 Real)) Bool (and (=> (>= x1220 0) (>= x1220 (x3026 x1220 x1526))) (=> (>= x1526 0) (<= (x3026 x1220 x1526) x1526)) (>= (x3026 x1220 x1526) 0)))
(define-fun x417 ((x1220 Real) (x1526 Real)) Bool (and (x2251 x1220 x1526) (x768 x1220 x1526)))
(define-fun x607 ((x1220 Real) (x1479 Real) (x1050 Real) (x1111 Real)) Bool (and (x417 x1220 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2780 x1220 x1479 x1050 x1111)))
(define-fun x1203 ((x1220 Real)) Bool (= (x3026 1461501637330902918203684832716283019655932542975 (x3026 1461501637330902918203684832716283019655932542975 x1220)) (x3026 1461501637330902918203684832716283019655932542975 x1220)))
(define-fun x2202 ((x1220 Real)) Bool (=> (and (< x1220 1461501637330902918203684832716283019655932542976) (>= x1220 0)) (= (x3026 1461501637330902918203684832716283019655932542975 x1220) x1220)))
(define-fun x785 ((x1220 Real)) Bool (=> (= x1220 (x3026 1461501637330902918203684832716283019655932542975 x1220)) (and (> 1461501637330902918203684832716283019655932542976 x1220) (>= x1220 0))))
(define-fun x2100 ((x1220 Real)) Bool (=> (and (>= x1220 1461501637330902918203684832716283019655932542976) (> 2923003274661805836407369665432566039311865085952 x1220)) (= (- x1220 1461501637330902918203684832716283019655932542976) (x3026 1461501637330902918203684832716283019655932542975 x1220))))
(define-fun x2533 ((x1220 Real) (x1526 Real)) Bool (and (= (+ (x3026 1461501637330902918203684832716283019655932542975 x1220) (* x1526 1461501637330902918203684832716283019655932542976)) x1220) (<= 0 x1526)))
(define-fun x475 ((x1220 Real) (x1019 Real)) Bool (and (x1203 x1220) (x2533 x1220 x1019) (x2100 x1220) (x2202 x1220) (x785 x1220)))
(define-fun x1932 ((x1220 Real) (x1019 Real)) Bool (and (x475 x1220 x1019) (x417 x1220 1461501637330902918203684832716283019655932542975)))
(define-fun x1243 ((x1220 Real)) Bool (= (x3026 26959946667150639794667015087019630673637144422540572481103610249215 x1220) (x3026 26959946667150639794667015087019630673637144422540572481103610249215 (x3026 26959946667150639794667015087019630673637144422540572481103610249215 x1220))))
(define-fun x27 ((x1220 Real)) Bool (=> (and (< x1220 26959946667150639794667015087019630673637144422540572481103610249216) (>= x1220 0)) (= x1220 (x3026 26959946667150639794667015087019630673637144422540572481103610249215 x1220))))
(define-fun x1983 ((x1220 Real)) Bool (=> (= x1220 (x3026 26959946667150639794667015087019630673637144422540572481103610249215 x1220)) (and (< x1220 26959946667150639794667015087019630673637144422540572481103610249216) (>= x1220 0))))
(define-fun x2839 ((x1220 Real)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x1220) (< x1220 53919893334301279589334030174039261347274288845081144962207220498432)) (= (x3026 26959946667150639794667015087019630673637144422540572481103610249215 x1220) (- x1220 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x2294 ((x1220 Real) (x1526 Real)) Bool (and (= x1220 (+ (x3026 26959946667150639794667015087019630673637144422540572481103610249215 x1220) (* x1526 26959946667150639794667015087019630673637144422540572481103610249216))) (>= x1526 0)))
(define-fun x1493 ((x1220 Real) (x1019 Real)) Bool (and (x1983 x1220) (x1243 x1220) (x2294 x1220 x1019) (x27 x1220) (x2839 x1220)))
(define-fun x1527 ((x1220 Real) (x1019 Real)) Bool (and (x417 x1220 26959946667150639794667015087019630673637144422540572481103610249215) (x1493 x1220 x1019)))
(define-fun x118 ((x1220 Real)) Bool (= (x3026 1 x1220) (x3026 1 (x3026 1 x1220))))
(define-fun x254 ((x1220 Real)) Bool (=> (and (< x1220 2) (>= x1220 0)) (= x1220 (x3026 1 x1220))))
(define-fun x1663 ((x1220 Real)) Bool (=> (= x1220 (x3026 1 x1220)) (and (< x1220 2) (<= 0 x1220))))
(define-fun x1973 ((x1220 Real)) Bool (=> (and (> 4 x1220) (<= 2 x1220)) (= (x3026 1 x1220) (- x1220 2))))
(define-fun x73 ((x1220 Real) (x1526 Real)) Bool (and (<= 0 x1526) (= x1220 (+ (x3026 1 x1220) (* 2 x1526)))))
(define-fun x1893 ((x1220 Real) (x1019 Real)) Bool (and (x118 x1220) (x254 x1220) (x1663 x1220) (x73 x1220 x1019) (x1973 x1220)))
(define-fun x1691 ((x1220 Real) (x1019 Real)) Bool (and (x417 x1220 1) (x1893 x1220 x1019)))
(define-fun x2818 ((x1220 Real)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2884 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1220)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2884 x1220 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1694 ((x1220 Real)) Bool (and (= x1220 (x2884 0 x1220)) (= x1220 (x2884 x1220 0))))
(define-fun x1089 ((x1220 Real)) Bool (= (x2884 x1220 x1220) x1220))
(define-fun x2567 ((x1220 Real)) Bool (and (x1694 x1220) (x2818 x1220) (x1089 x1220)))
(define-fun x407 ((x1220 Real) (x1526 Real)) Bool (= (x2884 x1220 x1526) (x2884 x1526 x1220)))
(define-fun x1282 ((x1220 Real) (x1526 Real)) Bool (and (=> (>= x1220 0) (<= x1220 (x2884 x1220 x1526))) (<= (x2884 x1220 x1526) (+ x1220 x1526)) (=> (<= 0 x1526) (<= x1526 (x2884 x1220 x1526)))))
(define-fun x2528 ((x1220 Real) (x1526 Real)) Bool (and (x407 x1220 x1526) (x1282 x1220 x1526)))
(define-fun x448 ((x2308 Real)) Real (x1667 x2308))
(define-fun x567 ((x2308 Real)) Real (ite (= x2308 256) x507 (x2995 x2308)))
(define-fun x2934 ((x2308 Real)) Real (ite (and (not x15) x648) (x2995 x2308) (ite (and x1474 (not x645)) (x302 x2308) (ite (and x2776 (not x132)) (x2783 x2308) (ite (and (not x4) x978) (x1314 x2308) (x567 x2308))))))
(define-fun x1599 ((x2308 Real)) Real (ite (= x2308 x1387) x1878 (x2934 x2308)))
(define-fun x1625 ((x2308 Real)) Real (ite (and (>= x2308 x429) (> (+ x429 x1878) x2308)) (x1667 (+ (- x2308 x429) x1758)) (x1599 x2308)))
(define-fun x161 ((x2308 Real)) Real (ite (= x2308 x442) 0 (x1625 x2308)))
(define-fun x1918 ((x2308 Real)) Real (ite (= x1005 x2308) x1906 (x2172 x2308)))
(define-fun x2602 ((x2308 Real)) Real (ite (and x2014 (not x2015)) (x2172 x2308) (ite (and x2506 x2279) (x1370 x2308) (x1918 x2308))))
(define-fun x1950 ((x2308 Real)) Real (ite (= x2308 x604) 96 (x609 x2308)))
(define-fun x2526 ((x2308 Real)) Real (ite (and x2845 x1320) (x918 x2308) (ite (and (not x615) x947) (x609 x2308) (x1950 x2308))))
(define-fun x1546 ((x2308 Real)) Real (ite (= x2308 x777) 96 (x595 x2308)))
(define-fun x2306 ((x2308 Real)) Real (ite (= x1930 x2308) x1098 (x2036 x2308)))
(define-fun x340 ((x2308 Real)) Real (ite (and (not x2694) x2781) (x2036 x2308) (ite (and x1609 x333) (x1902 x2308) (x2306 x2308))))
(define-fun x1434 ((x2308 Real)) Real (ite (= x2277 x2308) 0 (x3018 x2308)))
(define-fun x560 ((x2308 Real)) Real (ite (= x2308 x762) 0 (x1434 x2308)))
(define-fun x2638 ((x2308 Real)) Real (ite (= x1532 x2308) 0 (x560 x2308)))
(define-fun x1659 ((x2308 Real)) Real (ite (= x2308 x2556) 0 (x2638 x2308)))
(define-fun x2604 ((x2308 Real)) Real (ite (= x1743 x2308) 0 (x1659 x2308)))
(define-fun x3037 ((x2308 Real)) Real (ite (= x2211 x2308) 0 (x2604 x2308)))
(define-fun x2606 ((x2308 Real)) Real (ite (= x2688 x2308) 0 (x1317 x2308)))
(define-fun x1316 ((x2308 Real)) Real (ite (= x232 x2308) 0 (x2606 x2308)))
(define-fun x328 ((x2308 Real)) Real (ite (= x1577 x2308) 0 (x1316 x2308)))
(define-fun x1416 ((x2308 Real)) Real (ite (= x2308 x600) 0 (x328 x2308)))
(define-fun x2441 ((x2308 Real)) Real (ite (= x2308 x248) 0 (x1416 x2308)))
(define-fun x2834 ((x2308 Real)) Real (ite (= x2308 x201) 0 (x2441 x2308)))
(define-fun x2805 ((x2308 Real)) Real (ite (= x1646 x2308) x2688 (x2834 x2308)))
(define-fun x1833 ((x2308 Real)) Real (ite (= x2308 x214) x1794 (x915 x2308)))
(define-fun x2985 ((x2308 Real)) Real (ite (= x2308 x2958) x1678 (x1833 x2308)))
(define-fun x2724 ((x2308 Real)) Real (ite (= x2308 x247) x2503 (x2985 x2308)))
(define-fun x1008 ((x2308 Real)) Real (ite (= x2308 x1704) x2908 (x2724 x2308)))
(define-fun x2024 ((x2308 Real)) Real (ite (= x1895 x2308) x2681 (x1008 x2308)))
(define-fun x2691 ((x2308 Real)) Real (ite (= x1430 x2308) x2131 (x2024 x2308)))
(define-fun x2800 ((x2308 Real)) Real (ite (= x2308 x2677) x214 (x2691 x2308)))
(define-fun x2431 ((x2308 Real)) Real (ite (and (not x1630) x2470) (x915 x2308) (x2800 x2308)))
(define-fun x3043 ((x2308 Real)) Real (ite (= x2308 x2474) x2276 (x2431 x2308)))
(define-fun x68 ((x2308 Real)) Real (ite (= x2308 x857) 274184521717934524641157099916833587223 (x3043 x2308)))
(define-fun x750 ((x2308 Real)) Real (ite (= x2308 x1689) x2127 (x68 x2308)))
(define-fun x2074 ((x2308 Real)) Real (ite (= x2308 x1442) x3008 (x750 x2308)))
(define-fun x2980 ((x2308 Real)) Real (ite (= x958 x2308) x1259 (x2074 x2308)))
(define-fun x1121 ((x2308 Real)) Real (ite (and (< x2308 (+ x1783 x263)) (<= x263 x2308)) (x1667 (+ (- x2308 x263) x2490)) (x1265 x2308)))
(define-fun x795 ((x2308 Real)) Real (ite (and x1761 x1132) (x1265 x2308) (x1121 x2308)))
(define-fun x963 ((x2308 Real)) Real (ite (and x2775 x782 x2299) (x1966 x2308) (x71 x2308)))
(define-fun x1613 ((x2308 Real)) Real (ite (= x2308 x2675) x272 (x963 x2308)))
(define-fun x456 ((x2308 Real)) Real (ite (and (< x2308 (+ x3023 32)) (>= x2308 x3023)) (x2125 (+ (- x2308 x3023) 0)) (x2931 x2308)))
(define-fun x2939 ((x2308 Real)) Real (ite (and x1892 (not x2097) x2446) (x456 x2308) (x2931 x2308)))
(define-fun x2300 ((x2308 Real)) Real (ite (and (> (+ x2826 x496) x2308) (>= x2308 x496)) (x1667 (+ (- x2308 x496) x2490)) (x2539 x2308)))
(define-fun x1520 ((x2308 Real)) Real (ite (= x2308 x385) x1305 (x1206 x2308)))
(define-fun x301 ((x2308 Real)) Real (ite x2521 (x1520 x2308) (x1845 x2308)))
(define-fun x1926 ((x2308 Real)) Real (ite (and (> (+ x1093 x75) x2308) (<= x75 x2308)) (x1667 (+ x2490 (- x2308 x75))) (x95 x2308)))
(define-fun x392 ((x2308 Real)) Real (ite (and (not x2850) x1108 x3004) (x95 x2308) (x1926 x2308)))
(define-fun x21 ((x2308 Real)) Real (ite (and x1506 x276 (not x587)) (x2121 x2308) (x2156 x2308)))
(define-fun x2880 ((x2308 Real)) Real (ite (and (not x276) x1506) (x392 x2308) (x21 x2308)))
(define-fun x2138 ((x2308 Real)) Real (ite (and (<= x1778 x2308) (< x2308 (+ x618 x1778))) (x1667 (+ x2490 (- x2308 x1778))) (x2795 x2308)))
(define-fun x2163 ((x2308 Real)) Real (ite (= x2308 x154) x2711 (x406 x2308)))
(define-fun x346 ((x2308 Real)) Real (ite x2585 (x2163 x2308) (x798 x2308)))
(define-fun x686 ((x2308 Real)) Real (ite (= x2308 x1257) 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x205 x2308)))
(define-fun x103 ((x2308 Real)) Real (ite (= x1602 x2308) x2509 (x686 x2308)))
(define-fun x2887 ((x2308 Real)) Real (ite (and (>= x2308 x1257) (> (+ x1257 32) x2308)) (x2986 (+ (- x2308 x1257) 0)) (x1819 x2308)))
(define-fun x1059 ((x2308 Real)) Real (ite (and x1376 x1127 x2913) (x2887 x2308) (x1819 x2308)))
(define-fun x279 ((x2308 Real)) Real (ite (and (<= x2362 x2308) (< x2308 (+ x2362 x2754))) (x1667 (+ (- x2308 x2362) x2490)) (x1958 x2308)))
(define-fun x1427 ((x2308 Real)) Real (ite (and x148 (not x343) x1372) (x1958 x2308) (x279 x2308)))
(define-fun x1817 ((x2308 Real)) Real (ite (and (< x2308 (+ x3001 x1323)) (>= x2308 x1323)) (x1667 (+ x2490 (- x2308 x1323))) (x2259 x2308)))
(define-fun x1813 ((x2308 Real)) Real (ite (and x305 (not x343) x148) (x2259 x2308) (x1817 x2308)))
(define-fun x1850 ((x2308 Real)) Real (ite (and (< x2308 (+ x467 32)) (>= x2308 x467)) (x2270 (+ 0 (- x2308 x467))) (x104 x2308)))
(define-fun x671 ((x2308 Real)) Real (ite (and (not x343) x1353 x148) (x1850 x2308) (x104 x2308)))
(define-fun x679 ((x2308 Real)) Real (ite (= x2308 x2975) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x1863 x2308)))
(define-fun x1531 ((x2308 Real)) Real (ite (= x2308 x1521) x2493 (x679 x2308)))
(define-fun x2052 ((x2308 Real)) Real (ite (and (>= x2308 x2975) (< x2308 (+ x2975 0))) (x1455 (+ (- x2308 x2975) 0)) (x805 x2308)))
(define-fun x1134 ((x2308 Real)) Real (ite (and x1336 x2662 (not x198)) (x2052 x2308) (x805 x2308)))
(define-fun x2051 ((x2308 Real)) Real (ite (= x2308 x2856) x1953 (x1134 x2308)))
(define-fun x472 ((x2308 Real)) Real (ite (= x1065 x2308) x2498 (x2051 x2308)))
(define-fun x1647 ((x2308 Real)) Real (ite (= x2308 x2975) x2305 (x472 x2308)))
(define-fun x2369 ((x2308 Real)) Real (ite (= x2308 x1889) x69 (x1647 x2308)))
(define-fun x2955 ((x2308 Real)) Real (ite (= x2355 x2308) 32 (x2369 x2308)))
(define-fun x326 ((x2308 Real)) Real (ite (= x1201 x2308) x2651 (x651 x2308)))
(define-fun x87 ((x2308 Real)) Real (ite (= x2153 x2308) 0 (x396 x2308)))
(define-fun x357 ((x2308 Real)) Real (ite (and (not x508) x1979) (x1494 x2308) (x1619 x2308)))
(define-fun x728 ((x2308 Real)) Real (ite (= x236 x2308) x741 (x1782 x2308)))
(define-fun x1649 ((x2308 Real)) Real (ite (and (> (+ x2555 x741) x2308) (>= x2308 x2555)) (x357 (+ (- x2308 x2555) 0)) (x728 x2308)))
(define-fun x1570 ((x2308 Real)) Real (ite (and x1979 x400) (x1782 x2308) (x1649 x2308)))
(define-fun x2782 ((x2308 Real)) Real (ite x1979 (x1570 x2308) (x1863 x2308)))
(define-fun x910 ((x2308 Real)) Real (ite (= x1404 x2308) x1510 (x2782 x2308)))
(define-fun x2730 ((x2308 Real)) Real (ite (and x210 (not x1007)) (x671 x2308) (x910 x2308)))
(define-fun x1148 ((x2308 Real)) Real (ite (= x1821 x2308) 104802725949312999197809474194232042941614695494850346232715517731946377510912 (x2730 x2308)))
(define-fun x1842 ((x2308 Real)) Real (ite (= x2308 x1651) x1881 (x1148 x2308)))
(define-fun x1429 ((x2308 Real)) Real (ite (= x2284 x2308) 160 (x1842 x2308)))
(define-fun x66 ((x2308 Real)) Real (ite (= x2308 x2453) x1707 (x1090 x2308)))
(define-fun x1352 ((x2308 Real)) Real (ite (and x2031 (not x2632)) (x1090 x2308) (ite (and (not x215) x1326) (x1762 x2308) (ite (and x2861 (not x2435)) (x1340 x2308) (ite (and x2505 (not x1759)) (x245 x2308) (x66 x2308))))))
(define-fun x533 ((x2308 Real)) Real (ite (= x2893 x2308) x1480 (x1352 x2308)))
(define-fun x3019 ((x2308 Real)) Real (ite (= x2254 x2308) x203 (x2720 x2308)))
(define-fun x2838 ((x2308 Real)) Real (ite (and (not x2004) x2860) (x2720 x2308) (ite (and x2588 (not x1096)) (x1903 x2308) (ite (and (not x2230) x1624) (x2159 x2308) (ite (and (not x1332) x1170) (x807 x2308) (x3019 x2308))))))
(define-fun x56 ((x2308 Real)) Real (ite (= x2308 x855) x1398 (x2838 x2308)))
(define-fun x551 ((x2308 Real)) Real (ite (= x266 x2308) x1898 (x1810 x2308)))
(define-fun x2237 ((x2308 Real)) Real (ite (and x2959 (not x129)) (x1810 x2308) (ite (and (not x1337) x256) (x225 x2308) (ite (and (not x3056) x808) (x801 x2308) (ite (and x2862 (not x911)) (x902 x2308) (x551 x2308))))))
(define-fun x12 ((x2308 Real)) Real (ite (= x2982 x2308) x778 (x2237 x2308)))
(define-fun x2504 ((x2308 Real)) Real (ite (= x310 x2308) x2475 (x125 x2308)))
(define-fun x692 ((x2308 Real)) Real (ite (= x627 x2308) 0 (x63 x2308)))
(define-fun x593 ((x2308 Real)) Real (ite (and (>= x2308 x1821) (< x2308 (+ x1821 0))) (x1095 (+ 0 (- x2308 x1821))) (x1044 x2308)))
(define-fun x2659 ((x2308 Real)) Real (ite (= x2308 x1821) x2650 (x2426 x2308)))
(define-fun x606 ((x2308 Real)) Real (ite (= x675 x2308) x2076 (x2659 x2308)))
(define-fun x380 ((x2308 Real)) Real (ite (and x2050 x730 (not x235)) (x2426 x2308) (x606 x2308)))
(define-fun x1728 ((x2308 Real)) Real (ite (and x2050 (not x730)) (x2426 x2308) (x380 x2308)))
(define-fun x1260 ((x2308 Real)) Real (ite (= x2308 x19) x251 (x1539 x2308)))
(define-fun x715 ((x2308 Real)) Real (ite (and (not x1388) x2667) (x1539 x2308) (ite (and x2267 x1860) (x1450 x2308) (x1260 x2308))))
(define-fun x2098 ((x2308 Real)) Real (ite (= x775 x2308) 0 (x1534 x2308)))
(define-fun x2551 ((x2308 Real)) Real (ite (= x2244 x2308) 0 (x2098 x2308)))
(define-fun x1435 ((x2308 Real)) Real (ite (= x2308 x376) 0 (x2551 x2308)))
(define-fun x2842 ((x2308 Real)) Real (ite (= x2308 x2262) 0 (x1435 x2308)))
(define-fun x1715 ((x2308 Real)) Real (ite (= x2968 x2308) 0 (x2842 x2308)))
(define-fun x44 ((x2308 Real)) Real (ite (= x2308 x2954) 0 (x1715 x2308)))
(define-fun x178 ((x2308 Real)) Real (ite (= x2289 x2308) 0 (x887 x2308)))
(define-fun x2438 ((x2308 Real)) Real (ite (= x2308 x1542) 0 (x178 x2308)))
(define-fun x2733 ((x2308 Real)) Real (ite (= x88 x2308) 0 (x2438 x2308)))
(define-fun x2290 ((x2308 Real)) Real (ite (= x1002 x2308) 0 (x2733 x2308)))
(define-fun x2614 ((x2308 Real)) Real (ite (= x1805 x2308) 0 (x2290 x2308)))
(define-fun x940 ((x2308 Real)) Real (ite (= x1711 x2308) 0 (x2614 x2308)))
(define-fun x151 ((x2308 Real)) Real (ite (= x2308 x1018) x2289 (x940 x2308)))
(define-fun x1485 ((x2308 Real)) Real (ite (= x1140 x2308) x2410 (x423 x2308)))
(define-fun x2122 ((x2308 Real)) Real (ite (= x1165 x2308) x1392 (x1485 x2308)))
(define-fun x2951 ((x2308 Real)) Real (ite (= x2247 x2308) x494 (x2122 x2308)))
(define-fun x726 ((x2308 x1726)) Real (ite (and x210 (not x1007)) (x2271 x2308) (x2702 x2308)))
(define-fun x2808 ((x2308 Real)) Real (ite (= x1604 x2308) x1333 (x2951 x2308)))
(define-fun x1237 ((x2308 Real)) Real (ite (= x1477 x2308) x286 (x2808 x2308)))
(define-fun x2391 ((x2308 x1726)) Real (ite (and (not x1007) x210) (x126 x2308) (x1428 x2308)))
(define-fun x378 ((x2308 Real)) Real (ite (= x2770 x2308) x658 (x1237 x2308)))
(define-fun x85 ((x2308 Real)) Real (ite (= x2308 x2686) x1140 (x378 x2308)))
(define-fun x1092 ((x2308 Real)) Real (ite (and (not x1956) x2233) (x423 x2308) (x85 x2308)))
(define-fun x2032 ((x2308 Real)) Real (ite (= x2035 x2308) x359 (x1092 x2308)))
(define-fun x2280 ((x2308 Real)) Real (ite (= x2308 x1968) 274184521717934524641157099916833587223 (x2032 x2308)))
(define-fun x2404 ((x2308 Real)) Real (ite (= x2308 x1524) x1821 (x2280 x2308)))
(define-fun x1228 ((x2308 Real)) Real (ite (= x2308 x913) x1318 (x2404 x2308)))
(define-fun x2394 ((x2308 Real)) Real (ite (= x1021 x2308) x1584 (x1228 x2308)))
(define-fun x2325 ((x2308 Real)) Real (ite (and (< x2308 (+ x2120 x821)) (>= x2308 x821)) (x1667 (+ (- x2308 x821) x2490)) (x2063 x2308)))
(define-fun x216 ((x2308 Real)) Real (ite (and (> (+ x2828 x116) x2308) (<= x2828 x2308)) (x1667 (+ (- x2308 x2828) x2490)) (x2204 x2308)))
(define-fun x2232 ((x2308 Real)) Real (ite (and x1129 x1708) (x2063 x2308) (x2325 x2308)))
(define-fun x1433 ((x2308 Real)) Real (ite (and x1866 x2476 x2261) (x720 x2308) (x2507 x2308)))
(define-fun x1379 ((x2308 Real)) Real (ite (= x2308 x691) x1120 (x1433 x2308)))
(define-fun x1612 ((x2308 Real)) Real (ite (and (> (+ 32 x1638) x2308) (>= x2308 x1638)) (x2222 (+ 0 (- x2308 x1638))) (x1325 x2308)))
(define-fun x2268 ((x2308 Real)) Real (ite (and (not x566) x1654 x2821) (x1612 x2308) (x1325 x2308)))
(define-fun x168 ((x2308 Real)) Real (ite (and (> (+ x1586 x2080) x2308) (>= x2308 x1586)) (x1667 (+ (- x2308 x1586) x2490)) (x2189 x2308)))
(define-fun x2013 ((x2308 Real)) Real (ite (= x2308 x1274) x122 (x1774 x2308)))
(define-fun x298 ((x2308 Real)) Real (ite x2065 (x2013 x2308) (x2167 x2308)))
(define-fun x994 ((x2308 Real)) Real (ite (and (> (+ x1457 x767) x2308) (>= x2308 x1457)) (x1667 (+ x2490 (- x2308 x1457))) (x2073 x2308)))
(define-fun x1700 ((x2308 Real)) Real (ite (and x2062 (not x1447) x1054) (x2073 x2308) (x994 x2308)))
(define-fun x2352 ((x2308 Real)) Real (ite (and x2323 x1900 (not x2910)) (x1528 x2308) (x137 x2308)))
(define-fun x1888 ((x2308 Real)) Real (ite (and (not x2323) x1900) (x1700 x2308) (x2352 x2308)))
(define-fun x1686 ((x2308 Real)) Real (ite (and (> (+ x386 x954) x2308) (>= x2308 x386)) (x1667 (+ (- x2308 x386) x2490)) (x939 x2308)))
(define-fun x2685 ((x2308 Real)) Real (ite (= x598 x2308) x1714 (x725 x2308)))
(define-fun x2001 ((x2308 Real)) Real (ite x2645 (x2685 x2308) (x2993 x2308)))
(define-fun x26 ((x2308 Real)) Real (ite (= x674 x2308) 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1029 x2308)))
(define-fun x2580 ((x2308 Real)) Real (ite (= x2308 x2058) x144 (x26 x2308)))
(define-fun x1004 ((x2308 Real)) Real (ite (and (>= x2308 x674) (> (+ 32 x674) x2308)) (x2288 (+ 0 (- x2308 x674))) (x1328 x2308)))
(define-fun x937 ((x2308 Real)) Real (ite (and x1177 x710 x596) (x1004 x2308) (x1328 x2308)))
(define-fun x2314 ((x2308 Real)) Real (ite (and x710 (not x1177)) (x1029 x2308) (x937 x2308)))
(define-fun x2269 ((x2308 Real)) Real (ite (and x343 x148) (ite (and x148 x343 x2417) (x2204 x2308) (x216 x2308)) (ite x41 (x2314 x2308) (ite (and x1937 x324) (x1029 x2308) (ite (and x2062 x1447) (x2397 x2308) (x2018 x2308))))))
(define-fun x664 ((x2308 Real)) Real (ite (= x2308 x1179) x2081 (x2269 x2308)))
(define-fun x1899 ((x2308 Real)) Real (ite (= x2308 x495) x258 (x664 x2308)))
(define-fun x2705 ((x2308 Real)) Real (ite (and (not x633) x381) (x2328 x2308) (x1899 x2308)))
(define-fun x559 ((x2308 Real)) Real (ite (= x2308 x980) x2154 (x2705 x2308)))
(define-fun x2988 ((x2308 Real)) Real (ite (= x303 x2308) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x798 x2308)))
(define-fun x528 ((x2308 Real)) Real (ite (= x2308 x2973) x809 (x2988 x2308)))
(define-fun x1915 ((x2308 Real)) Real (ite (and (>= x2308 x303) (< x2308 (+ x303 32))) (x1522 (+ (- x2308 x303) 0)) (x528 x2308)))
(define-fun x1913 ((x2308 Real)) Real (ite (= x2308 x1195) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2993 x2308)))
(define-fun x944 ((x2308 Real)) Real (ite (= x2598 x2308) x909 (x1913 x2308)))
(define-fun x2183 ((x2308 Real)) Real (ite (and (> (+ 32 x1195) x2308) (>= x2308 x1195)) (x1611 (+ (- x2308 x1195) 0)) (x944 x2308)))
(define-fun x2133 ((x2308 Real)) Real (ite (= x1831 x2308) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1845 x2308)))
(define-fun x277 ((x2308 Real)) Real (ite (= x2308 x2146) x25 (x2133 x2308)))
(define-fun x755 ((x2308 Real)) Real (ite (and (< x2308 (+ 32 x1831)) (<= x1831 x2308)) (x1575 (+ (- x2308 x1831) 0)) (x277 x2308)))
(define-fun x2708 ((x2308 Real)) Real (ite (= x2308 x1974) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2167 x2308)))
(define-fun x2022 ((x2308 Real)) Real (ite (= x2308 x180) x2878 (x2708 x2308)))
(define-fun x1588 ((x2308 Real)) Real (ite (and (>= x2308 x1974) (> (+ 32 x1974) x2308)) (x2023 (+ (- x2308 x1974) 0)) (x2022 x2308)))
(define-fun x2165 ((x2308 x1726)) Real (ite (and (not x198) x2662 x1336) (x2746 x2308) (x2272 x2308)))
(define-fun x2421 ((x2308 x1726)) Real (ite (and x1979 (not x508)) (x2165 x2308) (x850 x2308)))
(define-fun x2390 ((x2308 x1726)) Real (ite (and (not x1007) x210) (x1425 x2308) (ite x1979 (x2421 x2308) (x2272 x2308))))
(define-fun x1709 ((x2308 Real)) Real (ite (= x2308 x2966) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x307 x2308)))
(define-fun x2998 ((x2308 Real)) Real (ite (= x810 x2308) x584 (x1709 x2308)))
(define-fun x1723 ((x2308 Real)) Real (ite (and (< x2308 (+ 0 x2966)) (<= x2966 x2308)) (x1482 (+ (- x2308 x2966) 0)) (x1181 x2308)))
(define-fun x1351 ((x2308 Real)) Real (ite (and x2727 (not x837) x2226) (x1723 x2308) (x1181 x2308)))
(define-fun x912 ((x2308 Real)) Real (ite (= x2308 x654) x1953 (x1351 x2308)))
(define-fun x2169 ((x2308 Real)) Real (ite (= x2308 x2439) x366 (x912 x2308)))
(define-fun x844 ((x2308 Real)) Real (ite (= x2308 x2966) x2984 (x2169 x2308)))
(define-fun x2225 ((x2308 Real)) Real (ite (= x2308 x1191) x2801 (x844 x2308)))
(define-fun x735 ((x2308 Real)) Real (ite (= x2308 x1804) 32 (x2225 x2308)))
(define-fun x1391 ((x2308 x1726)) Real (ite (and (not x837) x2727 x2226) (x239 x2308) (x2898 x2308)))
(define-fun x1355 ((x2308 x1726)) Real (ite (= x2308 x2529) x2311 (x2496 x2308)))
(define-fun x2523 ((x2308 Real)) Real (ite (= x2308 x1911) x1853 (x1451 x2308)))
(define-fun x2633 ((x2308 Real)) Real (ite (and x2116 (not x2208)) (x1451 x2308) (ite (and (not x2303) x2389) (x2764 x2308) (ite (and (not x3049) x2946) (x890 x2308) (ite (and (not x1656) x1458) (x970 x2308) (x2523 x2308))))))
(define-fun x1668 ((x2308 Real)) Real (ite (= x2827 x2308) x2883 (x2633 x2308)))
(define-fun x2011 ((x2308 Real)) Real (ite (= x1773 x2308) x1674 (x130 x2308)))
(define-fun x1543 ((x2308 Real)) Real (ite (= x2308 x241) x2591 (x928 x2308)))
(define-fun x480 ((x2308 Real)) Real (ite (and x2846 (not x1896)) (x130 x2308) (ite (and x1468 (not x2118)) (x928 x2308) (ite (and x1515 (not x2198)) (x2245 x2308) (ite (and x2927 (not x1719)) (x283 x2308) (ite (and x318 (not x830)) (x224 x2308) (x1543 x2308)))))))
(define-fun x1767 ((x2308 Real)) Real (ite (= x2564 x2308) x271 (x480 x2308)))
(define-fun x220 ((x2308 Real)) Real (ite (= x1572 x2308) x3002 (x353 x2308)))
(define-fun x845 ((x2308 Real)) Real (ite (= x2308 x2149) x2778 (x3016 x2308)))
(define-fun x1971 ((x2308 Real)) Real (ite (and (not x1288) x1138) (x353 x2308) (ite (and x693 (not x538)) (x3016 x2308) (ite (and x2713 (not x1058)) (x1160 x2308) (ite (and (not x2005) x510) (x1996 x2308) (ite (and x432 (not x2443)) (x1215 x2308) (x845 x2308)))))))
(define-fun x802 ((x2308 Real)) Real (ite (= x2308 x3025) x2957 (x2136 x2308)))
(define-fun x113 ((x2308 Real)) Real (ite (= x2308 x171) 0 (x1390 x2308)))
(define-fun x2907 ((x2308 Real)) Real (ite (and x2885 (not x2109)) (x1795 x2308) (x1271 x2308)))
(define-fun x712 ((x2308 Real)) Real (ite (= x2308 x546) x2575 (x2858 x2308)))
(define-fun x1757 ((x2308 Real)) Real (ite (and (<= x2049 x2308) (< x2308 (+ x2049 x2575))) (x2907 (+ (- x2308 x2049) 0)) (x712 x2308)))
(define-fun x2231 ((x2308 Real)) Real (ite (and x2885 x1032) (x2858 x2308) (x1757 x2308)))
(define-fun x2478 ((x1220 Real)) Bool (=> (and (not (= x1220 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 18446744073709551615 x1220)) (not (= 1684360437 x1220)) (not (= 1461501637330902918203684832716283019655932542976 x1220)) (not (= x1220 2442716437)) (not (= 274184521717934524641157099916833587223 x1220)) (not (= x1220 29667888499431518244405524310122331055235727797159756471206109933501488824320)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1220)) (not (= x1220 2477345955)) (not (= 1461501637330902918203684832716283019655932542975 x1220)) (not (= x1220 42459404708690159261654315324267577519400883839135586425952143822324095778816)) (not (= x1220 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 106291421124418496933435958710909755174326102057086830187839624775778309242880 x1220)) (not (= 2743638299 x1220)) (not (= x1220 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= x1220 1000000000000000000)) (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 x1220)) (not (= x1220 104802725949312999197809474194232042941614695494850346232715517731946377510912)) (not (= x1220 26959946667150639794667015087019630673637144422540572481103610249215)) (< 10000 x1220) (not (= x1220 22876116169567568662247501733108717860502184539943453785307321755797215510528)) (not (= x1220 4294967296))) (not ((_ is x348) (x1592 x1220)))))
(assert (axiom_frac_bound (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2573 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x727 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x838 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1168 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1217 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1279 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1423 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1725 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1914 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1964 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x22 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2357 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2700 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2726 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3034 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x315 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x367 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x500 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x626 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x696 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x950 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143 x1278 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1162 x457 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1168 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1239 1000000000000000000 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1268 x390 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 x1153 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1519 x2210 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1725 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1914 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103 x799 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x22 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2210 x1519 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2214 x1268 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2246 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231 x901 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2357 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2457 x1507 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2466 x1867 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2700 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2965 x2729 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3034 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x367 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x457 x1162 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x514 x3048 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x542 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x555 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x626 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x727 1000000000000000000 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x799 x2103 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x848 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950 32 (uninterp_frac (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2573 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x727 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x838 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1168 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1217 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1279 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1423 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1725 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1914 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1964 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x22 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2357 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2700 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2726 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x3034 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x315 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x367 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x500 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x555 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x626 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x696 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x950 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1143 x1278 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1162 x457 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1168 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1239 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1268 x390 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1279 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1420 x1153 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1519 x2210 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1725 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1829 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1914 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2103 x799 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x22 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2210 x1519 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2214 x1268 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2246 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x231 x901 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2357 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2457 x1507 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2466 x1867 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2700 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2965 x2729 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3034 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x315 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x367 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x457 x1162 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x500 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x514 x3048 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x542 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x555 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x626 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x696 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x727 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x799 x2103 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x848 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x950 32 (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2573 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x727 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x838 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1168 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1217 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1279 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1423 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1725 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1914 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1964 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x22 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2357 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2700 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2726 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x3034 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x315 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x367 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x500 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x555 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x626 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x696 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x950 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1143 x1278 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1162 x457 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1168 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1239 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1268 x390 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1279 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1420 x1153 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1519 x2210 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1725 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1829 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1914 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2103 x799 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x22 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2210 x1519 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2214 x1268 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2246 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x231 x901 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2357 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2457 x1507 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2466 x1867 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2700 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2965 x2729 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3034 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x315 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x367 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x457 x1162 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x500 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x514 x3048 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x542 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x555 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x626 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x696 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x727 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x799 x2103 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x848 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x950 32 (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2573 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x727 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x838 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1168 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1217 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1279 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1423 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1725 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1914 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1964 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x22 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2357 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2700 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2726 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x3034 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x315 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x367 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x500 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x555 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x626 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x696 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x950 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1143 x1278 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1162 x457 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1168 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1239 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1268 x390 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1279 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1420 x1153 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1519 x2210 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1725 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1829 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1914 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2103 x799 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x22 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2210 x1519 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2214 x1268 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2246 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x231 x901 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2357 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2457 x1507 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2466 x1867 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2700 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2965 x2729 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3034 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x315 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x367 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x457 x1162 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x500 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x514 x3048 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x542 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x555 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x626 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x696 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x727 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x799 x2103 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x848 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x950 32 (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2573 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x727 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x838 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1168 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1217 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1279 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1423 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1725 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1914 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1964 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x22 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2357 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2700 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2726 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x3034 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x315 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x367 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x500 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x555 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x626 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x696 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x950 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1143 x1278 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1162 x457 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1168 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1239 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1268 x390 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1279 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1420 x1153 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1519 x2210 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1725 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1829 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1914 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2103 x799 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x22 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2210 x1519 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2214 x1268 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2246 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x231 x901 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2357 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2457 x1507 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2466 x1867 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2700 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2965 x2729 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3034 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x315 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x367 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x457 x1162 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x500 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x514 x3048 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x542 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x555 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x626 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x696 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x727 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x799 x2103 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x848 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x950 32 (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2573 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x727 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x838 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1168 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1217 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1279 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1423 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1725 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1914 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1964 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x22 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2357 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2700 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2726 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x3034 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x315 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x367 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x500 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x555 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x626 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x696 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x950 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1143 x1278 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1162 x457 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1168 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1239 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1268 x390 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1279 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1420 x1153 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1519 x2210 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1725 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1829 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1914 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2103 x799 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x22 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2210 x1519 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2214 x1268 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2246 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x231 x901 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2357 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2457 x1507 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2466 x1867 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2700 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2965 x2729 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3034 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x315 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x367 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x457 x1162 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x500 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x514 x3048 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x542 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x555 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x626 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x696 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x727 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x799 x2103 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x848 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x950 32 (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2573 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x727 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x838 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1168 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1217 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1279 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1423 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1725 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1914 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1964 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x22 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2357 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2700 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2726 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x3034 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x315 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x367 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x500 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x555 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x626 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x696 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x950 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1143 x1278 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1162 x457 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1168 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1239 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1268 x390 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1279 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1420 x1153 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1519 x2210 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1725 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1829 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1914 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2103 x799 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x22 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2210 x1519 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2214 x1268 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2246 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x231 x901 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2357 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2457 x1507 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2466 x1867 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2700 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2965 x2729 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3034 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x315 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x367 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x457 x1162 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x500 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x514 x3048 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x542 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x555 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x626 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x696 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x727 1000000000000000000 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x799 x2103 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x848 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x950 32 (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 1000000000000000000 x2573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 1000000000000000000 x727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 1000000000000000000 x838 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x1168 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x1217 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x1279 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x1423 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x1725 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x1914 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x1964 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x22 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x2357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x2700 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x2726 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x3034 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x315 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x367 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x500 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x626 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x696 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 32 x950 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1143 x1278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1162 x457 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1168 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1239 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1268 x390 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1279 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1420 x1153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1519 x2210 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1725 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1829 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x1914 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x2103 x799 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x22 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x2210 x1519 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x2214 x1268 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x2246 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x231 x901 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x2357 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x2457 x1507 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x2466 x1867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x2700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x2965 x2729 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x3034 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x315 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x367 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x457 x1162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x500 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x514 x3048 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x542 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x555 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x626 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x696 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x727 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x799 x2103 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x848 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420 x950 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 1000000000000000000 x2573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 1000000000000000000 x727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 1000000000000000000 x838 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x1168 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x1217 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x1279 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x1423 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x1725 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x1914 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x1964 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x22 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x2357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x2700 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x2726 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x3034 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x315 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x367 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x500 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x626 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x696 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 32 x950 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1143 x1278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1162 x457 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1168 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1239 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1268 x390 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1279 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1420 x1153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1519 x2210 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1725 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1829 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x1914 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x2103 x799 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x22 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x2210 x1519 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x2214 x1268 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x2246 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x231 x901 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x2357 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x2457 x1507 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x2466 x1867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x2700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x2965 x2729 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x3034 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x315 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x367 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x457 x1162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x500 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x514 x3048 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x542 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x555 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x626 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x696 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x727 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x799 x2103 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x848 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867 x950 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 1000000000000000000 x2573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 1000000000000000000 x727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 1000000000000000000 x838 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x1168 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x1217 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x1279 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x1423 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x1725 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x1914 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x1964 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x22 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x2357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x2700 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x2726 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x3034 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x315 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x367 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x500 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x626 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x696 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 32 x950 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1143 x1278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1162 x457 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1168 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1239 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1268 x390 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1279 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1420 x1153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1519 x2210 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1725 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1829 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x1914 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x2103 x799 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x22 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x2210 x1519 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x2214 x1268 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x2246 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x231 x901 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x2357 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x2457 x1507 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x2466 x1867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x2700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x2965 x2729 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x3034 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x315 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x367 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x457 x1162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x500 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x514 x3048 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x542 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x555 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x626 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x696 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x727 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x799 x2103 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x848 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965 x950 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 1000000000000000000 x2573 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 1000000000000000000 x727 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 1000000000000000000 x838 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x1168 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x1217 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x1279 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x1423 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x1725 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x1914 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x1964 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x22 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x2357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x2700 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x2726 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x3034 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x315 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x367 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x500 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x626 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x696 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 32 x950 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1143 x1278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1162 x457 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1168 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1239 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1268 x390 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1279 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1420 x1153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1519 x2210 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1725 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1829 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x1914 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x2103 x799 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x22 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x2210 x1519 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x2214 x1268 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x2246 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x231 x901 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x2357 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x2457 x1507 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x2466 x1867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x2700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x2965 x2729 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x3034 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x315 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x367 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x457 x1162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x500 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x514 x3048 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x542 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x555 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x626 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x696 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x727 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x799 x2103 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x848 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901 x950 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)))
(assert (axiom_frac_bound x123 x2274))
(assert (axiom_frac_zero x123 x2274 1000000000000000000 x2573 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 1000000000000000000 x727 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 1000000000000000000 x838 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x1168 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x1217 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x1279 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x1423 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x1725 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x1914 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x1964 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x22 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x2357 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x2700 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x2726 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x3034 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x315 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x367 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x500 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x555 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x626 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x696 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 32 x950 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1143 x1278 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1162 x457 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1168 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1239 1000000000000000000 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1268 x390 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1279 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1420 x1153 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1519 x2210 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1725 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1829 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x1914 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x2103 x799 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x22 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x2210 x1519 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x2214 x1268 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x2246 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x231 x901 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x2357 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x2457 x1507 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x2466 x1867 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x2700 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x2965 x2729 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x3034 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x315 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x367 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x457 x1162 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x500 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x514 x3048 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x542 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x555 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x626 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x696 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x727 1000000000000000000 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x799 x2103 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x848 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_zero x123 x2274 x950 32 (uninterp_frac x123 x2274)))
(assert (axiom_frac_bound x147 1000000000000000000))
(assert (axiom_frac_zero x147 1000000000000000000 1000000000000000000 x2573 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 1000000000000000000 x727 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 1000000000000000000 x838 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x1168 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x1217 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x1279 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x1423 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x1725 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x1914 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x1964 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x22 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x2357 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x2700 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x2726 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x3034 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x315 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x367 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x500 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x555 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x626 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x696 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 32 x950 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1143 x1278 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1162 x457 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1168 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1239 1000000000000000000 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1268 x390 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1279 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1420 x1153 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1519 x2210 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1725 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1829 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x1914 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x2103 x799 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x22 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x2210 x1519 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x2214 x1268 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x2246 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x231 x901 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x2357 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x2457 x1507 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x2466 x1867 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x2700 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x2965 x2729 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x3034 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x315 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x367 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x457 x1162 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x500 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x514 x3048 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x542 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x555 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x626 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x696 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x727 1000000000000000000 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x799 x2103 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x848 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_zero x147 1000000000000000000 x950 32 (uninterp_frac x147 1000000000000000000)))
(assert (axiom_frac_bound x1808 x731))
(assert (axiom_frac_zero x1808 x731 1000000000000000000 x2573 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 1000000000000000000 x727 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 1000000000000000000 x838 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x1168 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x1217 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x1279 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x1423 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x1725 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x1914 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x1964 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x22 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x2357 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x2700 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x2726 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x3034 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x315 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x367 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x500 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x555 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x626 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x696 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 32 x950 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1143 x1278 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1162 x457 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1168 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1239 1000000000000000000 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1268 x390 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1279 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1420 x1153 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1519 x2210 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1725 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1829 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x1914 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x2103 x799 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x22 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x2210 x1519 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x2214 x1268 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x2246 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x231 x901 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x2357 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x2457 x1507 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x2466 x1867 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x2700 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x2965 x2729 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x3034 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x315 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x367 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x457 x1162 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x500 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x514 x3048 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x542 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x555 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x626 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x696 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x727 1000000000000000000 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x799 x2103 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x848 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_zero x1808 x731 x950 32 (uninterp_frac x1808 x731)))
(assert (axiom_frac_bound x1871 2))
(assert (axiom_frac_zero x1871 2 1000000000000000000 x2573 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 1000000000000000000 x727 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 1000000000000000000 x838 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x1168 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x1217 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x1279 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x1423 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x1725 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x1914 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x1964 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x22 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x2357 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x2700 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x2726 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x3034 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x315 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x367 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x500 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x555 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x626 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x696 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 32 x950 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1143 x1278 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1162 x457 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1168 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1239 1000000000000000000 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1268 x390 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1279 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1420 x1153 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1519 x2210 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1725 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1829 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x1914 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x2103 x799 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x22 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x2210 x1519 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x2214 x1268 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x2246 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x231 x901 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x2357 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x2457 x1507 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x2466 x1867 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x2700 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x2965 x2729 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x3034 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x315 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x367 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x457 x1162 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x500 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x514 x3048 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x542 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x555 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x626 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x696 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x727 1000000000000000000 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x799 x2103 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x848 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_zero x1871 2 x950 32 (uninterp_frac x1871 2)))
(assert (axiom_frac_bound x1887 x368))
(assert (axiom_frac_zero x1887 x368 1000000000000000000 x2573 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 1000000000000000000 x727 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 1000000000000000000 x838 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x1168 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x1217 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x1279 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x1423 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x1725 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x1914 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x1964 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x22 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x2357 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x2700 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x2726 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x3034 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x315 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x367 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x500 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x555 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x626 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x696 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 32 x950 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1143 x1278 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1162 x457 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1168 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1239 1000000000000000000 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1268 x390 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1279 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1420 x1153 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1519 x2210 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1725 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1829 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x1914 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x2103 x799 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x22 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x2210 x1519 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x2214 x1268 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x2246 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x231 x901 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x2357 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x2457 x1507 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x2466 x1867 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x2700 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x2965 x2729 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x3034 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x315 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x367 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x457 x1162 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x500 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x514 x3048 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x542 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x555 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x626 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x696 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x727 1000000000000000000 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x799 x2103 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x848 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_zero x1887 x368 x950 32 (uninterp_frac x1887 x368)))
(assert (axiom_frac_bound x1943 1000000000000000000))
(assert (axiom_frac_zero x1943 1000000000000000000 1000000000000000000 x2573 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 1000000000000000000 x727 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 1000000000000000000 x838 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x1168 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x1217 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x1279 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x1423 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x1725 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x1914 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x1964 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x22 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x2357 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x2700 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x2726 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x3034 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x315 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x367 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x500 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x555 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x626 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x696 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 32 x950 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1143 x1278 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1162 x457 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1168 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1239 1000000000000000000 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1268 x390 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1279 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1420 x1153 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1519 x2210 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1725 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1829 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x1914 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x2103 x799 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x22 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x2210 x1519 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x2214 x1268 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x2246 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x231 x901 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x2357 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x2457 x1507 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x2466 x1867 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x2700 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x2965 x2729 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x3034 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x315 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x367 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x457 x1162 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x500 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x514 x3048 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x542 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x555 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x626 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x696 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x727 1000000000000000000 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x799 x2103 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x848 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_zero x1943 1000000000000000000 x950 32 (uninterp_frac x1943 1000000000000000000)))
(assert (axiom_frac_bound x2227 x2274))
(assert (axiom_frac_zero x2227 x2274 1000000000000000000 x2573 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 1000000000000000000 x727 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 1000000000000000000 x838 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x1168 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x1217 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x1279 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x1423 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x1725 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x1914 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x1964 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x22 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x2357 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x2700 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x2726 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x3034 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x315 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x367 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x500 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x555 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x626 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x696 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 32 x950 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1143 x1278 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1162 x457 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1168 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1239 1000000000000000000 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1268 x390 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1279 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1420 x1153 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1519 x2210 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1725 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1829 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x1914 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x2103 x799 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x22 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x2210 x1519 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x2214 x1268 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x2246 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x231 x901 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x2357 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x2457 x1507 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x2466 x1867 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x2700 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x2965 x2729 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x3034 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x315 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x367 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x457 x1162 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x500 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x514 x3048 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x542 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x555 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x626 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x696 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x727 1000000000000000000 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x799 x2103 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x848 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_zero x2227 x2274 x950 32 (uninterp_frac x2227 x2274)))
(assert (axiom_frac_bound x2403 x2492))
(assert (axiom_frac_zero x2403 x2492 1000000000000000000 x2573 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 1000000000000000000 x727 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 1000000000000000000 x838 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x1168 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x1217 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x1279 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x1423 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x1725 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x1914 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x1964 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x22 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x2357 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x2700 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x2726 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x3034 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x315 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x367 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x500 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x555 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x626 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x696 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 32 x950 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1143 x1278 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1162 x457 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1168 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1239 1000000000000000000 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1268 x390 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1279 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1420 x1153 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1519 x2210 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1725 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1829 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x1914 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x2103 x799 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x22 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x2210 x1519 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x2214 x1268 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x2246 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x231 x901 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x2357 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x2457 x1507 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x2466 x1867 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x2700 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x2965 x2729 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x3034 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x315 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x367 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x457 x1162 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x500 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x514 x3048 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x542 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x555 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x626 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x696 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x727 1000000000000000000 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x799 x2103 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x848 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_zero x2403 x2492 x950 32 (uninterp_frac x2403 x2492)))
(assert (axiom_frac_bound x2773 x742))
(assert (axiom_frac_zero x2773 x742 1000000000000000000 x2573 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 1000000000000000000 x727 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 1000000000000000000 x838 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x1168 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x1217 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x1279 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x1423 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x1725 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x1914 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x1964 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x22 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x2357 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x2700 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x2726 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x3034 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x315 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x367 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x500 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x555 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x626 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x696 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 32 x950 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1143 x1278 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1162 x457 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1168 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1239 1000000000000000000 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1268 x390 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1279 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1420 x1153 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1519 x2210 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1725 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1829 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x1914 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x2103 x799 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x22 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x2210 x1519 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x2214 x1268 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x2246 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x231 x901 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x2357 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x2457 x1507 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x2466 x1867 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x2700 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x2965 x2729 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x3034 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x315 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x367 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x457 x1162 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x500 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x514 x3048 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x542 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x555 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x626 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x696 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x727 1000000000000000000 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x799 x2103 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x848 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_zero x2773 x742 x950 32 (uninterp_frac x2773 x742)))
(assert (axiom_frac_bound x2815 x731))
(assert (axiom_frac_zero x2815 x731 1000000000000000000 x2573 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 1000000000000000000 x727 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 1000000000000000000 x838 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x1168 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x1217 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x1279 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x1423 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x1725 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x1914 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x1964 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x22 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x2357 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x2700 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x2726 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x3034 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x315 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x367 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x500 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x555 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x626 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x696 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 32 x950 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1143 x1278 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1162 x457 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1168 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1239 1000000000000000000 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1268 x390 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1279 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1420 x1153 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1519 x2210 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1725 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1829 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x1914 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x2103 x799 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x22 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x2210 x1519 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x2214 x1268 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x2246 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x231 x901 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x2357 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x2457 x1507 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x2466 x1867 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x2700 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x2965 x2729 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x3034 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x315 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x367 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x457 x1162 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x500 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x514 x3048 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x542 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x555 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x626 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x696 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x727 1000000000000000000 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x799 x2103 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x848 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_zero x2815 x731 x950 32 (uninterp_frac x2815 x731)))
(assert (axiom_frac_bound x363 2))
(assert (axiom_frac_zero x363 2 1000000000000000000 x2573 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 1000000000000000000 x727 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 1000000000000000000 x838 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x1168 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x1217 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x1279 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x1423 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x1725 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x1914 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x1964 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x22 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x2357 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x2700 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x2726 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x3034 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x315 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x367 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x500 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x555 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x626 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x696 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 32 x950 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1143 x1278 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1162 x457 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1168 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1239 1000000000000000000 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1268 x390 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1279 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1420 x1153 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1519 x2210 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1725 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1829 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x1914 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x2103 x799 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x22 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x2210 x1519 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x2214 x1268 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x2246 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x231 x901 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x2357 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x2457 x1507 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x2466 x1867 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x2700 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x2965 x2729 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x3034 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x315 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x367 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x457 x1162 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x500 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x514 x3048 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x542 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x555 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x626 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x696 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x727 1000000000000000000 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x799 x2103 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x848 32 (uninterp_frac x363 2)))
(assert (axiom_frac_zero x363 2 x950 32 (uninterp_frac x363 2)))
(assert (axiom_frac_bound x449 x2401))
(assert (axiom_frac_zero x449 x2401 1000000000000000000 x2573 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 1000000000000000000 x727 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 1000000000000000000 x838 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x1168 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x1217 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x1279 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x1423 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x1725 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x1914 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x1964 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x22 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x2357 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x2700 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x2726 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x3034 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x315 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x367 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x500 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x555 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x626 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x696 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 32 x950 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1143 x1278 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1162 x457 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1168 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1239 1000000000000000000 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1268 x390 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1279 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1420 x1153 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1519 x2210 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1725 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1829 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x1914 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x2103 x799 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x22 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x2210 x1519 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x2214 x1268 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x2246 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x231 x901 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x2357 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x2457 x1507 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x2466 x1867 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x2700 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x2965 x2729 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x3034 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x315 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x367 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x457 x1162 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x500 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x514 x3048 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x542 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x555 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x626 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x696 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x727 1000000000000000000 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x799 x2103 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x848 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_zero x449 x2401 x950 32 (uninterp_frac x449 x2401)))
(assert (axiom_frac_bound x518 1000000000000000000))
(assert (axiom_frac_zero x518 1000000000000000000 1000000000000000000 x2573 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 1000000000000000000 x727 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 1000000000000000000 x838 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x1168 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x1217 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x1279 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x1423 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x1725 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x1914 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x1964 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x22 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x2357 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x2700 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x2726 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x3034 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x315 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x367 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x500 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x555 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x626 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x696 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 32 x950 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1143 x1278 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1162 x457 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1168 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1239 1000000000000000000 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1268 x390 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1279 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1420 x1153 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1519 x2210 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1725 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1829 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x1914 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x2103 x799 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x22 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x2210 x1519 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x2214 x1268 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x2246 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x231 x901 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x2357 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x2457 x1507 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x2466 x1867 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x2700 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x2965 x2729 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x3034 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x315 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x367 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x457 x1162 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x500 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x514 x3048 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x542 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x555 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x626 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x696 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x727 1000000000000000000 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x799 x2103 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x848 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_zero x518 1000000000000000000 x950 32 (uninterp_frac x518 1000000000000000000)))
(assert (axiom_frac_bound x53 2))
(assert (axiom_frac_zero x53 2 1000000000000000000 x2573 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 1000000000000000000 x727 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 1000000000000000000 x838 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x1168 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x1217 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x1279 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x1423 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x1725 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x1914 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x1964 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x22 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x2357 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x2700 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x2726 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x3034 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x315 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x367 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x500 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x555 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x626 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x696 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 32 x950 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1143 x1278 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1162 x457 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1168 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1239 1000000000000000000 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1268 x390 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1279 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1420 x1153 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1519 x2210 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1725 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1829 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x1914 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x2103 x799 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x22 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x2210 x1519 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x2214 x1268 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x2246 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x231 x901 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x2357 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x2457 x1507 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x2466 x1867 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x2700 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x2965 x2729 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x3034 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x315 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x367 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x457 x1162 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x500 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x514 x3048 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x542 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x555 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x626 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x696 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x727 1000000000000000000 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x799 x2103 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x848 32 (uninterp_frac x53 2)))
(assert (axiom_frac_zero x53 2 x950 32 (uninterp_frac x53 2)))
(assert (axiom_frac_bound x771 1000000000000000000))
(assert (axiom_frac_zero x771 1000000000000000000 1000000000000000000 x2573 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 1000000000000000000 x727 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 1000000000000000000 x838 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x1168 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x1217 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x1279 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x1423 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x1725 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x1914 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x1964 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x22 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x2357 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x2700 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x2726 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x3034 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x315 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x367 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x500 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x555 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x626 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x696 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 32 x950 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1143 x1278 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1162 x457 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1168 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1239 1000000000000000000 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1268 x390 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1279 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1420 x1153 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1519 x2210 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1725 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1829 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x1914 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x2103 x799 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x22 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x2210 x1519 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x2214 x1268 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x2246 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x231 x901 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x2357 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x2457 x1507 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x2466 x1867 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x2700 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x2965 x2729 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x3034 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x315 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x367 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x457 x1162 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x500 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x514 x3048 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x542 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x555 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x626 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x696 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x727 1000000000000000000 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x799 x2103 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x848 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_zero x771 1000000000000000000 x950 32 (uninterp_frac x771 1000000000000000000)))
(assert (axiom_frac_bound x80 2))
(assert (axiom_frac_zero x80 2 1000000000000000000 x2573 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 1000000000000000000 x727 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 1000000000000000000 x838 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x1168 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x1217 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x1279 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x1423 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x1725 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x1914 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x1964 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x22 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x2357 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x2700 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x2726 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x3034 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x315 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x367 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x500 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x555 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x626 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x696 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 32 x950 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1143 x1278 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1162 x457 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1168 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1239 1000000000000000000 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1268 x390 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1279 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1420 x1153 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1519 x2210 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1725 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1829 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x1914 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x2103 x799 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x22 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x2210 x1519 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x2214 x1268 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x2246 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x231 x901 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x2357 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x2457 x1507 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x2466 x1867 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x2700 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x2965 x2729 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x3034 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x315 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x367 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x457 x1162 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x500 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x514 x3048 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x542 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x555 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x626 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x696 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x727 1000000000000000000 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x799 x2103 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x848 32 (uninterp_frac x80 2)))
(assert (axiom_frac_zero x80 2 x950 32 (uninterp_frac x80 2)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x1000))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1003))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1014))
(assert (axiom_int_approximation x1015))
(assert (axiom_int_approximation x1017))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1024))
(assert (axiom_int_approximation x1026))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1041))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1046))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1051))
(assert (axiom_int_approximation x1052))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1056))
(assert (axiom_int_approximation x1057))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1060))
(assert (axiom_int_approximation x1062))
(assert (axiom_int_approximation x1063))
(assert (axiom_int_approximation x1064))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1093))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1097))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1102))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x1119))
(assert (axiom_int_approximation x1120))
(assert (axiom_int_approximation x1123))
(assert (axiom_int_approximation x1124))
(assert (axiom_int_approximation x1125))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1139))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1147))
(assert (axiom_int_approximation x1149))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1150))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1154))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1162))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1166))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x1168))
(assert (axiom_int_approximation x1169))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1175))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x1190))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1194))
(assert (axiom_int_approximation x1195))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1197))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x1211))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1216))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1218))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1229))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1231))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1234))
(assert (axiom_int_approximation x1235))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1249))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1257))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1267))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1269))
(assert (axiom_int_approximation x127))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1274))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1277))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x1281))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1305))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1308))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x1330))
(assert (axiom_int_approximation x1331))
(assert (axiom_int_approximation x1333))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x1339))
(assert (axiom_int_approximation x1341))
(assert (axiom_int_approximation x1346))
(assert (axiom_int_approximation x1347))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1358))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1360))
(assert (axiom_int_approximation x1361))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1373))
(assert (axiom_int_approximation x138))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1382))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1392))
(assert (axiom_int_approximation x1394))
(assert (axiom_int_approximation x1395))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1401))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1407))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1412))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1417))
(assert (axiom_int_approximation x1418))
(assert (axiom_int_approximation x1420))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1426))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1436))
(assert (axiom_int_approximation x1438))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1444))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1454))
(assert (axiom_int_approximation x1456))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1461))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1464))
(assert (axiom_int_approximation x1465))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1480))
(assert (axiom_int_approximation x1483))
(assert (axiom_int_approximation x1484))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1492))
(assert (axiom_int_approximation x1496))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x1501))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x1508))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1513))
(assert (axiom_int_approximation x1516))
(assert (axiom_int_approximation x1519))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1523))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x1529))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1530))
(assert (axiom_int_approximation x1532))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x1542))
(assert (axiom_int_approximation x1544))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x1549))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1551))
(assert (axiom_int_approximation x1552))
(assert (axiom_int_approximation x1553))
(assert (axiom_int_approximation x1555))
(assert (axiom_int_approximation x1556))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1562))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1565))
(assert (axiom_int_approximation x1566))
(assert (axiom_int_approximation x1567))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1571))
(assert (axiom_int_approximation x1572))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1574))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x1577))
(assert (axiom_int_approximation x1578))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1583))
(assert (axiom_int_approximation x1584))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1586))
(assert (axiom_int_approximation x1587))
(assert (axiom_int_approximation x1589))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x1593))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1596))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1601))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1605))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1610))
(assert (axiom_int_approximation x1614))
(assert (axiom_int_approximation x1615))
(assert (axiom_int_approximation x1617))
(assert (axiom_int_approximation x1618))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x1620))
(assert (axiom_int_approximation x1622))
(assert (axiom_int_approximation x1623))
(assert (axiom_int_approximation x1627))
(assert (axiom_int_approximation x1628))
(assert (axiom_int_approximation x1629))
(assert (axiom_int_approximation x1631))
(assert (axiom_int_approximation x1632))
(assert (axiom_int_approximation x1633))
(assert (axiom_int_approximation x1634))
(assert (axiom_int_approximation x1636))
(assert (axiom_int_approximation x1638))
(assert (axiom_int_approximation x1639))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x1640))
(assert (axiom_int_approximation x1641))
(assert (axiom_int_approximation x1642))
(assert (axiom_int_approximation x1643))
(assert (axiom_int_approximation x1646))
(assert (axiom_int_approximation x1648))
(assert (axiom_int_approximation x1651))
(assert (axiom_int_approximation x1652))
(assert (axiom_int_approximation x1660))
(assert (axiom_int_approximation x1661))
(assert (axiom_int_approximation x1664))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x1669))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x1672))
(assert (axiom_int_approximation x1673))
(assert (axiom_int_approximation x1674))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1677))
(assert (axiom_int_approximation x1678))
(assert (axiom_int_approximation x1681))
(assert (axiom_int_approximation x1682))
(assert (axiom_int_approximation x1684))
(assert (axiom_int_approximation x1685))
(assert (axiom_int_approximation x1687))
(assert (axiom_int_approximation x1688))
(assert (axiom_int_approximation x1689))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x1690))
(assert (axiom_int_approximation x1692))
(assert (axiom_int_approximation x1693))
(assert (axiom_int_approximation x1695))
(assert (axiom_int_approximation x1698))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x170))
(assert (axiom_int_approximation x1701))
(assert (axiom_int_approximation x1703))
(assert (axiom_int_approximation x1704))
(assert (axiom_int_approximation x1705))
(assert (axiom_int_approximation x1706))
(assert (axiom_int_approximation x1707))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1710))
(assert (axiom_int_approximation x1711))
(assert (axiom_int_approximation x1712))
(assert (axiom_int_approximation x1713))
(assert (axiom_int_approximation x1714))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x1718))
(assert (axiom_int_approximation x1720))
(assert (axiom_int_approximation x1722))
(assert (axiom_int_approximation x1724))
(assert (axiom_int_approximation x1725))
(assert (axiom_int_approximation x1727))
(assert (axiom_int_approximation x1732))
(assert (axiom_int_approximation x1736))
(assert (axiom_int_approximation x1737))
(assert (axiom_int_approximation x1739))
(assert (axiom_int_approximation x1742))
(assert (axiom_int_approximation x1743))
(assert (axiom_int_approximation x1744))
(assert (axiom_int_approximation x1745))
(assert (axiom_int_approximation x1747))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x1750))
(assert (axiom_int_approximation x1751))
(assert (axiom_int_approximation x1754))
(assert (axiom_int_approximation x1755))
(assert (axiom_int_approximation x1756))
(assert (axiom_int_approximation x1758))
(assert (axiom_int_approximation x1760))
(assert (axiom_int_approximation x1764))
(assert (axiom_int_approximation x1765))
(assert (axiom_int_approximation x1766))
(assert (axiom_int_approximation x1768))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x1770))
(assert (axiom_int_approximation x1771))
(assert (axiom_int_approximation x1772))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x1776))
(assert (axiom_int_approximation x1778))
(assert (axiom_int_approximation x1780))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1783))
(assert (axiom_int_approximation x1784))
(assert (axiom_int_approximation x1785))
(assert (axiom_int_approximation x1788))
(assert (axiom_int_approximation x1789))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x1790))
(assert (axiom_int_approximation x1791))
(assert (axiom_int_approximation x1794))
(assert (axiom_int_approximation x1796))
(assert (axiom_int_approximation x1797))
(assert (axiom_int_approximation x1799))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x1800))
(assert (axiom_int_approximation x1801))
(assert (axiom_int_approximation x1802))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1804))
(assert (axiom_int_approximation x1805))
(assert (axiom_int_approximation x1807))
(assert (axiom_int_approximation x1808))
(assert (axiom_int_approximation x1809))
(assert (axiom_int_approximation x1811))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1815))
(assert (axiom_int_approximation x1816))
(assert (axiom_int_approximation x1818))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x1821))
(assert (axiom_int_approximation x1823))
(assert (axiom_int_approximation x1824))
(assert (axiom_int_approximation x1827))
(assert (axiom_int_approximation x1828))
(assert (axiom_int_approximation x1829))
(assert (axiom_int_approximation x1830))
(assert (axiom_int_approximation x1831))
(assert (axiom_int_approximation x1832))
(assert (axiom_int_approximation x1836))
(assert (axiom_int_approximation x1837))
(assert (axiom_int_approximation x1840))
(assert (axiom_int_approximation x1843))
(assert (axiom_int_approximation x1844))
(assert (axiom_int_approximation x1846))
(assert (axiom_int_approximation x1848))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x1851))
(assert (axiom_int_approximation x1852))
(assert (axiom_int_approximation x1853))
(assert (axiom_int_approximation x1854))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1857))
(assert (axiom_int_approximation x1858))
(assert (axiom_int_approximation x1859))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x1862))
(assert (axiom_int_approximation x1864))
(assert (axiom_int_approximation x1865))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x1869))
(assert (axiom_int_approximation x1870))
(assert (axiom_int_approximation x1871))
(assert (axiom_int_approximation x1872))
(assert (axiom_int_approximation x1873))
(assert (axiom_int_approximation x1875))
(assert (axiom_int_approximation x1876))
(assert (axiom_int_approximation x1878))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x1880))
(assert (axiom_int_approximation x1881))
(assert (axiom_int_approximation x1882))
(assert (axiom_int_approximation x1883))
(assert (axiom_int_approximation x1884))
(assert (axiom_int_approximation x1886))
(assert (axiom_int_approximation x1887))
(assert (axiom_int_approximation x1889))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1895))
(assert (axiom_int_approximation x1897))
(assert (axiom_int_approximation x1898))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x1904))
(assert (axiom_int_approximation x1906))
(assert (axiom_int_approximation x1909))
(assert (axiom_int_approximation x1910))
(assert (axiom_int_approximation x1911))
(assert (axiom_int_approximation x1914))
(assert (axiom_int_approximation x1916))
(assert (axiom_int_approximation x1919))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x1921))
(assert (axiom_int_approximation x1923))
(assert (axiom_int_approximation x1925))
(assert (axiom_int_approximation x1928))
(assert (axiom_int_approximation x1929))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x1930))
(assert (axiom_int_approximation x1931))
(assert (axiom_int_approximation x1933))
(assert (axiom_int_approximation x1936))
(assert (axiom_int_approximation x1938))
(assert (axiom_int_approximation x1939))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x1940))
(assert (axiom_int_approximation x1943))
(assert (axiom_int_approximation x1944))
(assert (axiom_int_approximation x1945))
(assert (axiom_int_approximation x1946))
(assert (axiom_int_approximation x1947))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x1953))
(assert (axiom_int_approximation x1955))
(assert (axiom_int_approximation x1959))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x1962))
(assert (axiom_int_approximation x1963))
(assert (axiom_int_approximation x1964))
(assert (axiom_int_approximation x1967))
(assert (axiom_int_approximation x1968))
(assert (axiom_int_approximation x1969))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x1972))
(assert (axiom_int_approximation x1974))
(assert (axiom_int_approximation x1975))
(assert (axiom_int_approximation x1976))
(assert (axiom_int_approximation x1984))
(assert (axiom_int_approximation x1985))
(assert (axiom_int_approximation x1986))
(assert (axiom_int_approximation x1987))
(assert (axiom_int_approximation x1988))
(assert (axiom_int_approximation x1990))
(assert (axiom_int_approximation x1991))
(assert (axiom_int_approximation x1992))
(assert (axiom_int_approximation x1994))
(assert (axiom_int_approximation x1998))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x2003))
(assert (axiom_int_approximation x2006))
(assert (axiom_int_approximation x2007))
(assert (axiom_int_approximation x2009))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x2016))
(assert (axiom_int_approximation x2017))
(assert (axiom_int_approximation x2021))
(assert (axiom_int_approximation x2026))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x2030))
(assert (axiom_int_approximation x2033))
(assert (axiom_int_approximation x2034))
(assert (axiom_int_approximation x2035))
(assert (axiom_int_approximation x2037))
(assert (axiom_int_approximation x2038))
(assert (axiom_int_approximation x2041))
(assert (axiom_int_approximation x2042))
(assert (axiom_int_approximation x2043))
(assert (axiom_int_approximation x2046))
(assert (axiom_int_approximation x2047))
(assert (axiom_int_approximation x2048))
(assert (axiom_int_approximation x2049))
(assert (axiom_int_approximation x2053))
(assert (axiom_int_approximation x2054))
(assert (axiom_int_approximation x2055))
(assert (axiom_int_approximation x2057))
(assert (axiom_int_approximation x2058))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x2061))
(assert (axiom_int_approximation x2066))
(assert (axiom_int_approximation x2071))
(assert (axiom_int_approximation x2075))
(assert (axiom_int_approximation x2076))
(assert (axiom_int_approximation x2077))
(assert (axiom_int_approximation x2080))
(assert (axiom_int_approximation x2081))
(assert (axiom_int_approximation x2082))
(assert (axiom_int_approximation x2084))
(assert (axiom_int_approximation x2085))
(assert (axiom_int_approximation x2087))
(assert (axiom_int_approximation x2088))
(assert (axiom_int_approximation x2089))
(assert (axiom_int_approximation x2090))
(assert (axiom_int_approximation x2092))
(assert (axiom_int_approximation x2093))
(assert (axiom_int_approximation x2095))
(assert (axiom_int_approximation x2096))
(assert (axiom_int_approximation x2099))
(assert (axiom_int_approximation x2103))
(assert (axiom_int_approximation x2104))
(assert (axiom_int_approximation x2106))
(assert (axiom_int_approximation x2107))
(assert (axiom_int_approximation x2108))
(assert (axiom_int_approximation x2110))
(assert (axiom_int_approximation x2112))
(assert (axiom_int_approximation x2119))
(assert (axiom_int_approximation x2120))
(assert (axiom_int_approximation x2124))
(assert (axiom_int_approximation x2126))
(assert (axiom_int_approximation x2127))
(assert (axiom_int_approximation x2128))
(assert (axiom_int_approximation x2129))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x2130))
(assert (axiom_int_approximation x2131))
(assert (axiom_int_approximation x2132))
(assert (axiom_int_approximation x2134))
(assert (axiom_int_approximation x2137))
(assert (axiom_int_approximation x2139))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x2142))
(assert (axiom_int_approximation x2144))
(assert (axiom_int_approximation x2145))
(assert (axiom_int_approximation x2146))
(assert (axiom_int_approximation x2147))
(assert (axiom_int_approximation x2148))
(assert (axiom_int_approximation x2149))
(assert (axiom_int_approximation x2150))
(assert (axiom_int_approximation x2151))
(assert (axiom_int_approximation x2153))
(assert (axiom_int_approximation x2154))
(assert (axiom_int_approximation x2155))
(assert (axiom_int_approximation x2157))
(assert (axiom_int_approximation x2160))
(assert (axiom_int_approximation x2168))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x2170))
(assert (axiom_int_approximation x2171))
(assert (axiom_int_approximation x2175))
(assert (axiom_int_approximation x2178))
(assert (axiom_int_approximation x2179))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x2181))
(assert (axiom_int_approximation x2182))
(assert (axiom_int_approximation x2184))
(assert (axiom_int_approximation x2185))
(assert (axiom_int_approximation x2186))
(assert (axiom_int_approximation x2187))
(assert (axiom_int_approximation x2188))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x2190))
(assert (axiom_int_approximation x2191))
(assert (axiom_int_approximation x2192))
(assert (axiom_int_approximation x2193))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x2201))
(assert (axiom_int_approximation x2205))
(assert (axiom_int_approximation x2206))
(assert (axiom_int_approximation x2207))
(assert (axiom_int_approximation x2209))
(assert (axiom_int_approximation x2210))
(assert (axiom_int_approximation x2211))
(assert (axiom_int_approximation x2212))
(assert (axiom_int_approximation x2213))
(assert (axiom_int_approximation x2214))
(assert (axiom_int_approximation x2215))
(assert (axiom_int_approximation x2216))
(assert (axiom_int_approximation x2217))
(assert (axiom_int_approximation x2219))
(assert (axiom_int_approximation x2220))
(assert (axiom_int_approximation x2223))
(assert (axiom_int_approximation x2227))
(assert (axiom_int_approximation x2228))
(assert (axiom_int_approximation x2229))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x2234))
(assert (axiom_int_approximation x2238))
(assert (axiom_int_approximation x2239))
(assert (axiom_int_approximation x2240))
(assert (axiom_int_approximation x2242))
(assert (axiom_int_approximation x2244))
(assert (axiom_int_approximation x2246))
(assert (axiom_int_approximation x2247))
(assert (axiom_int_approximation x2248))
(assert (axiom_int_approximation x2250))
(assert (axiom_int_approximation x2252))
(assert (axiom_int_approximation x2253))
(assert (axiom_int_approximation x2254))
(assert (axiom_int_approximation x2256))
(assert (axiom_int_approximation x2258))
(assert (axiom_int_approximation x2262))
(assert (axiom_int_approximation x2263))
(assert (axiom_int_approximation x2264))
(assert (axiom_int_approximation x2265))
(assert (axiom_int_approximation x2266))
(assert (axiom_int_approximation x227))
(assert (axiom_int_approximation x2274))
(assert (axiom_int_approximation x2275))
(assert (axiom_int_approximation x2276))
(assert (axiom_int_approximation x2277))
(assert (axiom_int_approximation x2278))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x2281))
(assert (axiom_int_approximation x2284))
(assert (axiom_int_approximation x2285))
(assert (axiom_int_approximation x2287))
(assert (axiom_int_approximation x2289))
(assert (axiom_int_approximation x2291))
(assert (axiom_int_approximation x2293))
(assert (axiom_int_approximation x2295))
(assert (axiom_int_approximation x2296))
(assert (axiom_int_approximation x2297))
(assert (axiom_int_approximation x2298))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x2304))
(assert (axiom_int_approximation x2305))
(assert (axiom_int_approximation x2307))
(assert (axiom_int_approximation x2309))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x2310))
(assert (axiom_int_approximation x2311))
(assert (axiom_int_approximation x2318))
(assert (axiom_int_approximation x2319))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x2321))
(assert (axiom_int_approximation x2322))
(assert (axiom_int_approximation x2326))
(assert (axiom_int_approximation x2327))
(assert (axiom_int_approximation x2331))
(assert (axiom_int_approximation x2332))
(assert (axiom_int_approximation x2333))
(assert (axiom_int_approximation x2334))
(assert (axiom_int_approximation x2335))
(assert (axiom_int_approximation x2339))
(assert (axiom_int_approximation x2341))
(assert (axiom_int_approximation x2343))
(assert (axiom_int_approximation x2344))
(assert (axiom_int_approximation x2345))
(assert (axiom_int_approximation x2346))
(assert (axiom_int_approximation x2347))
(assert (axiom_int_approximation x2349))
(assert (axiom_int_approximation x2351))
(assert (axiom_int_approximation x2354))
(assert (axiom_int_approximation x2355))
(assert (axiom_int_approximation x2356))
(assert (axiom_int_approximation x2357))
(assert (axiom_int_approximation x2358))
(assert (axiom_int_approximation x2359))
(assert (axiom_int_approximation x236))
(assert (axiom_int_approximation x2360))
(assert (axiom_int_approximation x2361))
(assert (axiom_int_approximation x2362))
(assert (axiom_int_approximation x2363))
(assert (axiom_int_approximation x2364))
(assert (axiom_int_approximation x2365))
(assert (axiom_int_approximation x2366))
(assert (axiom_int_approximation x2367))
(assert (axiom_int_approximation x2368))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x2371))
(assert (axiom_int_approximation x2373))
(assert (axiom_int_approximation x2375))
(assert (axiom_int_approximation x2379))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x2380))
(assert (axiom_int_approximation x2381))
(assert (axiom_int_approximation x2382))
(assert (axiom_int_approximation x2383))
(assert (axiom_int_approximation x2384))
(assert (axiom_int_approximation x2386))
(assert (axiom_int_approximation x2387))
(assert (axiom_int_approximation x2388))
(assert (axiom_int_approximation x2395))
(assert (axiom_int_approximation x2398))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x2400))
(assert (axiom_int_approximation x2401))
(assert (axiom_int_approximation x2402))
(assert (axiom_int_approximation x2403))
(assert (axiom_int_approximation x2406))
(assert (axiom_int_approximation x2408))
(assert (axiom_int_approximation x2409))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x2410))
(assert (axiom_int_approximation x2412))
(assert (axiom_int_approximation x2413))
(assert (axiom_int_approximation x2414))
(assert (axiom_int_approximation x2416))
(assert (axiom_int_approximation x2418))
(assert (axiom_int_approximation x242))
(assert (axiom_int_approximation x2420))
(assert (axiom_int_approximation x2424))
(assert (axiom_int_approximation x2425))
(assert (axiom_int_approximation x2428))
(assert (axiom_int_approximation x2429))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x2430))
(assert (axiom_int_approximation x2432))
(assert (axiom_int_approximation x2433))
(assert (axiom_int_approximation x2434))
(assert (axiom_int_approximation x2436))
(assert (axiom_int_approximation x2437))
(assert (axiom_int_approximation x2439))
(assert (axiom_int_approximation x2440))
(assert (axiom_int_approximation x2444))
(assert (axiom_int_approximation x2445))
(assert (axiom_int_approximation x2448))
(assert (axiom_int_approximation x2449))
(assert (axiom_int_approximation x2450))
(assert (axiom_int_approximation x2451))
(assert (axiom_int_approximation x2453))
(assert (axiom_int_approximation x2454))
(assert (axiom_int_approximation x2455))
(assert (axiom_int_approximation x2457))
(assert (axiom_int_approximation x2458))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x2460))
(assert (axiom_int_approximation x2461))
(assert (axiom_int_approximation x2465))
(assert (axiom_int_approximation x2466))
(assert (axiom_int_approximation x2467))
(assert (axiom_int_approximation x2468))
(assert (axiom_int_approximation x2469))
(assert (axiom_int_approximation x247))
(assert (axiom_int_approximation x2472))
(assert (axiom_int_approximation x2473))
(assert (axiom_int_approximation x2474))
(assert (axiom_int_approximation x2475))
(assert (axiom_int_approximation x2477))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x2481))
(assert (axiom_int_approximation x2483))
(assert (axiom_int_approximation x2484))
(assert (axiom_int_approximation x2485))
(assert (axiom_int_approximation x2487))
(assert (axiom_int_approximation x2488))
(assert (axiom_int_approximation x2489))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x2490))
(assert (axiom_int_approximation x2491))
(assert (axiom_int_approximation x2492))
(assert (axiom_int_approximation x2493))
(assert (axiom_int_approximation x2494))
(assert (axiom_int_approximation x2495))
(assert (axiom_int_approximation x2497))
(assert (axiom_int_approximation x2498))
(assert (axiom_int_approximation x2499))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x2500))
(assert (axiom_int_approximation x2501))
(assert (axiom_int_approximation x2502))
(assert (axiom_int_approximation x2503))
(assert (axiom_int_approximation x2509))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x2511))
(assert (axiom_int_approximation x2513))
(assert (axiom_int_approximation x2516))
(assert (axiom_int_approximation x2517))
(assert (axiom_int_approximation x2518))
(assert (axiom_int_approximation x2519))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x2522))
(assert (axiom_int_approximation x2524))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x2531))
(assert (axiom_int_approximation x2532))
(assert (axiom_int_approximation x2535))
(assert (axiom_int_approximation x2536))
(assert (axiom_int_approximation x2538))
(assert (axiom_int_approximation x2540))
(assert (axiom_int_approximation x2541))
(assert (axiom_int_approximation x2542))
(assert (axiom_int_approximation x2546))
(assert (axiom_int_approximation x2548))
(assert (axiom_int_approximation x2549))
(assert (axiom_int_approximation x2552))
(assert (axiom_int_approximation x2553))
(assert (axiom_int_approximation x2555))
(assert (axiom_int_approximation x2556))
(assert (axiom_int_approximation x2557))
(assert (axiom_int_approximation x2558))
(assert (axiom_int_approximation x2559))
(assert (axiom_int_approximation x2561))
(assert (axiom_int_approximation x2562))
(assert (axiom_int_approximation x2564))
(assert (axiom_int_approximation x2568))
(assert (axiom_int_approximation x2569))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x2572))
(assert (axiom_int_approximation x2573))
(assert (axiom_int_approximation x2575))
(assert (axiom_int_approximation x2576))
(assert (axiom_int_approximation x2577))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x2581))
(assert (axiom_int_approximation x2584))
(assert (axiom_int_approximation x2586))
(assert (axiom_int_approximation x2587))
(assert (axiom_int_approximation x2589))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x2591))
(assert (axiom_int_approximation x2592))
(assert (axiom_int_approximation x2593))
(assert (axiom_int_approximation x2594))
(assert (axiom_int_approximation x2595))
(assert (axiom_int_approximation x2596))
(assert (axiom_int_approximation x2597))
(assert (axiom_int_approximation x2598))
(assert (axiom_int_approximation x2603))
(assert (axiom_int_approximation x2605))
(assert (axiom_int_approximation x2607))
(assert (axiom_int_approximation x2609))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x2610))
(assert (axiom_int_approximation x2611))
(assert (axiom_int_approximation x2612))
(assert (axiom_int_approximation x2613))
(assert (axiom_int_approximation x2615))
(assert (axiom_int_approximation x2617))
(assert (axiom_int_approximation x2618))
(assert (axiom_int_approximation x2619))
(assert (axiom_int_approximation x262))
(assert (axiom_int_approximation x2620))
(assert (axiom_int_approximation x2621))
(assert (axiom_int_approximation x2622))
(assert (axiom_int_approximation x2623))
(assert (axiom_int_approximation x2624))
(assert (axiom_int_approximation x2625))
(assert (axiom_int_approximation x2629))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x2630))
(assert (axiom_int_approximation x2635))
(assert (axiom_int_approximation x2636))
(assert (axiom_int_approximation x2637))
(assert (axiom_int_approximation x2639))
(assert (axiom_int_approximation x2640))
(assert (axiom_int_approximation x2642))
(assert (axiom_int_approximation x2648))
(assert (axiom_int_approximation x2649))
(assert (axiom_int_approximation x2650))
(assert (axiom_int_approximation x2651))
(assert (axiom_int_approximation x2653))
(assert (axiom_int_approximation x2658))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x2660))
(assert (axiom_int_approximation x2663))
(assert (axiom_int_approximation x2665))
(assert (axiom_int_approximation x2668))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x2670))
(assert (axiom_int_approximation x2671))
(assert (axiom_int_approximation x2675))
(assert (axiom_int_approximation x2676))
(assert (axiom_int_approximation x2677))
(assert (axiom_int_approximation x2678))
(assert (axiom_int_approximation x2679))
(assert (axiom_int_approximation x2681))
(assert (axiom_int_approximation x2684))
(assert (axiom_int_approximation x2686))
(assert (axiom_int_approximation x2687))
(assert (axiom_int_approximation x2688))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x2690))
(assert (axiom_int_approximation x2692))
(assert (axiom_int_approximation x2693))
(assert (axiom_int_approximation x2695))
(assert (axiom_int_approximation x2697))
(assert (axiom_int_approximation x2698))
(assert (axiom_int_approximation x2699))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x2700))
(assert (axiom_int_approximation x2701))
(assert (axiom_int_approximation x2703))
(assert (axiom_int_approximation x2709))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x2710))
(assert (axiom_int_approximation x2711))
(assert (axiom_int_approximation x2714))
(assert (axiom_int_approximation x2716))
(assert (axiom_int_approximation x2717))
(assert (axiom_int_approximation x2718))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x2721))
(assert (axiom_int_approximation x2722))
(assert (axiom_int_approximation x2725))
(assert (axiom_int_approximation x2726))
(assert (axiom_int_approximation x2728))
(assert (axiom_int_approximation x2729))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x2731))
(assert (axiom_int_approximation x2734))
(assert (axiom_int_approximation x2735))
(assert (axiom_int_approximation x2738))
(assert (axiom_int_approximation x2739))
(assert (axiom_int_approximation x2742))
(assert (axiom_int_approximation x2744))
(assert (axiom_int_approximation x2745))
(assert (axiom_int_approximation x2747))
(assert (axiom_int_approximation x2749))
(assert (axiom_int_approximation x2751))
(assert (axiom_int_approximation x2752))
(assert (axiom_int_approximation x2754))
(assert (axiom_int_approximation x2756))
(assert (axiom_int_approximation x2757))
(assert (axiom_int_approximation x2760))
(assert (axiom_int_approximation x2761))
(assert (axiom_int_approximation x2762))
(assert (axiom_int_approximation x2765))
(assert (axiom_int_approximation x2766))
(assert (axiom_int_approximation x2767))
(assert (axiom_int_approximation x2768))
(assert (axiom_int_approximation x2770))
(assert (axiom_int_approximation x2771))
(assert (axiom_int_approximation x2772))
(assert (axiom_int_approximation x2773))
(assert (axiom_int_approximation x2774))
(assert (axiom_int_approximation x2777))
(assert (axiom_int_approximation x2778))
(assert (axiom_int_approximation x2779))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x2784))
(assert (axiom_int_approximation x2789))
(assert (axiom_int_approximation x2790))
(assert (axiom_int_approximation x2792))
(assert (axiom_int_approximation x2793))
(assert (axiom_int_approximation x2794))
(assert (axiom_int_approximation x2797))
(assert (axiom_int_approximation x2799))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x2801))
(assert (axiom_int_approximation x2803))
(assert (axiom_int_approximation x2804))
(assert (axiom_int_approximation x2806))
(assert (axiom_int_approximation x2809))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x2811))
(assert (axiom_int_approximation x2812))
(assert (axiom_int_approximation x2813))
(assert (axiom_int_approximation x2814))
(assert (axiom_int_approximation x2815))
(assert (axiom_int_approximation x2816))
(assert (axiom_int_approximation x2817))
(assert (axiom_int_approximation x2819))
(assert (axiom_int_approximation x2820))
(assert (axiom_int_approximation x2825))
(assert (axiom_int_approximation x2826))
(assert (axiom_int_approximation x2827))
(assert (axiom_int_approximation x2828))
(assert (axiom_int_approximation x2829))
(assert (axiom_int_approximation x2831))
(assert (axiom_int_approximation x2832))
(assert (axiom_int_approximation x2833))
(assert (axiom_int_approximation x2835))
(assert (axiom_int_approximation x2836))
(assert (axiom_int_approximation x2837))
(assert (axiom_int_approximation x2840))
(assert (axiom_int_approximation x2841))
(assert (axiom_int_approximation x2847))
(assert (axiom_int_approximation x2848))
(assert (axiom_int_approximation x2849))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x2854))
(assert (axiom_int_approximation x2856))
(assert (axiom_int_approximation x2857))
(assert (axiom_int_approximation x2859))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x2864))
(assert (axiom_int_approximation x2866))
(assert (axiom_int_approximation x2867))
(assert (axiom_int_approximation x2868))
(assert (axiom_int_approximation x2869))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x2870))
(assert (axiom_int_approximation x2871))
(assert (axiom_int_approximation x2872))
(assert (axiom_int_approximation x2873))
(assert (axiom_int_approximation x2874))
(assert (axiom_int_approximation x2876))
(assert (axiom_int_approximation x2878))
(assert (axiom_int_approximation x2879))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x2881))
(assert (axiom_int_approximation x2882))
(assert (axiom_int_approximation x2883))
(assert (axiom_int_approximation x2886))
(assert (axiom_int_approximation x2888))
(assert (axiom_int_approximation x2889))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x2890))
(assert (axiom_int_approximation x2891))
(assert (axiom_int_approximation x2893))
(assert (axiom_int_approximation x2894))
(assert (axiom_int_approximation x2896))
(assert (axiom_int_approximation x2897))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x2900))
(assert (axiom_int_approximation x2901))
(assert (axiom_int_approximation x2902))
(assert (axiom_int_approximation x2906))
(assert (axiom_int_approximation x2908))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x2914))
(assert (axiom_int_approximation x2916))
(assert (axiom_int_approximation x2917))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x2921))
(assert (axiom_int_approximation x2922))
(assert (axiom_int_approximation x2923))
(assert (axiom_int_approximation x2925))
(assert (axiom_int_approximation x2928))
(assert (axiom_int_approximation x2929))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x2935))
(assert (axiom_int_approximation x2936))
(assert (axiom_int_approximation x2937))
(assert (axiom_int_approximation x2938))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x2940))
(assert (axiom_int_approximation x2941))
(assert (axiom_int_approximation x2942))
(assert (axiom_int_approximation x2945))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x2952))
(assert (axiom_int_approximation x2953))
(assert (axiom_int_approximation x2954))
(assert (axiom_int_approximation x2956))
(assert (axiom_int_approximation x2957))
(assert (axiom_int_approximation x2958))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x2961))
(assert (axiom_int_approximation x2962))
(assert (axiom_int_approximation x2963))
(assert (axiom_int_approximation x2965))
(assert (axiom_int_approximation x2966))
(assert (axiom_int_approximation x2967))
(assert (axiom_int_approximation x2968))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x2970))
(assert (axiom_int_approximation x2971))
(assert (axiom_int_approximation x2972))
(assert (axiom_int_approximation x2973))
(assert (axiom_int_approximation x2974))
(assert (axiom_int_approximation x2975))
(assert (axiom_int_approximation x2977))
(assert (axiom_int_approximation x2982))
(assert (axiom_int_approximation x2983))
(assert (axiom_int_approximation x2984))
(assert (axiom_int_approximation x2987))
(assert (axiom_int_approximation x2989))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x2990))
(assert (axiom_int_approximation x2991))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x3001))
(assert (axiom_int_approximation x3002))
(assert (axiom_int_approximation x3003))
(assert (axiom_int_approximation x3008))
(assert (axiom_int_approximation x3009))
(assert (axiom_int_approximation x3010))
(assert (axiom_int_approximation x3011))
(assert (axiom_int_approximation x3012))
(assert (axiom_int_approximation x3017))
(assert (axiom_int_approximation x3020))
(assert (axiom_int_approximation x3023))
(assert (axiom_int_approximation x3024))
(assert (axiom_int_approximation x3025))
(assert (axiom_int_approximation x3029))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x3030))
(assert (axiom_int_approximation x3031))
(assert (axiom_int_approximation x3032))
(assert (axiom_int_approximation x3033))
(assert (axiom_int_approximation x3034))
(assert (axiom_int_approximation x3035))
(assert (axiom_int_approximation x3036))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x3041))
(assert (axiom_int_approximation x3044))
(assert (axiom_int_approximation x3045))
(assert (axiom_int_approximation x3046))
(assert (axiom_int_approximation x3048))
(assert (axiom_int_approximation x3050))
(assert (axiom_int_approximation x3051))
(assert (axiom_int_approximation x3055))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x453))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x468))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x482))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x499))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x507))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x53))
(assert (axiom_int_approximation x531))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x539))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x554))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x605))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x62))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x631))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x65))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x699))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x721))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x731))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x767))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x788))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x793))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x803))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x810))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x815))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x820))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x822))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x843))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x851))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x859))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x866))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x874))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x877))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x880))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x909))
(assert (axiom_int_approximation x913))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x943))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x950))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x952))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x959))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x965))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x972))
(assert (axiom_int_approximation x973))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x975))
(assert (axiom_int_approximation x976))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x987))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x998))
(assert (= (x2764 x1873) (ite (= x1873 x3032) x573 (x890 x1873))))
(assert (= (x2720 x294) (ite (= x972 x294) x1063 (x1903 x294))))
(assert (= (x2167 x1348) (ite (and x2821 x2422 (not x566)) (x2189 x1348) (x168 x1348))))
(assert (= (ite (and x2759 x682) (x2795 x261) (x2138 x261)) (x798 x261)))
(assert (x107 x738))
(assert (= (ite (and (not x2097) x1892 x896) (x2539 x846) (x2300 x846)) (x1845 x846)))
(assert (= (x2707 x2406) (ite (= x2406 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2406))))
(assert (x405 x195))
(assert (= (x225 x2725) (ite (= x2725 x796) x2187 (x801 x2725))))
(assert (= (ite (= x420 x2751) x952 (x1769 x2751)) (x651 x2751)))
(assert (= (ite (= x2367 x1544) x2894 (x2255 x1544)) (x1769 x1544)))
(assert (= (x887 x2309) (ite (= x2309 x1231) x775 (x44 x2309))))
(assert (= (ite (= x2406 x2107) x315 (x533 x2406)) (x807 x2406)))
(assert (= (x225 x780) (ite (= x780 x796) x2187 (x801 x780))))
(assert (= (x1777 x966) (ite (and x2123 (not x208)) (x1845 x966) (x301 x966))))
(assert (= (x915 x1780) (ite (and x2851 x1335) (x3018 x1780) (ite (and x1301 (not x3047)) (x1317 x1780) (x2805 x1780)))))
(assert (= (ite (= x2387 x424) x2357 (x2997 x2387)) (x1958 x2387)))
(assert (= (x2255 x2387) (ite (= x2387 x499) x2188 (x2707 x2387))))
(assert (= (x2328 x1594) (ite (and x2926 x923) (x1952 x1594) (ite (and (not x602) x1236) (x595 x1594) (x1546 x1594)))))
(assert (x107 x3034))
(assert (= (ite (= x2128 x455) x1897 (x657 x455)) (x125 x455)))
(assert (= (x1314 x97) (ite (= x97 128) x1725 (x33 x97))))
(assert (x107 x354))
(assert (= x510 (and x2443 x432)))
(assert (= (x1370 x1484) (ite (= x2298 x1484) x3034 (x161 x1484))))
(assert (= (ite (= x780 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x780)) (x1325 x780)))
(assert (= (ite (= x2129 x874) x2451 (x1226 x874)) (x657 x874)))
(assert (= (ite (and x2810 (not x763)) (x2167 x1594) (x298 x1594)) (x2397 x1594)))
(assert (x1932 x253 x1283))
(assert (x107 x370))
(assert (= (ite (= x2552 x2252) x840 (x2764 x2552)) (x1451 x2552)))
(assert (= (x2426 x2725) (ite (and x29 x2105) (x593 x2725) (x1044 x2725))))
(assert (x107 x990))
(assert (= (ite (= x655 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x655)) (x104 x655)))
(assert (x107 x253))
(assert (x1932 x422 x486))
(assert (= (x205 x97) (ite (and (not x2377) x724) (x798 x97) (x346 x97))))
(assert (= (x225 x1642) (ite (= x796 x1642) x2187 (x801 x1642))))
(assert (x107 x666))
(assert (= (ite (= x1453 x1136) x555 (x2602 x1136)) (x918 x1136)))
(assert (= (x1769 x433) (ite (= x433 x2367) x2894 (x2255 x433))))
(assert (= (ite (= x1261 x2597) x2738 (x2950 x2597)) (x1226 x2597)))
(assert (x107 x2362))
(assert (= (ite (= x501 x2869) x3030 (x1531 x2869)) (x805 x2869)))
(assert (= (ite (and (not x208) x2123) (x1845 x655) (x301 x655)) (x1777 x655)))
(assert (= (x1325 x267) (ite (= x267 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x267))))
(assert (= (ite (= x1453 x436) x555 (x2602 x436)) (x918 x436)))
(assert (= (and x1421 x2091) x77))
(assert (= (x3018 x364) (ite (= x364 x3008) x1217 (x340 x364))))
(assert (= (x2707 x934) (ite (= x934 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x934))))
(assert (x107 x654))
(assert (=> (> (+ 10000 1) x2731) (= (x348 x2731) (x1592 x2731))))
(assert (= (ite (and (not x94) x1979) (x396 x2477) (x87 x2477)) (x1782 x2477)))
(assert (= (x657 x182) (ite (= x182 x2129) x2451 (x1226 x182))))
(assert (= (x805 x1197) (ite (= x1197 x501) x3030 (x1531 x1197))))
(assert (= (ite (= x1583 x2553) x1235 (x1450 x2553)) (x1539 x2553)))
(assert (= (x2036 x1776) (ite (= x1776 x2642) x397 (x1902 x1776))))
(assert (= (x1782 x2553) (ite (and x1979 (not x94)) (x396 x2553) (x87 x2553))))
(assert (= (x225 x424) (ite (= x424 x796) x2187 (x801 x424))))
(assert (= (ite (= x67 160) x190 (x1314 x67)) (x2783 x67)))
(assert (= (ite (= x159 x1780) 96 (x1952 x1780)) (x595 x1780)))
(assert (= (x2931 x966) (ite (= x966 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x966))))
(assert (= (x33 x2717) 0))
(assert (x107 x1991))
(assert (x107 x60))
(assert (= (x95 x483) (ite (= x1661 x483) x2246 (x1777 x483))))
(assert (= (x1317 x67) (ite (= x67 x2359) x2277 (x3037 x67))))
(assert (= (ite (= x350 x1946) x1558 (x12 x1946)) (x2950 x1946)))
(assert (= (x1762 x867) (ite (= x867 x59) x1209 (x1340 x867))))
(assert (= x1307 (=> (and (= (= 0 x3034) x1860) (= (x3026 1461501637330902918203684832716283019655932542975 x2825) x769) (= x2676 (uninterp_mod (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= x769 0)) (= x1583 (x864 (+ x1821 32))) (= x1318 (x864 (+ x2516 x1821))) (= x2516 (x864 (+ 32 x2676)))) (and (=> (and (= x466 x1796) x1860) x3053) (=> (not x1860) x2161)))))
(assert (= (x2167 x1594) (ite (and x2422 (not x566) x2821) (x2189 x1594) (x168 x1594))))
(assert (= (x798 x294) (ite (and x682 x2759) (x2795 x294) (x2138 x294))))
(assert (= (=> (and (= (x2980 x2833) x1414) (= (x2980 x1803) x1535) (= (x864 (+ 64 x857)) x1442) (or x1761 (and (not x1761) (= x1783 (uninterp_mod (* 32 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x263 (x864 (+ x2474 192))))) (= (x864 (+ x1689 64)) x958) (not (> x1168 18446744073709551615)) (= (x864 (+ x1184 32)) x929) (= (uninterp_mod (* x1168 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1184) (= x1281 1) (= x2833 (x2980 x1442)) (= x2276 (x3026 1461501637330902918203684832716283019655932542975 x60)) (= x1776 (x2980 x1689)) (= (x2980 x1689) x1803) (= x1689 (x864 (+ x2474 64))) (= x1761 (= x1168 0)) (= x1756 (x864 (+ x929 x2635))) (= x857 (x864 (+ 32 x2474))) (= (x864 (+ x2474 160)) x2635) (= x1535 x1414) (= x1168 (x2980 x1776)) (= x1259 (x3026 1461501637330902918203684832716283019655932542975 x2825))) x628) x836))
(assert (= x437 (and x1956 x2233)))
(assert (= (ite (= x2576 x2552) x1279 (x1888 x2552)) (x939 x2552)))
(assert (x107 x2460))
(assert (= (ite (= x2150 x294) 96 (x918 x294)) (x609 x294)))
(assert (x107 x2618))
(assert (= (ite (= x294 x677) x2612 (x1762 x294)) (x1090 x294)))
(assert (= (x2259 x294) (ite (= x115 x294) x2357 (x1427 x294))))
(assert (x107 x2179))
(assert (= (x651 x2168) (ite (= x420 x2168) x952 (x1769 x2168))))
(assert (x107 x2285))
(assert (= (x1782 x961) (ite (and x1979 (not x94)) (x396 x961) (x87 x961))))
(assert (x405 x463))
(assert (= (ite (= x2597 x2642) x397 (x1902 x2597)) (x2036 x2597)))
(assert (= (ite (and x1866 (not x2476)) (x2232 x2869) (x1379 x2869)) (x2018 x2869)))
(assert (= (ite (and x1979 (not x94)) (x396 x2876) (x87 x2876)) (x1782 x2876)))
(assert (= (ite (= x1873 x499) x2188 (x2707 x1873)) (x2255 x1873)))
(assert (= (ite (= x1642 128) x1725 (x33 x1642)) (x1314 x1642)))
(assert (= (x2950 x2817) (ite (= x2817 x350) x1558 (x12 x2817))))
(assert (= x1487 (=> (and (= (x2352 x1524) x2087) (= x1213 (x2352 x2087)) (= x1517 (not (< 1 x1213)))) (and x1517 (=> (= x2576 x1454) x2930)))))
(assert (= x2559 (x2600 (x1592 x2559))))
(assert (= (ite (= x2833 x2709) x2925 (x1370 x2833)) (x2172 x2833)))
(assert (= (x807 x2546) (ite (= x2546 x2107) x315 (x533 x2546))))
(assert (= x1749 (and x1342 x2143)))
(assert (= (x1845 x2552) (ite (and (not x2097) x1892 x896) (x2539 x2552) (x2300 x2552))))
(assert (= (x2795 x2991) (ite (= x2991 x1083) x367 (x2880 x2991))))
(assert (x107 x303))
(assert (= (ite (= x2709 x914) x2925 (x1370 x914)) (x2172 x914)))
(assert (= (ite (= 224 x789) x770 (x302 x789)) (x2995 x789)))
(assert (x107 x2891))
(assert (= (x125 x2298) (ite (= x2298 x2128) x1897 (x657 x2298))))
(assert (= (ite (= x2359 x1776) x2277 (x3037 x1776)) (x1317 x1776)))
(assert (= (x95 x2817) (ite (= x1661 x2817) x2246 (x1777 x2817))))
(assert (= (x609 x49) (ite (= x49 x2150) 96 (x918 x49))))
(assert (= (ite (= x780 x2876) x555 (x2526 x2876)) (x1952 x2876)))
(assert (= (or x1655 (and (not x1481) x1488) (and (not x2200) x740)) x2585))
(assert (= (x2539 x436) (ite (= x517 x436) x1914 (x2939 x436))))
(assert (x107 x1470))
(assert (= (ite (and (not x208) x2123) (x1845 x866) (x301 x866)) (x1777 x866)))
(assert (= (ite (= x1583 x1706) x1235 (x1450 x1706)) (x1539 x1706)))
(assert (= (x1845 x1695) (ite (and (not x2097) x896 x1892) (x2539 x1695) (x2300 x1695))))
(assert (x107 x329))
(assert (= (ite (= x424 x1946) x2700 (x2997 x1946)) (x2204 x1946)))
(assert (x107 x966))
(assert (= (ite (and x1979 (not x94)) (x396 x370) (x87 x370)) (x1782 x370)))
(assert (x107 x2178))
(assert (= (x2720 x2309) (ite (= x2309 x972) x1063 (x1903 x2309))))
(assert (= (x651 x2594) (ite (= x420 x2594) x952 (x1769 x2594))))
(assert (= (ite (= x2709 x2710) x2925 (x1370 x2710)) (x2172 x2710)))
(assert (x405 x1597))
(assert (= (ite (and (not x763) x2810) (x2167 x483) (x298 x483)) (x2397 x483)))
(assert (= (x2600 (x348 2477345955)) 2477345955))
(assert (= (ite (= x1809 x261) x50 (x2159 x261)) (x1903 x261)))
(assert (x107 x1974))
(assert (= (x1090 x655) (ite (= x677 x655) x2612 (x1762 x655))))
(assert (= (ite (= x1136 x1083) x367 (x2880 x1136)) (x2795 x1136)))
(assert (= (ite (= x2127 x436) x3034 (x2328 x436)) (x1902 x436)))
(assert (= (x2426 x1946) (ite (and x29 x2105) (x593 x1946) (x1044 x1946))))
(assert (x107 x1605))
(assert (= (ite (= x455 x1083) x367 (x2880 x455)) (x2795 x455)))
(assert (= (ite (= x424 x1483) x2700 (x2997 x1483)) (x2204 x1483)))
(assert (= (x2600 (x1408 x311 2)) (+ (x2600 x311) 2)))
(assert (= (x63 x2847) (ite (and (not x2933) x1798) (x125 x2847) (ite (and (not x969) x77) (x657 x2847) (ite (and x2091 (not x1421)) (x1226 x2847) (ite (and (not x2706) x697) (x2950 x2847) (x2504 x2847)))))))
(assert (= (x2018 x433) (ite (and x1866 (not x2476)) (x2232 x433) (x1379 x433))))
(assert (= (x2167 x629) (ite (and x2422 x2821 (not x566)) (x2189 x629) (x168 x629))))
(assert (= (x2036 x1732) (ite (= x1732 x2642) x397 (x1902 x1732))))
(assert (= (ite (= x2477 x1318) x1964 (x715 x2477)) (x1534 x2477)))
(assert (= (x1317 x1484) (ite (= x1484 x2359) x2277 (x3037 x1484))))
(assert (= (ite (= x1638 x2513) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2513)) (x1325 x2513)))
(assert (x107 x162))
(assert (x107 x2636))
(assert (x107 x457))
(assert (x107 x1368))
(assert (= (x2931 x857) (ite (= x857 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x857))))
(assert (= (ite (= 160 x866) x190 (x1314 x866)) (x2783 x866)))
(assert (= (x798 x2597) (ite (and x2759 x682) (x2795 x2597) (x2138 x2597))))
(assert (= (ite (= x1348 x655) x542 (x2394 x655)) (x2063 x655)))
(assert (= (ite (= x420 x2309) x952 (x1769 x2309)) (x651 x2309)))
(assert (= x1129 x1866))
(assert (= (ite (= x467 x846) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x846)) (x104 x846)))
(assert (= x873 (=> (and (= (x864 (+ x2552 64)) x2546) (= (x864 (+ 64 x2636)) x241) (= (> x696 3) x2118) (= (x2245 x1642) x9)) (and (=> (and (= x157 x2546) (= x877 3) (= x288 x241) (not x2118)) x1354) (=> x2118 x2135)))))
(assert (= (x1845 x722) (ite (and (not x2097) x1892 x896) (x2539 x722) (x2300 x722))))
(assert (= (ite (= x115 x1267) x2357 (x1427 x1267)) (x2259 x1267)))
(assert (= (ite (and x1866 (not x2476)) (x2232 x1453) (x1379 x1453)) (x2018 x1453)))
(assert (= (ite (= x943 x1661) x2246 (x1777 x943)) (x95 x943)))
(assert (= (ite (= x1544 x350) x1558 (x12 x1544)) (x2950 x1544)))
(assert (= x2964 (=> (and (= (uninterp_mod (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x988) (<= 0 x2925) (= (x635 x639) x2925) (= x1066 (- (/ (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- (x2600 x639) (x2600 x2316)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))) (= x2316 (x1088 (x348 1) 0)) (= x1954 (x1408 x639 1)) (= x1005 (x864 (+ 64 x2298))) (= x639 (x1088 (x348 1) 0)) (= (x864 (+ x2709 x988)) x48) (< x2925 1461501637330902918203684832716283019655932542976) (= x2015 (> x48 x1005)) (<= x2925 1461501637330902918203684832716283019655932542975)) (and (=> (and (= 1 x1077) (not x2015)) x2463) (=> x2015 x1384)))))
(assert (= (x918 x1780) (ite (= x1453 x1780) x555 (x2602 x1780))))
(assert (= (and x1515 x2198) x1468))
(assert (x417 x1632 x564))
(assert (= (x205 x2991) (ite (and x724 (not x2377)) (x798 x2991) (x346 x2991))))
(assert (= (x1317 x2594) (ite (= x2594 x2359) x2277 (x3037 x2594))))
(assert (x107 x1034))
(assert (= (ite (= x2817 x780) x555 (x2526 x2817)) (x1952 x2817)))
(assert (= (ite (= x2553 x499) x2188 (x2707 x2553)) (x2255 x2553)))
(assert (= (ite (= x3023 x261) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x261)) (x2931 x261)))
(assert (= (x1370 x1706) (ite (= x2298 x1706) x3034 (x161 x1706))))
(assert (x107 x2402))
(assert (= (ite (and x2775 (not x2299)) (x795 x874) (x1613 x874)) (x2338 x874)))
(assert (= (ite (= x2635 x2869) x1168 (x2980 x2869)) (x1265 x2869)))
(assert (x107 x722))
(assert (= (ite (= x1706 x59) x1209 (x1340 x1706)) (x1762 x1706)))
(assert (= (x205 x2168) (ite (and x724 (not x2377)) (x798 x2168) (x346 x2168))))
(assert (= (x2950 x294) (ite (= x294 x350) x1558 (x12 x294))))
(assert (= (x2328 x2710) (ite (and x2926 x923) (x1952 x2710) (ite (and x1236 (not x602)) (x595 x2710) (x1546 x2710)))))
(assert (x107 x2291))
(assert (= (ite (and x2123 (not x208)) (x1845 x1642) (x301 x1642)) (x1777 x1642)))
(assert (= (x2204 x1197) (ite (= x424 x1197) x2700 (x2997 x1197))))
(assert (= (ite (and (not x2376) x3) (x651 x2597) (ite (and (not x150) x1264) (x1769 x2597) (ite (and (not x601) x282) (x2255 x2597) (ite (and x1733 (not x1290)) (x2707 x2597) (x326 x2597))))) (x396 x2597)))
(assert (= (ite (= x1706 x2576) x1279 (x1888 x1706)) (x939 x1706)))
(assert (= (x3018 x846) (ite (= x3008 x846) x1217 (x340 x846))))
(assert (= (ite (= x972 x424) x1063 (x1903 x424)) (x2720 x424)))
(assert (= (ite (= x2425 x1732) x859 (x103 x1732)) (x1819 x1732)))
(assert (= (x2328 x86) (ite (and x2926 x923) (x1952 x86) (ite (and x1236 (not x602)) (x595 x86) (x1546 x86)))))
(assert (= (x245 x49) (ite (= x2962 x49) x950 (x1429 x49))))
(assert (= (x805 x2876) (ite (= x2876 x501) x3030 (x1531 x2876))))
(assert (= (ite (= x1387 x2642) x397 (x1902 x1387)) (x2036 x1387)))
(assert (= (ite (= x483 x1615) x2726 (x2268 x483)) (x2189 x483)))
(assert (= (x1845 x2817) (ite (and x1892 (not x2097) x896) (x2539 x2817) (x2300 x2817))))
(assert (x107 x1589))
(assert (= (x1769 x2836) (ite (= x2367 x2836) x2894 (x2255 x2836))))
(assert (= (x1328 x2553) (ite (= x2553 x1745) x585 (x2580 x2553))))
(assert (= (x1902 x1780) (ite (= x2127 x1780) x3034 (x2328 x1780))))
(assert (x107 x442))
(assert (= (x807 x436) (ite (= x436 x2107) x315 (x533 x436))))
(assert (x107 x1685))
(assert (= (x1370 x1642) (ite (= x2298 x1642) x3034 (x161 x1642))))
(assert (= (x609 x2725) (ite (= x2150 x2725) 96 (x918 x2725))))
(assert (= (x595 x1946) (ite (= x159 x1946) 96 (x1952 x1946))))
(assert (x107 x995))
(assert (= (ite (= x2709 x2553) x2925 (x1370 x2553)) (x2172 x2553)))
(assert (= (x1317 x2546) (ite (= x2359 x2546) x2277 (x3037 x2546))))
(assert (= (x1044 x2725) (ite (and x29 (not x1970)) (x63 x2725) (x692 x2725))))
(assert (= (ite (and (not x763) x2810) (x2167 x655) (x298 x655)) (x2397 x655)))
(assert (= (=> (and (= (x1408 x1321 2) x2570) (<= x2681 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x2503) (< 0 x2240) (= (x915 x2127) x2240) (= x2601 (x1408 x3022 2)) (= x1895 (x864 (+ 64 x247))) (<= x2131 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x2503 1461501637330902918203684832716283019655932542976) (= x3022 (x2802 (x1592 x2055) (x348 2) 0)) (<= x1794 1461501637330902918203684832716283019655932542975) (>= x2681 0) (>= 1461501637330902918203684832716283019655932542975 x1678) (= (x1408 x3022 1) x1321) (= x1704 (x864 (+ 64 x2958))) (= x1678 (x2547 x1321)) (= x2090 (x915 x1244)) (= x1672 (x2691 x3008)) (< x1794 1461501637330902918203684832716283019655932542976) (= (not (< 1 x2220)) x234) (>= x2908 0) (= (x3054 x2419) x2681) (= (x2271 x2570) x2908) (= x2503 (x143 x2601)) (= x2958 (x864 (+ 32 x214))) (= x1244 (x864 (+ x2127 32))) (<= 0 x2503) (= x2131 (x126 x839)) (= x2055 (x3026 1461501637330902918203684832716283019655932542975 x2090)) (<= 0 x1678) (> 1461501637330902918203684832716283019655932542976 x1678) (>= x2131 0) (= (x864 (+ x3008 32)) x2677) (= x2419 (x1408 x2601 2)) (= (x864 (+ x214 192)) x1815) (= (x1075 x3022) x1794) (= x839 (x1408 x2570 2)) (>= x1794 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2908) (= (x864 (+ x1704 64)) x1430) (> x1672 0) (= x2220 (x2800 x2127)) (= (x864 (+ x214 64)) x247)) (and (=> (and (= 2 x1768) (= x2474 x1815) (= x306 x2055)) x836) x234)) x758))
(assert (= (=> (and (= (* x1519 x2210) x2403) (= (x864 (+ x517 32)) x385) (> x2492 0) (= x1305 (- (/ x2403 x2492) (uninterp_frac x2403 x2492))) (= x2263 (x1206 x517)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2210 x1519)) (= x2648 x337) (> x2263 0)) x427) x2824))
(assert (= (x2159 x2725) (ite (= x246 x2725) x1037 (x807 x2725))))
(assert (= (x1777 x874) (ite (and (not x208) x2123) (x1845 x874) (x301 x874))))
(assert (x107 x339))
(assert (= (=> (and (= (x864 (+ 32 x780)) x1267) (= (x864 (+ x2326 x1572)) x1508) (= (uninterp_mod (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2326) (= x30 x1829) (= (> x848 0) x1288) (= (x864 (+ x980 64)) x2564) (= x428 x79) (= (x864 (+ 32 x1742)) x1572) (= x428 (x864 (+ x2112 x1946))) (= x816 x1406) (= (x1767 x780) x848) (= (x163 (- x1742 x980)) x271) (= x2112 (uninterp_mod (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x1288 x2875) (=> (and (= x1267 x1383) (= 0 x1146) (not x1288) (= x2430 x1572)) x189))) x989))
(assert (= (x1370 x2847) (ite (= x2847 x2298) x3034 (x161 x2847))))
(assert (= (x33 x2217) 0))
(assert (= (ite (= x780 x1489) x1829 (x1668 x780)) (x130 x780)))
(assert (= (x63 x1873) (ite (and (not x2933) x1798) (x125 x1873) (ite (and (not x969) x77) (x657 x1873) (ite (and x2091 (not x1421)) (x1226 x1873) (ite (and x697 (not x2706)) (x2950 x1873) (x2504 x1873)))))))
(assert (= (x33 x1136) 0))
(assert (= (ite (= x2128 x780) x1897 (x657 x780)) (x125 x780)))
(assert (= (x2255 x655) (ite (= x499 x655) x2188 (x2707 x655))))
(assert (= (ite (and x1335 x2851) (x3018 x3011) (ite (and (not x3047) x1301) (x1317 x3011) (x2805 x3011))) (x915 x3011)))
(assert (= (ite (= x2298 x867) x3034 (x161 x867)) (x1370 x867)))
(assert (= (ite (= x2546 x2576) x1279 (x1888 x2546)) (x939 x2546)))
(assert (x107 x30))
(assert (= (ite (= x1136 x1661) x2246 (x1777 x1136)) (x95 x1136)))
(assert (= (ite (= x433 192) x2714 (x2783 x433)) (x302 x433)))
(assert (= (ite (and x682 x2759) (x2795 x364) (x2138 x364)) (x798 x364)))
(assert (= (ite (and (not x2476) x1866) (x2232 x1706) (x1379 x1706)) (x2018 x1706)))
(assert (= (x2783 x2387) (ite (= 160 x2387) x190 (x1314 x2387))))
(assert (x107 x1179))
(assert (= (x2255 x370) (ite (= x370 x499) x2188 (x2707 x370))))
(assert (= (ite (= x677 x685) x2612 (x1762 x685)) (x1090 x685)))
(assert (= (ite (= x677 x1642) x2612 (x1762 x1642)) (x1090 x1642)))
(assert (= (x1450 x483) (ite (= x483 x1821) x3034 (x1728 x483))))
(assert (x107 x484))
(assert (x107 x913))
(assert (= (x609 x629) (ite (= x2150 x629) 96 (x918 x629))))
(assert (= (x2539 x1732) (ite (= x1732 x517) x1914 (x2939 x1732))))
(assert (x107 x909))
(assert (= (ite (= x2876 x517) x1914 (x2939 x2876)) (x2539 x2876)))
(assert (= (ite (= x1386 x2561) x2739 (x552 x1386)) (x2136 x1386)))
(assert (= (x1845 x2513) (ite (and (not x2097) x896 x1892) (x2539 x2513) (x2300 x2513))))
(assert (= (ite (= x2477 x227) x22 (x56 x2477)) (x902 x2477)))
(assert (= (ite (= x455 x2367) x2894 (x2255 x455)) (x1769 x455)))
(assert (= (=> (and (= x2439 (x864 (+ 68 x2966))) (= x1023 (> x1988 0)) (= (x1942 (x1592 x2155)) x1988) (= (x864 (+ 100 x2966)) x1804) (= x2984 (x163 (- x454 32))) (= x2937 (x3026 26959946667150639794667015087019630673637144422540572481103610249215 x2148)) (= x2256 0) (= x2155 (x3026 1461501637330902918203684832716283019655932542975 x2640)) (= x812 (x864 (+ x654 96))) (= (x864 (+ 32 x2966)) x1191) (= x454 (x163 (- x1804 x2966))) (= (x864 (+ x654 128)) x546) (= x2148 (x844 x1191)) (= (x864 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2937)) x2801) (= x1628 (x511 x2966)) (= (x864 (+ 36 x2966)) x654) (= x2508 (< 0 x1628)) x1023) (and (=> (and (not x2508) (= 0 x2557)) x1186) (=> x2508 x1311))) x3021))
(assert (= x2027 (or x2012 (and (not x208) x2123))))
(assert (= (ite (and x2851 x1335) (x3018 x1387) (ite (and x1301 (not x3047)) (x1317 x1387) (x2805 x1387))) (x915 x1387)))
(assert (= (x2720 x2406) (ite (= x972 x2406) x1063 (x1903 x2406))))
(assert (x107 x2569))
(assert (= (ite (= x433 x2635) x1168 (x2980 x433)) (x1265 x433)))
(assert (= (x2950 x1267) (ite (= x1267 x350) x1558 (x12 x1267))))
(assert (= (x2063 x1483) (ite (= x1483 x1348) x542 (x2394 x1483))))
(assert (= (x63 x2725) (ite (and x1798 (not x2933)) (x125 x2725) (ite (and (not x969) x77) (x657 x2725) (ite (and (not x1421) x2091) (x1226 x2725) (ite (and x697 (not x2706)) (x2950 x2725) (x2504 x2725)))))))
(assert (= (ite (= x1489 x2477) x1829 (x1668 x2477)) (x130 x2477)))
(assert (= (ite (= x780 x86) x555 (x2526 x86)) (x1952 x86)))
(assert (x107 x2042))
(assert (= (ite (= x1972 x2127) x3034 (x2328 x1972)) (x1902 x1972)))
(assert (= (x805 x846) (ite (= x501 x846) x3030 (x1531 x846))))
(assert (x107 x395))
(assert (= (x33 x1803) 0))
(assert (= (x2707 x455) (ite (= x455 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x455))))
(assert (= (x1782 x2387) (ite (and (not x94) x1979) (x396 x2387) (x87 x2387))))
(assert (= (x1845 x1516) (ite (and x896 x1892 (not x2097)) (x2539 x1516) (x2300 x1516))))
(assert (= (ite (= x3011 224) x770 (x302 x3011)) (x2995 x3011)))
(assert (= (x2018 x1968) (ite (and x1866 (not x2476)) (x2232 x1968) (x1379 x1968))))
(assert (x107 x1545))
(assert (= (ite (and x1979 (not x94)) (x396 x1594) (x87 x1594)) (x1782 x1594)))
(assert (= (ite (= x1706 x501) x3030 (x1531 x1706)) (x805 x1706)))
(assert (= (x890 x370) (ite (= x370 x2085) x1910 (x970 x370))))
(assert (= (ite (= 128 x455) x1725 (x33 x455)) (x1314 x455)))
(assert (= (x2997 x2817) (ite x1752 (ite (and x1127 (not x2913)) (x205 x2817) (x1059 x2817)) (ite (and x2374 x135) (x205 x2817) (ite (and x2850 x3004) (x1777 x2817) (x2338 x2817))))))
(assert (x107 x1622))
(assert (= (x2159 x1544) (ite (= x246 x1544) x1037 (x807 x1544))))
(assert (x107 x700))
(assert (= (x595 x874) (ite (= x874 x159) 96 (x1952 x874))))
(assert (= (x205 x2546) (ite (and x724 (not x2377)) (x798 x2546) (x346 x2546))))
(assert (= (ite (= x488 x2107) x315 (x533 x488)) (x807 x488)))
(assert (= (ite (= x1706 x420) x952 (x1769 x1706)) (x651 x1706)))
(assert (= (ite (= x2454 x293) x823 (x245 x293)) (x1340 x293)))
(assert (x107 x598))
(assert (= (x224 x780) (ite (= x816 x780) x696 (x2011 x780))))
(assert (= (ite (= x43 x2278) x1346 (x2998 x2278)) (x1181 x2278)))
(assert (= (x2338 x364) (ite (and x2775 (not x2299)) (x795 x364) (x1613 x364))))
(assert (x107 x2484))
(assert (= (ite (= x2406 x2127) x3034 (x2328 x2406)) (x1902 x2406)))
(assert (= (x3018 x789) (ite (= x789 x3008) x1217 (x340 x789))))
(assert (= (x95 x867) (ite (= x867 x1661) x2246 (x1777 x867))))
(assert (x107 x3035))
(assert (x107 x415))
(assert (= x1879 (and x1798 x2933)))
(assert (= (ite (= x822 x3008) x1217 (x340 x822)) (x3018 x822)))
(assert (= (x1845 x2710) (ite (and (not x2097) x896 x1892) (x2539 x2710) (x2300 x2710))))
(assert (x107 x447))
(assert (x107 x280))
(assert (= x1624 (and x1332 x1170)))
(assert (= (x2858 x1139) (ite (and (not x2008) x2885) (x1390 x1139) (x113 x1139))))
(assert (= (x1328 x655) (ite (= x1745 x655) x585 (x2580 x655))))
(assert (= (x1777 x2168) (ite (and (not x208) x2123) (x1845 x2168) (x301 x2168))))
(assert (x107 x502))
(assert (= (x902 x1946) (ite (= x1946 x227) x22 (x56 x1946))))
(assert (x107 x2962))
(assert (x107 x474))
(assert (= (ite (and x923 x2926) (x1952 x2876) (ite (and x1236 (not x602)) (x595 x2876) (x1546 x2876))) (x2328 x2876)))
(assert (= (ite (and x1866 (not x2476)) (x2232 x2546) (x1379 x2546)) (x2018 x2546)))
(assert (= (ite (= x2127 x866) x3034 (x2328 x866)) (x1902 x866)))
(assert (= (ite (= x1483 192) x2714 (x2783 x1483)) (x302 x1483)))
(assert (= (x1314 x2833) (ite (= 128 x2833) x1725 (x33 x2833))))
(assert (= (ite (= x2359 x1972) x2277 (x3037 x1972)) (x1317 x1972)))
(assert (= (x1777 x364) (ite (and (not x208) x2123) (x1845 x364) (x301 x364))))
(assert (= (x2950 x961) (ite (= x961 x350) x1558 (x12 x961))))
(assert (= (x1782 x1544) (ite (and (not x94) x1979) (x396 x1544) (x87 x1544))))
(assert (= (x1903 x2817) (ite (= x1809 x2817) x50 (x2159 x2817))))
(assert (= (x1044 x433) (ite (and (not x1970) x29) (x63 x433) (x692 x433))))
(assert (= (x1370 x2552) (ite (= x2298 x2552) x3034 (x161 x2552))))
(assert (= (x205 x261) (ite (and x724 (not x2377)) (x798 x261) (x346 x261))))
(assert (x107 x1350))
(assert (= (ite (= x796 x2552) x2187 (x801 x2552)) (x225 x2552)))
(assert (= (ite (and (not x94) x1979) (x396 x3011) (x87 x3011)) (x1782 x3011)))
(assert (= (ite (= x455 192) x2714 (x2783 x455)) (x302 x455)))
(assert (= (x1819 x2546) (ite (= x2546 x2425) x859 (x103 x2546))))
(assert (= (x1903 x2309) (ite (= x1809 x2309) x50 (x2159 x2309))))
(assert (= (x2931 x1136) (ite (= x3023 x1136) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1136))))
(assert (= (x205 x2387) (ite (and (not x2377) x724) (x798 x2387) (x346 x2387))))
(assert (x107 x383))
(assert (= (x205 x1706) (ite (and x724 (not x2377)) (x798 x1706) (x346 x1706))))
(assert (= (ite (= x2546 192) x2714 (x2783 x2546)) (x302 x2546)))
(assert (= (ite (and x2123 (not x208)) (x1845 x517) (x301 x517)) (x1777 x517)))
(assert (= (ite (= x350 x3011) x1558 (x12 x3011)) (x2950 x3011)))
(assert (x107 x440))
(assert (x107 x2970))
(assert (= (x2259 x961) (ite (= x961 x115) x2357 (x1427 x961))))
(assert (= (ite (= x1197 x350) x1558 (x12 x1197)) (x2950 x1197)))
(assert (= 0 (x1494 (- x2309 x2555))))
(assert (= (x396 x1706) (ite (and x3 (not x2376)) (x651 x1706) (ite (and x1264 (not x150)) (x1769 x1706) (ite (and x282 (not x601)) (x2255 x1706) (ite (and (not x1290) x1733) (x2707 x1706) (x326 x1706)))))))
(assert (= (ite (= 128 x2106) x1725 (x33 x2106)) (x1314 x2106)))
(assert (x107 x1568))
(assert (= (x890 x1873) (ite (= x1873 x2085) x1910 (x970 x1873))))
(assert (= (ite (= x789 x2127) x3034 (x2328 x789)) (x1902 x789)))
(assert (x107 x2888))
(assert (= (x1450 x1136) (ite (= x1136 x1821) x3034 (x1728 x1136))))
(assert (= (x1592 2743638299) (x348 2743638299)))
(assert (= (ite (and x817 x2655) (x1534 x780) (ite (and x1941 (not x1834)) (x887 x780) (x151 x780))) (x423 x780)))
(assert (= (x2328 x1873) (ite (and x2926 x923) (x1952 x1873) (ite (and x1236 (not x602)) (x595 x1873) (x1546 x1873)))))
(assert (x107 x1967))
(assert (= (x1317 x2477) (ite (= x2359 x2477) x2277 (x3037 x2477))))
(assert (x107 x680))
(assert (= (x2783 128) (x302 128)))
(assert (x107 x2242))
(assert (= (ite (and x682 x2759) (x2795 x2594) (x2138 x2594)) (x798 x2594)))
(assert (= (x1769 x436) (ite (= x436 x2367) x2894 (x2255 x436))))
(assert (= (x2073 x1732) (ite (= x766 x1732) x1423 (x2397 x1732))))
(assert (x107 x796))
(assert (= (x2328 x2106) (ite (and x923 x2926) (x1952 x2106) (ite (and x1236 (not x602)) (x595 x2106) (x1546 x2106)))))
(assert (x107 x2982))
(assert (= (x2063 x2817) (ite (= x2817 x1348) x542 (x2394 x2817))))
(assert (= (ite (and x2775 (not x2299)) (x795 x2817) (x1613 x2817)) (x2338 x2817)))
(assert (= (x1952 x655) (ite (= x655 x780) x555 (x2526 x655))))
(assert (= (ite (= x467 x267) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x267)) (x104 x267)))
(assert (= 0 (x1494 (- x2546 x2555))))
(assert (= (ite (= x420 x1483) x952 (x1769 x1483)) (x651 x1483)))
(assert (x107 x564))
(assert (= (ite (and x2851 x1335) (x3018 x780) (ite (and x1301 (not x3047)) (x1317 x780) (x2805 x780))) (x915 x780)))
(assert (x107 x2751))
(assert (= (x1317 x1873) (ite (= x1873 x2359) x2277 (x3037 x1873))))
(assert (= (x2036 x2217) (ite (= x2217 x2642) x397 (x1902 x2217))))
(assert (= (x2255 x86) (ite (= x86 x499) x2188 (x2707 x86))))
(assert (= (x1903 x86) (ite (= x86 x1809) x50 (x2159 x86))))
(assert (= (ite (= x2127 x1483) x3034 (x2328 x1483)) (x1902 x1483)))
(assert (= (x595 x685) (ite (= x685 x159) 96 (x1952 x685))))
(assert (= (x595 x2847) (ite (= x2847 x159) 96 (x1952 x2847))))
(assert (= (x2063 x2298) (ite (= x1348 x2298) x542 (x2394 x2298))))
(assert (= (=> (and (= x1363 (> x1751 0)) (= x1751 (x1029 x2576))) (and (=> x1363 x2903) (=> (and (= x731 0) (not x1363)) x1502))) x886))
(assert (= (=> (and (= (> x2433 0) x1177) (= x2433 (x1029 x1594)) (= x1594 (x1029 x1524)) (= (x1029 x2035) x1125) (= x610 (x1029 x1594)) (= x2896 (x1029 x2576)) (= x610 x2896) (= x1099 (x1029 x1968))) (and (=> (and (= 0 x727) (= x1012 x674) (not x1177)) x2999) (=> (and (= x144 (x3026 1461501637330902918203684832716283019655932542975 x1099)) x1177 (= x981 (x1029 x2594)) (= x2809 (x1942 (x1592 x2668))) (= (x1029 x1732) x2103) (= x98 (x1029 x1594)) (not (= x2809 0)) (< 0 x98) (= (x864 (+ x2576 32)) x1732) (< 0 x2483) (= x596 (< 0 x1811)) (= x2483 (x1029 x2576)) (or (and (= 1 x1036) (> 4294967296 x1785) x596) (and (= x1036 x1811) (not x596))) (= x1745 (x864 (+ 36 x674))) (= x2058 (x864 (+ x674 4))) (= x2594 (x864 (+ 32 x1594))) (= x2668 (x3026 1461501637330902918203684832716283019655932542975 x1125)) (= (x3026 1461501637330902918203684832716283019655932542975 x981) x585)) x1137))) x1814))
(assert (x2567 x959))
(assert (= (ite (= x2477 x1083) x367 (x2880 x2477)) (x2795 x2477)))
(assert (= (ite (= x2477 x517) x1914 (x2939 x2477)) (x2539 x2477)))
(assert (= (ite (= x293 x2962) x950 (x1429 x293)) (x245 x293)))
(assert (= (ite (= x115 x972) x1063 (x1903 x115)) (x2720 x115)))
(assert (= (x1265 x2817) (ite (= x2635 x2817) x1168 (x2980 x2817))))
(assert (= (ite (= x780 x2636) x1673 (x283 x780)) (x2245 x780)))
(assert (= (x2995 x1803) (ite (= x1803 224) x770 (x302 x1803))))
(assert (= (x1494 (- x2477 x2555)) 0))
(assert (= (x225 x1136) (ite (= x796 x1136) x2187 (x801 x1136))))
(assert (= (x1325 x2594) (ite (= x1638 x2594) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2594))))
(assert (= (x1903 x2553) (ite (= x1809 x2553) x50 (x2159 x2553))))
(assert (= 1461501637330902918203684832716283019655932542976 (x2600 (x348 1461501637330902918203684832716283019655932542976))))
(assert (= (=> (and (= (x864 (+ 32 x2817)) x629) (= (x220 x1267) x2817) (= (x864 (+ x1508 32)) x1547) (= x3002 x2326) (= (x220 x2817) x626) (= x2443 (> x626 0))) (and (=> (and (not x2443) (= x2319 x1547) (= x629 x1925) (= x2577 0)) x1658) (=> x2443 x2852))) x2875))
(assert (= (ite (= x420 x1267) x952 (x1769 x1267)) (x651 x1267)))
(assert (= (x2036 x846) (ite (= x2642 x846) x397 (x1902 x846))))
(assert (= (ite (and x2105 x29) (x593 x1267) (x1044 x1267)) (x2426 x1267)))
(assert (x107 x2331))
(assert (= (x2036 x2717) (ite (= x2717 x2642) x397 (x1902 x2717))))
(assert (x107 x849))
(assert (= (x2426 x867) (ite (and x29 x2105) (x593 x867) (x1044 x867))))
(assert (= (ite (= x1083 x267) x367 (x2880 x267)) (x2795 x267)))
(assert (= (x2795 x2168) (ite (= x1083 x2168) x367 (x2880 x2168))))
(assert (= (ite (= x846 x2150) 96 (x918 x846)) (x609 x846)))
(assert (= (x918 x2217) (ite (= x2217 x1453) x555 (x2602 x2217))))
(assert (= (x2018 x2168) (ite (and x1866 (not x2476)) (x2232 x2168) (x1379 x2168))))
(assert (x107 x1456))
(assert (= (x801 x424) (ite (= x424 x824) x1666 (x902 x424))))
(assert (= (and x716 x2405) x316))
(assert (= (ite (and x923 x2926) (x1952 x364) (ite (and x1236 (not x602)) (x595 x364) (x1546 x364))) (x2328 x364)))
(assert (= (x798 x455) (ite (and x682 x2759) (x2795 x455) (x2138 x455))))
(assert (= (x33 x2869) 0))
(assert (= (x1226 x780) (ite (= x780 x1261) x2738 (x2950 x780))))
(assert (= (x1845 x2869) (ite (and x1892 x896 (not x2097)) (x2539 x2869) (x2300 x2869))))
(assert (= (x2995 x2217) (ite (= 224 x2217) x770 (x302 x2217))))
(assert (= (x651 x1453) (ite (= x1453 x420) x952 (x1769 x1453))))
(assert (x107 x1789))
(assert (= (ite (= x780 x975) x555 (x2526 x975)) (x1952 x975)))
(assert (= (x1782 x49) (ite (and (not x94) x1979) (x396 x49) (x87 x49))))
(assert (= (ite (= x2252 x1946) x840 (x2764 x1946)) (x1451 x1946)))
(assert (= (x1265 x1780) (ite (= x1780 x2635) x1168 (x2980 x1780))))
(assert (= (or x2312 (and x2470 (not x1630))) x1132))
(assert (= (x2720 x1946) (ite (= x1946 x972) x1063 (x1903 x1946))))
(assert (x107 x866))
(assert (x107 x86))
(assert (x107 x2897))
(assert (x107 x3032))
(assert (= (ite (= x1846 x655) x500 (x559 x655)) (x970 x655)))
(assert (= (ite (= x1807 x3035) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x3035)) (x2707 x3035)))
(assert (x107 x2756))
(assert (= (x2707 x483) (ite (= x1807 x483) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x483))))
(assert (= (x657 x1136) (ite (= x1136 x2129) x2451 (x1226 x1136))))
(assert (= (ite (= x2725 x972) x1063 (x1903 x2725)) (x2720 x2725)))
(assert (x107 x2548))
(assert (= (x2950 x2847) (ite (= x2847 x350) x1558 (x12 x2847))))
(assert (= (ite (and (not x566) x2821 x2422) (x2189 x1453) (x168 x1453)) (x2167 x1453)))
(assert (= (x1317 x2869) (ite (= x2869 x2359) x2277 (x3037 x2869))))
(assert (= (ite (= x1453 x115) x2357 (x1427 x1453)) (x2259 x1453)))
(assert (= (ite (= x1638 x1642) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1642)) (x1325 x1642)))
(assert (= (ite (= x677 x2309) x2612 (x1762 x2309)) (x1090 x2309)))
(assert (= (ite (= x1693 x2477) x1426 (x1160 x2477)) (x3016 x2477)))
(assert (= (x1090 x867) (ite (= x677 x867) x2612 (x1762 x867))))
(assert (= (x595 x364) (ite (= x364 x159) 96 (x1952 x364))))
(assert (x107 x2625))
(assert (= (ite (= x483 x59) x1209 (x1340 x483)) (x1762 x483)))
(assert (x107 x811))
(assert (= (ite (= x780 x433) x555 (x2526 x433)) (x1952 x433)))
(assert (= (x2720 x436) (ite (= x436 x972) x1063 (x1903 x436))))
(assert (= (ite (= x2168 192) x2714 (x2783 x2168)) (x302 x2168)))
(assert (x107 x1843))
(assert (= (x283 x1642) (ite (= x1642 x2061) x515 (x224 x1642))))
(assert (= (x2997 x2876) (ite x1752 (ite (and (not x2913) x1127) (x205 x2876) (x1059 x2876)) (ite (and x2374 x135) (x205 x2876) (ite (and x3004 x2850) (x1777 x2876) (x2338 x2876))))))
(assert (= (ite (= x488 x2425) x859 (x103 x488)) (x1819 x488)))
(assert (= (ite (= 160 x2597) x190 (x1314 x2597)) (x2783 x2597)))
(assert (x107 x2252))
(assert (= (and x318 x830) x2927))
(assert (= (ite (= x424 x2107) x315 (x533 x424)) (x807 x424)))
(assert (= (ite (= x424 x2168) x2357 (x2997 x2168)) (x1958 x2168)))
(assert (= (x2255 x3011) (ite (= x499 x3011) x2188 (x2707 x3011))))
(assert (= (ite (= x1453 x1484) x555 (x2602 x1484)) (x918 x1484)))
(assert (x107 x618))
(assert (= (x104 x2546) (ite (= x467 x2546) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2546))))
(assert (x107 x1523))
(assert (= (x887 x867) (ite (= x867 x1231) x775 (x44 x867))))
(assert (= (x302 x1972) (ite (= x1972 192) x2714 (x2783 x1972))))
(assert (= (ite (= x182 128) x1725 (x33 x182)) (x1314 x182)))
(assert (= (ite (and x29 x2105) (x593 x1642) (x1044 x1642)) (x2426 x1642)))
(assert (= (ite (and x1979 (not x94)) (x396 x1732) (x87 x1732)) (x1782 x1732)))
(assert (= (x205 x182) (ite (and (not x2377) x724) (x798 x182) (x346 x182))))
(assert (= (x1952 x1483) (ite (= x1483 x780) x555 (x2526 x1483))))
(assert (= (ite (and x2759 x682) (x2795 x1946) (x2138 x1946)) (x798 x1946)))
(assert (= (x1819 x2876) (ite (= x2876 x2425) x859 (x103 x2876))))
(assert (x107 x792))
(assert (= (=> (and (= (x864 (+ x2454 64)) x677) (= (x1340 x364) x70) (= x215 (> x950 2)) (= (x864 (+ x2387 64)) x1909) (= (x3026 1461501637330902918203684832716283019655932542975 x70) x1209)) (and (=> x215 x1247) (=> (and (= x677 x2107) (= 2 x2481) (= x1909 x1102) (not x215)) x1047))) x2574))
(assert (x107 x917))
(assert (= (ite (and (not x2299) x2775) (x795 x2869) (x1613 x2869)) (x2338 x2869)))
(assert (= (x2997 x1909) (ite x1752 (ite (and (not x2913) x1127) (x205 x1909) (x1059 x1909)) (ite (and x135 x2374) (x205 x1909) (ite (and x3004 x2850) (x1777 x1909) (x2338 x1909))))))
(assert (x107 x572))
(assert (x107 x2770))
(assert (x2567 x2620))
(assert (x107 x1457))
(assert (x107 x424))
(assert (= (ite (= x972 x3011) x1063 (x1903 x3011)) (x2720 x3011)))
(assert (= (ite (= x2367 x748) x2894 (x2255 x748)) (x1769 x748)))
(assert (= (ite (= x1267 x780) x555 (x2526 x1267)) (x1952 x1267)))
(assert (= (x798 x1136) (ite (and x682 x2759) (x2795 x1136) (x2138 x1136))))
(assert (= (x2159 x2817) (ite (= x2817 x246) x1037 (x807 x2817))))
(assert (x107 x70))
(assert (= 0 (x33 x846)))
(assert (x107 x791))
(assert (= (ite (= x2636 x1642) x1673 (x283 x1642)) (x2245 x1642)))
(assert (x107 x727))
(assert (= (ite (and (not x566) x2821 x2422) (x2189 x49) (x168 x49)) (x2167 x49)))
(assert (= (ite (and x1979 (not x94)) (x396 x86) (x87 x86)) (x1782 x86)))
(assert (= (x915 x2869) (ite (and x1335 x2851) (x3018 x2869) (ite (and (not x3047) x1301) (x1317 x2869) (x2805 x2869)))))
(assert (= (x1958 x483) (ite (= x424 x483) x2357 (x2997 x483))))
(assert (= (x1845 x1732) (ite (and x896 x1892 (not x2097)) (x2539 x1732) (x2300 x1732))))
(assert (= x2000 (=> (and (not (= x250 0)) (= x2642 (x864 (+ 32 x2127))) (= (= 0 x3034) x1609) (= x250 (x3026 1461501637330902918203684832716283019655932542975 x2825)) (= (uninterp_mod (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x653) (not (= x1944 2)) (> x1107 0) (= x2038 (x864 (+ 32 x653))) (= (x864 (+ x2038 x2127)) x3008) (= x2825 (x2328 160)) (= (x2328 128) x1107) (<= x1944 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1944 0)) (and (=> (and x1609 (= x1368 x1077)) x2282) (=> (not x1609) x2370)))))
(assert (= (x104 x1706) (ite (= x467 x1706) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1706))))
(assert (= (x63 x115) (ite (and x1798 (not x2933)) (x125 x115) (ite (and (not x969) x77) (x657 x115) (ite (and (not x1421) x2091) (x1226 x115) (ite (and x697 (not x2706)) (x2950 x115) (x2504 x115)))))))
(assert (= (x302 160) (x2995 160)))
(assert (= (ite (= x1483 x2635) x1168 (x2980 x1483)) (x1265 x1483)))
(assert (= (x2063 x455) (ite (= x455 x1348) x542 (x2394 x455))))
(assert (= (ite (= x1821 x1732) x3034 (x1728 x1732)) (x1450 x1732)))
(assert (= (x2259 x2710) (ite (= x2710 x115) x2357 (x1427 x2710))))
(assert (= (ite (= x1544 x159) 96 (x1952 x1544)) (x595 x1544)))
(assert (x107 x843))
(assert (= (ite (= x1267 x3051) x9 (x2245 x1267)) (x928 x1267)))
(assert (= (ite (and x896 x1892 (not x2097)) (x2539 x2725) (x2300 x2725)) (x1845 x2725)))
(assert (x107 x858))
(assert (= (x1340 x655) (ite (= x655 x2454) x823 (x245 x655))))
(assert (x107 x951))
(assert (= (x1777 x2817) (ite (and x2123 (not x208)) (x1845 x2817) (x301 x2817))))
(assert (= (x1317 x2751) (ite (= x2751 x2359) x2277 (x3037 x2751))))
(assert (x107 x11))
(assert (= (x915 x1909) (ite (and x1335 x2851) (x3018 x1909) (ite (and (not x3047) x1301) (x1317 x1909) (x2805 x1909)))))
(assert (= (x2159 x1483) (ite (= x246 x1483) x1037 (x807 x1483))))
(assert (x107 x561))
(assert (= (x2764 x2552) (ite (= x3032 x2552) x573 (x890 x2552))))
(assert (x107 x967))
(assert (= x3 (and x150 x1264)))
(assert (= (x798 x293) (ite (and x682 x2759) (x2795 x293) (x2138 x293))))
(assert (x107 x471))
(assert (= (x1777 x1780) (ite (and x2123 (not x208)) (x1845 x1780) (x301 x1780))))
(assert (= (x104 x2594) (ite (= x467 x2594) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2594))))
(assert (= (ite (and x2851 x1335) (x3018 x1642) (ite (and x1301 (not x3047)) (x1317 x1642) (x2805 x1642))) (x915 x1642)))
(assert (= (ite (= x420 x1873) x952 (x1769 x1873)) (x651 x1873)))
(assert (x107 x612))
(assert (= (ite (and (not x2377) x724) (x798 x1483) (x346 x1483)) (x205 x1483)))
(assert (= (=> (and (< 0 x829) (= (x864 (+ x2035 192)) x1544) (= x829 (x2167 x1348)) (= (x2167 x1544) x995) (= x3007 (= 0 x995))) (and (=> (and x3007 (= x1974 x1014)) x2407) (=> (and (or (and (= x2429 x2660) (not x996)) (and x996 (= x2429 1) (> 4294967296 x2983))) (not (= 0 x2275)) (= (x3026 1461501637330902918203684832716283019655932542975 x1801) x2878) (= (x2167 x2869) x1801) (= (x1942 (x1592 x1069)) x2275) (= x524 (x2167 x2513)) (= (x864 (+ 32 x2513)) x2869) (= (x864 (+ x1974 4)) x180) (< 0 x524) (not x3007) (= x996 (< 0 x2660))) x1086))) x1171))
(assert (= (ite (= x1041 x2367) x2894 (x2255 x1041)) (x1769 x1041)))
(assert (x107 x2207))
(assert (= (ite (and x1979 (not x94)) (x396 x261) (x87 x261)) (x1782 x261)))
(assert (= (ite (= x59 x2597) x1209 (x1340 x2597)) (x1762 x2597)))
(assert (= 0 (x33 x2309)))
(assert (= (ite (and x896 x1892 (not x2097)) (x2539 x1442) (x2300 x1442)) (x1845 x1442)))
(assert (= (x1090 x2710) (ite (= x2710 x677) x2612 (x1762 x2710))))
(assert (= (x2539 x267) (ite (= x517 x267) x1914 (x2939 x267))))
(assert (= (ite (= x1453 x2847) x555 (x2602 x2847)) (x918 x2847)))
(assert (= (ite (= x2869 x1348) x542 (x2394 x2869)) (x2063 x2869)))
(assert (= (x225 x86) (ite (= x86 x796) x2187 (x801 x86))))
(assert (= (x2995 x364) (ite (= x364 224) x770 (x302 x364))))
(assert (= (x798 x1732) (ite (and x682 x2759) (x2795 x1732) (x2138 x1732))))
(assert (= (ite (= x2725 x2635) x1168 (x2980 x2725)) (x1265 x2725)))
(assert (= (ite (= x2252 x629) x840 (x2764 x629)) (x1451 x629)))
(assert (x107 x1213))
(assert (= (ite (and x2775 (not x2299)) (x795 x2553) (x1613 x2553)) (x2338 x2553)))
(assert (= (x224 x2552) (ite (= x2552 x816) x696 (x2011 x2552))))
(assert (= (x2707 x2477) (ite (= x1807 x2477) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2477))))
(assert (= 0 (x1494 (- x1909 x2555))))
(assert (= (ite (= x2642 x2048) x397 (x1902 x2048)) (x2036 x2048)))
(assert (= (and x2399 x284) x749))
(assert (x107 x154))
(assert (= (ite (= x2425 x1642) x859 (x103 x1642)) (x1819 x1642)))
(assert (x107 x2517))
(assert (x107 x2564))
(assert (= (x1902 x2106) (ite (= x2127 x2106) x3034 (x2328 x2106))))
(assert (= (ite (and (not x208) x2123) (x1845 x370) (x301 x370)) (x1777 x370)))
(assert (x107 x1049))
(assert (= (ite (= x1661 x67) x2246 (x1777 x67)) (x95 x67)))
(assert (= (x2063 x685) (ite (= x685 x1348) x542 (x2394 x685))))
(assert (= (=> (and (= (< 3 x22) x129) (= x266 (x864 (+ 64 x796))) (= x261 (x864 (+ x846 64))) (= x2639 (x225 x2876))) (and (=> (and (= x350 x266) (= x261 x1556) (= 3 x379) (not x129)) x2674) (=> x129 x827))) x91))
(assert (= (x807 x1197) (ite (= x2107 x1197) x315 (x533 x1197))))
(assert (= x1205 (=> (and (= x1881 (x3026 1461501637330902918203684832716283019655932542975 x2825)) (= x2284 (x864 (+ x1821 36))) (= x2387 (x864 (+ x2298 32))) (= x1759 (> x950 0)) (= x1651 (x864 (+ 4 x1821))) (= (x864 (+ x1651 192)) x2454) (= x950 (x1429 x2298)) (= (x864 (+ 164 x1821)) x2962)) (and (=> (and (= x1102 x2387) (= x2107 x2454) (not x1759) (= x2481 0)) x1047) (=> x1759 x888)))))
(assert (x107 x3055))
(assert (x107 x2275))
(assert (= (ite (= x127 x1139) x1229 (x511 x1139)) (x1222 x1139)))
(assert (x107 x604))
(assert (= (ite (and x2775 (not x2299)) (x795 x293) (x1613 x293)) (x2338 x293)))
(assert (x107 x620))
(assert (= (x423 x2594) (ite (and x2655 x817) (x1534 x2594) (ite (and (not x1834) x1941) (x887 x2594) (x151 x2594)))))
(assert (= (ite (= x1745 x433) x585 (x2580 x433)) (x1328 x433)))
(assert (= (x2426 x2168) (ite (and x29 x2105) (x593 x2168) (x1044 x2168))))
(assert (= 0 (x1494 (- x1387 x2555))))
(assert (= x2050 x29))
(assert (= (ite (= x86 x2367) x2894 (x2255 x86)) (x1769 x86)))
(assert (= (x302 x846) (ite (= 192 x846) x2714 (x2783 x846))))
(assert (= (x2036 x86) (ite (= x2642 x86) x397 (x1902 x86))))
(assert (= (ite (= x2594 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2594)) (x2931 x2594)))
(assert (= (x805 x780) (ite (= x501 x780) x3030 (x1531 x780))))
(assert (= (x1265 x261) (ite (= x2635 x261) x1168 (x2980 x261))))
(assert (= (x2259 x49) (ite (= x115 x49) x2357 (x1427 x49))))
(assert (= (x2172 x685) (ite (= x2709 x685) x2925 (x1370 x685))))
(assert (x107 x2223))
(assert (= (x609 x2876) (ite (= x2876 x2150) 96 (x918 x2876))))
(assert (= (x902 x436) (ite (= x227 x436) x22 (x56 x436))))
(assert (= (ite (= x2309 x227) x22 (x56 x2309)) (x902 x2309)))
(assert (= (x2707 x1706) (ite (= x1807 x1706) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1706))))
(assert (= (x2783 x294) (ite (= 160 x294) x190 (x1314 x294))))
(assert (= (ite (= x115 x501) x3030 (x1531 x115)) (x805 x115)))
(assert (= (ite (and x817 x2655) (x1534 x1318) (ite (and (not x1834) x1941) (x887 x1318) (x151 x1318))) (x423 x1318)))
(assert (= (ite (and x29 (not x1970)) (x63 x1873) (x692 x1873)) (x1044 x1873)))
(assert (= (ite (= x1261 x867) x2738 (x2950 x867)) (x1226 x867)))
(assert (= (x657 x1594) (ite (= x2129 x1594) x2451 (x1226 x1594))))
(assert (= (ite (= 192 x2876) x2714 (x2783 x2876)) (x302 x2876)))
(assert (= (x2159 x655) (ite (= x655 x246) x1037 (x807 x655))))
(assert (= (x918 x874) (ite (= x1453 x874) x555 (x2602 x874))))
(assert (= (x1534 x1267) (ite (= x1267 x1318) x1964 (x715 x1267))))
(assert (= (ite (= x1083 x2217) x367 (x2880 x2217)) (x2795 x2217)))
(assert (= (x3016 x1706) (ite (= x1706 x1693) x1426 (x1160 x1706))))
(assert (= (ite (= x3008 x1780) x1217 (x340 x1780)) (x3018 x1780)))
(assert (x107 x814))
(assert (= 0 (x1494 (- x846 x2555))))
(assert (= x2151 (x2600 (x1592 x2151))))
(assert (= (x95 x1267) (ite (= x1267 x1661) x2246 (x1777 x1267))))
(assert (= (x2328 x866) (ite (and x923 x2926) (x1952 x866) (ite (and (not x602) x1236) (x595 x866) (x1546 x866)))))
(assert (= x2411 (=> (= x566 (= 0 x2790)) (and (=> (and x566 (= 0 x1904) (= x1638 x1987) (= 0 x62)) x2732) (=> (and (not (= x868 0)) (= x1684 (x2268 x1348)) (= (x1942 (x1592 x426)) x879) (= (x864 (+ x705 31)) x1791) (= x700 (x864 (+ 32 x2535))) (not (= 0 x879)) (= x2535 (uninterp_mod (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2268 x1524) x2513) (= x1338 (x2018 x2035)) (= (= 0 x2726) x2422) (= (x3026 1461501637330902918203684832716283019655932542975 x1338) x426) (= x1974 (x864 (+ x1615 x700))) (= x1499 (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1791)) (not (< 18446744073709551615 x2726)) (= x2774 x1684) (or (and (= x868 1) x1654 (> 4294967296 x705)) (and (not x1654) (= x868 x2489))) (= x2774 (x2268 x2513)) (or x2422 (and (= (uninterp_mod (* 32 x2726) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2080) (not x2422) (= x1586 (x864 (+ x1615 32))))) (= x1654 (< 0 x2489)) (= (x864 (+ x1499 x1638)) x1615) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x705)) (> 32 x705)) (> x705 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2268 x2513) x2726) (>= 1461501637330902918203684832716283019655932542975 x1069) (= (x2268 x1638) x1069) (not x566)) x2221)))))
(assert (= (x609 x2546) (ite (= x2546 x2150) 96 (x918 x2546))))
(assert (= (x2189 x293) (ite (= x293 x1615) x2726 (x2268 x293))))
(assert (x107 x1026))
(assert (= 0 (x1494 (- x1136 x2555))))
(assert (= (ite (= x501 x2817) x3030 (x1531 x2817)) (x805 x2817)))
(assert (= (ite (= x2128 x433) x1897 (x657 x433)) (x125 x433)))
(assert (= (x205 x1453) (ite (and (not x2377) x724) (x798 x1453) (x346 x1453))))
(assert (= (ite (= x3023 x49) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x49)) (x2931 x49)))
(assert (x107 x201))
(assert (x107 x1270))
(assert (x1691 x53 x1297))
(assert (= (x1539 x2309) (ite (= x1583 x2309) x1235 (x1450 x2309))))
(assert (= 0 (x1494 (- x424 x2555))))
(assert (x107 x824))
(assert (= (ite (and (not x2299) x2775) (x795 x483) (x1613 x483)) (x2338 x483)))
(assert (= (x939 x2035) (ite (= x2576 x2035) x1279 (x1888 x2035))))
(assert (x107 x116))
(assert (x2478 x1953))
(assert (= (x915 x1197) (ite (and x1335 x2851) (x3018 x1197) (ite (and (not x3047) x1301) (x1317 x1197) (x2805 x1197)))))
(assert (= (ite (= x3023 x2106) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2106)) (x2931 x2106)))
(assert (= (x2707 x364) (ite (= x1807 x364) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x364))))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x483) (x1059 x483)) (ite (and x135 x2374) (x205 x483) (ite (and x3004 x2850) (x1777 x483) (x2338 x483)))) (x2997 x483)))
(assert (= (x2783 x97) (ite (= x97 160) x190 (x1314 x97))))
(assert (x107 x1530))
(assert (= (x1044 x49) (ite (and (not x1970) x29) (x63 x49) (x692 x49))))
(assert (= x1311 (=> (and (= x1229 (x511 x2132)) (= (< 32 x1628) x1512) (= x2132 x1191) (= x546 x127)) (and (=> (and (not x1512) (= 32 x2557)) x1186) (=> x1512 x3013)))))
(assert (= (x890 x2553) (ite (= x2085 x2553) x1910 (x970 x2553))))
(assert (= (x1265 x629) (ite (= x629 x2635) x1168 (x2980 x629))))
(assert (= (x2172 x722) (ite (= x2709 x722) x2925 (x1370 x722))))
(assert (= (x2795 x1946) (ite (= x1946 x1083) x367 (x2880 x1946))))
(assert (x107 x2175))
(assert (= (x2950 x1041) (ite (= x1041 x350) x1558 (x12 x1041))))
(assert (= (x104 x1197) (ite (= x467 x1197) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1197))))
(assert (= (x3018 x1695) (ite (= x1695 x3008) x1217 (x340 x1695))))
(assert (= (ite (and (not x566) x2422 x2821) (x2189 x483) (x168 x483)) (x2167 x483)))
(assert (= (ite (= x1642 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1642)) (x2707 x1642)))
(assert (x107 x2319))
(assert (= (x887 x1483) (ite (= x1231 x1483) x775 (x44 x1483))))
(assert (= (x1317 x436) (ite (= x436 x2359) x2277 (x3037 x436))))
(assert (= (ite (= x1642 x1083) x367 (x2880 x1642)) (x2795 x1642)))
(assert (= x1655 (or x3040 (and x707 (not x1319)))))
(assert (= (x33 x2048) 0))
(assert (= (x1782 x2298) (ite (and (not x94) x1979) (x396 x2298) (x87 x2298))))
(assert (= (ite (= x2217 160) x190 (x1314 x2217)) (x2783 x2217)))
(assert (x107 x1510))
(assert (x107 x213))
(assert (= (x2172 x2597) (ite (= x2709 x2597) x2925 (x1370 x2597))))
(assert (= (x2931 x2553) (ite (= x2553 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2553))))
(assert (= x3013 (=> (and (= x2989 (x1222 x2248)) (= x2248 (x864 (+ 64 x2966))) (= (> x1628 64) x2079) (= x2356 (x864 (+ x1804 96)))) (and (=> (and (not x2079) (= x2557 64)) x1186) (=> x2079 x922)))))
(assert (x107 x2401))
(assert (= (ite (and x923 x2926) (x1952 x3011) (ite (and x1236 (not x602)) (x595 x3011) (x1546 x3011))) (x2328 x3011)))
(assert (= (x2600 (x348 106291421124418496933435958710909755174326102057086830187839624775778309242880)) 106291421124418496933435958710909755174326102057086830187839624775778309242880))
(assert (= (x423 x2817) (ite (and x817 x2655) (x1534 x2817) (ite (and (not x1834) x1941) (x887 x2817) (x151 x2817)))))
(assert (x107 x2184))
(assert (x107 x2453))
(assert (= (ite (= x261 x2107) x315 (x533 x261)) (x807 x261)))
(assert (= (x887 x2847) (ite (= x2847 x1231) x775 (x44 x2847))))
(assert (= (x245 x1780) (ite (= x1780 x2962) x950 (x1429 x1780))))
(assert (= (=> (and (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2490) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1049)) (< x1049 x2490)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1049) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2490))) (= (x864 (+ 36 x444)) x919) (= x2340 (< x1387 128)) (= 0 x2722) (not (= 2442716437 x2586)) (not (> x2264 x2490)) (= (x864 (+ x444 4)) x425) (= x2467 (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x402)) (= x1387 (x864 (+ x2467 128))) (= x1525 (or x2340 x1172)) (= (x1942 (x1592 274184521717934524641157099916833587223)) x897) (not (> 1684360437 x2586)) (= x2923 (uninterp_mod (* 32 x1725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x4 (< 0 x1725)) (not (< x2586 2442716437)) (= x383 (ite x1525 1 0)) (not (or (and (> 64 x1158) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1158) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1158))) (= x2586 2477345955) (not (< 18446744073709551615 x228)) (= (< 18446744073709551615 x1387) x1172) (not (< 18446744073709551615 x1725)) (= (x864 (+ 35 x444)) x1049) (= x383 0) (= x1158 (x163 (- x2490 4))) (< 0 x897) (= x1725 (x1667 x425)) (not (> 4 x2490)) (= x262 (uninterp_mod (* x1725 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x402 (x864 (+ x2923 63))) (< x2586 2743638299) (= (x864 (+ x262 x919)) x2264)) (and (=> x4 x1960) (=> (not x4) x1285))) x112))
(assert (x107 x524))
(assert (= (ite (= x2717 192) x2714 (x2783 x2717)) (x302 x2717)))
(assert (x107 x897))
(assert (x107 x542))
(assert (= (x130 x2552) (ite (= x2552 x1489) x1829 (x1668 x2552))))
(assert (= (ite (= 160 x1695) x190 (x1314 x1695)) (x2783 x1695)))
(assert (x107 x574))
(assert (x107 x840))
(assert (= (x1539 x1642) (ite (= x1642 x1583) x1235 (x1450 x1642))))
(assert (= (ite (= x488 x115) x2357 (x1427 x488)) (x2259 x488)))
(assert (= x2330 (and x2118 x1468)))
(assert (= (x2795 x846) (ite (= x1083 x846) x367 (x2880 x846))))
(assert (= (ite (= x2636 x1706) x1673 (x283 x1706)) (x2245 x1706)))
(assert (x107 x416))
(assert (= (=> (and (= (x163 (- x1401 1)) x1238) (= x2976 (not (< 0 x1238)))) (and x2976 x1085)) x1076))
(assert (x107 x1460))
(assert (= (ite (and x1892 (not x2097) x896) (x2539 x975) (x2300 x975)) (x1845 x975)))
(assert (= (ite (and x724 (not x2377)) (x798 x86) (x346 x86)) (x205 x86)))
(assert (x107 x2665))
(assert (x107 x1))
(assert (= (x1819 x2597) (ite (= x2425 x2597) x859 (x103 x2597))))
(assert (= (ite (= x1267 x677) x2612 (x1762 x1267)) (x1090 x1267)))
(assert (x107 x2006))
(assert (= (ite (= x2642 x2298) x397 (x1902 x2298)) (x2036 x2298)))
(assert (x107 x1617))
(assert (x1691 x1871 x550))
(assert (= (ite (and x2655 x817) (x1534 x2869) (ite (and x1941 (not x1834)) (x887 x2869) (x151 x2869))) (x423 x2869)))
(assert (= (x1952 x1642) (ite (= x780 x1642) x555 (x2526 x1642))))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x1453) (x1059 x1453)) (ite (and x135 x2374) (x205 x1453) (ite (and x3004 x2850) (x1777 x1453) (x2338 x1453)))) (x2997 x1453)))
(assert (x107 x1453))
(assert (= (or x2885 (and x837 x2226)) x1935))
(assert (x107 x2532))
(assert (= (ite (and x29 x2105) (x593 x1706) (x1044 x1706)) (x2426 x1706)))
(assert (= (x2707 x2309) (ite (= x2309 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2309))))
(assert (x107 x1184))
(assert (= (ite (and x724 (not x2377)) (x798 x1909) (x346 x1909)) (x205 x1909)))
(assert (= (x1958 x2406) (ite (= x424 x2406) x2357 (x2997 x2406))))
(assert (= (ite (= x2847 x115) x2357 (x1427 x2847)) (x2259 x2847)))
(assert (x107 x483))
(assert (= (x1952 x846) (ite (= x780 x846) x555 (x2526 x846))))
(assert (= (x3018 x2217) (ite (= x2217 x3008) x1217 (x340 x2217))))
(assert (= (ite (= x115 x433) x2357 (x1427 x433)) (x2259 x433)))
(assert (= (x2426 x67) (ite (and x29 x2105) (x593 x67) (x1044 x67))))
(assert (= (x1903 x2546) (ite (= x1809 x2546) x50 (x2159 x2546))))
(assert (= (ite (= x1483 x1742) x848 (x1767 x1483)) (x353 x1483)))
(assert (= (x918 x2710) (ite (= x2710 x1453) x555 (x2602 x2710))))
(assert (= (x1450 x1821) x3034))
(assert (x107 x1143))
(assert (= (x1325 x629) (ite (= x1638 x629) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x629))))
(assert (= (x2707 x86) (ite (= x1807 x86) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x86))))
(assert (x107 x2379))
(assert (= (ite (= x182 x2642) x397 (x1902 x182)) (x2036 x182)))
(assert (= (ite (= x1809 x2552) x50 (x2159 x2552)) (x1903 x2552)))
(assert (= (ite (= x1583 x67) x1235 (x1450 x67)) (x1539 x67)))
(assert (= (x807 x1780) (ite (= x2107 x1780) x315 (x533 x1780))))
(assert (= (x245 x115) (ite (= x2962 x115) x950 (x1429 x115))))
(assert (= (x2931 x866) (ite (= x3023 x866) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x866))))
(assert (= (x33 x1516) 0))
(assert (x107 x880))
(assert (= (ite (and x923 x2926) (x1952 x1909) (ite (and x1236 (not x602)) (x595 x1909) (x1546 x1909))) (x2328 x1909)))
(assert (x107 x2263))
(assert (= (x807 x86) (ite (= x86 x2107) x315 (x533 x86))))
(assert (x107 x2804))
(assert (x107 x2658))
(assert (= (ite (and x1741 (not x2537)) (x2136 x1139) (ite (and x2480 (not x2079)) (x552 x1139) (ite (and x668 (not x1512)) (x1222 x1139) (ite (and (not x2508) x660) (x511 x1139) (x802 x1139))))) (x1390 x1139)))
(assert (x107 x1511))
(assert (x107 x1432))
(assert (= (ite (= x2847 x2962) x950 (x1429 x2847)) (x245 x2847)))
(assert (x107 x656))
(assert (= (x1451 x483) (ite (= x483 x2252) x840 (x2764 x483))))
(assert (x107 x1439))
(assert (= (x2397 x1267) (ite (and (not x763) x2810) (x2167 x1267) (x298 x1267))))
(assert (= (=> (and (= x573 (x3026 1461501637330902918203684832716283019655932542975 x2605)) (= x370 (x864 (+ 64 x433))) (= (x864 (+ 64 x2085)) x2252) (= (x890 x655) x2605) (= x2303 (> x500 2))) (and (=> (and (= x2921 2) (not x2303) (= x1489 x2252) (= x2310 x370)) x1753) (=> x2303 x2689))) x1020))
(assert (= (x805 x483) (ite (= x483 x501) x3030 (x1531 x483))))
(assert (= (ite (= 160 x2710) x190 (x1314 x2710)) (x2783 x2710)))
(assert (= (x2997 x2406) (ite x1752 (ite (and (not x2913) x1127) (x205 x2406) (x1059 x2406)) (ite (and x135 x2374) (x205 x2406) (ite (and x3004 x2850) (x1777 x2406) (x2338 x2406))))))
(assert (= (ite (= x1732 x1809) x50 (x2159 x1732)) (x1903 x1732)))
(assert (x107 x1021))
(assert (= (ite (= x2309 x517) x1914 (x2939 x2309)) (x2539 x2309)))
(assert (x107 x1555))
(assert (= (x1090 x2298) (ite (= x677 x2298) x2612 (x1762 x2298))))
(assert (= (and x2389 x2303) x2116))
(assert (= (ite (= x1706 x2127) x3034 (x2328 x1706)) (x1902 x1706)))
(assert (= (x2539 x2298) (ite (= x2298 x517) x1914 (x2939 x2298))))
(assert (= (ite (= x517 x2406) x1914 (x2939 x2406)) (x2539 x2406)))
(assert (= (x1845 x364) (ite (and (not x2097) x1892 x896) (x2539 x364) (x2300 x364))))
(assert (= (ite (and (not x2019) x2949) (x2993 x1453) (x2001 x1453)) (x1029 x1453)))
(assert (= (x1539 x1544) (ite (= x1544 x1583) x1235 (x1450 x1544))))
(assert (= (ite (= x2817 x1261) x2738 (x2950 x2817)) (x1226 x2817)))
(assert (= (ite (and (not x1970) x29) (x63 x1732) (x692 x1732)) (x1044 x1732)))
(assert (= x555 (x918 x1453)))
(assert (x107 x1938))
(assert (= (x1782 x966) (ite (and x1979 (not x94)) (x396 x966) (x87 x966))))
(assert (x107 x2726))
(assert (= (ite (= x293 x2129) x2451 (x1226 x293)) (x657 x293)))
(assert (= (x915 x2513) (ite (and x2851 x1335) (x3018 x2513) (ite (and (not x3047) x1301) (x1317 x2513) (x2805 x2513)))))
(assert (x107 x677))
(assert (= (ite (and x2821 (not x566) x2422) (x2189 x2597) (x168 x2597)) (x2167 x2597)))
(assert (= (x302 x370) (ite (= 192 x370) x2714 (x2783 x370))))
(assert (x107 x2193))
(assert (= x2588 (and x2230 x1624)))
(assert (= (ite (= x3008 x1803) x1217 (x340 x1803)) (x3018 x1803)))
(assert (= (x2931 x1483) (ite (= x3023 x1483) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1483))))
(assert (= (ite (and x682 x2759) (x2795 x1594) (x2138 x1594)) (x798 x1594)))
(assert (= (ite (= x2048 x2635) x1168 (x2980 x2048)) (x1265 x2048)))
(assert (= (x2950 x1780) (ite (= x350 x1780) x1558 (x12 x1780))))
(assert (= (ite (= x227 x780) x22 (x56 x780)) (x902 x780)))
(assert (x405 x1868))
(assert (= (x1265 x1516) (ite (= x1516 x2635) x1168 (x2980 x1516))))
(assert (= 0 (x1494 (- x2869 x2555))))
(assert (= (ite (= x467 x293) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x293)) (x104 x293)))
(assert (= (x918 x2546) (ite (= x1453 x2546) x555 (x2602 x2546))))
(assert (= (x1845 x3011) (ite (and (not x2097) x1892 x896) (x2539 x3011) (x2300 x3011))))
(assert (= (ite (and x682 x2759) (x2795 x629) (x2138 x629)) (x798 x629)))
(assert (= (ite (= x3008 x1136) x1217 (x340 x1136)) (x3018 x1136)))
(assert (= x2155 (x2600 (x1592 x2155))))
(assert (= (x807 x2168) (ite (= x2107 x2168) x315 (x533 x2168))))
(assert (= (ite (= x424 x1946) x2357 (x2997 x1946)) (x1958 x1946)))
(assert (= (x2338 x1873) (ite (and x2775 (not x2299)) (x795 x1873) (x1613 x1873))))
(assert (= (ite (= x517 x857) x1914 (x2939 x857)) (x2539 x857)))
(assert (= (x1762 x685) (ite (= x59 x685) x1209 (x1340 x685))))
(assert (= (x2931 x455) (ite (= x455 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x455))))
(assert (= (x1090 x1197) (ite (= x1197 x677) x2612 (x1762 x1197))))
(assert (= (ite (and x2926 x923) (x1952 x2623) (ite (and x1236 (not x602)) (x595 x2623) (x1546 x2623))) (x2328 x2623)))
(assert (x405 x1975))
(assert (= (ite (= x2128 x1594) x1897 (x657 x1594)) (x125 x1594)))
(assert (= (ite (= x2252 x780) x840 (x2764 x780)) (x1451 x780)))
(assert (= (x887 x1873) (ite (= x1873 x1231) x775 (x44 x1873))))
(assert (= (x1317 x1068) (ite (= x2359 x1068) x2277 (x3037 x1068))))
(assert (= (x2707 x424) (ite (= x1807 x424) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x424))))
(assert (x107 x3033))
(assert (= (x1370 x488) (ite (= x2298 x488) x3034 (x161 x488))))
(assert (= (x2931 x685) (ite (= x3023 x685) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x685))))
(assert (= (ite (and x1866 (not x2476)) (x2232 x1524) (x1379 x1524)) (x2018 x1524)))
(assert (= (ite (and x1866 (not x2476)) (x2232 x1197) (x1379 x1197)) (x2018 x1197)))
(assert (= (and x2470 x1630) x2312))
(assert (= (x939 x483) (ite (= x483 x2576) x1279 (x1888 x483))))
(assert (x107 x1252))
(assert (= (x2783 x1594) (ite (= x1594 160) x190 (x1314 x1594))))
(assert (= (x283 x1706) (ite (= x2061 x1706) x515 (x224 x1706))))
(assert (= (x2245 x2546) (ite (= x2546 x2636) x1673 (x283 x2546))))
(assert (= (x125 x293) (ite (= x2128 x293) x1897 (x657 x293))))
(assert (= 18446744073709551615 (x2600 (x348 18446744073709551615))))
(assert (= (x1819 x2725) (ite (= x2725 x2425) x859 (x103 x2725))))
(assert (= (ite (= x2477 x424) x2700 (x2997 x2477)) (x2204 x2477)))
(assert (= (x2338 x2623) (ite (and (not x2299) x2775) (x795 x2623) (x1613 x2623))))
(assert (= (x918 x1068) (ite (= x1068 x1453) x555 (x2602 x1068))))
(assert (= (x396 x488) (ite (and x3 (not x2376)) (x651 x488) (ite (and x1264 (not x150)) (x1769 x488) (ite (and (not x601) x282) (x2255 x488) (ite (and x1733 (not x1290)) (x2707 x488) (x326 x488)))))))
(assert (= (x1902 x1873) (ite (= x2127 x1873) x3034 (x2328 x1873))))
(assert (= (x595 x1197) (ite (= x1197 x159) 96 (x1952 x1197))))
(assert (= (ite (= x1732 x3008) x1217 (x340 x1732)) (x3018 x1732)))
(assert (= (x2931 x1732) (ite (= x1732 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1732))))
(assert (= (x2931 x1484) (ite (= x3023 x1484) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1484))))
(assert (x107 x788))
(assert (= (ite (and x2759 x682) (x2795 x1516) (x2138 x1516)) (x798 x1516)))
(assert (= (x595 x1706) (ite (= x159 x1706) 96 (x1952 x1706))))
(assert (= (and x1671 (not x719)) x1488))
(assert (= (x609 x1803) (ite (= x2150 x1803) 96 (x918 x1803))))
(assert (= (x2255 x966) (ite (= x499 x966) x2188 (x2707 x966))))
(assert (x107 x1423))
(assert (x405 x2291))
(assert (= (ite (and x1798 (not x2933)) (x125 x2546) (ite (and x77 (not x969)) (x657 x2546) (ite (and x2091 (not x1421)) (x1226 x2546) (ite (and (not x2706) x697) (x2950 x2546) (x2504 x2546))))) (x63 x2546)))
(assert (= (ite (= x1873 x2252) x840 (x2764 x1873)) (x1451 x1873)))
(assert (= (x1819 x293) (ite (= x2425 x293) x859 (x103 x293))))
(assert (x107 x2825))
(assert (x107 x1778))
(assert (x107 x1341))
(assert (= (ite (= x796 x294) x2187 (x801 x294)) (x225 x294)))
(assert (x107 x2284))
(assert (= (ite (= x433 x424) x2700 (x2997 x433)) (x2204 x433)))
(assert (= x2260 (=> (and (= (x864 (+ x623 x1257)) x1276) (not (or (and (< x2621 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2621))) (> x2621 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 0 x1119)) (= x1943 (* x1162 x457)) (< (* x457 x1162) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= x352 0)) (= (x864 (+ 31 x2621)) x967) (= (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x967) x623) (= x265 (not (< 1 x2806))) (= (x1059 x2991) x2806) (= x451 x1545) (= (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1545)) x1119) (= (- (/ x1943 1000000000000000000) (uninterp_frac x1943 1000000000000000000)) x1545) (= x457 (x1059 x1257))) (and x265 (=> (and (= x1424 x1276) (= x451 x1239)) x369)))))
(assert (= (x918 x2298) (ite (= x1453 x2298) x555 (x2602 x2298))))
(assert (= (x801 x2817) (ite (= x2817 x824) x1666 (x902 x2817))))
(assert (= (x1370 x261) (ite (= x2298 x261) x3034 (x161 x261))))
(assert (x107 x2890))
(assert (x107 x1718))
(assert (= (x651 x3035) (ite (= x3035 x420) x952 (x1769 x3035))))
(assert (= (ite (= x722 x2127) x3034 (x2328 x722)) (x1902 x722)))
(assert (= (ite (= x420 x1732) x952 (x1769 x1732)) (x651 x1732)))
(assert (= (ite (and x29 x2105) (x593 x1136) (x1044 x1136)) (x2426 x1136)))
(assert (= (ite (= x267 x2425) x859 (x103 x267)) (x1819 x267)))
(assert (= (ite (= x294 x2635) x1168 (x2980 x294)) (x1265 x294)))
(assert (= (ite (= x1453 x1695) x555 (x2602 x1695)) (x918 x1695)))
(assert (= (x2783 128) (x1314 128)))
(assert (= (=> (and (= (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2814)) x2182) (< 0 x332) (= (not (> x2351 1)) x2342) (= (x2018 x685) x2814) (= (x864 (+ x2035 192)) x685) (not (> 0 x2182)) (= (x2018 x1348) x332) (= x2814 x2487) (= (x2018 x1348) x2351)) (and x2342 (=> (= x2487 x2790) x2411))) x503))
(assert (= (x887 x2817) (ite (= x1231 x2817) x775 (x44 x2817))))
(assert (= (ite (= x2991 x159) 96 (x1952 x2991)) (x595 x2991)))
(assert (x107 x2213))
(assert (= (x609 x914) (ite (= x2150 x914) 96 (x918 x914))))
(assert (x107 x3008))
(assert (= (x1328 x483) (ite (= x1745 x483) x585 (x2580 x483))))
(assert (x107 x1188))
(assert (= (x887 x629) (ite (= x1231 x629) x775 (x44 x629))))
(assert (= (ite (and x1335 x2851) (x3018 x294) (ite (and x1301 (not x3047)) (x1317 x294) (x2805 x294))) (x915 x294)))
(assert (x107 x1464))
(assert (= (x1265 x2553) (ite (= x2553 x2635) x1168 (x2980 x2553))))
(assert (x107 x1164))
(assert (x107 x293))
(assert (= (x125 x1642) (ite (= x1642 x2128) x1897 (x657 x1642))))
(assert (= (ite (= x501 x867) x3030 (x1531 x867)) (x805 x867)))
(assert (= (ite (= x2298 x796) x2187 (x801 x2298)) (x225 x2298)))
(assert (= (x2995 x67) (ite (= 224 x67) x770 (x302 x67))))
(assert (= (ite (= x3008 x1483) x1217 (x340 x1483)) (x3018 x1483)))
(assert (= (ite (= x227 x67) x22 (x56 x67)) (x902 x67)))
(assert (= (x245 x1594) (ite (= x2962 x1594) x950 (x1429 x1594))))
(assert (x107 x2295))
(assert (x107 x2540))
(assert (= (ite (= x2635 x488) x1168 (x2980 x488)) (x1265 x488)))
(assert (= (ite (= x874 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x874)) (x104 x874)))
(assert (= (ite (= x2107 x867) x315 (x533 x867)) (x807 x867)))
(assert (= (x595 x1068) (ite (= x159 x1068) 96 (x1952 x1068))))
(assert (= (x33 x975) 0))
(assert (x107 x2061))
(assert (x107 x774))
(assert (= (x1044 x294) (ite (and x29 (not x1970)) (x63 x294) (x692 x294))))
(assert (= (ite (= x2636 x1483) x1673 (x283 x1483)) (x2245 x1483)))
(assert (x107 x2765))
(assert (x107 x2922))
(assert (x107 x2107))
(assert (x107 x1882))
(assert (= (x2328 x1695) (ite (and x2926 x923) (x1952 x1695) (ite (and x1236 (not x602)) (x595 x1695) (x1546 x1695)))))
(assert (= (x63 x1267) (ite (and (not x2933) x1798) (x125 x1267) (ite (and x77 (not x969)) (x657 x1267) (ite (and (not x1421) x2091) (x1226 x1267) (ite (and (not x2706) x697) (x2950 x1267) (x2504 x1267)))))))
(assert (x107 x446))
(assert (= (ite (= x1453 x455) x555 (x2602 x455)) (x918 x455)))
(assert (= (ite (= x1594 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1594)) (x104 x1594)))
(assert (= (x2328 x1642) (ite (and x923 x2926) (x1952 x1642) (ite (and x1236 (not x602)) (x595 x1642) (x1546 x1642)))))
(assert (= (x2707 x294) (ite (= x1807 x294) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x294))))
(assert (= (ite (= x2359 x822) x2277 (x3037 x822)) (x1317 x822)))
(assert (= (x1782 x1873) (ite (and x1979 (not x94)) (x396 x1873) (x87 x1873))))
(assert (= (x396 x1780) (ite (and (not x2376) x3) (x651 x1780) (ite (and x1264 (not x150)) (x1769 x1780) (ite (and (not x601) x282) (x2255 x1780) (ite (and x1733 (not x1290)) (x2707 x1780) (x326 x1780)))))))
(assert (x107 x495))
(assert (x107 x2837))
(assert (= (ite (= x2425 x961) x859 (x103 x961)) (x1819 x961)))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x1453) (x2300 x1453)) (x1845 x1453)))
(assert (= (x2063 x2035) (ite (= x1348 x2035) x542 (x2394 x2035))))
(assert (= (ite (= x1041 x499) x2188 (x2707 x1041)) (x2255 x1041)))
(assert (= (ite (= x2623 128) x1725 (x33 x2623)) (x1314 x2623)))
(assert (= (ite (= x115 x1136) x2357 (x1427 x1136)) (x2259 x1136)))
(assert (= (x1029 x433) (ite (and (not x2019) x2949) (x2993 x433) (x2001 x433))))
(assert (= (x2707 x1732) (ite (= x1732 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1732))))
(assert (= (ite (= x488 x501) x3030 (x1531 x488)) (x805 x488)))
(assert (= (x2189 x2546) (ite (= x2546 x1615) x2726 (x2268 x2546))))
(assert (= (ite (= x867 x517) x1914 (x2939 x867)) (x2539 x867)))
(assert (= (ite (and x29 (not x1970)) (x63 x370) (x692 x370)) (x1044 x370)))
(assert (= (x915 x293) (ite (and x2851 x1335) (x3018 x293) (ite (and (not x3047) x1301) (x1317 x293) (x2805 x293)))))
(assert (= (x2036 x436) (ite (= x436 x2642) x397 (x1902 x436))))
(assert (x107 x2925))
(assert (= 0 (x1494 (- x2387 x2555))))
(assert (= (and x2706 x697) x2091))
(assert (= (x1592 4294967296) (x348 4294967296)))
(assert (= (x3018 x2876) (ite (= x3008 x2876) x1217 (x340 x2876))))
(assert (= (ite (= x2710 x501) x3030 (x1531 x2710)) (x805 x2710)))
(assert (= (ite (= x2709 x2513) x2925 (x1370 x2513)) (x2172 x2513)))
(assert (= (ite (and x817 x2655) (x1534 x2553) (ite (and (not x1834) x1941) (x887 x2553) (x151 x2553))) (x423 x2553)))
(assert (= (ite (= x86 x1083) x367 (x2880 x86)) (x2795 x86)))
(assert (x107 x1928))
(assert (x107 x247))
(assert (= x2233 (or (and x2655 x817) x1185)))
(assert (= (x225 x97) (ite (= x796 x97) x2187 (x801 x97))))
(assert (= (ite (= x2725 x1231) x775 (x44 x2725)) (x887 x2725)))
(assert (x107 x2457))
(assert (= (x2255 x1136) (ite (= x1136 x499) x2188 (x2707 x1136))))
(assert (= (x1902 x2546) (ite (= x2127 x2546) x3034 (x2328 x2546))))
(assert (= (x1265 x1689) (ite (= x1689 x2635) x1168 (x2980 x1689))))
(assert (= (ite (= x1041 x59) x1209 (x1340 x1041)) (x1762 x1041)))
(assert (= (ite (and x2810 (not x763)) (x2167 x1483) (x298 x1483)) (x2397 x1483)))
(assert (= (ite (= x1483 x1846) x500 (x559 x1483)) (x970 x1483)))
(assert (x107 x1418))
(assert (= (=> (and (= (> x1558 32) x1421) (= x1438 x1261) (= x2738 (x2950 x966)) (= x966 x429)) (and (=> x1421 x2758) (=> (and (= 32 x616) (not x1421)) x613))) x702))
(assert (= (ite (= x2597 192) x2714 (x2783 x2597)) (x302 x2597)))
(assert (= (ite (= x2817 x424) x2700 (x2997 x2817)) (x2204 x2817)))
(assert (= (x396 x867) (ite (and (not x2376) x3) (x651 x867) (ite (and x1264 (not x150)) (x1769 x867) (ite (and x282 (not x601)) (x2255 x867) (ite (and (not x1290) x1733) (x2707 x867) (x326 x867)))))))
(assert (= (x302 x2833) (ite (= 192 x2833) x2714 (x2783 x2833))))
(assert (x107 x1660))
(assert (= (ite (= x1594 x2367) x2894 (x2255 x1594)) (x1769 x1594)))
(assert (= (ite (= x2387 x1453) x555 (x2602 x2387)) (x918 x2387)))
(assert (= (x2338 x1041) (ite (and x2775 (not x2299)) (x795 x1041) (x1613 x1041))))
(assert (= (x302 x2594) (ite (= x2594 192) x2714 (x2783 x2594))))
(assert (= (x1777 x2725) (ite (and (not x208) x2123) (x1845 x2725) (x301 x2725))))
(assert (= (x1769 x629) (ite (= x629 x2367) x2894 (x2255 x629))))
(assert (= (x2328 x1946) (ite (and x2926 x923) (x1952 x1946) (ite (and (not x602) x1236) (x595 x1946) (x1546 x1946)))))
(assert (= (x2204 x370) (ite (= x370 x424) x2700 (x2997 x370))))
(assert (= (x1314 x2594) (ite (= 128 x2594) x1725 (x33 x2594))))
(assert (x107 x2975))
(assert (= (x2259 x2725) (ite (= x2725 x115) x2357 (x1427 x2725))))
(assert (x107 x2749))
(assert (= (x1314 x2217) (ite (= 128 x2217) x1725 (x33 x2217))))
(assert (= (ite (= x499 x1594) x2188 (x2707 x1594)) (x2255 x1594)))
(assert (x107 x1070))
(assert (x107 x2131))
(assert (= (x1314 x1483) (ite (= x1483 128) x1725 (x33 x1483))))
(assert (= (ite (and x2759 x682) (x2795 x2717) (x2138 x2717)) (x798 x2717)))
(assert (x107 x2576))
(assert (= (ite (= x2298 x2962) x950 (x1429 x2298)) (x245 x2298)))
(assert (= (ite (= x246 x483) x1037 (x807 x483)) (x2159 x483)))
(assert (x107 x2873))
(assert (= (x1325 x67) (ite (= x1638 x67) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x67))))
(assert (x107 x496))
(assert (= (x2172 x294) (ite (= x294 x2709) x2925 (x1370 x294))))
(assert (= (x798 x1780) (ite (and x682 x2759) (x2795 x1780) (x2138 x1780))))
(assert (= (ite (and x1979 (not x94)) (x396 x2594) (x87 x2594)) (x1782 x2594)))
(assert (= (x1902 x455) (ite (= x455 x2127) x3034 (x2328 x455))))
(assert (= (x2783 x267) (ite (= x267 160) x190 (x1314 x267))))
(assert (= (x396 x1387) (ite (and x3 (not x2376)) (x651 x1387) (ite (and x1264 (not x150)) (x1769 x1387) (ite (and (not x601) x282) (x2255 x1387) (ite (and x1733 (not x1290)) (x2707 x1387) (x326 x1387)))))))
(assert (= (x2159 x1780) (ite (= x246 x1780) x1037 (x807 x1780))))
(assert (x405 x1125))
(assert (=> (< (- x223 1) 10000) (= (x348 x223) (x1592 x223))))
(assert (= (ite (= x2106 160) x190 (x1314 x2106)) (x2783 x2106)))
(assert (= (ite (= x685 x1261) x2738 (x2950 x685)) (x1226 x685)))
(assert (= (x1845 x780) (ite (and x1892 x896 (not x2097)) (x2539 x780) (x2300 x780))))
(assert (x107 x2725))
(assert (= x427 (=> (and (= (x301 x1972) x1722) (= (not (> x1722 1)) x2197)) (and x2197 (=> (= x1661 x337) x322)))))
(assert (= x1145 (or x260 (and (not x2323) x1900))))
(assert (x107 x1560))
(assert (= (x939 x780) (ite (= x780 x2576) x1279 (x1888 x780))))
(assert (= (ite (= x1516 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1516)) (x104 x1516)))
(assert (= (x225 x1483) (ite (= x1483 x796) x2187 (x801 x1483))))
(assert (= (x2328 x1882) (ite (and x2926 x923) (x1952 x1882) (ite (and x1236 (not x602)) (x595 x1882) (x1546 x1882)))))
(assert (= (ite (= x2709 x1136) x2925 (x1370 x1136)) (x2172 x1136)))
(assert (= x1949 (=> (and (= x443 x2679) (= (not (> x2357 1)) x1825) (= x1250 x1606) (= (+ x1606 x443) x1510) (= x579 (x2782 x424)) (< (+ x1250 x2679) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1404 (x864 (+ 32 x424))) (< 0 x579)) (and x1825 (=> (and (= x1755 x466) (= x2881 x1766) (= x1821 x3045)) x1205)))))
(assert (= (ite (and x29 (not x1970)) (x63 x86) (x692 x86)) (x1044 x86)))
(assert (= (x1494 (- x2817 x2555)) 0))
(assert (= (ite (= x2406 x824) x1666 (x902 x2406)) (x801 x2406)))
(assert (= (x1317 x2127) (ite (= x2127 x2359) x2277 (x3037 x2127))))
(assert (x107 x1664))
(assert (= (x1314 x975) (ite (= x975 128) x1725 (x33 x975))))
(assert (= (ite (and x1697 x1145) (x939 x455) (x1686 x455)) (x2993 x455)))
(assert (= (x1317 x1946) (ite (= x2359 x1946) x2277 (x3037 x1946))))
(assert (= (x1996 x483) (ite (= x483 x1547) x1463 (x1215 x483))))
(assert (= (ite (= x2635 x2710) x1168 (x2980 x2710)) (x1265 x2710)))
(assert (= (ite (= x2635 x97) x1168 (x2980 x97)) (x1265 x97)))
(assert (= (ite (and x2123 (not x208)) (x1845 x1732) (x301 x1732)) (x1777 x1732)))
(assert (= (x104 x3011) (ite (= x3011 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x3011))))
(assert (= (ite (= x2168 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2168)) (x2931 x2168)))
(assert (= (x2167 x874) (ite (and (not x566) x2422 x2821) (x2189 x874) (x168 x874))))
(assert (= (x2764 x1706) (ite (= x3032 x1706) x573 (x890 x1706))))
(assert (= (x1314 x874) (ite (= 128 x874) x1725 (x33 x874))))
(assert (= (x1952 x436) (ite (= x436 x780) x555 (x2526 x436))))
(assert (= (x2328 x1041) (ite (and x2926 x923) (x1952 x1041) (ite (and x1236 (not x602)) (x595 x1041) (x1546 x1041)))))
(assert (= (x2950 x1642) (ite (= x1642 x350) x1558 (x12 x1642))))
(assert (= (x2167 x2817) (ite (and (not x566) x2422 x2821) (x2189 x2817) (x168 x2817))))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x1387) (x1059 x1387)) (ite (and x135 x2374) (x205 x1387) (ite (and x2850 x3004) (x1777 x1387) (x2338 x1387)))) (x2997 x1387)))
(assert (= (ite (= x2107 x294) x315 (x533 x294)) (x807 x294)))
(assert (= (ite (= x49 x1583) x1235 (x1450 x49)) (x1539 x49)))
(assert (= (x805 x2597) (ite (= x2597 x501) x3030 (x1531 x2597))))
(assert (= (x595 x975) (ite (= x159 x975) 96 (x1952 x975))))
(assert (= (x2167 x1524) (ite (and (not x566) x2422 x2821) (x2189 x1524) (x168 x1524))))
(assert (= (ite (= x1909 x420) x952 (x1769 x1909)) (x651 x1909)))
(assert (= (ite (and (not x2299) x2775) (x795 x2552) (x1613 x2552)) (x2338 x2552)))
(assert (x107 x2906))
(assert (= (ite (= x1809 x97) x50 (x2159 x97)) (x1903 x97)))
(assert (= (x939 x1642) (ite (= x2576 x1642) x1279 (x1888 x1642))))
(assert (x107 x2239))
(assert (x107 x1465))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x2298) (x1059 x2298)) (ite (and x2374 x135) (x205 x2298) (ite (and x2850 x3004) (x1777 x2298) (x2338 x2298)))) (x2997 x2298)))
(assert (= (x1777 x86) (ite (and (not x208) x2123) (x1845 x86) (x301 x86))))
(assert (= (ite (= x267 192) x2714 (x2783 x267)) (x302 x267)))
(assert (= (x1782 x2725) (ite (and x1979 (not x94)) (x396 x2725) (x87 x2725))))
(assert (= (ite (= x2869 128) x1725 (x33 x2869)) (x1314 x2869)))
(assert (x2478 x2559))
(assert (x107 x139))
(assert (= (x1539 x2552) (ite (= x2552 x1583) x1235 (x1450 x2552))))
(assert (x107 x2889))
(assert (= (x2063 x293) (ite (= x1348 x293) x542 (x2394 x293))))
(assert (x107 x2214))
(assert (x107 x1175))
(assert (= 0 (x1494 (- x2847 x2555))))
(assert (= (ite (= x1242 x424) x2639 (x225 x424)) (x1810 x424)))
(assert (= (x805 x2725) (ite (= x501 x2725) x3030 (x1531 x2725))))
(assert (x107 x2007))
(assert (= (x1181 x1139) (ite (= x43 x1139) x1346 (x2998 x1139))))
(assert (= (and x1474 x645) x648))
(assert (= (x2783 x789) (ite (= 160 x789) x190 (x1314 x789))))
(assert (= (x1777 x294) (ite (and (not x208) x2123) (x1845 x294) (x301 x294))))
(assert (= (ite (and x2851 x1335) (x3018 x2168) (ite (and (not x3047) x1301) (x1317 x2168) (x2805 x2168))) (x915 x2168)))
(assert (= 0 (x1494 (- x2217 x2555))))
(assert (x107 x2752))
(assert (x107 x1931))
(assert (= (x918 x2817) (ite (= x2817 x1453) x555 (x2602 x2817))))
(assert (= (x1592 (x2600 x1495)) x1495))
(assert (= (ite (= x436 160) x190 (x1314 x436)) (x2783 x436)))
(assert (= (x805 x1136) (ite (= x1136 x501) x3030 (x1531 x1136))))
(assert (= (ite (= x467 x2817) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2817)) (x104 x2817)))
(assert (= (x807 x455) (ite (= x455 x2107) x315 (x533 x455))))
(assert (x107 x877))
(assert (x107 x1009))
(assert (= (ite (= x655 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x655)) (x2707 x655)))
(assert (x107 x1015))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x629) (x1059 x629)) (ite (and x2374 x135) (x205 x629) (ite (and x2850 x3004) (x1777 x629) (x2338 x629)))) (x2997 x629)))
(assert (= (ite (= x2129 x483) x2451 (x1226 x483)) (x657 x483)))
(assert (= (x2997 x294) (ite x1752 (ite (and (not x2913) x1127) (x205 x294) (x1059 x294)) (ite (and x2374 x135) (x205 x294) (ite (and x3004 x2850) (x1777 x294) (x2338 x294))))))
(assert (x107 x2087))
(assert (= x1027 true))
(assert (x107 x1100))
(assert (= (ite (= x824 x293) x1666 (x902 x293)) (x801 x293)))
(assert (= (ite (= x2425 x966) x859 (x103 x966)) (x1819 x966)))
(assert (= (x1226 x2725) (ite (= x2725 x1261) x2738 (x2950 x2725))))
(assert (= (ite (= x3023 x1972) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1972)) (x2931 x1972)))
(assert (x107 x2420))
(assert (x107 x3011))
(assert (x107 x2699))
(assert (= (x2204 x1642) (ite (= x424 x1642) x2700 (x2997 x1642))))
(assert (x107 x899))
(assert (= (x798 x655) (ite (and x2759 x682) (x2795 x655) (x2138 x655))))
(assert (= 0 (x33 x685)))
(assert (= (x2018 x293) (ite (and (not x2476) x1866) (x2232 x293) (x1379 x293))))
(assert (= (x33 x2387) 0))
(assert (= (ite (= x2359 x2168) x2277 (x3037 x2168)) (x1317 x2168)))
(assert (= (x805 x2406) (ite (= x501 x2406) x3030 (x1531 x2406))))
(assert (= (ite (= x2048 x2709) x2925 (x1370 x2048)) (x2172 x2048)))
(assert (x107 x2516))
(assert (= (x33 x866) 0))
(assert (= (x2159 x294) (ite (= x294 x246) x1037 (x807 x294))))
(assert (= (x2255 x961) (ite (= x961 x499) x2188 (x2707 x961))))
(assert (= (x2995 x1882) (ite (= x1882 224) x770 (x302 x1882))))
(assert (= (ite (= x1261 x1706) x2738 (x2950 x1706)) (x1226 x1706)))
(assert (= (ite (and x1979 (not x94)) (x396 x1041) (x87 x1041)) (x1782 x1041)))
(assert (= (x915 x655) (ite (and x2851 x1335) (x3018 x655) (ite (and (not x3047) x1301) (x1317 x655) (x2805 x655)))))
(assert (= (x1328 x629) (ite (= x1745 x629) x585 (x2580 x629))))
(assert (x107 x766))
(assert (x107 x1727))
(assert (x107 x2592))
(assert (x107 x3044))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x2513) (x1059 x2513)) (ite (and x2374 x135) (x205 x2513) (ite (and x3004 x2850) (x1777 x2513) (x2338 x2513)))) (x2997 x2513)))
(assert (= (x2159 x2168) (ite (= x2168 x246) x1037 (x807 x2168))))
(assert (= (x1314 x2725) (ite (= x2725 128) x1725 (x33 x2725))))
(assert (= (ite (and x682 x2759) (x2795 x1484) (x2138 x1484)) (x798 x1484)))
(assert (= (ite (= x1516 x501) x3030 (x1531 x1516)) (x805 x1516)))
(assert (= (x2159 x49) (ite (= x246 x49) x1037 (x807 x49))))
(assert (= (x2204 x1267) (ite (= x1267 x424) x2700 (x2997 x1267))))
(assert (x1932 x2640 x1676))
(assert (= (x33 x293) 0))
(assert (= (- (/ x53 2) (uninterp_frac x53 2)) (x2059 x53 1)))
(assert (= (x2255 x267) (ite (= x499 x267) x2188 (x2707 x267))))
(assert (x107 x2942))
(assert (= (x33 160) (x1314 160)))
(assert (x107 x2305))
(assert (x107 x410))
(assert (= (ite (= x796 x267) x2187 (x801 x267)) (x225 x267)))
(assert (= (ite (and x2821 x2422 (not x566)) (x2189 x2168) (x168 x2168)) (x2167 x2168)))
(assert (= (ite (= x846 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x846)) (x2707 x846)))
(assert (= (ite (= x115 x780) x2357 (x1427 x780)) (x2259 x780)))
(assert (= (x1044 x2869) (ite (and x29 (not x1970)) (x63 x2869) (x692 x2869))))
(assert (= (ite (= x246 x2298) x1037 (x807 x2298)) (x2159 x2298)))
(assert (= (ite (= x2594 x499) x2188 (x2707 x2594)) (x2255 x2594)))
(assert (x107 x3050))
(assert (x107 x2318))
(assert (= (ite (= x3011 x2635) x1168 (x2980 x3011)) (x1265 x3011)))
(assert (x107 x1079))
(assert (= (x805 x182) (ite (= x182 x501) x3030 (x1531 x182))))
(assert (= (x1340 x267) (ite (= x2454 x267) x823 (x245 x267))))
(assert (= (x1777 x2217) (ite (and (not x208) x2123) (x1845 x2217) (x301 x2217))))
(assert (x107 x1600))
(assert (= (x2426 x293) (ite (and x2105 x29) (x593 x293) (x1044 x293))))
(assert (= (x1952 x294) (ite (= x294 x780) x555 (x2526 x294))))
(assert (= (ite (= x2709 x1041) x2925 (x1370 x1041)) (x2172 x1041)))
(assert (= (x225 x182) (ite (= x182 x796) x2187 (x801 x182))))
(assert (= (ite (= x1453 x2962) x950 (x1429 x1453)) (x245 x1453)))
(assert (= (x1810 x261) (ite (= x1242 x261) x2639 (x225 x261))))
(assert (x2478 x2151))
(assert (= (x2167 x1732) (ite (and x2821 x2422 (not x566)) (x2189 x1732) (x168 x1732))))
(assert (= (ite (= x267 x159) 96 (x1952 x267)) (x595 x267)))
(assert (= (ite (= x1544 224) x770 (x302 x1544)) (x2995 x1544)))
(assert (= (x915 x846) (ite (and x1335 x2851) (x3018 x846) (ite (and x1301 (not x3047)) (x1317 x846) (x2805 x846)))))
(assert (= (ite (= x2425 x364) x859 (x103 x364)) (x1819 x364)))
(assert (x107 x2250))
(assert (= (x798 x2309) (ite (and x682 x2759) (x2795 x2309) (x2138 x2309))))
(assert (= (x225 x261) (ite (= x261 x796) x2187 (x801 x261))))
(assert (= (ite (= x420 x49) x952 (x1769 x49)) (x651 x49)))
(assert (= (ite (= x1732 x2709) x2925 (x1370 x1732)) (x2172 x1732)))
(assert (x107 x214))
(assert (x107 x2881))
(assert (= (ite (= x2477 x1583) x1235 (x1450 x2477)) (x1539 x2477)))
(assert (x107 x2035))
(assert (= (x1952 x1706) (ite (= x1706 x780) x555 (x2526 x1706))))
(assert (= (ite (and x1335 x2851) (x3018 x1946) (ite (and x1301 (not x3047)) (x1317 x1946) (x2805 x1946))) (x915 x1946)))
(assert (= (and x2279 (not x2506)) x2014))
(assert (= (ite (= x2642 x2594) x397 (x1902 x2594)) (x2036 x2594)))
(assert (= (ite (= x874 x1809) x50 (x2159 x874)) (x1903 x874)))
(assert (x107 x444))
(assert (= (x2539 x3011) (ite (= x3011 x517) x1914 (x2939 x3011))))
(assert (x107 x2760))
(assert (= (x2993 x483) (ite (and x1145 x1697) (x939 x483) (x1686 x483))))
(assert (= (and x2743 x1302) x2020))
(assert (= 0 (x1494 (- x49 x2555))))
(assert (x107 x1840))
(assert (= (ite (= x2477 x2636) x1673 (x283 x2477)) (x2245 x2477)))
(assert (= (ite (and x1866 (not x2476)) (x2232 x2552) (x1379 x2552)) (x2018 x2552)))
(assert (= (x348 106291421124418496933435958710909755174326102057086830187839624775778309242880) (x1592 106291421124418496933435958710909755174326102057086830187839624775778309242880)))
(assert (= (x1044 x2546) (ite (and x29 (not x1970)) (x63 x2546) (x692 x2546))))
(assert (x107 x1849))
(assert (= (ite (and x1979 (not x94)) (x396 x2406) (x87 x2406)) (x1782 x2406)))
(assert (= (ite (= x483 x420) x952 (x1769 x483)) (x651 x483)))
(assert (x107 x1069))
(assert (= (ite (= x115 x846) x2357 (x1427 x846)) (x2259 x846)))
(assert (= (x33 x2106) 0))
(assert (x107 x2357))
(assert (x107 x1618))
(assert (= (x1181 x2971) (ite (= x2971 x43) x1346 (x2998 x2971))))
(assert (x107 x336))
(assert (= (x1782 x629) (ite (and (not x94) x1979) (x396 x629) (x87 x629))))
(assert (= (x1782 x488) (ite (and x1979 (not x94)) (x396 x488) (x87 x488))))
(assert (= (ite (and x1697 x1145) (x939 x1946) (x1686 x1946)) (x2993 x1946)))
(assert (x107 x1483))
(assert (x1932 x2825 x1677))
(assert (= (x918 x685) (ite (= x685 x1453) x555 (x2602 x685))))
(assert (= (x902 x2406) (ite (= x227 x2406) x22 (x56 x2406))))
(assert (x2528 x1051 x1062))
(assert (= (ite (= x261 x517) x1914 (x2939 x261)) (x2539 x261)))
(assert (= (x1044 x293) (ite (and x29 (not x1970)) (x63 x293) (x692 x293))))
(assert (= (ite (= x364 x424) x2357 (x2997 x364)) (x1958 x364)))
(assert (= (ite (= x350 x2406) x1558 (x12 x2406)) (x2950 x2406)))
(assert (= 0 (x1494 (- x1453 x2555))))
(assert (x107 x838))
(assert (= (x1325 x1348) (ite (= x1348 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1348))))
(assert (= (x890 x2477) (ite (= x2085 x2477) x1910 (x970 x2477))))
(assert (= (ite (= x1882 x2359) x2277 (x3037 x1882)) (x1317 x1882)))
(assert (= (x2036 x943) (ite (= x943 x2642) x397 (x1902 x943))))
(assert (= (x396 x2406) (ite (and x3 (not x2376)) (x651 x2406) (ite (and (not x150) x1264) (x1769 x2406) (ite (and (not x601) x282) (x2255 x2406) (ite (and (not x1290) x1733) (x2707 x2406) (x326 x2406)))))))
(assert (= (and x2199 x2608) x2895))
(assert (= (ite (= x1544 x2107) x315 (x533 x1544)) (x807 x1544)))
(assert (= (x807 x115) (ite (= x2107 x115) x315 (x533 x115))))
(assert (= (ite (and x1979 (not x94)) (x396 x433) (x87 x433)) (x1782 x433)))
(assert (= (x1314 x1803) (ite (= x1803 128) x1725 (x33 x1803))))
(assert (x107 x569))
(assert (= (x2720 x1136) (ite (= x972 x1136) x1063 (x1903 x1136))))
(assert (x107 x2428))
(assert (= (x2328 x2597) (ite (and x2926 x923) (x1952 x2597) (ite (and x1236 (not x602)) (x595 x2597) (x1546 x2597)))))
(assert (= (x1317 x2817) (ite (= x2817 x2359) x2277 (x3037 x2817))))
(assert (x107 x630))
(assert (= (- (/ x80 2) (uninterp_frac x80 2)) (x2059 x80 1)))
(assert (= x682 x724))
(assert (= (x2018 x655) (ite (and x1866 (not x2476)) (x2232 x655) (x1379 x655))))
(assert (x107 x197))
(assert (x107 x453))
(assert (= (or x81 (and x2895 (not x2241)) (and x2199 (not x2608))) x2065))
(assert (= (x396 x685) (ite (and (not x2376) x3) (x651 x685) (ite (and (not x150) x1264) (x1769 x685) (ite (and (not x601) x282) (x2255 x685) (ite (and x1733 (not x1290)) (x2707 x685) (x326 x685)))))))
(assert (= (ite (= x2869 x2642) x397 (x1902 x2869)) (x2036 x2869)))
(assert (= (x95 x1780) (ite (= x1661 x1780) x2246 (x1777 x1780))))
(assert (= (x2426 x1594) (ite (and x29 x2105) (x593 x1594) (x1044 x1594))))
(assert (= (ite (= x483 x3051) x9 (x2245 x483)) (x928 x483)))
(assert (x107 x1039))
(assert (x107 x2541))
(assert (x107 x2145))
(assert (x107 x1765))
(assert (= (x1903 x1516) (ite (= x1516 x1809) x50 (x2159 x1516))))
(assert (x107 x1745))
(assert (= (ite (= x1041 x115) x2357 (x1427 x1041)) (x2259 x1041)))
(assert (= (x902 x1267) (ite (= x227 x1267) x22 (x56 x1267))))
(assert (= (x2764 x629) (ite (= x3032 x629) x573 (x890 x629))))
(assert (x107 x2450))
(assert (= (x651 x1544) (ite (= x420 x1544) x952 (x1769 x1544))))
(assert (= (ite (= x501 x97) x3030 (x1531 x97)) (x805 x97)))
(assert (= (ite (= x2128 x629) x1897 (x657 x629)) (x125 x629)))
(assert (= (ite (= x2129 x1041) x2451 (x1226 x1041)) (x657 x1041)))
(assert (= (x225 x1732) (ite (= x796 x1732) x2187 (x801 x1732))))
(assert (x107 x156))
(assert (= (ite (= x2454 x455) x823 (x245 x455)) (x1340 x455)))
(assert (= (x2995 x1695) (ite (= x1695 224) x770 (x302 x1695))))
(assert (= (ite (= x1807 x2298) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2298)) (x2707 x2298)))
(assert (= (=> (and (= x520 1) (= (x3026 x520 x2181) x2620) (= x2200 (= (x2884 x1557 x2620) 0)) (= 1 x403) (= x1557 (x3026 x403 x1669)) (= x1669 (ite (< x363 78) 1 0)) (= (ite (< x363 32) 1 0) x2181)) (and (=> (and (not x2200) (= x742 (x2877 10 x363))) x1826) (=> x2200 x883))) x1989))
(assert (x107 x2467))
(assert (= (ite (= x2552 x2635) x1168 (x2980 x2552)) (x1265 x2552)))
(assert (= (x1592 (x2600 x351)) x351))
(assert (x107 x2187))
(assert (x107 x2384))
(assert (x107 x903))
(assert (x107 x1869))
(assert (= (x609 x867) (ite (= x2150 x867) 96 (x918 x867))))
(assert (= (ite (= x2642 x2553) x397 (x1902 x2553)) (x2036 x2553)))
(assert (= (ite (and x3 (not x2376)) (x651 x2477) (ite (and (not x150) x1264) (x1769 x2477) (ite (and (not x601) x282) (x2255 x2477) (ite (and (not x1290) x1733) (x2707 x2477) (x326 x2477))))) (x396 x2477)))
(assert (= (ite (= 192 x293) x2714 (x2783 x293)) (x302 x293)))
(assert (= (x2539 x1267) (ite (= x517 x1267) x1914 (x2939 x1267))))
(assert (= (ite (= x2107 x267) x315 (x533 x267)) (x807 x267)))
(assert (= (x2707 x2217) (ite (= x1807 x2217) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2217))))
(assert (= (x205 x2710) (ite (and x724 (not x2377)) (x798 x2710) (x346 x2710))))
(assert (= (ite (and x1866 (not x2476)) (x2232 x913) (x1379 x913)) (x2018 x913)))
(assert (= (x2783 x914) (ite (= x914 160) x190 (x1314 x914))))
(assert (= (ite (= 192 x2710) x2714 (x2783 x2710)) (x302 x2710)))
(assert (= (ite (= x2709 x1695) x2925 (x1370 x1695)) (x2172 x1695)))
(assert (= (x95 x2552) (ite (= x1661 x2552) x2246 (x1777 x2552))))
(assert (= (x798 x1387) (ite (and x682 x2759) (x2795 x1387) (x2138 x1387))))
(assert (= (x915 x1544) (ite (and x2851 x1335) (x3018 x1544) (ite (and (not x3047) x1301) (x1317 x1544) (x2805 x1544)))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2600 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= x191 (or (and x1671 x719) x2585)))
(assert (x107 x408))
(assert (= (ite (= x2876 x2367) x2894 (x2255 x2876)) (x1769 x2876)))
(assert (= (ite (and (not x2377) x724) (x798 x1197) (x346 x1197)) (x205 x1197)))
(assert (= (ite (= x1267 x2061) x515 (x224 x1267)) (x283 x1267)))
(assert (= (=> (and (= x2612 (x3026 1461501637330902918203684832716283019655932542975 x253)) (= (x864 (+ 64 x364)) x2710) (= (x1762 x1909) x253) (= x2632 (> x950 3)) (= (x864 (+ x59 64)) x2453)) (and (=> (and (= x2453 x2107) (not x2632) (= x1102 x2710) (= 3 x2481)) x1047) (=> x2632 x761))) x1247))
(assert (= (x225 x1267) (ite (= x1267 x796) x2187 (x801 x1267))))
(assert (= (ite (= x1083 x943) x367 (x2880 x943)) (x2795 x943)))
(assert (= (ite (= x1873 x816) x696 (x2011 x1873)) (x224 x1873)))
(assert (= (x2189 x2477) (ite (= x2477 x1615) x2726 (x2268 x2477))))
(assert (= (ite (and x2655 x817) (x1534 x49) (ite (and (not x1834) x1941) (x887 x49) (x151 x49))) (x423 x49)))
(assert (= (ite (= x2309 x1261) x2738 (x2950 x2309)) (x1226 x2309)))
(assert (= (x1902 x685) (ite (= x685 x2127) x3034 (x2328 x685))))
(assert (= (ite (= x685 224) x770 (x302 x685)) (x2995 x685)))
(assert (= (ite (= x867 x2127) x3034 (x2328 x867)) (x1902 x867)))
(assert (= (ite (= x2217 x424) x2357 (x2997 x2217)) (x1958 x2217)))
(assert (= (ite (= x1041 x2425) x859 (x103 x1041)) (x1819 x1041)))
(assert (= (ite (= x780 x350) x1558 (x12 x780)) (x2950 x780)))
(assert (= (x2328 x722) (ite (and x2926 x923) (x1952 x722) (ite (and x1236 (not x602)) (x595 x722) (x1546 x722)))))
(assert (x107 x1553))
(assert (= x2732 (=> (and (= x505 x951) (= x851 x1330) (= x258 x424) (= x2292 (not (> x1904 x62))) (= x2081 x115) (= x2624 x1987) x2292) x672)))
(assert (= (ite (= x2817 x2085) x1910 (x970 x2817)) (x890 x2817)))
(assert (= (ite (= x2636 x1267) x1673 (x283 x1267)) (x2245 x1267)))
(assert (= (ite (= x2168 160) x190 (x1314 x2168)) (x2783 x2168)))
(assert (= (ite (and x1697 x1145) (x939 x2553) (x1686 x2553)) (x2993 x2553)))
(assert (= (x2426 x294) (ite (and x29 x2105) (x593 x294) (x1044 x294))))
(assert (= (x939 x3011) (ite (= x3011 x2576) x1279 (x1888 x3011))))
(assert (x107 x1098))
(assert (x107 x364))
(assert (= (x2167 x1642) (ite (and x2422 (not x566) x2821) (x2189 x1642) (x168 x1642))))
(assert (= (ite (= x2150 128) 96 (x918 128)) (x609 128)))
(assert (= (or x41 (and x1937 x324) (and x2062 x1447) (and x566 x2821)) x842))
(assert (= (ite (= x455 x59) x1209 (x1340 x455)) (x1762 x455)))
(assert (= (ite (= x2709 x1484) x2925 (x1370 x1484)) (x2172 x1484)))
(assert (= (x2328 x2869) (ite (and x923 x2926) (x1952 x2869) (ite (and (not x602) x1236) (x595 x2869) (x1546 x2869)))))
(assert (x107 x1036))
(assert (= (x125 x1732) (ite (= x2128 x1732) x1897 (x657 x1732))))
(assert (= (x3018 x2553) (ite (= x3008 x2553) x1217 (x340 x2553))))
(assert (= (ite (= x436 224) x770 (x302 x436)) (x2995 x436)))
(assert (= (x2931 x433) (ite (= x433 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x433))))
(assert (x107 x299))
(assert (= (x2539 x1689) (ite (= x1689 x517) x1914 (x2939 x1689))))
(assert (= (ite (= x1873 x2635) x1168 (x2980 x1873)) (x1265 x1873)))
(assert (= (ite (= x1083 x2710) x367 (x2880 x2710)) (x2795 x2710)))
(assert (x107 x2945))
(assert (= (x1762 x2477) (ite (= x59 x2477) x1209 (x1340 x2477))))
(assert (= (x887 x1197) (ite (= x1231 x1197) x775 (x44 x1197))))
(assert (x107 x1521))
(assert (= (ite (= 128 x2513) x1725 (x33 x2513)) (x1314 x2513)))
(assert (= (x1325 x49) (ite (= x1638 x49) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x49))))
(assert (x107 x426))
(assert (x107 x49))
(assert (= (x1325 x2546) (ite (= x1638 x2546) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2546))))
(assert (= (x595 x2387) (ite (= x159 x2387) 96 (x1952 x2387))))
(assert (= x1891 (and x334 x2590)))
(assert (= (x1845 x1946) (ite (and x896 x1892 (not x2097)) (x2539 x1946) (x2300 x1946))))
(assert (x107 x527))
(assert (= (ite (= x961 x1453) x555 (x2602 x961)) (x918 x961)))
(assert (= (x2036 x364) (ite (= x2642 x364) x397 (x1902 x364))))
(assert (= (x970 x2477) (ite (= x1846 x2477) x500 (x559 x2477))))
(assert (x107 x718))
(assert (= (x2328 x488) (ite (and x923 x2926) (x1952 x488) (ite (and x1236 (not x602)) (x595 x488) (x1546 x488)))))
(assert (= (ite (= x2048 x2150) 96 (x918 x2048)) (x609 x2048)))
(assert (= (x104 x1732) (ite (= x1732 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1732))))
(assert (= (ite (and x2775 (not x2299)) (x795 x67) (x1613 x67)) (x2338 x67)))
(assert (= 0 (x1494 (- x874 x2555))))
(assert (= (x1340 x1267) (ite (= x2454 x1267) x823 (x245 x1267))))
(assert (x107 x1099))
(assert (x107 x1147))
(assert (= (x1317 x1197) (ite (= x1197 x2359) x2277 (x3037 x1197))))
(assert (= (x805 x874) (ite (= x501 x874) x3030 (x1531 x874))))
(assert (= (x3018 x2847) (ite (= x2847 x3008) x1217 (x340 x2847))))
(assert (= (x95 x436) (ite (= x436 x1661) x2246 (x1777 x436))))
(assert (= (and x210 x1007) x2226))
(assert (= (=> (and (= x2129 (x864 (+ 64 x350))) (= x969 (< 64 x1558)) (= x2451 (x1226 x961)) (= (x864 (+ 64 x1387)) x961)) (and (=> (and (= x616 64) (not x969)) x613) (=> x969 x1202))) x2758))
(assert (= (x2539 x685) (ite (= x685 x517) x1914 (x2939 x685))))
(assert (= (x1592 (x2600 x2317)) x2317))
(assert (= (ite (= x2546 x2367) x2894 (x2255 x2546)) (x1769 x2546)))
(assert (x107 x53))
(assert (= (ite (= x1318 x867) x1964 (x715 x867)) (x1534 x867)))
(assert (= (ite (= x1968 x1615) x2726 (x2268 x1968)) (x2189 x1968)))
(assert (x107 x1420))
(assert (= (x2018 x483) (ite (and (not x2476) x1866) (x2232 x483) (x1379 x483))))
(assert (= (x2997 x2594) (ite x1752 (ite (and x1127 (not x2913)) (x205 x2594) (x1059 x2594)) (ite (and x2374 x135) (x205 x2594) (ite (and x3004 x2850) (x1777 x2594) (x2338 x2594))))))
(assert (= (ite (= x2127 x822) x3034 (x2328 x822)) (x1902 x822)))
(assert (= (x2426 x2594) (ite (and x2105 x29) (x593 x2594) (x1044 x2594))))
(assert (= (ite (= x2217 x2962) x950 (x1429 x2217)) (x245 x2217)))
(assert (x107 x16))
(assert (= (ite (= x1821 x685) x3034 (x1728 x685)) (x1450 x685)))
(assert (= (x3018 x1946) (ite (= x1946 x3008) x1217 (x340 x1946))))
(assert (= (x1819 x1873) (ite (= x2425 x1873) x859 (x103 x1873))))
(assert (x107 x2989))
(assert (= (x915 x2048) (ite (and x1335 x2851) (x3018 x2048) (ite (and (not x3047) x1301) (x1317 x2048) (x2805 x2048)))))
(assert (= (x1328 x1594) (ite (= x1745 x1594) x585 (x2580 x1594))))
(assert (x107 x2983))
(assert (x107 x854))
(assert (x405 x2792))
(assert (= (ite (and (not x2299) x2775) (x795 x1689) (x1613 x1689)) (x2338 x1689)))
(assert (x107 x525))
(assert (x107 x2365))
(assert (= (x2245 x1873) (ite (= x1873 x2636) x1673 (x283 x1873))))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x961) (x1059 x961)) (ite (and x135 x2374) (x205 x961) (ite (and x2850 x3004) (x1777 x961) (x2338 x961)))) (x2997 x961)))
(assert (x107 x846))
(assert (= (x353 x483) (ite (= x1742 x483) x848 (x1767 x483))))
(assert (= (ite (and (not x2299) x2775) (x795 x267) (x1613 x267)) (x2338 x267)))
(assert (x107 x2149))
(assert (= (x205 x857) (ite (and (not x2377) x724) (x798 x857) (x346 x857))))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x267) (x1059 x267)) (ite (and x135 x2374) (x205 x267) (ite (and x3004 x2850) (x1777 x267) (x2338 x267)))) (x2997 x267)))
(assert (x107 x1933))
(assert (x107 x2917))
(assert (x107 x102))
(assert (= (x1090 x2513) (ite (= x677 x2513) x2612 (x1762 x2513))))
(assert (= (x1902 x2552) (ite (= x2552 x2127) x3034 (x2328 x2552))))
(assert (= (x1762 x67) (ite (= x59 x67) x1209 (x1340 x67))))
(assert (= (ite (= x2751 x1453) x555 (x2602 x2751)) (x918 x2751)))
(assert (= (ite (= x3011 x1231) x775 (x44 x3011)) (x887 x3011)))
(assert (= (x2795 x1780) (ite (= x1083 x1780) x367 (x2880 x1780))))
(assert (= (x2600 (x1408 x1554 1)) (+ 1 (x2600 x1554))))
(assert (x107 x1156))
(assert (= (x1903 x966) (ite (= x966 x1809) x50 (x2159 x966))))
(assert (= (x2858 x1386) (ite (and (not x2008) x2885) (x1390 x1386) (x113 x1386))))
(assert (= (ite (= x1083 x1453) x367 (x2880 x1453)) (x2795 x1453)))
(assert (x107 x2868))
(assert (= (ite (= x67 x766) x1423 (x2397 x67)) (x2073 x67)))
(assert (x107 x48))
(assert (x107 x356))
(assert (= (ite (= 192 x97) x2714 (x2783 x97)) (x302 x97)))
(assert (= (x651 x2477) (ite (= x420 x2477) x952 (x1769 x2477))))
(assert (= (x1958 x455) (ite (= x455 x424) x2357 (x2997 x455))))
(assert (= (x2036 x1946) (ite (= x1946 x2642) x397 (x1902 x1946))))
(assert (= (x104 x1946) (ite (= x1946 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1946))))
(assert (= (ite (and (not x2376) x3) (x651 x2217) (ite (and (not x150) x1264) (x1769 x2217) (ite (and (not x601) x282) (x2255 x2217) (ite (and x1733 (not x1290)) (x2707 x2217) (x326 x2217))))) (x396 x2217)))
(assert (x107 x468))
(assert (= (x2720 x182) (ite (= x972 x182) x1063 (x1903 x182))))
(assert (x107 x1469))
(assert (= (x423 x1642) (ite (and x2655 x817) (x1534 x1642) (ite (and (not x1834) x1941) (x887 x1642) (x151 x1642)))))
(assert (= (x1494 (- x370 x2555)) 0))
(assert (x405 x1632))
(assert (= (ite (and x2926 x923) (x1952 x293) (ite (and (not x602) x1236) (x595 x293) (x1546 x293))) (x2328 x293)))
(assert (= (x805 x2387) (ite (= x501 x2387) x3030 (x1531 x2387))))
(assert (= (ite (= x2367 x1909) x2894 (x2255 x1909)) (x1769 x1909)))
(assert (x107 x473))
(assert (= (x2539 x1483) (ite (= x517 x1483) x1914 (x2939 x1483))))
(assert (= (ite (= x501 x436) x3030 (x1531 x436)) (x805 x436)))
(assert (x107 x2424))
(assert (= (x2159 x1732) (ite (= x246 x1732) x1037 (x807 x1732))))
(assert (= (x2539 x874) (ite (= x874 x517) x1914 (x2939 x874))))
(assert (= (x2397 x67) (ite (and x2810 (not x763)) (x2167 x67) (x298 x67))))
(assert (x107 x1756))
(assert (= (ite (and x682 x2759) (x2795 x370) (x2138 x370)) (x798 x370)))
(assert (=> (> (+ 10000 1) x131) (= (x348 x131) (x1592 x131))))
(assert (= (ite (= x1780 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1780)) (x2931 x1780)))
(assert (= (x915 x2597) (ite (and x1335 x2851) (x3018 x2597) (ite (and x1301 (not x3047)) (x1317 x2597) (x2805 x2597)))))
(assert (x107 x2220))
(assert (= (ite (= x2962 x2594) x950 (x1429 x2594)) (x245 x2594)))
(assert (= (x348 2442716437) (x1592 2442716437)))
(assert (= (x2995 x455) (ite (= x455 224) x770 (x302 x455))))
(assert (x107 x1157))
(assert (= (ite (= x1261 x2594) x2738 (x2950 x2594)) (x1226 x2594)))
(assert (x107 x1854))
(assert (= (x2328 x2833) (ite (and x923 x2926) (x1952 x2833) (ite (and x1236 (not x602)) (x595 x2833) (x1546 x2833)))))
(assert (= (x1952 x2847) (ite (= x2847 x780) x555 (x2526 x2847))))
(assert (= (ite (and x817 x2655) (x1534 x455) (ite (and (not x1834) x1941) (x887 x455) (x151 x455))) (x423 x455)))
(assert (x107 x2182))
(assert (x107 x1855))
(assert (= (ite (= x2962 x261) x950 (x1429 x261)) (x245 x261)))
(assert (x107 x2577))
(assert (x107 x72))
(assert (= (ite (and x1145 x1697) (x939 x2576) (x1686 x2576)) (x2993 x2576)))
(assert (= (=> (and (= x257 (x1613 x1689)) (= x2617 (x963 x2635)) (= x2415 (not (< 1 x2882))) (> x2617 0) (= x2675 (x864 (+ x2474 192))) (= x2882 (x1613 x257))) (and x2415 (=> (= x1623 x3023) x441))) x435))
(assert (= (ite (= x2635 x1642) x1168 (x2980 x1642)) (x1265 x1642)))
(assert (x107 x1052))
(assert (= (ite (= x1242 x86) x2639 (x225 x86)) (x1810 x86)))
(assert (= (x970 x49) (ite (= x49 x1846) x500 (x559 x49))))
(assert (= (ite (and x3 (not x2376)) (x651 x433) (ite (and (not x150) x1264) (x1769 x433) (ite (and x282 (not x601)) (x2255 x433) (ite (and (not x1290) x1733) (x2707 x433) (x326 x433))))) (x396 x433)))
(assert (= (ite (= x2546 x115) x2357 (x1427 x2546)) (x2259 x2546)))
(assert (= (ite (= x1348 x483) x542 (x2394 x483)) (x2063 x483)))
(assert (= 0 (x33 x436)))
(assert (= 0 (x1494 (- x436 x2555))))
(assert (= (x2764 x1642) (ite (= x3032 x1642) x573 (x890 x1642))))
(assert (= (x423 x3011) (ite (and x817 x2655) (x1534 x3011) (ite (and (not x1834) x1941) (x887 x3011) (x151 x3011)))))
(assert (= (x1958 x1483) (ite (= x424 x1483) x2357 (x2997 x1483))))
(assert (= (ite (= x424 x1516) x2357 (x2997 x1516)) (x1958 x1516)))
(assert (x107 x2276))
(assert (= (x805 x2594) (ite (= x501 x2594) x3030 (x1531 x2594))))
(assert (= (ite (= x293 x2642) x397 (x1902 x293)) (x2036 x293)))
(assert (= (x205 x655) (ite (and x724 (not x2377)) (x798 x655) (x346 x655))))
(assert (= (x2426 x2869) (ite (and x29 x2105) (x593 x2869) (x1044 x2869))))
(assert (= (ite (= x3032 x780) x573 (x890 x780)) (x2764 x780)))
(assert (x107 x2488))
(assert (= (x805 x294) (ite (= x294 x501) x3030 (x1531 x294))))
(assert (= (ite (= x420 x867) x952 (x1769 x867)) (x651 x867)))
(assert (= (ite (and (not x2299) x2775) (x795 x2309) (x1613 x2309)) (x2338 x2309)))
(assert (= (x205 x867) (ite (and (not x2377) x724) (x798 x867) (x346 x867))))
(assert (= (ite (= x2546 160) x190 (x1314 x2546)) (x2783 x2546)))
(assert (= (x2167 x1706) (ite (and (not x566) x2821 x2422) (x2189 x1706) (x168 x1706))))
(assert (= (x915 x261) (ite (and x2851 x1335) (x3018 x261) (ite (and (not x3047) x1301) (x1317 x261) (x2805 x261)))))
(assert (= (ite (= x1642 x1661) x2246 (x1777 x1642)) (x95 x1642)))
(assert (=> (< (- x1864 1) 10000) (= (x1592 x1864) (x348 x1864))))
(assert (= (x225 x370) (ite (= x370 x796) x2187 (x801 x370))))
(assert (= (x2426 x3011) (ite (and x2105 x29) (x593 x3011) (x1044 x3011))))
(assert (= (x1340 x1780) (ite (= x1780 x2454) x823 (x245 x1780))))
(assert (= (x2950 x1136) (ite (= x1136 x350) x1558 (x12 x1136))))
(assert (= (x95 x685) (ite (= x1661 x685) x2246 (x1777 x685))))
(assert (= 0 (x33 x1041)))
(assert (= (ite (and (not x2933) x1798) (x125 x2477) (ite (and x77 (not x969)) (x657 x2477) (ite (and x2091 (not x1421)) (x1226 x2477) (ite (and (not x2706) x697) (x2950 x2477) (x2504 x2477))))) (x63 x2477)))
(assert (= (ite (and x1892 x896 (not x2097)) (x2539 x436) (x2300 x436)) (x1845 x436)))
(assert (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2931 x3023)))
(assert (x107 x281))
(assert (x107 x418))
(assert (x107 x1577))
(assert (x1932 x3020 x3041))
(assert (x107 x1139))
(assert (= (ite (= x2061 x2546) x515 (x224 x2546)) (x283 x2546)))
(assert (x107 x1151))
(assert (= (ite (= x1732 x2127) x3034 (x2328 x1732)) (x1902 x1732)))
(assert (= (ite (= x517 x1136) x1914 (x2939 x1136)) (x2539 x1136)))
(assert (= (x1958 x966) (ite (= x966 x424) x2357 (x2997 x966))))
(assert (= (x1902 x1244) (ite (= x2127 x1244) x3034 (x2328 x1244))))
(assert (= (x2397 x2546) (ite (and (not x763) x2810) (x2167 x2546) (x298 x2546))))
(assert (= (x2783 x867) (ite (= 160 x867) x190 (x1314 x867))))
(assert (= (ite (= x1642 x824) x1666 (x902 x1642)) (x801 x1642)))
(assert (= (ite (and x1892 x896 (not x2097)) (x2539 x1197) (x2300 x1197)) (x1845 x1197)))
(assert (= (x1226 x1136) (ite (= x1136 x1261) x2738 (x2950 x1136))))
(assert (= (x2159 x433) (ite (= x433 x246) x1037 (x807 x433))))
(assert (x107 x555))
(assert (x405 x363))
(assert (= (ite (= x2962 x488) x950 (x1429 x488)) (x245 x488)))
(assert (x107 x790))
(assert (x107 x2671))
(assert (= (x2426 x2552) (ite (and x2105 x29) (x593 x2552) (x1044 x2552))))
(assert (= (ite (= x2425 x2869) x859 (x103 x2869)) (x1819 x2869)))
(assert (= (x2338 x1267) (ite (and (not x2299) x2775) (x795 x1267) (x1613 x1267))))
(assert (= (ite (= x420 x370) x952 (x1769 x370)) (x651 x370)))
(assert (= (x2795 x2725) (ite (= x1083 x2725) x367 (x2880 x2725))))
(assert (= (x2328 x2406) (ite (and x2926 x923) (x1952 x2406) (ite (and x1236 (not x602)) (x595 x2406) (x1546 x2406)))))
(assert (= (ite (and x2810 (not x763)) (x2167 x3011) (x298 x3011)) (x2397 x3011)))
(assert (= x3027 (=> (and (= x991 (not (< 0 x398))) (= (x864 (+ 64 x1542)) x1002) (= x1440 (x864 (+ 384 x775))) (= x88 (x864 (+ 64 x2289))) (= (x864 (+ x775 224)) x1542) (= x1805 (x864 (+ 64 x88))) (= (x163 (- x843 1)) x398) (= (x864 (+ 64 x1002)) x1711)) (and x991 (=> (= x1440 x2500) x2627)))))
(assert (= (ite (= x1821 x780) x3034 (x1728 x780)) (x1450 x780)))
(assert (= (x2600 (x1592 x953)) x953))
(assert (x107 x368))
(assert (= (ite (= x3023 x2477) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2477)) (x2931 x2477)))
(assert (= (x798 x1483) (ite (and x2759 x682) (x2795 x1483) (x2138 x1483))))
(assert (x107 x1198))
(assert (= (x2997 x2751) (ite x1752 (ite (and x1127 (not x2913)) (x205 x2751) (x1059 x2751)) (ite (and x135 x2374) (x205 x2751) (ite (and x2850 x3004) (x1777 x2751) (x2338 x2751))))))
(assert (= (x1044 x182) (ite (and (not x1970) x29) (x63 x182) (x692 x182))))
(assert (= (x2720 x49) (ite (= x972 x49) x1063 (x1903 x49))))
(assert (x107 x794))
(assert (= (ite (and (not x2019) x2949) (x2993 x1642) (x2001 x1642)) (x1029 x1642)))
(assert (= (x798 x3011) (ite (and x682 x2759) (x2795 x3011) (x2138 x3011))))
(assert (x405 x2181))
(assert (= (x1769 x2477) (ite (= x2367 x2477) x2894 (x2255 x2477))))
(assert (= (x2036 x780) (ite (= x2642 x780) x397 (x1902 x780))))
(assert (= (x2338 x1483) (ite (and (not x2299) x2775) (x795 x1483) (x1613 x1483))))
(assert (= (ite (= x1242 x2298) x2639 (x225 x2298)) (x1810 x2298)))
(assert (= (x2036 x2309) (ite (= x2642 x2309) x397 (x1902 x2309))))
(assert (x107 x3046))
(assert (= (ite (and x2851 x1335) (x3018 x436) (ite (and (not x3047) x1301) (x1317 x436) (x2805 x436))) (x915 x436)))
(assert (x107 x1865))
(assert (= (x1029 x1946) (ite (and (not x2019) x2949) (x2993 x1946) (x2001 x1946))))
(assert (= (ite (and (not x2299) x2775) (x795 x2217) (x1613 x2217)) (x2338 x2217)))
(assert (= (x95 x364) (ite (= x1661 x364) x2246 (x1777 x364))))
(assert (x107 x781))
(assert (= (x939 x2477) (ite (= x2576 x2477) x1279 (x1888 x2477))))
(assert (= (x225 x2553) (ite (= x796 x2553) x2187 (x801 x2553))))
(assert (= (x2783 x3011) (ite (= 160 x3011) x190 (x1314 x3011))))
(assert (= (+ (x2600 x341) 1) (x2600 (x1408 x341 1))))
(assert (= (x1958 x261) (ite (= x424 x261) x2357 (x2997 x261))))
(assert (x107 x1714))
(assert (= (ite (= x424 x2553) x2357 (x2997 x2553)) (x1958 x2553)))
(assert (= (ite (= x2576 x455) x1279 (x1888 x455)) (x939 x455)))
(assert (= (ite (= x2129 x629) x2451 (x1226 x629)) (x657 x629)))
(assert (= (ite (= x49 x1489) x1829 (x1668 x49)) (x130 x49)))
(assert (= (ite (= x1642 x2709) x2925 (x1370 x1642)) (x2172 x1642)))
(assert (= (ite (and x3 (not x2376)) (x651 x182) (ite (and (not x150) x1264) (x1769 x182) (ite (and x282 (not x601)) (x2255 x182) (ite (and x1733 (not x1290)) (x2707 x182) (x326 x182))))) (x396 x182)))
(assert (= (ite (= x1348 x867) x542 (x2394 x867)) (x2063 x867)))
(assert (= (ite (and x1798 (not x2933)) (x125 x455) (ite (and (not x969) x77) (x657 x455) (ite (and (not x1421) x2091) (x1226 x455) (ite (and x697 (not x2706)) (x2950 x455) (x2504 x455))))) (x63 x455)))
(assert (= (x1762 x2876) (ite (= x2876 x59) x1209 (x1340 x2876))))
(assert (= (x918 x1706) (ite (= x1706 x1453) x555 (x2602 x1706))))
(assert (= (=> (and (= x248 (x864 (+ 64 x1577))) (= x600 (x864 (+ x232 64))) (= (x163 (- x1128 1)) x1310) (= (x864 (+ x2277 384)) x1182) (= (x864 (+ 224 x2277)) x232) (= x1577 (x864 (+ x2688 64))) (= (not (> x1310 0)) x119) (= x201 (x864 (+ x600 64)))) (and (=> (= x1182 x617) x907) x119)) x588))
(assert (= (x609 x1909) (ite (= x1909 x2150) 96 (x918 x1909))))
(assert (= (ite (= x2962 x433) x950 (x1429 x433)) (x245 x433)))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x2725) (x1059 x2725)) (ite (and x2374 x135) (x205 x2725) (ite (and x3004 x2850) (x1777 x2725) (x2338 x2725)))) (x2997 x2725)))
(assert (x107 x753))
(assert (= (ite (= x2298 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2298)) (x1325 x2298)))
(assert (x107 x799))
(assert (= (ite (= x499 x2217) x2188 (x2707 x2217)) (x2255 x2217)))
(assert (= (x1952 x1732) (ite (= x780 x1732) x555 (x2526 x1732))))
(assert (x107 x2610))
(assert (= (x890 x49) (ite (= x2085 x49) x1910 (x970 x49))))
(assert (= x1927 (=> (and (= (> x2974 0) x2377) (= (x798 x2717) x2974)) (and (=> (and (= x1257 x303) (not x2377)) x470) (=> x2377 x2715)))))
(assert (x107 x1077))
(assert (x107 x821))
(assert (= (x798 x780) (ite (and x682 x2759) (x2795 x780) (x2138 x780))))
(assert (x107 x1006))
(assert (= (x609 x975) (ite (= x2150 x975) 96 (x918 x975))))
(assert (= (x1265 x961) (ite (= x961 x2635) x1168 (x2980 x961))))
(assert (x107 x1235))
(assert (= (x801 x49) (ite (= x49 x824) x1666 (x902 x49))))
(assert (= (x609 x789) (ite (= x789 x2150) 96 (x918 x789))))
(assert (= (x1265 x914) (ite (= x2635 x914) x1168 (x2980 x914))))
(assert (= x2680 (x1592 (x2600 x2680))))
(assert (= (x245 x294) (ite (= x294 x2962) x950 (x1429 x294))))
(assert (= (x915 x2546) (ite (and x1335 x2851) (x3018 x2546) (ite (and (not x3047) x1301) (x1317 x2546) (x2805 x2546)))))
(assert (= (x2259 x2309) (ite (= x115 x2309) x2357 (x1427 x2309))))
(assert (= (x2172 x966) (ite (= x2709 x966) x2925 (x1370 x966))))
(assert (= (x1769 x1780) (ite (= x1780 x2367) x2894 (x2255 x1780))))
(assert (x107 x2929))
(assert (= (ite (and x29 (not x1970)) (x63 x2513) (x692 x2513)) (x1044 x2513)))
(assert (x107 x2778))
(assert (= (x2259 x115) x2357))
(assert (= (ite (and x724 (not x2377)) (x798 x1544) (x346 x1544)) (x205 x1544)))
(assert (= (ite (and x3 (not x2376)) (x651 x1732) (ite (and (not x150) x1264) (x1769 x1732) (ite (and x282 (not x601)) (x2255 x1732) (ite (and x1733 (not x1290)) (x2707 x1732) (x326 x1732))))) (x396 x1732)))
(assert (= (x1265 x1442) (ite (= x2635 x1442) x1168 (x2980 x1442))))
(assert (=> (> (+ 10000 1) x426) (= (x348 x426) (x1592 x426))))
(assert (= (ite (= x1807 x436) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x436)) (x2707 x436)))
(assert (= (ite (and x1335 x2851) (x3018 x2833) (ite (and (not x3047) x1301) (x1317 x2833) (x2805 x2833))) (x915 x2833)))
(assert (= (ite (and x2926 x923) (x1952 x1706) (ite (and (not x602) x1236) (x595 x1706) (x1546 x1706))) (x2328 x1706)))
(assert (= (ite (= x433 x1583) x1235 (x1450 x433)) (x1539 x433)))
(assert (= (x1952 x2594) (ite (= x2594 x780) x555 (x2526 x2594))))
(assert (= (x2539 x943) (ite (= x943 x517) x1914 (x2939 x943))))
(assert (= (ite (and x2775 (not x2299)) (x795 x86) (x1613 x86)) (x2338 x86)))
(assert (= (ite (= x2129 x49) x2451 (x1226 x49)) (x657 x49)))
(assert (= (ite (= x822 x2709) x2925 (x1370 x822)) (x2172 x822)))
(assert (x107 x2209))
(assert (= (ite (= x1807 x1516) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1516)) (x2707 x1516)))
(assert (= (x1314 x2048) (ite (= 128 x2048) x1725 (x33 x2048))))
(assert (= (ite (and (not x94) x1979) (x396 x1946) (x87 x1946)) (x1782 x1946)))
(assert (= x1806 (and x2775 x2299)))
(assert (= (x1265 x2876) (ite (= x2876 x2635) x1168 (x2980 x2876))))
(assert (= (x2338 x261) (ite (and x2775 (not x2299)) (x795 x261) (x1613 x261))))
(assert (= (x2995 x1244) (ite (= x1244 224) x770 (x302 x1244))))
(assert (= (ite (= x2553 x115) x2357 (x1427 x2553)) (x2259 x2553)))
(assert (= (x2995 x97) (ite (= 224 x97) x770 (x302 x97))))
(assert (= (x63 x97) (ite (and x1798 (not x2933)) (x125 x97) (ite (and x77 (not x969)) (x657 x97) (ite (and (not x1421) x2091) (x1226 x97) (ite (and (not x2706) x697) (x2950 x97) (x2504 x97)))))))
(assert (= (x1370 x2717) (ite (= x2298 x2717) x3034 (x161 x2717))))
(assert (= (=> (and (= (x3026 x1087 x752) x959) (= x1087 1) (= x752 (ite (< x80 78) 1 0)) (= (= 0 (x2884 x959 x1938)) x1680) (= (x3026 x684 x1511) x1938) (= x1511 (ite (< x80 32) 1 0)) (= 1 x684)) (and (=> (and (not x1680) (= (x2877 10 x80) x2401)) x7) (=> x1680 x31))) x1822))
(assert (x107 x1725))
(assert (= (ite (and x1892 x896 (not x2097)) (x2539 x1483) (x2300 x1483)) (x1845 x1483)))
(assert (= 0 (x33 x966)))
(assert (= (ite (= x1807 x433) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x433)) (x2707 x433)))
(assert (= (=> (and (= x1401 (x163 (- x555 1))) (= x777 (x864 (+ x780 64))) (= x602 (> x1401 0)) (= x159 (x864 (+ x780 32)))) (and (=> (not x602) x1085) (=> x602 x1076))) x1740))
(assert (= (x651 x748) (ite (= x420 x748) x952 (x1769 x748))))
(assert (= (x1810 x1780) (ite (= x1242 x1780) x2639 (x225 x1780))))
(assert (= (ite (= x2127 x483) x3034 (x2328 x483)) (x1902 x483)))
(assert (x107 x1811))
(assert (x107 x1711))
(assert (x107 x920))
(assert (= (x902 x3011) (ite (= x227 x3011) x22 (x56 x3011))))
(assert (= (ite (= x1809 x2513) x50 (x2159 x2513)) (x1903 x2513)))
(assert (= (ite (and x29 (not x1970)) (x63 x655) (x692 x655)) (x1044 x655)))
(assert (x405 x253))
(assert (x107 x2287))
(assert (x107 x2077))
(assert (x107 x889))
(assert (= (x1782 x424) (ite (and (not x94) x1979) (x396 x424) (x87 x424))))
(assert (x107 x487))
(assert (= (ite (= x824 x2869) x1666 (x902 x2869)) (x801 x2869)))
(assert (= (x915 x2710) (ite (and x2851 x1335) (x3018 x2710) (ite (and (not x3047) x1301) (x1317 x2710) (x2805 x2710)))))
(assert (= (x2063 x86) (ite (= x1348 x86) x542 (x2394 x86))))
(assert (x107 x1602))
(assert (x107 x2444))
(assert (= (x2720 x961) (ite (= x972 x961) x1063 (x1903 x961))))
(assert (x107 x2941))
(assert (= (x2159 x2869) (ite (= x246 x2869) x1037 (x807 x2869))))
(assert (= (ite (= x1615 x629) x2726 (x2268 x629)) (x2189 x629)))
(assert (x107 x2679))
(assert (= (x657 x2406) (ite (= x2129 x2406) x2451 (x1226 x2406))))
(assert (= (ite (= x1242 x629) x2639 (x225 x629)) (x1810 x629)))
(assert (= (x1777 x867) (ite (and (not x208) x2123) (x1845 x867) (x301 x867))))
(assert (x107 x1348))
(assert (= (x1090 x2597) (ite (= x2597 x677) x2612 (x1762 x2597))))
(assert (x107 x1030))
(assert (= (x801 x1544) (ite (= x824 x1544) x1666 (x902 x1544))))
(assert (= (ite (= x2454 x2309) x823 (x245 x2309)) (x1340 x2309)))
(assert (= (x1370 x966) (ite (= x2298 x966) x3034 (x161 x966))))
(assert (= (x1958 x2847) (ite (= x2847 x424) x2357 (x2997 x2847))))
(assert (= (x801 x1136) (ite (= x1136 x824) x1666 (x902 x1136))))
(assert (= (x918 x267) (ite (= x1453 x267) x555 (x2602 x267))))
(assert (= (ite (and (not x208) x2123) (x1845 x2751) (x301 x2751)) (x1777 x2751)))
(assert (= (x1810 x874) (ite (= x1242 x874) x2639 (x225 x874))))
(assert (= (x902 x2168) (ite (= x227 x2168) x22 (x56 x2168))))
(assert (= (x396 x2513) (ite (and (not x2376) x3) (x651 x2513) (ite (and (not x150) x1264) (x1769 x2513) (ite (and x282 (not x601)) (x2255 x2513) (ite (and (not x1290) x1733) (x2707 x2513) (x326 x2513)))))))
(assert (= (ite (= x97 x3008) x1217 (x340 x97)) (x3018 x97)))
(assert (x107 x2923))
(assert (= (x1819 x867) (ite (= x867 x2425) x859 (x103 x867))))
(assert (= (ite (and (not x763) x2810) (x2167 x1615) (x298 x1615)) (x2397 x1615)))
(assert (= (x2995 x2876) (ite (= 224 x2876) x770 (x302 x2876))))
(assert (= (ite (and x1866 (not x2476)) (x2232 x2298) (x1379 x2298)) (x2018 x2298)))
(assert (= (ite (= x1484 x2642) x397 (x1902 x1484)) (x2036 x1484)))
(assert (= (x2539 x1642) (ite (= x517 x1642) x1914 (x2939 x1642))))
(assert (= (x1539 x655) (ite (= x655 x1583) x1235 (x1450 x655))))
(assert (= (ite (= x2546 x2129) x2451 (x1226 x2546)) (x657 x2546)))
(assert (= (ite (= x2594 x1453) x555 (x2602 x2594)) (x918 x2594)))
(assert (= (x2328 x780) (ite (and x2926 x923) (x1952 x780) (ite (and x1236 (not x602)) (x595 x780) (x1546 x780)))))
(assert (x107 x746))
(assert (= (ite (= x780 x483) x555 (x2526 x483)) (x1952 x483)))
(assert (= (ite (= x227 x1197) x22 (x56 x1197)) (x902 x1197)))
(assert (x107 x1242))
(assert (x107 x390))
(assert (= (ite (= x59 x1780) x1209 (x1340 x1780)) (x1762 x1780)))
(assert (= (x2950 x2869) (ite (= x2869 x350) x1558 (x12 x2869))))
(assert (= (ite (and x29 x2105) (x593 x2817) (x1044 x2817)) (x2426 x2817)))
(assert (x107 x2607))
(assert (= (x1494 (- x67 x2555)) 0))
(assert (= (ite (and x2810 (not x763)) (x2167 x1453) (x298 x1453)) (x2397 x1453)))
(assert (= (ite (= x1453 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1453)) (x104 x1453)))
(assert (= (ite (= x455 x350) x1558 (x12 x455)) (x2950 x455)))
(assert (x107 x294))
(assert (x107 x1430))
(assert (x107 x2408))
(assert (x107 x2191))
(assert (= (x1325 x2847) (ite (= x1638 x2847) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2847))))
(assert (= (ite (= 224 x2847) x770 (x302 x2847)) (x2995 x2847)))
(assert (= (x245 x1873) (ite (= x2962 x1873) x950 (x1429 x1873))))
(assert (= (x2255 x846) (ite (= x499 x846) x2188 (x2707 x846))))
(assert (= (x970 x1642) (ite (= x1846 x1642) x500 (x559 x1642))))
(assert (= x1375 (or x2393 (and (not x634) x1344))))
(assert (x107 x3036))
(assert (= (=> (and (= x377 (x864 (+ x164 x824))) (= (x864 (+ x2893 64)) x2982) (= (x12 x1387) x1558) (= (< 0 x1558) x2706) (= x1872 x1556) (= x377 x350) (= (uninterp_mod (* x22 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1178) (= x22 x379) (= (x864 (+ x350 32)) x1438) (= x1872 (x864 (+ x1178 x436))) (= x164 (uninterp_mod (* 32 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x778 (x163 (- x350 x1651)))) (and (=> x2706 x702) (=> (and (not x2706) (= 0 x616)) x613))) x2674))
(assert (= (x2018 x370) (ite (and x1866 (not x2476)) (x2232 x370) (x1379 x370))))
(assert (= x426 (x2600 (x1592 x426))))
(assert (= (x1777 x685) (ite (and x2123 (not x208)) (x1845 x685) (x301 x685))))
(assert (= (ite (= x2129 x2552) x2451 (x1226 x2552)) (x657 x2552)))
(assert (x107 x1452))
(assert (= (x1370 x2048) (ite (= x2048 x2298) x3034 (x161 x2048))))
(assert (= (ite (= x1231 x1642) x775 (x44 x1642)) (x887 x1642)))
(assert (= (ite (and (not x2299) x2775) (x795 x629) (x1613 x629)) (x2338 x629)))
(assert (= (ite (and x2851 x1335) (x3018 x1803) (ite (and (not x3047) x1301) (x1317 x1803) (x2805 x1803))) (x915 x1803)))
(assert (= (x1952 x2833) (ite (= x2833 x780) x555 (x2526 x2833))))
(assert (= (x1450 x370) (ite (= x1821 x370) x3034 (x1728 x370))))
(assert (= (x805 x267) (ite (= x501 x267) x3030 (x1531 x267))))
(assert (= (x2783 x1706) (ite (= x1706 160) x190 (x1314 x1706))))
(assert (= x713 (and x1866 x2476)))
(assert (x107 x762))
(assert (x107 x1162))
(assert (= (x1952 x1516) (ite (= x780 x1516) x555 (x2526 x1516))))
(assert (= (x609 x2553) (ite (= x2150 x2553) 96 (x918 x2553))))
(assert (= (x2795 x488) (ite (= x488 x1083) x367 (x2880 x488))))
(assert (x107 x460))
(assert (x107 x2826))
(assert (= (ite (= x267 x424) x2357 (x2997 x267)) (x1958 x267)))
(assert (= (ite (= x1318 x86) x1964 (x715 x86)) (x1534 x86)))
(assert (x107 x803))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x397) (= x1930 (x864 (+ x2127 64))) (> 1461501637330902918203684832716283019655932542976 x397) (<= 0 x397) (= x2670 (x864 (+ x290 x2642))) (= (x1088 (x348 1) 0) x2317) (= (x1088 (x348 1) 0) x2064) (= x290 (uninterp_mod (* 32 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x268 (x1408 x2317 1)) (= (< x1930 x2670) x2694) (= x397 (x635 x2317)) (= (- (/ (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- (x2600 x2317) (x2600 x2064)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)) x512)) (and (=> x2694 x2510) (=> (and (not x2694) (= x1368 1)) x2282))) x2370))
(assert (= (x423 x433) (ite (and x817 x2655) (x1534 x433) (ite (and (not x1834) x1941) (x887 x433) (x151 x433)))))
(assert (= (x125 x874) (ite (= x874 x2128) x1897 (x657 x874))))
(assert (= (ite (= x455 x1583) x1235 (x1450 x455)) (x1539 x455)))
(assert (= (x2950 x629) (ite (= x350 x629) x1558 (x12 x629))))
(assert (x107 x2675))
(assert (= (ite (= x246 x1946) x1037 (x807 x1946)) (x2159 x1946)))
(assert (x107 x1017))
(assert (x107 x246))
(assert (= (ite (= x2367 x961) x2894 (x2255 x961)) (x1769 x961)))
(assert (x107 x584))
(assert (= (x1777 x2876) (ite (and (not x208) x2123) (x1845 x2876) (x301 x2876))))
(assert (x107 x482))
(assert (= (ite (= x420 x2546) x952 (x1769 x2546)) (x651 x2546)))
(assert (= (x1762 x3011) (ite (= x59 x3011) x1209 (x1340 x3011))))
(assert (= (ite (= x159 x294) 96 (x1952 x294)) (x595 x294)))
(assert (= (x887 x1453) (ite (= x1453 x1231) x775 (x44 x1453))))
(assert (= (ite (= x246 x455) x1037 (x807 x455)) (x2159 x455)))
(assert (= (x1952 x488) (ite (= x780 x488) x555 (x2526 x488))))
(assert (= (x33 x1780) 0))
(assert (= (ite (= x1583 x1732) x1235 (x1450 x1732)) (x1539 x1732)))
(assert (x107 x1398))
(assert (= (ite (= x677 x3011) x2612 (x1762 x3011)) (x1090 x3011)))
(assert (x107 x2461))
(assert (= (ite (= x2107 x1706) x315 (x533 x1706)) (x807 x1706)))
(assert (= (ite (= x2150 x1972) 96 (x918 x1972)) (x609 x1972)))
(assert (= (x915 x629) (ite (and x2851 x1335) (x3018 x629) (ite (and (not x3047) x1301) (x1317 x629) (x2805 x629)))))
(assert (= (ite (= x2710 x2367) x2894 (x2255 x2710)) (x1769 x2710)))
(assert (x107 x2777))
(assert (= (x2255 x67) (ite (= x67 x499) x2188 (x2707 x67))))
(assert (= (ite (and x724 (not x2377)) (x798 x1083) (x346 x1083)) (x205 x1083)))
(assert (= (x33 x97) 0))
(assert (x1932 x1125 x1475))
(assert (= (ite (= x1197 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1197)) (x1325 x1197)))
(assert (= (and x2643 x2141) x1699))
(assert (= (ite (= x1483 x1809) x50 (x2159 x1483)) (x1903 x1483)))
(assert (= (ite (= x424 x629) x2700 (x2997 x629)) (x2204 x629)))
(assert (= (x1810 x2817) (ite (= x1242 x2817) x2639 (x225 x2817))))
(assert (= (x1325 x2597) (ite (= x2597 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2597))))
(assert (x1932 x2649 x1497))
(assert (= (ite (and x2105 x29) (x593 x115) (x1044 x115)) (x2426 x115)))
(assert (= (ite (and (not x94) x1979) (x396 x115) (x87 x115)) (x1782 x115)))
(assert (= (ite (= x1909 192) x2714 (x2783 x1909)) (x302 x1909)))
(assert (= (ite (and x1892 (not x2097) x896) (x2539 x267) (x2300 x267)) (x1845 x267)))
(assert (x107 x696))
(assert (= (ite (= x267 x3008) x1217 (x340 x267)) (x3018 x267)))
(assert (= (x2167 x1615) (ite (and x2422 (not x566) x2821) (x2189 x1615) (x168 x1615))))
(assert (= (x915 x49) (ite (and x1335 x2851) (x3018 x49) (ite (and (not x3047) x1301) (x1317 x49) (x2805 x49)))))
(assert (x107 x2738))
(assert (= (x1090 x2817) (ite (= x2817 x677) x2612 (x1762 x2817))))
(assert (= (x2036 x1972) (ite (= x1972 x2642) x397 (x1902 x1972))))
(assert (x107 x28))
(assert (= (ite (= x227 x424) x22 (x56 x424)) (x902 x424)))
(assert (= (ite (and x2851 x1335) (x3018 x966) (ite (and x1301 (not x3047)) (x1317 x966) (x2805 x966))) (x915 x966)))
(assert (x107 x2264))
(assert (= (x1328 x1483) (ite (= x1483 x1745) x585 (x2580 x1483))))
(assert (x107 x1277))
(assert (= (ite (= x2869 x1821) x3034 (x1728 x2869)) (x1450 x2869)))
(assert (= (ite (= x2725 x2107) x315 (x533 x2725)) (x807 x2725)))
(assert (x107 x535))
(assert (= (x1958 x433) (ite (= x433 x424) x2357 (x2997 x433))))
(assert (= (x2328 x483) (ite (and x2926 x923) (x1952 x483) (ite (and (not x602) x1236) (x595 x483) (x1546 x483)))))
(assert (= (ite (= x1483 x972) x1063 (x1903 x1483)) (x2720 x1483)))
(assert (= 1000000000000000000 (x2600 (x348 1000000000000000000))))
(assert (x107 x610))
(assert (= (ite (and (not x94) x1979) (x396 x2710) (x87 x2710)) (x1782 x2710)))
(assert (x107 x1324))
(assert (= (x205 x1946) (ite (and x724 (not x2377)) (x798 x1946) (x346 x1946))))
(assert (= (ite (= x629 x1583) x1235 (x1450 x629)) (x1539 x629)))
(assert (x107 x2395))
(assert (x107 x310))
(assert (= (x283 x629) (ite (= x2061 x629) x515 (x224 x629))))
(assert (= (x1090 x261) (ite (= x261 x677) x2612 (x1762 x261))))
(assert (x107 x2034))
(assert (= (ite (= x86 x2298) x3034 (x161 x86)) (x1370 x86)))
(assert (= (x224 x1483) (ite (= x1483 x816) x696 (x2011 x1483))))
(assert (= (x928 x1873) (ite (= x1873 x3051) x9 (x2245 x1873))))
(assert (= (ite (= x1197 x2085) x1910 (x970 x1197)) (x890 x1197)))
(assert (= (x3018 x2513) (ite (= x2513 x3008) x1217 (x340 x2513))))
(assert (= (x609 x2623) (ite (= x2150 x2623) 96 (x918 x2623))))
(assert (= (x1534 x2847) (ite (= x1318 x2847) x1964 (x715 x2847))))
(assert (= (x245 x2513) (ite (= x2962 x2513) x950 (x1429 x2513))))
(assert (= (ite (= 192 x2751) x2714 (x2783 x2751)) (x302 x2751)))
(assert (= (ite (= x1231 x2552) x775 (x44 x2552)) (x887 x2552)))
(assert (= (ite (= x483 x1508) x626 (x220 x483)) (x1215 x483)))
(assert (= (ite (and x2655 x817) (x1534 x86) (ite (and (not x1834) x1941) (x887 x86) (x151 x86))) (x423 x86)))
(assert (x107 x1895))
(assert (= (ite (and x1892 (not x2097) x896) (x2539 x2387) (x2300 x2387)) (x1845 x2387)))
(assert (x107 x3031))
(assert (= (x2255 x2477) (ite (= x2477 x499) x2188 (x2707 x2477))))
(assert (= (x396 x455) (ite (and x3 (not x2376)) (x651 x455) (ite (and x1264 (not x150)) (x1769 x455) (ite (and x282 (not x601)) (x2255 x455) (ite (and x1733 (not x1290)) (x2707 x455) (x326 x455)))))))
(assert (= (ite (= x822 224) x770 (x302 x822)) (x2995 x822)))
(assert (x107 x1367))
(assert (= (ite (and x1798 (not x2933)) (x125 x655) (ite (and (not x969) x77) (x657 x655) (ite (and x2091 (not x1421)) (x1226 x655) (ite (and x697 (not x2706)) (x2950 x655) (x2504 x655))))) (x63 x655)))
(assert (= (x1328 x674) (ite (= x1745 x674) x585 (x2580 x674))))
(assert (= (ite (= x1809 x2594) x50 (x2159 x2594)) (x1903 x2594)))
(assert (= x31 (=> (= (< 1 x80) x634) (and (=> (and (= x231 1) (not x634) (= 10 x901)) x1917) (=> x634 x661)))))
(assert (= (ite (and x1979 (not x94)) (x396 x2546) (x87 x2546)) (x1782 x2546)))
(assert (= (ite (= x1544 192) x2714 (x2783 x1544)) (x302 x1544)))
(assert (= x2796 (and x763 x2810)))
(assert (= 0 (x33 x629)))
(assert (= (ite (= x2406 x2359) x2277 (x3037 x2406)) (x1317 x2406)))
(assert (= 0 (x33 x2623)))
(assert (= 0 (x33 x2597)))
(assert (x107 x1930))
(assert (= (ite (and x1798 (not x2933)) (x125 x67) (ite (and x77 (not x969)) (x657 x67) (ite (and (not x1421) x2091) (x1226 x67) (ite (and x697 (not x2706)) (x2950 x67) (x2504 x67))))) (x63 x67)))
(assert (x107 x2150))
(assert (= (x1265 x2546) (ite (= x2546 x2635) x1168 (x2980 x2546))))
(assert (x107 x1087))
(assert (= (x1762 x294) (ite (= x59 x294) x1209 (x1340 x294))))
(assert (x107 x2344))
(assert (= (x805 x2513) (ite (= x2513 x501) x3030 (x1531 x2513))))
(assert (= (x95 x1689) (ite (= x1661 x1689) x2246 (x1777 x1689))))
(assert (= (=> (and (= x2537 (< 96 x1628)) (= x2561 (x864 (+ x1804 128))) (= x2739 (x552 x2971)) (= x2971 (x864 (+ 96 x2966)))) (and (=> (and (not x2537) (= x2557 96)) x1186) (=> x2537 x1253))) x922))
(assert (= (=> (and (<= 0 x1906) (= x1536 (x1088 (x348 1) 0)) (= (x864 (+ x2709 64)) x1446) (= x831 (not (< x1446 x48))) (= x1906 (x635 x1954)) (<= x1906 1461501637330902918203684832716283019655932542975) (= x854 (- (/ (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- (x2600 x1954) (x2600 x1536)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))) (> 1461501637330902918203684832716283019655932542976 x1906)) (and x831 (=> (= x1077 1) x2463))) x1384))
(assert (= (x125 x97) (ite (= x97 x2128) x1897 (x657 x97))))
(assert (= (ite (and (not x2933) x1798) (x125 x3011) (ite (and (not x969) x77) (x657 x3011) (ite (and (not x1421) x2091) (x1226 x3011) (ite (and (not x2706) x697) (x2950 x3011) (x2504 x3011))))) (x63 x3011)))
(assert (= (ite (and x2926 x923) (x1952 x867) (ite (and (not x602) x1236) (x595 x867) (x1546 x867))) (x2328 x867)))
(assert (= (ite (= 224 x2597) x770 (x302 x2597)) (x2995 x2597)))
(assert (x1527 x317 x217))
(assert (x1932 x1744 x2071))
(assert (= (ite (and (not x2097) x896 x1892) (x2539 x2991) (x2300 x2991)) (x1845 x2991)))
(assert (x107 x2147))
(assert (= (x2950 x67) (ite (= x350 x67) x1558 (x12 x67))))
(assert (= (x1370 x267) (ite (= x267 x2298) x3034 (x161 x267))))
(assert (x107 x2304))
(assert (x107 x2386))
(assert (= (ite (= x115 x499) x2188 (x2707 x115)) (x2255 x115)))
(assert (= (x2995 x846) (ite (= 224 x846) x770 (x302 x846))))
(assert (= (ite (= x2642 x2623) x397 (x1902 x2623)) (x2036 x2623)))
(assert (= (ite (= x677 x86) x2612 (x1762 x86)) (x1090 x86)))
(assert (= (ite (and x1335 x2851) (x3018 x455) (ite (and x1301 (not x3047)) (x1317 x455) (x2805 x455))) (x915 x455)))
(assert (= (or (and (not x2694) x2781) x2301 (and x1609 x333)) x2851))
(assert (= (ite (= x1453 x3008) x1217 (x340 x1453)) (x3018 x1453)))
(assert (= (ite (and x923 x2926) (x1952 x1803) (ite (and (not x602) x1236) (x595 x1803) (x1546 x1803))) (x2328 x1803)))
(assert (= (x1265 x2387) (ite (= x2635 x2387) x1168 (x2980 x2387))))
(assert (x107 x374))
(assert (= (ite (= 224 x867) x770 (x302 x867)) (x2995 x867)))
(assert (= (x2167 x455) (ite (and x2821 x2422 (not x566)) (x2189 x455) (x168 x455))))
(assert (= (x2036 x488) (ite (= x488 x2642) x397 (x1902 x488))))
(assert (= 0 (x33 x1909)))
(assert (= (ite (= x246 x780) x1037 (x807 x780)) (x2159 x780)))
(assert (= (x1777 x2597) (ite (and (not x208) x2123) (x1845 x2597) (x301 x2597))))
(assert (= (=> (and (= (x1029 x455) x2562) (< 0 x177) (= x177 (x1029 x2576)) (= (x1029 x2576) x2455) (= (x864 (+ 32 x2576)) x455) (= x1396 (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2562))) (= x578 (not (< 1 x2455))) (not (< x1396 0)) (= x757 x2562)) (and x578 (=> (= x731 x757) x1502))) x2903))
(assert (= (ite (= x824 x1041) x1666 (x902 x1041)) (x801 x1041)))
(assert (= (=> (and (= (x205 x1083) x2450) (= (< 0 x2450) x1342)) (and (=> x1342 x101) (=> (and (not x1342) (= x2274 0)) x1048))) x470))
(assert (= (ite (= x685 x2298) x3034 (x161 x685)) (x1370 x685)))
(assert (= (x1810 x433) (ite (= x1242 x433) x2639 (x225 x433))))
(assert (= (x3018 x488) (ite (= x3008 x488) x1217 (x340 x488))))
(assert (= (x609 x1873) (ite (= x1873 x2150) 96 (x918 x1873))))
(assert (x107 x1118))
(assert (x107 x433))
(assert (= (x1810 x2594) (ite (= x2594 x1242) x2639 (x225 x2594))))
(assert (= (x801 x1267) (ite (= x1267 x824) x1666 (x902 x1267))))
(assert (= (x2255 x1387) (ite (= x499 x1387) x2188 (x2707 x1387))))
(assert (= (x1029 x2594) (ite (and (not x2019) x2949) (x2993 x2594) (x2001 x2594))))
(assert (= (x1370 x1041) (ite (= x1041 x2298) x3034 (x161 x1041))))
(assert (= (ite (= x115 x1516) x2357 (x1427 x1516)) (x2259 x1516)))
(assert (= (x2018 x1642) (ite (and x1866 (not x2476)) (x2232 x1642) (x1379 x1642))))
(assert (= (ite (= x966 128) x1725 (x33 x966)) (x1314 x966)))
(assert (= (ite (and x2123 (not x208)) (x1845 x483) (x301 x483)) (x1777 x483)))
(assert (= (ite (and x2422 (not x566) x2821) (x2189 x2546) (x168 x2546)) (x2167 x2546)))
(assert (= (x1762 x2406) (ite (= x2406 x59) x1209 (x1340 x2406))))
(assert (= (ite (= x2217 x59) x1209 (x1340 x2217)) (x1762 x2217)))
(assert (= x935 (=> (and (= x1780 (x864 (+ 128 x1387))) (= x1533 (not (> x1558 128))) (= (x125 x1780) x2475) (= x310 (x864 (+ 128 x350)))) (and (=> (= 128 x616) x613) x1533))))
(assert (x107 x377))
(assert (x107 x965))
(assert (= (x2172 x267) (ite (= x2709 x267) x2925 (x1370 x267))))
(assert (= (x104 x483) (ite (= x483 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x483))))
(assert (= (ite (= x722 x517) x1914 (x2939 x722)) (x2539 x722)))
(assert (= (ite (= x1807 x2869) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2869)) (x2707 x2869)))
(assert (= (x1090 x2552) (ite (= x677 x2552) x2612 (x1762 x2552))))
(assert (= (and x3047 x1301) x683))
(assert (= (x798 x2876) (ite (and x2759 x682) (x2795 x2876) (x2138 x2876))))
(assert (= (x1317 x2513) (ite (= x2513 x2359) x2277 (x3037 x2513))))
(assert (= (ite (= 224 x1267) x770 (x302 x1267)) (x2995 x1267)))
(assert (= (x2189 x86) (ite (= x1615 x86) x2726 (x2268 x86))))
(assert (= (ite (and x3 (not x2376)) (x651 x1642) (ite (and x1264 (not x150)) (x1769 x1642) (ite (and (not x601) x282) (x2255 x1642) (ite (and (not x1290) x1733) (x2707 x1642) (x326 x1642))))) (x396 x1642)))
(assert (= (ite (= x1516 128) x1725 (x33 x1516)) (x1314 x1516)))
(assert (x107 x507))
(assert (= (x939 x370) (ite (= x370 x2576) x1279 (x1888 x370))))
(assert (x405 x3020))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2600 (x348 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= (x423 x1821) (ite (and x817 x2655) (x1534 x1821) (ite (and x1941 (not x1834)) (x887 x1821) (x151 x1821)))))
(assert (x107 x2984))
(assert (= (ite (and (not x2377) x724) (x798 x2553) (x346 x2553)) (x205 x2553)))
(assert (= (x2259 x966) (ite (= x115 x966) x2357 (x1427 x966))))
(assert (= 0 (x33 x1197)))
(assert (x107 x748))
(assert (= (x1810 x2725) (ite (= x2725 x1242) x2639 (x225 x2725))))
(assert (= (ite (and (not x2377) x724) (x798 x2477) (x346 x2477)) (x205 x2477)))
(assert (x107 x3024))
(assert (= (ite (= x2546 x1846) x500 (x559 x2546)) (x970 x2546)))
(assert (= (ite (= x2751 x677) x2612 (x1762 x2751)) (x1090 x2751)))
(assert (x107 x250))
(assert (= (ite (and x2123 (not x208)) (x1845 x293) (x301 x293)) (x1777 x293)))
(assert (= (x2995 x2991) (ite (= 224 x2991) x770 (x302 x2991))))
(assert (= (ite (= x159 x97) 96 (x1952 x97)) (x595 x97)))
(assert (= (ite (= x2642 x1882) x397 (x1902 x1882)) (x2036 x1882)))
(assert (= (ite (= x350 x49) x1558 (x12 x49)) (x2950 x49)))
(assert (= (x2159 x685) (ite (= x246 x685) x1037 (x807 x685))))
(assert (= (x1762 x1594) (ite (= x1594 x59) x1209 (x1340 x1594))))
(assert (= (ite (= x1453 x350) x1558 (x12 x1453)) (x2950 x1453)))
(assert (= (x1340 x1136) (ite (= x1136 x2454) x823 (x245 x1136))))
(assert (= (ite (= x2477 x2642) x397 (x1902 x2477)) (x2036 x2477)))
(assert (x107 x1682))
(assert (= (x1534 x2309) (ite (= x2309 x1318) x1964 (x715 x2309))))
(assert (= (x1494 (- x1706 x2555)) 0))
(assert (x107 x1153))
(assert (x107 x1720))
(assert (= (ite (= x1642 x424) x2357 (x2997 x1642)) (x1958 x1642)))
(assert (= (x205 x2474) (ite (and x724 (not x2377)) (x798 x2474) (x346 x2474))))
(assert (= 0 (x1494 (- x3035 x2555))))
(assert (= (x2063 x1267) (ite (= x1267 x1348) x542 (x2394 x1267))))
(assert (= (ite (and (not x2933) x1798) (x125 x1946) (ite (and (not x969) x77) (x657 x1946) (ite (and x2091 (not x1421)) (x1226 x1946) (ite (and (not x2706) x697) (x2950 x1946) (x2504 x1946))))) (x63 x1946)))
(assert (= (x2018 x874) (ite (and x1866 (not x2476)) (x2232 x874) (x1379 x874))))
(assert (x107 x1688))
(assert (x107 x2717))
(assert (= (ite (= x424 x182) x2357 (x2997 x182)) (x1958 x182)))
(assert (= (x1044 x1706) (ite (and (not x1970) x29) (x63 x1706) (x692 x1706))))
(assert (= (x902 x1483) (ite (= x227 x1483) x22 (x56 x1483))))
(assert (= (ite (= x766 x1197) x1423 (x2397 x1197)) (x2073 x1197)))
(assert (= (ite (and x1335 x2851) (x3018 x483) (ite (and x1301 (not x3047)) (x1317 x483) (x2805 x483))) (x915 x483)))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x2597) (x1059 x2597)) (ite (and x135 x2374) (x205 x2597) (ite (and x2850 x3004) (x1777 x2597) (x2338 x2597)))) (x2997 x2597)))
(assert (= (x2036 x1136) (ite (= x1136 x2642) x397 (x1902 x1136))))
(assert (= (x2338 x488) (ite (and x2775 (not x2299)) (x795 x488) (x1613 x488))))
(assert (= (x2172 x1776) (ite (= x1776 x2709) x2925 (x1370 x1776))))
(assert (= (ite (= x722 x1453) x555 (x2602 x722)) (x918 x722)))
(assert (= (x1370 x2725) (ite (= x2298 x2725) x3034 (x161 x2725))))
(assert (x107 x2629))
(assert (= (ite (= x1732 x677) x2612 (x1762 x1732)) (x1090 x1732)))
(assert (= (ite (= 192 x789) x2714 (x2783 x789)) (x302 x789)))
(assert (= (ite (= x780 x1544) x555 (x2526 x1544)) (x1952 x1544)))
(assert (= (x1314 x1484) (ite (= x1484 128) x1725 (x33 x1484))))
(assert (x1932 x916 x2549))
(assert (= (ite (= x1041 160) x190 (x1314 x1041)) (x2783 x1041)))
(assert (= (x2018 x2817) (ite (and (not x2476) x1866) (x2232 x2817) (x1379 x2817))))
(assert (= (x125 x655) (ite (= x655 x2128) x1897 (x657 x655))))
(assert (= (x95 x370) (ite (= x1661 x370) x2246 (x1777 x370))))
(assert (x107 x159))
(assert (x107 x1566))
(assert (= (ite (= x1661 x2168) x2246 (x1777 x2168)) (x95 x2168)))
(assert (x107 x1829))
(assert (= (x1769 x1946) (ite (= x1946 x2367) x2894 (x2255 x1946))))
(assert (= (x2018 x1483) (ite (and (not x2476) x1866) (x2232 x1483) (x1379 x1483))))
(assert (x107 x1173))
(assert (x107 x2536))
(assert (= (x595 x455) (ite (= x159 x455) 96 (x1952 x455))))
(assert (= (x887 x433) (ite (= x433 x1231) x775 (x44 x433))))
(assert (= (ite (= x1453 x182) x555 (x2602 x182)) (x918 x182)))
(assert (= x923 (or (and x1320 x2845) x583)))
(assert (x107 x1154))
(assert (= (x2995 x483) (ite (= 224 x483) x770 (x302 x483))))
(assert (= (ite (= x2168 x677) x2612 (x1762 x2168)) (x1090 x2168)))
(assert (= (x2539 x49) (ite (= x49 x517) x1914 (x2939 x49))))
(assert (= (ite (= x766 x1946) x1423 (x2397 x1946)) (x2073 x1946)))
(assert (x107 x1263))
(assert (= (ite (and x2759 x682) (x2795 x2847) (x2138 x2847)) (x798 x2847)))
(assert (x107 x259))
(assert (= (ite (= x1776 192) x2714 (x2783 x1776)) (x302 x1776)))
(assert (x107 x2531))
(assert (= (x1325 x370) (ite (= x370 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x370))))
(assert (x107 x2936))
(assert (x107 x1387))
(assert (x107 x2489))
(assert (= (x2036 x1909) (ite (= x2642 x1909) x397 (x1902 x1909))))
(assert (= (x1370 x433) (ite (= x433 x2298) x3034 (x161 x433))))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x2217) (x1059 x2217)) (ite (and x2374 x135) (x205 x2217) (ite (and x3004 x2850) (x1777 x2217) (x2338 x2217)))) (x2997 x2217)))
(assert (= (x2036 x1706) (ite (= x2642 x1706) x397 (x1902 x1706))))
(assert (= x672 (=> (and (= (x864 (+ x780 32)) x1179) (= (not (> x555 1)) x2664) (> x2663 0) (= (x2269 x1453) x904) (< 0 x904) (= x2663 (x2269 x780)) (= x495 (x864 (+ 32 x1453)))) (and (=> (and (= x1330 x535) (= x2207 x951) (= x2624 x980)) x1309) x2664))))
(assert (= (ite (= x1638 x874) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x874)) (x1325 x874)))
(assert (x107 x2831))
(assert (= (x2328 x2847) (ite (and x2926 x923) (x1952 x2847) (ite (and x1236 (not x602)) (x595 x2847) (x1546 x2847)))))
(assert (= (ite (and (not x2299) x2775) (x795 x49) (x1613 x49)) (x2338 x49)))
(assert (= (x805 x270) (ite (= x501 x270) x3030 (x1531 x270))))
(assert (= (x2063 x2552) (ite (= x2552 x1348) x542 (x2394 x2552))))
(assert (= (ite (= x1083 x293) x367 (x2880 x293)) (x2795 x293)))
(assert (x2567 x1938))
(assert (= (x1810 x966) (ite (= x1242 x966) x2639 (x225 x966))))
(assert (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2600 (x348 42459404708690159261654315324267577519400883839135586425952143822324095778816))))
(assert (x107 x2622))
(assert (= (x2172 x874) (ite (= x874 x2709) x2925 (x1370 x874))))
(assert (= (ite (= x2406 x1809) x50 (x2159 x2406)) (x1903 x2406)))
(assert (= x2427 (=> (and (= x796 (x864 (+ x227 64))) (= (x902 x436) x1666) (= (< 1 x22) x3056) (= x846 (x864 (+ x115 64)))) (and (=> x3056 x690) (=> (and (= x796 x350) (= x1556 x846) (not x3056) (= 1 x379)) x2674)))))
(assert (= (x2073 x1453) (ite (= x1453 x766) x1423 (x2397 x1453))))
(assert (= x131 (x2600 (x1592 x131))))
(assert (x1691 x80 x1373))
(assert (= (x302 x2217) (ite (= 192 x2217) x2714 (x2783 x2217))))
(assert (= (ite (= x2477 x350) x1558 (x12 x2477)) (x2950 x2477)))
(assert (x107 x810))
(assert (x107 x267))
(assert (= (x1340 x3011) (ite (= x3011 x2454) x823 (x245 x3011))))
(assert (= (x63 x685) (ite (and (not x2933) x1798) (x125 x685) (ite (and (not x969) x77) (x657 x685) (ite (and (not x1421) x2091) (x1226 x685) (ite (and (not x2706) x697) (x2950 x685) (x2504 x685)))))))
(assert (= (x1265 x822) (ite (= x822 x2635) x1168 (x2980 x822))))
(assert (x107 x2524))
(assert (= (ite (and x1866 (not x2476)) (x2232 x1732) (x1379 x1732)) (x2018 x1732)))
(assert (= (x902 x49) (ite (= x227 x49) x22 (x56 x49))))
(assert (= 1461501637330902918203684832716283019655932542975 (x2600 (x348 1461501637330902918203684832716283019655932542975))))
(assert (= (x63 x294) (ite (and (not x2933) x1798) (x125 x294) (ite (and x77 (not x969)) (x657 x294) (ite (and (not x1421) x2091) (x1226 x294) (ite (and (not x2706) x697) (x2950 x294) (x2504 x294)))))))
(assert (= (ite (and (not x2376) x3) (x651 x267) (ite (and (not x150) x1264) (x1769 x267) (ite (and (not x601) x282) (x2255 x267) (ite (and x1733 (not x1290)) (x2707 x267) (x326 x267))))) (x396 x267)))
(assert (x107 x1461))
(assert (= (ite (= x2553 x350) x1558 (x12 x2553)) (x2950 x2553)))
(assert (= (ite (and (not x2376) x3) (x651 x2876) (ite (and (not x150) x1264) (x1769 x2876) (ite (and (not x601) x282) (x2255 x2876) (ite (and x1733 (not x1290)) (x2707 x2876) (x326 x2876))))) (x396 x2876)))
(assert (= (x2338 x2298) (ite (and x2775 (not x2299)) (x795 x2298) (x1613 x2298))))
(assert (= (x2172 x1882) (ite (= x1882 x2709) x2925 (x1370 x1882))))
(assert (= (x1450 x1594) (ite (= x1594 x1821) x3034 (x1728 x1594))))
(assert (= (ite (= x1594 x2709) x2925 (x1370 x1594)) (x2172 x1594)))
(assert (x107 x2801))
(assert (= x1132 x2775))
(assert (= (x801 x97) (ite (= x824 x97) x1666 (x902 x97))))
(assert (= (x1769 x3011) (ite (= x3011 x2367) x2894 (x2255 x3011))))
(assert (= (x2018 x685) (ite (and (not x2476) x1866) (x2232 x685) (x1379 x685))))
(assert (= (x1845 x629) (ite (and x896 x1892 (not x2097)) (x2539 x629) (x2300 x629))))
(assert (= (ite (= 128 x2387) x1725 (x33 x2387)) (x1314 x2387)))
(assert (x107 x1567))
(assert (= (x225 x966) (ite (= x796 x966) x2187 (x801 x966))))
(assert (x107 x2155))
(assert (x107 x2784))
(assert (= (ite (= x1041 x1242) x2639 (x225 x1041)) (x1810 x1041)))
(assert (= (ite (= x2127 x2847) x3034 (x2328 x2847)) (x1902 x2847)))
(assert (= (ite (= x2217 x2367) x2894 (x2255 x2217)) (x1769 x2217)))
(assert (= x1498 (and x895 (not x1665))))
(assert (= (x2931 x483) (ite (= x483 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x483))))
(assert (= (ite (and x29 (not x1970)) (x63 x867) (x692 x867)) (x1044 x867)))
(assert (= 0 (x33 x1267)))
(assert (x107 x1886))
(assert (x107 x2440))
(assert (x107 x1921))
(assert (= (ite (= x97 x59) x1209 (x1340 x97)) (x1762 x97)))
(assert (= (ite (and x2926 x923) (x1952 x961) (ite (and (not x602) x1236) (x595 x961) (x1546 x961))) (x2328 x961)))
(assert (= (ite (and (not x2299) x2775) (x795 x433) (x1613 x433)) (x2338 x433)))
(assert (= (ite (and (not x2933) x1798) (x125 x2552) (ite (and x77 (not x969)) (x657 x2552) (ite (and (not x1421) x2091) (x1226 x2552) (ite (and (not x2706) x697) (x2950 x2552) (x2504 x2552))))) (x63 x2552)))
(assert (= (ite (= x246 x2552) x1037 (x807 x2552)) (x2159 x2552)))
(assert (x107 x2502))
(assert (= (ite (= x1083 x1516) x367 (x2880 x1516)) (x2795 x1516)))
(assert (x107 x1758))
(assert (x107 x2711))
(assert (= (ite (= x2454 x115) x823 (x245 x115)) (x1340 x115)))
(assert (= (ite (= x1615 x1732) x2726 (x2268 x1732)) (x2189 x1732)))
(assert (= (x2995 x1780) (ite (= 224 x1780) x770 (x302 x1780))))
(assert (x107 x2556))
(assert (= x1752 (or (and (not x2913) x1127) x2257)))
(assert (x107 x45))
(assert (x107 x1404))
(assert (= (x902 x2817) (ite (= x2817 x227) x22 (x56 x2817))))
(assert (= (x1952 x267) (ite (= x267 x780) x555 (x2526 x267))))
(assert (= (x2018 x3011) (ite (and x1866 (not x2476)) (x2232 x3011) (x1379 x3011))))
(assert (= (x1592 104802725949312999197809474194232042941614695494850346232715517731946377510912) (x348 104802725949312999197809474194232042941614695494850346232715517731946377510912)))
(assert (= (x1450 x629) (ite (= x629 x1821) x3034 (x1728 x629))))
(assert (= (ite (= x1706 x1231) x775 (x44 x1706)) (x887 x1706)))
(assert (= (x2397 x49) (ite (and (not x763) x2810) (x2167 x49) (x298 x49))))
(assert (= (x1769 x267) (ite (= x2367 x267) x2894 (x2255 x267))))
(assert (= (x1782 x874) (ite (and (not x94) x1979) (x396 x874) (x87 x874))))
(assert (= (x1265 x2623) (ite (= x2623 x2635) x1168 (x2980 x2623))))
(assert (= (x2993 x86) (ite (and x1145 x1697) (x939 x86) (x1686 x86))))
(assert (= (x651 x1594) (ite (= x1594 x420) x952 (x1769 x1594))))
(assert (x107 x2624))
(assert (= (ite (= x2107 x2594) x315 (x533 x2594)) (x807 x2594)))
(assert (= (or (and (not x1896) x2846) x1174) x1138))
(assert (= (x423 x2477) (ite (and x2655 x817) (x1534 x2477) (ite (and (not x1834) x1941) (x887 x2477) (x151 x2477)))))
(assert (= (ite (= x424 x2817) x2357 (x2997 x2817)) (x1958 x2817)))
(assert (x107 x1705))
(assert (= (ite (= x2709 x2552) x2925 (x1370 x2552)) (x2172 x2552)))
(assert (= (ite (= x3011 x816) x696 (x2011 x3011)) (x224 x3011)))
(assert (= (and (not x2845) x1320) x947))
(assert (= (ite (= x59 x1197) x1209 (x1340 x1197)) (x1762 x1197)))
(assert (= (x2720 x1453) (ite (= x1453 x972) x1063 (x1903 x1453))))
(assert (= (x2328 x2513) (ite (and x2926 x923) (x1952 x2513) (ite (and (not x602) x1236) (x595 x2513) (x1546 x2513)))))
(assert (= (ite (= x1732 x1661) x2246 (x1777 x1732)) (x95 x1732)))
(assert (= (x2036 x914) (ite (= x914 x2642) x397 (x1902 x914))))
(assert (x107 x304))
(assert (= (x1952 x2751) (ite (= x2751 x780) x555 (x2526 x2751))))
(assert (= (x2600 (x1408 x1321 2)) (+ 2 (x2600 x1321))))
(assert (= (x2995 x943) (ite (= x943 224) x770 (x302 x943))))
(assert (= (x1958 x2477) (ite (= x424 x2477) x2357 (x2997 x2477))))
(assert (x107 x1169))
(assert (= (ite (= x780 x1846) x500 (x559 x780)) (x970 x780)))
(assert (= (ite (= x2127 x874) x3034 (x2328 x874)) (x1902 x874)))
(assert (= (ite (= x766 x1524) x1423 (x2397 x1524)) (x2073 x1524)))
(assert (= (ite (= x2359 x182) x2277 (x3037 x182)) (x1317 x182)))
(assert (= (ite (= x1083 x2387) x367 (x2880 x2387)) (x2795 x2387)))
(assert (= (x1539 x2298) (ite (= x1583 x2298) x1235 (x1450 x2298))))
(assert (x107 x1436))
(assert (x107 x1167))
(assert (= (ite (= x1809 x267) x50 (x2159 x267)) (x1903 x267)))
(assert (= (x2795 x294) (ite (= x294 x1083) x367 (x2880 x294))))
(assert (= (ite (= x867 x972) x1063 (x1903 x867)) (x2720 x867)))
(assert (= (ite (and (not x1970) x29) (x63 x97) (x692 x97)) (x1044 x97)))
(assert (= (ite (= x685 x2454) x823 (x245 x685)) (x1340 x685)))
(assert (= (x1952 x2546) (ite (= x780 x2546) x555 (x2526 x2546))))
(assert (= (x2255 x1453) (ite (= x499 x1453) x2188 (x2707 x1453))))
(assert (x107 x2555))
(assert (= (x2328 x1197) (ite (and x2926 x923) (x1952 x1197) (ite (and (not x602) x1236) (x595 x1197) (x1546 x1197)))))
(assert (= (x104 x685) (ite (= x467 x685) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x685))))
(assert (= (x2931 x722) (ite (= x3023 x722) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x722))))
(assert (= (ite (= x227 x1387) x22 (x56 x1387)) (x902 x1387)))
(assert (= (x1314 x49) (ite (= 128 x49) x1725 (x33 x49))))
(assert (= (x1325 x1544) (ite (= x1638 x1544) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1544))))
(assert (= (ite (= x227 x655) x22 (x56 x655)) (x902 x655)))
(assert (= (ite (= x2477 x3032) x573 (x890 x2477)) (x2764 x2477)))
(assert (= (x1317 x1909) (ite (= x2359 x1909) x2277 (x3037 x1909))))
(assert (= (x2600 (x348 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (= (ite (= x2367 x115) x2894 (x2255 x115)) (x1769 x115)))
(assert (= (x63 x1041) (ite (and (not x2933) x1798) (x125 x1041) (ite (and (not x969) x77) (x657 x1041) (ite (and x2091 (not x1421)) (x1226 x1041) (ite (and x697 (not x2706)) (x2950 x1041) (x2504 x1041)))))))
(assert (= (x1226 x97) (ite (= x97 x1261) x2738 (x2950 x97))))
(assert (= (=> (and (< (* x514 x3048) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- (/ x2773 x742) (uninterp_frac x2773 x742)) x2711) (> x200 0) (= (x406 x1083) x200) (= x2773 (* x514 x3048)) (= x737 x1631) (< 0 x742) (= (x864 (+ 32 x1083)) x154)) x1874) x1826))
(assert (= (ite (and x29 x2105) (x593 x182) (x1044 x182)) (x2426 x182)))
(assert (= (x2159 x1267) (ite (= x246 x1267) x1037 (x807 x1267))))
(assert (x107 x767))
(assert (x107 x1963))
(assert (x107 x2605))
(assert (= (ite (and (not x763) x2810) (x2167 x2035) (x298 x2035)) (x2397 x2035)))
(assert (= (x939 x1873) (ite (= x2576 x1873) x1279 (x1888 x1873))))
(assert (= (ite (= x3023 x364) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x364)) (x2931 x364)))
(assert (= (ite (= x3032 x2553) x573 (x890 x2553)) (x2764 x2553)))
(assert (x107 x558))
(assert (= (ite (and (not x2299) x2775) (x795 x867) (x1613 x867)) (x2338 x867)))
(assert (x107 x2900))
(assert (= (ite (and (not x94) x1979) (x396 x685) (x87 x685)) (x1782 x685)))
(assert (= (or (and (not x2198) x1515) (and (not x1719) x2927) (and x318 (not x830)) x2330 (and x1468 (not x2118))) x1174))
(assert (= (x2255 x1780) (ite (= x499 x1780) x2188 (x2707 x1780))))
(assert (= (ite (= x2642 x1041) x397 (x1902 x1041)) (x2036 x1041)))
(assert (x107 x2033))
(assert (= (x657 x1873) (ite (= x1873 x2129) x2451 (x1226 x1873))))
(assert (= (ite (= x3051 x629) x9 (x2245 x629)) (x928 x629)))
(assert (x107 x1853))
(assert (= (x2073 x1642) (ite (= x1642 x766) x1423 (x2397 x1642))))
(assert (= (x657 x67) (ite (= x2129 x67) x2451 (x1226 x67))))
(assert (= (ite (and (not x2933) x1798) (x125 x267) (ite (and (not x969) x77) (x657 x267) (ite (and (not x1421) x2091) (x1226 x267) (ite (and (not x2706) x697) (x2950 x267) (x2504 x267))))) (x63 x267)))
(assert (= (x2707 x1453) (ite (= x1453 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1453))))
(assert (= (ite (= x2546 x796) x2187 (x801 x2546)) (x225 x2546)))
(assert (= (x798 x866) (ite (and x2759 x682) (x2795 x866) (x2138 x866))))
(assert (x107 x2168))
(assert (= (ite (and x2759 x682) (x2795 x267) (x2138 x267)) (x798 x267)))
(assert (= (x302 x2106) (ite (= 192 x2106) x2714 (x2783 x2106))))
(assert (x107 x904))
(assert (x107 x1572))
(assert (= (ite (and (not x763) x2810) (x2167 x629) (x298 x629)) (x2397 x629)))
(assert (= (ite (= x846 x246) x1037 (x807 x846)) (x2159 x846)))
(assert (x107 x1755))
(assert (= (ite (= x2406 x2425) x859 (x103 x2406)) (x1819 x2406)))
(assert (= (x302 x1642) (ite (= 192 x1642) x2714 (x2783 x1642))))
(assert (= (x2328 x370) (ite (and x2926 x923) (x1952 x370) (ite (and x1236 (not x602)) (x595 x370) (x1546 x370)))))
(assert (= (x125 x2168) (ite (= x2128 x2168) x1897 (x657 x2168))))
(assert (= (ite (= x2454 x1387) x823 (x245 x1387)) (x1340 x1387)))
(assert (= (ite (= x2597 x1231) x775 (x44 x2597)) (x887 x2597)))
(assert (x607 x289 x783 x1754 x2901))
(assert (= (ite (= x1706 x517) x1914 (x2939 x1706)) (x2539 x1706)))
(assert (= (x2783 x966) (ite (= x966 160) x190 (x1314 x966))))
(assert (x107 x868))
(assert (= (x2539 x1516) (ite (= x517 x1516) x1914 (x2939 x1516))))
(assert (= (x651 x270) (ite (= x270 x420) x952 (x1769 x270))))
(assert (= x2218 (=> (and (<= 0 x494) (= x1670 (x1408 x2753 2)) (= (x3026 1461501637330902918203684832716283019655932542975 x2413) x681) (= x2410 (x1075 x341)) (= (x864 (+ x2247 64)) x1477) (<= 0 x2410) (= x1876 (x85 x1821)) (= x291 (x378 x1318)) (= (x3054 x1670) x286) (< 0 x291) (= x2040 (not (< 1 x1876))) (<= x1392 1461501637330902918203684832716283019655932542975) (= x51 (x1408 x311 2)) (<= x494 1461501637330902918203684832716283019655932542975) (= (x1408 x341 2) x2753) (<= 0 x1392) (= (x864 (+ x1140 64)) x2247) (= x658 (x2391 x2652)) (<= 0 x286) (< 0 x1277) (= x311 (x1408 x341 1)) (< x494 1461501637330902918203684832716283019655932542976) (= x341 (x2802 (x1592 x681) (x348 2) 0)) (>= x658 0) (= (x2547 x311) x1392) (= x1165 (x864 (+ x1140 32))) (< x2410 1461501637330902918203684832716283019655932542976) (= (x726 x51) x1333) (= (x423 x1821) x1277) (<= x1333 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x658) (= x2686 (x864 (+ x1318 32))) (= x2413 (x423 x1136)) (> 1461501637330902918203684832716283019655932542976 x1392) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x286) (= x2192 (x864 (+ 192 x1140))) (= (x1408 x51 2) x2652) (= (x864 (+ x1604 64)) x2770) (= x494 (x143 x2753)) (<= 0 x1333) (= (x864 (+ x1165 64)) x1604) (<= x2410 1461501637330902918203684832716283019655932542975) (= x1136 (x864 (+ x1821 32)))) (and (=> (and (= 2 x505) (= x2192 x2035) (= x851 x681)) x2723) x2040))))
(assert (= (x104 x1387) (ite (= x467 x1387) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1387))))
(assert (= (x245 x1544) (ite (= x2962 x1544) x950 (x1429 x1544))))
(assert (= (x1952 x293) (ite (= x780 x293) x555 (x2526 x293))))
(assert (= (ite (= x2387 x2709) x2925 (x1370 x2387)) (x2172 x2387)))
(assert (= (ite (= x2298 x2991) x3034 (x161 x2991)) (x1370 x2991)))
(assert (= (x595 x488) (ite (= x159 x488) 96 (x1952 x488))))
(assert (= (x348 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1592 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (ite (= x824 x86) x1666 (x902 x86)) (x801 x86)))
(assert (= (ite (= x1483 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1483)) (x104 x1483)))
(assert (= (x2189 x1524) (ite (= x1524 x1615) x2726 (x2268 x1524))))
(assert (= (x3018 x961) (ite (= x961 x3008) x1217 (x340 x961))))
(assert (= (ite (= x483 x1083) x367 (x2880 x483)) (x2795 x483)))
(assert (= (x801 x2876) (ite (= x2876 x824) x1666 (x902 x2876))))
(assert (= (x2720 x293) (ite (= x972 x293) x1063 (x1903 x293))))
(assert (= (ite (= x2129 x1453) x2451 (x1226 x1453)) (x657 x1453)))
(assert (= (ite (= x1231 x2477) x775 (x44 x2477)) (x887 x2477)))
(assert (x405 x422))
(assert (= (x2795 x97) (ite (= x97 x1083) x367 (x2880 x97))))
(assert (= (x423 x2513) (ite (and x2655 x817) (x1534 x2513) (ite (and x1941 (not x1834)) (x887 x2513) (x151 x2513)))))
(assert (= (x939 x2594) (ite (= x2594 x2576) x1279 (x1888 x2594))))
(assert (x107 x2714))
(assert (x107 x2309))
(assert (= (ite (and x682 x2759) (x2795 x436) (x2138 x436)) (x798 x436)))
(assert (= (ite (= x1661 x1083) x367 (x2880 x1661)) (x2795 x1661)))
(assert (= (x396 x2387) (ite (and x3 (not x2376)) (x651 x2387) (ite (and x1264 (not x150)) (x1769 x2387) (ite (and (not x601) x282) (x2255 x2387) (ite (and (not x1290) x1733) (x2707 x2387) (x326 x2387)))))))
(assert (x107 x825))
(assert (= (x2783 x2309) (ite (= 160 x2309) x190 (x1314 x2309))))
(assert (= (x2189 x2168) (ite (= x1615 x2168) x2726 (x2268 x2168))))
(assert (= (x1450 x2477) (ite (= x2477 x1821) x3034 (x1728 x2477))))
(assert (= (=> (and (= (x864 (+ x2355 96)) x2367) (= x150 (> x1564 64)) (= (x864 (+ 64 x2975)) x934) (= x2894 (x2255 x934))) (and (=> (and (not x150) (= 64 x519)) x2194) (=> x150 x649))) x1657))
(assert (x107 x169))
(assert (x107 x2832))
(assert (= (x245 x364) (ite (= x364 x2962) x950 (x1429 x364))))
(assert (x107 x2409))
(assert (= x2846 (or x760 (and x2946 (not x3049)) (and (not x1656) x1458) (and x2389 (not x2303)) (and x2116 (not x2208)))))
(assert (= (ite (and x724 (not x2377)) (x798 x685) (x346 x685)) (x205 x685)))
(assert (= (x2328 128) (ite (and x923 x2926) (x1952 128) (ite (and (not x602) x1236) (x595 128) (x1546 128)))))
(assert (= (x2167 x86) (ite (and (not x566) x2422 x2821) (x2189 x86) (x168 x86))))
(assert (x1932 x592 x637))
(assert (= (ite (= x1544 x499) x2188 (x2707 x1544)) (x2255 x1544)))
(assert (= (x2255 x3035) (ite (= x499 x3035) x2188 (x2707 x3035))))
(assert (x107 x1333))
(assert (x107 x879))
(assert (= (x595 x2309) (ite (= x159 x2309) 96 (x1952 x2309))))
(assert (= (ite (= x780 x874) x555 (x2526 x874)) (x1952 x874)))
(assert (= (x2073 x370) (ite (= x766 x370) x1423 (x2397 x370))))
(assert (= (x2036 x97) (ite (= x97 x2642) x397 (x1902 x97))))
(assert (x107 x1412))
(assert (= (x2783 x182) (ite (= 160 x182) x190 (x1314 x182))))
(assert (x107 x291))
(assert (= (x3018 x182) (ite (= x3008 x182) x1217 (x340 x182))))
(assert (= (x1090 x455) (ite (= x677 x455) x2612 (x1762 x455))))
(assert (= (x1819 x655) (ite (= x2425 x655) x859 (x103 x655))))
(assert (= (ite (= x67 x3008) x1217 (x340 x67)) (x3018 x67)))
(assert (x107 x2670))
(assert (x107 x2660))
(assert (= (ite (= x2127 x2623) x3034 (x2328 x2623)) (x1902 x2623)))
(assert (x107 x2938))
(assert (x107 x108))
(assert (x107 x75))
(assert (= (x2338 x1695) (ite (and x2775 (not x2299)) (x795 x1695) (x1613 x1695))))
(assert (= (ite (= 160 x2513) x190 (x1314 x2513)) (x2783 x2513)))
(assert (x2478 x2668))
(assert (= (x918 x370) (ite (= x370 x1453) x555 (x2602 x370))))
(assert (x107 x828))
(assert (= (x1340 x1483) (ite (= x2454 x1483) x823 (x245 x1483))))
(assert (= (x1029 x1594) (ite (and x2949 (not x2019)) (x2993 x1594) (x2001 x1594))))
(assert (= (x651 x2817) (ite (= x420 x2817) x952 (x1769 x2817))))
(assert (=> (< (- x794 1) 10000) (= (x1592 x794) (x348 x794))))
(assert (= (ite (= 160 x2406) x190 (x1314 x2406)) (x2783 x2406)))
(assert (= (ite (= x2309 128) x1725 (x33 x2309)) (x1314 x2309)))
(assert (x107 x1443))
(assert (x107 x600))
(assert (= (ite (= x97 x2359) x2277 (x3037 x97)) (x1317 x97)))
(assert (= (ite (= x975 160) x190 (x1314 x975)) (x2783 x975)))
(assert (= (ite (and x2949 (not x2019)) (x2993 x1524) (x2001 x1524)) (x1029 x1524)))
(assert (= (x302 x2552) (ite (= 192 x2552) x2714 (x2783 x2552))))
(assert (= (ite (= x2635 x866) x1168 (x2980 x866)) (x1265 x866)))
(assert (= (x1370 x2751) (ite (= x2298 x2751) x3034 (x161 x2751))))
(assert (= (x396 x966) (ite (and x3 (not x2376)) (x651 x966) (ite (and (not x150) x1264) (x1769 x966) (ite (and x282 (not x601)) (x2255 x966) (ite (and (not x1290) x1733) (x2707 x966) (x326 x966)))))))
(assert (= (ite (and (not x1970) x29) (x63 x1136) (x692 x1136)) (x1044 x1136)))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x1267) (x1059 x1267)) (ite (and x2374 x135) (x205 x1267) (ite (and x2850 x3004) (x1777 x1267) (x2338 x1267)))) (x2997 x1267)))
(assert (= (x807 x2847) (ite (= x2107 x2847) x315 (x533 x2847))))
(assert (= (ite (= x966 x59) x1209 (x1340 x966)) (x1762 x966)))
(assert (= (x1958 x1387) (ite (= x424 x1387) x2357 (x2997 x1387))))
(assert (x107 x1578))
(assert (= (ite (= x115 x824) x1666 (x902 x115)) (x801 x115)))
(assert (= (ite (and (not x94) x1979) (x396 x293) (x87 x293)) (x1782 x293)))
(assert (= (ite (= x1642 x1615) x2726 (x2268 x1642)) (x2189 x1642)))
(assert (x107 x1955))
(assert (= (ite (and x2926 x923) (x1952 x2546) (ite (and x1236 (not x602)) (x595 x2546) (x1546 x2546))) (x2328 x2546)))
(assert (x107 x519))
(assert (= (ite (= x629 x2709) x2925 (x1370 x629)) (x2172 x629)))
(assert (= (ite (= 128 x722) x1725 (x33 x722)) (x1314 x722)))
(assert (= (ite (and x1979 (not x94)) (x396 x455) (x87 x455)) (x1782 x455)))
(assert (x107 x463))
(assert (= (x2707 x67) (ite (= x1807 x67) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x67))))
(assert (= (x609 x182) (ite (= x2150 x182) 96 (x918 x182))))
(assert (x107 x2893))
(assert (= (x1845 x857) (ite (and x1892 (not x2097) x896) (x2539 x857) (x2300 x857))))
(assert (= (x2993 x2477) (ite (and x1145 x1697) (x939 x2477) (x1686 x2477))))
(assert (= (ite (= x846 x2359) x2277 (x3037 x846)) (x1317 x846)))
(assert (= (ite (= x159 x1972) 96 (x1952 x1972)) (x595 x1972)))
(assert (= (x1044 x67) (ite (and x29 (not x1970)) (x63 x67) (x692 x67))))
(assert (= (ite (= 224 x2717) x770 (x302 x2717)) (x2995 x2717)))
(assert (= (ite (= x1483 x1261) x2738 (x2950 x1483)) (x1226 x1483)))
(assert (= (x918 x1544) (ite (= x1453 x1544) x555 (x2602 x1544))))
(assert (x107 x272))
(assert (= (ite (= x2725 x420) x952 (x1769 x2725)) (x651 x2725)))
(assert (= (x1317 x789) (ite (= x2359 x789) x2277 (x3037 x789))))
(assert (= (ite (= x2836 x499) x2188 (x2707 x2836)) (x2255 x2836)))
(assert (= (x651 x1642) (ite (= x1642 x420) x952 (x1769 x1642))))
(assert (= (ite (and x1892 x896 (not x2097)) (x2539 x517) (x2300 x517)) (x1845 x517)))
(assert (= (x890 x2546) (ite (= x2546 x2085) x1910 (x970 x2546))))
(assert (x107 x2747))
(assert (= (x1090 x2477) (ite (= x677 x2477) x2612 (x1762 x2477))))
(assert (= (ite (= x1453 x293) x555 (x2602 x293)) (x918 x293)))
(assert (= (ite (= x2709 128) x2925 (x1370 128)) (x2172 128)))
(assert (= (ite (= x1453 x246) x1037 (x807 x1453)) (x2159 x1453)))
(assert (= (ite (= x1946 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1946)) (x1325 x1946)))
(assert (and (= 1000000000000000000 (x2877 10 18)) (= 10000000 (x2877 10 7)) (= 10000000000000000 (x2877 10 16)) (= (x2877 10 6) 1000000) (= 100000000 (x2877 10 8)) (= (x2877 10 17) 100000000000000000) (= (x2877 10 19) 10000000000000000000) (= (x2877 10 12) 1000000000000) (= (x2877 10 0) 1) (= (x2877 10 4) 10000) (= 1000000000000000000000000000 (x2877 10 27)) (= 10000000000000 (x2877 10 13)) (= (x2877 10 11) 100000000000) (= 10000000000000000000000000000 (x2877 10 28)) (= (x2877 10 1) 10) (= 100000000000000000000000000000 (x2877 10 29)) (= (x2877 10 9) 1000000000) (= (x2877 10 2) 100) (= 100000000000000 (x2877 10 14)) (= (x2877 10 30) 1000000000000000000000000000000) (= 1000000000000000000000000 (x2877 10 24)) (= 100000000000000000000000 (x2877 10 23)) (= 1000000000000000000000 (x2877 10 21)) (= 1000000000000000 (x2877 10 15)) (= 1000 (x2877 10 3)) (= (x2877 10 20) 100000000000000000000) (= (x2877 10 26) 100000000000000000000000000) (= (x2877 10 5) 100000) (= (x2877 10 10) 10000000000) (= (x2877 10 22) 10000000000000000000000) (= (x2877 10 25) 10000000000000000000000000)))
(assert (= (x1044 x424) (ite (and (not x1970) x29) (x63 x424) (x692 x424))))
(assert (= (ite (= x3011 x1846) x500 (x559 x3011)) (x970 x3011)))
(assert (x107 x1191))
(assert (= (x1314 x822) (ite (= 128 x822) x1725 (x33 x822))))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x1544) (x2300 x1544)) (x1845 x1544)))
(assert (= (ite (= x780 x97) x555 (x2526 x97)) (x1952 x97)))
(assert (= (ite (= x261 x227) x22 (x56 x261)) (x902 x261)))
(assert (= (x95 x866) (ite (= x866 x1661) x2246 (x1777 x866))))
(assert (x107 x1732))
(assert (= (ite (= x370 x1083) x367 (x2880 x370)) (x2795 x370)))
(assert (= (x104 x1642) (ite (= x1642 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1642))))
(assert (= (x2159 x2406) (ite (= x2406 x246) x1037 (x807 x2406))))
(assert (x405 x2413))
(assert (= (x657 x2725) (ite (= x2725 x2129) x2451 (x1226 x2725))))
(assert (x107 x1489))
(assert (= (ite (and x923 x2926) (x1952 x789) (ite (and x1236 (not x602)) (x595 x789) (x1546 x789))) (x2328 x789)))
(assert (x107 x2902))
(assert (= (ite (= x2876 x796) x2187 (x801 x2876)) (x225 x2876)))
(assert (= (ite (= x433 x1821) x3034 (x1728 x433)) (x1450 x433)))
(assert (= (ite (= x2367 x293) x2894 (x2255 x293)) (x1769 x293)))
(assert (= (=> (and (= (x864 (+ 64 x919)) x1015) (<= x2714 1461501637330902918203684832716283019655932542975) (= (x1667 x751) x2714) (= (> x1725 2) x645)) (and (=> (not x645) x1285) (=> x645 x1273))) x2628))
(assert (x107 x1417))
(assert (= (x302 x2048) (ite (= 192 x2048) x2714 (x2783 x2048))))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x370) (x1059 x370)) (ite (and x135 x2374) (x205 x370) (ite (and x3004 x2850) (x1777 x370) (x2338 x370)))) (x2997 x370)))
(assert (= (ite (and x3 (not x2376)) (x651 x846) (ite (and x1264 (not x150)) (x1769 x846) (ite (and (not x601) x282) (x2255 x846) (ite (and x1733 (not x1290)) (x2707 x846) (x326 x846))))) (x396 x846)))
(assert (= (x609 x2597) (ite (= x2150 x2597) 96 (x918 x2597))))
(assert (= (x1777 x2869) (ite (and x2123 (not x208)) (x1845 x2869) (x301 x2869))))
(assert (= (x928 x2546) (ite (= x3051 x2546) x9 (x2245 x2546))))
(assert (= (x887 x780) (ite (= x780 x1231) x775 (x44 x780))))
(assert (= (x1044 x2298) (ite (and (not x1970) x29) (x63 x2298) (x692 x2298))))
(assert (= x189 (=> (and (= (x864 (+ 64 x980)) x1483) (= x1706 (x864 (+ x980 32))) (= x1071 (x864 (+ x6 x1267))) (= x6 (uninterp_mod (* x848 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (= 0 x1483) x535 (ite (= x1483 32) x2207 (ite (= 64 x1483) x980 (x1971 x1483)))) x2501) (= x1383 x1071) (= (ite (= 0 x3011) x535 (ite (= x3011 32) x2207 (ite (= 64 x3011) x980 (x1971 x3011)))) x1969) (= x3011 x980) (= x1146 x848) (= x1799 (ite (= 0 x1706) x535 (ite (= x1706 32) x2207 (ite (= x1706 64) x980 (x1971 x1706))))) (= x1508 x2430)) x2571)))
(assert (= (ite (= x501 x1594) x3030 (x1531 x1594)) (x805 x1594)))
(assert (x107 x3051))
(assert (= (x1534 x1483) (ite (= x1318 x1483) x1964 (x715 x1483))))
(assert (= (ite (= x2298 x3011) x3034 (x161 x3011)) (x1370 x3011)))
(assert (= (x2426 x2553) (ite (and x29 x2105) (x593 x2553) (x1044 x2553))))
(assert (= (x2950 x874) (ite (= x874 x350) x1558 (x12 x874))))
(assert (= (x2036 x867) (ite (= x2642 x867) x397 (x1902 x867))))
(assert (x107 x1182))
(assert (x107 x875))
(assert (x107 x1478))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x2553) (x1059 x2553)) (ite (and x2374 x135) (x205 x2553) (ite (and x2850 x3004) (x1777 x2553) (x2338 x2553)))) (x2997 x2553)))
(assert (= (x33 x1706) 0))
(assert (= (x104 x455) (ite (= x455 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x455))))
(assert (x107 x2382))
(assert (= (ite (= x2635 x67) x1168 (x2980 x67)) (x1265 x67)))
(assert (= (x1325 x2477) (ite (= x2477 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2477))))
(assert (= (x1534 x2597) (ite (= x1318 x2597) x1964 (x715 x2597))))
(assert (x107 x625))
(assert (x107 x2761))
(assert (= (x2707 x488) (ite (= x488 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x488))))
(assert (x107 x1136))
(assert (= (x2159 x2847) (ite (= x2847 x246) x1037 (x807 x2847))))
(assert (x107 x1196))
(assert (= (ite (and x2123 (not x208)) (x1845 x722) (x301 x722)) (x1777 x722)))
(assert (= (x595 x943) (ite (= x943 x159) 96 (x1952 x943))))
(assert (= (x1090 x1516) (ite (= x677 x1516) x2612 (x1762 x1516))))
(assert (= (x33 x1776) 0))
(assert (x107 x541))
(assert (=> (< (- x1953 1) 10000) (= (x1592 x1953) (x348 x1953))))
(assert (= (x1819 x2552) (ite (= x2552 x2425) x859 (x103 x2552))))
(assert (x107 x2373))
(assert (= 0 (x33 x943)))
(assert (= (x1090 x2847) (ite (= x2847 x677) x2612 (x1762 x2847))))
(assert (= (x1450 x3011) (ite (= x1821 x3011) x3034 (x1728 x3011))))
(assert (= (x2255 x2406) (ite (= x2406 x499) x2188 (x2707 x2406))))
(assert (= (x104 x294) (ite (= x294 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x294))))
(assert (= (x2259 x2513) (ite (= x115 x2513) x2357 (x1427 x2513))))
(assert (= (x1340 x2869) (ite (= x2869 x2454) x823 (x245 x2869))))
(assert (= (x3018 x1972) (ite (= x1972 x3008) x1217 (x340 x1972))))
(assert (= (x1903 x685) (ite (= x1809 x685) x50 (x2159 x685))))
(assert (= (ite (= x483 x2150) 96 (x918 x483)) (x609 x483)))
(assert (= 0 (x33 x267)))
(assert (x107 x1250))
(assert (= (ite (= x766 x1594) x1423 (x2397 x1594)) (x2073 x1594)))
(assert (x107 x1071))
(assert (x107 x2238))
(assert (= (x1782 x2309) (ite (and x1979 (not x94)) (x396 x2309) (x87 x2309))))
(assert (= (ite (= x3011 x2425) x859 (x103 x3011)) (x1819 x3011)))
(assert (x107 x638))
(assert (= (ite (= x2127 x1041) x3034 (x2328 x1041)) (x1902 x1041)))
(assert (= (x2707 x685) (ite (= x1807 x685) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x685))))
(assert (= (ite (= x1745 x2817) x585 (x2580 x2817)) (x1328 x2817)))
(assert (= (ite (= x1041 x972) x1063 (x1903 x1041)) (x2720 x1041)))
(assert (= (x798 x2474) (ite (and x2759 x682) (x2795 x2474) (x2138 x2474))))
(assert (= (ite (= x2962 x2869) x950 (x1429 x2869)) (x245 x2869)))
(assert (= (ite (= x59 x86) x1209 (x1340 x86)) (x1762 x86)))
(assert (x107 x100))
(assert (= 0 (x1494 (- x364 x2555))))
(assert (x107 x227))
(assert (= (x1952 x866) (ite (= x780 x866) x555 (x2526 x866))))
(assert (= (ite (= x1453 x1261) x2738 (x2950 x1453)) (x1226 x1453)))
(assert (= (ite (= x1139 x2356) x2989 (x1222 x1139)) (x552 x1139)))
(assert (= (x1539 x182) (ite (= x1583 x182) x1235 (x1450 x182))))
(assert (= (ite (= x2425 x294) x859 (x103 x294)) (x1819 x294)))
(assert (= (ite (= x722 x2642) x397 (x1902 x722)) (x2036 x722)))
(assert (x107 x1104))
(assert (= (x2397 x2594) (ite (and x2810 (not x763)) (x2167 x2594) (x298 x2594))))
(assert (= (ite (= x943 128) x1725 (x33 x943)) (x1314 x943)))
(assert (= (ite (and x1697 x1145) (x939 x1732) (x1686 x1732)) (x2993 x1732)))
(assert (= (x2073 x1483) (ite (= x766 x1483) x1423 (x2397 x1483))))
(assert (x107 x3045))
(assert (= (ite (= x2298 x1318) x1964 (x715 x2298)) (x1534 x2298)))
(assert (= (ite (and x1866 (not x2476)) (x2232 x1348) (x1379 x1348)) (x2018 x1348)))
(assert (= (ite (= x2552 x517) x1914 (x2939 x2552)) (x2539 x2552)))
(assert (= (ite (= x1483 x1615) x2726 (x2268 x1483)) (x2189 x1483)))
(assert (= (ite (= x370 x2128) x1897 (x657 x370)) (x125 x370)))
(assert (= (ite (= x455 160) x190 (x1314 x455)) (x2783 x455)))
(assert (= (x2338 x1706) (ite (and (not x2299) x2775) (x795 x1706) (x1613 x1706))))
(assert (= (ite (= x629 x2298) x3034 (x161 x629)) (x1370 x629)))
(assert (x107 x1898))
(assert (= (ite (= x1594 x1583) x1235 (x1450 x1594)) (x1539 x1594)))
(assert (= x697 (or (and x808 (not x3056)) x2482 (and x2862 (not x911)) (and (not x1337) x256) (and x2959 (not x129)))))
(assert (x107 x2130))
(assert (= (x33 x2553) 0))
(assert (= (x2018 x67) (ite (and (not x2476) x1866) (x2232 x67) (x1379 x67))))
(assert (x107 x2433))
(assert (= (ite (= x1873 x1745) x585 (x2580 x1873)) (x1328 x1873)))
(assert (x107 x1446))
(assert (= (ite (and x682 x2759) (x2795 x2477) (x2138 x2477)) (x798 x2477)))
(assert (x107 x2439))
(assert (x107 x3048))
(assert (= (ite (= x677 x2546) x2612 (x1762 x2546)) (x1090 x2546)))
(assert (x107 x1018))
(assert (x107 x1232))
(assert (= (x1762 x436) (ite (= x436 x59) x1209 (x1340 x436))))
(assert (= (ite (= x517 x1484) x1914 (x2939 x1484)) (x2539 x1484)))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x1544) (x1059 x1544)) (ite (and x135 x2374) (x205 x1544) (ite (and x2850 x3004) (x1777 x1544) (x2338 x1544)))) (x2997 x1544)))
(assert (= (x1325 x86) (ite (= x1638 x86) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x86))))
(assert (x107 x756))
(assert (= (x2172 x2168) (ite (= x2709 x2168) x2925 (x1370 x2168))))
(assert (= (ite (= x789 x2642) x397 (x1902 x789)) (x2036 x789)))
(assert (= (ite (= x293 x159) 96 (x1952 x293)) (x595 x293)))
(assert (= (ite (= x2298 x483) x3034 (x161 x483)) (x1370 x483)))
(assert (= (ite (= x1803 x1453) x555 (x2602 x1803)) (x918 x1803)))
(assert (x107 x455))
(assert (= (x2993 x1524) (ite (and x1697 x1145) (x939 x1524) (x1686 x1524))))
(assert (= (x2783 x1484) (ite (= x1484 160) x190 (x1314 x1484))))
(assert (= (x1539 x2513) (ite (= x2513 x1583) x1235 (x1450 x2513))))
(assert (= (x1769 x780) (ite (= x2367 x780) x2894 (x2255 x780))))
(assert (= 0 (x33 x1594)))
(assert (= (x1777 x914) (ite (and x2123 (not x208)) (x1845 x914) (x301 x914))))
(assert (= (ite (= x1516 x159) 96 (x1952 x1516)) (x595 x1516)))
(assert (= (x396 x49) (ite (and x3 (not x2376)) (x651 x49) (ite (and (not x150) x1264) (x1769 x49) (ite (and (not x601) x282) (x2255 x49) (ite (and (not x1290) x1733) (x2707 x49) (x326 x49)))))))
(assert (= (x2720 x2546) (ite (= x2546 x972) x1063 (x1903 x2546))))
(assert (= (ite (= x2127 x1642) x3034 (x2328 x1642)) (x1902 x1642)))
(assert (= (x3018 x2594) (ite (= x2594 x3008) x1217 (x340 x2594))))
(assert (x107 x2697))
(assert (= 0 (x1494 (- x961 x2555))))
(assert (= (x915 x97) (ite (and x1335 x2851) (x3018 x97) (ite (and x1301 (not x3047)) (x1317 x97) (x2805 x97)))))
(assert (= (ite (and (not x1970) x29) (x63 x2552) (x692 x2552)) (x1044 x2552)))
(assert (= (ite (= x2406 x1453) x555 (x2602 x2406)) (x918 x2406)))
(assert (= (ite (= x2150 x1068) 96 (x918 x1068)) (x609 x1068)))
(assert (x107 x822))
(assert (= (x939 x1946) (ite (= x1946 x2576) x1279 (x1888 x1946))))
(assert (= (x1450 x1873) (ite (= x1821 x1873) x3034 (x1728 x1873))))
(assert (= (x95 x2477) (ite (= x1661 x2477) x2246 (x1777 x2477))))
(assert (= x1048 (=> (= (= 0 x2274) x2374) (and (=> (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x447) x2374 (= x2201 0) (= x1257 x424)) x1295) (=> (not x2374) x2646)))))
(assert (= (x1810 x2847) (ite (= x1242 x2847) x2639 (x225 x2847))))
(assert (= (x3018 x1909) (ite (= x3008 x1909) x1217 (x340 x1909))))
(assert (= (x2063 x1968) (ite (= x1348 x1968) x542 (x2394 x1968))))
(assert (= (x1044 x2597) (ite (and (not x1970) x29) (x63 x2597) (x692 x2597))))
(assert (= (ite (= x677 x424) x2612 (x1762 x424)) (x1090 x424)))
(assert (x107 x1233))
(assert (x107 x2363))
(assert (x107 x2914))
(assert (= (ite (= x1348 x3011) x542 (x2394 x3011)) (x2063 x3011)))
(assert (= (ite (and (not x2299) x2775) (x795 x2991) (x1613 x2991)) (x2338 x2991)))
(assert (= (x2259 x86) (ite (= x86 x115) x2357 (x1427 x86))))
(assert (x107 x2827))
(assert (x107 x1549))
(assert (= (ite (= x2717 x780) x555 (x2526 x2717)) (x1952 x2717)))
(assert (x107 x1695))
(assert (x107 x3001))
(assert (x107 x190))
(assert (= (ite (and x817 x2655) (x1534 x2552) (ite (and x1941 (not x1834)) (x887 x2552) (x151 x2552))) (x423 x2552)))
(assert (= (x1265 x857) (ite (= x857 x2635) x1168 (x2980 x857))))
(assert (= (ite (= x766 x2847) x1423 (x2397 x2847)) (x2073 x2847)))
(assert (= (x2931 x2751) (ite (= x2751 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2751))))
(assert (x107 x2445))
(assert (= (or (and x1624 (not x2230)) (and x2588 (not x1096)) (and x2860 (not x2004)) x773 (and x1170 (not x1332))) x2862))
(assert (= (x1340 x2597) (ite (= x2597 x2454) x823 (x245 x2597))))
(assert (= (ite (= x350 x2597) x1558 (x12 x2597)) (x2950 x2597)))
(assert (= (x33 x1484) 0))
(assert (= (x1777 x1516) (ite (and x2123 (not x208)) (x1845 x1516) (x301 x1516))))
(assert (x107 x2410))
(assert (x107 x734))
(assert (= (ite (and (not x2933) x1798) (x125 x370) (ite (and (not x969) x77) (x657 x370) (ite (and x2091 (not x1421)) (x1226 x370) (ite (and x697 (not x2706)) (x2950 x370) (x2504 x370))))) (x63 x370)))
(assert (= (x2255 x2168) (ite (= x2168 x499) x2188 (x2707 x2168))))
(assert (= (ite (= x1909 224) x770 (x302 x1909)) (x2995 x1909)))
(assert (= (x2073 x766) x1423))
(assert (= (x1340 x2817) (ite (= x2817 x2454) x823 (x245 x2817))))
(assert (= x2578 (=> (and (= x2043 (x2993 x86)) (= x2019 (< 0 x2043))) (and (=> (and (not x2019) (= x674 x1195)) x886) (=> x2019 x927)))))
(assert (= (ite (= x824 x2546) x1666 (x902 x2546)) (x801 x2546)))
(assert (= (ite (= x115 x350) x1558 (x12 x115)) (x2950 x115)))
(assert (= (x1314 x261) (ite (= x261 128) x1725 (x33 x261))))
(assert (= (ite (= x49 x1318) x1964 (x715 x49)) (x1534 x49)))
(assert (x107 x1580))
(assert (= (ite (= x488 x420) x952 (x1769 x488)) (x651 x488)))
(assert (x107 x2085))
(assert (= (x396 x1909) (ite (and x3 (not x2376)) (x651 x1909) (ite (and x1264 (not x150)) (x1769 x1909) (ite (and x282 (not x601)) (x2255 x1909) (ite (and (not x1290) x1733) (x2707 x1909) (x326 x1909)))))))
(assert (= (ite (= x261 x1083) x367 (x2880 x261)) (x2795 x261)))
(assert (= (x1494 (- x1873 x2555)) 0))
(assert (= (x2600 (x348 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (x107 x147))
(assert (= (ite (= x943 x1453) x555 (x2602 x943)) (x918 x943)))
(assert (= (ite (and x29 x2105) (x593 x483) (x1044 x483)) (x2426 x483)))
(assert (= (x2255 x294) (ite (= x294 x499) x2188 (x2707 x294))))
(assert (= (ite (= x1318 x433) x1964 (x715 x433)) (x1534 x433)))
(assert (= (ite (= x246 x115) x1037 (x807 x115)) (x2159 x115)))
(assert (= (x1370 x293) (ite (= x293 x2298) x3034 (x161 x293))))
(assert (= (x1451 x1706) (ite (= x2252 x1706) x840 (x2764 x1706))))
(assert (= (ite (= x261 x501) x3030 (x1531 x261)) (x805 x261)))
(assert (= (ite (and (not x2299) x2775) (x795 x2594) (x1613 x2594)) (x2338 x2594)))
(assert (x107 x2297))
(assert (x405 x2605))
(assert (= (x2073 x874) (ite (= x766 x874) x1423 (x2397 x874))))
(assert (= (x33 x2406) 0))
(assert (x107 x964))
(assert (= (x104 x2597) (ite (= x2597 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2597))))
(assert (x107 x983))
(assert (= (or x1115 (and x710 (not x1177))) x41))
(assert (x107 x2361))
(assert (= (ite (and (not x208) x2123) (x1845 x267) (x301 x267)) (x1777 x267)))
(assert (= (x915 x2991) (ite (and x1335 x2851) (x3018 x2991) (ite (and x1301 (not x3047)) (x1317 x2991) (x2805 x2991)))))
(assert (= (x1769 x2552) (ite (= x2552 x2367) x2894 (x2255 x2552))))
(assert (= (ite (= x1594 x2425) x859 (x103 x1594)) (x1819 x1594)))
(assert (= (x805 x1453) (ite (= x1453 x501) x3030 (x1531 x1453))))
(assert (x107 x1594))
(assert (x107 x1306))
(assert (= (ite (= x1318 x67) x1964 (x715 x67)) (x1534 x67)))
(assert (x107 x984))
(assert (= (ite (= x2725 x1453) x555 (x2602 x2725)) (x918 x2725)))
(assert (= (x63 x483) (ite (and x1798 (not x2933)) (x125 x483) (ite (and x77 (not x969)) (x657 x483) (ite (and (not x1421) x2091) (x1226 x483) (ite (and (not x2706) x697) (x2950 x483) (x2504 x483)))))))
(assert (= (ite (= x2252 x1267) x840 (x2764 x1267)) (x1451 x1267)))
(assert (= (ite (= x2876 128) x1725 (x33 x2876)) (x1314 x2876)))
(assert (= (ite (= x2833 x2150) 96 (x918 x2833)) (x609 x2833)))
(assert (x107 x2686))
(assert (x107 x1406))
(assert (= x2123 (and (not x2097) x1892)))
(assert (= (ite (and x2851 x1335) (x3018 x2477) (ite (and (not x3047) x1301) (x1317 x2477) (x2805 x2477))) (x915 x2477)))
(assert (= x2442 true))
(assert (= (x2397 x1706) (ite (and (not x763) x2810) (x2167 x1706) (x298 x1706))))
(assert (= (x609 x2991) (ite (= x2991 x2150) 96 (x918 x2991))))
(assert (= (x2707 x267) (ite (= x267 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x267))))
(assert (x405 x1627))
(assert (x107 x2400))
(assert (= (ite (= x1642 x227) x22 (x56 x1642)) (x902 x1642)))
(assert (= (ite (and x2759 x682) (x2795 x2298) (x2138 x2298)) (x798 x2298)))
(assert (= (x1819 x2387) (ite (= x2387 x2425) x859 (x103 x2387))))
(assert (= (x1903 x655) (ite (= x655 x1809) x50 (x2159 x655))))
(assert (= 0 (x33 x294)))
(assert (= (ite (= x1136 x2298) x3034 (x161 x1136)) (x1370 x1136)))
(assert (= (x1317 x433) (ite (= x2359 x433) x2277 (x3037 x433))))
(assert (= (x1845 x67) (ite (and (not x2097) x896 x1892) (x2539 x67) (x2300 x67))))
(assert (= (x1314 x1780) (ite (= x1780 128) x1725 (x33 x1780))))
(assert (x107 x1925))
(assert (= (x595 x846) (ite (= x846 x159) 96 (x1952 x846))))
(assert (= (ite (= x2962 x1909) x950 (x1429 x1909)) (x245 x1909)))
(assert (= (ite (and (not x2376) x3) (x651 x2546) (ite (and (not x150) x1264) (x1769 x2546) (ite (and (not x601) x282) (x2255 x2546) (ite (and x1733 (not x1290)) (x2707 x2546) (x326 x2546))))) (x396 x2546)))
(assert (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1592 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x221 (=> (and (= (x864 (+ x1615 32)) x267) (= (x2397 x1615) x1574) (= (not (< 1 x1574)) x861) (= x1844 (x2397 x1615)) (= x2066 (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1249))) (= x1249 x2840) (not (< x2066 0)) (< 0 x1844) (= x1249 (x2397 x267))) (and x861 (=> (= x838 x2840) x2286)))))
(assert (x107 x1990))
(assert (x107 x1972))
(assert (x107 x2322))
(assert (= (x807 x1946) (ite (= x1946 x2107) x315 (x533 x1946))))
(assert (= (ite (= x517 x2991) x1914 (x2939 x2991)) (x2539 x2991)))
(assert (= (ite (= x1453 x1661) x2246 (x1777 x1453)) (x95 x1453)))
(assert (= (x1769 x483) (ite (= x483 x2367) x2894 (x2255 x483))))
(assert (= (ite (= x2128 x1267) x1897 (x657 x1267)) (x125 x1267)))
(assert (= (ite (= x261 x59) x1209 (x1340 x261)) (x1762 x261)))
(assert (= (x1903 x2168) (ite (= x2168 x1809) x50 (x2159 x2168))))
(assert (= (x2795 x866) (ite (= x1083 x866) x367 (x2880 x866))))
(assert (= (ite (= x2107 x2477) x315 (x533 x2477)) (x807 x2477)))
(assert (= (ite (= x2359 x1453) x2277 (x3037 x1453)) (x1317 x1453)))
(assert (= (x2539 x1387) (ite (= x1387 x517) x1914 (x2939 x1387))))
(assert (x107 x2246))
(assert (= (ite (= x467 x629) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x629)) (x104 x629)))
(assert (= (ite (= x2709 x2217) x2925 (x1370 x2217)) (x2172 x2217)))
(assert (x107 x2586))
(assert (= x1502 (=> (= x324 (= x731 0)) (and (=> (and (= x1987 x674) (= 0 x62) x324 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1904)) x2732) (=> (not x324) x1814)))))
(assert (= (x807 x1267) (ite (= x1267 x2107) x315 (x533 x1267))))
(assert (= (x423 x1483) (ite (and x2655 x817) (x1534 x1483) (ite (and (not x1834) x1941) (x887 x1483) (x151 x1483)))))
(assert (= (x33 x364) 0))
(assert (= (x104 x2217) (ite (= x467 x2217) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2217))))
(assert (= (ite (and (not x208) x2123) (x1845 x961) (x301 x961)) (x1777 x961)))
(assert (x107 x1859))
(assert (= (ite (= x86 x1661) x2246 (x1777 x86)) (x95 x86)))
(assert (= 0 (x33 x1972)))
(assert (= (x2720 x2869) (ite (= x972 x2869) x1063 (x1903 x2869))))
(assert (= (x887 x267) (ite (= x267 x1231) x775 (x44 x267))))
(assert (= (ite (and x1335 x2851) (x3018 x1068) (ite (and x1301 (not x3047)) (x1317 x1068) (x2805 x1068))) (x915 x1068)))
(assert (= (x2931 x2406) (ite (= x3023 x2406) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2406))))
(assert (= (ite (= x59 x115) x1209 (x1340 x115)) (x1762 x115)))
(assert (= (x2950 x2298) (ite (= x350 x2298) x1558 (x12 x2298))))
(assert (= 0 (x1494 (- x2876 x2555))))
(assert (x107 x2792))
(assert (x107 x24))
(assert (= (x1777 x1594) (ite (and (not x208) x2123) (x1845 x1594) (x301 x1594))))
(assert (= (ite (= 160 x822) x190 (x1314 x822)) (x2783 x822)))
(assert (= (x1769 x2406) (ite (= x2406 x2367) x2894 (x2255 x2406))))
(assert (x107 x2108))
(assert (= (x2189 x1873) (ite (= x1873 x1615) x2726 (x2268 x1873))))
(assert (= (ite (= x780 x914) x555 (x2526 x914)) (x1952 x914)))
(assert (= (x1952 x370) (ite (= x780 x370) x555 (x2526 x370))))
(assert (= (x2063 x2597) (ite (= x1348 x2597) x542 (x2394 x2597))))
(assert (= (x915 x1041) (ite (and x1335 x2851) (x3018 x1041) (ite (and x1301 (not x3047)) (x1317 x1041) (x2805 x1041)))))
(assert (= (x2997 x1946) (ite x1752 (ite (and (not x2913) x1127) (x205 x1946) (x1059 x1946)) (ite (and x2374 x135) (x205 x1946) (ite (and x2850 x3004) (x1777 x1946) (x2338 x1946))))))
(assert (= (x2018 x49) (ite (and x1866 (not x2476)) (x2232 x49) (x1379 x49))))
(assert (= (x798 x2751) (ite (and x682 x2759) (x2795 x2751) (x2138 x2751))))
(assert (x107 x2217))
(assert (= (x224 x1706) (ite (= x1706 x816) x696 (x2011 x1706))))
(assert (= x1115 (and x710 x1177)))
(assert (x107 x1209))
(assert (= (ite (= x2406 x115) x2357 (x1427 x2406)) (x2259 x2406)))
(assert (= (ite (= x370 x2367) x2894 (x2255 x370)) (x1769 x370)))
(assert (x107 x2774))
(assert (= (x1314 x488) (ite (= x488 128) x1725 (x33 x488))))
(assert (= (ite (= x2710 x420) x952 (x1769 x2710)) (x651 x2710)))
(assert (= (x1090 x293) (ite (= x677 x293) x2612 (x1762 x293))))
(assert (= (ite (= x2876 x1809) x50 (x2159 x2876)) (x1903 x2876)))
(assert (= (ite (= x2150 x2847) 96 (x918 x2847)) (x609 x2847)))
(assert (= (ite (= x2552 x1821) x3034 (x1728 x2552)) (x1450 x2552)))
(assert (= (x2328 x1068) (ite (and x2926 x923) (x1952 x1068) (ite (and x1236 (not x602)) (x595 x1068) (x1546 x1068)))))
(assert (x107 x1003))
(assert (= (x1782 x294) (ite (and x1979 (not x94)) (x396 x294) (x87 x294))))
(assert (x107 x859))
(assert (= (ite (and x1798 (not x2933)) (x125 x2594) (ite (and (not x969) x77) (x657 x2594) (ite (and (not x1421) x2091) (x1226 x2594) (ite (and (not x2706) x697) (x2950 x2594) (x2504 x2594))))) (x63 x2594)))
(assert (= (x2997 x1594) (ite x1752 (ite (and (not x2913) x1127) (x205 x1594) (x1059 x1594)) (ite (and x135 x2374) (x205 x1594) (ite (and x2850 x3004) (x1777 x1594) (x2338 x1594))))))
(assert (x107 x1880))
(assert (x107 x2053))
(assert (= (x2707 x961) (ite (= x961 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x961))))
(assert (= (ite (and (not x566) x2422 x2821) (x2189 x780) (x168 x780)) (x2167 x780)))
(assert (= (ite (= x2298 x874) x3034 (x161 x874)) (x1370 x874)))
(assert (= (x1325 x2817) (ite (= x2817 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2817))))
(assert (= (ite (= x2359 x2623) x2277 (x3037 x2623)) (x1317 x2623)))
(assert (= x2750 (=> (and (= x1673 (x283 x2552)) (= (x864 (+ 64 x2553)) x1642) (= x3051 (x864 (+ 64 x2061))) (= (< 2 x696) x2198)) (and (=> (and (= x288 x3051) (= x1642 x157) (not x2198) (= 2 x877)) x1354) (=> x2198 x873)))))
(assert (= (ite (and (not x2299) x2775) (x795 x1972) (x1613 x1972)) (x2338 x1972)))
(assert (= (x2159 x1197) (ite (= x246 x1197) x1037 (x807 x1197))))
(assert (= (ite (and x2123 (not x208)) (x1845 x1873) (x301 x1873)) (x1777 x1873)))
(assert (= (x1494 (- x115 x2555)) 0))
(assert (= (x807 x3011) (ite (= x2107 x3011) x315 (x533 x3011))))
(assert (= (x348 29667888499431518244405524310122331055235727797159756471206109933501488824320) (x1592 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (x798 x1661) (ite (and x682 x2759) (x2795 x1661) (x2138 x1661))))
(assert (= (ite (= x3011 x3032) x573 (x890 x3011)) (x2764 x3011)))
(assert (x107 x429))
(assert (= (ite (= x1489 x3011) x1829 (x1668 x3011)) (x130 x3011)))
(assert (= (x302 x2513) (ite (= x2513 192) x2714 (x2783 x2513))))
(assert (= (x245 x1732) (ite (= x1732 x2962) x950 (x1429 x1732))))
(assert (= (=> (and (= (> x2820 0) x730) (not (= 0 x1890)) (= x2820 (x2426 x2298))) (and (=> (and (or (not x235) (and (= (x864 (+ x1821 32)) x675) (= (x2426 x2298) x1258) (< 0 x2789) (= (x2426 x294) x2076) (= x2789 (x2426 x115)) (= (x2426 x97) x2650) (= (x2426 x424) x2868) (> x2868 0) (< 0 x1258) (= (x864 (+ x115 32)) x97) x235)) (or (and (= (x2426 x115) x1529) (= x1041 (x864 (+ x115 32))) (= x89 (x2426 x1041)) (= (not x962) x235) (= (= 0 x89) x962) (< 0 x1529) (not x1675)) (and (= x1675 x235) x1675)) (= (x2426 x294) x1985) (= (x2426 x424) x932) (= x294 (x864 (+ x424 32))) (= (not (= x1985 0)) x1675) (> x932 0) x730) x2044) (=> (not x730) x1307))) x458))
(assert (x107 x2494))
(assert (x107 x193))
(assert (= (ite (= 224 x2869) x770 (x302 x2869)) (x2995 x2869)))
(assert (x107 x2987))
(assert (= (ite (= x866 x517) x1914 (x2939 x866)) (x2539 x866)))
(assert (= (x1090 x115) (ite (= x115 x677) x2612 (x1762 x115))))
(assert (= (ite (and x2775 (not x2299)) (x795 x1882) (x1613 x1882)) (x2338 x1882)))
(assert (= (x2338 x2876) (ite (and (not x2299) x2775) (x795 x2876) (x1613 x2876))))
(assert (= (x423 x1453) (ite (and x2655 x817) (x1534 x1453) (ite (and (not x1834) x1941) (x887 x1453) (x151 x1453)))))
(assert (= (ite (and (not x94) x1979) (x396 x1516) (x87 x1516)) (x1782 x1516)))
(assert (= (x2338 x2387) (ite (and x2775 (not x2299)) (x795 x2387) (x1613 x2387))))
(assert (= (x595 x2594) (ite (= x159 x2594) 96 (x1952 x2594))))
(assert (x107 x403))
(assert (= x2267 (or (and (not x730) x2050) x2530)))
(assert (= (x1265 x2168) (ite (= x2168 x2635) x1168 (x2980 x2168))))
(assert (= (ite (= x2597 x2127) x3034 (x2328 x2597)) (x1902 x2597)))
(assert (= (x2073 x655) (ite (= x766 x655) x1423 (x2397 x655))))
(assert (= (x1777 x1068) (ite (and x2123 (not x208)) (x1845 x1068) (x301 x1068))))
(assert (= (x2172 x961) (ite (= x2709 x961) x2925 (x1370 x961))))
(assert (= (+ (x2600 x1495) 1) (x2600 (x1408 x1495 1))))
(assert (= (x1370 x49) (ite (= x2298 x49) x3034 (x161 x49))))
(assert (= (ite (= x874 x2359) x2277 (x3037 x874)) (x1317 x874)))
(assert (= (x95 x1946) (ite (= x1661 x1946) x2246 (x1777 x1946))))
(assert (= (ite (= x517 x1197) x1914 (x2939 x1197)) (x2539 x1197)))
(assert (= (x2539 x1946) (ite (= x517 x1946) x1914 (x2939 x1946))))
(assert (x107 x1259))
(assert (= (x205 x2513) (ite (and x724 (not x2377)) (x798 x2513) (x346 x2513))))
(assert (= (ite (= x3023 x293) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x293)) (x2931 x293)))
(assert (x107 x2092))
(assert (= (x2338 x182) (ite (and (not x2299) x2775) (x795 x182) (x1613 x182))))
(assert (x107 x2871))
(assert (= (x970 x1946) (ite (= x1846 x1946) x500 (x559 x1946))))
(assert (x107 x413))
(assert (= (ite (= x1068 x1661) x2246 (x1777 x1068)) (x95 x1068)))
(assert (= (ite (= x2553 x1453) x555 (x2602 x2553)) (x918 x2553)))
(assert (x107 x481))
(assert (x107 x1914))
(assert (x107 x1197))
(assert (= (x609 x1544) (ite (= x2150 x1544) 96 (x918 x1544))))
(assert (= (x104 x966) (ite (= x966 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x966))))
(assert (= (+ 1 (x2600 x39)) (x2600 (x1408 x39 1))))
(assert (x107 x1383))
(assert (= (x798 x961) (ite (and x682 x2759) (x2795 x961) (x2138 x961))))
(assert (x107 x2148))
(assert (= (ite (and x724 (not x2377)) (x798 x294) (x346 x294)) (x205 x294)))
(assert (x107 x1123))
(assert (= (ite (and (not x94) x1979) (x396 x436) (x87 x436)) (x1782 x436)))
(assert (x107 x2274))
(assert (= (x2338 x1946) (ite (and (not x2299) x2775) (x795 x1946) (x1613 x1946))))
(assert (= (ite (= x1807 x1909) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1909)) (x2707 x1909)))
(assert (x107 x1771))
(assert (x107 x823))
(assert (= (x2255 x293) (ite (= x499 x293) x2188 (x2707 x293))))
(assert (= (x2189 x1946) (ite (= x1615 x1946) x2726 (x2268 x1946))))
(assert (x107 x2490))
(assert (= (x125 x483) (ite (= x483 x2128) x1897 (x657 x483))))
(assert (= (ite (and (not x2097) x1892 x896) (x2539 x2597) (x2300 x2597)) (x1845 x2597)))
(assert (= (x798 x867) (ite (and x682 x2759) (x2795 x867) (x2138 x867))))
(assert (= (ite (= x2552 x1242) x2639 (x225 x2552)) (x1810 x2552)))
(assert (x2478 x953))
(assert (= (ite (= x1318 x629) x1964 (x715 x629)) (x1534 x629)))
(assert (= x2999 (=> (and (= x2124 x1904) (< (* 1000000000000000000 x838) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* 1000000000000000000 x727) x1808) (< (* x727 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x62 x2963) (= (- (/ x1808 x731) (uninterp_frac x1808 x731)) x2963) (= x1012 x1987) (= (- (/ x2815 x731) (uninterp_frac x2815 x731)) x2124) (= (* 1000000000000000000 x838) x2815)) x2732)))
(assert (= (x245 x267) (ite (= x267 x2962) x950 (x1429 x267))))
(assert (= (x1314 x1695) (ite (= x1695 128) x1725 (x33 x1695))))
(assert (= (ite (= 128 x294) x1725 (x33 x294)) (x1314 x294)))
(assert (x107 x933))
(assert (= (x918 x1732) (ite (= x1732 x1453) x555 (x2602 x1732))))
(assert (= (ite (= x2150 x436) 96 (x918 x436)) (x609 x436)))
(assert (= (x95 x488) (ite (= x1661 x488) x2246 (x1777 x488))))
(assert (= x761 (=> (and (= x422 (x1090 x2710)) (= x259 (x864 (+ 64 x677))) (= (not (< 4 x950)) x2669) (= x1707 (x3026 1461501637330902918203684832716283019655932542975 x422)) (= (x864 (+ 64 x1909)) x1000)) (and x2669 (=> (and (= x259 x2107) (= 4 x2481) (= x1000 x1102)) x1047)))))
(assert (x107 x1097))
(assert (= (x2397 x913) (ite (and x2810 (not x763)) (x2167 x913) (x298 x913))))
(assert (x107 x1415))
(assert (= (ite (= x655 x2642) x397 (x1902 x655)) (x2036 x655)))
(assert (x107 x2144))
(assert (= (x2720 x2817) (ite (= x2817 x972) x1063 (x1903 x2817))))
(assert (= (x1317 x2597) (ite (= x2597 x2359) x2277 (x3037 x2597))))
(assert (= (x2172 x2594) (ite (= x2594 x2709) x2925 (x1370 x2594))))
(assert (= (x1539 x1197) (ite (= x1197 x1583) x1235 (x1450 x1197))))
(assert (= (or (and (not x645) x1474) (and x978 (not x4)) x409 (and (not x132) x2776) (and (not x15) x648)) x2279))
(assert (= (x1819 x1257) (ite (= x2425 x1257) x859 (x103 x1257))))
(assert (x107 x2095))
(assert (= (x3018 x655) (ite (= x3008 x655) x1217 (x340 x655))))
(assert (x107 x2181))
(assert (x107 x2816))
(assert (= (ite (and x2775 (not x2299)) (x795 x2597) (x1613 x2597)) (x2338 x2597)))
(assert (x107 x2729))
(assert (= (ite (= x2962 x97) x950 (x1429 x97)) (x245 x97)))
(assert (= (ite (and (not x2299) x2775) (x795 x2106) (x1613 x2106)) (x2338 x2106)))
(assert (= (x2600 (x1592 x1864)) x1864))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x97) (x1059 x97)) (ite (and x135 x2374) (x205 x97) (ite (and x3004 x2850) (x1777 x97) (x2338 x97)))) (x2997 x97)))
(assert (= (ite (= x3011 x2962) x950 (x1429 x3011)) (x245 x3011)))
(assert (= (ite (= x246 x629) x1037 (x807 x629)) (x2159 x629)))
(assert (x107 x2974))
(assert (= (x3018 x2751) (ite (= x3008 x2751) x1217 (x340 x2751))))
(assert (= (x353 x1267) (ite (= x1267 x1742) x848 (x1767 x1267))))
(assert (x107 x2538))
(assert (= (x595 x2710) (ite (= x159 x2710) 96 (x1952 x2710))))
(assert (= (ite (= x1809 x436) x50 (x2159 x436)) (x1903 x436)))
(assert (x107 x770))
(assert (= (ite (= x1197 x2367) x2894 (x2255 x1197)) (x1769 x1197)))
(assert (x405 x2603))
(assert (= (ite (= x1136 x159) 96 (x1952 x1136)) (x595 x1136)))
(assert (= (x2539 x2751) (ite (= x2751 x517) x1914 (x2939 x2751))))
(assert (= (ite (= x2552 x1615) x2726 (x2268 x2552)) (x2189 x2552)))
(assert (x107 x2817))
(assert (x107 x389))
(assert (x107 x186))
(assert (= (ite (= x1594 x2576) x1279 (x1888 x1594)) (x939 x1594)))
(assert (= (ite (= x1638 x433) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x433)) (x1325 x433)))
(assert (= (ite (= x780 x1780) x555 (x2526 x1780)) (x1952 x1780)))
(assert (x107 x2896))
(assert (= x2785 true))
(assert (x107 x2192))
(assert (= (x2018 x267) (ite (and (not x2476) x1866) (x2232 x267) (x1379 x267))))
(assert (x107 x286))
(assert (= (x1777 x1689) (ite (and (not x208) x2123) (x1845 x1689) (x301 x1689))))
(assert (= (=> (and (= x539 x863) (= (x2394 x2725) x539) (= x542 (x2394 x182)) (= x1046 (uninterp_mod (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x182 (x2394 x1524)) (= x1708 (= 0 x542)) (= x359 (x3026 1461501637330902918203684832716283019655932542975 x60)) (= (x2394 x2309) x863) (= (x2394 x1524) x2725) (= x1968 (x864 (+ 32 x2035))) (= x1584 (x3026 1461501637330902918203684832716283019655932542975 x2825)) (not (< 18446744073709551615 x542)) (= x2006 (x864 (+ 32 x1046))) (= (x864 (+ x1348 x2006)) x2879) (= x1021 (x864 (+ x1524 64))) (= 1 x974) (= x913 (x864 (+ 64 x1968))) (= (x864 (+ 160 x2035)) x1348) (= x1524 (x864 (+ x2035 64))) (= x2309 (x2394 x913)) (or (and (not x1708) (= (uninterp_mod (* x542 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2120) (= (x864 (+ 192 x2035)) x821)) x1708)) x2791) x2723))
(assert (= (ite (= x424 x780) x2700 (x2997 x780)) (x2204 x780)))
(assert (x107 x1992))
(assert (= (=> (and (= (> x2557 x1628) x2008) (= x366 x1250) (= 0 x2575) (= x582 x1224) (= x2360 (x1391 (x1592 274184521717934524641157099916833587223))) (not (= 0 x2593)) (not x2109) (= x2690 x2916) (= x2703 x1346) (or (not x2140) (and (= (= 0 x920) x1013) (= x1139 (x864 (+ 32 x1386))) (= (x2231 x1139) x920) (> x920 0) (= x1026 (x2231 x1386)) (not (or (> x1026 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1026) true) (> 32 x1026)))) (= (not x1013) x404) x2140 (= x548 (ite x404 1 0)) (= x548 x920))) (= x1032 (= x2575 0)) (= x1555 (x1391 (x1592 x2155))) (= x2593 0) (= x605 (x2231 x1386)) (= (and (<= 0 x2360) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1555)) x2109) (= x2140 (> x605 0)) (= x2491 x903) (or (and x2008 (= (x864 (+ x1628 x546)) x171)) (not x2008)) (or (and (= x2684 x903) (not x1032) (= x1627 (x864 (+ 63 x2575))) (= x2335 (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1627)) (= (x864 (+ x546 x2335)) x2684) (= x2049 (x864 (+ 96 x1804))) (= x546 x1386)) (and (= x1386 96) x1032 (= x546 x903)))) x2442) x1186))
(assert (= (ite (= x3023 x182) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x182)) (x2931 x182)))
(assert (x107 x2595))
(assert (x107 x1293))
(assert (x107 x1269))
(assert (= (ite (= x655 x1615) x2726 (x2268 x655)) (x2189 x655)))
(assert (x107 x230))
(assert (= (x2189 x780) (ite (= x1615 x780) x2726 (x2268 x780))))
(assert (= (x423 x1946) (ite (and x817 x2655) (x1534 x1946) (ite (and (not x1834) x1941) (x887 x1946) (x151 x1946)))))
(assert (= (x2255 x2847) (ite (= x2847 x499) x2188 (x2707 x2847))))
(assert (= (and x2694 x2781) x2301))
(assert (= (ite (and x3 (not x2376)) (x651 x3011) (ite (and x1264 (not x150)) (x1769 x3011) (ite (and x282 (not x601)) (x2255 x3011) (ite (and (not x1290) x1733) (x2707 x3011) (x326 x3011))))) (x396 x3011)))
(assert (= (ite (= x455 x3008) x1217 (x340 x455)) (x3018 x455)))
(assert (= (ite (= x2106 x2359) x2277 (x3037 x2106)) (x1317 x2106)))
(assert (= (ite (and (not x2377) x724) (x798 x1873) (x346 x1873)) (x205 x1873)))
(assert (= (x2707 x1041) (ite (= x1041 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1041))))
(assert (= (x125 x2546) (ite (= x2546 x2128) x1897 (x657 x2546))))
(assert (x107 x919))
(assert (= (x104 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880))
(assert (= (x2600 (x1592 x794)) x794))
(assert (= (x651 x1946) (ite (= x1946 x420) x952 (x1769 x1946))))
(assert (= (and x2208 x2116) x760))
(assert (= (x609 x97) (ite (= x2150 x97) 96 (x918 x97))))
(assert (= (x2995 x2623) (ite (= 224 x2623) x770 (x302 x2623))))
(assert (x107 x2710))
(assert (= (x915 x1732) (ite (and x2851 x1335) (x3018 x1732) (ite (and (not x3047) x1301) (x1317 x1732) (x2805 x1732)))))
(assert (= (ite (= x2128 x1873) x1897 (x657 x1873)) (x125 x1873)))
(assert (= (x2189 x3011) (ite (= x1615 x3011) x2726 (x2268 x3011))))
(assert (= (x1450 x1946) (ite (= x1821 x1946) x3034 (x1728 x1946))))
(assert (= (=> (and (= (x864 (+ 64 x3032)) x1911) (= x2208 (< 3 x500)) (= (x2764 x370) x297) (= (x864 (+ 64 x655)) x1197) (= x840 (x3026 1461501637330902918203684832716283019655932542975 x297))) (and (=> (and (not x2208) (= x2310 x1197) (= x1489 x1911) (= x2921 3)) x1753) (=> x2208 x2486))) x2689))
(assert (= (x595 x1803) (ite (= x159 x1803) 96 (x1952 x1803))))
(assert (= (ite (and x29 x2105) (x593 x424) (x1044 x424)) (x2426 x424)))
(assert (x107 x2598))
(assert (x107 x2017))
(assert (x107 x38))
(assert (x107 x1597))
(assert (= x978 x1159))
(assert (= x2470 (or x2661 (and x2851 x1335))))
(assert (= (x1902 x97) (ite (= x2127 x97) x3034 (x2328 x97))))
(assert (= (ite (= x629 x2107) x315 (x533 x629)) (x807 x629)))
(assert (x107 x2568))
(assert (= (=> (= x716 (< 1 x53)) (and (=> (and (not x716) (= 10 x2965) (= 1 x2729)) x1078) (=> x716 x1731))) x1607))
(assert (= x388 (=> (and (= x2499 (x21 x1017)) (= x1246 (not (< 1 x2499))) (= x1017 (x21 x1689))) (and x1246 (=> (= x1175 x1083) x2115)))))
(assert (= x2852 (=> (and (= (x864 (+ 64 x2817)) x1873) (= x2005 (> x626 1)) (= (x864 (+ 64 x1508)) x478) (= (x1215 x629) x1463)) (and (=> (and (= x478 x2319) (= x1925 x1873) (= x2577 1) (not x2005)) x1658) (=> x2005 x2994)))))
(assert (x107 x2857))
(assert (= (x1534 x1197) (ite (= x1318 x1197) x1964 (x715 x1197))))
(assert (= (x1029 x2477) (ite (and x2949 (not x2019)) (x2993 x2477) (x2001 x2477))))
(assert (x107 x2458))
(assert (= (x1314 x1909) (ite (= x1909 128) x1725 (x33 x1909))))
(assert (= (x918 x2048) (ite (= x1453 x2048) x555 (x2602 x2048))))
(assert (= (x2159 x488) (ite (= x246 x488) x1037 (x807 x488))))
(assert (= (x609 x67) (ite (= x2150 x67) 96 (x918 x67))))
(assert (= (ite (= x914 x2298) x3034 (x161 x914)) (x1370 x914)))
(assert (= (x1340 x67) (ite (= x2454 x67) x823 (x245 x67))))
(assert (= (ite (= x1946 x1745) x585 (x2580 x1946)) (x1328 x1946)))
(assert (= (x1845 x2298) (ite (and (not x2097) x1892 x896) (x2539 x2298) (x2300 x2298))))
(assert (= (ite (= x1873 x2298) x3034 (x161 x1873)) (x1370 x1873)))
(assert (x107 x1299))
(assert (= (ite (= x2962 x483) x950 (x1429 x483)) (x245 x483)))
(assert (= (ite (= x2356 x2971) x2989 (x1222 x2971)) (x552 x2971)))
(assert (x107 x2146))
(assert (= (ite (= x677 x1136) x2612 (x1762 x1136)) (x1090 x1136)))
(assert (= (x918 x629) (ite (= x629 x1453) x555 (x2602 x629))))
(assert (= (x1314 x685) (ite (= x685 128) x1725 (x33 x685))))
(assert (x107 x1484))
(assert (= (ite (and x1335 x2851) (x3018 x2552) (ite (and x1301 (not x3047)) (x1317 x2552) (x2805 x2552))) (x915 x2552)))
(assert (= (x1226 x2546) (ite (= x2546 x1261) x2738 (x2950 x2546))))
(assert (= (x2600 (x1408 x2601 2)) (+ 2 (x2600 x2601))))
(assert (= (x1534 x2513) (ite (= x2513 x1318) x1964 (x715 x2513))))
(assert (= (ite (= x467 x2725) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2725)) (x104 x2725)))
(assert (= (ite (= x1873 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1873)) (x2707 x1873)))
(assert (x107 x863))
(assert (= (ite (= x655 128) x1725 (x33 x655)) (x1314 x655)))
(assert (= (x1317 x294) (ite (= x294 x2359) x2277 (x3037 x294))))
(assert (= (ite (= x517 x2553) x1914 (x2939 x2553)) (x2539 x2553)))
(assert (= (x1370 x1267) (ite (= x2298 x1267) x3034 (x161 x1267))))
(assert (= (ite (= x2710 224) x770 (x302 x2710)) (x2995 x2710)))
(assert (= (x2993 x1706) (ite (and x1145 x1697) (x939 x1706) (x1686 x1706))))
(assert (x607 x1791 x2542 x1772 x2436))
(assert (= (x225 x1706) (ite (= x796 x1706) x2187 (x801 x1706))))
(assert (= (ite (and x923 x2926) (x1952 x822) (ite (and x1236 (not x602)) (x595 x822) (x1546 x822))) (x2328 x822)))
(assert (= (ite (= x2367 x655) x2894 (x2255 x655)) (x1769 x655)))
(assert (= (ite (= x2552 x424) x2700 (x2997 x2552)) (x2204 x2552)))
(assert (= (x104 x2309) (ite (= x467 x2309) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2309))))
(assert (= (x1160 x483) (ite (= x483 x478) x1445 (x1996 x483))))
(assert (x107 x1687))
(assert (= (x2036 x2991) (ite (= x2991 x2642) x397 (x1902 x2991))))
(assert (x607 x452 x2321 x2797 x2375))
(assert (= (ite (= x3023 x2876) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2876)) (x2931 x2876)))
(assert (x107 x1349))
(assert (= (ite (and x2851 x1335) (x3018 x67) (ite (and (not x3047) x1301) (x1317 x67) (x2805 x67))) (x915 x67)))
(assert (= (x1090 x436) (ite (= x677 x436) x2612 (x1762 x436))))
(assert (x107 x385))
(assert (= (x887 x370) (ite (= x370 x1231) x775 (x44 x370))))
(assert (= (x3018 x293) (ite (= x293 x3008) x1217 (x340 x293))))
(assert (= (x1534 x1594) (ite (= x1318 x1594) x1964 (x715 x1594))))
(assert (= (=> (and (= x867 (x2232 x1524)) (= x1629 (x2232 x867)) (= x2476 (< 0 x1629))) (=> (and (= x2879 x1638) (not x2476)) x1122)) x2791))
(assert (= (x1777 x1909) (ite (and (not x208) x2123) (x1845 x1909) (x301 x1909))))
(assert (= (ite (= x1136 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1136)) (x2707 x1136)))
(assert (= (x918 x1972) (ite (= x1453 x1972) x555 (x2602 x1972))))
(assert (= (x1494 (- x780 x2555)) 0))
(assert (= (ite (= x1807 x1387) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1387)) (x2707 x1387)))
(assert (x2478 274184521717934524641157099916833587223))
(assert (= (x1494 (- x433 x2555)) 0))
(assert (= (ite (= x1547 x2477) x1463 (x1215 x2477)) (x1996 x2477)))
(assert (= (x2720 x455) (ite (= x455 x972) x1063 (x1903 x455))))
(assert (= (ite (= x1780 160) x190 (x1314 x1780)) (x2783 x1780)))
(assert (= (and x817 (not x2655)) x1941))
(assert (= (x2950 x424) (ite (= x350 x424) x1558 (x12 x424))))
(assert (x107 x2596))
(assert (= (x552 x2278) (ite (= x2278 x2356) x2989 (x1222 x2278))))
(assert (x107 x1168))
(assert (= x1295 (=> (= (not (< x2201 x447)) x343) (and (=> (and (= x3050 x2624) (= x2081 x424) (= x3050 (x864 (+ x424 x2886))) (not (< 18446744073709551615 x2700)) (= x709 (uninterp_mod (* x2700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x951 x1768) (= x2700 (x2997 x2298)) (= (x864 (+ x709 32)) x2886) (= x1330 x306) (= (= x2700 0) x2417) (or x2417 (and (= x116 (uninterp_mod (* 32 x2700) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2417) (= x2828 (x864 (+ x424 32))))) (= x258 x424) x343) x672) (=> (and (= (x864 (+ x2922 x115)) x467) (= x1372 (= x2357 0)) (or x1372 (and (= (x864 (+ 32 x424)) x2362) (not x1372) (= x2754 (uninterp_mod (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x864 (+ 32 x1382)) x1562) (= (x3026 1461501637330902918203684832716283019655932542975 x60) x131) (= (x2997 x2298) x2357) (not (< 18446744073709551615 x2357)) (= x115 (x864 (+ x424 x1562))) (= x1382 (uninterp_mod (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (= x1030 x711) (not x1353)) (and (= x1030 1) x1353 (> 4294967296 x2929))) (= x1573 (uninterp_mod (* x2357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1353 (< 0 x711)) (not (= x2812 0)) (or (and (= (uninterp_mod (* 32 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3001) (not x305) (= (x864 (+ x115 32)) x1323)) x305) (not x343) (= (x864 (+ x1573 32)) x2922) (= x305 (= 0 x2357)) (= (x1942 (x1592 x131)) x2812)) x2459)))))
(assert (= (ite (= x629 x816) x696 (x2011 x629)) (x224 x629)))
(assert (= (ite (= x2642 x455) x397 (x1902 x455)) (x2036 x455)))
(assert (x107 x203))
(assert (= (x2795 x780) (ite (= x780 x1083) x367 (x2880 x780))))
(assert (= (ite (and (not x208) x2123) (x1845 x1706) (x301 x1706)) (x1777 x1706)))
(assert (x107 x1897))
(assert (= (ite (and (not x2376) x3) (x651 x2552) (ite (and (not x150) x1264) (x1769 x2552) (ite (and x282 (not x601)) (x2255 x2552) (ite (and x1733 (not x1290)) (x2707 x2552) (x326 x2552))))) (x396 x2552)))
(assert (= (ite (= x1809 x780) x50 (x2159 x780)) (x1903 x780)))
(assert (= (x1903 x1873) (ite (= x1809 x1873) x50 (x2159 x1873))))
(assert (x405 x1511))
(assert (= (x805 x966) (ite (= x966 x501) x3030 (x1531 x966))))
(assert (x107 x1219))
(assert (= (x2189 x2513) (ite (= x1615 x2513) x2726 (x2268 x2513))))
(assert (= x523 (=> (and (= (x1700 x874) x862) (= (x1700 x1524) x874) (= (< 0 x862) x2323)) (=> (and (= x3046 x2576) (not x2323)) x2930))))
(assert (x107 x809))
(assert (= (ite (= x1231 x2513) x775 (x44 x2513)) (x887 x2513)))
(assert (= (ite (and x2422 x2821 (not x566)) (x2189 x1197) (x168 x1197)) (x2167 x1197)))
(assert (= (x2539 x2597) (ite (= x2597 x517) x1914 (x2939 x2597))))
(assert (= (ite (= x67 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x67)) (x2931 x67)))
(assert (x107 x544))
(assert (= x888 (=> (and (= x823 (x3026 1461501637330902918203684832716283019655932542975 x1597)) (= (x864 (+ 64 x2962)) x59) (= x1597 (x245 x2387)) (= (x864 (+ 64 x2298)) x364) (= (> x950 1) x2435)) (and (=> (and (= x2481 1) (= x59 x2107) (not x2435) (= x1102 x364)) x1047) (=> x2435 x2574)))))
(assert (= (and x3004 (not x2850)) x1506))
(assert (= (ite (= x2709 x261) x2925 (x1370 x261)) (x2172 x261)))
(assert (= (x302 x1244) (ite (= x1244 192) x2714 (x2783 x1244))))
(assert (= (x95 x629) (ite (= x629 x1661) x2246 (x1777 x629))))
(assert (= (=> (and (= x157 x2400) (= x877 x696) (= x1963 x288) (= x640 (x864 (+ 64 x1453))) (= x3036 (uninterp_mod (* x696 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2173 (not (< 1 x1829))) (= x2400 (x864 (+ x3036 x2553))) (= (x864 (+ x1489 64)) x1929) (= (uninterp_mod (* 32 x696) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1192) (= x1963 (x864 (+ x2061 x1192)))) (and x2173 (=> (and (= x1406 x1929) (= 1 x30) (= x79 x640) (= x288 x1742)) x989))) x1354))
(assert (= (ite (= x501 x455) x3030 (x1531 x455)) (x805 x455)))
(assert (= (ite (= x2367 x685) x2894 (x2255 x685)) (x1769 x685)))
(assert (= 0 (x1494 (- x1594 x2555))))
(assert (x107 x2009))
(assert (x107 x1356))
(assert (= (x283 x483) (ite (= x483 x2061) x515 (x224 x483))))
(assert (= (x2783 x49) (ite (= 160 x49) x190 (x1314 x49))))
(assert (= (x2189 x49) (ite (= x1615 x49) x2726 (x2268 x49))))
(assert (= (x1451 x3011) (ite (= x3011 x2252) x840 (x2764 x3011))))
(assert (x107 x488))
(assert (x107 x1310))
(assert (= (x2931 x1267) (ite (= x1267 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1267))))
(assert (= (ite (= x2387 192) x2714 (x2783 x2387)) (x302 x2387)))
(assert (= (x302 x2725) (ite (= x2725 192) x2714 (x2783 x2725))))
(assert (= (x1090 x629) (ite (= x677 x629) x2612 (x1762 x629))))
(assert (= (ite (= x455 x227) x22 (x56 x455)) (x902 x455)))
(assert (= (ite (= x2546 x246) x1037 (x807 x2546)) (x2159 x2546)))
(assert (= (ite (= x1873 128) x1725 (x33 x1873)) (x1314 x1873)))
(assert (= (ite (= x2298 x364) x3034 (x161 x364)) (x1370 x364)))
(assert (= x1961 (=> (and (= x655 (x864 (+ 64 x2298))) (= x1910 (x3026 1461501637330902918203684832716283019655932542975 x1291)) (= x1291 (x970 x433)) (= (> x500 1) x3049) (= x3032 (x864 (+ x1846 64)))) (and (=> x3049 x1020) (=> (and (not x3049) (= x655 x2310) (= x2921 1) (= x1489 x3032)) x1753)))))
(assert (= (ite (= x1261 x874) x2738 (x2950 x874)) (x1226 x874)))
(assert (= (x807 x846) (ite (= x846 x2107) x315 (x533 x846))))
(assert (= (ite (= x780 x182) x555 (x2526 x182)) (x1952 x182)))
(assert (= (x2997 x1732) (ite x1752 (ite (and x1127 (not x2913)) (x205 x1732) (x1059 x1732)) (ite (and x2374 x135) (x205 x1732) (ite (and x3004 x2850) (x1777 x1732) (x2338 x1732))))))
(assert (= (ite (and (not x2376) x3) (x651 x1516) (ite (and (not x150) x1264) (x1769 x1516) (ite (and (not x601) x282) (x2255 x1516) (ite (and (not x1290) x1733) (x2707 x1516) (x326 x1516))))) (x396 x1516)))
(assert (= (x1494 (- x1267 x2555)) 0))
(assert (x107 x14))
(assert (= (ite (and x2926 x923) (x1952 x1780) (ite (and x1236 (not x602)) (x595 x1780) (x1546 x1780))) (x2328 x1780)))
(assert (= (x902 x370) (ite (= x227 x370) x22 (x56 x370))))
(assert (x107 x729))
(assert (= (x2172 x2406) (ite (= x2709 x2406) x2925 (x1370 x2406))))
(assert (= (x1317 x966) (ite (= x966 x2359) x2277 (x3037 x966))))
(assert (x107 x1648))
(assert (x107 x1620))
(assert (= (ite (= x1197 x1745) x585 (x2580 x1197)) (x1328 x1197)))
(assert (= (x2993 x2817) (ite (and x1697 x1145) (x939 x2817) (x1686 x2817))))
(assert (= (ite (= 224 x966) x770 (x302 x966)) (x2995 x966)))
(assert (x107 x1988))
(assert (= (ite (= x2298 x499) x2188 (x2707 x2298)) (x2255 x2298)))
(assert (= (x1810 x2513) (ite (= x2513 x1242) x2639 (x225 x2513))))
(assert (= (x807 x2298) (ite (= x2107 x2298) x315 (x533 x2298))))
(assert (x107 x1584))
(assert (x107 x691))
(assert (x107 x1359))
(assert (= x2726 (x2189 x1615)))
(assert (x107 x1846))
(assert (= (x2764 x1483) (ite (= x1483 x3032) x573 (x890 x1483))))
(assert (= 0 (x33 x433)))
(assert (x107 x1998))
(assert (= x1292 (=> (and (= x196 (x423 x1821)) (= x1956 (< 0 x196))) (and (=> x1956 x2218) (=> (and (not x1956) (= x851 x1796) (= x505 x2881) (= x2035 x1140)) x2723)))))
(assert (= (ite (= x3008 x2106) x1217 (x340 x2106)) (x3018 x2106)))
(assert (= (x2259 x97) (ite (= x97 x115) x2357 (x1427 x97))))
(assert (= (ite (= x501 x1642) x3030 (x1531 x1642)) (x805 x1642)))
(assert (= (x2204 x655) (ite (= x655 x424) x2700 (x2997 x655))))
(assert (= (x1317 x483) (ite (= x2359 x483) x2277 (x3037 x483))))
(assert (= (ite (= x67 x420) x952 (x1769 x67)) (x651 x67)))
(assert (= (ite (= x2876 x227) x22 (x56 x2876)) (x902 x2876)))
(assert (= (ite (= x2635 x655) x1168 (x2980 x655)) (x1265 x655)))
(assert (= (and x132 x2776) x1474))
(assert (= (x2328 x97) (ite (and x923 x2926) (x1952 x97) (ite (and (not x602) x1236) (x595 x97) (x1546 x97)))))
(assert (= (ite (= x1083 x1594) x367 (x2880 x1594)) (x2795 x1594)))
(assert (= (x1958 x2298) (ite (= x2298 x424) x2357 (x2997 x2298))))
(assert (= (x2995 x2546) (ite (= 224 x2546) x770 (x302 x2546))))
(assert (= (x1902 x2751) (ite (= x2751 x2127) x3034 (x2328 x2751))))
(assert (= (x2259 x2751) (ite (= x115 x2751) x2357 (x1427 x2751))))
(assert (= (ite (and x1979 (not x94)) (x396 x1197) (x87 x1197)) (x1782 x1197)))
(assert (x107 x543))
(assert (= (ite (= x2477 x1348) x542 (x2394 x2477)) (x2063 x2477)))
(assert (x107 x1634))
(assert (= (ite (= x3023 x975) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x975)) (x2931 x975)))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x3011) (x1059 x3011)) (ite (and x135 x2374) (x205 x3011) (ite (and x3004 x2850) (x1777 x3011) (x2338 x3011)))) (x2997 x3011)))
(assert (= (x1952 x2309) (ite (= x780 x2309) x555 (x2526 x2309))))
(assert (x107 x1261))
(assert (x107 x2973))
(assert (= (x1958 x2869) (ite (= x2869 x424) x2357 (x2997 x2869))))
(assert (= (ite (= x846 x424) x2357 (x2997 x846)) (x1958 x846)))
(assert (= (ite (and x2926 x923) (x1952 x874) (ite (and x1236 (not x602)) (x595 x874) (x1546 x874))) (x2328 x874)))
(assert (= (ite (= x1068 160) x190 (x1314 x1068)) (x2783 x1068)))
(assert (= (x609 x1780) (ite (= x2150 x1780) 96 (x918 x1780))))
(assert (= (x801 x261) (ite (= x824 x261) x1666 (x902 x261))))
(assert (= (ite (= x1231 x1544) x775 (x44 x1544)) (x887 x1544)))
(assert (= (ite (= x2359 x2710) x2277 (x3037 x2710)) (x1317 x2710)))
(assert (x107 x2041))
(assert (= (x2259 x455) (ite (= x115 x455) x2357 (x1427 x455))))
(assert (x107 x1519))
(assert (= (x2172 x943) (ite (= x2709 x943) x2925 (x1370 x943))))
(assert (= (x1762 x1453) (ite (= x59 x1453) x1209 (x1340 x1453))))
(assert (= (ite (= x2962 x424) x950 (x1429 x424)) (x245 x424)))
(assert (= (x2172 x2546) (ite (= x2546 x2709) x2925 (x1370 x2546))))
(assert (x107 x2491))
(assert (= (ite (= x1041 x1453) x555 (x2602 x1041)) (x918 x1041)))
(assert (x107 x2430))
(assert (= (ite (= x867 x1809) x50 (x2159 x867)) (x1903 x867)))
(assert (= (x1782 x1387) (ite (and (not x94) x1979) (x396 x1387) (x87 x1387))))
(assert (= (ite (and (not x2377) x724) (x798 x1642) (x346 x1642)) (x205 x1642)))
(assert (= (ite (= x2127 x3011) x3034 (x2328 x3011)) (x1902 x3011)))
(assert (= (x1494 (- x1041 x2555)) 0))
(assert (= (ite (= x1909 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1909)) (x2931 x1909)))
(assert (= (ite (and x3 (not x2376)) (x651 x2168) (ite (and x1264 (not x150)) (x1769 x2168) (ite (and x282 (not x601)) (x2255 x2168) (ite (and x1733 (not x1290)) (x2707 x2168) (x326 x2168))))) (x396 x2168)))
(assert (x107 x2326))
(assert (= (x104 x867) (ite (= x467 x867) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x867))))
(assert (= (x104 x2477) (ite (= x2477 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2477))))
(assert (= (x609 x370) (ite (= x2150 x370) 96 (x918 x370))))
(assert (= (ite (= x350 x966) x1558 (x12 x966)) (x2950 x966)))
(assert (= (x205 x874) (ite (and x724 (not x2377)) (x798 x874) (x346 x874))))
(assert (x107 x2648))
(assert (= (x1902 x780) (ite (= x780 x2127) x3034 (x2328 x780))))
(assert (= (x1370 x2106) (ite (= x2298 x2106) x3034 (x161 x2106))))
(assert (= (=> (and (= (not (< 128 x1628)) x1327) (= (x864 (+ 128 x2966)) x2278) (= x3025 (x864 (+ x1804 160))) (= x2957 (x2136 x2278))) (and x1327 (=> (= 128 x2557) x1186))) x1253))
(assert (= (x1325 x455) (ite (= x455 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x455))))
(assert (= (x1328 x780) (ite (= x780 x1745) x585 (x2580 x780))))
(assert (= (ite (= x436 x499) x2188 (x2707 x436)) (x2255 x436)))
(assert (x107 x452))
(assert (x107 x1346))
(assert (x107 x2835))
(assert (= (ite (= x1780 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1780)) (x104 x1780)))
(assert (= (ite (and x1798 (not x2933)) (x125 x86) (ite (and x77 (not x969)) (x657 x86) (ite (and (not x1421) x2091) (x1226 x86) (ite (and (not x2706) x697) (x2950 x86) (x2504 x86))))) (x63 x86)))
(assert (= (x2259 x1873) (ite (= x115 x1873) x2357 (x1427 x1873))))
(assert (= (x1903 x115) (ite (= x1809 x115) x50 (x2159 x115))))
(assert (= (x1769 x261) (ite (= x2367 x261) x2894 (x2255 x261))))
(assert (x405 x297))
(assert (= 0 (x1494 (- x3011 x2555))))
(assert (= (x396 x3035) (ite (and (not x2376) x3) (x651 x3035) (ite (and x1264 (not x150)) (x1769 x3035) (ite (and (not x601) x282) (x2255 x3035) (ite (and x1733 (not x1290)) (x2707 x3035) (x326 x3035)))))))
(assert (= (x2073 x1873) (ite (= x766 x1873) x1423 (x2397 x1873))))
(assert (= (ite (= x824 x483) x1666 (x902 x483)) (x801 x483)))
(assert (= (x915 x961) (ite (and x1335 x2851) (x3018 x961) (ite (and (not x3047) x1301) (x1317 x961) (x2805 x961)))))
(assert (= (x2707 x270) (ite (= x1807 x270) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x270))))
(assert (= (ite (= x370 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x370)) (x2707 x370)))
(assert (= (ite (= x261 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x261)) (x2707 x261)))
(assert (= (x1903 x182) (ite (= x1809 x182) x50 (x2159 x182))))
(assert (= (ite (= x2709 x2309) x2925 (x1370 x2309)) (x2172 x2309)))
(assert (= (ite (= x2425 x455) x859 (x103 x455)) (x1819 x455)))
(assert (= (ite (and x2775 (not x2299)) (x795 x780) (x1613 x780)) (x2338 x780)))
(assert (x607 x186 x2432 x430 x1747))
(assert (= (ite (= x2709 x1946) x2925 (x1370 x1946)) (x2172 x1946)))
(assert (= (x2328 x1544) (ite (and x2926 x923) (x1952 x1544) (ite (and (not x602) x1236) (x595 x1544) (x1546 x1544)))))
(assert (= (x1592 22876116169567568662247501733108717860502184539943453785307321755797215510528) (x348 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (= (x1226 x1544) (ite (= x1261 x1544) x2738 (x2950 x1544))))
(assert (= (x33 x488) 0))
(assert (x107 x122))
(assert (x107 x597))
(assert (= (x2783 x1882) (ite (= 160 x1882) x190 (x1314 x1882))))
(assert (= (x1958 x1453) (ite (= x424 x1453) x2357 (x2997 x1453))))
(assert (x107 x1394))
(assert (= (ite (= x2359 x1642) x2277 (x3037 x1642)) (x1317 x1642)))
(assert (= (ite (and (not x1970) x29) (x63 x2594) (x692 x2594)) (x1044 x2594)))
(assert (= (ite (= x370 x501) x3030 (x1531 x370)) (x805 x370)))
(assert (= (ite (= x2709 x1197) x2925 (x1370 x1197)) (x2172 x1197)))
(assert (x107 x2623))
(assert (= (x2783 x943) (ite (= x943 160) x190 (x1314 x943))))
(assert (= (=> (and (= (x864 (+ 32 x2576)) x598) (= (* x2457 x1507) x449) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2457 x1507)) (< 0 x2401) (= (x725 x2576) x106) (= x2460 x1931) (< 0 x106) (= (- (/ x449 x2401) (uninterp_frac x449 x2401)) x1714)) x1357) x7))
(assert (x417 x2440 x2603))
(assert (= (x2931 x867) (ite (= x3023 x867) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x867))))
(assert (= (ite (= x2709 x364) x2925 (x1370 x364)) (x2172 x364)))
(assert (= (x2795 x1267) (ite (= x1083 x1267) x367 (x2880 x1267))))
(assert (= (x2397 x1873) (ite (and (not x763) x2810) (x2167 x1873) (x298 x1873))))
(assert (= (x1902 x2168) (ite (= x2168 x2127) x3034 (x2328 x2168))))
(assert (= (and x615 x947) x1298))
(assert (= (x1845 x966) (ite (and (not x2097) x1892 x896) (x2539 x966) (x2300 x966))))
(assert (= (x2167 x2513) (ite (and x2422 x2821 (not x566)) (x2189 x2513) (x168 x2513))))
(assert (= (x2338 x2717) (ite (and x2775 (not x2299)) (x795 x2717) (x1613 x2717))))
(assert (x405 x1087))
(assert (x107 x2681))
(assert (= (ite (= x1453 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1453)) (x1325 x1453)))
(assert (= (ite (and (not x2377) x724) (x798 x2725) (x346 x2725)) (x205 x2725)))
(assert (= (ite (= x1594 x2454) x823 (x245 x1594)) (x1340 x1594)))
(assert (= x2115 (=> (and (or x2759 (and (= x618 (uninterp_mod (* x367 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1778 (x864 (+ 32 x1083))) (not x2759))) (= x706 (x2880 x1661)) (= x2759 (= 0 x367)) (= (x2880 x1689) x2717) (not (< 18446744073709551615 x367)) (= (x864 (+ x281 x1083)) x303) (= x367 (x2880 x2717)) (= x622 (uninterp_mod (* 32 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x281 (x864 (+ 32 x622))) (= x1439 x706) (= x1439 (x2880 x2717))) x1927)))
(assert (= (ite (= x677 x874) x2612 (x1762 x874)) (x1090 x874)))
(assert (x107 x98))
(assert (= (x807 x97) (ite (= x97 x2107) x315 (x533 x97))))
(assert (= (x915 x2309) (ite (and x2851 x1335) (x3018 x2309) (ite (and x1301 (not x3047)) (x1317 x2309) (x2805 x2309)))))
(assert (= (x2795 x3011) (ite (= x1083 x3011) x367 (x2880 x3011))))
(assert (= (x1958 x685) (ite (= x685 x424) x2357 (x2997 x685))))
(assert (= (x2073 x1706) (ite (= x1706 x766) x1423 (x2397 x1706))))
(assert (= x1753 (=> (and (= (x864 (+ x980 32)) x2827) (= x1946 (x864 (+ 32 x1453))) (= x1399 (x864 (+ x2744 x433))) (= (x864 (+ x2488 x1773)) x816) (= (x1668 x1453) x1829) (= x1399 x2310) (= x1896 (< 0 x1829)) (= (uninterp_mod (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2416) (= x2744 (uninterp_mod (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2883 (x163 (- x1489 x980))) (= x2488 (uninterp_mod (* x1829 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1489 x1593) (= (x864 (+ x2416 x2085)) x1593) (= x500 x2921) (= x1773 (x864 (+ 32 x1489)))) (and (=> x1896 x942) (=> (and (= 0 x30) (= x1946 x79) (= x1742 x816) (not x1896) (= x1773 x1406)) x989)))))
(assert (= (x2328 x1516) (ite (and x923 x2926) (x1952 x1516) (ite (and (not x602) x1236) (x595 x1516) (x1546 x1516)))))
(assert (= (x915 x2127) (ite (and x1335 x2851) (x3018 x2127) (ite (and x1301 (not x3047)) (x1317 x2127) (x2805 x2127)))))
(assert (= (ite (= x1348 x629) x542 (x2394 x629)) (x2063 x629)))
(assert (= (x902 x966) (ite (= x227 x966) x22 (x56 x966))))
(assert (= (ite (= x2454 x49) x823 (x245 x49)) (x1340 x49)))
(assert (x405 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x107 x2416))
(assert (= (ite (= 224 x629) x770 (x302 x629)) (x2995 x629)))
(assert (= (ite (= x2129 x1780) x2451 (x1226 x1780)) (x657 x1780)))
(assert (x405 x403))
(assert (= (ite (and x2105 x29) (x593 x1483) (x1044 x1483)) (x2426 x1483)))
(assert (= (x609 x2552) (ite (= x2150 x2552) 96 (x918 x2552))))
(assert (= (x1494 (- x2406 x2555)) 0))
(assert (= (x651 x364) (ite (= x364 x420) x952 (x1769 x364))))
(assert (= (ite (= x685 x780) x555 (x2526 x685)) (x1952 x685)))
(assert (= (x2795 x874) (ite (= x874 x1083) x367 (x2880 x874))))
(assert (x107 x1445))
(assert (= (x3018 x1776) (ite (= x1776 x3008) x1217 (x340 x1776))))
(assert (= (x2167 x1873) (ite (and x2422 (not x566) x2821) (x2189 x1873) (x168 x1873))))
(assert (x107 x428))
(assert (= (x2707 x97) (ite (= x97 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x97))))
(assert (= (ite (= x483 x499) x2188 (x2707 x483)) (x2255 x483)))
(assert (x107 x2990))
(assert (= (ite (= x1706 224) x770 (x302 x1706)) (x2995 x1706)))
(assert (x107 x603))
(assert (x107 x2343))
(assert (= (x63 x2298) (ite (and x1798 (not x2933)) (x125 x2298) (ite (and (not x969) x77) (x657 x2298) (ite (and x2091 (not x1421)) (x1226 x2298) (ite (and x697 (not x2706)) (x2950 x2298) (x2504 x2298)))))))
(assert (x107 x2692))
(assert (x107 x2333))
(assert (= (x1592 1461501637330902918203684832716283019655932542975) (x348 1461501637330902918203684832716283019655932542975)))
(assert (= (x1451 x2553) (ite (= x2252 x2553) x840 (x2764 x2553))))
(assert (= (x1762 x1387) (ite (= x59 x1387) x1209 (x1340 x1387))))
(assert (x107 x2354))
(assert (= (x283 x1873) (ite (= x2061 x1873) x515 (x224 x1873))))
(assert (= (ite (= x2298 x2817) x3034 (x161 x2817)) (x1370 x2817)))
(assert (= (x2795 x436) (ite (= x1083 x436) x367 (x2880 x436))))
(assert (= (x125 x1453) (ite (= x1453 x2128) x1897 (x657 x1453))))
(assert (= (and x2323 x1900) x260))
(assert (x107 x1274))
(assert (= (x657 x455) (ite (= x2129 x455) x2451 (x1226 x455))))
(assert (= (x224 x1642) (ite (= x1642 x816) x696 (x2011 x1642))))
(assert (= (ite (and x817 x2655) (x1534 x1136) (ite (and (not x1834) x1941) (x887 x1136) (x151 x1136))) (x423 x1136)))
(assert (= (ite (= x874 x2635) x1168 (x2980 x874)) (x1265 x874)))
(assert (= (x1819 x1197) (ite (= x1197 x2425) x859 (x103 x1197))))
(assert (= (x2328 x846) (ite (and x923 x2926) (x1952 x846) (ite (and x1236 (not x602)) (x595 x846) (x1546 x846)))))
(assert (x107 x2281))
(assert (= (ite (= x517 x364) x1914 (x2939 x364)) (x2539 x364)))
(assert (= (x1450 x455) (ite (= x1821 x455) x3034 (x1728 x455))))
(assert (= (x2328 x2751) (ite (and x2926 x923) (x1952 x2751) (ite (and x1236 (not x602)) (x595 x2751) (x1546 x2751)))))
(assert (= (x1370 x846) (ite (= x846 x2298) x3034 (x161 x846))))
(assert (x107 x1094))
(assert (= (x245 x2751) (ite (= x2751 x2962) x950 (x1429 x2751))))
(assert (= (ite (= x655 x2359) x2277 (x3037 x655)) (x1317 x655)))
(assert (= (ite (= x655 x1318) x1964 (x715 x655)) (x1534 x655)))
(assert (= (x2720 x780) (ite (= x972 x780) x1063 (x1903 x780))))
(assert (x107 x921))
(assert (= (x1810 x780) (ite (= x780 x1242) x2639 (x225 x780))))
(assert (= (ite (= x1946 x2150) 96 (x918 x1946)) (x609 x1946)))
(assert (= (ite (= x246 x86) x1037 (x807 x86)) (x2159 x86)))
(assert (= (ite (= x2642 x1780) x397 (x1902 x1780)) (x2036 x1780)))
(assert (= (x1215 x3011) (ite (= x1508 x3011) x626 (x220 x3011))))
(assert (= (ite (= 128 x2168) x1725 (x33 x2168)) (x1314 x2168)))
(assert (= (ite (= x67 x501) x3030 (x1531 x67)) (x805 x67)))
(assert (= (ite (= x2048 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2048)) (x2931 x2048)))
(assert (x107 x623))
(assert (= (x2997 x1780) (ite x1752 (ite (and (not x2913) x1127) (x205 x1780) (x1059 x1780)) (ite (and x135 x2374) (x205 x1780) (ite (and x2850 x3004) (x1777 x1780) (x2338 x1780))))))
(assert (= (x595 x2623) (ite (= x159 x2623) 96 (x1952 x2623))))
(assert (= (ite (and x724 (not x2377)) (x798 x1516) (x346 x1516)) (x205 x1516)))
(assert (= (x887 x655) (ite (= x655 x1231) x775 (x44 x655))))
(assert (= x409 (and x15 x648)))
(assert (x107 x1823))
(assert (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2600 (x348 29667888499431518244405524310122331055235727797159756471206109933501488824320))))
(assert (x107 x2418))
(assert (= (ite (and (not x2933) x1798) (x125 x629) (ite (and (not x969) x77) (x657 x629) (ite (and (not x1421) x2091) (x1226 x629) (ite (and x697 (not x2706)) (x2950 x629) (x2504 x629))))) (x63 x629)))
(assert (= (ite (= x824 x780) x1666 (x902 x780)) (x801 x780)))
(assert (= (ite (and x923 x2926) (x1952 x1484) (ite (and x1236 (not x602)) (x595 x1484) (x1546 x1484))) (x2328 x1484)))
(assert (= (x95 x1387) (ite (= x1661 x1387) x2246 (x1777 x1387))))
(assert (= (ite (= x1544 x1661) x2246 (x1777 x1544)) (x95 x1544)))
(assert (= (ite (= x780 x2597) x555 (x2526 x2597)) (x1952 x2597)))
(assert (= (ite (= x2477 x1745) x585 (x2580 x2477)) (x1328 x2477)))
(assert (x107 x2210))
(assert (= (ite (= x2298 x2309) x3034 (x161 x2309)) (x1370 x2309)))
(assert (x107 x1141))
(assert (x107 x1091))
(assert (x107 x582))
(assert (= (x595 x2048) (ite (= x159 x2048) 96 (x1952 x2048))))
(assert (x107 x585))
(assert (= (ite (= x1873 x159) 96 (x1952 x1873)) (x595 x1873)))
(assert (x107 x1037))
(assert (x107 x99))
(assert (= (x1902 x1516) (ite (= x2127 x1516) x3034 (x2328 x1516))))
(assert (x107 x2030))
(assert (= (x1265 x1594) (ite (= x1594 x2635) x1168 (x2980 x1594))))
(assert (= (x651 x1197) (ite (= x1197 x420) x952 (x1769 x1197))))
(assert (= (ite (= x1387 x972) x1063 (x1903 x1387)) (x2720 x1387)))
(assert (= (x396 x424) (ite (and (not x2376) x3) (x651 x424) (ite (and (not x150) x1264) (x1769 x424) (ite (and (not x601) x282) (x2255 x424) (ite (and x1733 (not x1290)) (x2707 x424) (x326 x424)))))))
(assert (= (ite (= x420 x629) x952 (x1769 x629)) (x651 x629)))
(assert (= (x798 x86) (ite (and x2759 x682) (x2795 x86) (x2138 x86))))
(assert (= (x1902 x2594) (ite (= x2127 x2594) x3034 (x2328 x2594))))
(assert (= (ite (= x2552 x499) x2188 (x2707 x2552)) (x2255 x2552)))
(assert (= (ite (= x2836 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2836)) (x2707 x2836)))
(assert (= (ite (= x1348 x267) x542 (x2394 x267)) (x2063 x267)))
(assert (= (ite (= 192 x2869) x2714 (x2783 x2869)) (x302 x2869)))
(assert (= (and (not x343) x148) x210))
(assert (= (x918 x86) (ite (= x1453 x86) x555 (x2602 x86))))
(assert (= x330 (=> (and (= x236 x499) (= (< 32 x1564) x601) (= x2767 x1889) (= (x2707 x2767) x2188)) (and (=> (and (not x601) (= 32 x519)) x2194) (=> x601 x1657)))))
(assert (= (ite (= x1453 x1516) x555 (x2602 x1516)) (x918 x1516)))
(assert (= (x205 x267) (ite (and x724 (not x2377)) (x798 x267) (x346 x267))))
(assert (= (ite (and (not x208) x2123) (x1845 x1442) (x301 x1442)) (x1777 x1442)))
(assert (= (ite (= x2150 x2309) 96 (x918 x2309)) (x609 x2309)))
(assert (x107 x2448))
(assert (= (x2338 x2725) (ite (and (not x2299) x2775) (x795 x2725) (x1613 x2725))))
(assert (= (ite (and x896 x1892 (not x2097)) (x2539 x2717) (x2300 x2717)) (x1845 x2717)))
(assert (= (x651 x455) (ite (= x420 x455) x952 (x1769 x455))))
(assert (= (and x1891 x701) x2405))
(assert (= (ite (= x629 x501) x3030 (x1531 x629)) (x805 x629)))
(assert (= (x2397 x2298) (ite (and x2810 (not x763)) (x2167 x2298) (x298 x2298))))
(assert (= (ite (= x1803 160) x190 (x1314 x1803)) (x2783 x1803)))
(assert (= (ite (= x2035 x766) x1423 (x2397 x2035)) (x2073 x2035)))
(assert (= (ite (= x1453 x2477) x555 (x2602 x2477)) (x918 x2477)))
(assert (= (x245 x455) (ite (= x2962 x455) x950 (x1429 x455))))
(assert (x107 x565))
(assert (= (ite (and x2851 x1335) (x3018 x2298) (ite (and x1301 (not x3047)) (x1317 x2298) (x2805 x2298))) (x915 x2298)))
(assert (x417 x1087 x752))
(assert (= (x2063 x1642) (ite (= x1348 x1642) x542 (x2394 x1642))))
(assert (x107 x1780))
(assert (= (ite (= x364 x1083) x367 (x2880 x364)) (x2795 x364)))
(assert (x107 x1643))
(assert (= (ite (= x1583 x483) x1235 (x1450 x483)) (x1539 x483)))
(assert (x417 x684 x1511))
(assert (x107 x3020))
(assert (= (x2063 x1706) (ite (= x1706 x1348) x542 (x2394 x1706))))
(assert (= (x2931 x2513) (ite (= x2513 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2513))))
(assert (= (ite (= x796 x629) x2187 (x801 x629)) (x225 x629)))
(assert (= (x2783 x629) (ite (= x629 160) x190 (x1314 x629))))
(assert (= (x1958 x874) (ite (= x424 x874) x2357 (x2997 x874))))
(assert (= (ite (and x2775 (not x2299)) (x795 x97) (x1613 x97)) (x2338 x97)))
(assert (x107 x1871))
(assert (x405 x1744))
(assert (= (ite (= x2217 x501) x3030 (x1531 x2217)) (x805 x2217)))
(assert (= (x2783 x846) (ite (= x846 160) x190 (x1314 x846))))
(assert (= (ite (= x2309 x1661) x2246 (x1777 x2309)) (x95 x2309)))
(assert (= (ite (= x115 x1483) x2357 (x1427 x1483)) (x2259 x1483)))
(assert (= (x2397 x433) (ite (and x2810 (not x763)) (x2167 x433) (x298 x433))))
(assert (= (x396 x655) (ite (and x3 (not x2376)) (x651 x655) (ite (and x1264 (not x150)) (x1769 x655) (ite (and (not x601) x282) (x2255 x655) (ite (and x1733 (not x1290)) (x2707 x655) (x326 x655)))))))
(assert (= (x1762 x2298) (ite (= x59 x2298) x1209 (x1340 x2298))))
(assert (= (ite (and x2851 x1335) (x3018 x182) (ite (and x1301 (not x3047)) (x1317 x182) (x2805 x182))) (x915 x182)))
(assert (= (x1226 x433) (ite (= x433 x1261) x2738 (x2950 x433))))
(assert (= (x1782 x2168) (ite (and x1979 (not x94)) (x396 x2168) (x87 x2168))))
(assert (= (x1777 x49) (ite (and x2123 (not x208)) (x1845 x49) (x301 x49))))
(assert (= (x2172 x436) (ite (= x436 x2709) x2925 (x1370 x436))))
(assert (= (ite (and (not x208) x2123) (x1845 x67) (x301 x67)) (x1777 x67)))
(assert (= (x887 x874) (ite (= x874 x1231) x775 (x44 x874))))
(assert (= (ite (and x724 (not x2377)) (x798 x1068) (x346 x1068)) (x205 x1068)))
(assert (= (x1451 x49) (ite (= x49 x2252) x840 (x2764 x49))))
(assert (= (ite (= x1661 x455) x2246 (x1777 x455)) (x95 x455)))
(assert (= (ite (= x2298 x1745) x585 (x2580 x2298)) (x1328 x2298)))
(assert (= (x1810 x1642) (ite (= x1242 x1642) x2639 (x225 x1642))))
(assert (x107 x138))
(assert (= (x1777 x1136) (ite (and (not x208) x2123) (x1845 x1136) (x301 x1136))))
(assert (= (ite (= x2594 x1348) x542 (x2394 x2594)) (x2063 x2594)))
(assert (x107 x2728))
(assert (x107 x769))
(assert (= (x1029 x2817) (ite (and x2949 (not x2019)) (x2993 x2817) (x2001 x2817))))
(assert (= (ite (and x1335 x2851) (x3018 x874) (ite (and (not x3047) x1301) (x1317 x874) (x2805 x874))) (x915 x874)))
(assert (x107 x231))
(assert (= (ite (and (not x1970) x29) (x63 x1453) (x692 x1453)) (x1044 x1453)))
(assert (= (x887 x86) (ite (= x86 x1231) x775 (x44 x86))))
(assert (= (x2795 x1068) (ite (= x1083 x1068) x367 (x2880 x1068))))
(assert (= (x2995 x2751) (ite (= 224 x2751) x770 (x302 x2751))))
(assert (x107 x832))
(assert (x107 x2104))
(assert (= (ite (= x294 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x294)) (x2931 x294)))
(assert (= (ite (= x2150 x874) 96 (x918 x874)) (x609 x874)))
(assert (= (x2259 x1594) (ite (= x1594 x115) x2357 (x1427 x1594))))
(assert (x2478 x794))
(assert (= (ite (and x29 (not x1970)) (x63 x629) (x692 x629)) (x1044 x629)))
(assert (= (ite (= x2129 x1706) x2451 (x1226 x1706)) (x657 x1706)))
(assert (= (x2997 x86) (ite x1752 (ite (and x1127 (not x2913)) (x205 x86) (x1059 x86)) (ite (and x135 x2374) (x205 x86) (ite (and x2850 x3004) (x1777 x86) (x2338 x86))))))
(assert (= (x1494 (- x1516 x2555)) 0))
(assert (= (ite (= x1387 x115) x2357 (x1427 x1387)) (x2259 x1387)))
(assert (= (ite (= x2298 x1972) x3034 (x161 x1972)) (x1370 x1972)))
(assert (= (ite (and (not x2299) x2775) (x795 x1642) (x1613 x1642)) (x2338 x1642)))
(assert (= (x1090 x370) (ite (= x370 x677) x2612 (x1762 x370))))
(assert (= (ite (= 160 x1972) x190 (x1314 x1972)) (x2783 x1972)))
(assert (= (x2189 x1544) (ite (= x1615 x1544) x2726 (x2268 x1544))))
(assert (= (ite (and x2926 x923) (x1952 x943) (ite (and x1236 (not x602)) (x595 x943) (x1546 x943))) (x2328 x943)))
(assert (= (ite (and (not x2377) x724) (x798 x67) (x346 x67)) (x205 x67)))
(assert (= (x902 x2869) (ite (= x2869 x227) x22 (x56 x2869))))
(assert (= (x348 26959946667150639794667015087019630673637144422540572481103610249215) (x1592 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (ite (= x766 x455) x1423 (x2397 x455)) (x2073 x455)))
(assert (= (ite (= x1348 x67) x542 (x2394 x67)) (x2063 x67)))
(assert (= (ite (= x2085 x629) x1910 (x970 x629)) (x890 x629)))
(assert (x107 x1781))
(assert (= (x1317 x1803) (ite (= x2359 x1803) x2277 (x3037 x1803))))
(assert (= (ite (= x499 x2751) x2188 (x2707 x2751)) (x2255 x2751)))
(assert (= (ite (and (not x763) x2810) (x2167 x1197) (x298 x1197)) (x2397 x1197)))
(assert (x107 x579))
(assert (= (ite (= x2717 x1453) x555 (x2602 x2717)) (x918 x2717)))
(assert (= (x1952 x2725) (ite (= x780 x2725) x555 (x2526 x2725))))
(assert (= (x1958 x2552) (ite (= x2552 x424) x2357 (x2997 x2552))))
(assert (x107 x1211))
(assert (x107 x2811))
(assert (= (x1090 x1387) (ite (= x677 x1387) x2612 (x1762 x1387))))
(assert (= (x657 x1197) (ite (= x1197 x2129) x2451 (x1226 x1197))))
(assert (= (x1340 x966) (ite (= x2454 x966) x823 (x245 x966))))
(assert (= x2719 (=> (and (= x2067 (not (> x638 1))) (= x1869 x2891) (= (x1777 x517) x2104) (not (> 0 x1710)) (= (x864 (+ 32 x517)) x2623) (= x638 (x1777 x517)) (< 0 x2104) (= (x1777 x2623) x2891) (= x1710 (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2891)))) (and x2067 (=> (= x2573 x1869) x2350)))))
(assert (= (x245 x2168) (ite (= x2168 x2962) x950 (x1429 x2168))))
(assert (x405 x1291))
(assert (x107 x1165))
(assert (= (x396 x1483) (ite (and (not x2376) x3) (x651 x1483) (ite (and (not x150) x1264) (x1769 x1483) (ite (and x282 (not x601)) (x2255 x1483) (ite (and x1733 (not x1290)) (x2707 x1483) (x326 x1483)))))))
(assert (= (x2539 x1453) (ite (= x517 x1453) x1914 (x2939 x1453))))
(assert (= (x2172 x2725) (ite (= x2709 x2725) x2925 (x1370 x2725))))
(assert (= (x2539 x1909) (ite (= x1909 x517) x1914 (x2939 x1909))))
(assert (x107 x1873))
(assert (= (ite (= x2635 x455) x1168 (x2980 x455)) (x1265 x455)))
(assert (= (ite (= x1261 x2553) x2738 (x2950 x2553)) (x1226 x2553)))
(assert (= (ite (and x1979 (not x94)) (x396 x1909) (x87 x1909)) (x1782 x1909)))
(assert (= (ite (= x159 x1041) 96 (x1952 x1041)) (x595 x1041)))
(assert (= (ite (and x1335 x2851) (x3018 x975) (ite (and (not x3047) x1301) (x1317 x975) (x2805 x975))) (x915 x975)))
(assert (= (x1450 x2553) (ite (= x2553 x1821) x3034 (x1728 x2553))))
(assert (= (ite (and x1892 x896 (not x2097)) (x2539 x2168) (x2300 x2168)) (x1845 x2168)))
(assert (= (x2997 x49) (ite x1752 (ite (and x1127 (not x2913)) (x205 x49) (x1059 x49)) (ite (and x135 x2374) (x205 x49) (ite (and x3004 x2850) (x1777 x49) (x2338 x49))))))
(assert (= (=> (and (= x436 (x864 (+ 32 x115))) (= x1398 (x163 (- x227 x1651))) (= x227 x1407) (= (uninterp_mod (* x315 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1064) (= (x864 (+ x2253 x246)) x1407) (= x824 (x864 (+ x227 32))) (= (x56 x115) x22) (= x2589 x1472) (= x855 (x864 (+ 64 x2284))) (= x38 x315) (= (x864 (+ x2217 x1064)) x1472) (= x2253 (uninterp_mod (* 32 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x911 (< 0 x22))) (and (=> (and (= x379 0) (= x824 x350) (not x911) (= x1556 x436)) x2674) (=> x911 x2427))) x1626))
(assert (= (x609 x1244) (ite (= x1244 x2150) 96 (x918 x1244))))
(assert (x107 x1105))
(assert (= (x2720 x846) (ite (= x972 x846) x1063 (x1903 x846))))
(assert (= (x302 160) (x2783 160)))
(assert (x405 x981))
(assert (x107 x976))
(assert (= (ite (= x517 x2635) x1914 (x2939 x2635)) (x2539 x2635)))
(assert (= (x2172 x655) (ite (= x2709 x655) x2925 (x1370 x655))))
(assert (x107 x1583))
(assert (= (ite (and x2655 x817) (x1534 x2309) (ite (and x1941 (not x1834)) (x887 x2309) (x151 x2309))) (x423 x2309)))
(assert (= (x1539 x2168) (ite (= x1583 x2168) x1235 (x1450 x2168))))
(assert (= (x805 x2168) (ite (= x501 x2168) x3030 (x1531 x2168))))
(assert (x107 x285))
(assert (x107 x2160))
(assert (= x682 (or x431 (and (not x276) x1506))))
(assert (= (ite (= x483 x2454) x823 (x245 x483)) (x1340 x483)))
(assert (= (x1952 x629) (ite (= x780 x629) x555 (x2526 x629))))
(assert (= (ite (and (not x2377) x724) (x798 x483) (x346 x483)) (x205 x483)))
(assert (= (ite (= x1267 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1267)) (x104 x1267)))
(assert (= (ite (and x724 (not x2377)) (x798 x961) (x346 x961)) (x205 x961)))
(assert (= (x1534 x2817) (ite (= x2817 x1318) x1964 (x715 x2817))))
(assert (= (ite (= x2128 x2869) x1897 (x657 x2869)) (x125 x2869)))
(assert (= (ite (and (not x2377) x724) (x798 x1267) (x346 x1267)) (x205 x1267)))
(assert (= (x2997 x2168) (ite x1752 (ite (and (not x2913) x1127) (x205 x2168) (x1059 x2168)) (ite (and x2374 x135) (x205 x2168) (ite (and x2850 x3004) (x1777 x2168) (x2338 x2168))))))
(assert (= (x918 x1244) (ite (= x1453 x1244) x555 (x2602 x1244))))
(assert (= (ite (and x2775 (not x2299)) (x795 x1453) (x1613 x1453)) (x2338 x1453)))
(assert (x107 x1844))
(assert (= (ite (= x655 x420) x952 (x1769 x655)) (x651 x655)))
(assert (= (x918 x2513) (ite (= x2513 x1453) x555 (x2602 x2513))))
(assert (= (ite (and (not x2476) x1866) (x2232 x2847) (x1379 x2847)) (x2018 x2847)))
(assert (= (ite (= x972 x1544) x1063 (x1903 x1544)) (x2720 x1544)))
(assert (= (x3018 x914) (ite (= x914 x3008) x1217 (x340 x914))))
(assert (= (x939 x67) (ite (= x67 x2576) x1279 (x1888 x67))))
(assert (= (ite (= x2817 x2252) x840 (x2764 x2817)) (x1451 x2817)))
(assert (= (x1777 x1483) (ite (and (not x208) x2123) (x1845 x1483) (x301 x1483))))
(assert (= (ite (= x1261 x182) x2738 (x2950 x182)) (x1226 x182)))
(assert (x107 x2380))
(assert (= (ite (= x2635 x2991) x1168 (x2980 x2991)) (x1265 x2991)))
(assert (= (ite (= x1661 x3011) x2246 (x1777 x3011)) (x95 x3011)))
(assert (= (ite (= x49 x2425) x859 (x103 x49)) (x1819 x49)))
(assert (x107 x1962))
(assert (= (=> (= x2097 (= x2897 0)) (and (=> (and (= (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2366) x899) (= (x2939 x2635) x1682) (= (x864 (+ x3023 x899)) x517) (= x1914 (x2939 x1972)) (not (= 0 x2318)) (not (or (and (< x2093 32) (= true (<= x2093 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2093))) (= (x2939 x1689) x1972) (= (x864 (+ x517 x1855)) x1831) (not (= 0 x1173)) (not (< 18446744073709551615 x1914)) (= (x1942 (x1592 x794)) x2318) (not x2097) (= x896 (= 0 x1914)) (= x1682 x1315) (= (x3026 1461501637330902918203684832716283019655932542975 x1975) x794) (= x1315 (x2939 x1972)) (= x1865 (uninterp_mod (* x1914 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x2398 1461501637330902918203684832716283019655932542975) (= (x2939 x3023) x2398) (= x2446 (> x2296 0)) (= x1855 (x864 (+ 32 x1865))) (= (x864 (+ x2093 31)) x2366) (or (and (> 4294967296 x2093) (= x1173 1) x2446) (and (not x2446) (= x1173 x2296))) (or x896 (and (not x896) (= x2826 (uninterp_mod (* 32 x1914) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x864 (+ 32 x517)) x496))) (= (x2338 x2474) x1975)) x1514) (=> (and x2097 (= x447 0) (= x424 x3023) (= 0 x2201)) x1295))) x946))
(assert (x107 x1801))
(assert (= (=> (and (= x2061 (x864 (+ 32 x816))) (= (x2011 x1946) x49) (= (x2011 x49) x696) (= (< 0 x696) x830) (= x2553 (x864 (+ x49 32))) (= x1674 x2488)) (and (=> x830 x1537) (=> (and (not x830) (= 0 x877) (= x2061 x288) (= x2553 x157)) x1354))) x942))
(assert (= (x2720 x2553) (ite (= x972 x2553) x1063 (x1903 x2553))))
(assert (= (x2764 x1267) (ite (= x3032 x1267) x573 (x890 x1267))))
(assert (= (ite (= x780 x455) x555 (x2526 x455)) (x1952 x455)))
(assert (= (x1226 x655) (ite (= x655 x1261) x2738 (x2950 x655))))
(assert (= (ite (and (not x94) x1979) (x396 x1136) (x87 x1136)) (x1782 x1136)))
(assert (= (ite (= 160 x2869) x190 (x1314 x2869)) (x2783 x2869)))
(assert (= (and x1288 x1138) x432))
(assert (= (ite (= x1946 x2298) x3034 (x161 x1946)) (x1370 x1946)))
(assert (= (x2167 x67) (ite (and x2422 (not x566) x2821) (x2189 x67) (x168 x67))))
(assert (= (x423 x2298) (ite (and x2655 x817) (x1534 x2298) (ite (and (not x1834) x1941) (x887 x2298) (x151 x2298)))))
(assert (= (ite (and x923 x2926) (x1952 x2217) (ite (and (not x602) x1236) (x595 x2217) (x1546 x2217))) (x2328 x2217)))
(assert (x107 x2434))
(assert (x107 x570))
(assert (= (x302 x2623) (ite (= 192 x2623) x2714 (x2783 x2623))))
(assert (= (x1845 x2876) (ite (and (not x2097) x896 x1892) (x2539 x2876) (x2300 x2876))))
(assert (= (ite (= x1083 x1689) x367 (x2880 x1689)) (x2795 x1689)))
(assert (x107 x2142))
(assert (= (ite (= x1706 x1846) x500 (x559 x1706)) (x970 x1706)))
(assert (= (ite (= x2751 x2425) x859 (x103 x2751)) (x1819 x2751)))
(assert (= (ite (and x29 (not x1970)) (x63 x1267) (x692 x1267)) (x1044 x1267)))
(assert (= (ite (= x3008 x1516) x1217 (x340 x1516)) (x3018 x1516)))
(assert (= (x245 x1197) (ite (= x2962 x1197) x950 (x1429 x1197))))
(assert (= (x423 x874) (ite (and x2655 x817) (x1534 x874) (ite (and x1941 (not x1834)) (x887 x874) (x151 x874)))))
(assert (= (x1226 x2869) (ite (= x1261 x2869) x2738 (x2950 x2869))))
(assert (= (x2931 x2298) (ite (= x2298 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2298))))
(assert (= (x609 x685) (ite (= x685 x2150) 96 (x918 x685))))
(assert (= (ite (= x966 x824) x1666 (x902 x966)) (x801 x966)))
(assert (= (x2159 x2597) (ite (= x2597 x246) x1037 (x807 x2597))))
(assert (x107 x2687))
(assert (= (x2426 x1453) (ite (and x2105 x29) (x593 x1453) (x1044 x1453))))
(assert (x107 x778))
(assert (= (x1265 x2298) (ite (= x2635 x2298) x1168 (x2980 x2298))))
(assert (= (ite (= x796 x1453) x2187 (x801 x1453)) (x225 x1453)))
(assert (= (x2931 x3011) (ite (= x3023 x3011) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x3011))))
(assert (= (ite (and x2422 x2821 (not x566)) (x2189 x655) (x168 x655)) (x2167 x655)))
(assert (= x135 (or (and (not x1342) x2143) x1749)))
(assert (x107 x1743))
(assert (= (x657 x294) (ite (= x2129 x294) x2451 (x1226 x294))))
(assert (= (x1762 x2817) (ite (= x2817 x59) x1209 (x1340 x2817))))
(assert (= (ite (= x2642 x2546) x397 (x1902 x2546)) (x2036 x2546)))
(assert (= (ite (= x2553 224) x770 (x302 x2553)) (x2995 x2553)))
(assert (= (ite (= x961 x2298) x3034 (x161 x961)) (x1370 x961)))
(assert (= (x1317 x2991) (ite (= x2359 x2991) x2277 (x3037 x2991))))
(assert (x107 x1300))
(assert (x107 x892))
(assert (= (x245 x655) (ite (= x2962 x655) x950 (x1429 x655))))
(assert (= (ite (= x1615 x2553) x2726 (x2268 x2553)) (x2189 x2553)))
(assert (= (x1845 x2217) (ite (and (not x2097) x1892 x896) (x2539 x2217) (x2300 x2217))))
(assert (= (ite (= x2546 x2962) x950 (x1429 x2546)) (x245 x2546)))
(assert (= (ite (= x59 x1732) x1209 (x1340 x1732)) (x1762 x1732)))
(assert (= (x3018 x1068) (ite (= x1068 x3008) x1217 (x340 x1068))))
(assert (x107 x402))
(assert (= (ite (= x2129 x267) x2451 (x1226 x267)) (x657 x267)))
(assert (= (ite (and (not x208) x2123) (x1845 x2847) (x301 x2847)) (x1777 x2847)))
(assert (x107 x2003))
(assert (x107 x1669))
(assert (= (x225 x49) (ite (= x49 x796) x2187 (x801 x49))))
(assert (= x2399 (and x2241 x2895)))
(assert (= (ite (= x722 x780) x555 (x2526 x722)) (x1952 x722)))
(assert (= (x33 x2991) 0))
(assert (= (ite (= x1638 x2553) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2553)) (x1325 x2553)))
(assert (= (x915 x1873) (ite (and x2851 x1335) (x3018 x1873) (ite (and x1301 (not x3047)) (x1317 x1873) (x2805 x1873)))))
(assert (x107 x653))
(assert (= (x807 x182) (ite (= x2107 x182) x315 (x533 x182))))
(assert (= x2143 (or (and x724 (not x2377)) x191)))
(assert (= (x2795 x1873) (ite (= x1083 x1873) x367 (x2880 x1873))))
(assert (= (x1539 x685) (ite (= x685 x1583) x1235 (x1450 x685))))
(assert (= (ite (= x115 x1197) x2357 (x1427 x1197)) (x2259 x1197)))
(assert (= (x2063 x780) (ite (= x1348 x780) x542 (x2394 x780))))
(assert (= (ite (= x2635 x867) x1168 (x2980 x867)) (x1265 x867)))
(assert (= (ite (= x2298 x2367) x2894 (x2255 x2298)) (x1769 x2298)))
(assert (= (ite (= x961 x1083) x367 (x2880 x961)) (x2795 x961)))
(assert (= (x609 x1882) (ite (= x2150 x1882) 96 (x918 x1882))))
(assert (= (x1044 x780) (ite (and (not x1970) x29) (x63 x780) (x692 x780))))
(assert (= (x2993 x2546) (ite (and x1145 x1697) (x939 x2546) (x1686 x2546))))
(assert (= (ite (= 224 x267) x770 (x302 x267)) (x2995 x267)))
(assert (x107 x1784))
(assert (= (ite (= x1083 x975) x367 (x2880 x975)) (x2795 x975)))
(assert (= (ite (= x246 x867) x1037 (x807 x867)) (x2159 x867)))
(assert (x107 x2745))
(assert (x2567 x2147))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x2546) (x2300 x2546)) (x1845 x2546)))
(assert (= (ite (= x2309 224) x770 (x302 x2309)) (x2995 x2309)))
(assert (x107 x2790))
(assert (x107 x288))
(assert (= (x1450 x49) (ite (= x1821 x49) x3034 (x1728 x49))))
(assert (x107 x517))
(assert (= (x2397 x370) (ite (and x2810 (not x763)) (x2167 x370) (x298 x370))))
(assert (= (x104 x2869) (ite (= x467 x2869) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2869))))
(assert (= (x2997 x1483) (ite x1752 (ite (and (not x2913) x1127) (x205 x1483) (x1059 x1483)) (ite (and x135 x2374) (x205 x1483) (ite (and x3004 x2850) (x1777 x1483) (x2338 x1483))))))
(assert (= (and x2079 x2480) x1741))
(assert (= (x1450 x874) (ite (= x874 x1821) x3034 (x1728 x874))))
(assert (x107 x97))
(assert (= (ite (= x2962 x2876) x950 (x1429 x2876)) (x245 x2876)))
(assert (= (x1539 x2847) (ite (= x2847 x1583) x1235 (x1450 x2847))))
(assert (= (ite (= x2150 x1516) 96 (x918 x1516)) (x609 x1516)))
(assert (= (x651 x86) (ite (= x86 x420) x952 (x1769 x86))))
(assert (= (x2328 x2477) (ite (and x2926 x923) (x1952 x2477) (ite (and (not x602) x1236) (x595 x2477) (x1546 x2477)))))
(assert (= (and x1656 x1458) x2946))
(assert (= (x1325 x655) (ite (= x1638 x655) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x655))))
(assert (= (ite (and x2821 x2422 (not x566)) (x2189 x370) (x168 x370)) (x2167 x370)))
(assert (x107 x2522))
(assert (x107 x1499))
(assert (x107 x1710))
(assert (= (ite (and x29 (not x1970)) (x63 x1197) (x692 x1197)) (x1044 x1197)))
(assert (= (ite (and x3 (not x2376)) (x651 x115) (ite (and (not x150) x1264) (x1769 x115) (ite (and (not x601) x282) (x2255 x115) (ite (and x1733 (not x1290)) (x2707 x115) (x326 x115))))) (x396 x115)))
(assert (= (x1539 x2546) (ite (= x2546 x1583) x1235 (x1450 x2546))))
(assert (= (or (and (not x1388) x2667) (and x2267 x1860) x2905) x817))
(assert (= (x1958 x780) (ite (= x780 x424) x2357 (x2997 x780))))
(assert (= (x2600 (x1408 x2570 2)) (+ (x2600 x2570) 2)))
(assert (x107 x1124))
(assert (= (x801 x2847) (ite (= x824 x2847) x1666 (x902 x2847))))
(assert (= (x1265 x1909) (ite (= x2635 x1909) x1168 (x2980 x1909))))
(assert (= (x1958 x488) (ite (= x488 x424) x2357 (x2997 x488))))
(assert (= (ite (= x748 x499) x2188 (x2707 x748)) (x2255 x748)))
(assert (= (x2338 x1909) (ite (and (not x2299) x2775) (x795 x1909) (x1613 x1909))))
(assert (= (ite (= x867 x227) x22 (x56 x867)) (x902 x867)))
(assert (= (x2172 x370) (ite (= x2709 x370) x2925 (x1370 x370))))
(assert (x107 x2228))
(assert (= (x1777 x2048) (ite (and (not x208) x2123) (x1845 x2048) (x301 x2048))))
(assert (= (x2259 x293) (ite (= x115 x293) x2357 (x1427 x293))))
(assert (= (x2931 x1689) (ite (= x3023 x1689) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1689))))
(assert (= (ite (= x1483 x2061) x515 (x224 x1483)) (x283 x1483)))
(assert (= (ite (= x1807 x1594) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1594)) (x2707 x1594)))
(assert (x107 x19))
(assert (= (ite (and x29 (not x1970)) (x63 x483) (x692 x483)) (x1044 x483)))
(assert (= (x302 x822) (ite (= 192 x822) x2714 (x2783 x822))))
(assert (x107 x2509))
(assert (x107 x1985))
(assert (= (x1325 x1706) (ite (= x1638 x1706) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1706))))
(assert (= (ite (= x86 x2128) x1897 (x657 x86)) (x125 x86)))
(assert (x107 x2256))
(assert (= (x918 x433) (ite (= x1453 x433) x555 (x2602 x433))))
(assert (= (ite (= x1197 x3008) x1217 (x340 x1197)) (x3018 x1197)))
(assert (= (ite (= x2168 x350) x1558 (x12 x2168)) (x2950 x2168)))
(assert (= (ite (= x1348 x49) x542 (x2394 x49)) (x2063 x49)))
(assert (= (x1810 x655) (ite (= x1242 x655) x2639 (x225 x655))))
(assert (= (x2931 x629) (ite (= x629 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x629))))
(assert (= (x1265 x364) (ite (= x2635 x364) x1168 (x2980 x364))))
(assert (x107 x2940))
(assert (= x2920 (=> (and (= (x864 (+ 64 x2244)) x2262) (= (x864 (+ x376 64)) x2968) (= x2244 (x864 (+ 32 x775))) (= (> x843 0) x1834) (= x376 (x864 (+ x775 64))) (= x2289 (x864 (+ 192 x775))) (= x1018 (x864 (+ x1318 64))) (= (x864 (+ 64 x2262)) x2954) (= (x163 (- x1964 1)) x843) (= (x864 (+ 32 x1318)) x1231)) (and (=> (and (not x1834) (= x2289 x2500)) x2627) (=> x1834 x3027)))))
(assert (= (x798 x2513) (ite (and x682 x2759) (x2795 x2513) (x2138 x2513))))
(assert (x107 x952))
(assert (= (x805 x934) (ite (= x501 x934) x3030 (x1531 x934))))
(assert (= (or x1644 (and x1550 (not x1363))) x1937))
(assert (= (x805 x655) (ite (= x501 x655) x3030 (x1531 x655))))
(assert (= (ite (= x2546 x2454) x823 (x245 x2546)) (x1340 x2546)))
(assert (= (ite (= x2454 x1909) x823 (x245 x1909)) (x1340 x1909)))
(assert (= (and x1488 x1481) x740))
(assert (x107 x1768))
(assert (= (and x969 x77) x1798))
(assert (= x211 (=> (and (<= x251 1461501637330902918203684832716283019655932542975) (<= 0 x251) (= x2844 (x1088 (x348 1) 0)) (< x251 1461501637330902918203684832716283019655932542976) (= x2178 (x864 (+ x1583 64))) (= x152 (not (< x2178 x2285))) (= x145 (- (/ (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- (x2600 x2680) (x2600 x2844)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))) (= (x635 x2680) x251)) (and (=> (= 1 x1796) x3053) x152))))
(assert (= (ite (= x67 x2425) x859 (x103 x67)) (x1819 x67)))
(assert (x107 x1424))
(assert (= (x104 x2298) (ite (= x2298 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2298))))
(assert (x107 x2635))
(assert (= (ite (= x420 x2406) x952 (x1769 x2406)) (x651 x2406)))
(assert (x107 x2190))
(assert (= (x2338 x943) (ite (and (not x2299) x2775) (x795 x943) (x1613 x943))))
(assert (= (x1902 x1484) (ite (= x2127 x1484) x3034 (x2328 x1484))))
(assert (= (x2255 x1732) (ite (= x499 x1732) x2188 (x2707 x1732))))
(assert (x107 x2916))
(assert (= (x1902 x2553) (ite (= x2553 x2127) x3034 (x2328 x2553))))
(assert (= 0 (x33 x2546)))
(assert (= (ite (and x1979 (not x94)) (x396 x1706) (x87 x1706)) (x1782 x1706)))
(assert (= (x104 x780) (ite (= x780 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x780))))
(assert (= x2407 (=> (and (= x717 (not (> x1589 1))) (= x1589 (x298 x2513))) (and x717 (=> (= x766 x1014) x1011)))))
(assert (= (ite (= x867 x1453) x555 (x2602 x867)) (x918 x867)))
(assert (= (ite (and (not x763) x2810) (x2167 x86) (x298 x86)) (x2397 x86)))
(assert (= (ite (and x2759 x682) (x2795 x846) (x2138 x846)) (x798 x846)))
(assert (= (x1450 x1267) (ite (= x1821 x1267) x3034 (x1728 x1267))))
(assert (= (ite (= x424 x1732) x2357 (x2997 x1732)) (x1958 x1732)))
(assert (= (ite (= x420 x2217) x952 (x1769 x2217)) (x651 x2217)))
(assert (= x1892 (or (and x2865 (not x2673)) x2863)))
(assert (= (x1317 x2217) (ite (= x2359 x2217) x2277 (x3037 x2217))))
(assert (= (x104 x182) (ite (= x182 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x182))))
(assert (= (ite (= x780 x499) x2188 (x2707 x780)) (x2255 x780)))
(assert (= (ite (= x972 x86) x1063 (x1903 x86)) (x2720 x86)))
(assert (= (ite (= x1615 x433) x2726 (x2268 x433)) (x2189 x433)))
(assert (= (ite (= x1642 x2367) x2894 (x2255 x1642)) (x1769 x1642)))
(assert (x107 x2289))
(assert (= (x423 x655) (ite (and x2655 x817) (x1534 x655) (ite (and (not x1834) x1941) (x887 x655) (x151 x655)))))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x780) (x1059 x780)) (ite (and x2374 x135) (x205 x780) (ite (and x2850 x3004) (x1777 x780) (x2338 x780)))) (x2997 x780)))
(assert (= (ite (and (not x566) x2422 x2821) (x2189 x1267) (x168 x1267)) (x2167 x1267)))
(assert (x417 x2792 x195))
(assert (= 0 (x1494 (- x294 x2555))))
(assert (= (ite (= x796 x67) x2187 (x801 x67)) (x225 x67)))
(assert (= (x302 x483) (ite (= x483 192) x2714 (x2783 x483))))
(assert (= (x104 x424) (ite (= x467 x424) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x424))))
(assert (x107 x1642))
(assert (= (ite (= x1041 x2454) x823 (x245 x1041)) (x1340 x1041)))
(assert (= (ite (= x517 x1544) x1914 (x2939 x1544)) (x2539 x1544)))
(assert (= (ite (= 128 x1244) x1725 (x33 x1244)) (x1314 x1244)))
(assert (= x2028 (or x513 (and (not x602) x1236))))
(assert (= (ite (= x1041 x2128) x1897 (x657 x1041)) (x125 x1041)))
(assert (x107 x2856))
(assert (= (ite (= x655 x2127) x3034 (x2328 x655)) (x1902 x655)))
(assert (= x2459 (=> (and (not (= x1030 0)) (= (< 0 x2357) x1007) (not (or (and (< x2929 32) (= (<= x2929 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2929))) (= (x671 x467) x1268) (= (x864 (+ 31 x2929)) x289) (= (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x289) x1200) (= (x864 (+ x467 x1200)) x2848)) (=> (and (= x466 x306) (= x2848 x1821) (= x1768 x2881) (not x1007)) x1205))))
(assert (x107 x2055))
(assert (= (ite (= x1695 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1695)) (x2931 x1695)))
(assert (= (ite (= x499 x433) x2188 (x2707 x433)) (x2255 x433)))
(assert (x405 x2825))
(assert (= (x104 x2513) (ite (= x467 x2513) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2513))))
(assert (= (x2997 x1041) (ite x1752 (ite (and (not x2913) x1127) (x205 x1041) (x1059 x1041)) (ite (and x2374 x135) (x205 x1041) (ite (and x3004 x2850) (x1777 x1041) (x2338 x1041))))))
(assert (x107 x171))
(assert (x107 x1968))
(assert (x107 x1257))
(assert (x107 x1072))
(assert (= (ite (and (not x566) x2821 x2422) (x2189 x2298) (x168 x2298)) (x2167 x2298)))
(assert (= (and x601 x282) x1264))
(assert (x107 x2262))
(assert (x107 x241))
(assert (x107 x706))
(assert (= (x1810 x370) (ite (= x1242 x370) x2639 (x225 x370))))
(assert (= (ite (and x1892 x896 (not x2097)) (x2539 x822) (x2300 x822)) (x1845 x822)))
(assert (= (ite (= x1638 x3011) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x3011)) (x1325 x3011)))
(assert (= (x1317 x261) (ite (= x261 x2359) x2277 (x3037 x261))))
(assert (= (x1340 x182) (ite (= x2454 x182) x823 (x245 x182))))
(assert (x107 x306))
(assert (= (ite (and x2759 x682) (x2795 x49) (x2138 x49)) (x798 x49)))
(assert (= (ite (= x2150 x822) 96 (x918 x822)) (x609 x822)))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x655) (x2300 x655)) (x1845 x655)))
(assert (x107 x847))
(assert (= (x2426 x86) (ite (and x29 x2105) (x593 x86) (x1044 x86))))
(assert (x107 x2021))
(assert (= (x224 x2546) (ite (= x816 x2546) x696 (x2011 x2546))))
(assert (= (ite (= x1489 x1483) x1829 (x1668 x1483)) (x130 x1483)))
(assert (= (x2707 x874) (ite (= x1807 x874) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x874))))
(assert (= (x1265 x966) (ite (= x2635 x966) x1168 (x2980 x966))))
(assert (= (ite (= x517 x433) x1914 (x2939 x433)) (x2539 x433)))
(assert (= (x918 x1909) (ite (= x1453 x1909) x555 (x2602 x1909))))
(assert (= (ite (= x350 x97) x1558 (x12 x97)) (x2950 x97)))
(assert (= (ite (= x2576 x1524) x1279 (x1888 x1524)) (x939 x1524)))
(assert (= (x2707 x2387) (ite (= x1807 x2387) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2387))))
(assert (= (x2720 x267) (ite (= x267 x972) x1063 (x1903 x267))))
(assert (x107 x2037))
(assert (= 0 (x33 x1873)))
(assert (= (x2073 x2477) (ite (= x2477 x766) x1423 (x2397 x2477))))
(assert (= (ite (= x1483 x1661) x2246 (x1777 x1483)) (x95 x1483)))
(assert (= (ite (= x3008 x780) x1217 (x340 x780)) (x3018 x780)))
(assert (x107 x1140))
(assert (x107 x1454))
(assert (= (ite (= x2725 x2127) x3034 (x2328 x2725)) (x1902 x2725)))
(assert (= (ite (and x923 x2926) (x1952 x2553) (ite (and (not x602) x1236) (x595 x2553) (x1546 x2553))) (x2328 x2553)))
(assert (= (x2707 x1946) (ite (= x1946 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1946))))
(assert (= (x595 x914) (ite (= x159 x914) 96 (x1952 x914))))
(assert (x107 x397))
(assert (= (ite (and x1697 x1145) (x939 x1594) (x1686 x1594)) (x2993 x1594)))
(assert (= (ite (and x29 x2105) (x593 x2477) (x1044 x2477)) (x2426 x2477)))
(assert (= (ite (= x115 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x115)) (x104 x115)))
(assert (= (ite (= x67 192) x2714 (x2783 x67)) (x302 x67)))
(assert (= (x3018 x3008) x1217))
(assert (= (ite (= x59 x1909) x1209 (x1340 x1909)) (x1762 x1909)))
(assert (x107 x1192))
(assert (= (ite (= x1318 x2552) x1964 (x715 x2552)) (x1534 x2552)))
(assert (= (x2795 x2847) (ite (= x1083 x2847) x367 (x2880 x2847))))
(assert (= (ite (= x364 x501) x3030 (x1531 x364)) (x805 x364)))
(assert (= (ite (= x1261 x1780) x2738 (x2950 x1780)) (x1226 x1780)))
(assert (= (x1902 x943) (ite (= x2127 x943) x3034 (x2328 x943))))
(assert (= (ite (= x1882 x2127) x3034 (x2328 x1882)) (x1902 x1882)))
(assert (= (ite (and x1335 x2851) (x3018 x2817) (ite (and x1301 (not x3047)) (x1317 x2817) (x2805 x2817))) (x915 x2817)))
(assert (x107 x2106))
(assert (= (x302 x1136) (ite (= 192 x1136) x2714 (x2783 x1136))))
(assert (x107 x1651))
(assert (= (or (and x1301 (not x3047)) x683) x2661))
(assert (= (x2600 (x1408 x3022 1)) (+ (x2600 x3022) 1)))
(assert (x107 x1666))
(assert (= (x33 x1244) 0))
(assert (= (x915 x2406) (ite (and x1335 x2851) (x3018 x2406) (ite (and (not x3047) x1301) (x1317 x2406) (x2805 x2406)))))
(assert (= (ite (and x1979 (not x94)) (x396 x2847) (x87 x2847)) (x1782 x2847)))
(assert (= (ite (= x975 x1453) x555 (x2602 x975)) (x918 x975)))
(assert (= (x1314 x2552) (ite (= 128 x2552) x1725 (x33 x2552))))
(assert (= (ite (= x780 x1244) x555 (x2526 x1244)) (x1952 x1244)))
(assert (= (ite (= x2107 x2817) x315 (x533 x2817)) (x807 x2817)))
(assert (= x1301 (and x2851 (not x1335))))
(assert (= (ite (= x1483 x3051) x9 (x2245 x1483)) (x928 x1483)))
(assert (= (x1952 x1695) (ite (= x780 x1695) x555 (x2526 x1695))))
(assert (x107 x772))
(assert (x107 x501))
(assert (= (x1450 x1197) (ite (= x1197 x1821) x3034 (x1728 x1197))))
(assert (= (ite (= x2217 x2150) 96 (x918 x2217)) (x609 x2217)))
(assert (x107 x1256))
(assert (= (ite (and x682 x2759) (x2795 x2217) (x2138 x2217)) (x798 x2217)))
(assert (= (and x1290 x1733) x282))
(assert (x107 x2185))
(assert (x107 x1929))
(assert (= (ite (and x2926 x923) (x1952 x685) (ite (and x1236 (not x602)) (x595 x685) (x1546 x685))) (x2328 x685)))
(assert (= (x33 160) 0))
(assert (= (x2426 x2847) (ite (and x2105 x29) (x593 x2847) (x1044 x2847))))
(assert (= (x609 x1706) (ite (= x2150 x1706) 96 (x918 x1706))))
(assert (x107 x2971))
(assert (= (x2204 x2298) (ite (= x2298 x424) x2700 (x2997 x2298))))
(assert (= (x595 x67) (ite (= x67 x159) 96 (x1952 x67))))
(assert (x405 x684))
(assert (= (ite (= x1453 x424) x2700 (x2997 x1453)) (x2204 x1453)))
(assert (= (x225 x2869) (ite (= x2869 x796) x2187 (x801 x2869))))
(assert (x107 x2120))
(assert (= (ite (= x677 x67) x2612 (x1762 x67)) (x1090 x67)))
(assert (= (x2159 x436) (ite (= x436 x246) x1037 (x807 x436))))
(assert (= (ite (= x1695 x2359) x2277 (x3037 x1695)) (x1317 x1695)))
(assert (x107 x2553))
(assert (= (ite (= x293 x424) x2357 (x2997 x293)) (x1958 x293)))
(assert (= (x2063 x1946) (ite (= x1348 x1946) x542 (x2394 x1946))))
(assert (=> (> (+ 10000 1) x2151) (= (x1592 x2151) (x348 x2151))))
(assert (= (x2426 x49) (ite (and x2105 x29) (x593 x49) (x1044 x49))))
(assert (x107 x1291))
(assert (= (x1370 x866) (ite (= x866 x2298) x3034 (x161 x866))))
(assert (= (ite (= x1231 x1594) x775 (x44 x1594)) (x887 x1594)))
(assert (= (x2397 x1524) (ite (and (not x763) x2810) (x2167 x1524) (x298 x1524))))
(assert (x107 x2965))
(assert (= (x245 x67) (ite (= x2962 x67) x950 (x1429 x67))))
(assert (= (x1769 x2168) (ite (= x2367 x2168) x2894 (x2255 x2168))))
(assert (= (x1769 x2553) (ite (= x2367 x2553) x2894 (x2255 x2553))))
(assert (= (=> (and (= (x163 (- x2107 x1651)) x1480) (= (uninterp_mod (* 32 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x374) (= (< 0 x315) x1332) (= (x864 (+ x2454 x1549)) x1568) (= x2217 (x864 (+ x424 32))) (= x1549 (uninterp_mod (* x950 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1102 x803) (= (x864 (+ 32 x2107)) x246) (= x315 (x533 x424)) (= (x864 (+ 64 x1651)) x2893) (= x803 (x864 (+ x374 x2387))) (= x2481 x950) (= x2107 x1568)) (and (=> (and (= x246 x227) (= x2217 x2589) (not x1332) (= 0 x38)) x1626) (=> x1332 x1734))) x1047))
(assert (= (x1370 x2623) (ite (= x2298 x2623) x3034 (x161 x2623))))
(assert (= (x1328 x370) (ite (= x370 x1745) x585 (x2580 x370))))
(assert (= x652 x1621))
(assert (x107 x2829))
(assert (= (x2600 (x1408 x2753 2)) (+ 2 (x2600 x2753))))
(assert (= (ite (and x2105 x29) (x593 x2546) (x1044 x2546)) (x2426 x2546)))
(assert (x107 x1294))
(assert (= (x225 x2594) (ite (= x796 x2594) x2187 (x801 x2594))))
(assert (= (x1265 x436) (ite (= x2635 x436) x1168 (x2980 x436))))
(assert (= (ite (and x2655 x817) (x1534 x370) (ite (and x1941 (not x1834)) (x887 x370) (x151 x370))) (x423 x370)))
(assert (= (ite (= x1197 x499) x2188 (x2707 x1197)) (x2255 x1197)))
(assert (x107 x295))
(assert (= x2398 (x2600 (x1592 x2398))))
(assert (= (ite (= x2817 160) x190 (x1314 x2817)) (x2783 x2817)))
(assert (= (x1317 x1244) (ite (= x2359 x1244) x2277 (x3037 x1244))))
(assert (= (ite (= x780 x3051) x9 (x2245 x780)) (x928 x780)))
(assert (x107 x2473))
(assert (= (x2783 160) x190))
(assert (= (x595 x1882) (ite (= x1882 x159) 96 (x1952 x1882))))
(assert (= (ite (= x2594 x1318) x1964 (x715 x2594)) (x1534 x2594)))
(assert (x107 x2961))
(assert (= (ite (= x2876 x677) x2612 (x1762 x2876)) (x1090 x2876)))
(assert (= (=> (and (= x1230 (x163 (- x2088 1))) (= x1262 (not (> x1230 0)))) (and x1621 x1262)) x2992))
(assert (= (ite (= x2623 x2709) x2925 (x1370 x2623)) (x2172 x2623)))
(assert (= x1644 (and x1550 x1363)))
(assert (x107 x675))
(assert (= (x302 x1873) (ite (= x1873 192) x2714 (x2783 x1873))))
(assert (= (x1958 x436) (ite (= x436 x424) x2357 (x2997 x436))))
(assert (= (ite (= x1387 x1083) x367 (x2880 x1387)) (x2795 x1387)))
(assert (= (ite (= x975 x3008) x1217 (x340 x975)) (x3018 x975)))
(assert (= (ite (and (not x2019) x2949) (x2993 x1197) (x2001 x1197)) (x1029 x1197)))
(assert (= 0 (x33 x483)))
(assert (= (x1539 x1873) (ite (= x1873 x1583) x1235 (x1450 x1873))))
(assert (= (ite (= x2869 x2129) x2451 (x1226 x2869)) (x657 x2869)))
(assert (= (ite (and x2926 x923) (x1952 x2594) (ite (and (not x602) x1236) (x595 x2594) (x1546 x2594))) (x2328 x2594)))
(assert (= (ite (= x1484 x3008) x1217 (x340 x1484)) (x3018 x1484)))
(assert (= (ite (= 128 x1267) x1725 (x33 x1267)) (x1314 x1267)))
(assert (= (and x1337 x256) x2959))
(assert (= (x1952 x867) (ite (= x867 x780) x555 (x2526 x867))))
(assert (= (x1317 x2387) (ite (= x2359 x2387) x2277 (x3037 x2387))))
(assert (= (ite (and (not x2377) x724) (x798 x846) (x346 x846)) (x205 x846)))
(assert (= (x302 x2553) (ite (= x2553 192) x2714 (x2783 x2553))))
(assert (= (ite (= x1483 x2642) x397 (x1902 x1483)) (x2036 x1483)))
(assert (= (x918 128) (ite (= x1453 128) x555 (x2602 128))))
(assert (x107 x420))
(assert (= (x1902 x2817) (ite (= x2817 x2127) x3034 (x2328 x2817))))
(assert (= (ite (= x182 x517) x1914 (x2939 x182)) (x2539 x182)))
(assert (= (ite (= x2597 x115) x2357 (x1427 x2597)) (x2259 x2597)))
(assert (= x2860 (and x1096 x2588)))
(assert (x107 x391))
(assert (= (ite (= x2107 x780) x315 (x533 x780)) (x807 x780)))
(assert (= (x205 x1732) (ite (and x724 (not x2377)) (x798 x1732) (x346 x1732))))
(assert (= (x1845 x2635) (ite (and x1892 x896 (not x2097)) (x2539 x2635) (x2300 x2635))))
(assert (= (ite (= 224 x182) x770 (x302 x182)) (x2995 x182)))
(assert (=> (< (- x2155 1) 10000) (= (x1592 x2155) (x348 x2155))))
(assert (= (ite (= x1068 192) x2714 (x2783 x1068)) (x302 x1068)))
(assert (= (x1903 x293) (ite (= x293 x1809) x50 (x2159 x293))))
(assert (x107 x47))
(assert (= (ite (and (not x2476) x1866) (x2232 x1594) (x1379 x1594)) (x2018 x1594)))
(assert (= (x63 x874) (ite (and x1798 (not x2933)) (x125 x874) (ite (and x77 (not x969)) (x657 x874) (ite (and (not x1421) x2091) (x1226 x874) (ite (and x697 (not x2706)) (x2950 x874) (x2504 x874)))))))
(assert (= (x1265 x789) (ite (= x789 x2635) x1168 (x2980 x789))))
(assert (= (ite (and (not x2097) x896 x1892) (x2539 x1689) (x2300 x1689)) (x1845 x1689)))
(assert (= (ite (= x1742 x1873) x848 (x1767 x1873)) (x353 x1873)))
(assert (x107 x1712))
(assert (x107 x1381))
(assert (x107 x1586))
(assert (x107 x2963))
(assert (= (x657 x1544) (ite (= x2129 x1544) x2451 (x1226 x1544))))
(assert (x107 x2967))
(assert (= (x1903 x424) (ite (= x424 x1809) x50 (x2159 x424))))
(assert (x107 x2957))
(assert (x107 x2413))
(assert (x107 x1401))
(assert (= (ite (= x3011 x159) 96 (x1952 x3011)) (x595 x3011)))
(assert (= (ite (= 160 x1197) x190 (x1314 x1197)) (x2783 x1197)))
(assert (= (x902 x1041) (ite (= x227 x1041) x22 (x56 x1041))))
(assert (= (ite (= x2367 x488) x2894 (x2255 x488)) (x1769 x488)))
(assert (x107 x1704))
(assert (= (ite (= x629 x1083) x367 (x2880 x629)) (x2795 x629)))
(assert (= (ite (and x29 (not x1970)) (x63 x2817) (x692 x2817)) (x1044 x2817)))
(assert (= (x2063 x2546) (ite (= x2546 x1348) x542 (x2394 x2546))))
(assert (x107 x2744))
(assert (x107 x1722))
(assert (and (= 256 (x2877 2 8)) (= (x2877 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 26959946667150639794667015087019630673637144422540572481103610249216 (x2877 2 224)) (= (x2877 2 56) 72057594037927936) (= 20282409603651670423947251286016 (x2877 2 104)) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x2877 2 248)) (= 65536 (x2877 2 16)) (= (x2877 2 0) 1) (= (x2877 2 168) 374144419156711147060143317175368453031918731001856) (= 1329227995784915872903807060280344576 (x2877 2 120)) (= (x2877 2 88) 309485009821345068724781056) (= 105312291668557186697918027683670432318895095400549111254310977536 (x2877 2 216)) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x2877 2 232)) (= 4294967296 (x2877 2 32)) (= 87112285931760246646623899502532662132736 (x2877 2 136)) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2877 2 240)) (= 5708990770823839524233143877797980545530986496 (x2877 2 152)) (= (x2877 2 176) 95780971304118053647396689196894323976171195136475136) (= 79228162514264337593543950336 (x2877 2 96)) (= 1606938044258990275541962092341162602522202993782792835301376 (x2877 2 200)) (= 411376139330301510538742295639337626245683966408394965837152256 (x2877 2 208)) (= (x2877 2 48) 281474976710656) (= 1099511627776 (x2877 2 40)) (= (x2877 2 128) 340282366920938463463374607431768211456) (= (x2877 2 192) 6277101735386680763835789423207666416102355444464034512896) (= (x2877 2 112) 5192296858534827628530496329220096) (= (x2877 2 24) 16777216) (= 1461501637330902918203684832716283019655932542976 (x2877 2 160)) (= 18446744073709551616 (x2877 2 64)) (= 4722366482869645213696 (x2877 2 72)) (= (x2877 2 80) 1208925819614629174706176) (= 22300745198530623141535718272648361505980416 (x2877 2 144)) (= (x2877 2 184) 24519928653854221733733552434404946937899825954937634816)))
(assert (x107 x1128))
(assert (= (ite (= x2833 x2359) x2277 (x3037 x2833)) (x1317 x2833)))
(assert (x107 x136))
(assert (= (x2993 x780) (ite (and x1145 x1697) (x939 x780) (x1686 x780))))
(assert (= (x915 x1267) (ite (and x1335 x2851) (x3018 x1267) (ite (and x1301 (not x3047)) (x1317 x1267) (x2805 x1267)))))
(assert (= (ite (and x682 x2759) (x2795 x966) (x2138 x966)) (x798 x966)))
(assert (= (ite (= x2127 x2309) x3034 (x2328 x2309)) (x1902 x2309)))
(assert (x107 x271))
(assert (x107 x292))
(assert (= (+ (x2600 x3022) 2) (x2600 (x1408 x3022 2))))
(assert (x405 x70))
(assert (= (x1769 x1136) (ite (= x2367 x1136) x2894 (x2255 x1136))))
(assert (x107 x266))
(assert (= (ite (= x97 x424) x2357 (x2997 x97)) (x1958 x97)))
(assert (x107 x815))
(assert (x107 x1382))
(assert (= (ite (and x2821 (not x566) x2422) (x2189 x913) (x168 x913)) (x2167 x913)))
(assert (= (ite (= x2106 x2642) x397 (x1902 x2106)) (x2036 x2106)))
(assert (x107 x1703))
(assert (= (ite (= x2367 x424) x2894 (x2255 x424)) (x1769 x424)))
(assert (= (ite (= x1041 x501) x3030 (x1531 x1041)) (x805 x1041)))
(assert (= (x798 x2387) (ite (and x2759 x682) (x2795 x2387) (x2138 x2387))))
(assert (x107 x494))
(assert (= (ite (and x2926 x923) (x1952 x1387) (ite (and x1236 (not x602)) (x595 x1387) (x1546 x1387))) (x2328 x1387)))
(assert (x607 x463 x2047 x2864 x1576))
(assert (= (ite (= x2477 x501) x3030 (x1531 x2477)) (x805 x2477)))
(assert (= (x1044 x2847) (ite (and (not x1970) x29) (x63 x2847) (x692 x2847))))
(assert (= (ite (= x961 128) x1725 (x33 x961)) (x1314 x961)))
(assert (x107 x2617))
(assert (= (x595 x867) (ite (= x159 x867) 96 (x1952 x867))))
(assert (= (ite (and x2105 x29) (x593 x1197) (x1044 x1197)) (x2426 x1197)))
(assert (= (=> (and (= x701 (= 0 (x2884 x2147 x2239))) (= x195 (ite (< x53 32) 1 0)) (= 1 x1632) (= 1 x2792) (= (x3026 x2792 x195) x2239) (= x564 (ite (< x53 78) 1 0)) (= (x3026 x1632 x564) x2147)) (and (=> x701 x1607) (=> (and (= (x2877 10 x53) x2492) (not x701)) x2824))) x1839))
(assert (= (ite (= x2150 x1136) 96 (x918 x1136)) (x609 x1136)))
(assert (= (ite (= 128 x293) x1725 (x33 x293)) (x1314 x293)))
(assert (x107 x1969))
(assert (x107 x1240))
(assert (x107 x855))
(assert (x107 x251))
(assert (= (ite (= x1261 x67) x2738 (x2950 x67)) (x1226 x67)))
(assert (= (ite (= x2642 x3011) x397 (x1902 x3011)) (x2036 x3011)))
(assert (= (x95 x1197) (ite (= x1197 x1661) x2246 (x1777 x1197))))
(assert (= (ite (= 224 x488) x770 (x302 x488)) (x2995 x488)))
(assert (= (x2720 x2477) (ite (= x972 x2477) x1063 (x1903 x2477))))
(assert (= (x2997 x2477) (ite x1752 (ite (and x1127 (not x2913)) (x205 x2477) (x1059 x2477)) (ite (and x135 x2374) (x205 x2477) (ite (and x2850 x3004) (x1777 x2477) (x2338 x2477))))))
(assert (= (ite (and x1335 x2851) (x3018 x1484) (ite (and (not x3047) x1301) (x1317 x1484) (x2805 x1484))) (x915 x1484)))
(assert (x107 x2678))
(assert (x107 x2132))
(assert (x107 x1739))
(assert (= (x302 x685) (ite (= 192 x685) x2714 (x2783 x685))))
(assert (= (ite (and x1798 (not x2933)) (x125 x2553) (ite (and (not x969) x77) (x657 x2553) (ite (and x2091 (not x1421)) (x1226 x2553) (ite (and (not x2706) x697) (x2950 x2553) (x2504 x2553))))) (x63 x2553)))
(assert (= (ite (= x1231 x1267) x775 (x44 x1267)) (x887 x1267)))
(assert (= (x2931 x961) (ite (= x961 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x961))))
(assert (= (ite (= x455 x2709) x2925 (x1370 x455)) (x2172 x455)))
(assert (= (ite (= x2991 x1661) x2246 (x1777 x2991)) (x95 x2991)))
(assert (= (x1777 x2474) (ite (and (not x208) x2123) (x1845 x2474) (x301 x2474))))
(assert (= (ite (= x2129 x1267) x2451 (x1226 x1267)) (x657 x1267)))
(assert (x107 x1631))
(assert (= (x1317 x2553) (ite (= x2359 x2553) x2277 (x3037 x2553))))
(assert (= (x302 x2477) (ite (= 192 x2477) x2714 (x2783 x2477))))
(assert (= (=> (and (= (x864 (+ x1547 64)) x1693) (= (x864 (+ x629 64)) x483) (= (x1996 x1873) x1445) (= (> x626 2) x1058)) (and (=> (and (= x2319 x1693) (= x1925 x483) (= 2 x2577) (not x1058)) x1658) (=> x1058 x2788))) x2994))
(assert (= (ite (= x115 x874) x2357 (x1427 x874)) (x2259 x874)))
(assert (= (ite (= x1732 x159) 96 (x1952 x1732)) (x595 x1732)))
(assert (= (x2159 x67) (ite (= x67 x246) x1037 (x807 x67))))
(assert (= (x1317 x722) (ite (= x2359 x722) x2277 (x3037 x722))))
(assert (x107 x2253))
(assert (x107 x1358))
(assert (= (x801 x2594) (ite (= x824 x2594) x1666 (x902 x2594))))
(assert (x107 x228))
(assert (= (x2783 x2717) (ite (= x2717 160) x190 (x1314 x2717))))
(assert (= (x1090 x488) (ite (= x677 x488) x2612 (x1762 x488))))
(assert (x107 x1473))
(assert (= (ite (= x1946 x2962) x950 (x1429 x1946)) (x245 x1946)))
(assert (= (x1370 x97) (ite (= x97 x2298) x3034 (x161 x97))))
(assert (= (x1314 x1197) (ite (= 128 x1197) x1725 (x33 x1197))))
(assert (x107 x1063))
(assert (= (ite (= x1453 x2642) x397 (x1902 x1453)) (x2036 x1453)))
(assert (x107 x3002))
(assert (= (ite (= x2454 x2552) x823 (x245 x2552)) (x1340 x2552)))
(assert (= 0 (x33 x914)))
(assert (= x2715 (=> (and (= x943 (x864 (+ x1661 32))) (= (x798 x1661) x3017) (= x544 (x798 x943)) (< 0 x3017) (= (= 0 x544) x719)) (and (=> (and (not x719) (= x809 (x3026 1461501637330902918203684832716283019655932542975 x916)) (= x1500 (> x3033 0)) (= x1994 (x798 x2717)) (= (x864 (+ x2717 32)) x1484) (not (= 0 x1857)) (= (x864 (+ x303 4)) x2973) (or (and (< x2379 4294967296) (= 1 x2003) x1500) (and (not x1500) (= x3033 x2003))) (< 0 x1994) (= (x798 x1484) x916) (= x1857 (x1942 (x1592 x2398)))) x1027) (=> (and (= x303 x737) x719) x1874)))))
(assert (= (x1340 x97) (ite (= x97 x2454) x823 (x245 x97))))
(assert (= (x2036 x966) (ite (= x966 x2642) x397 (x1902 x966))))
(assert (= (ite (= x488 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x488)) (x2931 x488)))
(assert (= (x1810 x685) (ite (= x685 x1242) x2639 (x225 x685))))
(assert (= (ite (= x2709 x2991) x2925 (x1370 x2991)) (x2172 x2991)))
(assert (= x333 (and x633 x381)))
(assert (= (x1592 274184521717934524641157099916833587223) (x348 274184521717934524641157099916833587223)))
(assert (= (x1819 x780) (ite (= x780 x2425) x859 (x103 x780))))
(assert (= (ite (= x1846 x2553) x500 (x559 x2553)) (x970 x2553)))
(assert (= (ite (= x2576 x86) x1279 (x1888 x86)) (x939 x86)))
(assert (x107 x1646))
(assert (= (ite (= x1807 x2710) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2710)) (x2707 x2710)))
(assert (x107 x379))
(assert (= (ite (= x86 x350) x1558 (x12 x86)) (x2950 x86)))
(assert (= (ite (= x2128 x3011) x1897 (x657 x3011)) (x125 x3011)))
(assert (= (x1370 x455) (ite (= x2298 x455) x3034 (x161 x455))))
(assert (x107 x1984))
(assert (= (x657 x2513) (ite (= x2129 x2513) x2451 (x1226 x2513))))
(assert (x107 x789))
(assert (= (ite (= 224 x86) x770 (x302 x86)) (x2995 x86)))
(assert (= (ite (= x1453 x3032) x573 (x890 x1453)) (x2764 x1453)))
(assert (= (x2259 x267) (ite (= x267 x115) x2357 (x1427 x267))))
(assert (= (ite (= x59 x2594) x1209 (x1340 x2594)) (x1762 x2594)))
(assert (= (ite (and x2655 x817) (x1534 x685) (ite (and x1941 (not x1834)) (x887 x685) (x151 x685))) (x423 x685)))
(assert (x405 x317))
(assert (= (ite (= x796 x2477) x2187 (x801 x2477)) (x225 x2477)))
(assert (= (ite (= x961 x2454) x823 (x245 x961)) (x1340 x961)))
(assert (x107 x1102))
(assert (= (x2172 x1267) (ite (= x2709 x1267) x2925 (x1370 x1267))))
(assert (= (x2997 x874) (ite x1752 (ite (and x1127 (not x2913)) (x205 x874) (x1059 x874)) (ite (and x135 x2374) (x205 x874) (ite (and x3004 x2850) (x1777 x874) (x2338 x874))))))
(assert (= (x2950 x2725) (ite (= x2725 x350) x1558 (x12 x2725))))
(assert (= (ite (= x1873 x1348) x542 (x2394 x1873)) (x2063 x1873)))
(assert (= (x1996 x1873) (ite (= x1547 x1873) x1463 (x1215 x1873))))
(assert (= (ite (= x246 x2876) x1037 (x807 x2876)) (x2159 x2876)))
(assert (= (ite (= x2454 x2847) x823 (x245 x2847)) (x1340 x2847)))
(assert (= (ite (= x2876 x2359) x2277 (x3037 x2876)) (x1317 x2876)))
(assert (= (x1777 x1041) (ite (and (not x208) x2123) (x1845 x1041) (x301 x1041))))
(assert (= (ite (= x1615 x2847) x2726 (x2268 x2847)) (x2189 x2847)))
(assert (= (ite (and x896 x1892 (not x2097)) (x2539 x49) (x2300 x49)) (x1845 x49)))
(assert (= (x1952 x1972) (ite (= x1972 x780) x555 (x2526 x1972))))
(assert (x107 x546))
(assert (= (x2600 (x348 2442716437)) 2442716437))
(assert (= (ite (and (not x2476) x1866) (x2232 x629) (x1379 x629)) (x2018 x629)))
(assert (= (x2255 x2710) (ite (= x2710 x499) x2188 (x2707 x2710))))
(assert (= (ite (= x867 x2367) x2894 (x2255 x867)) (x1769 x867)))
(assert (= (x1370 x1776) (ite (= x2298 x1776) x3034 (x161 x1776))))
(assert (= (ite (= x3023 x2717) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2717)) (x2931 x2717)))
(assert (= (ite (= x966 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x966)) (x2707 x966)))
(assert (= (x807 x1483) (ite (= x2107 x1483) x315 (x533 x1483))))
(assert (= (x801 x2168) (ite (= x824 x2168) x1666 (x902 x2168))))
(assert (= (x130 x1706) (ite (= x1489 x1706) x1829 (x1668 x1706))))
(assert (= (x1902 x261) (ite (= x2127 x261) x3034 (x2328 x261))))
(assert (x107 x1119))
(assert (= (x130 x1946) (ite (= x1946 x1489) x1829 (x1668 x1946))))
(assert (= (ite (and x724 (not x2377)) (x798 x2876) (x346 x2876)) (x205 x2876)))
(assert (= (x2997 x2546) (ite x1752 (ite (and x1127 (not x2913)) (x205 x2546) (x1059 x2546)) (ite (and x135 x2374) (x205 x2546) (ite (and x2850 x3004) (x1777 x2546) (x2338 x2546))))))
(assert (= 0 (x1494 (- x2710 x2555))))
(assert (= (x2172 x2106) (ite (= x2106 x2709) x2925 (x1370 x2106))))
(assert (x107 x2958))
(assert (= x441 (=> (and (= (< 0 x2228) x2673) (= x2228 (x2338 x2635))) (and (=> (and (= x2897 0) (not x2673)) x946) (=> x2673 x1581)))))
(assert (= (ite (= x1732 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1732)) (x1325 x1732)))
(assert (x107 x2497))
(assert (= (x1769 x2725) (ite (= x2367 x2725) x2894 (x2255 x2725))))
(assert (= 0 (x33 x86)))
(assert (x107 x462))
(assert (x107 x248))
(assert (x107 x1444))
(assert (= (ite (= x2309 x2359) x2277 (x3037 x2309)) (x1317 x2309)))
(assert (= (x95 x2876) (ite (= x2876 x1661) x2246 (x1777 x2876))))
(assert (x107 x2814))
(assert (x107 x867))
(assert (= (ite (and x2949 (not x2019)) (x2993 x1483) (x2001 x1483)) (x1029 x1483)))
(assert (= (ite (and x1697 x1145) (x939 x49) (x1686 x49)) (x2993 x49)))
(assert (x107 x2793))
(assert (= (x2172 x1387) (ite (= x1387 x2709) x2925 (x1370 x1387))))
(assert (= (ite (= x2975 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2975)) (x2707 x2975)))
(assert (= (x1777 x2710) (ite (and x2123 (not x208)) (x1845 x2710) (x301 x2710))))
(assert (x107 x9))
(assert (= (x807 x67) (ite (= x2107 x67) x315 (x533 x67))))
(assert (x107 x985))
(assert (= (ite (= x1242 x2546) x2639 (x225 x2546)) (x1810 x2546)))
(assert (x107 x478))
(assert (= (ite (= x1909 x2425) x859 (x103 x1909)) (x1819 x1909)))
(assert (x107 x931))
(assert (x107 x1542))
(assert (= (x1902 x433) (ite (= x2127 x433) x3034 (x2328 x433))))
(assert (x107 x1827))
(assert (= (x918 x2106) (ite (= x2106 x1453) x555 (x2602 x2106))))
(assert (= (x1952 x2710) (ite (= x780 x2710) x555 (x2526 x2710))))
(assert (= (ite (= x1041 x2962) x950 (x1429 x1041)) (x245 x1041)))
(assert (= (x651 x433) (ite (= x433 x420) x952 (x1769 x433))))
(assert (= (ite (= x685 x499) x2188 (x2707 x685)) (x2255 x685)))
(assert (= (x1958 x961) (ite (= x961 x424) x2357 (x2997 x961))))
(assert (= (x3018 x1387) (ite (= x1387 x3008) x1217 (x340 x1387))))
(assert (= (ite (= x2552 x2962) x950 (x1429 x2552)) (x245 x2552)))
(assert (x107 x361))
(assert (= (x1903 x3011) (ite (= x1809 x3011) x50 (x2159 x3011))))
(assert (x107 x80))
(assert (= (x1265 x1453) (ite (= x2635 x1453) x1168 (x2980 x1453))))
(assert (= (ite (and (not x1970) x29) (x63 x1544) (x692 x1544)) (x1044 x1544)))
(assert (= (x1903 x2597) (ite (= x2597 x1809) x50 (x2159 x2597))))
(assert (= (and x2376 x3) x2566))
(assert (x405 x289))
(assert (= (ite (= x424 x655) x2357 (x2997 x655)) (x1958 x655)))
(assert (= (x651 x3011) (ite (= x3011 x420) x952 (x1769 x3011))))
(assert (= (ite (= x1780 x2425) x859 (x103 x1780)) (x1819 x1780)))
(assert (= (ite (and (not x2377) x724) (x798 x488) (x346 x488)) (x205 x488)))
(assert (x405 1461501637330902918203684832716283019655932542975))
(assert (= (x2795 x685) (ite (= x1083 x685) x367 (x2880 x685))))
(assert (= (ite (= x629 x115) x2357 (x1427 x629)) (x2259 x629)))
(assert (x107 x2663))
(assert (= (x104 x86) (ite (= x467 x86) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x86))))
(assert (= (ite (= x655 x1661) x2246 (x1777 x655)) (x95 x655)))
(assert (x107 x371))
(assert (= (ite (= x2474 x2635) x1168 (x2980 x2474)) (x1265 x2474)))
(assert (= (ite (= x436 x2454) x823 (x245 x436)) (x1340 x436)))
(assert (= (or x1979 (and x2662 x198)) x2164))
(assert (= (ite (= x629 128) x1725 (x33 x629)) (x1314 x629)))
(assert (= (ite (= x294 x824) x1666 (x902 x294)) (x801 x294)))
(assert (= (ite (= x350 x267) x1558 (x12 x267)) (x2950 x267)))
(assert (= (ite (= x975 x2359) x2277 (x3037 x975)) (x1317 x975)))
(assert (= (x1044 x2477) (ite (and x29 (not x1970)) (x63 x2477) (x692 x2477))))
(assert (= (ite (= x1318 x483) x1964 (x715 x483)) (x1534 x483)))
(assert (x2478 x1685))
(assert (= (ite (= 128 x67) x1725 (x33 x67)) (x1314 x67)))
(assert (= x1326 (and x2861 x2435)))
(assert (= (x95 x2597) (ite (= x1661 x2597) x2246 (x1777 x2597))))
(assert (x107 x901))
(assert (= (x245 x1136) (ite (= x1136 x2962) x950 (x1429 x1136))))
(assert (= (x1314 x2546) (ite (= x2546 128) x1725 (x33 x2546))))
(assert (= (ite (= x1642 x972) x1063 (x1903 x1642)) (x2720 x1642)))
(assert (= (x2795 x2474) (ite (= x1083 x2474) x367 (x2880 x2474))))
(assert (x107 x2882))
(assert (= (x651 x780) (ite (= x780 x420) x952 (x1769 x780))))
(assert (= (x205 x966) (ite (and (not x2377) x724) (x798 x966) (x346 x966))))
(assert (= (ite (= x293 x501) x3030 (x1531 x293)) (x805 x293)))
(assert (= (x1952 x1484) (ite (= x780 x1484) x555 (x2526 x1484))))
(assert (= (x1370 x2597) (ite (= x2298 x2597) x3034 (x161 x2597))))
(assert (= x773 (and x2004 x2860)))
(assert (= (x1265 x846) (ite (= x2635 x846) x1168 (x2980 x846))))
(assert (= (x2995 x49) (ite (= 224 x49) x770 (x302 x49))))
(assert (x107 x337))
(assert (x107 x549))
(assert (= (ite (= x1615 x2869) x2726 (x2268 x2869)) (x2189 x2869)))
(assert (= (ite (= x2107 x1732) x315 (x533 x1732)) (x807 x1732)))
(assert (= (x1769 x1483) (ite (= x2367 x1483) x2894 (x2255 x1483))))
(assert (x107 x841))
(assert (= (ite (= x677 x2725) x2612 (x1762 x2725)) (x1090 x2725)))
(assert (= (x1340 x2477) (ite (= x2477 x2454) x823 (x245 x2477))))
(assert (= (ite (= x1693 x1483) x1426 (x1160 x1483)) (x3016 x1483)))
(assert (x107 x2757))
(assert (= (x2950 x1732) (ite (= x1732 x350) x1558 (x12 x1732))))
(assert (x107 x258))
(assert (= (x2539 x2817) (ite (= x517 x2817) x1914 (x2939 x2817))))
(assert (= (ite (and (not x2476) x1866) (x2232 x2513) (x1379 x2513)) (x2018 x2513)))
(assert (x107 x1524))
(assert (x107 x3009))
(assert (= (ite (= x1083 x2817) x367 (x2880 x2817)) (x2795 x2817)))
(assert (= (ite (= x1642 x2962) x950 (x1429 x1642)) (x245 x1642)))
(assert (= (x657 x2309) (ite (= x2129 x2309) x2451 (x1226 x2309))))
(assert (= (ite (= x1946 x824) x1666 (x902 x1946)) (x801 x1946)))
(assert (= (x1762 x2552) (ite (= x2552 x59) x1209 (x1340 x2552))))
(assert (= (ite (and x2775 (not x2299)) (x795 x2168) (x1613 x2168)) (x2338 x2168)))
(assert (= (x353 x1706) (ite (= x1742 x1706) x848 (x1767 x1706))))
(assert (= (ite (= x1453 x1318) x1964 (x715 x1453)) (x1534 x1453)))
(assert (= (x2995 x2106) (ite (= x2106 224) x770 (x302 x2106))))
(assert (= (x1340 x433) (ite (= x433 x2454) x823 (x245 x433))))
(assert (= 0 (x1494 (- x685 x2555))))
(assert (= (x2997 x293) (ite x1752 (ite (and x1127 (not x2913)) (x205 x293) (x1059 x293)) (ite (and x2374 x135) (x205 x293) (ite (and x3004 x2850) (x1777 x293) (x2338 x293))))))
(assert (= (ite (and x2775 (not x2299)) (x795 x3011) (x1613 x3011)) (x2338 x3011)))
(assert (x107 x451))
(assert (= (x939 x655) (ite (= x655 x2576) x1279 (x1888 x655))))
(assert (= (x95 x2546) (ite (= x2546 x1661) x2246 (x1777 x2546))))
(assert (= (x1494 (- x2552 x2555)) 0))
(assert (= (ite (= x1807 x49) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x49)) (x2707 x49)))
(assert (x107 x200))
(assert (= (ite (and x817 x2655) (x1534 x2597) (ite (and x1941 (not x1834)) (x887 x2597) (x151 x2597))) (x423 x2597)))
(assert (= (ite (and x817 x2655) (x1534 x1544) (ite (and (not x1834) x1941) (x887 x1544) (x151 x1544))) (x423 x1544)))
(assert (x107 x252))
(assert (= false x2571))
(assert (= (x2783 x1267) (ite (= 160 x1267) x190 (x1314 x1267))))
(assert (= (x1762 x2710) (ite (= x59 x2710) x1209 (x1340 x2710))))
(assert (= (x2707 x293) (ite (= x293 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x293))))
(assert (= (x225 x483) (ite (= x483 x796) x2187 (x801 x483))))
(assert (= (ite (= x655 x350) x1558 (x12 x655)) (x2950 x655)))
(assert (x107 x1629))
(assert (= (ite (= x2552 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2552)) (x2707 x2552)))
(assert (= (ite (= x2309 x824) x1666 (x902 x2309)) (x801 x2309)))
(assert (= (x1819 x874) (ite (= x2425 x874) x859 (x103 x874))))
(assert (= (ite (= x467 x1873) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1873)) (x104 x1873)))
(assert (x107 x857))
(assert (x107 x2848))
(assert (= (ite (and x2759 x682) (x2795 x1642) (x2138 x1642)) (x798 x1642)))
(assert (= 0 (x1494 (- x488 x2555))))
(assert (= (ite (= x2387 x1661) x2246 (x1777 x2387)) (x95 x2387)))
(assert (= (ite (= x293 x2709) x2925 (x1370 x293)) (x2172 x293)))
(assert (= x2316 (x1592 (x2600 x2316))))
(assert (= (x2707 x867) (ite (= x867 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x867))))
(assert (x107 x2311))
(assert (x107 x2364))
(assert (x107 x2513))
(assert (= (ite (= x2359 x2298) x2277 (x3037 x2298)) (x1317 x2298)))
(assert (x107 x1794))
(assert (x107 x2387))
(assert (= (=> (and (= x914 (x392 x1689)) (= x670 (x392 x914)) (= (< 0 x670) x276)) (=> (and (not x276) (= x1083 x1360)) x2115)) x2002))
(assert (x107 x2234))
(assert (= (x2036 x267) (ite (= x267 x2642) x397 (x1902 x267))))
(assert (= (x1340 x2725) (ite (= x2725 x2454) x823 (x245 x2725))))
(assert (= (x511 x2132) (ite (= x812 x2132) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x735 x2132))))
(assert (x107 x992))
(assert (x107 x182))
(assert (= (x595 x822) (ite (= x822 x159) 96 (x1952 x822))))
(assert (= (ite (= x1821 x2513) x3034 (x1728 x2513)) (x1450 x2513)))
(assert (= (x1777 x2717) (ite (and x2123 (not x208)) (x1845 x2717) (x301 x2717))))
(assert (= (x1494 (- x1732 x2555)) 0))
(assert (x405 x564))
(assert (x107 x1217))
(assert (= (x63 x1706) (ite (and x1798 (not x2933)) (x125 x1706) (ite (and x77 (not x969)) (x657 x1706) (ite (and (not x1421) x2091) (x1226 x1706) (ite (and (not x2706) x697) (x2950 x1706) (x2504 x1706)))))))
(assert (=> (< (- x953 1) 10000) (= (x348 x953) (x1592 x953))))
(assert (= (x2036 x2127) (ite (= x2642 x2127) x397 (x1902 x2127))))
(assert (= (ite (= x2710 x517) x1914 (x2939 x2710)) (x2539 x2710)))
(assert (= (x2995 x1776) (ite (= x1776 224) x770 (x302 x1776))))
(assert (= 0 (x33 x2513)))
(assert (x107 x1066))
(assert (= x2282 (=> (and (= (= 0 x1217) x1335) (= x1300 (uninterp_mod (* 32 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x864 (+ x3008 x1698)) x2277) (= x1698 (x864 (+ x1300 32))) (= x1217 (x340 x2127)) (not (< 18446744073709551615 x1217))) (and (=> (not x1335) x10) (=> (and x1335 (= x2277 x214)) x2696)))))
(assert (= (x609 x86) (ite (= x2150 x86) 96 (x918 x86))))
(assert (= (x902 x2553) (ite (= x2553 x227) x22 (x56 x2553))))
(assert (= (ite (= x1803 x2127) x3034 (x2328 x1803)) (x1902 x1803)))
(assert (= (ite (= x1197 x2635) x1168 (x2980 x1197)) (x1265 x1197)))
(assert (= (x657 x2597) (ite (= x2129 x2597) x2451 (x1226 x2597))))
(assert (x107 x290))
(assert (=> (< (- x2055 1) 10000) (= (x1592 x2055) (x348 x2055))))
(assert (x107 x2096))
(assert (x107 x1633))
(assert (x2528 x1557 x2620))
(assert (= 0 (x33 x1642)))
(assert (= (x1777 x846) (ite (and (not x208) x2123) (x1845 x846) (x301 x846))))
(assert (x107 x1083))
(assert (= (x1902 x2477) (ite (= x2477 x2127) x3034 (x2328 x2477))))
(assert (= (x1810 x1483) (ite (= x1242 x1483) x2639 (x225 x1483))))
(assert (= (x798 x2710) (ite (and x2759 x682) (x2795 x2710) (x2138 x2710))))
(assert (= (and (not x1609) x333) x2781))
(assert (= x1734 (=> (and (= x1809 (x864 (+ x2107 64))) (= (> x315 1) x2230) (= (x864 (+ 64 x424)) x488) (= x1037 (x807 x2217))) (and (=> x2230 x84) (=> (and (not x2230) (= 1 x38) (= x1809 x227) (= x488 x2589)) x1626)))))
(assert (= (ite (= x2869 x1661) x2246 (x1777 x2869)) (x95 x2869)))
(assert (= (x2036 x961) (ite (= x961 x2642) x397 (x1902 x961))))
(assert (= (ite (= x2477 x1242) x2639 (x225 x2477)) (x1810 x2477)))
(assert (= (ite (= x1809 x846) x50 (x2159 x846)) (x1903 x846)))
(assert (= (ite (= x2513 x227) x22 (x56 x2513)) (x902 x2513)))
(assert (= (x1314 x1706) (ite (= x1706 128) x1725 (x33 x1706))))
(assert (= (=> (and (= x1925 x416) (= x1622 x2319) (= (x864 (+ x1547 x931)) x1622) (= (x864 (+ 64 x780)) x1854) (= x626 x2577) (= x416 (x864 (+ x629 x1605))) (= (uninterp_mod (* 32 x626) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1605) (= (x864 (+ x1742 64)) x2970) (= x931 (uninterp_mod (* x626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2176 (not (< 1 x848)))) (and (=> (and (= x2430 x2970) (= x1146 1) (= x1854 x1383)) x189) x2176)) x1658))
(assert (x107 x1480))
(assert (= (ite (= x1261 x267) x2738 (x2950 x267)) (x1226 x267)))
(assert (x107 x851))
(assert (= (ite (= x2847 x2576) x1279 (x1888 x2847)) (x939 x2847)))
(assert (= (x1494 (- x2597 x2555)) 0))
(assert (x107 x1661))
(assert (= (+ (x2600 x639) 1) (x2600 (x1408 x639 1))))
(assert (= (x2539 x294) (ite (= x294 x517) x1914 (x2939 x294))))
(assert (x107 x2718))
(assert (= (x2063 x1348) x542))
(assert (= (ite (= x2597 x1821) x3034 (x1728 x2597)) (x1450 x2597)))
(assert (= (ite (= x227 x1780) x22 (x56 x1780)) (x902 x1780)))
(assert (= (ite (and x2775 (not x2299)) (x795 x1594) (x1613 x1594)) (x2338 x1594)))
(assert (= x2865 (or x1806 (and x2775 (not x2299)))))
(assert (= (ite (= x1348 x874) x542 (x2394 x874)) (x2063 x874)))
(assert (= (ite (= x1453 x866) x555 (x2602 x866)) (x918 x866)))
(assert (= (x1902 x629) (ite (= x2127 x629) x3034 (x2328 x629))))
(assert (= (x1952 x780) x555))
(assert (= (ite (= x517 x97) x1914 (x2939 x97)) (x2539 x97)))
(assert (= (x2995 x1946) (ite (= x1946 224) x770 (x302 x1946))))
(assert (= (ite (and (not x2933) x1798) (x125 x2309) (ite (and x77 (not x969)) (x657 x2309) (ite (and x2091 (not x1421)) (x1226 x2309) (ite (and (not x2706) x697) (x2950 x2309) (x2504 x2309))))) (x63 x2309)))
(assert (= (ite (= x1972 x2709) x2925 (x1370 x1972)) (x2172 x1972)))
(assert (=> (> (+ 10000 1) x681) (= (x1592 x681) (x348 x681))))
(assert (x107 x1067))
(assert (= (ite (= x115 x3011) x2357 (x1427 x3011)) (x2259 x3011)))
(assert (= (x2795 x2751) (ite (= x1083 x2751) x367 (x2880 x2751))))
(assert (= (ite (and x2655 x817) (x1534 x2546) (ite (and (not x1834) x1941) (x887 x2546) (x151 x2546))) (x423 x2546)))
(assert (= (x2259 x436) (ite (= x436 x115) x2357 (x1427 x436))))
(assert (= (x2255 x1516) (ite (= x499 x1516) x2188 (x2707 x1516))))
(assert (= (x63 x1483) (ite (and x1798 (not x2933)) (x125 x1483) (ite (and x77 (not x969)) (x657 x1483) (ite (and (not x1421) x2091) (x1226 x1483) (ite (and (not x2706) x697) (x2950 x1483) (x2504 x1483)))))))
(assert (= (x890 x1946) (ite (= x1946 x2085) x1910 (x970 x1946))))
(assert (= (ite (= x677 x1946) x2612 (x1762 x1946)) (x1090 x1946)))
(assert (= (ite (and x2949 (not x2019)) (x2993 x370) (x2001 x370)) (x1029 x370)))
(assert (= (x130 x1642) (ite (= x1642 x1489) x1829 (x1668 x1642))))
(assert (x107 x2127))
(assert (= (x225 x3011) (ite (= x796 x3011) x2187 (x801 x3011))))
(assert (= (x1265 x943) (ite (= x943 x2635) x1168 (x2980 x943))))
(assert (= (ite (= x2847 160) x190 (x1314 x2847)) (x2783 x2847)))
(assert (x107 x2620))
(assert (x107 x1678))
(assert (= (ite (= x424 x2129) x2451 (x1226 x424)) (x657 x424)))
(assert (= (ite (= x1083 x1197) x367 (x2880 x1197)) (x2795 x1197)))
(assert (x107 x62))
(assert (= (ite (= 160 x2623) x190 (x1314 x2623)) (x2783 x2623)))
(assert (x107 x2637))
(assert (= (x63 x1732) (ite (and x1798 (not x2933)) (x125 x1732) (ite (and x77 (not x969)) (x657 x1732) (ite (and (not x1421) x2091) (x1226 x1732) (ite (and x697 (not x2706)) (x2950 x1732) (x2504 x1732)))))))
(assert (x107 x309))
(assert (= (x918 x1197) (ite (= x1197 x1453) x555 (x2602 x1197))))
(assert (= (x1762 x488) (ite (= x488 x59) x1209 (x1340 x488))))
(assert (= (x245 x2553) (ite (= x2962 x2553) x950 (x1429 x2553))))
(assert (x107 x2789))
(assert (= (or x96 (and x2810 (not x763))) x2643))
(assert (= (x1762 x2309) (ite (= x2309 x59) x1209 (x1340 x2309))))
(assert (= (x33 x867) 0))
(assert (x107 x1244))
(assert (x107 x1881))
(assert (= (ite (and (not x2299) x2775) (x795 x1387) (x1613 x1387)) (x2338 x1387)))
(assert (x107 x1180))
(assert (= (ite (= x1544 x501) x3030 (x1531 x1544)) (x805 x1544)))
(assert (= (x2426 x2309) (ite (and x2105 x29) (x593 x2309) (x1044 x2309))))
(assert (= (ite (= x1909 x499) x2188 (x2707 x1909)) (x2255 x1909)))
(assert (x107 x520))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x1642) (x1059 x1642)) (ite (and x135 x2374) (x205 x1642) (ite (and x3004 x2850) (x1777 x1642) (x2338 x1642)))) (x2997 x1642)))
(assert (= (and x3056 x808) x256))
(assert (= (x609 x1695) (ite (= x2150 x1695) 96 (x918 x1695))))
(assert (= (ite (= x59 x2725) x1209 (x1340 x2725)) (x1762 x2725)))
(assert (= (x205 x1041) (ite (and x724 (not x2377)) (x798 x1041) (x346 x1041))))
(assert (= (x1328 x1706) (ite (= x1745 x1706) x585 (x2580 x1706))))
(assert (x107 x1785))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x966) (x1059 x966)) (ite (and x135 x2374) (x205 x966) (ite (and x2850 x3004) (x1777 x966) (x2338 x966)))) (x2997 x966)))
(assert (x107 x2762))
(assert (= (x3018 x433) (ite (= x3008 x433) x1217 (x340 x433))))
(assert (= (ite (= x866 x3008) x1217 (x340 x866)) (x3018 x866)))
(assert (x107 x1610))
(assert (x107 x1906))
(assert (x107 x608))
(assert (x107 x325))
(assert (= (x1845 x914) (ite (and x1892 x896 (not x2097)) (x2539 x914) (x2300 x914))))
(assert (= (x1819 x1516) (ite (= x1516 x2425) x859 (x103 x1516))))
(assert (= (x396 x1041) (ite (and (not x2376) x3) (x651 x1041) (ite (and x1264 (not x150)) (x1769 x1041) (ite (and x282 (not x601)) (x2255 x1041) (ite (and x1733 (not x1290)) (x2707 x1041) (x326 x1041)))))))
(assert (= (x245 x2387) (ite (= x2387 x2962) x950 (x1429 x2387))))
(assert (= 0 (x1494 (- x267 x2555))))
(assert (= (ite (= x267 x1615) x2726 (x2268 x267)) (x2189 x267)))
(assert (= x707 (and x740 x2200)))
(assert (= (x609 x1776) (ite (= x2150 x1776) 96 (x918 x1776))))
(assert (x107 x1878))
(assert (= (ite (= x2298 x2129) x2451 (x1226 x2298)) (x657 x2298)))
(assert (= (ite (= x261 x420) x952 (x1769 x261)) (x651 x261)))
(assert (= (x902 x294) (ite (= x227 x294) x22 (x56 x294))))
(assert (= (x1370 x1882) (ite (= x1882 x2298) x3034 (x161 x1882))))
(assert (= (ite (= 224 x1136) x770 (x302 x1136)) (x2995 x1136)))
(assert (= (ite (and x2123 (not x208)) (x1845 x629) (x301 x629)) (x1777 x629)))
(assert (= (ite (= x1821 x1706) x3034 (x1728 x1706)) (x1450 x1706)))
(assert (x107 x2066))
(assert (= 0 (x33 x874)))
(assert (= (ite (= x3011 x1547) x1463 (x1215 x3011)) (x1996 x3011)))
(assert (= (x1215 x1483) (ite (= x1508 x1483) x626 (x220 x1483))))
(assert (= x1960 (=> (and (>= 1461501637330902918203684832716283019655932542975 x190) (= (< 1 x1725) x132) (= (x864 (+ x425 64)) x751) (= x190 (x1667 x919))) (and (=> (not x132) x1285) (=> x132 x2628)))))
(assert (x107 x2859))
(assert (= (x1592 (x2600 x1334)) x1334))
(assert (= (ite (= x2553 x824) x1666 (x902 x2553)) (x801 x2553)))
(assert (= (x807 x370) (ite (= x2107 x370) x315 (x533 x370))))
(assert (= (x1762 x267) (ite (= x59 x267) x1209 (x1340 x267))))
(assert (= (ite (= x478 x3011) x1445 (x1996 x3011)) (x1160 x3011)))
(assert (= (ite (= x1946 x2128) x1897 (x657 x1946)) (x125 x1946)))
(assert (x107 x2677))
(assert (= (x125 x49) (ite (= x49 x2128) x1897 (x657 x49))))
(assert (= (ite (and (not x2377) x724) (x798 x1594) (x346 x1594)) (x205 x1594)))
(assert (x107 x958))
(assert (= (x2036 x822) (ite (= x822 x2642) x397 (x1902 x822))))
(assert (= (x1494 (- x2553 x2555)) 0))
(assert (= (x798 x97) (ite (and x682 x2759) (x2795 x97) (x2138 x97))))
(assert (= (ite (= x2597 x1242) x2639 (x225 x2597)) (x1810 x2597)))
(assert (x2478 x2055))
(assert (x107 x2676))
(assert (x107 x1339))
(assert (= (x1090 x961) (ite (= x677 x961) x2612 (x1762 x961))))
(assert (= (x2931 x822) (ite (= x3023 x822) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x822))))
(assert (= (ite (= x1267 192) x2714 (x2783 x1267)) (x302 x1267)))
(assert (= (x1819 x483) (ite (= x2425 x483) x859 (x103 x483))))
(assert (= (ite (= x517 x455) x1914 (x2939 x455)) (x2539 x455)))
(assert (= (x2600 (x348 1684360437)) 1684360437))
(assert (= (ite (= x2168 x3008) x1217 (x340 x2168)) (x3018 x2168)))
(assert (= (ite (= x812 x2248) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x735 x2248)) (x511 x2248)))
(assert (= x2055 (x2600 (x1592 x2055))))
(assert (= (ite (= x424 x1594) x2357 (x2997 x1594)) (x1958 x1594)))
(assert (= (x595 x1776) (ite (= x1776 x159) 96 (x1952 x1776))))
(assert (= (=> (and (= (not (< 1 x2349)) x786) (= (x2059 x80 1) x2349) (= (x3026 1 x80) x2026) (= (= x2026 0) x586)) (and (=> (and (= x231 (ite x586 1 10)) (= 100 x901)) x1917) x786)) x661))
(assert (= x2668 (x2600 (x1592 x2668))))
(assert (x107 x979))
(assert (x107 x2546))
(assert (= (x939 x1453) (ite (= x2576 x1453) x1279 (x1888 x1453))))
(assert (= (x1769 x2594) (ite (= x2594 x2367) x2894 (x2255 x2594))))
(assert (= (ite (= x961 x420) x952 (x1769 x961)) (x651 x961)))
(assert (x107 x2968))
(assert (= (x1539 x2597) (ite (= x1583 x2597) x1235 (x1450 x2597))))
(assert (= (x2338 x2546) (ite (and (not x2299) x2775) (x795 x2546) (x1613 x2546))))
(assert (= (ite (= x67 x1083) x367 (x2880 x67)) (x2795 x67)))
(assert (= (ite (= x2553 128) x1725 (x33 x2553)) (x1314 x2553)))
(assert (= (ite (= x1642 x1821) x3034 (x1728 x1642)) (x1450 x1642)))
(assert (= (x1314 x2597) (ite (= x2597 128) x1725 (x33 x2597))))
(assert (= (x1370 x1244) (ite (= x2298 x1244) x3034 (x161 x1244))))
(assert (= (ite (= 128 x2991) x1725 (x33 x2991)) (x1314 x2991)))
(assert (= (x595 x436) (ite (= x159 x436) 96 (x1952 x436))))
(assert (= (x798 x182) (ite (and x2759 x682) (x2795 x182) (x2138 x182))))
(assert (x107 x2874))
(assert (= (x805 x2836) (ite (= x2836 x501) x3030 (x1531 x2836))))
(assert (= (ite (= x1261 x2552) x2738 (x2950 x2552)) (x1226 x2552)))
(assert (= (x2328 x1732) (ite (and x923 x2926) (x1952 x1732) (ite (and x1236 (not x602)) (x595 x1732) (x1546 x1732)))))
(assert (= (ite (= x1261 x1642) x2738 (x2950 x1642)) (x1226 x1642)))
(assert (= (x1903 x370) (ite (= x370 x1809) x50 (x2159 x370))))
(assert (= (x225 x2309) (ite (= x2309 x796) x2187 (x801 x2309))))
(assert (= (x2720 x2594) (ite (= x2594 x972) x1063 (x1903 x2594))))
(assert (= (ite (= x1348 x913) x542 (x2394 x913)) (x2063 x913)))
(assert (x107 x1627))
(assert (= (x1539 x1821) (ite (= x1583 x1821) x1235 (x1450 x1821))))
(assert (= (ite (= x433 x159) 96 (x1952 x433)) (x595 x433)))
(assert (= (x1450 x1483) (ite (= x1483 x1821) x3034 (x1728 x1483))))
(assert (x107 x1836))
(assert (= (x1370 x370) (ite (= x2298 x370) x3034 (x161 x370))))
(assert (= (ite (= x1516 x2709) x2925 (x1370 x1516)) (x2172 x1516)))
(assert (= (=> (= (= 0 x2214) x837) (and (=> (and (= 3 x582) (= x2703 0) x837 (= x2491 x2966) (= 0 x1250) (= x2690 x1984)) x2442) (=> (and (or (and (= (x2898 (x1592 x2559)) x876) (= (>= (x239 (x1592 274184521717934524641157099916833587223)) x273) x2755) x870 x2727 x2755 (< x285 4294967296) (= x273 (x2898 (x1592 274184521717934524641157099916833587223))) (= x870 (= (x239 (x1592 x2559)) x876))) (not x2727)) (not x837) (= x36 (= x1268 0)) (= x810 (x864 (+ 4 x2966))) (or (and (= x1224 3) x36 (= x366 x2214) (= x1984 x2916)) (and (= (uninterp_mod (* x2214 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x147) (= x237 x366) (= x336 (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x462))) (= x1224 3) (= x953 (x3026 1461501637330902918203684832716283019655932542975 x2640)) (not x36) (= x2916 x223) (= x462 (- (/ x147 1000000000000000000) (uninterp_frac x147 1000000000000000000))) (= (x2496 x1981) x1057) (= x2529 (x1408 x39 1)) (= x2311 (ite (> x1057 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x864 (+ x462 x1057)))) (= (x2802 (x1592 x953) (x348 3) 0) x1554) (= x1981 (x1408 x1554 1)) (= (x2802 (x1592 x223) (x348 3) 0) x39) (= x223 (x3026 1461501637330902918203684832716283019655932542975 x2640)) (= (x163 (- x2214 x462)) x237) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1057) (<= 0 x1057))) (not (= 0 x1365)) (= x2727 (> x1365 0)) (not (= x788 0)) (= (x3026 1461501637330902918203684832716283019655932542975 x2825) x584) (= (x864 (+ x2966 36)) x43) (= (x1942 (x1592 x2559)) x788)) x3021))) x1653))
(assert (= (ite (= x3023 x2474) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2474)) (x2931 x2474)))
(assert (= (ite (= x2061 x2477) x515 (x224 x2477)) (x283 x2477)))
(assert (= (ite (= 192 x1695) x2714 (x2783 x1695)) (x302 x1695)))
(assert (x107 x1449))
(assert (x107 x2054))
(assert (= (x1592 1000000000000000000) (x348 1000000000000000000)))
(assert (= (ite (and (not x2299) x2775) (x795 x2847) (x1613 x2847)) (x2338 x2847)))
(assert (= (ite (= x2477 x478) x1445 (x1996 x2477)) (x1160 x2477)))
(assert (= (x2720 x97) (ite (= x97 x972) x1063 (x1903 x97))))
(assert (= (x1314 x2751) (ite (= 128 x2751) x1725 (x33 x2751))))
(assert (x107 x2519))
(assert (x107 x438))
(assert (= (x1958 x2597) (ite (= x2597 x424) x2357 (x2997 x2597))))
(assert (= (ite (= x2454 x1642) x823 (x245 x1642)) (x1340 x1642)))
(assert (= (x3018 x2817) (ite (= x3008 x2817) x1217 (x340 x2817))))
(assert (= (x1325 x2168) (ite (= x2168 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2168))))
(assert (x107 x2110))
(assert (= (ite (and x1798 (not x2933)) (x125 x1642) (ite (and x77 (not x969)) (x657 x1642) (ite (and x2091 (not x1421)) (x1226 x1642) (ite (and x697 (not x2706)) (x2950 x1642) (x2504 x1642))))) (x63 x1642)))
(assert (x405 x2209))
(assert (x107 x515))
(assert (x405 x2090))
(assert (= (ite (and (not x208) x2123) (x1845 x1484) (x301 x1484)) (x1777 x1484)))
(assert (= (x2172 x483) (ite (= x2709 x483) x2925 (x1370 x483))))
(assert (= (ite (and x2422 x2821 (not x566)) (x2189 x267) (x168 x267)) (x2167 x267)))
(assert (= (ite (= 128 x866) x1725 (x33 x866)) (x1314 x866)))
(assert (= (or x2566 (and x282 (not x601)) (and x3 (not x2376)) (and (not x150) x1264) (and (not x1290) x1733)) x1979))
(assert (= (x2328 x1244) (ite (and x923 x2926) (x1952 x1244) (ite (and (not x602) x1236) (x595 x1244) (x1546 x1244)))))
(assert (= (ite (= x2367 x97) x2894 (x2255 x97)) (x1769 x97)))
(assert (= (ite (= x961 x2150) 96 (x918 x961)) (x609 x961)))
(assert (= (x887 x67) (ite (= x1231 x67) x775 (x44 x67))))
(assert (x107 x1463))
(assert (x107 x1056))
(assert (x107 x1552))
(assert (x107 x2501))
(assert (= (x2172 x433) (ite (= x2709 x433) x2925 (x1370 x433))))
(assert (= (x2600 (x1592 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (= (x225 x1946) (ite (= x1946 x796) x2187 (x801 x1946))))
(assert (= x2389 (and x3049 x2946)))
(assert (= (ite (= x2552 x2085) x1910 (x970 x2552)) (x890 x2552)))
(assert (x107 x934))
(assert (x107 x1574))
(assert (= (x1958 x3011) (ite (= x3011 x424) x2357 (x2997 x3011))))
(assert (x107 x2206))
(assert (= (ite (= x517 x966) x1914 (x2939 x966)) (x2539 x966)))
(assert (= (ite (= x1946 160) x190 (x1314 x1946)) (x2783 x1946)))
(assert (= (=> (and (= x1395 (- (/ x771 1000000000000000000) (uninterp_frac x771 1000000000000000000))) (= (not (> x1367 1)) x2892) (= x408 (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1395))) (not (= x1036 0)) (= (x864 (+ x1785 31)) x463) (= x1367 (x937 x1594)) (= x1823 (x864 (+ x1038 x674))) (= (* x799 x2103) x771) (= x1038 (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x463)) (= (x937 x674) x799) (not (< x408 0)) (= x1039 x1395) (not (or (> x1785 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1785) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1785) true)))) (< (* x2103 x799) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and x2892 (=> (and (= x1012 x1823) (= x727 x1039)) x2999))) x1137))
(assert (x107 x1614))
(assert (= (x2707 x629) (ite (= x1807 x629) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x629))))
(assert (x107 x499))
(assert (= (ite (= x1348 x1544) x542 (x2394 x1544)) (x2063 x1544)))
(assert (x107 x1190))
(assert (= (x2018 x1946) (ite (and (not x2476) x1866) (x2232 x1946) (x1379 x1946))))
(assert (= (x95 x1041) (ite (= x1041 x1661) x2246 (x1777 x1041))))
(assert (x107 x2244))
(assert (= (ite (and x3 (not x2376)) (x651 x1873) (ite (and (not x150) x1264) (x1769 x1873) (ite (and (not x601) x282) (x2255 x1873) (ite (and x1733 (not x1290)) (x2707 x1873) (x326 x1873))))) (x396 x1873)))
(assert (= (x1029 x2546) (ite (and (not x2019) x2949) (x2993 x2546) (x2001 x2546))))
(assert (= (x33 x822) 0))
(assert (x107 x1564))
(assert (= (ite (= x433 x766) x1423 (x2397 x433)) (x2073 x433)))
(assert (= (ite (and x3 (not x2376)) (x651 x2751) (ite (and x1264 (not x150)) (x1769 x2751) (ite (and x282 (not x601)) (x2255 x2751) (ite (and x1733 (not x1290)) (x2707 x2751) (x326 x2751))))) (x396 x2751)))
(assert (= (ite (and x2851 x1335) (x3018 x86) (ite (and x1301 (not x3047)) (x1317 x86) (x2805 x86))) (x915 x86)))
(assert (= (x651 x293) (ite (= x420 x293) x952 (x1769 x293))))
(assert (= (ite (and x1979 (not x94)) (x396 x2513) (x87 x2513)) (x1782 x2513)))
(assert (= (x1810 x2168) (ite (= x1242 x2168) x2639 (x225 x2168))))
(assert (= (ite (= x1267 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1267)) (x1325 x1267)))
(assert (= (x2338 x1442) (ite (and x2775 (not x2299)) (x795 x1442) (x1613 x1442))))
(assert (= (ite (= x1484 192) x2714 (x2783 x1484)) (x302 x1484)))
(assert (= (x902 x1873) (ite (= x227 x1873) x22 (x56 x1873))))
(assert (= (x1090 x1780) (ite (= x677 x1780) x2612 (x1762 x1780))))
(assert (= (ite (= x293 x227) x22 (x56 x293)) (x902 x293)))
(assert (= (ite (= x780 x1873) x555 (x2526 x1873)) (x1952 x1873)))
(assert (= (x1952 x2623) (ite (= x2623 x780) x555 (x2526 x2623))))
(assert (= (x887 x2594) (ite (= x2594 x1231) x775 (x44 x2594))))
(assert (= (ite (= 128 x364) x1725 (x33 x364)) (x1314 x364)))
(assert (= (ite (= 160 x2594) x190 (x1314 x2594)) (x2783 x2594)))
(assert (x107 x2119))
(assert (= (ite (= x1083 x2597) x367 (x2880 x2597)) (x2795 x2597)))
(assert (= (ite (= 160 x2751) x190 (x1314 x2751)) (x2783 x2751)))
(assert (x107 x2500))
(assert (x107 x1024))
(assert (= (ite (and (not x2377) x724) (x798 x2847) (x346 x2847)) (x205 x2847)))
(assert (= (x2328 x267) (ite (and x2926 x923) (x1952 x267) (ite (and (not x602) x1236) (x595 x267) (x1546 x267)))))
(assert (= (ite (= x846 x2127) x3034 (x2328 x846)) (x1902 x846)))
(assert (x107 x2346))
(assert (x107 x1569))
(assert (= (ite (= x2553 x2129) x2451 (x1226 x2553)) (x657 x2553)))
(assert (= 0 (x1494 (- x867 x2555))))
(assert (= (x2720 x261) (ite (= x972 x261) x1063 (x1903 x261))))
(assert (= (x2539 x483) (ite (= x483 x517) x1914 (x2939 x483))))
(assert (= (ite (and x2851 x1335) (x3018 x364) (ite (and (not x3047) x1301) (x1317 x364) (x2805 x364))) (x915 x364)))
(assert (= (x2073 x49) (ite (= x766 x49) x1423 (x2397 x49))))
(assert (= (ite (= x2127 x49) x3034 (x2328 x49)) (x1902 x49)))
(assert (= (ite (and x29 (not x1970)) (x63 x1483) (x692 x1483)) (x1044 x1483)))
(assert (x107 x2721))
(assert (= (x1314 x2847) (ite (= 128 x2847) x1725 (x33 x2847))))
(assert (= (ite (= x796 x2513) x2187 (x801 x2513)) (x225 x2513)))
(assert (x107 x257))
(assert (= (ite (= x501 x3035) x3030 (x1531 x3035)) (x805 x3035)))
(assert (= (x1592 (x2600 x268)) x268))
(assert (= (x1810 x1387) (ite (= x1387 x1242) x2639 (x225 x1387))))
(assert (= (ite (= x1594 x796) x2187 (x801 x1594)) (x225 x1594)))
(assert (= (x1265 x2217) (ite (= x2635 x2217) x1168 (x2980 x2217))))
(assert (x107 x1225))
(assert (= (x1090 x97) (ite (= x677 x97) x2612 (x1762 x97))))
(assert (x107 x2469))
(assert (x107 x1797))
(assert (= (ite (= x67 x2642) x397 (x1902 x67)) (x2036 x67)))
(assert (x107 x1824))
(assert (x107 x2768))
(assert (= (ite (and x1335 x2851) (x3018 x488) (ite (and x1301 (not x3047)) (x1317 x488) (x2805 x488))) (x915 x488)))
(assert (x107 x2799))
(assert (= x2161 (=> (and (= (x1408 x1495 1) x2680) (<= x1235 1461501637330902918203684832716283019655932542975) (= x1388 (< x19 x2285)) (<= 0 x1235) (= x1235 (x635 x1495)) (= (- (/ (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- (x2600 x1495) (x2600 x351)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)) x2940) (= x19 (x864 (+ 64 x1821))) (= (uninterp_mod (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x549) (= x1495 (x1088 (x348 1) 0)) (< x1235 1461501637330902918203684832716283019655932542976) (= (x1088 (x348 1) 0) x351) (= (x864 (+ x1583 x549)) x2285)) (and (=> x1388 x211) (=> (and (not x1388) (= x1796 1)) x3053)))))
(assert (= (x1534 x1136) (ite (= x1318 x1136) x1964 (x715 x1136))))
(assert (= (ite (= x2553 x2128) x1897 (x657 x2553)) (x125 x2553)))
(assert (= (ite (and x3 (not x2376)) (x651 x1136) (ite (and (not x150) x1264) (x1769 x1136) (ite (and (not x601) x282) (x2255 x1136) (ite (and x1733 (not x1290)) (x2707 x1136) (x326 x1136))))) (x396 x1136)))
(assert (= (ite (= x874 x2642) x397 (x1902 x874)) (x2036 x874)))
(assert (= (x205 x2406) (ite (and (not x2377) x724) (x798 x2406) (x346 x2406))))
(assert (= (ite (and x2775 (not x2299)) (x795 x2710) (x1613 x2710)) (x2338 x2710)))
(assert (= (ite (= x517 x822) x1914 (x2939 x822)) (x2539 x822)))
(assert (= (x2931 x1706) (ite (= x1706 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1706))))
(assert (= (x1777 x455) (ite (and x2123 (not x208)) (x1845 x455) (x301 x455))))
(assert (= (x918 x364) (ite (= x1453 x364) x555 (x2602 x364))))
(assert (= (ite (= x2359 x866) x2277 (x3037 x866)) (x1317 x866)))
(assert (x107 x2371))
(assert (= (x887 x1318) (ite (= x1231 x1318) x775 (x44 x1318))))
(assert (= (x63 x293) (ite (and (not x2933) x1798) (x125 x293) (ite (and x77 (not x969)) (x657 x293) (ite (and (not x1421) x2091) (x1226 x293) (ite (and (not x2706) x697) (x2950 x293) (x2504 x293)))))))
(assert (= (x104 x488) (ite (= x467 x488) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x488))))
(assert (x107 x2952))
(assert (= (ite (= x2717 x1083) x367 (x2880 x2717)) (x2795 x2717)))
(assert (x107 x2709))
(assert (= (x205 x436) (ite (and (not x2377) x724) (x798 x436) (x346 x436))))
(assert (= (ite (= x246 x1516) x1037 (x807 x1516)) (x2159 x1516)))
(assert (= (x2720 x370) (ite (= x370 x972) x1063 (x1903 x370))))
(assert (x107 x2716))
(assert (x107 x2928))
(assert (x107 x2266))
(assert (= (x918 x2869) (ite (= x2869 x1453) x555 (x2602 x2869))))
(assert (= (x1340 x370) (ite (= x2454 x370) x823 (x245 x370))))
(assert (= (x1952 x2387) (ite (= x2387 x780) x555 (x2526 x2387))))
(assert (= (ite (= x2150 x2477) 96 (x918 x2477)) (x609 x2477)))
(assert (= (x657 x685) (ite (= x2129 x685) x2451 (x1226 x685))))
(assert (x107 x67))
(assert (= (ite (= x1041 x3008) x1217 (x340 x1041)) (x3018 x1041)))
(assert (= (x1044 x3011) (ite (and x29 (not x1970)) (x63 x3011) (x692 x3011))))
(assert (=> (> (+ 10000 1) x2559) (= (x1592 x2559) (x348 x2559))))
(assert (x107 x2690))
(assert (= (ite (= x293 x1821) x3034 (x1728 x293)) (x1450 x293)))
(assert (= (x2172 x1803) (ite (= x2709 x1803) x2925 (x1370 x1803))))
(assert (= (x2338 x822) (ite (and (not x2299) x2775) (x795 x822) (x1613 x822))))
(assert (= (x1810 x1873) (ite (= x1873 x1242) x2639 (x225 x1873))))
(assert (= (x939 x2576) x1279))
(assert (= (ite (= 128 x914) x1725 (x33 x914)) (x1314 x914)))
(assert (= (ite (= x159 x370) 96 (x1952 x370)) (x595 x370)))
(assert (x107 x2335))
(assert (= (x1902 x67) (ite (= x67 x2127) x3034 (x2328 x67))))
(assert (= (ite (= x227 x97) x22 (x56 x97)) (x902 x97)))
(assert (x107 x505))
(assert (= (x3018 x2477) (ite (= x2477 x3008) x1217 (x340 x2477))))
(assert (= (and x1248 x1498) x1280))
(assert (= (ite (and x2123 (not x208)) (x1845 x2298) (x301 x2298)) (x1777 x2298)))
(assert (= (ite (= x796 x685) x2187 (x801 x685)) (x225 x685)))
(assert (x107 x589))
(assert (= (ite (and x2926 x923) (x1952 x67) (ite (and x1236 (not x602)) (x595 x67) (x1546 x67))) (x2328 x67)))
(assert (= (x396 x483) (ite (and x3 (not x2376)) (x651 x483) (ite (and (not x150) x1264) (x1769 x483) (ite (and (not x601) x282) (x2255 x483) (ite (and (not x1290) x1733) (x2707 x483) (x326 x483)))))))
(assert (= (x2995 x722) (ite (= 224 x722) x770 (x302 x722))))
(assert (x107 x961))
(assert (= (x33 x2817) 0))
(assert (x107 x2201))
(assert (x107 x1638))
(assert (= (ite (= x517 x1041) x1914 (x2939 x1041)) (x2539 x1041)))
(assert (x107 x1281))
(assert (x107 x2154))
(assert (= (ite (= x2298 x2513) x3034 (x161 x2513)) (x1370 x2513)))
(assert (= (ite (= 160 x2048) x190 (x1314 x2048)) (x2783 x2048)))
(assert (= (x3018 x2869) (ite (= x2869 x3008) x1217 (x340 x2869))))
(assert (x107 x2493))
(assert (= (x1762 x1136) (ite (= x59 x1136) x1209 (x1340 x1136))))
(assert (= (x2795 x857) (ite (= x1083 x857) x367 (x2880 x857))))
(assert (= (x2426 x685) (ite (and x2105 x29) (x593 x685) (x1044 x685))))
(assert (= (x2795 x1909) (ite (= x1083 x1909) x367 (x2880 x1909))))
(assert (= (ite (and x2759 x682) (x2795 x1873) (x2138 x1873)) (x798 x1873)))
(assert (= (ite (= x1695 x517) x1914 (x2939 x1695)) (x2539 x1695)))
(assert (= (ite (= x364 192) x2714 (x2783 x364)) (x302 x364)))
(assert (= (ite (= x1516 224) x770 (x302 x1516)) (x2995 x1516)))
(assert (= (x1265 x1387) (ite (= x2635 x1387) x1168 (x2980 x1387))))
(assert (= (ite (= x677 x49) x2612 (x1762 x49)) (x1090 x49)))
(assert (= (x1370 x2477) (ite (= x2477 x2298) x3034 (x161 x2477))))
(assert (= (ite (= x2710 x2454) x823 (x245 x2710)) (x1340 x2710)))
(assert (x107 x2247))
(assert (= (ite (= x455 x2150) 96 (x918 x455)) (x609 x455)))
(assert (x107 x1623))
(assert (x2478 x2731))
(assert (= (ite (= x1615 x455) x2726 (x2268 x455)) (x2189 x455)))
(assert (x107 x592))
(assert (x107 x1507))
(assert (x607 x967 x982 x2465 x3010))
(assert (x107 x2151))
(assert (x107 x667))
(assert (= (x1845 x1387) (ite (and (not x2097) x1892 x896) (x2539 x1387) (x2300 x1387))))
(assert (= (x104 x97) (ite (= x467 x97) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x97))))
(assert (= (x1845 x2406) (ite (and x1892 (not x2097) x896) (x2539 x2406) (x2300 x2406))))
(assert (= (x2993 x766) (ite (and x1145 x1697) (x939 x766) (x1686 x766))))
(assert (= (x2204 x1706) (ite (= x1706 x424) x2700 (x2997 x1706))))
(assert (= (x1777 x2477) (ite (and x2123 (not x208)) (x1845 x2477) (x301 x2477))))
(assert (x107 x2619))
(assert (= (x2338 x2048) (ite (and (not x2299) x2775) (x795 x2048) (x1613 x2048))))
(assert (= (ite (= 160 x1642) x190 (x1314 x1642)) (x2783 x1642)))
(assert (x107 x1477))
(assert (= (x2167 x2035) (ite (and x2422 x2821 (not x566)) (x2189 x2035) (x168 x2035))))
(assert (= (ite (= x261 x2454) x823 (x245 x261)) (x1340 x261)))
(assert (= (ite (= x2150 x943) 96 (x918 x943)) (x609 x943)))
(assert (x107 x553))
(assert (x107 x1490))
(assert (x405 x1871))
(assert (x107 x779))
(assert (= (ite (and x1892 (not x2097) x896) (x2539 x488) (x2300 x488)) (x1845 x488)))
(assert (x107 x1249))
(assert (x107 x636))
(assert (= (x95 x780) (ite (= x1661 x780) x2246 (x1777 x780))))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x1041) (x2300 x1041)) (x1845 x1041)))
(assert (= (x1265 x2635) x1168))
(assert (x107 x1241))
(assert (= (ite (= x261 x1661) x2246 (x1777 x261)) (x95 x261)))
(assert (= (ite (= x1136 x2127) x3034 (x2328 x1136)) (x1902 x1136)))
(assert (= (x657 x115) (ite (= x2129 x115) x2451 (x1226 x115))))
(assert (x107 x1120))
(assert (= (x1317 x914) (ite (= x2359 x914) x2277 (x3037 x914))))
(assert (= (x902 x267) (ite (= x227 x267) x22 (x56 x267))))
(assert (x107 x412))
(assert (= (x1265 x1732) (ite (= x2635 x1732) x1168 (x2980 x1732))))
(assert (x405 x402))
(assert (= (ite (= x2576 x2553) x1279 (x1888 x2553)) (x939 x2553)))
(assert (= (x225 x2847) (ite (= x2847 x796) x2187 (x801 x2847))))
(assert (= (ite (= x159 x2106) 96 (x1952 x2106)) (x595 x2106)))
(assert (= (x902 x1453) (ite (= x227 x1453) x22 (x56 x1453))))
(assert (= (ite (= x3032 x1197) x573 (x890 x1197)) (x2764 x1197)))
(assert (= (x1044 x115) (ite (and x29 (not x1970)) (x63 x115) (x692 x115))))
(assert (x107 x2437))
(assert (= (x801 x182) (ite (= x182 x824) x1666 (x902 x182))))
(assert (x107 x787))
(assert (= (ite (= 224 x1068) x770 (x302 x1068)) (x2995 x1068)))
(assert (x107 x1799))
(assert (= (x915 x1695) (ite (and x2851 x1335) (x3018 x1695) (ite (and (not x3047) x1301) (x1317 x1695) (x2805 x1695)))))
(assert (x107 x1837))
(assert (x417 x403 x1669))
(assert (x107 x2359))
(assert (= x1011 (=> (and (= x2354 (x2397 x1615)) (= (< 0 x2354) x2141)) (and (=> (and (= x838 0) (not x2141)) x2286) (=> x2141 x221)))))
(assert (x107 x941))
(assert (= (ite (= x270 x2367) x2894 (x2255 x270)) (x1769 x270)))
(assert (= (x1340 x2298) (ite (= x2298 x2454) x823 (x245 x2298))))
(assert (= (x1958 x294) (ite (= x294 x424) x2357 (x2997 x294))))
(assert (x405 1))
(assert (= (ite (= x67 x2298) x3034 (x161 x67)) (x1370 x67)))
(assert (= (x1810 x2553) (ite (= x1242 x2553) x2639 (x225 x2553))))
(assert (x107 x1563))
(assert (= (x1539 x2594) (ite (= x1583 x2594) x1235 (x1450 x2594))))
(assert (= (x2931 x2309) (ite (= x2309 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2309))))
(assert (= (x2720 x1873) (ite (= x1873 x972) x1063 (x1903 x1873))))
(assert (= (ite (and x724 (not x2377)) (x798 x2309) (x346 x2309)) (x205 x2309)))
(assert (= (ite (= x2359 x1544) x2277 (x3037 x1544)) (x1317 x1544)))
(assert (= (x2707 x2725) (ite (= x2725 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2725))))
(assert (= (x595 x2298) (ite (= x159 x2298) 96 (x1952 x2298))))
(assert (= (x1340 x1873) (ite (= x1873 x2454) x823 (x245 x1873))))
(assert (x107 x179))
(assert (= (ite (= x2635 x1267) x1168 (x2980 x1267)) (x1265 x1267)))
(assert (= (x1819 x2477) (ite (= x2425 x2477) x859 (x103 x2477))))
(assert (x107 x1005))
(assert (x107 x1362))
(assert (= (x1795 (- x1139 x2049)) 0))
(assert (= (x2783 x2725) (ite (= x2725 160) x190 (x1314 x2725))))
(assert (= (x651 x1780) (ite (= x1780 x420) x952 (x1769 x1780))))
(assert (x107 x110))
(assert (= (x130 x2553) (ite (= x1489 x2553) x1829 (x1668 x2553))))
(assert (x107 x1870))
(assert (x107 x2129))
(assert (x107 x1641))
(assert (= (ite (= x1453 x822) x555 (x2602 x822)) (x918 x822)))
(assert (= (x1845 x455) (ite (and x896 x1892 (not x2097)) (x2539 x455) (x2300 x455))))
(assert (= (x939 x1968) (ite (= x2576 x1968) x1279 (x1888 x1968))))
(assert (= (x33 x655) 0))
(assert (= (x1952 x1909) (ite (= x1909 x780) x555 (x2526 x1909))))
(assert (= (ite (= x182 x2298) x3034 (x161 x182)) (x1370 x182)))
(assert (= (ite (= x2594 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2594)) (x2707 x2594)))
(assert (= (x2795 x1041) (ite (= x1083 x1041) x367 (x2880 x1041))))
(assert (x107 x2684))
(assert (= (x1340 x294) (ite (= x2454 x294) x823 (x245 x294))))
(assert (= (ite (= x972 x2876) x1063 (x1903 x2876)) (x2720 x2876)))
(assert (x107 x1065))
(assert (= (ite (= x972 x1594) x1063 (x1903 x1594)) (x2720 x1594)))
(assert (= (ite (= x1484 x1083) x367 (x2880 x1484)) (x2795 x1484)))
(assert (x107 x2487))
(assert (= (x552 x1386) (ite (= x1386 x2356) x2989 (x1222 x1386))))
(assert (= (x2995 x975) (ite (= 224 x975) x770 (x302 x975))))
(assert (= (x1782 x3035) (ite (and x1979 (not x94)) (x396 x3035) (x87 x3035))))
(assert (x107 x2615))
(assert (= (x2018 x2035) (ite (and x1866 (not x2476)) (x2232 x2035) (x1379 x2035))))
(assert (x107 x1224))
(assert (= (ite (and x3 (not x2376)) (x651 x2869) (ite (and x1264 (not x150)) (x1769 x2869) (ite (and x282 (not x601)) (x2255 x2869) (ite (and (not x1290) x1733) (x2707 x2869) (x326 x2869))))) (x396 x2869)))
(assert (= (x423 x293) (ite (and x2655 x817) (x1534 x293) (ite (and (not x1834) x1941) (x887 x293) (x151 x293)))))
(assert (x107 x829))
(assert (= (ite (= x115 x2477) x2357 (x1427 x2477)) (x2259 x2477)))
(assert (x107 x1872))
(assert (= (ite (= x1873 x1846) x500 (x559 x1873)) (x970 x1873)))
(assert (= (x1370 x1516) (ite (= x1516 x2298) x3034 (x161 x1516))))
(assert (= (x918 x97) (ite (= x97 x1453) x555 (x2602 x97))))
(assert (x107 x1598))
(assert (= (ite (= x350 x293) x1558 (x12 x293)) (x2950 x293)))
(assert (= (ite (= x1780 x501) x3030 (x1531 x1780)) (x805 x1780)))
(assert (x107 x554))
(assert (= (ite (= x2168 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2168)) (x104 x2168)))
(assert (= (ite (and x2926 x923) (x1952 x2725) (ite (and (not x602) x1236) (x595 x2725) (x1546 x2725))) (x2328 x2725)))
(assert (= (x798 x2817) (ite (and x2759 x682) (x2795 x2817) (x2138 x2817))))
(assert (= (ite (= 128 x2406) x1725 (x33 x2406)) (x1314 x2406)))
(assert (= (x396 x2847) (ite (and x3 (not x2376)) (x651 x2847) (ite (and (not x150) x1264) (x1769 x2847) (ite (and x282 (not x601)) (x2255 x2847) (ite (and x1733 (not x1290)) (x2707 x2847) (x326 x2847)))))))
(assert (= (x1958 x1780) (ite (= x424 x1780) x2357 (x2997 x1780))))
(assert (x107 x1195))
(assert (x405 x2054))
(assert (= (x1902 x1387) (ite (= x2127 x1387) x3034 (x2328 x1387))))
(assert (= (x915 x2217) (ite (and x2851 x1335) (x3018 x2217) (ite (and x1301 (not x3047)) (x1317 x2217) (x2805 x2217)))))
(assert (= (ite (= x182 x2127) x3034 (x2328 x182)) (x1902 x182)))
(assert (= (x807 x2869) (ite (= x2107 x2869) x315 (x533 x2869))))
(assert (= (x1340 x780) (ite (= x780 x2454) x823 (x245 x780))))
(assert (= (ite (= x3023 x2847) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2847)) (x2931 x2847)))
(assert (= (ite (= x59 x2869) x1209 (x1340 x2869)) (x1762 x2869)))
(assert (= (x3018 x261) (ite (= x3008 x261) x1217 (x340 x261))))
(assert (x107 x1783))
(assert (x107 x485))
(assert (= (ite (= x370 x1261) x2738 (x2950 x370)) (x1226 x370)))
(assert (= (ite (= x846 128) x1725 (x33 x846)) (x1314 x846)))
(assert (x107 x971))
(assert (= (x205 x455) (ite (and (not x2377) x724) (x798 x455) (x346 x455))))
(assert (= (x2993 x1197) (ite (and x1145 x1697) (x939 x1197) (x1686 x1197))))
(assert (x107 x1953))
(assert (= (=> (= x2850 (= x2573 0)) (and (=> (and (= (x1777 x2106) x1465) (= x2629 (uninterp_mod (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2850) (= x1108 (= 0 x2246)) (= x2106 (x1777 x1442)) (= x2695 (x864 (+ x2629 32))) (= x1360 (x864 (+ x1661 x2695))) (= x1945 (x1777 x722)) (= x2048 (x1777 x1689)) (not (> x2246 18446744073709551615)) (= (x1777 x2048) x2246) (or (and (= x75 (x864 (+ x1661 32))) (not x1108) (= (uninterp_mod (* x2246 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1093)) x1108) (= (x1777 x1442) x722) (= x1945 x1465)) x2002) (=> (and x2850 (= x424 x1661) (= x2201 0) (= x447 0)) x1295))) x2350))
(assert (= (x245 x867) (ite (= x867 x2962) x950 (x1429 x867))))
(assert (= (ite (= x433 x824) x1666 (x902 x433)) (x801 x433)))
(assert (x107 x2589))
(assert (x107 x2575))
(assert (= (ite (= x2298 x1083) x367 (x2880 x2298)) (x2795 x2298)))
(assert (x107 x916))
(assert (= (=> (and (= (x864 (+ 64 x488)) x2751) (= (x1903 x1516) x1063) (= x2254 (x864 (+ 64 x1809))) (= x2004 (> x315 3))) (and (=> x2004 x176) (=> (and (= x227 x2254) (= x38 3) (not x2004) (= x2751 x2589)) x1626))) x1538))
(assert (= (x1328 x2552) (ite (= x2552 x1745) x585 (x2580 x2552))))
(assert (= (x2931 x1516) (ite (= x1516 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1516))))
(assert (x107 x319))
(assert (= (x423 x1706) (ite (and x2655 x817) (x1534 x1706) (ite (and x1941 (not x1834)) (x887 x1706) (x151 x1706)))))
(assert (= (ite (= x943 x3008) x1217 (x340 x943)) (x3018 x943)))
(assert (= (ite (= x350 x867) x1558 (x12 x867)) (x2950 x867)))
(assert (x107 x1857))
(assert (= (x801 x267) (ite (= x824 x267) x1666 (x902 x267))))
(assert (= (x657 x2594) (ite (= x2594 x2129) x2451 (x1226 x2594))))
(assert (x405 x394))
(assert (= (x2950 x2552) (ite (= x2552 x350) x1558 (x12 x2552))))
(assert (x107 x1221))
(assert (x107 x1395))
(assert (= (ite (= x3011 x3051) x9 (x2245 x3011)) (x928 x3011)))
(assert (= (ite (= x2817 x2367) x2894 (x2255 x2817)) (x1769 x2817)))
(assert (= (x1370 x2876) (ite (= x2876 x2298) x3034 (x161 x2876))))
(assert (x107 x891))
(assert (= (ite (= x2597 x824) x1666 (x902 x2597)) (x801 x2597)))
(assert (= (=> (and (= x2054 1) (= x2440 1) (= (x3026 x2440 x2603) x1062) (= x1051 (x3026 x2054 x2291)) (= x2291 (ite (> 78 x1871) 1 0)) (= (ite (> 32 x1871) 1 0) x2603) (= x2241 (= (x2884 x1051 x1062) 0))) (and (=> x2241 x2069) (=> (and (not x2241) (= x368 (x2877 10 x1871))) x1393))) x2919))
(assert (= (ite (= x1661 x294) x2246 (x1777 x294)) (x95 x294)))
(assert (= (ite (= x2454 x364) x823 (x245 x364)) (x1340 x364)))
(assert (= (ite (and x2821 x2422 (not x566)) (x2189 x1544) (x168 x1544)) (x2167 x1544)))
(assert (= (ite (= x1809 x1706) x50 (x2159 x1706)) (x1903 x1706)))
(assert (= (x1317 x3008) (ite (= x3008 x2359) x2277 (x3037 x3008))))
(assert (= (x1903 x433) (ite (= x433 x1809) x50 (x2159 x433))))
(assert (= (ite (= x261 x246) x1037 (x807 x261)) (x2159 x261)))
(assert (= (ite (= x780 x1318) x1964 (x715 x780)) (x1534 x780)))
(assert (= (x125 x2847) (ite (= x2847 x2128) x1897 (x657 x2847))))
(assert (= (ite (and x2105 x29) (x593 x370) (x1044 x370)) (x2426 x370)))
(assert (= (ite (= x685 x350) x1558 (x12 x685)) (x2950 x685)))
(assert (x107 x2026))
(assert (x107 x943))
(assert (= (=> (and (= (< 3 x626) x538) (= (x1160 x483) x1426) (= x2477 (x864 (+ x1873 64))) (= x2149 (x864 (+ x478 64)))) (and (=> x538 x2666) (=> (and (not x538) (= x2577 3) (= x2477 x1925) (= x2319 x2149)) x1658))) x2788))
(assert (= (x798 x67) (ite (and x2759 x682) (x2795 x67) (x2138 x67))))
(assert (= (ite (= x1583 x370) x1235 (x1450 x370)) (x1539 x370)))
(assert (= (ite (= 192 x1516) x2714 (x2783 x1516)) (x302 x1516)))
(assert (= (ite (= x261 160) x190 (x1314 x261)) (x2783 x261)))
(assert (= (ite (= x2127 x2717) x3034 (x2328 x2717)) (x1902 x2717)))
(assert (= (x33 x1695) 0))
(assert (= (and x1388 x2667) x2905))
(assert (= (x2539 x488) (ite (= x517 x488) x1914 (x2939 x488))))
(assert (x107 x1805))
(assert (= (x1845 x1706) (ite (and (not x2097) x896 x1892) (x2539 x1706) (x2300 x1706))))
(assert (x107 x2481))
(assert (= (ite (= x2298 x1909) x3034 (x161 x1909)) (x1370 x1909)))
(assert (= 0 (x33 x2477)))
(assert (= (ite (and (not x94) x1979) (x396 x1267) (x87 x1267)) (x1782 x1267)))
(assert (= (x225 x874) (ite (= x874 x796) x2187 (x801 x874))))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x2710) (x1059 x2710)) (ite (and x2374 x135) (x205 x2710) (ite (and x2850 x3004) (x1777 x2710) (x2338 x2710)))) (x2997 x2710)))
(assert (= (x2338 x961) (ite (and x2775 (not x2299)) (x795 x961) (x1613 x961))))
(assert (= (ite (= x86 x1583) x1235 (x1450 x86)) (x1539 x86)))
(assert (= (x595 x1483) (ite (= x1483 x159) 96 (x1952 x1483))))
(assert (x107 x1876))
(assert (= (ite (= 128 x1732) x1725 (x33 x1732)) (x1314 x1732)))
(assert (= (ite (= x2128 x1136) x1897 (x657 x1136)) (x125 x1136)))
(assert (= x81 (or (and (not x284) x2399) x749)))
(assert (= (ite (= x812 x1139) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x735 x1139)) (x511 x1139)))
(assert (= (x2600 (x1592 x681)) x681))
(assert (= (x245 x2309) (ite (= x2309 x2962) x950 (x1429 x2309))))
(assert (= (x2426 x2597) (ite (and x2105 x29) (x593 x2597) (x1044 x2597))))
(assert (= (ite (= x2876 x2127) x3034 (x2328 x2876)) (x1902 x2876)))
(assert (= (ite (= x2168 x2298) x3034 (x161 x2168)) (x1370 x2168)))
(assert (= (x3018 x2048) (ite (= x2048 x3008) x1217 (x340 x2048))))
(assert (x107 x2360))
(assert (x107 x2867))
(assert (x107 x1093))
(assert (= (x2255 x2513) (ite (= x499 x2513) x2188 (x2707 x2513))))
(assert (x107 x1571))
(assert (x107 x2188))
(assert (= (x2189 x1348) (ite (= x1348 x1615) x2726 (x2268 x1348))))
(assert (= (x887 x2546) (ite (= x1231 x2546) x775 (x44 x2546))))
(assert (x107 x2466))
(assert (x107 x2429))
(assert (x107 x974))
(assert (= (ite (= x2425 x2309) x859 (x103 x2309)) (x1819 x2309)))
(assert (x405 x60))
(assert (= (ite (= x2962 x961) x950 (x1429 x961)) (x245 x961)))
(assert (= (x1370 x2869) (ite (= x2869 x2298) x3034 (x161 x2869))))
(assert (x405 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (ite (= x2085 x1267) x1910 (x970 x1267)) (x890 x1267)))
(assert (x107 x360))
(assert (= (x1769 x2513) (ite (= x2513 x2367) x2894 (x2255 x2513))))
(assert (= (ite (= x2991 192) x2714 (x2783 x2991)) (x302 x2991)))
(assert (= (x801 x1197) (ite (= x824 x1197) x1666 (x902 x1197))))
(assert (x107 x1736))
(assert (= (x205 x2869) (ite (and (not x2377) x724) (x798 x2869) (x346 x2869))))
(assert (x107 x1532))
(assert (= (ite (= x182 x420) x952 (x1769 x182)) (x651 x182)))
(assert (= (x2783 x874) (ite (= 160 x874) x190 (x1314 x874))))
(assert (= (x651 x2513) (ite (= x2513 x420) x952 (x1769 x2513))))
(assert (= (x1810 x1594) (ite (= x1242 x1594) x2639 (x225 x1594))))
(assert (= (x928 x2477) (ite (= x3051 x2477) x9 (x2245 x2477))))
(assert (= (x1215 x1873) (ite (= x1508 x1873) x626 (x220 x1873))))
(assert (x405 x452))
(assert (= (x2426 x1041) (ite (and x2105 x29) (x593 x1041) (x1044 x1041))))
(assert (= (ite (and x2759 x682) (x2795 x483) (x2138 x483)) (x798 x483)))
(assert (= (x1762 x2847) (ite (= x2847 x59) x1209 (x1340 x2847))))
(assert (= (x2426 x433) (ite (and x2105 x29) (x593 x433) (x1044 x433))))
(assert (x107 x120))
(assert (= (ite (= x867 x824) x1666 (x902 x867)) (x801 x867)))
(assert (= (x348 42459404708690159261654315324267577519400883839135586425952143822324095778816) (x1592 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (= (x1265 x2847) (ite (= x2847 x2635) x1168 (x2980 x2847))))
(assert (= (x2328 x2991) (ite (and x2926 x923) (x1952 x2991) (ite (and (not x602) x1236) (x595 x2991) (x1546 x2991)))))
(assert (= (x1952 x789) (ite (= x789 x780) x555 (x2526 x789))))
(assert (= (x1494 (- x1483 x2555)) 0))
(assert (= (ite (= x780 x1136) x555 (x2526 x1136)) (x1952 x1136)))
(assert (= (ite (= x2085 x655) x1910 (x970 x655)) (x890 x655)))
(assert (= (x2995 x370) (ite (= x370 224) x770 (x302 x370))))
(assert (= (x283 x780) (ite (= x780 x2061) x515 (x224 x780))))
(assert (= (ite (= 160 x293) x190 (x1314 x293)) (x2783 x293)))
(assert (= (x595 x2553) (ite (= x2553 x159) 96 (x1952 x2553))))
(assert (= (ite (= x2817 x1742) x848 (x1767 x2817)) (x353 x2817)))
(assert (= (ite (= x2847 x2642) x397 (x1902 x2847)) (x2036 x2847)))
(assert (x107 x2766))
(assert (= (ite (= x1745 x1642) x585 (x2580 x1642)) (x1328 x1642)))
(assert (x107 x1959))
(assert (= (ite (= x1706 x2962) x950 (x1429 x1706)) (x245 x1706)))
(assert (= (x918 x1594) (ite (= x1453 x1594) x555 (x2602 x1594))))
(assert (= (ite (and x1145 x1697) (x939 x1642) (x1686 x1642)) (x2993 x1642)))
(assert (= (ite (= x629 x159) 96 (x1952 x629)) (x595 x629)))
(assert (x107 x1593))
(assert (= (ite (= x2709 x866) x2925 (x1370 x866)) (x2172 x866)))
(assert (x107 x2731))
(assert (x107 x2090))
(assert (= (x2036 x2710) (ite (= x2710 x2642) x397 (x1902 x2710))))
(assert (x107 x1046))
(assert (= (x423 x1594) (ite (and x817 x2655) (x1534 x1594) (ite (and x1941 (not x1834)) (x887 x1594) (x151 x1594)))))
(assert (= (ite (= x1483 x501) x3030 (x1531 x1483)) (x805 x1483)))
(assert (= (x1819 x2217) (ite (= x2217 x2425) x859 (x103 x2217))))
(assert (= (x887 x455) (ite (= x455 x1231) x775 (x44 x455))))
(assert (= (ite (and (not x2019) x2949) (x2993 x2553) (x2001 x2553)) (x1029 x2553)))
(assert (= (x396 x293) (ite (and x3 (not x2376)) (x651 x293) (ite (and (not x150) x1264) (x1769 x293) (ite (and x282 (not x601)) (x2255 x293) (ite (and x1733 (not x1290)) (x2707 x293) (x326 x293)))))))
(assert (= (x1370 x2387) (ite (= x2387 x2298) x3034 (x161 x2387))))
(assert (= (ite (= x3008 x629) x1217 (x340 x629)) (x3018 x629)))
(assert (= (x1265 x2597) (ite (= x2635 x2597) x1168 (x2980 x2597))))
(assert (x107 x2186))
(assert (x107 x643))
(assert (= (x1265 x182) (ite (= x182 x2635) x1168 (x2980 x182))))
(assert (= (ite (= x2725 x1809) x50 (x2159 x2725)) (x1903 x2725)))
(assert (= (ite (and x2422 (not x566) x2821) (x2189 x2552) (x168 x2552)) (x2167 x2552)))
(assert (= (x423 x1732) (ite (and x2655 x817) (x1534 x1732) (ite (and x1941 (not x1834)) (x887 x1732) (x151 x1732)))))
(assert (= (ite (= x1732 x1242) x2639 (x225 x1732)) (x1810 x1732)))
(assert (= (ite (= x2406 x1083) x367 (x2880 x2406)) (x2795 x2406)))
(assert (= (x2950 x2309) (ite (= x350 x2309) x1558 (x12 x2309))))
(assert (= (x302 x874) (ite (= x874 192) x2714 (x2783 x874))))
(assert (= (x1370 x1695) (ite (= x1695 x2298) x3034 (x161 x1695))))
(assert (x107 x2381))
(assert (= (ite (= x2309 x1242) x2639 (x225 x2309)) (x1810 x2309)))
(assert (= (ite (= x961 x796) x2187 (x801 x961)) (x225 x961)))
(assert (= (ite (= x1483 x59) x1209 (x1340 x1483)) (x1762 x1483)))
(assert (= (x2259 x2817) (ite (= x2817 x115) x2357 (x1427 x2817))))
(assert (= (x915 x1706) (ite (and x2851 x1335) (x3018 x1706) (ite (and x1301 (not x3047)) (x1317 x1706) (x2805 x1706)))))
(assert (x107 x2124))
(assert (= x464 (and x1941 x1834)))
(assert (= (ite (= x246 x293) x1037 (x807 x293)) (x2159 x293)))
(assert (= (ite (= x2709 x867) x2925 (x1370 x867)) (x2172 x867)))
(assert (= (ite (and (not x2376) x3) (x651 x261) (ite (and (not x150) x1264) (x1769 x261) (ite (and (not x601) x282) (x2255 x261) (ite (and x1733 (not x1290)) (x2707 x261) (x326 x261))))) (x396 x261)))
(assert (= (ite (= x517 x2623) x1914 (x2939 x2623)) (x2539 x2623)))
(assert (= (ite (= x1642 x2252) x840 (x2764 x1642)) (x1451 x1642)))
(assert (x107 x1987))
(assert (= (ite (= x1242 x67) x2639 (x225 x67)) (x1810 x67)))
(assert (= (x1762 x2513) (ite (= x59 x2513) x1209 (x1340 x2513))))
(assert (= (ite (= x2168 x517) x1914 (x2939 x2168)) (x2539 x2168)))
(assert (= (x2931 x2817) (ite (= x2817 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2817))))
(assert (= (x1534 x1873) (ite (= x1318 x1873) x1964 (x715 x1873))))
(assert (= (ite (= x2425 x846) x859 (x103 x846)) (x1819 x846)))
(assert (= (x1810 x867) (ite (= x867 x1242) x2639 (x225 x867))))
(assert (= (ite (= x2710 x2127) x3034 (x2328 x2710)) (x1902 x2710)))
(assert (= (ite (= x2359 x943) x2277 (x3037 x943)) (x1317 x943)))
(assert (= (x1534 x2869) (ite (= x1318 x2869) x1964 (x715 x2869))))
(assert (= (ite (and x2759 x682) (x2795 x1068) (x2138 x1068)) (x798 x1068)))
(assert (= (ite (= x499 x2546) x2188 (x2707 x2546)) (x2255 x2546)))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x364) (x1059 x364)) (ite (and x2374 x135) (x205 x364) (ite (and x2850 x3004) (x1777 x364) (x2338 x364)))) (x2997 x364)))
(assert (= (ite (= x2991 x2127) x3034 (x2328 x2991)) (x1902 x2991)))
(assert (x107 x454))
(assert (= (ite (= x86 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x86)) (x2931 x86)))
(assert (x107 x2921))
(assert (x107 x1501))
(assert (x107 x1852))
(assert (x107 x269))
(assert (= (x1450 x67) (ite (= x67 x1821) x3034 (x1728 x67))))
(assert (= (x2931 x943) (ite (= x3023 x943) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x943))))
(assert (= x1085 x1176))
(assert (= (ite (= x2406 x2454) x823 (x245 x2406)) (x1340 x2406)))
(assert (x107 x1639))
(assert (= (x104 x436) (ite (= x436 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x436))))
(assert (= (ite (and (not x94) x1979) (x396 x364) (x87 x364)) (x1782 x364)))
(assert (=> (< (- x2668 1) 10000) (= (x348 x2668) (x1592 x2668))))
(assert (= (x1902 x1068) (ite (= x1068 x2127) x3034 (x2328 x1068))))
(assert (= (ite (= 224 x961) x770 (x302 x961)) (x2995 x961)))
(assert (= (ite (= x2710 x424) x2357 (x2997 x2710)) (x1958 x2710)))
(assert (= (x939 x766) (ite (= x2576 x766) x1279 (x1888 x766))))
(assert (= (ite (and x682 x2759) (x2795 x874) (x2138 x874)) (x798 x874)))
(assert (= (x302 x866) (ite (= x866 192) x2714 (x2783 x866))))
(assert (x107 x317))
(assert (= (ite (= x2635 x2717) x1168 (x2980 x2717)) (x1265 x2717)))
(assert (= (x95 x1484) (ite (= x1484 x1661) x2246 (x1777 x1484))))
(assert (= (x104 x1909) (ite (= x467 x1909) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1909))))
(assert (x107 x237))
(assert (= (or (and x2796 x3007) x2065) x96))
(assert (= (x2600 (x348 4294967296)) 4294967296))
(assert (= (x2259 x1706) (ite (= x115 x1706) x2357 (x1427 x1706))))
(assert (= (x1340 x2751) (ite (= x2454 x2751) x823 (x245 x2751))))
(assert (= (x2993 x3011) (ite (and x1697 x1145) (x939 x3011) (x1686 x3011))))
(assert (= (ite (= x2298 x2594) x3034 (x161 x2594)) (x1370 x2594)))
(assert (x107 x2908))
(assert (= (x2993 x1483) (ite (and x1697 x1145) (x939 x1483) (x1686 x1483))))
(assert (x107 x37))
(assert (= (x1317 x2717) (ite (= x2717 x2359) x2277 (x3037 x2717))))
(assert (x1932 x60 x219))
(assert (= 0 (x1494 (- x455 x2555))))
(assert (= (and x2062 (not x1447)) x1900))
(assert (= (x1769 x966) (ite (= x966 x2367) x2894 (x2255 x966))))
(assert (= x3053 (=> (and (not (> x1964 18446744073709551615)) (= (= x1964 0) x2655) (= (x864 (+ x1444 32)) x753) (= (uninterp_mod (* 32 x1964) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1444) (= x1964 (x715 x1821)) (= x775 (x864 (+ x1318 x753)))) (and (=> (and (= x775 x1140) x2655) x1292) (=> (not x2655) x2920)))))
(assert (= (ite (= x2309 192) x2714 (x2783 x2309)) (x302 x2309)))
(assert (= (ite (and (not x2097) x1892 x896) (x2539 x1267) (x2300 x1267)) (x1845 x1267)))
(assert (x107 x742))
(assert (= (x95 x1594) (ite (= x1594 x1661) x2246 (x1777 x1594))))
(assert (= (ite (= x67 x424) x2357 (x2997 x67)) (x1958 x67)))
(assert (x107 x1041))
(assert (x107 x1239))
(assert (x107 x819))
(assert (x107 x1330))
(assert (x405 x1801))
(assert (= (ite (= x2387 x420) x952 (x1769 x2387)) (x651 x2387)))
(assert (= (x1777 x1267) (ite (and x2123 (not x208)) (x1845 x1267) (x301 x1267))))
(assert (x107 x2937))
(assert (= (x1222 x1386) (ite (= x1386 x127) x1229 (x511 x1386))))
(assert (x107 x2157))
(assert (= (ite (= x59 x424) x1209 (x1340 x424)) (x1762 x424)))
(assert (x107 x2562))
(assert (= (ite (and (not x2933) x1798) (x125 x1544) (ite (and (not x969) x77) (x657 x1544) (ite (and x2091 (not x1421)) (x1226 x1544) (ite (and (not x2706) x697) (x2950 x1544) (x2504 x1544))))) (x63 x1544)))
(assert (= (ite (= x1873 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1873)) (x1325 x1873)))
(assert (= (ite (= x1909 x424) x2357 (x2997 x1909)) (x1958 x1909)))
(assert (x107 x2966))
(assert (x107 x2972))
(assert (x107 x1919))
(assert (= (ite (= x467 x67) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x67)) (x104 x67)))
(assert (= (x125 x2597) (ite (= x2128 x2597) x1897 (x657 x2597))))
(assert (= (ite (= x3011 x2061) x515 (x224 x3011)) (x283 x3011)))
(assert (x405 x592))
(assert (x107 x2935))
(assert (x107 x1229))
(assert (= (x125 x1483) (ite (= x1483 x2128) x1897 (x657 x1483))))
(assert (= (ite (= x420 x2847) x952 (x1769 x2847)) (x651 x2847)))
(assert (= (ite (= x3011 x1693) x1426 (x1160 x3011)) (x3016 x3011)))
(assert (= (ite (and x682 x2759) (x2795 x2725) (x2138 x2725)) (x798 x2725)))
(assert (x107 x3030))
(assert (= (ite (= x1041 x2150) 96 (x918 x1041)) (x609 x1041)))
(assert (x107 x2093))
(assert (x107 x987))
(assert (= (ite (and x29 (not x1970)) (x63 x685) (x692 x685)) (x1044 x685)))
(assert (= (ite (and x1979 (not x94)) (x396 x182) (x87 x182)) (x1782 x182)))
(assert (x607 x402 x568 x90 x2368))
(assert (x107 x3012))
(assert (= (=> (and (= x1266 (x1845 x1972)) (= x208 (< 0 x1266))) (and (=> x208 x2324) (=> (and (not x208) (= x1661 x1831)) x322))) x1514))
(assert (= (x2036 x2876) (ite (= x2642 x2876) x397 (x1902 x2876))))
(assert (x107 x1459))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x488) (x1059 x488)) (ite (and x2374 x135) (x205 x488) (ite (and x2850 x3004) (x1777 x488) (x2338 x488)))) (x2997 x488)))
(assert (= (x595 x961) (ite (= x961 x159) 96 (x1952 x961))))
(assert (x607 x2209 x2495 x2099 x968))
(assert (x107 x665))
(assert (= (x245 x370) (ite (= x370 x2962) x950 (x1429 x370))))
(assert (x107 x2296))
(assert (= (and x4 x978) x2776))
(assert (= (x918 x49) (ite (= x49 x1453) x555 (x2602 x49))))
(assert (x107 x2498))
(assert (x107 x1692))
(assert (= (ite (= x2298 x722) x3034 (x161 x722)) (x1370 x722)))
(assert (= (ite (= x2367 x67) x2894 (x2255 x67)) (x1769 x67)))
(assert (= (x2995 x2477) (ite (= x2477 224) x770 (x302 x2477))))
(assert (= (x1029 x1732) (ite (and (not x2019) x2949) (x2993 x1732) (x2001 x1732))))
(assert (= (x2338 x2635) (ite (and (not x2299) x2775) (x795 x2635) (x1613 x2635))))
(assert (x405 x1099))
(assert (x107 x1916))
(assert (x107 x647))
(assert (x1932 x981 x2345))
(assert (x107 x1508))
(assert (= (ite (= x97 x2425) x859 (x103 x97)) (x1819 x97)))
(assert (= (x224 x1267) (ite (= x816 x1267) x696 (x2011 x1267))))
(assert (x107 x1062))
(assert (= (x2259 x261) (ite (= x115 x261) x2357 (x1427 x261))))
(assert (= (x1903 x49) (ite (= x1809 x49) x50 (x2159 x49))))
(assert (= (ite (and (not x2933) x1798) (x125 x2817) (ite (and x77 (not x969)) (x657 x2817) (ite (and (not x1421) x2091) (x1226 x2817) (ite (and (not x2706) x697) (x2950 x2817) (x2504 x2817))))) (x63 x2817)))
(assert (= (ite (= x655 224) x770 (x302 x655)) (x2995 x655)))
(assert (= (x918 x914) (ite (= x1453 x914) x555 (x2602 x914))))
(assert (x2478 x223))
(assert (= (x205 x1689) (ite (and (not x2377) x724) (x798 x1689) (x346 x1689))))
(assert (x107 x422))
(assert (= (x2995 x874) (ite (= 224 x874) x770 (x302 x874))))
(assert (= (x801 x961) (ite (= x824 x961) x1666 (x902 x961))))
(assert (= (ite (= x2128 x294) x1897 (x657 x294)) (x125 x294)))
(assert (= (x1450 x2168) (ite (= x1821 x2168) x3034 (x1728 x2168))))
(assert (x107 x741))
(assert (= (ite (= x1946 x1583) x1235 (x1450 x1946)) (x1539 x1946)))
(assert (= (ite (= x2869 x159) 96 (x1952 x2869)) (x595 x2869)))
(assert (x107 x2057))
(assert (= (ite (and (not x208) x2123) (x1845 x1197) (x301 x1197)) (x1777 x1197)))
(assert (x107 x1389))
(assert (x107 x1750))
(assert (x405 x2640))
(assert (= (ite (= x2150 x3011) 96 (x918 x3011)) (x609 x3011)))
(assert (x107 x2722))
(assert (= (ite (= x370 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x370)) (x104 x370)))
(assert (= (ite (= x655 x824) x1666 (x902 x655)) (x801 x655)))
(assert (= (ite (= x1261 x2298) x2738 (x2950 x2298)) (x1226 x2298)))
(assert (x107 x1947))
(assert (= (x807 x2876) (ite (= x2876 x2107) x315 (x533 x2876))))
(assert (x1932 x297 x1245))
(assert (= (ite (= x1594 x2298) x3034 (x161 x1594)) (x1370 x1594)))
(assert (x107 x2388))
(assert (x107 x1867))
(assert (= (ite (= x2817 224) x770 (x302 x2817)) (x2995 x2817)))
(assert (x107 x1150))
(assert (= x927 (=> (and (= (x2993 x766) x971) (= (= 0 x1381) x1665) (= x67 (x864 (+ 32 x766))) (= x1381 (x2993 x67)) (< 0 x971)) (and (=> (and x1665 (= x2460 x1195)) x1357) (=> (and (or (and (not x146) (= x28 x1473)) (and (< x656 4294967296) (= 1 x1473) x146)) (= (x1942 (x1592 x1069)) x2339) (= (> x28 0) x146) (not (= 0 x2339)) (not x1665) (= (x864 (+ x1195 4)) x2598) (= x2847 (x864 (+ 32 x86))) (< 0 x814) (= (x3026 1461501637330902918203684832716283019655932542975 x3020) x909) (= (x2993 x2847) x3020) (= (x2993 x86) x814)) x2579)))))
(assert (= (x1340 x2217) (ite (= x2454 x2217) x823 (x245 x2217))))
(assert (= (x2255 x2869) (ite (= x2869 x499) x2188 (x2707 x2869))))
(assert (= (ite (and x2821 x2422 (not x566)) (x2189 x1968) (x168 x1968)) (x2167 x1968)))
(assert (= (x2931 x2597) (ite (= x2597 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2597))))
(assert (x107 x83))
(assert (= x3034 (x1902 x2127)))
(assert (x107 x6))
(assert (= (x245 x1516) (ite (= x2962 x1516) x950 (x1429 x1516))))
(assert (= (ite (= x2107 x2553) x315 (x533 x2553)) (x807 x2553)))
(assert (x107 x2794))
(assert (= (ite (= x796 x1197) x2187 (x801 x1197)) (x225 x1197)))
(assert (x107 x2414))
(assert (= (ite (= x1041 x246) x1037 (x807 x1041)) (x2159 x1041)))
(assert (x107 x278))
(assert (= (x918 x2991) (ite (= x2991 x1453) x555 (x2602 x2991))))
(assert (= (x1181 x1191) (ite (= x43 x1191) x1346 (x2998 x1191))))
(assert (x107 x1748))
(assert (= (ite (= x1642 x2085) x1910 (x970 x1642)) (x890 x1642)))
(assert (= (x423 x629) (ite (and x2655 x817) (x1534 x629) (ite (and x1941 (not x1834)) (x887 x629) (x151 x629)))))
(assert (= (x915 x914) (ite (and x1335 x2851) (x3018 x914) (ite (and x1301 (not x3047)) (x1317 x914) (x2805 x914)))))
(assert (x107 x2754))
(assert (= (x1845 x86) (ite (and x1892 x896 (not x2097)) (x2539 x86) (x2300 x86))))
(assert (= (x1952 160) (ite (= x780 160) x555 (x2526 160))))
(assert (x107 x893))
(assert (= x1170 (or (and x2505 (not x1759)) (and x2861 (not x2435)) (and (not x2632) x2031) x1001 (and x1326 (not x215)))))
(assert (= (x805 x3011) (ite (= x3011 x501) x3030 (x1531 x3011))))
(assert (= (x1958 x49) (ite (= x424 x49) x2357 (x2997 x49))))
(assert (x107 x1803))
(assert (= (x95 x2474) (ite (= x2474 x1661) x2246 (x1777 x2474))))
(assert (= (ite (= x1231 x483) x775 (x44 x483)) (x887 x483)))
(assert (= (=> (= x1140 x2500) x1292) x2627))
(assert (= (x1769 x1873) (ite (= x1873 x2367) x2894 (x2255 x1873))))
(assert (= (x33 x3011) 0))
(assert (= (ite (= x261 x499) x2188 (x2707 x261)) (x2255 x261)))
(assert (x107 x1238))
(assert (x107 x2089))
(assert (= (x2338 x1544) (ite (and (not x2299) x2775) (x795 x1544) (x1613 x1544))))
(assert (= (x1952 x2513) (ite (= x780 x2513) x555 (x2526 x2513))))
(assert (= (x1534 x874) (ite (= x874 x1318) x1964 (x715 x874))))
(assert (x107 x1851))
(assert (= (x2720 x629) (ite (= x629 x972) x1063 (x1903 x629))))
(assert (x107 x386))
(assert (= 0 (x33 x1732)))
(assert (= (ite (= x655 x115) x2357 (x1427 x655)) (x2259 x655)))
(assert (x107 x784))
(assert (= (ite (= x629 x1508) x626 (x220 x629)) (x1215 x629)))
(assert (x107 x117))
(assert (= (ite (= x2168 x2642) x397 (x1902 x2168)) (x2036 x2168)))
(assert (= (x2795 x2546) (ite (= x1083 x2546) x367 (x2880 x2546))))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x261) (x1059 x261)) (ite (and x135 x2374) (x205 x261) (ite (and x3004 x2850) (x1777 x261) (x2338 x261)))) (x2997 x261)))
(assert (x107 x681))
(assert true)
(assert (= (x2204 x483) (ite (= x483 x424) x2700 (x2997 x483))))
(assert (x107 x421))
(assert (= (ite (= x49 x1231) x775 (x44 x49)) (x887 x49)))
(assert (x107 x1812))
(assert (x107 x2454))
(assert (= (x1317 x2552) (ite (= x2552 x2359) x2277 (x3037 x2552))))
(assert (x107 x1911))
(assert (= (ite (= x867 x2128) x1897 (x657 x867)) (x125 x867)))
(assert (= (ite (= x1484 x159) 96 (x1952 x1484)) (x595 x1484)))
(assert (= (x2539 x846) (ite (= x846 x517) x1914 (x2939 x846))))
(assert (= (ite (= x2127 x2217) x3034 (x2328 x2217)) (x1902 x2217)))
(assert (= (x805 x49) (ite (= x49 x501) x3030 (x1531 x49))))
(assert (= (ite (= x3008 x294) x1217 (x340 x294)) (x3018 x294)))
(assert (= (ite (= x2454 x1197) x823 (x245 x1197)) (x1340 x1197)))
(assert (x107 x2128))
(assert (= (x2255 x1267) (ite (= x1267 x499) x2188 (x2707 x1267))))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x1873) (x1059 x1873)) (ite (and x2374 x135) (x205 x1873) (ite (and x2850 x3004) (x1777 x1873) (x2338 x1873)))) (x2997 x1873)))
(assert (= (x1903 x1642) (ite (= x1642 x1809) x50 (x2159 x1642))))
(assert (= (ite (= x1136 x424) x2357 (x2997 x1136)) (x1958 x1136)))
(assert (x2478 x426))
(assert (= (ite (= x2367 x2309) x2894 (x2255 x2309)) (x1769 x2309)))
(assert (= (ite (= 224 x2406) x770 (x302 x2406)) (x2995 x2406)))
(assert (x107 x684))
(assert (= (ite (and (not x94) x1979) (x396 x2217) (x87 x2217)) (x1782 x2217)))
(assert (x107 x980))
(assert (= 0 (x1494 (- x2298 x2555))))
(assert (= (x798 x685) (ite (and x2759 x682) (x2795 x685) (x2138 x685))))
(assert (x107 x2767))
(assert (= (x1226 x2477) (ite (= x2477 x1261) x2738 (x2950 x2477))))
(assert (= (x902 x433) (ite (= x433 x227) x22 (x56 x433))))
(assert (= (ite (and (not x208) x2123) (x1845 x2387) (x301 x2387)) (x1777 x2387)))
(assert (x107 x2082))
(assert (= (x1845 x2048) (ite (and x896 (not x2097) x1892) (x2539 x2048) (x2300 x2048))))
(assert (= (ite (= x159 x2751) 96 (x1952 x2751)) (x595 x2751)))
(assert (x107 x17))
(assert (x607 x2366 x793 x2137 x1595))
(assert (= (x609 x2298) (ite (= x2150 x2298) 96 (x918 x2298))))
(assert (= (x2539 x2847) (ite (= x2847 x517) x1914 (x2939 x2847))))
(assert (x107 x509))
(assert (= (x2328 x436) (ite (and x923 x2926) (x1952 x436) (ite (and x1236 (not x602)) (x595 x436) (x1546 x436)))))
(assert (x107 x2216))
(assert (= (x1226 x1594) (ite (= x1594 x1261) x2738 (x2950 x1594))))
(assert (= (x595 160) (ite (= 160 x159) 96 (x1952 160))))
(assert (= (ite (= x3008 x685) x1217 (x340 x685)) (x3018 x685)))
(assert (= (x595 x780) (ite (= x159 x780) 96 (x1952 x780))))
(assert (x107 x705))
(assert (= (ite (= x961 x1242) x2639 (x225 x961)) (x1810 x961)))
(assert (= (x902 x2597) (ite (= x2597 x227) x22 (x56 x2597))))
(assert (x107 x1365))
(assert (= (x2189 x2035) (ite (= x1615 x2035) x2726 (x2268 x2035))))
(assert (= (x1952 x1387) (ite (= x780 x1387) x555 (x2526 x1387))))
(assert (= (ite (= x2477 x780) x555 (x2526 x2477)) (x1952 x2477)))
(assert (= (x1317 x867) (ite (= x2359 x867) x2277 (x3037 x867))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2600 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (x63 x867) (ite (and x1798 (not x2933)) (x125 x867) (ite (and x77 (not x969)) (x657 x867) (ite (and (not x1421) x2091) (x1226 x867) (ite (and (not x2706) x697) (x2950 x867) (x2504 x867)))))))
(assert (= (ite (= x2298 x780) x555 (x2526 x2298)) (x1952 x2298)))
(assert (= (x1340 x424) (ite (= x2454 x424) x823 (x245 x424))))
(assert (= (ite (= x1809 x1780) x50 (x2159 x1780)) (x1903 x1780)))
(assert (x107 x591))
(assert (= (x95 x2710) (ite (= x1661 x2710) x2246 (x1777 x2710))))
(assert (= (x1340 x867) (ite (= x867 x2454) x823 (x245 x867))))
(assert (x107 x177))
(assert (= (x1328 x3011) (ite (= x1745 x3011) x585 (x2580 x3011))))
(assert (= (ite (and x682 x2759) (x2795 x1083) (x2138 x1083)) (x798 x1083)))
(assert (= (x1539 x2817) (ite (= x2817 x1583) x1235 (x1450 x2817))))
(assert (= (x1265 x780) (ite (= x2635 x780) x1168 (x2980 x780))))
(assert (= (ite (= x227 x846) x22 (x56 x846)) (x902 x846)))
(assert (= (ite (= x1695 x159) 96 (x1952 x1695)) (x595 x1695)))
(assert (= (x1090 x1873) (ite (= x1873 x677) x2612 (x1762 x1873))))
(assert (= (x423 x2847) (ite (and x2655 x817) (x1534 x2847) (ite (and (not x1834) x1941) (x887 x2847) (x151 x2847)))))
(assert (= (ite (= x874 x246) x1037 (x807 x874)) (x2159 x874)))
(assert (= (and x2005 x510) x2713))
(assert (x107 x1060))
(assert (= (ite (= x3011 x2085) x1910 (x970 x3011)) (x890 x3011)))
(assert (= (ite (= x780 x1946) x555 (x2526 x1946)) (x1952 x1946)))
(assert (= (ite (= x1516 x2454) x823 (x245 x1516)) (x1340 x1516)))
(assert (= (ite (= x867 x115) x2357 (x1427 x867)) (x2259 x867)))
(assert (= (x348 18446744073709551615) (x1592 18446744073709551615)))
(assert (= (ite (= x2107 x2552) x315 (x533 x2552)) (x807 x2552)))
(assert (x107 x34))
(assert (x405 x53))
(assert (= (ite (= x824 x1706) x1666 (x902 x1706)) (x801 x1706)))
(assert (x107 x1800))
(assert (= (ite (= x59 x629) x1209 (x1340 x629)) (x1762 x629)))
(assert (= (ite (= x2107 x961) x315 (x533 x961)) (x807 x961)))
(assert (= (ite (= 192 x86) x2714 (x2783 x86)) (x302 x86)))
(assert (= (ite (= x1197 x424) x2357 (x2997 x1197)) (x1958 x1197)))
(assert (= (x1314 x433) (ite (= 128 x433) x1725 (x33 x433))))
(assert (= (ite (= x517 x2717) x1914 (x2939 x2717)) (x2539 x2717)))
(assert (x1691 x363 x345))
(assert (= (ite (= x2869 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2869)) (x2931 x2869)))
(assert (x107 x1579))
(assert (= (- (/ x1871 2) (uninterp_frac x1871 2)) (x2059 x1871 1)))
(assert (= x2480 (and x668 x1512)))
(assert (= (x104 x2552) (ite (= x467 x2552) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2552))))
(assert (= (x1902 x2298) (ite (= x2298 x2127) x3034 (x2328 x2298))))
(assert (x107 x590))
(assert (x107 x2211))
(assert (x107 x1161))
(assert (= (ite (and (not x2299) x2775) (x795 x1068) (x1613 x1068)) (x2338 x1068)))
(assert (= (ite (= x2359 x685) x2277 (x3037 x685)) (x1317 x685)))
(assert (= (=> (and (= (x864 (+ x1083 32)) x975) (< 0 x1169) (= (x205 x975) x2609) (not (< x162 0)) (= (not (< 1 x646)) x1466) (= x162 (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2609))) (= x1169 (x205 x1083)) (= (x205 x1083) x646) (= x2609 x1097)) (and (=> (= x1097 x2274) x1048) x1466)) x101))
(assert (= (x1325 x1968) (ite (= x1638 x1968) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1968))))
(assert (= (x2204 x2546) (ite (= x2546 x424) x2700 (x2997 x2546))))
(assert (= (x2995 x2833) (ite (= 224 x2833) x770 (x302 x2833))))
(assert (= (x2783 x86) (ite (= x86 160) x190 (x1314 x86))))
(assert (= x2514 (=> (and (= x270 (x864 (+ x2975 128))) (= x1144 (not (< 128 x1564))) (= x2651 (x651 x270)) (= x1201 (x864 (+ 160 x2355)))) (and (=> (= 128 x519) x2194) x1144))))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x1197) (x1059 x1197)) (ite (and x2374 x135) (x205 x1197) (ite (and x2850 x3004) (x1777 x1197) (x2338 x1197)))) (x2997 x1197)))
(assert (x607 x1627 x362 x2698 x490))
(assert (= (x2328 x2168) (ite (and x2926 x923) (x1952 x2168) (ite (and x1236 (not x602)) (x595 x2168) (x1546 x2168)))))
(assert (= (=> (and (= x469 (uninterp_mod (* x231 x901) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (< x891 x231)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)) x891) (= x2401 x469)) x7) x1917))
(assert (x405 x520))
(assert (= (x2783 x2553) (ite (= x2553 160) x190 (x1314 x2553))))
(assert (x107 x2613))
(assert (x107 x1818))
(assert (= (x807 x49) (ite (= x2107 x49) x315 (x533 x49))))
(assert (x107 x1737))
(assert (= (x2539 x2725) (ite (= x2725 x517) x1914 (x2939 x2725))))
(assert (x107 x1267))
(assert (= (x1902 x294) (ite (= x2127 x294) x3034 (x2328 x294))))
(assert (= (ite (= x159 x2513) 96 (x1952 x2513)) (x595 x2513)))
(assert (= (ite (= x2513 x2127) x3034 (x2328 x2513)) (x1902 x2513)))
(assert (= (+ 1 (x2600 x2180)) (x2600 (x1408 x2180 1))))
(assert (= (x1902 x1909) (ite (= x1909 x2127) x3034 (x2328 x1909))))
(assert (= (x2997 x867) (ite x1752 (ite (and x1127 (not x2913)) (x205 x867) (x1059 x867)) (ite (and x2374 x135) (x205 x867) (ite (and x3004 x2850) (x1777 x867) (x2338 x867))))))
(assert (= (ite (= x2278 x812) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x735 x2278)) (x511 x2278)))
(assert (= (x1952 x364) (ite (= x364 x780) x555 (x2526 x364))))
(assert (= (x2931 x1197) (ite (= x1197 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1197))))
(assert (= (ite (= x2359 x1041) x2277 (x3037 x1041)) (x1317 x1041)))
(assert (= (ite (and x817 x2655) (x1534 x867) (ite (and x1941 (not x1834)) (x887 x867) (x151 x867))) (x423 x867)))
(assert (= (x302 x1041) (ite (= x1041 192) x2714 (x2783 x1041))))
(assert (x107 x18))
(assert (= (ite (= 128 x1946) x1725 (x33 x1946)) (x1314 x1946)))
(assert (x107 x732))
(assert (= (x33 x2876) 0))
(assert (= (x915 x1882) (ite (and x1335 x2851) (x3018 x1882) (ite (and x1301 (not x3047)) (x1317 x1882) (x2805 x1882)))))
(assert (= (ite (= x1197 x2576) x1279 (x1888 x1197)) (x939 x1197)))
(assert (= (ite (= x2817 x816) x696 (x2011 x2817)) (x224 x2817)))
(assert (= (ite (= x364 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x364)) (x104 x364)))
(assert (x107 x1565))
(assert (= (ite (= x1594 x2127) x3034 (x2328 x1594)) (x1902 x1594)))
(assert (= (ite (= x2425 x2710) x859 (x103 x2710)) (x1819 x2710)))
(assert (= (ite (= x2869 x2150) 96 (x918 x2869)) (x609 x2869)))
(assert (= (x1903 x1544) (ite (= x1809 x1544) x50 (x2159 x1544))))
(assert (= (x915 x2553) (ite (and x2851 x1335) (x3018 x2553) (ite (and x1301 (not x3047)) (x1317 x2553) (x2805 x2553)))))
(assert (= x2482 (and x129 x2959)))
(assert (= (ite (= x59 x1267) x1209 (x1340 x1267)) (x1762 x1267)))
(assert (= (x348 1461501637330902918203684832716283019655932542976) (x1592 1461501637330902918203684832716283019655932542976)))
(assert (= (ite (= x3023 x1041) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1041)) (x2931 x1041)))
(assert (= (ite (= x1242 x1706) x2639 (x225 x1706)) (x1810 x1706)))
(assert (= (x1592 (x2600 x1954)) x1954))
(assert (= x1731 (=> (and (= (x3026 1 x53) x329) (= (x2059 x53 1) x395) (= x865 (= x329 0)) (= x2083 (not (< 1 x395)))) (and (=> (and (= (ite x865 1 10) x2729) (= x2965 100)) x1078) x2083))))
(assert (= x628 (=> (and (= x2299 (< 0 x3024)) (= (x795 x1689) x789) (= x3024 (x795 x789))) (=> (and (not x2299) (= x3023 x1756)) x441))))
(assert (= (x63 x2869) (ite (and x1798 (not x2933)) (x125 x2869) (ite (and (not x969) x77) (x657 x2869) (ite (and x2091 (not x1421)) (x1226 x2869) (ite (and x697 (not x2706)) (x2950 x2869) (x2504 x2869)))))))
(assert (= (x1902 x1267) (ite (= x2127 x1267) x3034 (x2328 x1267))))
(assert (= (x1769 x2869) (ite (= x2869 x2367) x2894 (x2255 x2869))))
(assert (= (ite (= 128 x789) x1725 (x33 x789)) (x1314 x789)))
(assert (= (ite (= x2642 x2817) x397 (x1902 x2817)) (x2036 x2817)))
(assert (= (x1819 x2594) (ite (= x2425 x2594) x859 (x103 x2594))))
(assert (= (x423 x267) (ite (and x2655 x817) (x1534 x267) (ite (and x1941 (not x1834)) (x887 x267) (x151 x267)))))
(assert (= (ite (= x49 x499) x2188 (x2707 x49)) (x2255 x49)))
(assert (= x1935 x2662))
(assert (= (ite (= x874 x59) x1209 (x1340 x874)) (x1762 x874)))
(assert (= (x1226 x424) (ite (= x424 x1261) x2738 (x2950 x424))))
(assert (= (x1902 x2869) (ite (= x2127 x2869) x3034 (x2328 x2869))))
(assert (x107 x1828))
(assert (= (ite (= x2359 x2725) x2277 (x3037 x2725)) (x1317 x2725)))
(assert (= (x2167 x293) (ite (and (not x566) x2422 x2821) (x2189 x293) (x168 x293))))
(assert (= (x1314 x370) (ite (= x370 128) x1725 (x33 x370))))
(assert (= (ite (= x1807 x2876) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2876)) (x2707 x2876)))
(assert (= (x918 x1946) (ite (= x1946 x1453) x555 (x2602 x1946))))
(assert (= (ite (= x914 192) x2714 (x2783 x914)) (x302 x914)))
(assert (x107 x1002))
(assert (= (ite (= x1267 x1583) x1235 (x1450 x1267)) (x1539 x1267)))
(assert (= (x2426 x874) (ite (and x29 x2105) (x593 x874) (x1044 x874))))
(assert (x107 x1939))
(assert (= (x2720 x655) (ite (= x972 x655) x1063 (x1903 x655))))
(assert (= (ite (= x2962 x685) x950 (x1429 x685)) (x245 x685)))
(assert (= (ite (= x1732 x115) x2357 (x1427 x1732)) (x2259 x1732)))
(assert (x107 x498))
(assert (= (x2204 x49) (ite (= x424 x49) x2700 (x2997 x49))))
(assert (= (x125 x2594) (ite (= x2128 x2594) x1897 (x657 x2594))))
(assert (x107 x332))
(assert (x107 x1178))
(assert (= x895 (and x2019 x2949)))
(assert (= x872 (=> (and (<= x1681 1461501637330902918203684832716283019655932542975) x536 (>= 1461501637330902918203684832716283019655932542975 x1703) (<= x1154 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2816) (= x1681 x1953) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2490) true) (= x1703 x1953) (= x2716 2477345955) (<= 0 x1681) (= x2358 x2082) (= x2512 false) (= x565 2) (= x2722 x485) (= x2816 x2412) (<= 0 x1154) (< 67 x2490) (= x2057 x2793) (<= 0 x411) (= x228 x444) (>= x1703 0) (= false x1792) (= x320 false) (= false x2527) (= x2412 x2041) (>= x156 0) (<= 0 x2816) (= x2592 x1154) (<= x411 1461501637330902918203684832716283019655932542975) (= (< 0 (x1942 (x1592 274184521717934524641157099916833587223))) x536) (= (x1425 (x1592 274184521717934524641157099916833587223)) x156)) x112)))
(assert (= (ite (= x1442 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1442)) (x2931 x1442)))
(assert (= (ite (and x1335 x2851) (x3018 x3008) (ite (and x1301 (not x3047)) (x1317 x3008) (x2805 x3008))) (x915 x3008)))
(assert (= (ite (= x2876 x2709) x2925 (x1370 x2876)) (x2172 x2876)))
(assert (= (ite (= x1318 x2168) x1964 (x715 x2168)) (x1534 x2168)))
(assert (= (ite (= 160 x1732) x190 (x1314 x1732)) (x2783 x1732)))
(assert (x107 x2265))
(assert (= (ite (and x1145 x1697) (x939 x2594) (x1686 x2594)) (x2993 x2594)))
(assert (= (x95 x2847) (ite (= x2847 x1661) x2246 (x1777 x2847))))
(assert (x107 x972))
(assert (= (x2993 x67) (ite (and x1145 x1697) (x939 x67) (x1686 x67))))
(assert (= (x2600 (x1408 x51 2)) (+ (x2600 x51) 2)))
(assert (= (x1534 x267) (ite (= x1318 x267) x1964 (x715 x267))))
(assert (= (x302 x49) (ite (= x49 192) x2714 (x2783 x49))))
(assert (= (x1370 x2406) (ite (= x2298 x2406) x3034 (x161 x2406))))
(assert (x107 x752))
(assert (= (x63 x2597) (ite (and x1798 (not x2933)) (x125 x2597) (ite (and x77 (not x969)) (x657 x2597) (ite (and (not x1421) x2091) (x1226 x2597) (ite (and (not x2706) x697) (x2950 x2597) (x2504 x2597)))))))
(assert (= (x2328 x1453) (ite (and x2926 x923) (x1952 x1453) (ite (and (not x602) x1236) (x595 x1453) (x1546 x1453)))))
(assert (= (ite (= 224 x914) x770 (x302 x914)) (x2995 x914)))
(assert (= (ite (= x483 x816) x696 (x2011 x483)) (x224 x483)))
(assert (= (x2764 x2817) (ite (= x3032 x2817) x573 (x890 x2817))))
(assert (= (=> (and (= (not (> x315 4)) x2249) (= (x2720 x2751) x203) (= x905 (x864 (+ x1516 64))) (= (x864 (+ 64 x972)) x1151)) (and (=> (and (= x227 x1151) (= x905 x2589) (= x38 4)) x1626) x2249)) x176))
(assert (= (ite (= x1661 x975) x2246 (x1777 x975)) (x95 x975)))
(assert (= (and x1344 x634) x2393))
(assert (x107 x2043))
(assert (= (ite (= x1483 x2129) x2451 (x1226 x1483)) (x657 x1483)))
(assert (x107 x1986))
(assert (= (ite (= x2869 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2869)) (x1325 x2869)))
(assert (= x2855 (and x1540 x2027)))
(assert (= (ite (and x2759 x682) (x2795 x2869) (x2138 x2869)) (x798 x2869)))
(assert (x107 x2695))
(assert (= (ite (and x2810 (not x763)) (x2167 x2168) (x298 x2168)) (x2397 x2168)))
(assert (= (x609 x1267) (ite (= x2150 x1267) 96 (x918 x1267))))
(assert (= (x1958 x2876) (ite (= x424 x2876) x2357 (x2997 x2876))))
(assert (= (x511 x1386) (ite (= x1386 x812) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x735 x1386))))
(assert (= (x2764 x370) (ite (= x370 x3032) x573 (x890 x370))))
(assert (= (=> (and (= (> x22 2) x1337) (= (x864 (+ 64 x436)) x2876) (= x1242 (x864 (+ 64 x824))) (= x2187 (x801 x846))) (and (=> (and (= x1242 x350) (= x379 2) (not x1337) (= x1556 x2876)) x2674) (=> x1337 x91))) x690))
(assert (= (ite (and (not x208) x2123) (x1845 x2594) (x301 x2594)) (x1777 x2594)))
(assert (= (ite (= x364 x2359) x2277 (x3037 x364)) (x1317 x364)))
(assert (x107 x2869))
(assert (= (ite (= x961 x2127) x3034 (x2328 x961)) (x1902 x961)))
(assert (= (x2720 x685) (ite (= x972 x685) x1063 (x1903 x685))))
(assert (= (x2600 (x348 71356987572919795984103299673912204194632180251134163011139925636576289226752)) 71356987572919795984103299673912204194632180251134163011139925636576289226752))
(assert (= (x1903 x1453) (ite (= x1809 x1453) x50 (x2159 x1453))))
(assert (x107 x1000))
(assert (= (ite (and (not x2299) x2775) (x795 x866) (x1613 x866)) (x2338 x866)))
(assert (= (ite (= x2425 x629) x859 (x103 x629)) (x1819 x629)))
(assert (= 0 (x1494 (- x2168 x2555))))
(assert (= (x2931 x2635) (ite (= x2635 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2635))))
(assert (= (ite (= 224 x2387) x770 (x302 x2387)) (x2995 x2387)))
(assert (= (x2172 x2751) (ite (= x2709 x2751) x2925 (x1370 x2751))))
(assert (= (ite (= x2454 x2876) x823 (x245 x2876)) (x1340 x2876)))
(assert (= (x918 x2552) (ite (= x2552 x1453) x555 (x2602 x2552))))
(assert (= (ite (= x3023 x97) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x97)) (x2931 x97)))
(assert (= (x2338 x1136) (ite (and x2775 (not x2299)) (x795 x1136) (x1613 x1136))))
(assert (= (ite (and x817 x2655) (x1534 x67) (ite (and (not x1834) x1941) (x887 x67) (x151 x67))) (x423 x67)))
(assert (= (ite (and (not x763) x2810) (x2167 x2597) (x298 x2597)) (x2397 x2597)))
(assert (= (ite (and (not x2933) x1798) (x125 x1594) (ite (and (not x969) x77) (x657 x1594) (ite (and x2091 (not x1421)) (x1226 x1594) (ite (and x697 (not x2706)) (x2950 x1594) (x2504 x1594))))) (x63 x1594)))
(assert (x107 x55))
(assert (= (ite (= x2642 x370) x397 (x1902 x370)) (x2036 x370)))
(assert (= (=> (and (= x1766 x391) (or (not x94) (and x94 (= x2153 (x864 (+ x236 x1564))))) (or (not x1980) (and (= (x1570 x748) x889) (= x1157 (x1570 x3035)) (= (x864 (+ x3035 32)) x748) (= (ite x1289 1 0) x1849) (= (= x889 0) x2769) x1980 (< 0 x889) (= (not x2769) x1289) (= x889 x1849) (not (or (> x1157 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1157)) (< x1157 32)))))) (= x14 (x2165 (x1592 x1685))) (or (and (= x3035 96) x400 (= x1939 x236)) (and (= (x864 (+ x741 63)) x452) (= x2075 x1939) (= x236 x3035) (= x2075 (x864 (+ x2777 x236))) (not x400) (= x2555 (x864 (+ 96 x2355))) (= (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x452) x2777))) (= x1980 (< 0 x2819)) (= x2679 x2498) (= (= x741 0) x400) (= x3045 x1939) (= x94 (> x519 x1564)) (not x508) (= (x2165 (x1592 274184521717934524641157099916833587223)) x1990) (= 0 x1836) (not (= 0 x1836)) (= x1923 x1755) (= x2205 x3030) (= (and (<= 0 x1990) (< x14 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x508) (= 0 x741) (= (x1570 x3035) x2819)) x1949) x2194))
(assert (= (ite (= x1706 x499) x2188 (x2707 x1706)) (x2255 x1706)))
(assert (x107 x1053))
(assert (= (x1340 x846) (ite (= x2454 x846) x823 (x245 x846))))
(assert (= (ite (= x2553 x246) x1037 (x807 x2553)) (x2159 x2553)))
(assert (= (ite (= x1453 x1387) x555 (x2602 x1387)) (x918 x1387)))
(assert (= (x125 x115) (ite (= x115 x2128) x1897 (x657 x115))))
(assert (= (x1819 x436) (ite (= x436 x2425) x859 (x103 x436))))
(assert (= (ite (= x115 x182) x2357 (x1427 x182)) (x2259 x182)))
(assert (= (x1782 x267) (ite (and x1979 (not x94)) (x396 x267) (x87 x267))))
(assert (= (and (not x566) x2821) x2810))
(assert (= (x2539 x86) (ite (= x517 x86) x1914 (x2939 x86))))
(assert (= (x1903 x1946) (ite (= x1809 x1946) x50 (x2159 x1946))))
(assert (x107 x2425))
(assert (= (x2036 x1544) (ite (= x2642 x1544) x397 (x1902 x1544))))
(assert (= (x1539 x874) (ite (= x1583 x874) x1235 (x1450 x874))))
(assert (= (x1265 x2309) (ite (= x2309 x2635) x1168 (x2980 x2309))))
(assert (x107 x436))
(assert (= (ite (= x874 x972) x1063 (x1903 x874)) (x2720 x874)))
(assert (x107 x1516))
(assert (= (ite (= x1387 x501) x3030 (x1531 x1387)) (x805 x1387)))
(assert (x107 x1329))
(assert (= (ite (= x824 x1387) x1666 (x902 x1387)) (x801 x1387)))
(assert (x107 x1544))
(assert (x107 x2953))
(assert (= (=> (and (= x1838 (not (< 4 x500))) (= x99 (x1451 x1197)) (= (x864 (+ 64 x2252)) x938) (= x1853 (x3026 1461501637330902918203684832716283019655932542975 x99)) (= (x864 (+ x370 64)) x2867)) (and x1838 (=> (and (= x938 x1489) (= 4 x2921) (= x2310 x2867)) x1753))) x2486))
(assert (= (x95 x49) (ite (= x49 x1661) x2246 (x1777 x49))))
(assert (= (ite (= x2127 x975) x3034 (x2328 x975)) (x1902 x975)))
(assert (= (ite (and (not x208) x2123) (x1845 x857) (x301 x857)) (x1777 x857)))
(assert (= (x3018 x483) (ite (= x3008 x483) x1217 (x340 x483))))
(assert (= (x805 x1267) (ite (= x1267 x501) x3030 (x1531 x1267))))
(assert (= (ite (= x294 x1809) x50 (x2159 x294)) (x1903 x294)))
(assert (= (ite (= x1946 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1946)) (x2931 x1946)))
(assert (x107 x376))
(assert (= (x2783 x483) (ite (= x483 160) x190 (x1314 x483))))
(assert (x107 x78))
(assert (= (ite (= x424 x115) x2357 (x1427 x424)) (x2259 x424)))
(assert (= (x1777 x2552) (ite (and (not x208) x2123) (x1845 x2552) (x301 x2552))))
(assert (= (x302 x436) (ite (= x436 192) x2714 (x2783 x436))))
(assert (x107 x2349))
(assert (= (ite (= x424 x2553) x2700 (x2997 x2553)) (x2204 x2553)))
(assert (= (ite (and x2775 (not x2299)) (x795 x975) (x1613 x975)) (x2338 x975)))
(assert (= (ite (and x2926 x923) (x1952 x2387) (ite (and x1236 (not x602)) (x595 x2387) (x1546 x2387))) (x2328 x2387)))
(assert (= (ite (= x433 x972) x1063 (x1903 x433)) (x2720 x433)))
(assert (= (ite (= x424 x370) x2357 (x2997 x370)) (x1958 x370)))
(assert (= (ite (and x3 (not x2376)) (x651 x1594) (ite (and x1264 (not x150)) (x1769 x1594) (ite (and (not x601) x282) (x2255 x1594) (ite (and x1733 (not x1290)) (x2707 x1594) (x326 x1594))))) (x396 x1594)))
(assert (x2478 x1864))
(assert (= (ite (= x2833 160) x190 (x1314 x2833)) (x2783 x2833)))
(assert (= (ite (= x2359 x488) x2277 (x3037 x488)) (x1317 x488)))
(assert (= (ite (= x182 192) x2714 (x2783 x182)) (x302 x182)))
(assert (= (ite (= x1642 x499) x2188 (x2707 x1642)) (x2255 x1642)))
(assert (= (x396 x2594) (ite (and (not x2376) x3) (x651 x2594) (ite (and x1264 (not x150)) (x1769 x2594) (ite (and (not x601) x282) (x2255 x2594) (ite (and (not x1290) x1733) (x2707 x2594) (x326 x2594)))))))
(assert (x107 x1975))
(assert (= (=> (and (= (x2018 x1348) x3012) (= x2743 (< 0 x3012))) (and (=> (and (= x2790 0) (not x2743)) x2411) (=> x2743 x503))) x1122))
(assert (x107 x2559))
(assert (= (ite (= x2642 x1244) x397 (x1902 x1244)) (x2036 x1244)))
(assert (= (ite (and x2123 (not x208)) (x1845 x2513) (x301 x2513)) (x1777 x2513)))
(assert (= (x2795 x966) (ite (= x966 x1083) x367 (x2880 x966))))
(assert (= (ite (= 192 x2847) x2714 (x2783 x2847)) (x302 x2847)))
(assert (= (ite (= x867 128) x1725 (x33 x867)) (x1314 x867)))
(assert (= (x104 x2406) (ite (= x2406 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2406))))
(assert (= x1374 (=> (and (= x1648 (x3026 26959946667150639794667015087019630673637144422540572481103610249215 x317)) (= x2355 (x864 (+ x2975 100))) (= (x864 (+ x2975 36)) x2856) (= x1889 (x864 (+ 32 x2975))) (= x2461 (x163 (- x2355 x2975))) (= (x864 (+ x2975 68)) x1065) (= 0 x35) (= (x864 (+ x2856 128)) x236) (= x69 (x864 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1648))) (= (x163 (- x2461 32)) x2305) (= (x864 (+ x2856 96)) x1807) (= (x3026 1461501637330902918203684832716283019655932542975 x2649) x1685) (= (< 0 x1564) x1290) (= (x1942 (x1592 x1685)) x1124) (= x1907 (< 0 x1124)) (= x317 (x1647 x1889)) x1907 (= (x2707 x2975) x1564)) (and (=> (and (= x519 0) (not x1290)) x2194) (=> x1290 x330)))))
(assert (= (ite (= x2553 x677) x2612 (x1762 x2553)) (x1090 x2553)))
(assert (= (ite (= x1661 x857) x2246 (x1777 x857)) (x95 x857)))
(assert (=> (> (+ 10000 1) x1069) (= (x1592 x1069) (x348 x1069))))
(assert (= (x609 160) (ite (= x2150 160) 96 (x918 160))))
(assert (= (x104 x1136) (ite (= x1136 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1136))))
(assert (x107 x869))
(assert (= (x1845 x2594) (ite (and x1892 (not x2097) x896) (x2539 x2594) (x2300 x2594))))
(assert (= (ite (= x1809 x1136) x50 (x2159 x1136)) (x1903 x1136)))
(assert (= (x205 x2217) (ite (and (not x2377) x724) (x798 x2217) (x346 x2217))))
(assert (= (ite (= x685 x1231) x775 (x44 x685)) (x887 x685)))
(assert (= x649 (=> (and (= x2376 (> x1564 96)) (= (x864 (+ 128 x2355)) x420) (= (x1769 x2836) x952) (= x2836 (x864 (+ 96 x2975)))) (and (=> x2376 x2514) (=> (and (not x2376) (= 96 x519)) x2194)))))
(assert (= (x902 x483) (ite (= x227 x483) x22 (x56 x483))))
(assert (= (ite (= x780 x2106) x555 (x2526 x2106)) (x1952 x2106)))
(assert (x107 x1266))
(assert (= (x1325 x483) (ite (= x1638 x483) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x483))))
(assert (= (x63 x2513) (ite (and (not x2933) x1798) (x125 x2513) (ite (and (not x969) x77) (x657 x2513) (ite (and (not x1421) x2091) (x1226 x2513) (ite (and (not x2706) x697) (x2950 x2513) (x2504 x2513)))))))
(assert (= (x2995 x294) (ite (= 224 x294) x770 (x302 x294))))
(assert (= (ite (and x2422 (not x566) x2821) (x2189 x3011) (x168 x3011)) (x2167 x3011)))
(assert (= (ite (= x1882 x2635) x1168 (x2980 x1882)) (x1265 x1882)))
(assert (= (ite (= x2128 x2309) x1897 (x657 x2309)) (x125 x2309)))
(assert (x107 x2603))
(assert (= (ite (= x2869 x780) x555 (x2526 x2869)) (x1952 x2869)))
(assert (x107 x848))
(assert (= (x915 x1594) (ite (and x2851 x1335) (x3018 x1594) (ite (and (not x3047) x1301) (x1317 x1594) (x2805 x1594)))))
(assert (x107 x988))
(assert (x107 x375))
(assert (= (ite (= x59 x1642) x1209 (x1340 x1642)) (x1762 x1642)))
(assert (= (x2018 x86) (ite (and x1866 (not x2476)) (x2232 x86) (x1379 x86))))
(assert (= (x283 x2552) (ite (= x2552 x2061) x515 (x224 x2552))))
(assert (= (ite (= x293 x1242) x2639 (x225 x293)) (x1810 x293)))
(assert (= x1145 x2949))
(assert (= (ite (= x2298 x227) x22 (x56 x2298)) (x902 x2298)))
(assert (= (x915 x2106) (ite (and x1335 x2851) (x3018 x2106) (ite (and (not x3047) x1301) (x1317 x2106) (x2805 x2106)))))
(assert (= (x2259 x685) (ite (= x115 x685) x2357 (x1427 x685))))
(assert (= (ite (= x2709 x49) x2925 (x1370 x49)) (x2172 x49)))
(assert (= (x1090 x433) (ite (= x677 x433) x2612 (x1762 x433))))
(assert (= (x609 x866) (ite (= x2150 x866) 96 (x918 x866))))
(assert (= (ite (= x2576 x629) x1279 (x1888 x629)) (x939 x629)))
(assert (x107 x1399))
(assert (x107 x731))
(assert (= (and x1741 x2537) x908))
(assert (= (x1845 x2623) (ite (and (not x2097) x896 x1892) (x2539 x2623) (x2300 x2623))))
(assert (= (ite (= x629 x517) x1914 (x2939 x629)) (x2539 x629)))
(assert (= (x1539 x1483) (ite (= x1483 x1583) x1235 (x1450 x1483))))
(assert (= (ite (= x1484 x2150) 96 (x918 x1484)) (x609 x1484)))
(assert (= (x609 x1594) (ite (= x1594 x2150) 96 (x918 x1594))))
(assert (= (ite (= x1197 x1615) x2726 (x2268 x1197)) (x2189 x1197)))
(assert (= (ite (= x2150 x966) 96 (x918 x966)) (x609 x966)))
(assert (= (x902 x961) (ite (= x961 x227) x22 (x56 x961))))
(assert (x107 x1155))
(assert (= (x1539 x780) (ite (= x1583 x780) x1235 (x1450 x780))))
(assert (= (x104 x2553) (ite (= x467 x2553) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2553))))
(assert (x107 x2307))
(assert (= 0 (x1795 (- x1386 x2049))))
(assert (x107 x1230))
(assert (x107 x905))
(assert (= (x396 x961) (ite (and x3 (not x2376)) (x651 x961) (ite (and x1264 (not x150)) (x1769 x961) (ite (and (not x601) x282) (x2255 x961) (ite (and (not x1290) x1733) (x2707 x961) (x326 x961)))))))
(assert (= (ite (= x824 x2552) x1666 (x902 x2552)) (x801 x2552)))
(assert (= (or (and x210 (not x1007)) x2164) x2505))
(assert (= (ite (and (not x2097) x1892 x896) (x2539 x2553) (x2300 x2553)) (x1845 x2553)))
(assert (= (ite (and x896 x1892 (not x2097)) (x2539 x874) (x2300 x874)) (x1845 x874)))
(assert (= (x2073 x86) (ite (= x86 x766) x1423 (x2397 x86))))
(assert (= (ite (and (not x2097) x896 x1892) (x2539 x1136) (x2300 x1136)) (x1845 x1136)))
(assert (= 0 (x33 x722)))
(assert (= 0 (x33 x1946)))
(assert (= (x130 x1873) (ite (= x1489 x1873) x1829 (x1668 x1873))))
(assert (= x2199 (and (not x3007) x2796)))
(assert (= (ite (= x2129 x780) x2451 (x1226 x780)) (x657 x780)))
(assert (x107 x2561))
(assert (= (ite (= x867 192) x2714 (x2783 x867)) (x302 x867)))
(assert (= (x63 x424) (ite (and x1798 (not x2933)) (x125 x424) (ite (and x77 (not x969)) (x657 x424) (ite (and (not x1421) x2091) (x1226 x424) (ite (and (not x2706) x697) (x2950 x424) (x2504 x424)))))))
(assert (= (x595 x1387) (ite (= x1387 x159) 96 (x1952 x1387))))
(assert (= (x2993 x1267) (ite (and x1697 x1145) (x939 x1267) (x1686 x1267))))
(assert (= (x1451 x1197) (ite (= x1197 x2252) x840 (x2764 x1197))))
(assert (x2478 x1069))
(assert (= (ite (= x2876 x499) x2188 (x2707 x2876)) (x2255 x2876)))
(assert (x107 x1890))
(assert (= (x2426 x267) (ite (and x2105 x29) (x593 x267) (x1044 x267))))
(assert (= (x1314 128) x1725))
(assert (= (x2783 x2552) (ite (= x2552 160) x190 (x1314 x2552))))
(assert (= (ite (= x1261 x629) x2738 (x2950 x629)) (x1226 x629)))
(assert (= (ite (= x436 128) x1725 (x33 x436)) (x1314 x436)))
(assert (x107 x2112))
(assert (x107 x497))
(assert (= (ite (and x724 (not x2377)) (x798 x2817) (x346 x2817)) (x205 x2817)))
(assert (= (x33 x2594) 0))
(assert (= (x1494 (- x97 x2555)) 0))
(assert (x107 x1816))
(assert (x107 x2081))
(assert (= (ite (= x294 x2642) x397 (x1902 x294)) (x2036 x294)))
(assert (= (ite (= x3008 x2991) x1217 (x340 x2991)) (x3018 x2991)))
(assert (= (ite (= x1583 x3011) x1235 (x1450 x3011)) (x1539 x3011)))
(assert (= (x2931 x1594) (ite (= x1594 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1594))))
(assert (= (x33 x2847) 0))
(assert (= (ite (= x1261 x1946) x2738 (x2950 x1946)) (x1226 x1946)))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x655) (x1059 x655)) (ite (and x135 x2374) (x205 x655) (ite (and x3004 x2850) (x1777 x655) (x2338 x655)))) (x2997 x655)))
(assert (= (ite (= x867 x3008) x1217 (x340 x867)) (x3018 x867)))
(assert (= (ite (= x159 x2717) 96 (x1952 x2717)) (x595 x2717)))
(assert (= (ite (= x2513 x2150) 96 (x918 x2513)) (x609 x2513)))
(assert (= (x2036 x483) (ite (= x483 x2642) x397 (x1902 x483))))
(assert (= (ite (= x1776 128) x1725 (x33 x1776)) (x1314 x1776)))
(assert (x107 x350))
(assert (= x2062 (or (and (not x2141) x2643) x1699)))
(assert (= (x1539 x867) (ite (= x1583 x867) x1235 (x1450 x867))))
(assert (x107 x79))
(assert (= (ite (= x433 x59) x1209 (x1340 x433)) (x1762 x433)))
(assert (= (ite (= x3011 x1242) x2639 (x225 x3011)) (x1810 x3011)))
(assert (= (x915 x1516) (ite (and x2851 x1335) (x3018 x1516) (ite (and (not x3047) x1301) (x1317 x1516) (x2805 x1516)))))
(assert (x107 x2205))
(assert (= (ite (= x1615 x2597) x2726 (x2268 x2597)) (x2189 x2597)))
(assert (= x2324 (=> (and (= x1695 (x864 (+ 192 x2474))) (= (= x781 0) x1135) (< 0 x878) (= (x1845 x2635) x878) (= x781 (x1845 x1695))) (and (=> (and (= x1831 x337) x1135) x427) (=> (and (= x2126 (x1845 x1972)) (not x1135) (= x1744 (x1845 x822)) (= x2146 (x864 (+ 4 x1831))) (= (x864 (+ 32 x1972)) x822) (= (x1942 (x1592 x2398)) x572) (< 0 x2126) (= (x3026 1461501637330902918203684832716283019655932542975 x1744) x25) (not (= 0 x572)) (or (and (= x545 x832) (not x2094)) (and (> 4294967296 x804) (= x832 1) x2094)) (= (> x545 0) x2094)) x2785)))))
(assert (= (x225 x2817) (ite (= x796 x2817) x2187 (x801 x2817))))
(assert (= (ite (= x629 x227) x22 (x56 x629)) (x902 x629)))
(assert (= (x1314 x2710) (ite (= 128 x2710) x1725 (x33 x2710))))
(assert (x107 x514))
(assert (= (ite (= x1267 x424) x2357 (x2997 x1267)) (x1958 x1267)))
(assert (x107 x25))
(assert (= (x1181 x2248) (ite (= x2248 x43) x1346 (x2998 x2248))))
(assert (x1932 x394 x2581))
(assert (= (x887 x2553) (ite (= x2553 x1231) x775 (x44 x2553))))
(assert (= (ite (= x3008 x966) x1217 (x340 x966)) (x3018 x966)))
(assert (= (ite (= x2359 x1267) x2277 (x3037 x1267)) (x1317 x1267)))
(assert (= (x3018 x1882) (ite (= x1882 x3008) x1217 (x340 x1882))))
(assert (= (ite (and x923 x2926) (x1952 x182) (ite (and (not x602) x1236) (x595 x182) (x1546 x182))) (x2328 x182)))
(assert (= (ite (= x261 x159) 96 (x1952 x261)) (x595 x261)))
(assert (= (x1370 x1544) (ite (= x1544 x2298) x3034 (x161 x1544))))
(assert (x107 x687))
(assert (= (x2245 x3011) (ite (= x3011 x2636) x1673 (x283 x3011))))
(assert (x107 x658))
(assert (= (ite (= x1453 x655) x555 (x2602 x655)) (x918 x655)))
(assert (x107 x232))
(assert (= (x2259 x2869) (ite (= x115 x2869) x2357 (x1427 x2869))))
(assert (= x1581 (=> (and (= x2532 x984) (= (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x984)) x372) (> x1094 0) (= (x2338 x1882) x984) (not (> 0 x372)) (= (x2338 x2635) x1094) (= (x864 (+ x2474 192)) x1882) (= (x2338 x2635) x849) (= (not (< 1 x849)) x765)) (and x765 (=> (= x2532 x2897) x946)))))
(assert (= (ite (= x2597 x2107) x315 (x533 x2597)) (x807 x2597)))
(assert (x107 x1431))
(assert (= (x1777 x975) (ite (and x2123 (not x208)) (x1845 x975) (x301 x975))))
(assert (= x10 (=> (and (= x1128 (x163 (- x1217 1))) (= x1743 (x864 (+ 64 x1532))) (= x2556 (x864 (+ 64 x762))) (= (x864 (+ 64 x3008)) x1646) (= (x864 (+ 64 x2556)) x2211) (= (< 0 x1128) x3047) (= (x864 (+ 32 x3008)) x2359) (= x1532 (x864 (+ x2277 64))) (= (x864 (+ 192 x2277)) x2688) (= (x864 (+ x2277 32)) x762)) (and (=> (and (not x3047) (= x617 x2688)) x907) (=> x3047 x588)))))
(assert (= (ite (= x424 x86) x2357 (x2997 x86)) (x1958 x86)))
(assert (= (ite (= x2962 x86) x950 (x1429 x86)) (x245 x86)))
(assert (= (x1952 x2217) (ite (= x2217 x780) x555 (x2526 x2217))))
(assert (= (x2328 x2817) (ite (and x923 x2926) (x1952 x2817) (ite (and (not x602) x1236) (x595 x2817) (x1546 x2817)))))
(assert (= (x2073 x2817) (ite (= x766 x2817) x1423 (x2397 x2817))))
(assert (= (x1450 x86) (ite (= x1821 x86) x3034 (x1728 x86))))
(assert (x1932 x1597 x92))
(assert (= (x2397 x1732) (ite (and (not x763) x2810) (x2167 x1732) (x298 x1732))))
(assert (= (x2189 x2594) (ite (= x2594 x1615) x2726 (x2268 x2594))))
(assert (= (x1090 x1706) (ite (= x677 x1706) x2612 (x1762 x1706))))
(assert (= (x2720 x1706) (ite (= x972 x1706) x1063 (x1903 x1706))))
(assert (= x652 (=> (and (= x2511 (uninterp_mod (* x555 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2127 (x864 (+ x543 x780))) (= (x864 (+ 32 x2511)) x543) (= (= 0 x555) x2926)) (and (=> x2926 x1176) (=> (not x2926) x1740)))))
(assert (x107 x2558))
(assert (x107 x2472))
(assert (= (=> (and (= x2845 (= x555 0)) (= x2536 (uninterp_mod (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2602 128) x555) (= x780 (x864 (+ x2190 x1453))) (= (x864 (+ 32 x2536)) x2190)) (and (=> x2845 x652) (=> (not x2845) x1131))) x2463))
(assert (= 0 (x33 x67)))
(assert (= (ite (= x1638 x1524) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1524)) (x1325 x1524)))
(assert (= (x2036 x1642) (ite (= x1642 x2642) x397 (x1902 x1642))))
(assert (= (ite (= x2107 x1136) x315 (x533 x1136)) (x807 x1136)))
(assert (= (ite (= x1846 x483) x500 (x559 x483)) (x970 x483)))
(assert (x107 x1200))
(assert (x107 x685))
(assert (x107 x2126))
(assert (x2528 x959 x1938))
(assert (= (x104 x261) (ite (= x467 x261) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x261))))
(assert (= 0 (x1494 (- x86 x2555))))
(assert (= (ite (and x2851 x1335) (x3018 x1453) (ite (and x1301 (not x3047)) (x1317 x1453) (x2805 x1453))) (x915 x1453)))
(assert (x107 x2779))
(assert (= (x1450 x2546) (ite (= x2546 x1821) x3034 (x1728 x2546))))
(assert (= (ite (= x1267 x2425) x859 (x103 x1267)) (x1819 x1267)))
(assert (= (ite (and x724 (not x2377)) (x798 x866) (x346 x866)) (x205 x866)))
(assert (= x431 (and x1506 x276)))
(assert (x107 x512))
(assert (= (x2245 x483) (ite (= x483 x2636) x1673 (x283 x483))))
(assert (= (x1958 x1544) (ite (= x1544 x424) x2357 (x2997 x1544))))
(assert (x107 x2016))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x1873) (x2300 x1873)) (x1845 x1873)))
(assert (= (ite (= x420 x2552) x952 (x1769 x2552)) (x651 x2552)))
(assert (= (x3018 x2309) (ite (= x2309 x3008) x1217 (x340 x2309))))
(assert (= (x302 x261) (ite (= x261 192) x2714 (x2783 x261))))
(assert (= (ite (and (not x2299) x2775) (x795 x2477) (x1613 x2477)) (x2338 x2477)))
(assert (= (x125 x1197) (ite (= x1197 x2128) x1897 (x657 x1197))))
(assert (= (x2931 x2991) (ite (= x2991 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2991))))
(assert (= (ite (and (not x2933) x1798) (x125 x433) (ite (and (not x969) x77) (x657 x433) (ite (and (not x1421) x2091) (x1226 x433) (ite (and x697 (not x2706)) (x2950 x433) (x2504 x433))))) (x63 x433)))
(assert (x107 x973))
(assert (= (ite (and x29 (not x1970)) (x63 x2168) (x692 x2168)) (x1044 x2168)))
(assert (= (x2783 x2991) (ite (= x2991 160) x190 (x1314 x2991))))
(assert (= x1078 (=> (and (= x2492 x2568) (= (uninterp_mod (* x2965 x2729) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2568) (not (< x2144 x2729)) (= x2144 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2965)))) x2824)))
(assert (x107 x1551))
(assert (x107 x1562))
(assert (= (x1952 x943) (ite (= x943 x780) x555 (x2526 x943))))
(assert (x107 x1057))
(assert (= (ite (= x1267 x2367) x2894 (x2255 x1267)) (x1769 x1267)))
(assert (= (ite (= x2150 x1732) 96 (x918 x1732)) (x609 x1732)))
(assert (= (ite (= x517 x2594) x1914 (x2939 x2594)) (x2539 x2594)))
(assert (x107 x1472))
(assert (x107 x1684))
(assert (= (x2783 x364) (ite (= 160 x364) x190 (x1314 x364))))
(assert (= (ite (and x1335 x2851) (x3018 x267) (ite (and x1301 (not x3047)) (x1317 x267) (x2805 x267))) (x915 x267)))
(assert (= (ite (and x2775 (not x2299)) (x795 x655) (x1613 x655)) (x2338 x655)))
(assert (= (ite (and x2926 x923) (x1952 x655) (ite (and (not x602) x1236) (x595 x655) (x1546 x655))) (x2328 x655)))
(assert (= (ite (= x1083 x433) x367 (x2880 x433)) (x2795 x433)))
(assert (= (ite (= x1873 x824) x1666 (x902 x1873)) (x801 x1873)))
(assert (= x1733 (and x2662 (not x198))))
(assert (= (x1534 x3011) (ite (= x1318 x3011) x1964 (x715 x3011))))
(assert (= (and x1319 x707) x3040))
(assert (= (x609 x2387) (ite (= x2387 x2150) 96 (x918 x2387))))
(assert (= x1635 (=> (and (= (not (< 1 x1569)) x8) (= x109 (= 0 x1183)) (= (x3026 1 x363) x1183) (= (x2059 x363 1) x1569)) (and x8 (=> (and (= 100 x1420) (= x1153 (ite x109 1 10))) x986)))))
(assert (=> (> (+ 10000 1) x1685) (= (x1592 x1685) (x348 x1685))))
(assert (x107 x885))
(assert (= (x2795 x1706) (ite (= x1083 x1706) x367 (x2880 x1706))))
(assert (= (x2018 x1544) (ite (and (not x2476) x1866) (x2232 x1544) (x1379 x1544))))
(assert (= (x2783 x655) (ite (= x655 160) x190 (x1314 x655))))
(assert (x107 x2806))
(assert (= (or (and (not x1680) x1280) (and (not x1248) x1498) x1375) x2645))
(assert (= (ite (= x966 x780) x555 (x2526 x966)) (x1952 x966)))
(assert (x1932 x1975 x1402))
(assert (= (ite (= x499 x270) x2188 (x2707 x270)) (x2255 x270)))
(assert (= (ite (= x3023 x2623) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2623)) (x2931 x2623)))
(assert (x107 x1414))
(assert (= (x1534 x1821) (ite (= x1821 x1318) x1964 (x715 x1821))))
(assert (= (ite (= x2168 x1348) x542 (x2394 x2168)) (x2063 x2168)))
(assert (= (x609 x722) (ite (= x722 x2150) 96 (x918 x722))))
(assert (= (x609 x433) (ite (= x433 x2150) 96 (x918 x433))))
(assert (x107 x263))
(assert (x107 x521))
(assert (= (x2073 x2594) (ite (= x2594 x766) x1423 (x2397 x2594))))
(assert (= (x1819 x1706) (ite (= x2425 x1706) x859 (x103 x1706))))
(assert (= (ite (and (not x2299) x2775) (x795 x857) (x1613 x857)) (x2338 x857)))
(assert (= (x595 x966) (ite (= x966 x159) 96 (x1952 x966))))
(assert (= (ite (= x467 x1544) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1544)) (x104 x1544)))
(assert (= (x2783 x1483) (ite (= x1483 160) x190 (x1314 x1483))))
(assert (= (or (and x343 x148) x842) x2672))
(assert (x107 x1672))
(assert (= (ite (and x2926 x923) (x1952 x966) (ite (and x1236 (not x602)) (x595 x966) (x1546 x966))) (x2328 x966)))
(assert (= (x651 x2869) (ite (= x2869 x420) x952 (x1769 x2869))))
(assert (x107 x74))
(assert (= (ite (and (not x763) x2810) (x2167 x2477) (x298 x2477)) (x2397 x2477)))
(assert (x107 x1573))
(assert (= (x3018 x2406) (ite (= x3008 x2406) x1217 (x340 x2406))))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x770) (= (x864 (+ x751 64)) x2756) (= x15 (< 3 x1725)) (= x770 (x1667 x1015))) (and (=> x15 x688) (=> (not x15) x1285))) x1273))
(assert (= (ite (= x780 x2991) x555 (x2526 x2991)) (x1952 x2991)))
(assert (= (x1903 x1387) (ite (= x1387 x1809) x50 (x2159 x1387))))
(assert (x107 x131))
(assert (= (ite (= x1267 x1489) x1829 (x1668 x1267)) (x130 x1267)))
(assert (= x2029 x111))
(assert (x107 x434))
(assert (x107 x833))
(assert (= (x1782 x2817) (ite (and x1979 (not x94)) (x396 x2817) (x87 x2817))))
(assert (= (x1952 x2406) (ite (= x780 x2406) x555 (x2526 x2406))))
(assert (x107 x2597))
(assert (= (x1819 x86) (ite (= x86 x2425) x859 (x103 x86))))
(assert (= (ite (= x2127 x914) x3034 (x2328 x914)) (x1902 x914)))
(assert (= (ite (and x2655 x817) (x1534 x1267) (ite (and (not x1834) x1941) (x887 x1267) (x151 x1267))) (x423 x1267)))
(assert (x107 x1535))
(assert (= (x1845 x370) (ite (and x1892 (not x2097) x896) (x2539 x370) (x2300 x370))))
(assert (= (=> (and (not (< x2749 x1153)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420)) x2749) (= x742 x1221) (= (uninterp_mod (* x1420 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1221)) x1826) x986))
(assert (= (ite (= x780 x1041) x555 (x2526 x1041)) (x1952 x1041)))
(assert (= (x2036 x1695) (ite (= x2642 x1695) x397 (x1902 x1695))))
(assert (= (x805 x685) (ite (= x685 x501) x3030 (x1531 x685))))
(assert (= (x890 x1483) (ite (= x2085 x1483) x1910 (x970 x1483))))
(assert (x107 x616))
(assert (= (ite (= x677 x2406) x2612 (x1762 x2406)) (x1090 x2406)))
(assert (= (ite (and (not x2019) x2949) (x2993 x49) (x2001 x49)) (x1029 x49)))
(assert (= (x2707 x1197) (ite (= x1197 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1197))))
(assert (= x367 (x2795 x1083)))
(assert (= x223 (x2600 (x1592 x223))))
(assert (= (ite (= x159 x2406) 96 (x1952 x2406)) (x595 x2406)))
(assert (= (x2993 x655) (ite (and x1697 x1145) (x939 x655) (x1686 x655))))
(assert (x1932 x2605 x1701))
(assert (x107 x906))
(assert (= (ite (= x3008 x86) x1217 (x340 x86)) (x3018 x86)))
(assert (x405 x916))
(assert (= 0 (x1494 (- x2751 x2555))))
(assert (x107 x1868))
(assert (x405 x752))
(assert (= (x1494 (- x629 x2555)) 0))
(assert (= (ite (= x2048 x517) x1914 (x2939 x2048)) (x2539 x2048)))
(assert (= (x1494 (- x2513 x2555)) 0))
(assert (x107 x1802))
(assert (= (ite (= x1873 x517) x1914 (x2939 x1873)) (x2539 x1873)))
(assert (= (=> (and (= x1417 (x864 (+ x1242 64))) (= x2943 (not (> x22 4))) (= (x864 (+ x2876 64)) x1052) (= x1898 (x1810 x261))) (and x2943 (=> (and (= x350 x1417) (= x1052 x1556) (= x379 4)) x2674))) x827))
(assert (= x1086 true))
(assert (= (x2259 x2387) (ite (= x115 x2387) x2357 (x1427 x2387))))
(assert (= (ite (= x972 x67) x1063 (x1903 x67)) (x2720 x67)))
(assert (= (x798 x2168) (ite (and x682 x2759) (x2795 x2168) (x2138 x2168))))
(assert (= 0 (x33 x2168)))
(assert (x1932 x1868 x1496))
(assert (x107 x2367))
(assert (= (x1265 x2513) (ite (= x2635 x2513) x1168 (x2980 x2513))))
(assert (x107 x2046))
(assert (x107 x312))
(assert (= (ite (= x961 x517) x1914 (x2939 x961)) (x2539 x961)))
(assert (= (ite (= x517 x780) x1914 (x2939 x780)) (x2539 x780)))
(assert (= (x1819 x1946) (ite (= x1946 x2425) x859 (x103 x1946))))
(assert (x107 x2693))
(assert (= (x95 x2217) (ite (= x1661 x2217) x2246 (x1777 x2217))))
(assert (= (x1534 x455) (ite (= x455 x1318) x1964 (x715 x455))))
(assert (x107 x2351))
(assert (x107 x1558))
(assert (= (ite (= x3008 x1267) x1217 (x340 x1267)) (x3018 x1267)))
(assert (= (x801 x685) (ite (= x824 x685) x1666 (x902 x685))))
(assert (= (ite (and x2851 x1335) (x3018 x433) (ite (and x1301 (not x3047)) (x1317 x433) (x2805 x433))) (x915 x433)))
(assert (= (x1226 x483) (ite (= x1261 x483) x2738 (x2950 x483))))
(assert (= (ite (= x350 x2513) x1558 (x12 x2513)) (x2950 x2513)))
(assert (= (ite (and x2949 (not x2019)) (x2993 x655) (x2001 x655)) (x1029 x655)))
(assert (= (ite (= x420 x846) x952 (x1769 x846)) (x651 x846)))
(assert (= (x918 x1873) (ite (= x1873 x1453) x555 (x2602 x1873))))
(assert (x107 x2153))
(assert (= x639 (x1592 (x2600 x639))))
(assert (= (ite (= 224 x2048) x770 (x302 x2048)) (x2995 x2048)))
(assert (x107 x876))
(assert (= (or x1298 (and (not x615) x947)) x583))
(assert (= (ite (= x1197 x780) x555 (x2526 x1197)) (x1952 x1197)))
(assert (= (x1592 (x2600 x1536)) x1536))
(assert (= (ite (= x227 x1706) x22 (x56 x1706)) (x902 x1706)))
(assert (x2528 x2147 x2239))
(assert (= (x805 x86) (ite (= x501 x86) x3030 (x1531 x86))))
(assert (= (x807 x1041) (ite (= x2107 x1041) x315 (x533 x1041))))
(assert (= (ite (= x1807 x748) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x748)) (x2707 x748)))
(assert (= (x651 x424) (ite (= x420 x424) x952 (x1769 x424))))
(assert (x107 x1742))
(assert (= (ite (and x1697 x1145) (x939 x629) (x1686 x629)) (x2993 x629)))
(assert (x107 x2870))
(assert (= (x1819 x1453) (ite (= x1453 x2425) x859 (x103 x1453))))
(assert (= 0 (x1494 (- x1197 x2555))))
(assert (= (ite (and x2759 x682) (x2795 x2406) (x2138 x2406)) (x798 x2406)))
(assert (= (x2255 x2597) (ite (= x499 x2597) x2188 (x2707 x2597))))
(assert (= (x1226 x1197) (ite (= x1261 x1197) x2738 (x2950 x1197))))
(assert (= (x2328 x1267) (ite (and x923 x2926) (x1952 x1267) (ite (and (not x602) x1236) (x595 x1267) (x1546 x1267)))))
(assert (= (ite (= x433 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x433)) (x104 x433)))
(assert (= (x2259 x2594) (ite (= x2594 x115) x2357 (x1427 x2594))))
(assert (= x688 (=> (and (= x1061 (not (> x1725 4))) (= x507 (x1667 x2756)) (>= 1461501637330902918203684832716283019655932542975 x507)) (and x1285 x1061))))
(assert (= (x2997 x1516) (ite x1752 (ite (and x1127 (not x2913)) (x205 x1516) (x1059 x1516)) (ite (and x2374 x135) (x205 x1516) (ite (and x2850 x3004) (x1777 x1516) (x2338 x1516))))))
(assert (= (ite (= x2367 x49) x2894 (x2255 x49)) (x1769 x49)))
(assert (x107 x955))
(assert (= (ite (= x1544 x2635) x1168 (x2980 x1544)) (x1265 x1544)))
(assert (= (ite (= x483 x350) x1558 (x12 x483)) (x2950 x483)))
(assert (= (ite (= x972 x2597) x1063 (x1903 x2597)) (x2720 x2597)))
(assert (= (ite (= x1642 x2129) x2451 (x1226 x1642)) (x657 x1642)))
(assert (= (ite (= x824 x370) x1666 (x902 x370)) (x801 x370)))
(assert (= (x2795 x1732) (ite (= x1083 x1732) x367 (x2880 x1732))))
(assert (= (x2931 x1873) (ite (= x1873 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1873))))
(assert (= (ite (and x2949 (not x2019)) (x2993 x483) (x2001 x483)) (x1029 x483)))
(assert (= (x1029 x1267) (ite (and x2949 (not x2019)) (x2993 x1267) (x2001 x1267))))
(assert (= (and x2123 x208) x2641))
(assert (= (x798 x943) (ite (and x2759 x682) (x2795 x943) (x2138 x943))))
(assert (x107 x1744))
(assert (= (ite (= x2971 x127) x1229 (x511 x2971)) (x1222 x2971)))
(assert (= (ite (= x685 x420) x952 (x1769 x685)) (x651 x685)))
(assert (= (ite (= x49 x1083) x367 (x2880 x49)) (x2795 x49)))
(assert (= (ite (and x2775 (not x2299)) (x795 x2513) (x1613 x2513)) (x2338 x2513)))
(assert (x107 x236))
(assert (= (x2036 x866) (ite (= x2642 x866) x397 (x1902 x866))))
(assert (= (ite (= x2298 x1068) x3034 (x161 x1068)) (x1370 x1068)))
(assert (= (ite (= x2298 x2546) x3034 (x161 x2546)) (x1370 x2546)))
(assert (= (ite (and x2123 (not x208)) (x1845 x3011) (x301 x3011)) (x1777 x3011)))
(assert (= (x807 x2309) (ite (= x2309 x2107) x315 (x533 x2309))))
(assert (= (ite (= x2107 x1642) x315 (x533 x1642)) (x807 x1642)))
(assert (= (x1370 128) (ite (= 128 x2298) x3034 (x161 128))))
(assert (= (ite (= x517 x914) x1914 (x2939 x914)) (x2539 x914)))
(assert (= (ite (= x499 x182) x2188 (x2707 x182)) (x2255 x182)))
(assert (x107 x2298))
(assert (= (ite (= x2553 x1318) x1964 (x715 x2553)) (x1534 x2553)))
(assert (= (x1782 x748) (ite (and (not x94) x1979) (x396 x748) (x87 x748))))
(assert (= (x1782 x483) (ite (and x1979 (not x94)) (x396 x483) (x87 x483))))
(assert (= (x396 x1544) (ite (and (not x2376) x3) (x651 x1544) (ite (and x1264 (not x150)) (x1769 x1544) (ite (and (not x601) x282) (x2255 x1544) (ite (and (not x1290) x1733) (x2707 x1544) (x326 x1544)))))))
(assert (x107 x1690))
(assert (= (x2997 x846) (ite x1752 (ite (and x1127 (not x2913)) (x205 x846) (x1059 x846)) (ite (and x135 x2374) (x205 x846) (ite (and x2850 x3004) (x1777 x846) (x2338 x846))))))
(assert (= x2821 (or x2020 (and x1302 (not x2743)))))
(assert (x107 x975))
(assert (= (x2338 x1197) (ite (and (not x2299) x2775) (x795 x1197) (x1613 x1197))))
(assert (= (x2255 x2817) (ite (= x499 x2817) x2188 (x2707 x2817))))
(assert (= (x205 x2751) (ite (and x724 (not x2377)) (x798 x2751) (x346 x2751))))
(assert (= (ite (= x3008 x874) x1217 (x340 x874)) (x3018 x874)))
(assert (x2567 x1051))
(assert (= (ite (= x2309 x246) x1037 (x807 x2309)) (x2159 x2309)))
(assert (x107 x2310))
(assert (x2478 x681))
(assert (= (ite (= x433 x1846) x500 (x559 x433)) (x970 x433)))
(assert (= (ite (and x896 x1892 (not x2097)) (x2539 x2477) (x2300 x2477)) (x1845 x2477)))
(assert (= (ite (= x2642 x975) x397 (x1902 x975)) (x2036 x975)))
(assert (= (ite (= x1615 x67) x2726 (x2268 x67)) (x2189 x67)))
(assert (= (x657 x2477) (ite (= x2477 x2129) x2451 (x1226 x2477))))
(assert (= (ite (= x789 x1453) x555 (x2602 x789)) (x918 x789)))
(assert (= (x1226 x293) (ite (= x293 x1261) x2738 (x2950 x293))))
(assert (x107 x1231))
(assert (= (ite (= x2150 x1483) 96 (x918 x1483)) (x609 x1483)))
(assert (= (x1029 x3011) (ite (and x2949 (not x2019)) (x2993 x3011) (x2001 x3011))))
(assert (= (and x923 (not x2926)) x1236))
(assert (= (ite (= x2576 x1267) x1279 (x1888 x1267)) (x939 x1267)))
(assert (= (ite (= 224 x1483) x770 (x302 x1483)) (x2995 x1483)))
(assert (x107 x1815))
(assert (= (x1340 x2513) (ite (= x2454 x2513) x823 (x245 x2513))))
(assert (x107 x2103))
(assert (x107 x1547))
(assert (= (x1314 x2477) (ite (= x2477 128) x1725 (x33 x2477))))
(assert (= (x807 x966) (ite (= x2107 x966) x315 (x533 x966))))
(assert (= (x396 x2298) (ite (and (not x2376) x3) (x651 x2298) (ite (and x1264 (not x150)) (x1769 x2298) (ite (and (not x601) x282) (x2255 x2298) (ite (and (not x1290) x1733) (x2707 x2298) (x326 x2298)))))))
(assert (x107 x1788))
(assert (= (x245 x2477) (ite (= x2962 x2477) x950 (x1429 x2477))))
(assert (= (x2539 x517) x1914))
(assert (= (ite (= x2767 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2767)) (x2707 x2767)))
(assert (= (x2795 x2594) (ite (= x2594 x1083) x367 (x2880 x2594))))
(assert (= (x1265 x2477) (ite (= x2635 x2477) x1168 (x2980 x2477))))
(assert (= (x2172 x488) (ite (= x488 x2709) x2925 (x1370 x488))))
(assert (x107 x1681))
(assert (x107 x626))
(assert (= (ite (= x1387 x420) x952 (x1769 x1387)) (x651 x1387)))
(assert (= (x609 x488) (ite (= x488 x2150) 96 (x918 x488))))
(assert (= (ite (= 128 x780) x555 (x2526 128)) (x1952 128)))
(assert (= (ite (= x1780 192) x2714 (x2783 x1780)) (x302 x1780)))
(assert (x107 x646))
(assert (= (x2397 x1968) (ite (and x2810 (not x763)) (x2167 x1968) (x298 x1968))))
(assert (= (x2783 x2477) (ite (= x2477 160) x190 (x1314 x2477))))
(assert (x107 x1831))
(assert (= (x801 x455) (ite (= x824 x455) x1666 (x902 x455))))
(assert (x107 x2735))
(assert (= (ite (= x2594 x2150) 96 (x918 x2594)) (x609 x2594)))
(assert (= (x2036 x1594) (ite (= x2642 x1594) x397 (x1902 x1594))))
(assert (= (x1958 x2751) (ite (= x424 x2751) x2357 (x2997 x2751))))
(assert (x107 x1125))
(assert (x107 x344))
(assert (= (ite (= x2454 x1544) x823 (x245 x1544)) (x1340 x1544)))
(assert (= (and x2927 x1719) x1515))
(assert (= x743 (=> (and (= x3055 (uninterp_mod (* x2466 x1867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867)) x2584) (= x3055 x368) (not (> x2466 x2584))) x1393)))
(assert (= (ite (= x246 x1873) x1037 (x807 x1873)) (x2159 x1873)))
(assert (= (x2795 x1544) (ite (= x1544 x1083) x367 (x2880 x1544))))
(assert (= (ite (= x1083 x867) x367 (x2880 x867)) (x2795 x867)))
(assert (= (ite (= x1946 x499) x2188 (x2707 x1946)) (x2255 x1946)))
(assert (x107 x1396))
(assert (= (x2720 x966) (ite (= x966 x972) x1063 (x1903 x966))))
(assert (= (ite (= x1732 x1348) x542 (x2394 x1732)) (x2063 x1732)))
(assert (= (x1317 x49) (ite (= x2359 x49) x2277 (x3037 x49))))
(assert (= (x2783 x1244) (ite (= 160 x1244) x190 (x1314 x1244))))
(assert (= (x902 x1732) (ite (= x1732 x227) x22 (x56 x1732))))
(assert (= (x104 x961) (ite (= x961 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x961))))
(assert (= (=> (and (= (x346 x2717) x983) (= (not (< 1 x983)) x2114)) (and (=> (= x1257 x737) x470) x2114)) x1874))
(assert (= x2646 (=> (and (= x2615 x636) (= (< 0 x1470) x2913) (= (x205 x2991) x2615) (= (x205 x2474) x592) (= x636 (x205 x1083)) (= x1470 (x205 x2991)) (= (x205 x857) x394) (= (x205 x1689) x2991)) (and (=> (and (= x2671 (x205 x1083)) (= x2509 (x3026 1461501637330902918203684832716283019655932542975 x394)) (= x866 (x864 (+ 32 x1083))) (= x2327 (x205 x2991)) (= x859 (x3026 1461501637330902918203684832716283019655932542975 x1868)) (not (= x1349 0)) (= (< 0 x2811) x1376) (> x2671 0) (= (x1942 (x1592 x2731)) x1349) (= x2731 (x3026 1461501637330902918203684832716283019655932542975 x592)) (= x1162 (x205 x866)) x2913 (= (x205 x1068) x1868) (> x2327 0) (= x1068 (x864 (+ x2991 32))) (= x2425 (x864 (+ x1257 36))) (= x1602 (x864 (+ x1257 4))) (or (and (not x1376) (= x352 x2811)) (and (> 4294967296 x2621) (= 1 x352) x1376))) x2260) (=> (and (= x1239 0) (not x2913) (= x1424 x1257)) x369)))))
(assert (= (ite (= x2150 x2710) 96 (x918 x2710)) (x609 x2710)))
(assert (= (x1782 x2751) (ite (and x1979 (not x94)) (x396 x2751) (x87 x2751))))
(assert (= (ite (= x2298 x1661) x2246 (x1777 x2298)) (x95 x2298)))
(assert (x107 x2594))
(assert (= (x2018 x1873) (ite (and x1866 (not x2476)) (x2232 x1873) (x1379 x1873))))
(assert (x107 x1305))
(assert (= (x225 x867) (ite (= x867 x796) x2187 (x801 x867))))
(assert (= (ite (and x2810 (not x763)) (x2167 x874) (x298 x874)) (x2397 x874)))
(assert (= (x1952 x2168) (ite (= x2168 x780) x555 (x2526 x2168))))
(assert (= (x1903 x2751) (ite (= x1809 x2751) x50 (x2159 x2751))))
(assert (= (ite (and x923 x2926) (x1952 x2298) (ite (and (not x602) x1236) (x595 x2298) (x1546 x2298))) (x2328 x2298)))
(assert (= (ite (= x796 x1041) x2187 (x801 x1041)) (x225 x1041)))
(assert (= (x3018 x1642) (ite (= x3008 x1642) x1217 (x340 x1642))))
(assert (x107 x1596))
(assert (= (x2950 x2546) (ite (= x2546 x350) x1558 (x12 x2546))))
(assert (= (x1819 x182) (ite (= x182 x2425) x859 (x103 x182))))
(assert (x107 x1766))
(assert (x107 x61))
(assert (x107 x1278))
(assert (= (ite (= x2477 x2252) x840 (x2764 x2477)) (x1451 x2477)))
(assert (x107 x2879))
(assert (= (x423 x1873) (ite (and x2655 x817) (x1534 x1873) (ite (and (not x1834) x1941) (x887 x1873) (x151 x1873)))))
(assert (x107 x714))
(assert (= (ite (= x780 x766) x1423 (x2397 x780)) (x2073 x780)))
(assert (= (ite (and (not x2299) x2775) (x795 x846) (x1613 x846)) (x2338 x846)))
(assert (x107 x2803))
(assert (x1932 x1291 x149))
(assert (= (x2997 x67) (ite x1752 (ite (and x1127 (not x2913)) (x205 x67) (x1059 x67)) (ite (and x135 x2374) (x205 x67) (ite (and x2850 x3004) (x1777 x67) (x2338 x67))))))
(assert (= (ite (= x2876 160) x190 (x1314 x2876)) (x2783 x2876)))
(assert (x107 x531))
(assert (x107 x1462))
(assert (= (x595 x483) (ite (= x159 x483) 96 (x1952 x483))))
(assert (= (ite (= x2553 x59) x1209 (x1340 x2553)) (x1762 x2553)))
(assert (= (x801 x874) (ite (= x824 x874) x1666 (x902 x874))))
(assert (x107 x2212))
(assert (= (or (and (not x633) x381) x2672) x1458))
(assert (= (ite (= x2751 x2635) x1168 (x2980 x2751)) (x1265 x2751)))
(assert (= (ite (= x1453 x1583) x1235 (x1450 x1453)) (x1539 x1453)))
(assert (x107 x1615))
(assert (= (x1592 (x2600 x2064)) x2064))
(assert (x107 x950))
(assert (x107 x2557))
(assert (x107 x287))
(assert (= (ite (= x1544 x115) x2357 (x1427 x1544)) (x2259 x1544)))
(assert (= (ite (= x2709 x2477) x2925 (x1370 x2477)) (x2172 x2477)))
(assert (= (x595 x49) (ite (= x159 x49) 96 (x1952 x49))))
(assert (= (ite (= x455 x1809) x50 (x2159 x455)) (x1903 x455)))
(assert (= (ite (= x2454 x1706) x823 (x245 x1706)) (x1340 x1706)))
(assert (= (ite (and x2926 x923) (x1952 x2717) (ite (and x1236 (not x602)) (x595 x2717) (x1546 x2717))) (x2328 x2717)))
(assert (= (x1769 x294) (ite (= x294 x2367) x2894 (x2255 x294))))
(assert (= (x2995 x1197) (ite (= 224 x1197) x770 (x302 x1197))))
(assert (= (ite (= x1041 x677) x2612 (x1762 x1041)) (x1090 x1041)))
(assert (= (x2600 (x1592 x1953)) x1953))
(assert (x107 x1875))
(assert (= (ite (and x2926 x923) (x1952 x975) (ite (and x1236 (not x602)) (x595 x975) (x1546 x975))) (x2328 x975)))
(assert (= (ite (= x2127 x370) x3034 (x2328 x370)) (x1902 x370)))
(assert (= (x2397 x293) (ite (and x2810 (not x763)) (x2167 x293) (x298 x293))))
(assert (= (x3018 x1706) (ite (= x1706 x3008) x1217 (x340 x1706))))
(assert (x107 x1632))
(assert (= (ite (= x293 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x293)) (x1325 x293)))
(assert (= (x2720 x1732) (ite (= x1732 x972) x1063 (x1903 x1732))))
(assert (= (x1769 x2751) (ite (= x2751 x2367) x2894 (x2255 x2751))))
(assert (= (x1451 x1453) (ite (= x2252 x1453) x840 (x2764 x1453))))
(assert (= (x2995 x1873) (ite (= 224 x1873) x770 (x302 x1873))))
(assert (= (ite (and x1145 x1697) (x939 x1453) (x1686 x1453)) (x2993 x1453)))
(assert (= (x651 x2876) (ite (= x420 x2876) x952 (x1769 x2876))))
(assert (= (ite (= x961 x1261) x2738 (x2950 x961)) (x1226 x961)))
(assert (= (ite (and x2926 x923) (x1952 x455) (ite (and x1236 (not x602)) (x595 x455) (x1546 x455))) (x2328 x455)))
(assert (= (x205 x1387) (ite (and (not x2377) x724) (x798 x1387) (x346 x1387))))
(assert (= (ite (= x1242 x1267) x2639 (x225 x1267)) (x1810 x1267)))
(assert (= (x1782 x2869) (ite (and (not x94) x1979) (x396 x2869) (x87 x2869))))
(assert (= (x805 x1946) (ite (= x1946 x501) x3030 (x1531 x1946))))
(assert (= (x1592 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x2666 (=> (and (= x1618 (x864 (+ x483 64))) (= (x3016 x2477) x2778) (= x847 (x864 (+ x1693 64))) (= x1377 (not (< 4 x626)))) (and (=> (and (= x2319 x847) (= x1925 x1618) (= x2577 4)) x1658) x1377))))
(assert (= (ite (= x246 x1387) x1037 (x807 x1387)) (x2159 x1387)))
(assert (= x2590 (and x2641 (not x1135))))
(assert (= (ite (and x2851 x1335) (x3018 x370) (ite (and (not x3047) x1301) (x1317 x370) (x2805 x370))) (x915 x370)))
(assert (x1527 x2148 x1216))
(assert (= (x95 x267) (ite (= x1661 x267) x2246 (x1777 x267))))
(assert (= (ite (= 128 x1068) x1725 (x33 x1068)) (x1314 x1068)))
(assert (= (ite (= x1231 x182) x775 (x44 x182)) (x887 x182)))
(assert (x107 x2700))
(assert (= (x890 x780) (ite (= x780 x2085) x1910 (x970 x780))))
(assert (= (ite (= x2725 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2725)) (x2931 x2725)))
(assert (= (ite (= x2150 x2406) 96 (x918 x2406)) (x609 x2406)))
(assert (= (ite (and x1335 x2851) (x3018 x1483) (ite (and x1301 (not x3047)) (x1317 x1483) (x2805 x1483))) (x915 x1483)))
(assert (= (x3018 x436) (ite (= x3008 x436) x1217 (x340 x436))))
(assert (= (ite (= x3051 x1706) x9 (x2245 x1706)) (x928 x1706)))
(assert (= (ite (= x677 x1453) x2612 (x1762 x1453)) (x1090 x1453)))
(assert (= (ite (= x501 x1732) x3030 (x1531 x1732)) (x805 x1732)))
(assert (= (x33 x1544) 0))
(assert (= (ite (and (not x94) x1979) (x396 x1453) (x87 x1453)) (x1782 x1453)))
(assert (x107 x709))
(assert (= (x1317 x293) (ite (= x293 x2359) x2277 (x3037 x293))))
(assert (x107 x1964))
(assert (= (ite (= x2217 x2298) x3034 (x161 x2217)) (x1370 x2217)))
(assert (= (x939 x1732) (ite (= x1732 x2576) x1279 (x1888 x1732))))
(assert (x107 x2518))
(assert (not x872))
(assert (= (ite (= x2576 x2817) x1279 (x1888 x2817)) (x939 x2817)))
(assert (= (x807 x1594) (ite (= x2107 x1594) x315 (x533 x1594))))
(assert (= (x2172 x1909) (ite (= x2709 x1909) x2925 (x1370 x1909))))
(assert (= (x3018 x2710) (ite (= x3008 x2710) x1217 (x340 x2710))))
(assert (= x2286 (=> (= x1447 (= x838 0)) (and (=> (and (= x3046 (x864 (+ x2472 x766))) (= (x2397 x2597) x1578) (= x1423 (x2397 x293)) (= (x2397 x1524) x293) (= (x864 (+ x61 32)) x2472) (= (x2397 x913) x2597) (or (and (not x1054) (= x767 (uninterp_mod (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x864 (+ x766 32)) x1457)) x1054) (= x2168 (x2397 x913)) (= x608 (x2397 x2168)) (= x61 (uninterp_mod (* 32 x1423) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (< 18446744073709551615 x1423)) (not x1447) (= x1578 x608) (= x1054 (= x1423 0))) x523) (=> (and x1447 (= 0 x1904) (= x62 0) (= x1987 x766)) x2732)))))
(assert (= (x95 x97) (ite (= x97 x1661) x2246 (x1777 x97))))
(assert (= (x1317 x1780) (ite (= x1780 x2359) x2277 (x3037 x1780))))
(assert (= (ite (= x182 x1821) x3034 (x1728 x182)) (x1450 x182)))
(assert (= (ite (= x2635 x1972) x1168 (x2980 x1972)) (x1265 x1972)))
(assert (= (x33 x49) 0))
(assert (= 0 (x1494 (- x1780 x2555))))
(assert (= (ite (= x1946 192) x2714 (x2783 x1946)) (x302 x1946)))
(assert (= (ite (= x115 x420) x952 (x1769 x115)) (x651 x115)))
(assert (= (ite (= x2546 x517) x1914 (x2939 x2546)) (x2539 x2546)))
(assert (= (ite (= x1661 x1516) x2246 (x1777 x1516)) (x95 x1516)))
(assert (= (x609 x261) (ite (= x261 x2150) 96 (x918 x261))))
(assert (= (x651 x2597) (ite (= x420 x2597) x952 (x1769 x2597))))
(assert (= (x1903 x2869) (ite (= x2869 x1809) x50 (x2159 x2869))))
(assert (= (ite (= x629 x2962) x950 (x1429 x629)) (x245 x629)))
(assert (= (x1819 x2513) (ite (= x2425 x2513) x859 (x103 x2513))))
(assert (x107 x2293))
(assert (= (x1769 x3035) (ite (= x2367 x3035) x2894 (x2255 x3035))))
(assert (= (x970 x1453) (ite (= x1453 x1846) x500 (x559 x1453))))
(assert (x107 x2398))
(assert (= (ite (= x2477 x1508) x626 (x220 x2477)) (x1215 x2477)))
(assert (= (ite (and x29 (not x1970)) (x63 x1594) (x692 x1594)) (x1044 x1594)))
(assert (= (x902 x1544) (ite (= x227 x1544) x22 (x56 x1544))))
(assert (x107 x1557))
(assert (x107 x249))
(assert (x107 x1223))
(assert (= (x1952 x1776) (ite (= x1776 x780) x555 (x2526 x1776))))
(assert (= (ite (= x1661 x846) x2246 (x1777 x846)) (x95 x846)))
(assert (= (ite (= x1231 x1732) x775 (x44 x1732)) (x887 x1732)))
(assert (= (ite (= x780 x261) x555 (x2526 x261)) (x1952 x261)))
(assert (= (x915 x1776) (ite (and x2851 x1335) (x3018 x1776) (ite (and (not x3047) x1301) (x1317 x1776) (x2805 x1776)))))
(assert (= 0 (x1494 (- x483 x2555))))
(assert (= (or x464 (and x1941 (not x1834))) x1185))
(assert (= (x1777 x488) (ite (and (not x208) x2123) (x1845 x488) (x301 x488))))
(assert (x107 x469))
(assert (= (x1777 x943) (ite (and x2123 (not x208)) (x1845 x943) (x301 x943))))
(assert (x107 x945))
(assert (x107 x2828))
(assert (= (ite (and x2810 (not x763)) (x2167 x1946) (x298 x1946)) (x2397 x1946)))
(assert (= (x2720 x1267) (ite (= x1267 x972) x1063 (x1903 x1267))))
(assert (= (ite (= x1638 x913) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x913)) (x1325 x913)))
(assert (= (x1534 x1642) (ite (= x1318 x1642) x1964 (x715 x1642))))
(assert (x107 x617))
(assert (= (ite (= x2107 x1516) x315 (x533 x1516)) (x807 x1516)))
(assert (= (x1226 x1267) (ite (= x1261 x1267) x2738 (x2950 x1267))))
(assert (x107 x2886))
(assert (x107 x394))
(assert (x107 x65))
(assert (= (x918 x1267) (ite (= x1453 x1267) x555 (x2602 x1267))))
(assert (= (x1450 x1544) (ite (= x1544 x1821) x3034 (x1728 x1544))))
(assert (x107 x192))
(assert (= (ite (= x2129 x97) x2451 (x1226 x97)) (x657 x97)))
(assert (= (ite (= x1803 x2298) x3034 (x161 x1803)) (x1370 x1803)))
(assert (= (x205 x2298) (ite (and (not x2377) x724) (x798 x2298) (x346 x2298))))
(assert (= (x2167 x1483) (ite (and (not x566) x2821 x2422) (x2189 x1483) (x168 x1483))))
(assert (= (ite (and x3 (not x2376)) (x651 x1453) (ite (and x1264 (not x150)) (x1769 x1453) (ite (and (not x601) x282) (x2255 x1453) (ite (and (not x1290) x1733) (x2707 x1453) (x326 x1453))))) (x396 x1453)))
(assert (= (ite (= x1846 x370) x500 (x559 x370)) (x970 x370)))
(assert (= (ite (= x1197 x2150) 96 (x918 x1197)) (x609 x1197)))
(assert (x107 x2841))
(assert (x107 x50))
(assert (= (x1996 x1706) (ite (= x1547 x1706) x1463 (x1215 x1706))))
(assert (x107 x812))
(assert (= (x205 x3011) (ite (and x724 (not x2377)) (x798 x3011) (x346 x3011))))
(assert (= (ite (and (not x208) x2123) (x1845 x2546) (x301 x2546)) (x1777 x2546)))
(assert (= (x2950 x370) (ite (= x350 x370) x1558 (x12 x370))))
(assert (= (x1029 x2035) (ite (and x2949 (not x2019)) (x2993 x2035) (x2001 x2035))))
(assert (= (ite (= 224 x866) x770 (x302 x866)) (x2995 x866)))
(assert (x107 x1347))
(assert (x107 x1014))
(assert (x2478 x2398))
(assert (x107 x2406))
(assert (= (x1762 x2168) (ite (= x2168 x59) x1209 (x1340 x2168))))
(assert (= (x1090 x1483) (ite (= x1483 x677) x2612 (x1762 x1483))))
(assert (x107 x2651))
(assert (x107 x157))
(assert (= (x970 x629) (ite (= x629 x1846) x500 (x559 x629))))
(assert (= (x2539 x975) (ite (= x517 x975) x1914 (x2939 x975))))
(assert (x107 x289))
(assert (= (x396 x2553) (ite (and (not x2376) x3) (x651 x2553) (ite (and x1264 (not x150)) (x1769 x2553) (ite (and x282 (not x601)) (x2255 x2553) (ite (and x1733 (not x1290)) (x2707 x2553) (x326 x2553)))))))
(assert (x107 x2468))
(assert (= (x902 x2546) (ite (= x227 x2546) x22 (x56 x2546))))
(assert (= (x302 128) (x2995 128)))
(assert (x107 x929))
(assert (= x698 (=> (and (= (x3026 1 x1871) x2945) (= (not (< 1 x1718)) x2025) (= x1718 (x2059 x1871 1)) (= (= 0 x2945) x2647)) (and (=> (and (= x2466 (ite x2647 1 10)) (= 100 x1867)) x743) x2025))))
(assert (= (x595 x2546) (ite (= x159 x2546) 96 (x1952 x2546))))
(assert (x107 x1652))
(assert (= (ite (= x2168 x115) x2357 (x1427 x2168)) (x2259 x2168)))
(assert (= (x1810 x1946) (ite (= x1242 x1946) x2639 (x225 x1946))))
(assert (= (x205 x1136) (ite (and (not x2377) x724) (x798 x1136) (x346 x1136))))
(assert (= (ite (= x1544 x1318) x1964 (x715 x1544)) (x1534 x1544)))
(assert (= (ite (= x159 x2876) 96 (x1952 x2876)) (x595 x2876)))
(assert (= (x651 x1041) (ite (= x420 x1041) x952 (x1769 x1041))))
(assert (x107 x576))
(assert (= (ite (= x1615 x370) x2726 (x2268 x370)) (x2189 x370)))
(assert (= (ite (= x1489 x2817) x1829 (x1668 x2817)) (x130 x2817)))
(assert (= (ite (= x2132 x43) x1346 (x2998 x2132)) (x1181 x2132)))
(assert (= (or (and x1665 x895) x2645) x834))
(assert (= (ite (= x2597 x159) 96 (x1952 x2597)) (x595 x2597)))
(assert (= (ite (= x2425 x1387) x859 (x103 x1387)) (x1819 x1387)))
(assert (= (ite (= x364 x2127) x3034 (x2328 x364)) (x1902 x364)))
(assert (x107 x3023))
(assert (= (ite (= x2298 x824) x1666 (x902 x2298)) (x801 x2298)))
(assert (= (ite (and x2949 (not x2019)) (x2993 x1873) (x2001 x1873)) (x1029 x1873)))
(assert (= (x1265 x293) (ite (= x2635 x293) x1168 (x2980 x293))))
(assert (= (ite (= x2717 x2150) 96 (x918 x2717)) (x609 x2717)))
(assert (= (x2338 x685) (ite (and (not x2299) x2775) (x795 x685) (x1613 x685))))
(assert (= (ite (and x3 (not x2376)) (x651 x436) (ite (and x1264 (not x150)) (x1769 x436) (ite (and (not x601) x282) (x2255 x436) (ite (and (not x1290) x1733) (x2707 x436) (x326 x436))))) (x396 x436)))
(assert (= (ite (and x896 x1892 (not x2097)) (x2539 x294) (x2300 x294)) (x1845 x294)))
(assert (= (x2995 x1642) (ite (= x1642 224) x770 (x302 x1642))))
(assert (= (x2036 x2751) (ite (= x2642 x2751) x397 (x1902 x2751))))
(assert (= (ite (= x1803 192) x2714 (x2783 x1803)) (x302 x1803)))
(assert (= (x2063 x1524) (ite (= x1348 x1524) x542 (x2394 x1524))))
(assert (= (ite (= x1483 x2252) x840 (x2764 x1483)) (x1451 x1483)))
(assert (= (x1819 x433) (ite (= x433 x2425) x859 (x103 x433))))
(assert (= (ite (= x2817 x2128) x1897 (x657 x2817)) (x125 x2817)))
(assert (= (ite (= x478 x1483) x1445 (x1996 x1483)) (x1160 x1483)))
(assert (x107 x1604))
(assert (= (and x2505 x1759) x2861))
(assert (= (x1450 x2309) (ite (= x2309 x1821) x3034 (x1728 x2309))))
(assert (= (and x911 x2862) x808))
(assert (x107 x2355))
(assert (x107 x352))
(assert (x107 x2475))
(assert (= (x1539 x2869) (ite (= x1583 x2869) x1235 (x1450 x2869))))
(assert (= (x1226 x115) (ite (= x1261 x115) x2738 (x2950 x115))))
(assert (= (ite (and x2759 x682) (x2795 x1041) (x2138 x1041)) (x798 x1041)))
(assert (= (x1903 x1594) (ite (= x1594 x1809) x50 (x2159 x1594))))
(assert (= (x2255 x629) (ite (= x499 x629) x2188 (x2707 x629))))
(assert (x107 x1166))
(assert (x107 x2088))
(assert (= (x2931 x1642) (ite (= x3023 x1642) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1642))))
(assert (x107 x2854))
(assert (= (x2073 x3011) (ite (= x3011 x766) x1423 (x2397 x3011))))
(assert (= (x807 x1873) (ite (= x2107 x1873) x315 (x533 x1873))))
(assert (= (x2328 x1972) (ite (and x2926 x923) (x1952 x1972) (ite (and x1236 (not x602)) (x595 x1972) (x1546 x1972)))))
(assert (x107 x2813))
(assert (x107 x1858))
(assert (= (x887 x1136) (ite (= x1136 x1231) x775 (x44 x1136))))
(assert (= (ite (= x2168 x1453) x555 (x2602 x2168)) (x918 x2168)))
(assert (= (x918 x846) (ite (= x1453 x846) x555 (x2602 x846))))
(assert (= (ite (and x2123 (not x208)) (x1845 x2623) (x301 x2623)) (x1777 x2623)))
(assert (= (x302 x722) (ite (= 192 x722) x2714 (x2783 x722))))
(assert (x405 x99))
(assert (= (x3018 x2725) (ite (= x3008 x2725) x1217 (x340 x2725))))
(assert (= (ite (= x2635 x1706) x1168 (x2980 x1706)) (x1265 x1706)))
(assert (= (x609 x2751) (ite (= x2751 x2150) 96 (x918 x2751))))
(assert (x107 x764))
(assert (= x2579 true))
(assert (= x1302 (or (and (not x2476) x1866) x713)))
(assert (= (ite (= x424 x2546) x2357 (x2997 x2546)) (x1958 x2546)))
(assert (= (ite (= x3008 x2387) x1217 (x340 x2387)) (x3018 x2387)))
(assert (= (x1769 x1387) (ite (= x2367 x1387) x2894 (x2255 x1387))))
(assert (= (x1769 x1706) (ite (= x2367 x1706) x2894 (x2255 x1706))))
(assert (= (ite (and x1798 (not x2933)) (x125 x1197) (ite (and x77 (not x969)) (x657 x1197) (ite (and (not x1421) x2091) (x1226 x1197) (ite (and (not x2706) x697) (x2950 x1197) (x2504 x1197))))) (x63 x1197)))
(assert (= (x1845 x1972) (ite (and x1892 x896 (not x2097)) (x2539 x1972) (x2300 x1972))))
(assert (= (x2167 x2553) (ite (and x2422 x2821 (not x566)) (x2189 x2553) (x168 x2553))))
(assert (= (x2720 x1197) (ite (= x972 x1197) x1063 (x1903 x1197))))
(assert (= (x104 x2710) (ite (= x2710 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2710))))
(assert (= (x657 x867) (ite (= x867 x2129) x2451 (x1226 x867))))
(assert (= (x1226 x1732) (ite (= x1732 x1261) x2738 (x2950 x1732))))
(assert (x107 x1022))
(assert (= (ite (and x2949 (not x2019)) (x2993 x2576) (x2001 x2576)) (x1029 x2576)))
(assert (= (x651 x2298) (ite (= x420 x2298) x952 (x1769 x2298))))
(assert (x1932 x70 x1716))
(assert (x107 x1331))
(assert (= (x2159 x97) (ite (= x246 x97) x1037 (x807 x97))))
(assert (= (ite (= x1197 x1809) x50 (x2159 x1197)) (x1903 x1197)))
(assert (x107 x1848))
(assert (= (ite (= x1807 x2546) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2546)) (x2707 x2546)))
(assert (= (ite (= x1615 x1706) x2726 (x2268 x1706)) (x2189 x1706)))
(assert (= (ite (and x2926 x923) (x1952 x261) (ite (and (not x602) x1236) (x595 x261) (x1546 x261))) (x2328 x261)))
(assert (= (ite (= x2298 x2553) x3034 (x161 x2553)) (x1370 x2553)))
(assert (x107 x167))
(assert (x107 x313))
(assert (= (x1044 x1946) (ite (and x29 (not x1970)) (x63 x1946) (x692 x1946))))
(assert (x107 x1587))
(assert (x107 x1040))
(assert (= (x609 x267) (ite (= x2150 x267) 96 (x918 x267))))
(assert (= (x2707 x2513) (ite (= x2513 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2513))))
(assert (= (x2159 x267) (ite (= x246 x267) x1037 (x807 x267))))
(assert (= (x2993 x2298) (ite (and x1145 x1697) (x939 x2298) (x1686 x2298))))
(assert (= (x2063 x1453) (ite (= x1348 x1453) x542 (x2394 x1453))))
(assert (= (x1044 x267) (ite (and x29 (not x1970)) (x63 x267) (x692 x267))))
(assert (= (ite (= x2150 x1453) 96 (x918 x1453)) (x609 x1453)))
(assert (= (ite (= x2546 x2252) x840 (x2764 x2546)) (x1451 x2546)))
(assert (= (x1958 x424) x2357))
(assert (= (x1762 x2546) (ite (= x59 x2546) x1209 (x1340 x2546))))
(assert (= (ite (and x1866 (not x2476)) (x2232 x2597) (x1379 x2597)) (x2018 x2597)))
(assert (= (or x316 (and (not x716) x2405)) x663))
(assert (x107 x35))
(assert (= (ite (= 128 x2817) x1725 (x33 x2817)) (x1314 x2817)))
(assert (= (ite (= x1946 x59) x1209 (x1340 x1946)) (x1762 x1946)))
(assert (= (x918 x2597) (ite (= x1453 x2597) x555 (x2602 x2597))))
(assert (x107 x1194))
(assert (= (x1325 x1594) (ite (= x1594 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1594))))
(assert (= (x2993 x2847) (ite (and x1145 x1697) (x939 x2847) (x1686 x2847))))
(assert (= (x1819 x1483) (ite (= x2425 x1483) x859 (x103 x1483))))
(assert (= (x1952 x1594) (ite (= x780 x1594) x555 (x2526 x1594))))
(assert (= (x2539 x293) (ite (= x517 x293) x1914 (x2939 x293))))
(assert (= x2257 (and x1127 x2913)))
(assert (= (ite (= x2127 x1453) x3034 (x2328 x1453)) (x1902 x1453)))
(assert (= (ite (= x2128 x267) x1897 (x657 x267)) (x125 x267)))
(assert (= (ite (= x350 x1483) x1558 (x12 x1483)) (x2950 x1483)))
(assert (= (x1777 x261) (ite (and (not x208) x2123) (x1845 x261) (x301 x261))))
(assert (= (ite (= x2869 x1242) x2639 (x225 x2869)) (x1810 x2869)))
(assert (= (x2539 x1972) (ite (= x1972 x517) x1914 (x2939 x1972))))
(assert (= (x1952 x822) (ite (= x780 x822) x555 (x2526 x822))))
(assert (= (x2172 x1244) (ite (= x2709 x1244) x2925 (x1370 x1244))))
(assert (x107 x411))
(assert (= (ite (= x115 x1946) x2357 (x1427 x1946)) (x2259 x1946)))
(assert (= (ite (and x2123 (not x208)) (x1845 x436) (x301 x436)) (x1777 x436)))
(assert (= (x1317 x1732) (ite (= x1732 x2359) x2277 (x3037 x1732))))
(assert (= (x1777 x2309) (ite (and x2123 (not x208)) (x1845 x2309) (x301 x2309))))
(assert (x107 x1142))
(assert (= (x1819 x685) (ite (= x685 x2425) x859 (x103 x685))))
(assert (= (x805 x748) (ite (= x501 x748) x3030 (x1531 x748))))
(assert (= (ite (= x261 x2642) x397 (x1902 x261)) (x2036 x261)))
(assert (= (ite (= x780 x3011) x555 (x2526 x3011)) (x1952 x3011)))
(assert (= (x2783 x1136) (ite (= x1136 160) x190 (x1314 x1136))))
(assert (x1932 x2413 x1218))
(assert (= (x1325 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816))
(assert (= (x1902 x293) (ite (= x2127 x293) x3034 (x2328 x293))))
(assert (= (x2995 x433) (ite (= 224 x433) x770 (x302 x433))))
(assert (= (ite (= x1821 x2817) x3034 (x1728 x2817)) (x1450 x2817)))
(assert (= (ite (and x1979 (not x94)) (x396 x1483) (x87 x1483)) (x1782 x1483)))
(assert (= (ite (= x2546 x501) x3030 (x1531 x2546)) (x805 x2546)))
(assert (= (ite (= x1083 x2876) x367 (x2880 x2876)) (x2795 x2876)))
(assert (x107 x2038))
(assert (= (ite (= x655 x59) x1209 (x1340 x655)) (x1762 x655)))
(assert (= (x1782 x846) (ite (and (not x94) x1979) (x396 x846) (x87 x846))))
(assert (= (x1762 x1516) (ite (= x1516 x59) x1209 (x1340 x1516))))
(assert (= (ite (and (not x2377) x724) (x798 x49) (x346 x49)) (x205 x49)))
(assert (= (x2995 x2594) (ite (= x2594 224) x770 (x302 x2594))))
(assert (= (ite (= x67 x517) x1914 (x2939 x67)) (x2539 x67)))
(assert (= (x595 128) (ite (= x159 128) 96 (x1952 128))))
(assert (= (x2931 x2217) (ite (= x3023 x2217) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2217))))
(assert (= (ite (= x1318 x182) x1964 (x715 x182)) (x1534 x182)))
(assert (= (ite (= x433 x796) x2187 (x801 x433)) (x225 x433)))
(assert (= (ite (= x2725 x159) 96 (x1952 x2725)) (x595 x2725)))
(assert (= (x807 x1453) (ite (= x1453 x2107) x315 (x533 x1453))))
(assert (= 0 (x1494 (- x748 x2555))))
(assert (= (x805 x424) (ite (= x501 x424) x3030 (x1531 x424))))
(assert (= (ite (= x975 x2298) x3034 (x161 x975)) (x1370 x975)))
(assert (x107 x1910))
(assert (= (ite (= x1231 x2298) x775 (x44 x2298)) (x887 x2298)))
(assert (= (x1314 x1972) (ite (= 128 x1972) x1725 (x33 x1972))))
(assert (= (ite (and x1979 (not x94)) (x396 x67) (x87 x67)) (x1782 x67)))
(assert (x107 x315))
(assert (= (ite (= x2128 x182) x1897 (x657 x182)) (x125 x182)))
(assert (= (x1782 x1642) (ite (and x1979 (not x94)) (x396 x1642) (x87 x1642))))
(assert (x107 x1442))
(assert (x107 x1884))
(assert (= (ite (= x483 x1809) x50 (x2159 x483)) (x1903 x483)))
(assert (= (x95 x1661) x2246))
(assert (x107 x270))
(assert (x107 x2612))
(assert (= (ite (and (not x2376) x3) (x651 x97) (ite (and (not x150) x1264) (x1769 x97) (ite (and x282 (not x601)) (x2255 x97) (ite (and x1733 (not x1290)) (x2707 x97) (x326 x97))))) (x396 x97)))
(assert (= (ite (= x655 x2150) 96 (x918 x655)) (x609 x655)))
(assert (= (x95 x1706) (ite (= x1706 x1661) x2246 (x1777 x1706))))
(assert (= (ite (and x1145 x1697) (x939 x433) (x1686 x433)) (x2993 x433)))
(assert (= (ite (= x824 x1594) x1666 (x902 x1594)) (x801 x1594)))
(assert (= (x1090 x846) (ite (= x846 x677) x2612 (x1762 x846))))
(assert (x107 x737))
(assert (x107 x1889))
(assert (= (x2426 x780) (ite (and x29 x2105) (x593 x780) (x1044 x780))))
(assert (= (x225 x655) (ite (= x796 x655) x2187 (x801 x655))))
(assert (= (ite (= x467 x1041) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x1041)) (x104 x1041)))
(assert (= (x1265 x86) (ite (= x2635 x86) x1168 (x2980 x86))))
(assert (= (ite (and x29 x2105) (x593 x1732) (x1044 x1732)) (x2426 x1732)))
(assert (= (ite (and x1145 x1697) (x939 x2552) (x1686 x2552)) (x2993 x2552)))
(assert (x107 x1698))
(assert (= (ite (= 192 x1197) x2714 (x2783 x1197)) (x302 x1197)))
(assert (= (x2764 x49) (ite (= x3032 x49) x573 (x890 x49))))
(assert (= (x1317 x1706) (ite (= x2359 x1706) x2277 (x3037 x1706))))
(assert (= x3034 (x1370 x2298)))
(assert (x107 x932))
(assert (= (x807 x655) (ite (= x655 x2107) x315 (x533 x655))))
(assert (x107 x297))
(assert (= (ite (= x1261 x3011) x2738 (x2950 x3011)) (x1226 x3011)))
(assert (x107 x195))
(assert (= (ite (and x2926 x923) (x1952 x294) (ite (and x1236 (not x602)) (x595 x294) (x1546 x294))) (x2328 x294)))
(assert (x107 x2688))
(assert (x107 x185))
(assert (= (x302 x961) (ite (= x961 192) x2714 (x2783 x961))))
(assert (= (ite (and (not x208) x2123) (x1845 x1387) (x301 x1387)) (x1777 x1387)))
(assert (= (ite (= x655 x159) 96 (x1952 x655)) (x595 x655)))
(assert (= (x2036 x1873) (ite (= x1873 x2642) x397 (x1902 x1873))))
(assert (= (ite (= x655 x2129) x2451 (x1226 x655)) (x657 x655)))
(assert (= (x887 x2168) (ite (= x1231 x2168) x775 (x44 x2168))))
(assert (x107 x1821))
(assert (= (x2720 x2513) (ite (= x2513 x972) x1063 (x1903 x2513))))
(assert (= (ite (and x3 (not x2376)) (x651 x2710) (ite (and x1264 (not x150)) (x1769 x2710) (ite (and x282 (not x601)) (x2255 x2710) (ite (and (not x1290) x1733) (x2707 x2710) (x326 x2710))))) (x396 x2710)))
(assert (= 0 (x33 x182)))
(assert (= (x902 x115) (ite (= x115 x227) x22 (x56 x115))))
(assert (= (ite (and (not x2299) x2775) (x795 x436) (x1613 x436)) (x2338 x436)))
(assert (x107 x627))
(assert (= (x1903 x2298) (ite (= x2298 x1809) x50 (x2159 x2298))))
(assert (= (x1762 x49) (ite (= x49 x59) x1209 (x1340 x49))))
(assert (= (ite (and x3 (not x2376)) (x651 x364) (ite (and (not x150) x1264) (x1769 x364) (ite (and x282 (not x601)) (x2255 x364) (ite (and x1733 (not x1290)) (x2707 x364) (x326 x364))))) (x396 x364)))
(assert (x107 x2812))
(assert (= (ite (= x629 x1489) x1829 (x1668 x629)) (x130 x629)))
(assert (= (=> (and (= x447 x1436) (= x117 x2201) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1239 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x2573)) (= (- (/ x123 x2274) (uninterp_frac x123 x2274)) x117) (= (* x1239 1000000000000000000) x123) (= x2227 (* 1000000000000000000 x2573)) (= x1424 x424) (= (- (/ x2227 x2274) (uninterp_frac x2227 x2274)) x1436)) x1295) x369))
(assert (= (ite (and x2759 x682) (x2795 x2552) (x2138 x2552)) (x798 x2552)))
(assert (= (x2950 x1594) (ite (= x350 x1594) x1558 (x12 x1594))))
(assert (= (ite (= x517 x2474) x1914 (x2939 x2474)) (x2539 x2474)))
(assert (= (ite (and (not x2476) x1866) (x2232 x455) (x1379 x455)) (x2018 x455)))
(assert (= (x1845 x2106) (ite (and x896 x1892 (not x2097)) (x2539 x2106) (x2300 x2106))))
(assert (= (ite (= 128 x1136) x1725 (x33 x1136)) (x1314 x1136)))
(assert (= (ite (= x2751 x2107) x315 (x533 x2751)) (x807 x2751)))
(assert (= (x245 x2597) (ite (= x2597 x2962) x950 (x1429 x2597))))
(assert (= (x95 x1909) (ite (= x1661 x1909) x2246 (x1777 x1909))))
(assert (= (ite (= x2129 x2168) x2451 (x1226 x2168)) (x657 x2168)))
(assert (= (ite (= x1809 x67) x50 (x2159 x67)) (x1903 x67)))
(assert (= (x2328 x1136) (ite (and x923 x2926) (x1952 x1136) (ite (and (not x602) x1236) (x595 x1136) (x1546 x1136)))))
(assert (= (x1090 x1594) (ite (= x1594 x677) x2612 (x1762 x1594))))
(assert (x1932 x2090 x393))
(assert (= (x2795 x182) (ite (= x182 x1083) x367 (x2880 x182))))
(assert (= x148 (or (and x1892 x2097) x1752 (and x135 x2374) (and x3004 x2850))))
(assert (= (x2720 x483) (ite (= x972 x483) x1063 (x1903 x483))))
(assert (= (ite (= x483 x2107) x315 (x533 x483)) (x807 x483)))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x433) (x2300 x433)) (x1845 x433)))
(assert (= (x2328 x2048) (ite (and x923 x2926) (x1952 x2048) (ite (and x1236 (not x602)) (x595 x2048) (x1546 x2048)))))
(assert (= (x1265 x722) (ite (= x722 x2635) x1168 (x2980 x722))))
(assert (x107 x2258))
(assert (= (x2255 x934) (ite (= x499 x934) x2188 (x2707 x934))))
(assert (= (ite (= 192 x655) x2714 (x2783 x655)) (x302 x655)))
(assert (= (ite (and (not x2019) x2949) (x2993 x455) (x2001 x455)) (x1029 x455)))
(assert (= (x1782 x2597) (ite (and x1979 (not x94)) (x396 x2597) (x87 x2597))))
(assert (= (ite (= x2869 x517) x1914 (x2939 x2869)) (x2539 x2869)))
(assert (= (x2159 x1594) (ite (= x246 x1594) x1037 (x807 x1594))))
(assert (= (ite (and x682 x2759) (x2795 x1267) (x2138 x1267)) (x798 x1267)))
(assert (= (x1317 x1516) (ite (= x2359 x1516) x2277 (x3037 x1516))))
(assert (= (ite (= x159 x182) 96 (x1952 x182)) (x595 x182)))
(assert (x107 x2483))
(assert (= (x1340 x629) (ite (= x2454 x629) x823 (x245 x629))))
(assert (x107 x2455))
(assert (= (ite (= x1083 x2552) x367 (x2880 x2552)) (x2795 x2552)))
(assert (= (ite (= 192 x975) x2714 (x2783 x975)) (x302 x975)))
(assert (= (ite (= x846 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x846)) (x2931 x846)))
(assert (= (and x1896 x2846) x318))
(assert (= (ite (= x780 x67) x555 (x2526 x67)) (x1952 x67)))
(assert (= (=> (and (= (x864 (+ 128 x980)) x2085) (= x500 (x559 x2298)) (= x1846 (x864 (+ 96 x980))) (= (x864 (+ x2298 32)) x433) (= x2154 96) (= (> x500 0) x1656)) (and (=> x1656 x1961) (=> (and (not x1656) (= 0 x2921) (= x2085 x1489) (= x2310 x433)) x1753))) x1309))
(assert (= (x918 x3011) (ite (= x3011 x1453) x555 (x2602 x3011))))
(assert (x107 x153))
(assert (= (x657 x2847) (ite (= x2129 x2847) x2451 (x1226 x2847))))
(assert (= (x609 x2106) (ite (= x2150 x2106) 96 (x918 x2106))))
(assert (= (x902 x2847) (ite (= x2847 x227) x22 (x56 x2847))))
(assert (= (x205 x780) (ite (and (not x2377) x724) (x798 x780) (x346 x780))))
(assert (x107 x1276))
(assert (x107 x1055))
(assert (= (x1769 x2847) (ite (= x2367 x2847) x2894 (x2255 x2847))))
(assert (= (x2338 x2474) (ite (and x2775 (not x2299)) (x795 x2474) (x1613 x2474))))
(assert (= (ite (and (not x763) x2810) (x2167 x455) (x298 x455)) (x2397 x455)))
(assert (x107 x1201))
(assert (= (x1370 x1387) (ite (= x1387 x2298) x3034 (x161 x1387))))
(assert (= (x798 x2546) (ite (and x2759 x682) (x2795 x2546) (x2138 x2546))))
(assert (= (x2036 x2725) (ite (= x2725 x2642) x397 (x1902 x2725))))
(assert (x107 x2573))
(assert (= (x1810 x97) (ite (= x1242 x97) x2639 (x225 x97))))
(assert (= (x396 x86) (ite (and x3 (not x2376)) (x651 x86) (ite (and x1264 (not x150)) (x1769 x86) (ite (and (not x601) x282) (x2255 x86) (ite (and x1733 (not x1290)) (x2707 x86) (x326 x86)))))))
(assert (= (ite (= x2876 x1453) x555 (x2602 x2876)) (x918 x2876)))
(assert (= (x801 x2477) (ite (= x2477 x824) x1666 (x902 x2477))))
(assert (x107 x529))
(assert (x107 x545))
(assert (= (x1845 x1068) (ite (and x896 x1892 (not x2097)) (x2539 x1068) (x2300 x1068))))
(assert (x107 x5))
(assert (x107 x273))
(assert (x107 x500))
(assert (= x2029 (or (and (not x1288) x1138) x537)))
(assert (= (ite (= x1780 x972) x1063 (x1903 x1780)) (x2720 x1780)))
(assert (= (x2073 x483) (ite (= x766 x483) x1423 (x2397 x483))))
(assert (x107 x605))
(assert (x107 x2701))
(assert (= (ite (= x2309 x1083) x367 (x2880 x2309)) (x2795 x2309)))
(assert (= (x3018 x2298) (ite (= x2298 x3008) x1217 (x340 x2298))))
(assert (= (ite (= x294 x1242) x2639 (x225 x294)) (x1810 x294)))
(assert (= (x798 x488) (ite (and x2759 x682) (x2795 x488) (x2138 x488))))
(assert (= (ite (= x424 x2128) x1897 (x657 x424)) (x125 x424)))
(assert (= (ite (= x424 x1873) x2700 (x2997 x1873)) (x2204 x1873)))
(assert (= (x2931 x2710) (ite (= x3023 x2710) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2710))))
(assert (x107 x959))
(assert (= (x2539 x1780) (ite (= x517 x1780) x1914 (x2939 x1780))))
(assert (= (ite (= x1261 x2168) x2738 (x2950 x2168)) (x1226 x2168)))
(assert (= (x2539 x2513) (ite (= x2513 x517) x1914 (x2939 x2513))))
(assert (x107 x1323))
(assert (x107 x1272))
(assert (= (ite (= x780 x2552) x555 (x2526 x2552)) (x1952 x2552)))
(assert (= (ite (and x2851 x1335) (x3018 x2623) (ite (and x1301 (not x3047)) (x1317 x2623) (x2805 x2623))) (x915 x2623)))
(assert (= (ite (= x722 x159) 96 (x1952 x722)) (x595 x722)))
(assert (= (x1845 x1642) (ite (and (not x2097) x1892 x896) (x2539 x1642) (x2300 x1642))))
(assert (x107 x2474))
(assert (= (x423 x182) (ite (and x2655 x817) (x1534 x182) (ite (and (not x1834) x1941) (x887 x182) (x151 x182)))))
(assert (= (ite (= x2367 x846) x2894 (x2255 x846)) (x1769 x846)))
(assert (= (ite (= x267 x1583) x1235 (x1450 x267)) (x1539 x267)))
(assert (= (x1226 x1873) (ite (= x1873 x1261) x2738 (x2950 x1873))))
(assert (= (ite (= x1594 x159) 96 (x1952 x1594)) (x595 x1594)))
(assert (x107 x2991))
(assert (= (ite (= 128 x1882) x1725 (x33 x1882)) (x1314 x1882)))
(assert (= (ite (and (not x2377) x724) (x798 x1780) (x346 x1780)) (x205 x1780)))
(assert (= (x1044 x2309) (ite (and (not x1970) x29) (x63 x2309) (x692 x2309))))
(assert (x107 x1258))
(assert (= (x2167 x2477) (ite (and x2422 x2821 (not x566)) (x2189 x2477) (x168 x2477))))
(assert (= (ite (= x2751 x501) x3030 (x1531 x2751)) (x805 x2751)))
(assert (= (x2338 x1484) (ite (and x2775 (not x2299)) (x795 x1484) (x1613 x1484))))
(assert (= (ite (= 128 x1594) x1725 (x33 x1594)) (x1314 x1594)))
(assert (= (x1769 x1516) (ite (= x1516 x2367) x2894 (x2255 x1516))))
(assert (= (x2172 x975) (ite (= x2709 x975) x2925 (x1370 x975))))
(assert (= (ite (= x2278 x2561) x2739 (x552 x2278)) (x2136 x2278)))
(assert (= (x2255 x424) (ite (= x424 x499) x2188 (x2707 x424))))
(assert (= (ite (= x2635 x1068) x1168 (x2980 x1068)) (x1265 x1068)))
(assert (= (x2764 x2546) (ite (= x3032 x2546) x573 (x890 x2546))))
(assert (x107 x998))
(assert (= (x2172 x789) (ite (= x2709 x789) x2925 (x1370 x789))))
(assert (= (x2018 x1267) (ite (and x1866 (not x2476)) (x2232 x1267) (x1379 x1267))))
(assert (= (ite (= x2128 x67) x1897 (x657 x67)) (x125 x67)))
(assert (= (x651 x2553) (ite (= x420 x2553) x952 (x1769 x2553))))
(assert (= (ite (= x2546 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2546)) (x2931 x2546)))
(assert (x107 x2833))
(assert (= (ite (= x2129 x1946) x2451 (x1226 x1946)) (x657 x1946)))
(assert (= (ite (= x1821 x267) x3034 (x1728 x267)) (x1450 x267)))
(assert (= (x2172 x86) (ite (= x2709 x86) x2925 (x1370 x86))))
(assert (x107 x1441))
(assert (= (x245 x966) (ite (= x966 x2962) x950 (x1429 x966))))
(assert (= (ite (= x1242 x2406) x2639 (x225 x2406)) (x1810 x2406)))
(assert (= (x1769 x1732) (ite (= x2367 x1732) x2894 (x2255 x1732))))
(assert (x107 x466))
(assert (x107 x1360))
(assert (= (x2997 x455) (ite x1752 (ite (and (not x2913) x1127) (x205 x455) (x1059 x455)) (ite (and x2374 x135) (x205 x455) (ite (and x3004 x2850) (x1777 x455) (x2338 x455))))))
(assert (= (x2036 x1803) (ite (= x1803 x2642) x397 (x1902 x1803))))
(assert (x107 x2866))
(assert (x107 x89))
(assert (x107 x2332))
(assert (x107 x145))
(assert (x107 x673))
(assert (= (x225 x1780) (ite (= x1780 x796) x2187 (x801 x1780))))
(assert (x107 x1689))
(assert (= (x1090 x2594) (ite (= x677 x2594) x2612 (x1762 x2594))))
(assert (x1932 x99 x3003))
(assert (= (x2993 x1873) (ite (and x1697 x1145) (x939 x1873) (x1686 x1873))))
(assert (= (ite (= 128 x1544) x1725 (x33 x1544)) (x1314 x1544)))
(assert (x107 x2584))
(assert (= x2044 (=> (and (= x754 (not (> x1163 1))) (= (x380 x2298) x1163)) (and x754 x1307))))
(assert (x107 x1674))
(assert (x107 x2503))
(assert (x107 x1400))
(assert (= (ite (= x1615 x1267) x2726 (x2268 x1267)) (x2189 x1267)))
(assert (= x1685 (x2600 (x1592 x1685))))
(assert (x107 x1380))
(assert (= (x2931 x2552) (ite (= x3023 x2552) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2552))))
(assert (= (x1044 x455) (ite (and (not x1970) x29) (x63 x455) (x692 x455))))
(assert (= (ite (= x127 x2248) x1229 (x511 x2248)) (x1222 x2248)))
(assert (= (x2259 x483) (ite (= x115 x483) x2357 (x1427 x483))))
(assert (x107 x2358))
(assert (= (x1903 x2477) (ite (= x2477 x1809) x50 (x2159 x2477))))
(assert (x107 x2278))
(assert (= (x396 x370) (ite (and (not x2376) x3) (x651 x370) (ite (and x1264 (not x150)) (x1769 x370) (ite (and x282 (not x601)) (x2255 x370) (ite (and (not x1290) x1733) (x2707 x370) (x326 x370)))))))
(assert (x107 x2219))
(assert (x107 x775))
(assert (= (x2338 x294) (ite (and (not x2299) x2775) (x795 x294) (x1613 x294))))
(assert (= (x1762 x370) (ite (= x370 x59) x1209 (x1340 x370))))
(assert (x107 x106))
(assert (x107 x1830))
(assert (x107 x180))
(assert (= (x2259 x364) (ite (= x115 x364) x2357 (x1427 x364))))
(assert (= (ite (= x780 x677) x2612 (x1762 x780)) (x1090 x780)))
(assert (= (ite (= x2127 x2387) x3034 (x2328 x2387)) (x1902 x2387)))
(assert (x107 x1234))
(assert (= (x302 x943) (ite (= x943 192) x2714 (x2783 x943))))
(assert (= (ite (= x433 x2129) x2451 (x1226 x433)) (x657 x433)))
(assert (= (x95 x966) (ite (= x1661 x966) x2246 (x1777 x966))))
(assert (x405 x1791))
(assert (= (=> (= x617 x214) x2696) x907))
(assert (= (ite (= x2425 x2847) x859 (x103 x2847)) (x1819 x2847)))
(assert (= (x225 x115) (ite (= x115 x796) x2187 (x801 x115))))
(assert (x107 x372))
(assert (= (x3018 x370) (ite (= x3008 x370) x1217 (x340 x370))))
(assert (= (x2338 x1516) (ite (and x2775 (not x2299)) (x795 x1516) (x1613 x1516))))
(assert (= (x1845 x2751) (ite (and x1892 (not x2097) x896) (x2539 x2751) (x2300 x2751))))
(assert (= (ite (= x1197 x2298) x3034 (x161 x1197)) (x1370 x1197)))
(assert (= (ite (and x682 x2759) (x2795 x1689) (x2138 x1689)) (x798 x1689)))
(assert (= (ite (and x682 x2759) (x2795 x1197) (x2138 x1197)) (x798 x1197)))
(assert (x107 x2611))
(assert (= (ite (= x1197 x2642) x397 (x1902 x1197)) (x2036 x1197)))
(assert (= (x887 x2869) (ite (= x2869 x1231) x775 (x44 x2869))))
(assert (x107 x425))
(assert (x107 x46))
(assert (x107 x594))
(assert (x107 x170))
(assert (= (ite (and x682 x2759) (x2795 x975) (x2138 x975)) (x798 x975)))
(assert (= true x1159))
(assert (= (x2159 x370) (ite (= x370 x246) x1037 (x807 x370))))
(assert (= (x2397 x1642) (ite (and x2810 (not x763)) (x2167 x1642) (x298 x1642))))
(assert (= (x3018 x3011) (ite (= x3011 x3008) x1217 (x340 x3011))))
(assert (= x2550 (=> (and (= x691 (x864 (+ x2035 192))) (= (x1379 x841) x1299) (= (x1433 x1348) x243) (= x2336 (not (< 1 x1299))) (= (x1379 x1524) x841) (< 0 x243)) (and x2336 (=> (= x1638 x2914) x1122)))))
(assert (x107 x1163))
(assert (= (ite (= x2553 x2425) x859 (x103 x2553)) (x1819 x2553)))
(assert (= (x1903 x629) (ite (= x1809 x629) x50 (x2159 x629))))
(assert (= (x1370 x294) (ite (= x2298 x294) x3034 (x161 x294))))
(assert (= (ite (= 160 x2709) x2925 (x1370 160)) (x2172 160)))
(assert (x107 x1909))
(assert (= (x245 x2710) (ite (= x2710 x2962) x950 (x1429 x2710))))
(assert (x107 x1114))
(assert (x107 x1796))
(assert (= (ite (and x2926 x923) (x1952 x2309) (ite (and (not x602) x1236) (x595 x2309) (x1546 x2309))) (x2328 x2309)))
(assert (= (x205 x2552) (ite (and (not x2377) x724) (x798 x2552) (x346 x2552))))
(assert (x107 x461))
(assert (= (x2997 x2552) (ite x1752 (ite (and (not x2913) x1127) (x205 x2552) (x1059 x2552)) (ite (and x2374 x135) (x205 x2552) (ite (and x3004 x2850) (x1777 x2552) (x2338 x2552))))))
(assert (x107 x59))
(assert (= (ite (= x2962 x780) x950 (x1429 x780)) (x245 x780)))
(assert (x107 x2847))
(assert (= (x302 x294) (ite (= 192 x294) x2714 (x2783 x294))))
(assert (x107 x3029))
(assert (= (ite (= x86 x227) x22 (x56 x86)) (x902 x86)))
(assert (= (x2950 x182) (ite (= x182 x350) x1558 (x12 x182))))
(assert (x107 x331))
(assert (= (ite (and (not x2377) x724) (x798 x975) (x346 x975)) (x205 x975)))
(assert (= (x2172 x97) (ite (= x97 x2709) x2925 (x1370 x97))))
(assert (= (x801 x1453) (ite (= x824 x1453) x1666 (x902 x1453))))
(assert (= (x2997 x2847) (ite x1752 (ite (and x1127 (not x2913)) (x205 x2847) (x1059 x2847)) (ite (and x2374 x135) (x205 x2847) (ite (and x3004 x2850) (x1777 x2847) (x2338 x2847))))))
(assert (= (ite (= x67 x1453) x555 (x2602 x67)) (x918 x67)))
(assert (= (ite (and x2759 x682) (x2795 x433) (x2138 x433)) (x798 x433)))
(assert (x107 x1693))
(assert (= (ite (= x943 x2298) x3034 (x161 x943)) (x1370 x943)))
(assert (x107 x797))
(assert (= (ite (and x2123 (not x208)) (x1845 x780) (x301 x780)) (x1777 x780)))
(assert (= (ite (= x1348 x1594) x542 (x2394 x1594)) (x2063 x1594)))
(assert (= (ite (= x972 x2552) x1063 (x1903 x2552)) (x2720 x2552)))
(assert (x107 x1183))
(assert (= (x1328 x1267) (ite (= x1745 x1267) x585 (x2580 x1267))))
(assert (= (ite (= x874 x2962) x950 (x1429 x874)) (x245 x874)))
(assert (= (x95 x2513) (ite (= x1661 x2513) x2246 (x1777 x2513))))
(assert (= (x902 x2725) (ite (= x2725 x227) x22 (x56 x2725))))
(assert (= (ite (= x115 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x115)) (x2707 x115)))
(assert (= (ite (and x2123 (not x208)) (x1845 x1946) (x301 x1946)) (x1777 x1946)))
(assert (x107 x2742))
(assert (= (x915 x2876) (ite (and x1335 x2851) (x3018 x2876) (ite (and (not x3047) x1301) (x1317 x2876) (x2805 x2876)))))
(assert (= (ite (and (not x2019) x2949) (x2993 x2552) (x2001 x2552)) (x1029 x2552)))
(assert (= (x2931 x436) (ite (= x3023 x436) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x436))))
(assert (= (ite (= 192 x488) x2714 (x2783 x488)) (x302 x488)))
(assert (= (ite (= x261 x2425) x859 (x103 x261)) (x1819 x261)))
(assert (= (x33 x2725) 0))
(assert (= (ite (and x923 x2926) (x1952 x914) (ite (and x1236 (not x602)) (x595 x914) (x1546 x914))) (x2328 x914)))
(assert (= (x283 x2817) (ite (= x2061 x2817) x515 (x224 x2817))))
(assert (= (x887 x1946) (ite (= x1946 x1231) x775 (x44 x1946))))
(assert (= (x2018 x2477) (ite (and (not x2476) x1866) (x2232 x2477) (x1379 x2477))))
(assert (= (x511 x2966) (ite (= x812 x2966) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x735 x2966))))
(assert (x107 x1386))
(assert (= (ite (= x2298 x972) x1063 (x1903 x2298)) (x2720 x2298)))
(assert (= (ite (and x2105 x29) (x593 x455) (x1044 x455)) (x2426 x455)))
(assert (= (ite (= x3011 x824) x1666 (x902 x3011)) (x801 x3011)))
(assert (= (x2159 x424) (ite (= x246 x424) x1037 (x807 x424))))
(assert (= (ite (= x2387 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x2387)) (x2931 x2387)))
(assert (x107 x359))
(assert (x107 x399))
(assert (x107 x1923))
(assert (= (ite (= x1197 x1348) x542 (x2394 x1197)) (x2063 x1197)))
(assert (= (x125 x2477) (ite (= x2477 x2128) x1897 (x657 x2477))))
(assert (= (ite (= x1484 x2635) x1168 (x2980 x1484)) (x1265 x1484)))
(assert (x107 x981))
(assert (x107 x1315))
(assert (= (x2328 x2552) (ite (and x2926 x923) (x1952 x2552) (ite (and (not x602) x1236) (x595 x2552) (x1546 x2552)))))
(assert (= (ite (= x2876 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2876)) (x104 x2876)))
(assert (= (ite (= x2309 x501) x3030 (x1531 x2309)) (x805 x2309)))
(assert (= (x1181 x1386) (ite (= x1386 x43) x1346 (x2998 x1386))))
(assert (= (ite (= x2725 x424) x2357 (x2997 x2725)) (x1958 x2725)))
(assert (x405 x186))
(assert (= (ite (= x420 x294) x952 (x1769 x294)) (x651 x294)))
(assert (= (ite (and (not x2097) x896 x1892) (x2539 x1909) (x2300 x1909)) (x1845 x1909)))
(assert (x107 x655))
(assert (= (x1996 x1483) (ite (= x1547 x1483) x1463 (x1215 x1483))))
(assert (= (x95 x2594) (ite (= x1661 x2594) x2246 (x1777 x2594))))
(assert (= (x2995 x1972) (ite (= 224 x1972) x770 (x302 x1972))))
(assert (x107 x699))
(assert (= (ite (= x49 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x49)) (x104 x49)))
(assert (= (ite (= x2642 x433) x397 (x1902 x433)) (x2036 x433)))
(assert (= (ite (and (not x2476) x1866) (x2232 x2553) (x1379 x2553)) (x2018 x2553)))
(assert (= (ite (and x1335 x2851) (x3018 x1972) (ite (and (not x3047) x1301) (x1317 x1972) (x2805 x1972))) (x915 x1972)))
(assert (= (x245 x1267) (ite (= x1267 x2962) x950 (x1429 x1267))))
(assert (= (x33 x1068) 0))
(assert (= (ite (and x2775 (not x2299)) (x795 x1780) (x1613 x1780)) (x2338 x1780)))
(assert (= (ite (= x1706 x2128) x1897 (x657 x1706)) (x125 x1706)))
(assert (= 2743638299 (x2600 (x348 2743638299))))
(assert (= (ite (and x2105 x29) (x593 x2513) (x1044 x2513)) (x2426 x2513)))
(assert (= (x1370 x436) (ite (= x436 x2298) x3034 (x161 x436))))
(assert (= (ite (= x433 x2107) x315 (x533 x433)) (x807 x433)))
(assert (= (ite (= x159 x2217) 96 (x1952 x2217)) (x595 x2217)))
(assert (= (x1226 x86) (ite (= x1261 x86) x2738 (x2950 x86))))
(assert (= (x245 x436) (ite (= x436 x2962) x950 (x1429 x436))))
(assert (= (ite (= x1267 x159) 96 (x1952 x1267)) (x595 x1267)))
(assert (= (ite (= x2751 x59) x1209 (x1340 x2751)) (x1762 x2751)))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x1136) (x1059 x1136)) (ite (and x2374 x135) (x205 x1136) (ite (and x2850 x3004) (x1777 x1136) (x2338 x1136)))) (x2997 x1136)))
(assert (= x660 (and (not x837) x2226)))
(assert (= (x2159 x2751) (ite (= x246 x2751) x1037 (x807 x2751))))
(assert (x107 x2956))
(assert (= (ite (= x1197 x1242) x2639 (x225 x1197)) (x1810 x1197)))
(assert (= (ite (and x1892 x896 (not x2097)) (x2539 x943) (x2300 x943)) (x1845 x943)))
(assert (x107 x818))
(assert (= (x609 x1642) (ite (= x2150 x1642) 96 (x918 x1642))))
(assert (= (ite (= x2623 x3008) x1217 (x340 x2623)) (x3018 x2623)))
(assert (= (x2783 x488) (ite (= 160 x488) x190 (x1314 x488))))
(assert (= (x2328 x49) (ite (and x2926 x923) (x1952 x49) (ite (and x1236 (not x602)) (x595 x49) (x1546 x49)))))
(assert (= (ite (= x478 x1706) x1445 (x1996 x1706)) (x1160 x1706)))
(assert (= (ite (= x1267 x766) x1423 (x2397 x1267)) (x2073 x1267)))
(assert (= (x890 x1706) (ite (= x1706 x2085) x1910 (x970 x1706))))
(assert (= (ite (= x1661 x2751) x2246 (x1777 x2751)) (x95 x2751)))
(assert (= (ite (= x2048 x780) x555 (x2526 x2048)) (x1952 x2048)))
(assert (= (x1226 x2847) (ite (= x1261 x2847) x2738 (x2950 x2847))))
(assert (= (x3018 x1244) (ite (= x1244 x3008) x1217 (x340 x1244))))
(assert (= 0 (x1494 (- x2594 x2555))))
(assert (x107 x1492))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x2309) (x1059 x2309)) (ite (and x135 x2374) (x205 x2309) (ite (and x2850 x3004) (x1777 x2309) (x2338 x2309)))) (x2997 x2309)))
(assert (= (x2073 x2552) (ite (= x2552 x766) x1423 (x2397 x2552))))
(assert (= (ite (= x629 x424) x2357 (x2997 x629)) (x1958 x629)))
(assert (= (x125 x1544) (ite (= x1544 x2128) x1897 (x657 x1544))))
(assert (= (x2783 x685) (ite (= x685 160) x190 (x1314 x685))))
(assert (x107 x1038))
(assert (= (x915 x2751) (ite (and x2851 x1335) (x3018 x2751) (ite (and x1301 (not x3047)) (x1317 x2751) (x2805 x2751)))))
(assert (= (x801 x67) (ite (= x824 x67) x1666 (x902 x67))))
(assert (= (ite (= x2597 x3008) x1217 (x340 x2597)) (x3018 x2597)))
(assert (x107 x491))
(assert (= (x1044 x1041) (ite (and x29 (not x1970)) (x63 x1041) (x692 x1041))))
(assert (x107 x1864))
(assert (= (x798 x1453) (ite (and x682 x2759) (x2795 x1453) (x2138 x1453))))
(assert (= (x302 x3011) (ite (= 192 x3011) x2714 (x2783 x3011))))
(assert (= (ite (= x1489 x483) x1829 (x1668 x483)) (x130 x483)))
(assert (= (x1370 x2710) (ite (= x2710 x2298) x3034 (x161 x2710))))
(assert (x107 x144))
(assert (= (ite (= x1453 x483) x555 (x2602 x483)) (x918 x483)))
(assert (x107 x2347))
(assert (= (x2036 x2387) (ite (= x2642 x2387) x397 (x1902 x2387))))
(assert (x107 x2277))
(assert (= (=> (= (< 0 x555) x633) (and (=> (and (= x2610 x2207) (not x633) (= x1077 x535) (= x2127 x980)) x1309) (=> x633 x2000))) x1176))
(assert (= (x1370 x1483) (ite (= x2298 x1483) x3034 (x161 x1483))))
(assert (= (x915 x722) (ite (and x2851 x1335) (x3018 x722) (ite (and x1301 (not x3047)) (x1317 x722) (x2805 x722)))))
(assert (= (ite (and x2851 x1335) (x3018 x2725) (ite (and (not x3047) x1301) (x1317 x2725) (x2805 x2725))) (x915 x2725)))
(assert (x107 x644))
(assert (= (x353 x3011) (ite (= x3011 x1742) x848 (x1767 x3011))))
(assert (= (ite (= x2127 x488) x3034 (x2328 x488)) (x1902 x488)))
(assert (= (ite (and (not x2376) x3) (x651 x67) (ite (and x1264 (not x150)) (x1769 x67) (ite (and (not x601) x282) (x2255 x67) (ite (and x1733 (not x1290)) (x2707 x67) (x326 x67))))) (x396 x67)))
(assert (x107 x1673))
(assert (= (ite (= x685 x1318) x1964 (x715 x685)) (x1534 x685)))
(assert (= (x2931 x655) (ite (= x3023 x655) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x655))))
(assert (x107 x2139))
(assert (= (x302 x1882) (ite (= 192 x1882) x2714 (x2783 x1882))))
(assert (x107 x1268))
(assert (x107 x1051))
(assert (= (x801 x846) (ite (= x824 x846) x1666 (x902 x846))))
(assert (= (x2707 x182) (ite (= x182 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x182))))
(assert (= (ite (= x1615 x1594) x2726 (x2268 x1594)) (x2189 x1594)))
(assert (= (x2931 x1453) (ite (= x1453 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1453))))
(assert (= (ite (= x501 x2767) x3030 (x1531 x2767)) (x805 x2767)))
(assert (= (ite (= x1387 x2150) 96 (x918 x1387)) (x609 x1387)))
(assert (= x2031 (and x1326 x215)))
(assert (= x2530 (and x2050 x730)))
(assert (x107 x2134))
(assert (= (x2995 x2513) (ite (= 224 x2513) x770 (x302 x2513))))
(assert (= (ite (and x1979 (not x94)) (x396 x867) (x87 x867)) (x1782 x867)))
(assert (x107 x2734))
(assert (= (ite (and x2949 (not x2019)) (x2993 x1968) (x2001 x1968)) (x1029 x1968)))
(assert (= x1738 (=> (= (= x390 0) x198) (and (=> (and x198 (= x2690 x1755) (= x3045 x2975) (= x2679 0) (= x2205 0) (= x1766 x582)) x1949) (=> (and (= x501 (x864 (+ x2975 36))) (= x1336 (> x2538 0)) (= x1521 (x864 (+ x2975 4))) (not (= 0 x382)) (= (x3026 1461501637330902918203684832716283019655932542975 x2825) x2493) (= x382 (x1942 (x1592 x2151))) (= x2174 (= 0 x1268)) (not (= x2538 0)) (or (and x2830 (= (>= (x2746 (x1592 274184521717934524641157099916833587223)) x992) x2830) x557 (> 4294967296 x2388) (= x815 (x2272 (x1592 x2151))) (= (x2272 (x1592 274184521717934524641157099916833587223)) x992) (= x557 (= x815 (x2746 (x1592 x2151)))) x1336) (not x1336)) (or (and (= x2690 x1923) (= x2498 x390) (= x391 x582) x2174) (and (= (x2802 (x1592 x1864) (x348 3) 0) x2180) (= x2734 x1923) (not x2174) (= (- (/ x518 1000000000000000000) (uninterp_frac x518 1000000000000000000)) x1617) (>= x2307 0) (= x2938 (x163 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1617))) (= x858 x2498) (= x518 (uninterp_mod (* x1268 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x858 (x163 (- x390 x1617))) (= x473 (ite (> x2307 x2938) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x864 (+ x2307 x1617)))) (= (x3026 1461501637330902918203684832716283019655932542975 x2649) x2734) (<= x2307 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3026 1461501637330902918203684832716283019655932542975 x2649) x1864) (= 3 x391) (= x577 (x1408 x2180 1)) (= x2307 (x1977 x577)))) (not x198)) x1374)))))
(assert (= x1069 (x2600 (x1592 x1069))))
(assert (x107 x2630))
(assert (= (ite (= x796 x2168) x2187 (x801 x2168)) (x225 x2168)))
(assert (x107 x2609))
(assert (= (x2795 x2553) (ite (= x2553 x1083) x367 (x2880 x2553))))
(assert (= (x807 x293) (ite (= x2107 x293) x315 (x533 x293))))
(assert (= 0 (x1494 (- x1642 x2555))))
(assert (= (x805 x433) (ite (= x433 x501) x3030 (x1531 x433))))
(assert (= (ite (= 160 x433) x190 (x1314 x433)) (x2783 x433)))
(assert (= (x651 x874) (ite (= x874 x420) x952 (x1769 x874))))
(assert (= (ite (= x2298 x2425) x859 (x103 x2298)) (x1819 x2298)))
(assert (x107 x1707))
(assert (= (x2707 x2168) (ite (= x1807 x2168) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2168))))
(assert (x405 x2148))
(assert (x107 x1440))
(assert (= (x1265 x483) (ite (= x483 x2635) x1168 (x2980 x483))))
(assert (= 0 (x1494 (- x1544 x2555))))
(assert (= (ite (= x1197 x1846) x500 (x559 x1197)) (x970 x1197)))
(assert (x107 x2477))
(assert (= (ite (= x2709 x67) x2925 (x1370 x67)) (x2172 x67)))
(assert (x107 x2240))
(assert (= (ite (= x2128 x685) x1897 (x657 x685)) (x125 x685)))
(assert (= (ite (and (not x2376) x3) (x651 x629) (ite (and x1264 (not x150)) (x1769 x629) (ite (and x282 (not x601)) (x2255 x629) (ite (and x1733 (not x1290)) (x2707 x629) (x326 x629))))) (x396 x629)))
(assert (x107 x2840))
(assert (= (ite (= x2150 x2817) 96 (x918 x2817)) (x609 x2817)))
(assert (= (x2159 x2594) (ite (= x246 x2594) x1037 (x807 x2594))))
(assert (= (x1958 x2513) (ite (= x2513 x424) x2357 (x2997 x2513))))
(assert (= (ite (= x2553 x1348) x542 (x2394 x2553)) (x2063 x2553)))
(assert (= (x970 x1267) (ite (= x1846 x1267) x500 (x559 x1267))))
(assert (= (x33 x2833) 0))
(assert (= (ite (and x2123 (not x208)) (x1845 x2106) (x301 x2106)) (x1777 x2106)))
(assert (= (x807 x685) (ite (= x2107 x685) x315 (x533 x685))))
(assert (= (x2159 x3011) (ite (= x246 x3011) x1037 (x807 x3011))))
(assert (= (x970 x2817) (ite (= x2817 x1846) x500 (x559 x2817))))
(assert (= (x2426 x1544) (ite (and x2105 x29) (x593 x1544) (x1044 x1544))))
(assert (= (ite (and x29 x2105) (x593 x2298) (x1044 x2298)) (x2426 x2298)))
(assert (= (x1325 x1483) (ite (= x1638 x1483) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x1483))))
(assert (= (ite (= x812 x2971) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x735 x2971)) (x511 x2971)))
(assert (x107 x262))
(assert (x107 x674))
(assert (x107 x1944))
(assert (x2478 x2155))
(assert (x2567 x1062))
(assert (= x322 (=> (and (= x2130 (x1777 x517)) (= x1540 (< 0 x2130))) (and (=> x1540 x2719) (=> (and (not x1540) (= 0 x2573)) x2350)))))
(assert (= (ite (= x966 x1453) x555 (x2602 x966)) (x918 x966)))
(assert (= (x609 x364) (ite (= x2150 x364) 96 (x918 x364))))
(assert (= (x595 x2552) (ite (= x2552 x159) 96 (x1952 x2552))))
(assert (= (ite (= x3008 x49) x1217 (x340 x49)) (x3018 x49)))
(assert (= (x918 x1776) (ite (= x1776 x1453) x555 (x2602 x1776))))
(assert (= (ite (= x2128 x1780) x1897 (x657 x1780)) (x125 x1780)))
(assert (x107 x1807))
(assert (= (ite (and x3 (not x2376)) (x651 x874) (ite (and x1264 (not x150)) (x1769 x874) (ite (and (not x601) x282) (x2255 x874) (ite (and x1733 (not x1290)) (x2707 x874) (x326 x874))))) (x396 x874)))
(assert (= (x1090 x966) (ite (= x966 x677) x2612 (x1762 x966))))
(assert (= (x1810 x182) (ite (= x1242 x182) x2639 (x225 x182))))
(assert (= (x95 x2406) (ite (= x1661 x2406) x2246 (x1777 x2406))))
(assert (= (ite (= 192 x629) x2714 (x2783 x629)) (x302 x629)))
(assert (= (ite (= x2309 x424) x2357 (x2997 x2309)) (x1958 x2309)))
(assert (= (ite (and x2123 (not x208)) (x1845 x2553) (x301 x2553)) (x1777 x2553)))
(assert (= (x1265 x975) (ite (= x975 x2635) x1168 (x2980 x975))))
(assert (x107 x1426))
(assert (= (ite (= x961 160) x190 (x1314 x961)) (x2783 x961)))
(assert (= (x245 x1483) (ite (= x1483 x2962) x950 (x1429 x1483))))
(assert (x107 x1318))
(assert (= (ite (= x1873 x59) x1209 (x1340 x1873)) (x1762 x1873)))
(assert (= (ite (= x115 x67) x2357 (x1427 x67)) (x2259 x67)))
(assert (= (ite (and x3 (not x2376)) (x651 x1197) (ite (and x1264 (not x150)) (x1769 x1197) (ite (and x282 (not x601)) (x2255 x1197) (ite (and x1733 (not x1290)) (x2707 x1197) (x326 x1197))))) (x396 x1197)))
(assert (= (=> (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1143 x1278)) (= x122 (- (/ x1887 x368) (uninterp_frac x1887 x368))) (> x368 0) (> x1269 0) (= x2611 x1014) (= x1274 (x864 (+ x1615 32))) (= (x1774 x1615) x1269) (= x1887 (* x1143 x1278))) x2407) x1393))
(assert (= (ite (= x780 x59) x1209 (x1340 x780)) (x1762 x780)))
(assert (x107 x2499))
(assert (= (ite (= x2387 x517) x1914 (x2939 x2387)) (x2539 x2387)))
(assert (x107 x539))
(assert (= (x1782 x2552) (ite (and (not x94) x1979) (x396 x2552) (x87 x2552))))
(assert (= x2930 (=> (and (not (> x1279 18446744073709551615)) (= x590 (x864 (+ 32 x1198))) (= x2469 x1832) (= x1195 (x864 (+ x590 x2576))) (= x1198 (uninterp_mod (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1279 (x1888 x86)) (= x1697 (= 0 x1279)) (or x1697 (and (not x1697) (= (x864 (+ x2576 32)) x386) (= (uninterp_mod (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x954))) (= x2469 (x1888 x86)) (= x1832 (x1888 x766)) (= x86 (x1888 x1524))) x2578)))
(assert (x107 x1064))
(assert (= (x1090 x1544) (ite (= x677 x1544) x2612 (x1762 x1544))))
(assert (= (x2931 x370) (ite (= x370 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x370))))
(assert (= (x1782 x1780) (ite (and (not x94) x1979) (x396 x1780) (x87 x1780))))
(assert (= (x1317 x1594) (ite (= x1594 x2359) x2277 (x3037 x1594))))
(assert (= (- (/ x363 2) (uninterp_frac x363 2)) (x2059 x363 1)))
(assert (x107 x640))
(assert (= (ite (= x2454 x2168) x823 (x245 x2168)) (x1340 x2168)))
(assert (x107 x777))
(assert (= (x1762 x293) (ite (= x293 x59) x1209 (x1340 x293))))
(assert (= (x1029 x1706) (ite (and x2949 (not x2019)) (x2993 x1706) (x2001 x1706))))
(assert (= (ite (and (not x2376) x3) (x651 x1946) (ite (and (not x150) x1264) (x1769 x1946) (ite (and (not x601) x282) (x2255 x1946) (ite (and (not x1290) x1733) (x2707 x1946) (x326 x1946))))) (x396 x1946)))
(assert (= (ite (= x2129 x2817) x2451 (x1226 x2817)) (x657 x2817)))
(assert (= (and x1937 (not x324)) x710))
(assert (= (ite (and x724 (not x2377)) (x798 x433) (x346 x433)) (x205 x433)))
(assert (x107 x563))
(assert (= (ite (= x2035 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2035)) (x1325 x2035)))
(assert (= (ite (= x2107 x2513) x315 (x533 x2513)) (x807 x2513)))
(assert (x1932 x1099 x194))
(assert (x107 x856))
(assert (= 0 (x1494 (- x2725 x2555))))
(assert (= (x1370 x2833) (ite (= x2298 x2833) x3034 (x161 x2833))))
(assert (= (x348 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1592 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x107 x2171))
(assert (= (x2255 x488) (ite (= x488 x499) x2188 (x2707 x488))))
(assert (= (x3018 x1544) (ite (= x1544 x3008) x1217 (x340 x1544))))
(assert (= (x2167 x433) (ite (and (not x566) x2422 x2821) (x2189 x433) (x168 x433))))
(assert (= (ite (= x3023 x780) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x780)) (x2931 x780)))
(assert (= (x1762 x1544) (ite (= x1544 x59) x1209 (x1340 x1544))))
(assert (= (ite (and x2775 (not x2299)) (x795 x1732) (x1613 x1732)) (x2338 x1732)))
(assert (= (x2159 x2477) (ite (= x2477 x246) x1037 (x807 x2477))))
(assert (= (ite (= x1453 x2085) x1910 (x970 x1453)) (x890 x1453)))
(assert (x107 x1107))
(assert (= (ite (= x1136 x2635) x1168 (x2980 x1136)) (x1265 x1136)))
(assert (= (ite (= x2642 x1267) x397 (x1902 x1267)) (x2036 x1267)))
(assert (= (ite (= x2869 x2709) x2925 (x1370 x2869)) (x2172 x2869)))
(assert (x107 x1043))
(assert (= (ite (= 192 x2406) x2714 (x2783 x2406)) (x302 x2406)))
(assert (= (ite (and x1979 (not x94)) (x396 x780) (x87 x780)) (x1782 x780)))
(assert (x107 x938))
(assert (= (x1810 x1544) (ite (= x1544 x1242) x2639 (x225 x1544))))
(assert (x107 x2591))
(assert (x107 x2451))
(assert (x107 x3025))
(assert (= (ite (and x1697 x1145) (x939 x370) (x1686 x370)) (x2993 x370)))
(assert (= (x2338 x2751) (ite (and (not x2299) x2775) (x795 x2751) (x1613 x2751))))
(assert (= x1320 (or (and x2506 x2279) x222 (and x2014 (not x2015)))))
(assert (= (ite (= x1873 x424) x2357 (x2997 x1873)) (x1958 x1873)))
(assert (= (ite (= x1615 x913) x2726 (x2268 x913)) (x2189 x913)))
(assert (= (ite (and x682 x2759) (x2795 x2553) (x2138 x2553)) (x798 x2553)))
(assert (x107 x22))
(assert (= (ite (= x364 x2367) x2894 (x2255 x364)) (x1769 x364)))
(assert (= (x2259 x370) (ite (= x115 x370) x2357 (x1427 x370))))
(assert (= (x2426 x629) (ite (and x29 x2105) (x593 x629) (x1044 x629))))
(assert (x107 x2639))
(assert (= (ite (= x2709 x1873) x2925 (x1370 x1873)) (x2172 x1873)))
(assert (= (x2328 x1776) (ite (and x2926 x923) (x1952 x1776) (ite (and x1236 (not x602)) (x595 x1776) (x1546 x1776)))))
(assert (= (x33 x370) 0))
(assert (= (x2073 x1968) (ite (= x766 x1968) x1423 (x2397 x1968))))
(assert (x2567 x1557))
(assert (= (x805 x2298) (ite (= x2298 x501) x3030 (x1531 x2298))))
(assert (= (ite (= x874 x1661) x2246 (x1777 x874)) (x95 x874)))
(assert (x107 x914))
(assert (= (x1265 x685) (ite (= x685 x2635) x1168 (x2980 x685))))
(assert (= (x348 1684360437) (x1592 1684360437)))
(assert (= (ite (= x2127 x1197) x3034 (x2328 x1197)) (x1902 x1197)))
(assert (= (x2995 x2168) (ite (= 224 x2168) x770 (x302 x2168))))
(assert (= (x3018 x2127) (ite (= x3008 x2127) x1217 (x340 x2127))))
(assert (= (ite (= x499 x874) x2188 (x2707 x874)) (x2255 x874)))
(assert (= (ite (= x1732 x2454) x823 (x245 x1732)) (x1340 x1732)))
(assert (= (x1777 x2406) (ite (and (not x208) x2123) (x1845 x2406) (x301 x2406))))
(assert (= (ite (= x499 x455) x2188 (x2707 x455)) (x2255 x455)))
(assert (= (ite (= 224 x1732) x770 (x302 x1732)) (x2995 x1732)))
(assert (= (x2036 x2552) (ite (= x2642 x2552) x397 (x1902 x2552))))
(assert (= (x1952 x1068) (ite (= x1068 x780) x555 (x2526 x1068))))
(assert (= (x2189 x2298) (ite (= x2298 x1615) x2726 (x2268 x2298))))
(assert (= (ite (and (not x2376) x3) (x651 x2817) (ite (and (not x150) x1264) (x1769 x2817) (ite (and (not x601) x282) (x2255 x2817) (ite (and x1733 (not x1290)) (x2707 x2817) (x326 x2817))))) (x396 x2817)))
(assert (= (ite (= x2847 x2359) x2277 (x3037 x2847)) (x1317 x2847)))
(assert (= (x595 x1244) (ite (= x1244 x159) 96 (x1952 x1244))))
(assert (= (=> (and (= (> x1890 0) x2105) (not (= x2341 0)) (or (not x1970) (and (= x627 (x864 (+ x1558 x1438))) x1970)) (or (not x2105) (and (= x530 (<= x1875 (x2273 (x1592 274184521717934524641157099916833587223)))) (= (x2390 (x1592 274184521717934524641157099916833587223)) x1875) x736 (= (x2390 (x1592 x1953)) x1563) (< x249 4294967296) (= (= x1563 (x2273 (x1592 x1953))) x736) x2105 x530)) (= x2341 (x1942 (x1592 x1953))) (= x1970 (< x1558 x616))) x458) x613))
(assert (= (x1952 x961) (ite (= x961 x780) x555 (x2526 x961))))
(assert (x107 x308))
(assert (= (ite (= x874 x2107) x315 (x533 x874)) (x807 x874)))
(assert (= (x1845 x2474) (ite (and x896 x1892 (not x2097)) (x2539 x2474) (x2300 x2474))))
(assert (x107 x953))
(assert (= (ite (= x501 x2553) x3030 (x1531 x2553)) (x805 x2553)))
(assert (= (ite (= x2847 x1821) x3034 (x1728 x2847)) (x1450 x2847)))
(assert (= (x918 160) (ite (= 160 x1453) x555 (x2602 160))))
(assert (= (x63 x2168) (ite (and (not x2933) x1798) (x125 x2168) (ite (and x77 (not x969)) (x657 x2168) (ite (and x2091 (not x1421)) (x1226 x2168) (ite (and x697 (not x2706)) (x2950 x2168) (x2504 x2168)))))))
(assert (= (ite (= x2552 x1846) x500 (x559 x2552)) (x970 x2552)))
(assert (= (ite (= x49 x1242) x2639 (x225 x49)) (x1810 x49)))
(assert (= (ite (= x1882 x780) x555 (x2526 x1882)) (x1952 x1882)))
(assert (= (x805 x1909) (ite (= x1909 x501) x3030 (x1531 x1909))))
(assert (= (ite (= x3008 x1594) x1217 (x340 x1594)) (x3018 x1594)))
(assert (= (ite (= x488 x2454) x823 (x245 x488)) (x1340 x488)))
(assert (= (x2539 x1068) (ite (= x517 x1068) x1914 (x2939 x1068))))
(assert (x107 x2248))
(assert (= (x245 x2725) (ite (= x2962 x2725) x950 (x1429 x2725))))
(assert (= (ite (= x2725 x2128) x1897 (x657 x2725)) (x125 x2725)))
(assert (= x668 (and x660 x2508)))
(assert (x107 x2170))
(assert (= (x225 x1544) (ite (= x796 x1544) x2187 (x801 x1544))))
(assert (= (ite (= x1946 x2454) x823 (x245 x1946)) (x1340 x1946)))
(assert (x107 x804))
(assert (= (x1494 (- x1946 x2555)) 0))
(assert (x107 x58))
(assert (= (x1845 x1594) (ite (and x896 (not x2097) x1892) (x2539 x1594) (x2300 x1594))))
(assert (= (x2397 x2817) (ite (and (not x763) x2810) (x2167 x2817) (x298 x2817))))
(assert (= (ite (= x483 x2085) x1910 (x970 x483)) (x890 x483)))
(assert (x107 x611))
(assert (= (x1450 x655) (ite (= x655 x1821) x3034 (x1728 x655))))
(assert (= (ite (= x961 x1809) x50 (x2159 x961)) (x1903 x961)))
(assert (= (x1903 x1267) (ite (= x1809 x1267) x50 (x2159 x1267))))
(assert (= (ite (and x29 x2105) (x593 x1873) (x1044 x1873)) (x2426 x1873)))
(assert (= (x1769 x874) (ite (= x874 x2367) x2894 (x2255 x874))))
(assert (= (x2950 x1706) (ite (= x350 x1706) x1558 (x12 x1706))))
(assert (= (x63 x182) (ite (and (not x2933) x1798) (x125 x182) (ite (and (not x969) x77) (x657 x182) (ite (and x2091 (not x1421)) (x1226 x182) (ite (and (not x2706) x697) (x2950 x182) (x2504 x182)))))))
(assert (=> (< (- x2398 1) 10000) (= (x348 x2398) (x1592 x2398))))
(assert (= (x1810 x1453) (ite (= x1453 x1242) x2639 (x225 x1453))))
(assert (= (ite (= x2298 x655) x3034 (x161 x655)) (x1370 x655)))
(assert (x107 x2772))
(assert (x107 x2552))
(assert (= (ite (= x2217 x677) x2612 (x1762 x2217)) (x1090 x2217)))
(assert (x107 x670))
(assert (= (x1450 x2298) (ite (= x2298 x1821) x3034 (x1728 x2298))))
(assert (= (x1317 x780) (ite (= x780 x2359) x2277 (x3037 x780))))
(assert (x107 x1438))
(assert (= (x1044 x874) (ite (and (not x1970) x29) (x63 x874) (x692 x874))))
(assert (= (x2426 x97) (ite (and x29 x2105) (x593 x97) (x1044 x97))))
(assert (= (ite (and x817 x2655) (x1534 x2725) (ite (and (not x1834) x1941) (x887 x2725) (x151 x2725))) (x423 x2725)))
(assert (x107 x3017))
(assert (= (ite (= x677 x267) x2612 (x1762 x267)) (x1090 x267)))
(assert (= (and x2632 x2031) x1001))
(assert (= (x1314 x1041) (ite (= x1041 128) x1725 (x33 x1041))))
(assert (= (ite (= 192 x966) x2714 (x2783 x966)) (x302 x966)))
(assert (x107 x2080))
(assert (= (ite (and x1335 x2851) (x3018 x2717) (ite (and (not x3047) x1301) (x1317 x2717) (x2805 x2717))) (x915 x2717)))
(assert (= (x1958 x867) (ite (= x867 x424) x2357 (x2997 x867))))
(assert (= (ite (and x2926 x923) (x1952 160) (ite (and (not x602) x1236) (x595 160) (x1546 160))) (x2328 160)))
(assert (= (x2707 x1483) (ite (= x1807 x1483) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1483))))
(assert (= (ite (= x1706 x1508) x626 (x220 x1706)) (x1215 x1706)))
(assert (x107 x518))
(assert (= (x1539 x2725) (ite (= x2725 x1583) x1235 (x1450 x2725))))
(assert (x107 x2894))
(assert (= (x651 x1136) (ite (= x1136 x420) x952 (x1769 x1136))))
(assert (= (x2338 x722) (ite (and (not x2299) x2775) (x795 x722) (x1613 x722))))
(assert (= (ite (= x1873 160) x190 (x1314 x1873)) (x2783 x1873)))
(assert (= (x915 x1136) (ite (and x1335 x2851) (x3018 x1136) (ite (and (not x3047) x1301) (x1317 x1136) (x2805 x1136)))))
(assert (= (x1777 x1453) (ite (and x2123 (not x208)) (x1845 x1453) (x301 x1453))))
(assert (x107 x115))
(assert (= (x3018 x2546) (ite (= x2546 x3008) x1217 (x340 x2546))))
(assert (= (x1317 x1483) (ite (= x1483 x2359) x2277 (x3037 x1483))))
(assert (= (ite (= x86 128) x1725 (x33 x86)) (x1314 x86)))
(assert (= (x2539 x2217) (ite (= x517 x2217) x1914 (x2939 x2217))))
(assert (= (ite (and (not x2097) x896 x1892) (x2539 x97) (x2300 x97)) (x1845 x97)))
(assert (x107 x242))
(assert (= (ite (and x2422 (not x566) x2821) (x2189 x2847) (x168 x2847)) (x2167 x2847)))
(assert (= (ite (= x972 x2168) x1063 (x1903 x2168)) (x2720 x2168)))
(assert (= (ite (= x1642 x246) x1037 (x807 x1642)) (x2159 x1642)))
(assert (= (x33 x789) 0))
(assert (= (ite (= x1242 x455) x2639 (x225 x455)) (x1810 x455)))
(assert (x107 x2485))
(assert (x107 x1486))
(assert (= (ite (= x1909 x159) 96 (x1952 x1909)) (x595 x1909)))
(assert (= (ite (= x267 x2635) x1168 (x2980 x267)) (x1265 x267)))
(assert (= (x1903 x1041) (ite (= x1809 x1041) x50 (x2159 x1041))))
(assert (x107 x1033))
(assert (= (x918 x2623) (ite (= x2623 x1453) x555 (x2602 x2623))))
(assert (x107 x575))
(assert (= (x95 x1873) (ite (= x1873 x1661) x2246 (x1777 x1873))))
(assert (= (ite (= x2359 x629) x2277 (x3037 x629)) (x1317 x629)))
(assert (= (x939 x2298) (ite (= x2298 x2576) x1279 (x1888 x2298))))
(assert (= (ite (= x3023 x1544) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1544)) (x2931 x1544)))
(assert (x107 x2572))
(assert (= (ite (= x517 x2106) x1914 (x2939 x2106)) (x2539 x2106)))
(assert (= x2069 (=> (= x284 (< 1 x1871)) (and (=> x284 x698) (=> (and (= 10 x1867) (= x2466 1) (not x284)) x743)))))
(assert (= (x423 x2168) (ite (and x2655 x817) (x1534 x2168) (ite (and x1941 (not x1834)) (x887 x2168) (x151 x2168)))))
(assert (= (x1810 x115) (ite (= x115 x1242) x2639 (x225 x115))))
(assert (= (and x2267 (not x1860)) x2667))
(assert (= x883 (=> (= x1319 (< 1 x363)) (and (=> x1319 x1635) (=> (and (= 1 x1153) (not x1319) (= 10 x1420)) x986)))))
(assert (x107 x1764))
(assert (= (x2707 x3011) (ite (= x3011 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x3011))))
(assert (= (ite (= x824 x1483) x1666 (x902 x1483)) (x801 x1483)))
(assert (= (ite (= x2553 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2553)) (x2707 x2553)))
(assert (x107 x878))
(assert (= (ite (= x1083 x655) x367 (x2880 x655)) (x2795 x655)))
(assert (= (x1819 x370) (ite (= x2425 x370) x859 (x103 x370))))
(assert (= (x225 x2597) (ite (= x796 x2597) x2187 (x801 x2597))))
(assert (= (ite (and x682 x2759) (x2795 x1544) (x2138 x1544)) (x798 x1544)))
(assert (x107 x2876))
(assert (x107 x1012))
(assert (= (x1902 x1544) (ite (= x2127 x1544) x3034 (x2328 x1544))))
(assert (= (x1265 x2594) (ite (= x2635 x2594) x1168 (x2980 x2594))))
(assert (x107 x382))
(assert (= (x2073 x2546) (ite (= x766 x2546) x1423 (x2397 x2546))))
(assert (= (x1370 x1732) (ite (= x2298 x1732) x3034 (x161 x1732))))
(assert (= (ite (= x1136 x246) x1037 (x807 x1136)) (x2159 x1136)))
(assert (= (ite (= x59 x846) x1209 (x1340 x846)) (x1762 x846)))
(assert (= (x1777 x182) (ite (and (not x208) x2123) (x1845 x182) (x301 x182))))
(assert (= (x2783 x1544) (ite (= x1544 160) x190 (x1314 x1544))))
(assert (= (ite (= x2406 x2642) x397 (x1902 x2406)) (x2036 x2406)))
(assert (= (x33 x2751) 0))
(assert (= (ite (and x1892 x896 (not x2097)) (x2539 x2847) (x2300 x2847)) (x1845 x2847)))
(assert (x107 x1904))
(assert (= (x1810 x1136) (ite (= x1136 x1242) x2639 (x225 x1136))))
(assert (= (x1902 x2048) (ite (= x2048 x2127) x3034 (x2328 x2048))))
(assert (= (ite (and x2759 x682) (x2795 x1706) (x2138 x1706)) (x798 x1706)))
(assert (= x84 (=> (and (= x972 (x864 (+ 64 x246))) (= (x864 (+ x2217 64)) x1516) (= x50 (x2159 x488)) (= (> x315 2) x1096)) (and (=> (and (not x1096) (= x2589 x1516) (= x227 x972) (= x38 2)) x1626) (=> x1096 x1538)))))
(assert (= (ite (and (not x2377) x724) (x798 x364) (x346 x364)) (x205 x364)))
(assert (= (=> (and (= x2591 (x928 x2546)) (= (x864 (+ x1642 64)) x1034) (= (not (> x696 4)) x1934) (= (x864 (+ x3051 64)) x1598)) (and x1934 (=> (and (= x288 x1598) (= x157 x1034) (= x877 4)) x1354))) x2135))
(assert (= 0 (x33 x2552)))
(assert (x107 x196))
(assert (x107 x1385))
(assert (= (x2255 x2309) (ite (= x2309 x499) x2188 (x2707 x2309))))
(assert (= (+ 2 (x2600 x341)) (x2600 (x1408 x341 2))))
(assert (= (x1317 x2048) (ite (= x2359 x2048) x2277 (x3037 x2048))))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x2387) (x1059 x2387)) (ite (and x2374 x135) (x205 x2387) (ite (and x2850 x3004) (x1777 x2387) (x2338 x2387)))) (x2997 x2387)))
(assert (= (x1317 x370) (ite (= x2359 x370) x2277 (x3037 x370))))
(assert (= (ite (= x2717 x2709) x2925 (x1370 x2717)) (x2172 x2717)))
(assert (= (x1902 x267) (ite (= x2127 x267) x3034 (x2328 x267))))
(assert (= (ite (= x2962 x182) x950 (x1429 x182)) (x245 x182)))
(assert (= (+ (x2600 x2317) 1) (x2600 (x1408 x2317 1))))
(assert (= (x63 x1453) (ite (and (not x2933) x1798) (x125 x1453) (ite (and x77 (not x969)) (x657 x1453) (ite (and (not x1421) x2091) (x1226 x1453) (ite (and x697 (not x2706)) (x2950 x1453) (x2504 x1453)))))))
(assert (= (x651 x436) (ite (= x436 x420) x952 (x1769 x436))))
(assert (= (ite (= x2127 x2833) x3034 (x2328 x2833)) (x1902 x2833)))
(assert (= (ite (= x2709 x2847) x2925 (x1370 x2847)) (x2172 x2847)))
(assert (= (ite (= x2552 x2128) x1897 (x657 x2552)) (x125 x2552)))
(assert (= (x1769 x2387) (ite (= x2367 x2387) x2894 (x2255 x2387))))
(assert (x107 x1158))
(assert (x107 x2511))
(assert (x107 x526))
(assert (= (x1450 x867) (ite (= x1821 x867) x3034 (x1728 x867))))
(assert (= (x1340 x2594) (ite (= x2594 x2454) x823 (x245 x2594))))
(assert (= (x595 x86) (ite (= x86 x159) 96 (x1952 x86))))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x182) (x2300 x182)) (x1845 x182)))
(assert (x107 x757))
(assert (x107 x160))
(assert (= (ite (= x420 x966) x952 (x1769 x966)) (x651 x966)))
(assert (= (ite (= x867 x499) x2188 (x2707 x867)) (x2255 x867)))
(assert (= (x918 x1882) (ite (= x1882 x1453) x555 (x2602 x1882))))
(assert (x107 x2668))
(assert (= (x2159 x1706) (ite (= x246 x1706) x1037 (x807 x1706))))
(assert (= (x1592 2477345955) (x348 2477345955)))
(assert (= (x2995 x1484) (ite (= 224 x1484) x770 (x302 x1484))))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x293) (x2300 x293)) (x1845 x293)))
(assert (= (ite (= x3032 x483) x573 (x890 x483)) (x2764 x483)))
(assert (= (ite (and x2851 x1335) (x3018 x685) (ite (and x1301 (not x3047)) (x1317 x685) (x2805 x685))) (x915 x685)))
(assert (= x1357 (=> (and (= x894 (not (< 1 x459))) (= x459 (x2001 x86))) (and x894 (=> (= x674 x2460) x886)))))
(assert (= (ite (and x1697 x1145) (x939 x1968) (x1686 x1968)) (x2993 x1968)))
(assert (= (x302 x1594) (ite (= x1594 192) x2714 (x2783 x1594))))
(assert (x417 x2054 x2291))
(assert (= x381 (or (and x2926 x923) x2028)))
(assert (x107 x1628))
(assert (= (x595 x1642) (ite (= x1642 x159) 96 (x1952 x1642))))
(assert (= (ite (and (not x763) x2810) (x2167 x2552) (x298 x2552)) (x2397 x2552)))
(assert (= (x2036 x2513) (ite (= x2642 x2513) x397 (x1902 x2513))))
(assert (= (x1782 x97) (ite (and (not x94) x1979) (x396 x97) (x87 x97))))
(assert (= x1537 (=> (and (= (x224 x2553) x515) (= (x864 (+ x816 64)) x2636) (= (x864 (+ 64 x49)) x2552) (= x1719 (> x696 1))) (and (=> x1719 x2750) (=> (and (= x288 x2636) (= x877 1) (= x157 x2552) (not x1719)) x1354)))))
(assert (= (ite (= 160 x1776) x190 (x1314 x1776)) (x2783 x1776)))
(assert (= (x1819 x1136) (ite (= x2425 x1136) x859 (x103 x1136))))
(assert (= (x595 x2168) (ite (= x2168 x159) 96 (x1952 x2168))))
(assert (= (x130 x2546) (ite (= x1489 x2546) x1829 (x1668 x2546))))
(assert (= (x2539 x655) (ite (= x655 x517) x1914 (x2939 x655))))
(assert (= (ite (= x2751 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2751)) (x104 x2751)))
(assert (x107 x1994))
(assert (= (x2997 x436) (ite x1752 (ite (and (not x2913) x1127) (x205 x436) (x1059 x436)) (ite (and x2374 x135) (x205 x436) (ite (and x3004 x2850) (x1777 x436) (x2338 x436))))))
(assert (= (ite (= x1780 x2709) x2925 (x1370 x1780)) (x2172 x1780)))
(assert (x107 x2339))
(assert (= (ite (and x2949 (not x2019)) (x2993 x629) (x2001 x629)) (x1029 x629)))
(assert (x107 x398))
(assert (= (ite (= x961 x2359) x2277 (x3037 x961)) (x1317 x961)))
(assert (x107 x629))
(assert (= (ite (= x1068 x2642) x397 (x1902 x1068)) (x2036 x1068)))
(assert (= (ite (= x789 x159) 96 (x1952 x789)) (x595 x789)))
(assert (= (x348 71356987572919795984103299673912204194632180251134163011139925636576289226752) (x1592 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x1932 x1801 x1028))
(assert (= (ite (= x467 x2387) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2387)) (x104 x2387)))
(assert (x107 x2492))
(assert (= (=> (and (= x1232 (x915 x2127)) (= x1630 (> x1232 0))) (and (=> x1630 x758) (=> (and (= x1768 x2610) (not x1630) (= x1368 x306) (= x214 x2474)) x836))) x2696))
(assert (= (ite (= x2576 x433) x1279 (x1888 x433)) (x939 x433)))
(assert (= x537 (or (and (not x1058) x2713) x492 (and (not x538) x693) (and x510 (not x2005)) (and x432 (not x2443)))))
(assert (= (x2795 x1483) (ite (= x1483 x1083) x367 (x2880 x1483))))
(assert (= (x798 x1909) (ite (and x2759 x682) (x2795 x1909) (x2138 x1909))))
(assert (= (x805 x961) (ite (= x501 x961) x3030 (x1531 x961))))
(assert (x107 x2327))
(assert (= (ite (= x2709 x1068) x2925 (x1370 x1068)) (x2172 x1068)))
(assert (= (ite (and (not x208) x2123) (x1845 x1544) (x301 x1544)) (x1777 x1544)))
(assert (= (x1317 x1136) (ite (= x1136 x2359) x2277 (x3037 x1136))))
(assert (= (ite (and x2851 x1335) (x3018 x2847) (ite (and (not x3047) x1301) (x1317 x2847) (x2805 x2847))) (x915 x2847)))
(assert (= x3004 (or x2855 (and x2027 (not x1540)))))
(assert (= (x2259 x2298) (ite (= x115 x2298) x2357 (x1427 x2298))))
(assert (= (x2255 x1483) (ite (= x499 x1483) x2188 (x2707 x1483))))
(assert (= (x1902 x1946) (ite (= x2127 x1946) x3034 (x2328 x1946))))
(assert (= (ite (= x2847 x1348) x542 (x2394 x2847)) (x2063 x2847)))
(assert (= (ite (= x424 x3011) x2700 (x2997 x3011)) (x2204 x3011)))
(assert (= (x95 x2553) (ite (= x2553 x1661) x2246 (x1777 x2553))))
(assert (x107 x874))
(assert (= (ite (= x49 x1261) x2738 (x2950 x49)) (x1226 x49)))
(assert (= (x651 x1516) (ite (= x1516 x420) x952 (x1769 x1516))))
(assert (= (ite (= x2129 x370) x2451 (x1226 x370)) (x657 x370)))
(assert (= (ite (= x2847 x467) 106291421124418496933435958710909755174326102057086830187839624775778309242880 (x1813 x2847)) (x104 x2847)))
(assert (= (ite (and x2775 (not x2299)) (x795 x2406) (x1613 x2406)) (x2338 x2406)))
(assert (= (ite (and x2851 x1335) (x3018 x1244) (ite (and (not x3047) x1301) (x1317 x1244) (x2805 x1244))) (x915 x1244)))
(assert (= (ite (= x227 x874) x22 (x56 x874)) (x902 x874)))
(assert (= (ite (= x159 x2477) 96 (x1952 x2477)) (x595 x2477)))
(assert (= (x1845 x1780) (ite (and (not x2097) x896 x1892) (x2539 x1780) (x2300 x1780))))
(assert (x417 x520 x2181))
(assert (= (ite (= x2817 192) x2714 (x2783 x2817)) (x302 x2817)))
(assert (= (x2931 x874) (ite (= x874 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x874))))
(assert (x107 x1407))
(assert (= (ite (and x2775 (not x2299)) (x795 x455) (x1613 x455)) (x2338 x455)))
(assert (x107 x1724))
(assert (= (ite (= x1583 x293) x1235 (x1450 x293)) (x1539 x293)))
(assert (x107 x1776))
(assert (= (x1958 x2594) (ite (= x424 x2594) x2357 (x2997 x2594))))
(assert (x107 x2535))
(assert (x107 x296))
(assert (= (x1769 x1453) (ite (= x1453 x2367) x2894 (x2255 x1453))))
(assert (= (ite (= x2576 x49) x1279 (x1888 x49)) (x939 x49)))
(assert (x2478 x131))
(assert (= (ite (= x1261 x2406) x2738 (x2950 x2406)) (x1226 x2406)))
(assert (= (x1317 x86) (ite (= x2359 x86) x2277 (x3037 x86))))
(assert (= (ite (= x677 x182) x2612 (x1762 x182)) (x1090 x182)))
(assert (= (ite (and (not x2933) x1798) (x125 x780) (ite (and x77 (not x969)) (x657 x780) (ite (and x2091 (not x1421)) (x1226 x780) (ite (and (not x2706) x697) (x2950 x780) (x2504 x780))))) (x63 x780)))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x1706) (x1059 x1706)) (ite (and x135 x2374) (x205 x1706) (ite (and x2850 x3004) (x1777 x1706) (x2338 x1706)))) (x2997 x1706)))
(assert (= (ite (= x2425 x2168) x859 (x103 x2168)) (x1819 x2168)))
(assert (= (ite (and x2810 (not x763)) (x2167 x2847) (x298 x2847)) (x2397 x2847)))
(assert (x107 x780))
(assert (= (ite (= x2642 x685) x397 (x1902 x685)) (x2036 x685)))
(assert (= (ite (= x2106 x2635) x1168 (x2980 x2106)) (x1265 x2106)))
(assert (x107 x1773))
(assert (= x1131 (=> (and (= x604 (x864 (+ 64 x1453))) (= (x163 (- x555 1)) x2088) (= x615 (< 0 x2088)) (= (x864 (+ 32 x1453)) x2150)) (and (=> (not x615) x1621) (=> x615 x2992)))))
(assert (= (x1494 (- x261 x2555)) 0))
(assert (= (ite (and x3 (not x2376)) (x651 x2725) (ite (and (not x150) x1264) (x1769 x2725) (ite (and x282 (not x601)) (x2255 x2725) (ite (and x1733 (not x1290)) (x2707 x2725) (x326 x2725))))) (x396 x2725)))
(assert (= (x2707 x780) (ite (= x780 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x780))))
(assert (= (x2255 x2725) (ite (= x499 x2725) x2188 (x2707 x2725))))
(assert (= (ite (= 128 x3011) x1725 (x33 x3011)) (x1314 x3011)))
(assert (x107 x548))
(assert (x107 x1073))
(assert (x107 x1940))
(assert (= (x95 x2717) (ite (= x2717 x1661) x2246 (x1777 x2717))))
(assert (= (ite (= x2129 x3011) x2451 (x1226 x3011)) (x657 x3011)))
(assert (= (x2259 x1780) (ite (= x1780 x115) x2357 (x1427 x1780))))
(assert (= (x2931 x914) (ite (= x914 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x914))))
(assert (= (x1534 x1732) (ite (= x1732 x1318) x1964 (x715 x1732))))
(assert (x107 x2872))
(assert (= (ite (= x294 x1453) x555 (x2602 x294)) (x918 x294)))
(assert (= (x1592 (x2600 x2844)) x2844))
(assert (= (x918 x261) (ite (= x1453 x261) x555 (x2602 x261))))
(assert (x107 x924))
(assert (= (x33 x961) 0))
(assert (x107 x721))
(assert (= (x1845 x261) (ite (and (not x2097) x896 x1892) (x2539 x261) (x2300 x261))))
(assert (= (x2600 (x348 22876116169567568662247501733108717860502184539943453785307321755797215510528)) 22876116169567568662247501733108717860502184539943453785307321755797215510528))
(assert (= x2885 (or (and (not x2079) x2480) (and (not x2508) x660) (and x1741 (not x2537)) x908 (and (not x1512) x668))))
(assert (= (x902 x182) (ite (= x227 x182) x22 (x56 x182))))
(assert (= (ite (= x115 x1642) x2357 (x1427 x1642)) (x2259 x1642)))
(assert (= (ite (and x2821 (not x566) x2422) (x2189 x2869) (x168 x2869)) (x2167 x2869)))
(assert (= (x1044 x2553) (ite (and x29 (not x1970)) (x63 x2553) (x692 x2553))))
(assert (= (x396 x748) (ite (and (not x2376) x3) (x651 x748) (ite (and (not x150) x1264) (x1769 x748) (ite (and x282 (not x601)) (x2255 x748) (ite (and (not x1290) x1733) (x2707 x748) (x326 x748)))))))
(assert (x107 x1559))
(assert (x107 x2809))
(assert (= (ite (= x2406 x2962) x950 (x1429 x2406)) (x245 x2406)))
(assert (= 0 (x1494 (- x655 x2555))))
(assert (= (ite (= x420 x267) x952 (x1769 x267)) (x651 x267)))
(assert (= (x805 x1873) (ite (= x501 x1873) x3030 (x1531 x1873))))
(assert (= (ite (= x824 x2725) x1666 (x902 x2725)) (x801 x2725)))
(assert (= (or (and (not x701) x1891) x663 (and x2590 (not x334))) x2521))
(assert (x107 x2883))
(assert (= (ite (= x2962 x846) x950 (x1429 x846)) (x245 x846)))
(assert (= (x423 x1197) (ite (and x817 x2655) (x1534 x1197) (ite (and x1941 (not x1834)) (x887 x1197) (x151 x1197)))))
(assert (= (ite (= x227 x2594) x22 (x56 x2594)) (x902 x2594)))
(assert (= x693 (and x1058 x2713)))
(assert (x107 x1862))
(assert (= (x2783 x370) (ite (= x370 160) x190 (x1314 x370))))
(assert (= (x2995 x261) (ite (= 224 x261) x770 (x302 x261))))
(assert (= x1550 (or x834 (and x2949 (not x2019)))))
(assert (= (x902 x2552) (ite (= x227 x2552) x22 (x56 x2552))))
(assert (= (x1819 x2817) (ite (= x2425 x2817) x859 (x103 x2817))))
(assert (= (ite (and x896 x1892 (not x2097)) (x2539 x2309) (x2300 x2309)) (x1845 x2309)))
(assert (= (x2720 x2847) (ite (= x972 x2847) x1063 (x1903 x2847))))
(assert (= (x3018 x1873) (ite (= x1873 x3008) x1217 (x340 x1873))))
(assert (x107 x367))
(assert (= (x2172 x2817) (ite (= x2709 x2817) x2925 (x1370 x2817))))
(assert (x107 x954))
(assert (x107 x1308))
(assert (x1932 x1338 x1790))
(assert (= (ite (= x2817 x1615) x2726 (x2268 x2817)) (x2189 x2817)))
(assert (= (x1494 (- x182 x2555)) 0))
(assert (= (x1265 x2406) (ite (= x2635 x2406) x1168 (x2980 x2406))))
(assert (x107 x1338))
(assert (= (x1534 x2725) (ite (= x2725 x1318) x1964 (x715 x2725))))
(assert (= (ite (= x2642 x1516) x397 (x1902 x1516)) (x2036 x1516)))
(assert (= (x1958 x1041) (ite (= x424 x1041) x2357 (x2997 x1041))))
(assert (x107 x1074))
(assert (= (x33 x2710) 0))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x2600 (x348 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= (ite (= x2717 x3008) x1217 (x340 x2717)) (x3018 x2717)))
(assert (x107 x2412))
(assert (x107 x631))
(assert (= (ite (= x293 x1231) x775 (x44 x293)) (x887 x293)))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x433) (x1059 x433)) (ite (and x135 x2374) (x205 x433) (ite (and x3004 x2850) (x1777 x433) (x2338 x433)))) (x2997 x433)))
(assert (= (x2063 x433) (ite (= x433 x1348) x542 (x2394 x433))))
(assert (= (ite (= x1661 x293) x2246 (x1777 x293)) (x95 x293)))
(assert (= (x2338 x966) (ite (and (not x2299) x2775) (x795 x966) (x1613 x966))))
(assert (= (ite (= x3023 x1068) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1068)) (x2931 x1068)))
(assert (= (ite (= x483 128) x1725 (x33 x483)) (x1314 x483)))
(assert (x405 x2366))
(assert (x107 x1640))
(assert (x405 x1338))
(assert (= (ite (= x1041 x1261) x2738 (x2950 x1041)) (x1226 x1041)))
(assert (= (ite (= x2717 128) x1725 (x33 x2717)) (x1314 x2717)))
(assert (= (ite (= x2359 x455) x2277 (x3037 x455)) (x1317 x455)))
(assert (= (x2172 x3011) (ite (= x3011 x2709) x2925 (x1370 x3011))))
(assert (= (x2707 x2597) (ite (= x2597 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2597))))
(assert (= (ite (and x1335 x2851) (x3018 x789) (ite (and x1301 (not x3047)) (x1317 x789) (x2805 x789))) (x915 x789)))
(assert (= (x1534 x370) (ite (= x370 x1318) x1964 (x715 x370))))
(assert (= (ite (= x1615 x874) x2726 (x2268 x874)) (x2189 x874)))
(assert (= (x2172 x1544) (ite (= x2709 x1544) x2925 (x1370 x1544))))
(assert (= (x915 x822) (ite (and x1335 x2851) (x3018 x822) (ite (and (not x3047) x1301) (x1317 x822) (x2805 x822)))))
(assert (x107 x1204))
(assert (= (x2997 x182) (ite x1752 (ite (and (not x2913) x1127) (x205 x182) (x1059 x182)) (ite (and x2374 x135) (x205 x182) (ite (and x2850 x3004) (x1777 x182) (x2338 x182))))))
(assert (= (ite (= x2107 x2217) x315 (x533 x2217)) (x807 x2217)))
(assert (= (x1777 x97) (ite (and (not x208) x2123) (x1845 x97) (x301 x97))))
(assert (= (x1952 x49) (ite (= x780 x49) x555 (x2526 x49))))
(assert (= (ite (= x766 x2298) x1423 (x2397 x2298)) (x2073 x2298)))
(assert (= (x2036 x629) (ite (= x2642 x629) x397 (x1902 x629))))
(assert (x107 x2075))
(assert (x107 x2836))
(assert (x107 x2650))
(assert (= (x396 x2309) (ite (and x3 (not x2376)) (x651 x2309) (ite (and (not x150) x1264) (x1769 x2309) (ite (and x282 (not x601)) (x2255 x2309) (ite (and (not x1290) x1733) (x2707 x2309) (x326 x2309)))))))
(assert (= (ite (= x1453 x1642) x555 (x2602 x1642)) (x918 x1642)))
(assert (= (ite (= x370 x2635) x1168 (x2980 x370)) (x1265 x370)))
(assert (x107 x573))
(assert (x107 x127))
(assert (x107 x52))
(assert (x107 x2621))
(assert (= (x3018 x2552) (ite (= x2552 x3008) x1217 (x340 x2552))))
(assert (= (ite (= x1483 x1453) x555 (x2602 x1483)) (x918 x1483)))
(assert (= (ite (and x2775 (not x2299)) (x795 x370) (x1613 x370)) (x2338 x370)))
(assert (= x492 (and x538 x693)))
(assert (x107 x711))
(assert (= x2731 (x2600 (x1592 x2731))))
(assert (= (x2950 x1873) (ite (= x1873 x350) x1558 (x12 x1873))))
(assert (= (ite (= 224 x2725) x770 (x302 x2725)) (x2995 x2725)))
(assert (= (x2172 x1483) (ite (= x2709 x1483) x2925 (x1370 x1483))))
(assert (= (x1539 x1136) (ite (= x1583 x1136) x1235 (x1450 x1136))))
(assert (= (x1370 x1780) (ite (= x1780 x2298) x3034 (x161 x1780))))
(assert (= (x2995 x2552) (ite (= x2552 224) x770 (x302 x2552))))
(assert (x107 x1945))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x483) (x2300 x483)) (x1845 x483)))
(assert (x107 x2703))
(assert (= (x2707 x1544) (ite (= x1807 x1544) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1544))))
(assert (= (ite (= x2309 x1453) x555 (x2602 x2309)) (x918 x2309)))
(assert (x107 x1809))
(assert (= (ite (= x227 x1136) x22 (x56 x1136)) (x902 x1136)))
(assert (= (x1370 x822) (ite (= x822 x2298) x3034 (x161 x822))))
(assert (x107 x2058))
(assert (= (x95 x182) (ite (= x1661 x182) x2246 (x1777 x182))))
(assert (= (ite (and x1866 (not x2476)) (x2232 x780) (x1379 x780)) (x2018 x780)))
(assert (= (ite (= x517 x1442) x1914 (x2939 x1442)) (x2539 x1442)))
(assert (x107 x1279))
(assert (= (x1390 x1386) (ite (and x1741 (not x2537)) (x2136 x1386) (ite (and x2480 (not x2079)) (x552 x1386) (ite (and (not x1512) x668) (x1222 x1386) (ite (and x660 (not x2508)) (x511 x1386) (x802 x1386)))))))
(assert (= (x33 x1483) 0))
(assert (= (ite (= 128 x267) x1725 (x33 x267)) (x1314 x267)))
(assert (x107 x2653))
(assert (= x1127 (and (not x2374) x135)))
(assert (= (ite (= x1516 160) x190 (x1314 x1516)) (x2783 x1516)))
(assert (= (x2328 x1483) (ite (and x2926 x923) (x1952 x1483) (ite (and x1236 (not x602)) (x595 x1483) (x1546 x1483)))))
(assert (= (x1090 x2869) (ite (= x677 x2869) x2612 (x1762 x2869))))
(assert (= (ite (= x2817 x2962) x950 (x1429 x2817)) (x245 x2817)))
(assert (x107 x2977))
(assert (= (x1777 x433) (ite (and x2123 (not x208)) (x1845 x433) (x301 x433))))
(assert (= (ite (and x1866 (not x2476)) (x2232 x2594) (x1379 x2594)) (x2018 x2594)))
(assert (= (x2172 x2298) (ite (= x2298 x2709) x2925 (x1370 x2298))))
(assert (= (ite (= x2751 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2751)) (x2707 x2751)))
(assert (= (x801 x1732) (ite (= x824 x1732) x1666 (x902 x1732))))
(assert (= (ite (= x159 x1453) 96 (x1952 x1453)) (x595 x1453)))
(assert (= (x33 x455) 0))
(assert (x107 x459))
(assert (= (ite (= x1261 x2513) x2738 (x2950 x2513)) (x1226 x2513)))
(assert (= (ite (= x796 x455) x2187 (x801 x455)) (x225 x455)))
(assert (= (ite (= x2513 x2128) x1897 (x657 x2513)) (x125 x2513)))
(assert (= (x2600 (x348 104802725949312999197809474194232042941614695494850346232715517731946377510912)) 104802725949312999197809474194232042941614695494850346232715517731946377510912))
(assert (= (ite (= x2217 x115) x2357 (x1427 x2217)) (x2259 x2217)))
(assert (= (ite (= x2298 x789) x3034 (x161 x789)) (x1370 x789)))
(assert (= (ite (= x267 x1242) x2639 (x225 x267)) (x1810 x267)))
(assert (= (x2036 x49) (ite (= x2642 x49) x397 (x1902 x49))))
(assert (= (ite (= x364 x499) x2188 (x2707 x364)) (x2255 x364)))
(assert (x2567 x2239))
(assert (= (ite (= x3051 x2817) x9 (x2245 x2817)) (x928 x2817)))
(assert (= (=> (and (= x2128 (x864 (+ x350 96))) (= (< 96 x1558) x2933) (= x2406 (x864 (+ x1387 96))) (= (x657 x2406) x1897)) (and (=> x2933 x935) (=> (and (not x2933) (= x616 96)) x613))) x1202))
(assert (= (ite (and x2949 (not x2019)) (x2993 x2298) (x2001 x2298)) (x1029 x2298)))
(assert (= (ite (= x1453 x2833) x555 (x2602 x2833)) (x918 x2833)))
(assert (= (x1534 x293) (ite (= x1318 x293) x1964 (x715 x293))))
(assert (x107 x363))
(assert (= (ite (= x2127 x1776) x3034 (x2328 x1776)) (x1902 x1776)))
(assert (= (ite (and (not x2377) x724) (x798 x2594) (x346 x2594)) (x205 x2594)))
(assert (= (x1340 x1453) (ite (= x1453 x2454) x823 (x245 x1453))))
(assert (= (x1265 x1695) (ite (= x1695 x2635) x1168 (x2980 x1695))))
(assert (x107 x862))
(assert (= (ite (= x2642 x2833) x397 (x1902 x2833)) (x2036 x2833)))
(assert (x405 x967))
(assert (x107 x2849))
(assert (x107 x105))
(assert (= (ite (= x3032 x1946) x573 (x890 x1946)) (x2764 x1946)))
(assert (= (ite (and x1798 (not x2933)) (x125 x49) (ite (and (not x969) x77) (x657 x49) (ite (and (not x1421) x2091) (x1226 x49) (ite (and x697 (not x2706)) (x2950 x49) (x2504 x49))))) (x63 x49)))
(assert (x107 x2640))
(assert (= (x2426 x655) (ite (and x29 x2105) (x593 x655) (x1044 x655))))
(assert (= x2012 (or x2521 (and x2641 x1135))))
(assert (= (ite (= x796 x1387) x2187 (x801 x1387)) (x225 x1387)))
(assert (= (x2795 x2513) (ite (= x1083 x2513) x367 (x2880 x2513))))
(assert (= (x353 x2477) (ite (= x2477 x1742) x848 (x1767 x2477))))
(assert (= (x2136 x1139) (ite (= x2561 x1139) x2739 (x552 x1139))))
(assert (= (x353 x629) (ite (= x1742 x629) x848 (x1767 x629))))
(assert (= (x657 x86) (ite (= x86 x2129) x2451 (x1226 x86))))
(assert (x107 x816))
(assert (= (ite x1752 (ite (and (not x2913) x1127) (x205 x2869) (x1059 x2869)) (ite (and x135 x2374) (x205 x2869) (ite (and x2850 x3004) (x1777 x2869) (x2338 x2869)))) (x2997 x2869)))
(assert (= (x915 x867) (ite (and x2851 x1335) (x3018 x867) (ite (and (not x3047) x1301) (x1317 x867) (x2805 x867)))))
(assert (x107 x532))
(assert (= (x205 x293) (ite (and (not x2377) x724) (x798 x293) (x346 x293))))
(assert (= (ite (and x2851 x1335) (x3018 x2594) (ite (and (not x3047) x1301) (x1317 x2594) (x2805 x2594))) (x915 x2594)))
(assert (= (ite (and (not x2376) x3) (x651 x294) (ite (and x1264 (not x150)) (x1769 x294) (ite (and (not x601) x282) (x2255 x294) (ite (and x1733 (not x1290)) (x2707 x294) (x326 x294))))) (x396 x294)))
(assert (= (ite (= x1807 x1267) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1267)) (x2707 x1267)))
(assert (x107 x2649))
(assert (x107 x2048))
(assert (= (x2167 x2594) (ite (and x2821 (not x566) x2422) (x2189 x2594) (x168 x2594))))
(assert (x107 x1146))
(assert (= (x1222 x2278) (ite (= x127 x2278) x1229 (x511 x2278))))
(assert (= (x1810 x483) (ite (= x1242 x483) x2639 (x225 x483))))
(assert (= (ite (= x517 x1594) x1914 (x2939 x1594)) (x2539 x1594)))
(assert (= (x2397 x2553) (ite (and x2810 (not x763)) (x2167 x2553) (x298 x2553))))
(assert (= (ite (= x824 x629) x1666 (x902 x629)) (x801 x629)))
(assert (x107 x261))
(assert (= (ite (= x1387 x3023) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x1387)) (x2931 x1387)))
(assert (= (=> (and (= (> x774 0) x763) (= x774 (x2167 x2513))) (and (=> (and (= x1974 x766) (not x763)) x1011) (=> x763 x1171))) x2221))
(assert (= (ite (and x2123 (not x208)) (x1845 x2991) (x301 x2991)) (x1777 x2991)))
(assert (x107 x1832))
(assert (= (ite (= x2553 x780) x555 (x2526 x2553)) (x1952 x2553)))
(assert (= x2510 (=> (and (= (not (< x2021 x2670)) x114) (>= x1098 0) (= (x635 x268) x1098) (= (x864 (+ x2642 64)) x2021) (= (x1088 (x348 1) 0) x1334) (= (- (/ (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- (x2600 x268) (x2600 x1334)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)) x2607) (>= 1461501637330902918203684832716283019655932542975 x1098) (< x1098 1461501637330902918203684832716283019655932542976)) (and (=> (= x1368 1) x2282) x114))))
(assert (= (ite (= x824 x1780) x1666 (x902 x1780)) (x801 x1780)))
(assert (= (x95 x433) (ite (= x1661 x433) x2246 (x1777 x433))))
(assert (= (ite (and x2949 (not x2019)) (x2993 x780) (x2001 x780)) (x1029 x780)))
(assert (= (ite (and x2926 x923) (x1952 x433) (ite (and x1236 (not x602)) (x595 x433) (x1546 x433))) (x2328 x433)))
(assert (= (x2159 x182) (ite (= x246 x182) x1037 (x807 x182))))
(assert (= (ite (= x1821 x2725) x3034 (x1728 x2725)) (x1450 x2725)))
(assert (x107 x1068))
(assert (= (x2245 x2817) (ite (= x2636 x2817) x1673 (x283 x2817))))
(assert (= (x609 x293) (ite (= x2150 x293) 96 (x918 x293))))
(assert (= (=> (and (= x2506 (= 0 x3034)) (= (x864 (+ 32 x2298)) x2709) (= (x864 (+ x1123 32)) x1359) (= x2209 (x864 (+ 63 x1441))) (= x2987 (ite x133 1 0)) (= x936 (< x2298 x1387)) (= 0 x2987) (= (x864 (+ x1758 x1878)) x1764) (= x442 (x864 (+ x429 x1878))) (= x1453 (x864 (+ x2298 x1359))) (= (x864 (+ 4 x2358)) x1073) (= (x864 (+ x2358 35)) x1394) (= (x864 (+ x2358 36)) x1758) (= x1878 (x1667 x1073)) (= x133 (or x936 x1405)) (= x429 (x864 (+ x2467 160))) (= x1441 (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x186)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1394) (<= x2490 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2490) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1394)) (< x1394 x2490))) (not (> x2082 18446744073709551615)) (= (x864 (+ x1878 31)) x186) (= (x864 (+ x792 x1387)) x2298) (= (> x2298 18446744073709551615) x1405) (not (> x1878 18446744073709551615)) (not (> x1764 x2490)) (= x1123 (uninterp_mod (* x3034 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x792 (x3026 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2209))) (and (=> (and (= x2735 x1077) x2506) x2463) (=> (not x2506) x2964))) x1285))
(assert (= (ite (= x874 x2454) x823 (x245 x874)) (x1340 x874)))
(assert (= (ite (and x1697 x1145) (x939 x2035) (x1686 x2035)) (x2993 x2035)))
(assert (= (ite (and (not x2377) x724) (x798 x2597) (x346 x2597)) (x205 x2597)))
(assert (= (ite (= 224 x1041) x770 (x302 x1041)) (x2995 x1041)))
(assert (= (x225 x293) (ite (= x293 x796) x2187 (x801 x293))))
(assert (= (ite (= x1821 x2594) x3034 (x1728 x2594)) (x1450 x2594)))
(assert (x107 x1556))
(assert (= (ite (= x1544 x2425) x859 (x103 x1544)) (x1819 x1544)))
(assert (= (x2245 x629) (ite (= x629 x2636) x1673 (x283 x629))))
(assert (= (x1782 x655) (ite (and (not x94) x1979) (x396 x655) (x87 x655))))
(assert (= (ite (= x2454 x86) x823 (x245 x86)) (x1340 x86)))
(assert (= (ite (= x59 x961) x1209 (x1340 x961)) (x1762 x961)))
(assert (x107 x2819))
(assert (= (ite (and (not x2376) x3) (x651 x780) (ite (and x1264 (not x150)) (x1769 x780) (ite (and x282 (not x601)) (x2255 x780) (ite (and x1733 (not x1290)) (x2707 x780) (x326 x780))))) (x396 x780)))
(assert (= (x33 x1882) 0))
(assert (= x1344 (and x1680 x1280)))
(assert (= (ite (and x1892 (not x2097) x896) (x2539 x961) (x2300 x961)) (x1845 x961)))
(assert (= (and x2377 x724) x1671))
(assert (= (ite (and (not x566) x2821 x2422) (x2189 x1946) (x168 x1946)) (x2167 x1946)))
(assert (= (x798 x2991) (ite (and x682 x2759) (x2795 x2991) (x2138 x2991))))
(assert (x107 x1751))
(assert (= (x2707 x1780) (ite (= x1780 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x1780))))
(assert (= (ite (= x1821 x1453) x3034 (x1728 x1453)) (x1450 x1453)))
(assert (= (ite (= x2127 x86) x3034 (x2328 x86)) (x1902 x86)))
(assert (= (x2783 x1909) (ite (= 160 x1909) x190 (x1314 x1909))))
(assert (= (ite (= x1041 x2635) x1168 (x2980 x1041)) (x1265 x1041)))
(assert (= (x205 x370) (ite (and x724 (not x2377)) (x798 x370) (x346 x370))))
(assert (= (x1534 x1318) x1964))
(assert (= (ite (= x424 x1706) x2357 (x2997 x1706)) (x1958 x1706)))
(assert (= (x2073 x629) (ite (= x766 x629) x1423 (x2397 x629))))
(assert (= (ite (= x501 x2552) x3030 (x1531 x2552)) (x805 x2552)))
(assert (= (x2172 x846) (ite (= x846 x2709) x2925 (x1370 x846))))
(assert (= (ite (and x1335 x2851) (x3018 x2387) (ite (and x1301 (not x3047)) (x1317 x2387) (x2805 x2387))) (x915 x2387)))
(assert (= (x801 x2513) (ite (= x824 x2513) x1666 (x902 x2513))))
(assert (= (x1325 x2552) (ite (= x2552 x1638) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2018 x2552))))
(assert (= (and x2673 x2865) x2863))
(assert (x107 x1392))
(assert (= (ite (and x2775 (not x2299)) (x795 x914) (x1613 x914)) (x2338 x914)))
(assert (= (x1265 x1946) (ite (= x1946 x2635) x1168 (x2980 x1946))))
(assert (= (ite (= x2367 x182) x2894 (x2255 x182)) (x1769 x182)))
(assert (x107 x366))
(assert (= (x1317 x3011) (ite (= x3011 x2359) x2277 (x3037 x3011))))
(assert (= (x224 x2477) (ite (= x816 x2477) x696 (x2011 x2477))))
(assert (= (ite (and x724 (not x2377)) (x798 x629) (x346 x629)) (x205 x629)))
(assert (= (x2795 x2869) (ite (= x1083 x2869) x367 (x2880 x2869))))
(assert (= (and x2015 x2014) x222))
(assert (= (ite (= x370 x1348) x542 (x2394 x370)) (x2063 x370)))
(assert (= (ite (= x961 x1661) x2246 (x1777 x961)) (x95 x961)))
(assert (= (ite (= x2359 x1387) x2277 (x3037 x1387)) (x1317 x1387)))
(assert (x107 x1601))
(assert (x107 x2739))
(assert (x107 x2356))
(assert (x405 x2440))
(assert (= (ite (= x267 x2359) x2277 (x3037 x267)) (x1317 x267)))
(assert (x107 x2820))
(assert (= (ite (= x2709 x1706) x2925 (x1370 x1706)) (x2172 x1706)))
(assert (= (x939 x1483) (ite (= x1483 x2576) x1279 (x1888 x1483))))
(assert (x107 x88))
(assert (= (ite (= x1661 x914) x2246 (x1777 x914)) (x95 x914)))
(assert (x107 x2049))
(assert (= (ite (= x972 x2751) x1063 (x1903 x2751)) (x2720 x2751)))
(assert (x107 x1946))
(assert (= (ite (= x722 160) x190 (x1314 x722)) (x2783 x722)))
(assert (= (x1534 x1946) (ite (= x1946 x1318) x1964 (x715 x1946))))
(assert (x107 x467))
(assert (= (x2189 x1453) (ite (= x1615 x1453) x2726 (x2268 x1453))))
(assert (= (ite (= x1231 x1821) x775 (x44 x1821)) (x887 x1821)))
(assert (= (x1494 (- x293 x2555)) 0))
(assert (= (ite (and x1892 (not x2097) x896) (x2539 x1484) (x2300 x1484)) (x1845 x1484)))
(assert (= (x2172 x182) (ite (= x2709 x182) x2925 (x1370 x182))))
(assert (= (x1226 x294) (ite (= x1261 x294) x2738 (x2950 x294))))
(assert (= (ite (= x2425 x2991) x859 (x103 x2991)) (x1819 x2991)))
(assert (x405 x80))
(assert (= (ite (= x1745 x2546) x585 (x2580 x2546)) (x1328 x2546)))
(assert (x107 x659))
(assert (= (x805 x1889) (ite (= x1889 x501) x3030 (x1531 x1889))))
(assert (= (ite (= x159 x2817) 96 (x1952 x2817)) (x595 x2817)))
(assert (x107 x1804))
(assert (= (ite (= x2833 x3008) x1217 (x340 x2833)) (x3018 x2833)))
(assert (= (x2397 x780) (ite (and (not x763) x2810) (x2167 x780) (x298 x780))))
(assert (= (x2159 x961) (ite (= x961 x246) x1037 (x807 x961))))
(assert (x107 x2587))
(assert (= (ite (= x49 x2635) x1168 (x2980 x49)) (x1265 x49)))
(assert (= (x902 x1594) (ite (= x1594 x227) x22 (x56 x1594))))
(assert (x107 x2254))
(assert (x107 x43))
(assert (= (ite (= x2298 160) x3034 (x161 160)) (x1370 160)))
(assert (= (ite (and x1335 x2851) (x3018 x943) (ite (and x1301 (not x3047)) (x1317 x943) (x2805 x943))) (x915 x943)))
(assert (= (x3018 x722) (ite (= x3008 x722) x1217 (x340 x722))))
(assert (x107 x2341))
(assert (= (ite (= x499 x97) x2188 (x2707 x97)) (x2255 x97)))
(assert (x107 x206))
(assert (= (x1328 x49) (ite (= x49 x1745) x585 (x2580 x49))))
(assert (= 0 (x1494 (- x966 x2555))))
(assert (x107 x2954))
(assert (= (x225 x2406) (ite (= x2406 x796) x2187 (x801 x2406))))
(assert (= (x2950 x433) (ite (= x350 x433) x1558 (x12 x433))))
(assert (= (ite (and (not x1970) x29) (x63 x1642) (x692 x1642)) (x1044 x1642)))
(assert (= (x302 x1706) (ite (= 192 x1706) x2714 (x2783 x1706))))
(assert (x107 x751))
(assert (x107 x243))
(assert (= (x2259 x2876) (ite (= x2876 x115) x2357 (x1427 x2876))))
(assert (x107 x2593))
(assert (= (x2707 x2817) (ite (= x2817 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2817))))
(assert (= (x2063 x2513) (ite (= x2513 x1348) x542 (x2394 x2513))))
(assert (= (ite (= x159 x866) 96 (x1952 x866)) (x595 x866)))
(assert (= (ite (= x2597 x2367) x2894 (x2255 x2597)) (x1769 x2597)))
(assert (= (ite (= x1732 x2129) x2451 (x1226 x1732)) (x657 x1732)))
(assert (= (x1090 x483) (ite (= x677 x483) x2612 (x1762 x483))))
(assert (x107 x2076))
(assert (= (ite (= x966 x2127) x3034 (x2328 x966)) (x1902 x966)))
(assert (= (ite (and x896 (not x2097) x1892) (x2539 x866) (x2300 x866)) (x1845 x866)))
(assert (= (x651 x97) (ite (= x420 x97) x952 (x1769 x97))))
(assert (= (x595 x2833) (ite (= x159 x2833) 96 (x1952 x2833))))
(assert (= (x2073 x2553) (ite (= x766 x2553) x1423 (x2397 x2553))))
(assert (= (x302 x1732) (ite (= x1732 192) x2714 (x2783 x1732))))
(assert (= (x807 x1387) (ite (= x2107 x1387) x315 (x533 x1387))))
(assert (x405 x1669))
(assert (x107 x1791))
(assert (x107 x622))
(assert (= (ite (= x2168 x2150) 96 (x918 x2168)) (x609 x2168)))
(assert (= (x2950 x2594) (ite (= x350 x2594) x1558 (x12 x2594))))
(assert (= (x2259 x1909) (ite (= x115 x1909) x2357 (x1427 x1909))))
(assert (x107 x2878))
(assert (= (ite (= 224 x1594) x770 (x302 x1594)) (x2995 x1594)))
(assert (x107 x2642))
(assert (= x1129 (or x437 (and x2233 (not x1956)))))
(assert (= (x805 x2847) (ite (= x2847 x501) x3030 (x1531 x2847))))
(assert (= (x95 x2725) (ite (= x2725 x1661) x2246 (x1777 x2725))))
(assert (= (ite (= 224 x293) x770 (x302 x293)) (x2995 x293)))
(assert (= (or x1879 (and x1798 (not x2933)) (and x697 (not x2706)) (and x2091 (not x1421)) (and x77 (not x969))) x29))
(assert (= (x1226 x455) (ite (= x455 x1261) x2738 (x2950 x455))))
(assert (= (x33 x261) 0))
(assert (= (x2159 x2513) (ite (= x246 x2513) x1037 (x807 x2513))))
(assert (= (ite (= x1318 x1706) x1964 (x715 x1706)) (x1534 x1706)))
(assert (= (x1762 x182) (ite (= x182 x59) x1209 (x1340 x182))))
(assert (x107 x1706))
(assert (= (ite (= x2553 x816) x696 (x2011 x2553)) (x224 x2553)))
(assert (x107 x223))
(assert (x107 x69))
(assert (= (ite (= x3023 x267) 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2338 x267)) (x2931 x267)))
(assert (= (x915 x866) (ite (and x2851 x1335) (x3018 x866) (ite (and (not x3047) x1301) (x1317 x866) (x2805 x866)))))
(assert (= (x1328 x1453) (ite (= x1453 x1745) x585 (x2580 x1453))))
(assert (x107 x164))
(assert (= (ite (and x896 x1892 (not x2097)) (x2539 x685) (x2300 x685)) (x1845 x685)))
(assert (= (x1952 x1453) (ite (= x1453 x780) x555 (x2526 x1453))))
(assert (= (x1902 x1695) (ite (= x1695 x2127) x3034 (x2328 x1695))))
(assert (= (ite x1752 (ite (and x1127 (not x2913)) (x205 x685) (x1059 x685)) (ite (and x2374 x135) (x205 x685) (ite (and x2850 x3004) (x1777 x685) (x2338 x685)))) (x2997 x685)))
(assert (= (ite (= x2847 x1809) x50 (x2159 x2847)) (x1903 x2847)))
(assert (= (x2259 x2552) (ite (= x2552 x115) x2357 (x1427 x2552))))
(assert (= (x2328 x629) (ite (and x923 x2926) (x1952 x629) (ite (and (not x602) x1236) (x595 x629) (x1546 x629)))))
(assert (= (ite (= x2847 x1807) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2955 x2847)) (x2707 x2847)))
(assert (= (x423 x483) (ite (and x817 x2655) (x1534 x483) (ite (and x1941 (not x1834)) (x887 x483) (x151 x483)))))
(assert (x405 x2649))
(assert (= (x1340 x2553) (ite (= x2553 x2454) x823 (x245 x2553))))
(assert (= (ite (and x2759 x682) (x2795 x857) (x2138 x857)) (x798 x857)))
(assert (= (ite (and x2810 (not x763)) (x2167 x267) (x298 x267)) (x2397 x267)))
(assert (= (x245 x1387) (ite (= x1387 x2962) x950 (x1429 x1387))))
(assert (x107 x1529))
(assert (= (ite (= x796 x1873) x2187 (x801 x1873)) (x225 x1873)))
(assert (x107 x2366))
(assert (= (ite (= x1318 x2546) x1964 (x715 x2546)) (x1534 x2546)))
(assert (= (and x602 x1236) x513))
(assert (= (x396 x1267) (ite (and (not x2376) x3) (x651 x1267) (ite (and (not x150) x1264) (x1769 x1267) (ite (and (not x601) x282) (x2255 x1267) (ite (and x1733 (not x1290)) (x2707 x1267) (x326 x1267)))))))
(assert (x107 x820))
(assert (= (ite (and (not x2097) x896 x1892) (x2539 x867) (x2300 x867)) (x1845 x867)))
(assert (= (ite (= x780 x1803) x555 (x2526 x1803)) (x1952 x1803)))
(assert (= (ite (= x227 x685) x22 (x56 x685)) (x902 x685)))
(assert (= (x63 x1136) (ite (and x1798 (not x2933)) (x125 x1136) (ite (and (not x969) x77) (x657 x1136) (ite (and (not x1421) x2091) (x1226 x1136) (ite (and (not x2706) x697) (x2950 x1136) (x2504 x1136)))))))
(assert (= (ite (= x1453 x488) x555 (x2602 x488)) (x918 x488)))
(assert (= (x2539 x370) (ite (= x517 x370) x1914 (x2939 x370))))
(assert (= (x2159 x966) (ite (= x966 x246) x1037 (x807 x966))))
(assert (x107 x1422))
(check-sat)
