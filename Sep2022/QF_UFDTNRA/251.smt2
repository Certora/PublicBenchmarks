(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x58 0)) (((x203 (x703 x58) (x253 x58) (x101 Real)) (x429 (x658 Real)) (x401 (x294 x58) (x709 Real)))))
(declare-fun x617 () Real)
(declare-fun x96 () Real)
(declare-fun x582 () Real)
(declare-fun x327 () Real)
(declare-fun x14 () Bool)
(declare-fun x454 (Real) Real)
(declare-fun x89 () Real)
(declare-fun x88 () Real)
(declare-fun x323 () Real)
(declare-fun x432 () Real)
(declare-fun x579 () Real)
(declare-fun x471 () Real)
(declare-fun x368 () Real)
(declare-fun x290 () Real)
(declare-fun x641 () Real)
(declare-fun x374 () Real)
(declare-fun x274 () Real)
(declare-fun x55 () Real)
(declare-fun x344 () Real)
(declare-fun x321 () Real)
(declare-fun x131 () Real)
(declare-fun x124 () Real)
(declare-fun x68 () Real)
(declare-fun x95 () Real)
(declare-fun x449 () Real)
(declare-fun x493 () Real)
(declare-fun x225 () Bool)
(declare-fun x308 () Real)
(declare-fun x553 () Real)
(declare-fun x486 () Real)
(declare-fun x65 () Bool)
(declare-fun x395 () Real)
(declare-fun x275 () Real)
(declare-fun x25 () x58)
(declare-fun x97 () Bool)
(declare-fun x16 () Real)
(declare-fun x371 () Bool)
(declare-fun x246 () Real)
(declare-fun x514 () Real)
(declare-fun x337 () Bool)
(declare-fun x252 () Real)
(declare-fun x539 () Bool)
(declare-fun x602 () Real)
(declare-fun x667 () Real)
(declare-fun x328 () Bool)
(declare-fun x345 () Bool)
(declare-fun x299 () Real)
(declare-fun x400 () Real)
(declare-fun x684 () Bool)
(declare-fun x50 () Real)
(declare-fun x221 () Bool)
(declare-fun x474 () Real)
(declare-fun x362 () Real)
(declare-fun x170 () Bool)
(declare-fun x240 () Real)
(declare-fun x655 () Real)
(declare-fun x384 () Real)
(declare-fun x338 () Real)
(declare-fun x143 () Bool)
(declare-fun x241 () Bool)
(declare-fun x173 () Real)
(declare-fun x120 (x58) Real)
(declare-fun x204 () Real)
(declare-fun x199 () x58)
(declare-fun x673 () Bool)
(declare-fun x425 () Real)
(declare-fun x77 (Real) Real)
(declare-fun x351 () Real)
(declare-fun x503 () Bool)
(declare-fun x358 () Real)
(declare-fun x347 () Real)
(declare-fun x137 () Real)
(declare-fun x317 () Bool)
(declare-fun x421 () Real)
(declare-fun x479 () Bool)
(declare-fun x597 (x58) Real)
(declare-fun x190 () Real)
(declare-fun x343 () Bool)
(declare-fun x399 () Real)
(declare-fun x531 () Real)
(declare-fun x305 () Bool)
(declare-fun x631 () Real)
(declare-fun x396 () Bool)
(declare-fun x447 () Real)
(declare-fun x647 () Real)
(declare-fun x423 () Real)
(declare-fun x251 () Real)
(declare-fun x492 () Real)
(declare-fun x10 () Real)
(declare-fun x40 () Bool)
(declare-fun x18 () Bool)
(declare-fun x383 () Real)
(declare-fun x150 () Real)
(declare-fun x408 () Real)
(declare-fun x427 () Bool)
(declare-fun x22 () Real)
(declare-fun x336 () Real)
(declare-fun x628 (x58) Real)
(declare-fun x488 () Real)
(declare-fun x590 () Real)
(declare-fun x564 () Real)
(declare-fun x53 () Real)
(declare-fun x260 () Real)
(declare-fun x117 () Real)
(declare-fun x397 () Real)
(declare-fun x460 () Bool)
(declare-fun x330 () Real)
(declare-fun x306 () Real)
(declare-fun x230 () Real)
(declare-fun x489 () Real)
(declare-fun x648 () Bool)
(declare-fun x382 () Real)
(declare-fun x551 () Real)
(declare-fun x378 () Real)
(declare-fun x289 () Real)
(declare-fun x326 () Real)
(declare-fun x19 () Real)
(declare-fun x678 () Real)
(declare-fun x618 () Real)
(declare-fun x391 () Real)
(declare-fun x66 () Real)
(declare-fun x621 () Real)
(declare-fun x705 () Real)
(declare-fun x9 (Real) x58)
(declare-fun x87 () Real)
(declare-fun x231 () Real)
(declare-fun x575 () Real)
(declare-fun x361 () Bool)
(declare-fun x377 () Bool)
(declare-fun x180 () Bool)
(declare-fun x506 (x58) Real)
(declare-fun x273 () Real)
(declare-fun x527 () Real)
(declare-fun x403 () Real)
(declare-fun x604 () Bool)
(declare-fun x210 () Bool)
(declare-fun x491 () Real)
(declare-fun x370 () Real)
(declare-fun x459 () Real)
(declare-fun x635 () Real)
(declare-fun x339 () Real)
(declare-fun x601 () Bool)
(declare-fun x85 () Real)
(declare-fun x419 () Bool)
(declare-fun x277 () Real)
(declare-fun x216 () Real)
(declare-fun x31 () Real)
(declare-fun x687 () Real)
(declare-fun x600 () Real)
(declare-fun x313 () Real)
(declare-fun x470 () Real)
(declare-fun x405 () Real)
(declare-fun x588 () Real)
(declare-fun x463 () Bool)
(declare-fun x598 () Real)
(declare-fun x354 () Real)
(declare-fun x140 () Bool)
(declare-fun x369 () Real)
(declare-fun x483 () Real)
(declare-fun x363 () Real)
(declare-fun x287 () Bool)
(declare-fun x272 () Real)
(declare-fun x406 () Real)
(declare-fun x409 () Real)
(declare-fun x484 () Real)
(declare-fun x172 () Real)
(declare-fun x701 () Bool)
(declare-fun x63 () Real)
(declare-fun x35 () Real)
(declare-fun x356 () Real)
(declare-fun x267 () Real)
(declare-fun x46 () Bool)
(declare-fun x138 () Real)
(declare-fun x258 () Bool)
(declare-fun x424 () Real)
(declare-fun x184 () Bool)
(declare-fun x567 () Bool)
(declare-fun x110 () Bool)
(declare-fun x668 () Real)
(declare-fun x207 () Real)
(declare-fun x639 () Bool)
(declare-fun x495 () Real)
(declare-fun x430 () Bool)
(declare-fun x179 () Real)
(declare-fun x29 () Real)
(declare-fun x455 () Real)
(declare-fun x393 () Bool)
(declare-fun x468 () x58)
(declare-fun x98 (x58) Real)
(declare-fun x255 () Real)
(declare-fun x248 () Bool)
(declare-fun x116 () Real)
(declare-fun x629 () Real)
(declare-fun x585 () Real)
(declare-fun x223 () Real)
(declare-fun x530 () Bool)
(declare-fun x186 () Bool)
(declare-fun x433 () Real)
(declare-fun x90 () Real)
(declare-fun x13 () Real)
(declare-fun x59 () Real)
(declare-fun x540 () x58)
(declare-fun x245 () Bool)
(declare-fun x461 () Bool)
(declare-fun x278 () Bool)
(declare-fun x630 () Real)
(declare-fun x45 () Real)
(declare-fun x418 () Real)
(declare-fun x672 () Real)
(declare-fun x593 () Real)
(declare-fun x334 () x58)
(declare-fun x350 () Real)
(declare-fun x481 () Bool)
(declare-fun x194 () Real)
(declare-fun x47 () Bool)
(declare-fun x39 () Real)
(declare-fun x192 () Bool)
(declare-fun x23 () Real)
(declare-fun x695 () Real)
(declare-fun x453 () Real)
(declare-fun x663 () Real)
(declare-fun x666 () Real)
(declare-fun x638 () Real)
(declare-fun x607 () Real)
(declare-fun x256 () Real)
(declare-fun x243 (Real) Real)
(declare-fun x84 () Real)
(declare-fun x367 () Real)
(declare-fun x235 () Bool)
(declare-fun x522 () Real)
(declare-fun x74 () Bool)
(declare-fun x562 () Real)
(declare-fun x78 () Bool)
(declare-fun x269 () Bool)
(declare-fun x262 () Real)
(declare-fun x82 () Real)
(declare-fun x537 () Real)
(declare-fun x236 () Real)
(declare-fun x314 () Real)
(declare-fun x694 () Bool)
(declare-fun x175 () Real)
(declare-fun x26 () Real)
(declare-fun x153 () Real)
(declare-fun x202 () Real)
(declare-fun x109 () Real)
(declare-fun x283 () Real)
(declare-fun x187 () Bool)
(declare-fun x660 () Bool)
(declare-fun x422 () Real)
(declare-fun x244 () Bool)
(declare-fun x535 () Real)
(declare-fun x615 () Real)
(declare-fun x149 () Real)
(declare-fun x589 () Bool)
(declare-fun x685 () Real)
(declare-fun x603 () Real)
(declare-fun x333 () Real)
(declare-fun x513 () Bool)
(declare-fun x86 () Real)
(declare-fun x438 () Real)
(declare-fun x498 () Bool)
(declare-fun x108 () Real)
(declare-fun x605 () Bool)
(declare-fun x594 () Real)
(declare-fun x214 () Bool)
(declare-fun x533 () Real)
(declare-fun x420 (Real) Real)
(declare-fun x568 () Bool)
(declare-fun x107 () Real)
(declare-fun x388 () Real)
(declare-fun x417 () Real)
(declare-fun x355 () Real)
(declare-fun x439 () Real)
(declare-fun x226 () Real)
(declare-fun x270 () Bool)
(declare-fun x21 () Real)
(declare-fun x693 () Real)
(declare-fun x296 () Real)
(declare-fun x72 () Bool)
(declare-fun x167 () Bool)
(declare-fun x113 () Real)
(declare-fun x91 () Real)
(declare-fun x622 () Real)
(declare-fun x139 () Real)
(declare-fun x145 () Bool)
(declare-fun x320 () Bool)
(declare-fun x119 () Real)
(declare-fun x79 () Real)
(declare-fun x60 () x58)
(declare-fun x34 () Real)
(declare-fun x496 () Real)
(declare-fun x215 () Real)
(declare-fun x446 () Real)
(declare-fun x36 () Bool)
(declare-fun x657 () Real)
(declare-fun x558 () Real)
(declare-fun x680 () Real)
(declare-fun x134 () Bool)
(declare-fun x561 () Bool)
(declare-fun x125 () Real)
(declare-fun x538 () Bool)
(declare-fun x310 () Real)
(declare-fun x312 () Bool)
(declare-fun x132 () Real)
(declare-fun x171 () Real)
(declare-fun x591 () Real)
(declare-fun x5 () Real)
(declare-fun x545 () Bool)
(declare-fun x264 () Real)
(declare-fun x37 () Bool)
(declare-fun x292 () Bool)
(declare-fun x482 () Real)
(declare-fun x659 () Real)
(declare-fun x643 () Real)
(declare-fun x286 () Real)
(declare-fun x263 () Real)
(declare-fun x33 () Real)
(declare-fun x572 () Real)
(declare-fun x431 () Real)
(declare-fun x4 () Bool)
(declare-fun x111 () Bool)
(declare-fun x359 () Real)
(declare-fun x301 () Real)
(declare-fun x232 () Bool)
(declare-fun x166 () Real)
(declare-fun x291 () Real)
(declare-fun x372 () Bool)
(declare-fun x285 () Real)
(declare-fun x144 () Bool)
(declare-fun x379 () Real)
(declare-fun x543 () Real)
(declare-fun x261 () Real)
(declare-fun x280 () Bool)
(declare-fun x69 () Real)
(declare-fun x209 () Real)
(declare-fun x386 () Real)
(declare-fun x205 () Bool)
(declare-fun x115 () Bool)
(declare-fun x106 () Real)
(declare-fun x469 (Real Real) Real)
(declare-fun x341 () Bool)
(declare-fun x239 () Real)
(declare-fun x662 () Bool)
(declare-fun x428 () Real)
(declare-fun x609 () Real)
(declare-fun x381 () Real)
(declare-fun x436 () Real)
(declare-fun x490 () Real)
(declare-fun x435 () Bool)
(declare-fun x467 () Real)
(declare-fun x686 () Real)
(declare-fun x394 () Real)
(declare-fun x178 () Real)
(declare-fun x185 () Bool)
(declare-fun x387 () x58)
(declare-fun x528 () Real)
(declare-fun x475 () Real)
(declare-fun x480 () Real)
(declare-fun x254 () Bool)
(declare-fun x83 () Real)
(declare-fun x516 () Real)
(declare-fun x11 () Real)
(declare-fun x711 () Real)
(declare-fun x353 () Real)
(declare-fun x389 () Real)
(declare-fun x677 () Real)
(declare-fun x1 () Real)
(declare-fun x613 () x58)
(declare-fun x188 () Bool)
(declare-fun x30 () Real)
(declare-fun x642 () Real)
(declare-fun x100 () Real)
(declare-fun x476 () Real)
(declare-fun x457 () Bool)
(declare-fun x478 () Real)
(declare-fun x649 () Real)
(declare-fun x233 () Real)
(declare-fun x51 () Real)
(declare-fun x141 () Bool)
(declare-fun x681 () Real)
(declare-fun x224 () Real)
(declare-fun x620 () Real)
(declare-fun x156 () Real)
(declare-fun x128 () Bool)
(declare-fun x682 () Real)
(declare-fun x177 () Real)
(declare-fun x700 () Real)
(declare-fun x24 () Bool)
(declare-fun x413 () Real)
(declare-fun x114 () Real)
(declare-fun x696 () Real)
(declare-fun x142 () Real)
(declare-fun x592 () Bool)
(declare-fun x532 (Real) Real)
(declare-fun x651 (Real) Real)
(declare-fun x627 () Real)
(declare-fun x702 () Real)
(declare-fun x511 () Real)
(declare-fun x183 () Bool)
(declare-fun x697 () Real)
(declare-fun x104 () Real)
(declare-fun x525 () x58)
(declare-fun x304 () Bool)
(declare-fun x571 () Bool)
(declare-fun x157 () Bool)
(declare-fun x566 () Bool)
(declare-fun x521 () Real)
(declare-fun x168 (x58) Real)
(declare-fun x319 () Real)
(declare-fun x546 () Real)
(declare-fun x504 () Real)
(declare-fun x212 () Bool)
(declare-fun x560 () Real)
(declare-fun x340 () Real)
(declare-fun x542 () Real)
(declare-fun x707 () Real)
(declare-fun x105 () Bool)
(declare-fun x67 () Bool)
(declare-fun x164 () Real)
(declare-fun x307 () Real)
(declare-fun x624 () Real)
(declare-fun x500 () Real)
(declare-fun x93 () Real)
(declare-fun x217 () Real)
(declare-fun x606 () Bool)
(declare-fun x507 () Bool)
(declare-fun x555 () Real)
(declare-fun x499 () x58)
(declare-fun x259 () Real)
(declare-fun x610 () Real)
(declare-fun x102 () Real)
(declare-fun x61 () Real)
(declare-fun x71 () Bool)
(declare-fun x477 () Real)
(declare-fun x135 () Real)
(declare-fun x645 () x58)
(declare-fun x415 () Real)
(declare-fun x8 () Real)
(declare-fun x450 () Real)
(declare-fun x181 () Real)
(declare-fun x126 () Real)
(declare-fun x54 () Bool)
(declare-fun x325 () x58)
(declare-fun x390 () Real)
(declare-fun x556 (Real) Real)
(declare-fun x121 () Bool)
(declare-fun x197 () Real)
(declare-fun x365 () Real)
(declare-fun x519 () Bool)
(declare-fun x712 () Real)
(declare-fun x146 () Bool)
(declare-fun x586 () Real)
(declare-fun x595 () Real)
(declare-fun x465 () Real)
(declare-fun x48 () Real)
(declare-fun x288 () Bool)
(declare-fun x494 () Real)
(declare-fun x392 () Real)
(declare-fun x706 () Real)
(declare-fun x349 () Real)
(declare-fun x583 () Bool)
(declare-fun x332 () Real)
(declare-fun x692 () Real)
(declare-fun x414 () x58)
(declare-fun x626 () Bool)
(declare-fun x402 () Real)
(declare-fun x510 () Real)
(declare-fun x452 () Real)
(declare-fun x557 () Real)
(declare-fun x584 () Real)
(declare-fun x407 () Real)
(declare-fun x315 () Real)
(declare-fun x130 () Bool)
(declare-fun x303 () Real)
(declare-fun x472 () Bool)
(declare-fun x411 () Real)
(declare-fun x169 () x58)
(declare-fun x664 () x58)
(declare-fun x38 () Real)
(declare-fun x242 () Bool)
(declare-fun x515 () Bool)
(declare-fun x32 (Real) Real)
(declare-fun x637 () Real)
(declare-fun x487 () x58)
(declare-fun x437 () Real)
(declare-fun x80 () Bool)
(declare-fun x444 () Real)
(declare-fun x322 () Real)
(declare-fun x357 () Real)
(declare-fun x373 () Real)
(declare-fun x295 () Real)
(declare-fun x611 () Real)
(declare-fun x335 () Real)
(declare-fun x136 () Real)
(declare-fun x324 () Real)
(declare-fun x640 (Real) Real)
(declare-fun x12 (Real) Real)
(declare-fun x464 () Real)
(declare-fun x412 () Real)
(declare-fun x129 () Real)
(declare-fun x112 () Real)
(declare-fun x268 () Real)
(declare-fun x581 () Bool)
(declare-fun x162 () Real)
(declare-fun x193 () Real)
(declare-fun x195 () Real)
(declare-fun x316 () Bool)
(declare-fun x220 () Real)
(declare-fun x76 () Real)
(declare-fun x43 () Real)
(declare-fun x342 () Bool)
(declare-fun x410 () Real)
(declare-fun x300 () Bool)
(declare-fun x669 () Real)
(declare-fun x644 () Real)
(declare-fun x206 () Real)
(declare-fun x548 () Real)
(declare-fun x501 () Real)
(declare-fun x158 () Real)
(declare-fun x524 () Real)
(declare-fun x218 () Real)
(declare-fun x679 () Real)
(declare-fun x623 () Bool)
(declare-fun x271 () x58)
(declare-fun x376 () Real)
(declare-fun x671 () Real)
(declare-fun x228 () Real)
(declare-fun x632 () x58)
(declare-fun x41 () x58)
(declare-fun x505 () Real)
(declare-fun x559 () Real)
(declare-fun x238 () Real)
(declare-fun x526 () Real)
(declare-fun x318 () Real)
(declare-fun x122 () Real)
(declare-fun x182 () Real)
(declare-fun x174 () x58)
(declare-fun x675 () Real)
(declare-fun x448 () Real)
(declare-fun x661 () Real)
(declare-fun x133 () Real)
(declare-fun x160 () Bool)
(declare-fun x346 () Real)
(declare-fun x577 () Real)
(declare-fun x366 () Real)
(declare-fun x123 () Real)
(declare-fun x634 (x58) Real)
(declare-fun x276 () Real)
(declare-fun x656 () Real)
(declare-fun x118 () Real)
(declare-fun x152 () Real)
(declare-fun x75 () Real)
(declare-fun x17 () Real)
(declare-fun x2 () Real)
(declare-fun x302 () Real)
(declare-fun x154 () Real)
(declare-fun x213 () Bool)
(declare-fun x518 () Real)
(declare-fun x508 () Real)
(declare-fun x200 () Real)
(declare-fun x311 () Real)
(declare-fun x44 () Real)
(declare-fun x612 () Real)
(declare-fun x587 () Real)
(declare-fun x441 () Real)
(declare-fun x576 () Bool)
(declare-fun x512 () Bool)
(declare-fun x653 () Bool)
(declare-fun x619 () Real)
(declare-fun x331 () Real)
(declare-fun x502 () Bool)
(declare-fun x485 () Real)
(declare-fun x208 () Real)
(declare-fun x20 () Real)
(declare-fun x674 () Real)
(declare-fun x293 () Real)
(declare-fun x599 () Real)
(declare-fun x165 () Real)
(declare-fun x189 () Real)
(declare-fun x191 () Real)
(declare-fun x552 () Bool)
(declare-fun x151 () Bool)
(declare-fun x574 () Real)
(declare-fun x456 () Real)
(declare-fun x520 () Bool)
(declare-fun x229 () Real)
(declare-fun x309 () Bool)
(declare-fun x690 () Real)
(declare-fun x654 () Bool)
(declare-fun x352 () Bool)
(declare-fun x257 () Real)
(declare-fun x81 () Real)
(declare-fun x541 () Real)
(declare-fun x708 () Real)
(declare-fun x237 () Real)
(declare-fun x550 () Real)
(declare-fun x266 () Real)
(declare-fun x580 () Real)
(declare-fun x691 () Bool)
(declare-fun x28 () Real)
(declare-fun x196 () Real)
(declare-fun x462 () Real)
(declare-fun x6 () Real)
(declare-fun x92 () Real)
(declare-fun x404 () Real)
(declare-fun x445 () Real)
(declare-fun x364 () Real)
(declare-fun x676 () Real)
(declare-fun x94 () Real)
(define-fun x103 ((x58 x58) (x73 Real)) x58 (ite ((_ is x401) x58) (x401 (x294 x58) (+ x73 (x709 x58))) (ite ((_ is x203) x58) (x203 (x703 x58) (x253 x58) (+ x73 (x101 x58))) (x429 (+ (x658 x58) x73)))))
(define-fun x279 ((x440 Real)) Real (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x440) (<= 0 x440)) x440 (- x440 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x284 ((x440 Real)) Real (ite (and (< x440 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x440)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x440) x440))
(define-fun x159 ((x219 Real)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219) (<= 0 x219)))
(define-fun x380 ((x219 Real)) Bool (and (= x219 (x469 x219 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x469 115792089237316195423570985008687907853269984665640564039457584007913129639935 x219) x219)))
(define-fun x633 ((x219 Real)) Bool (and (= 0 (x469 0 x219)) (= (x469 x219 0) 0)))
(define-fun x348 ((x219 Real)) Bool (= x219 (x469 x219 x219)))
(define-fun x147 ((x219 Real)) Bool (and (x348 x219) (x380 x219) (x633 x219)))
(define-fun x646 ((x219 Real)) Bool (= (x469 1461501637330902918203684832716283019655932542975 (x469 1461501637330902918203684832716283019655932542975 x219)) (x469 1461501637330902918203684832716283019655932542975 x219)))
(define-fun x517 ((x219 Real)) Bool (=> (and (<= 0 x219) (> 1461501637330902918203684832716283019655932542976 x219)) (= x219 (x469 1461501637330902918203684832716283019655932542975 x219))))
(define-fun x52 ((x219 Real)) Bool (=> (= x219 (x469 1461501637330902918203684832716283019655932542975 x219)) (and (>= x219 0) (> 1461501637330902918203684832716283019655932542976 x219))))
(define-fun x665 ((x219 Real)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x219) (>= x219 1461501637330902918203684832716283019655932542976)) (= (- x219 1461501637330902918203684832716283019655932542976) (x469 1461501637330902918203684832716283019655932542975 x219))))
(define-fun x15 ((x219 Real) (x544 Real)) Bool (and (>= x544 0) (= x219 (+ (x469 1461501637330902918203684832716283019655932542975 x219) (* 1461501637330902918203684832716283019655932542976 x544)))))
(define-fun x375 ((x219 Real) (x161 Real)) Bool (and (x646 x219) (x52 x219) (x517 x219) (x665 x219) (x15 x219 x161)))
(define-fun x596 ((x219 Real) (x544 Real)) Bool (= (x469 x219 x544) (x469 x544 x219)))
(define-fun x27 ((x219 Real) (x544 Real)) Bool (and (<= 0 (x469 x219 x544)) (=> (>= x219 0) (>= x219 (x469 x219 x544))) (=> (>= x544 0) (>= x544 (x469 x219 x544)))))
(define-fun x201 ((x219 Real) (x544 Real)) Bool (and (x596 x219 x544) (x27 x219 x544)))
(define-fun x42 ((x219 Real) (x161 Real)) Bool (and (x201 x219 1461501637330902918203684832716283019655932542975) (x375 x219 x161)))
(define-fun x554 ((x219 Real)) Bool (= (x469 20282409603651670423947251286015 x219) (x469 20282409603651670423947251286015 (x469 20282409603651670423947251286015 x219))))
(define-fun x7 ((x219 Real)) Bool (=> (and (> 20282409603651670423947251286016 x219) (>= x219 0)) (= (x469 20282409603651670423947251286015 x219) x219)))
(define-fun x265 ((x219 Real)) Bool (=> (= (x469 20282409603651670423947251286015 x219) x219) (and (<= 0 x219) (> 20282409603651670423947251286016 x219))))
(define-fun x689 ((x219 Real)) Bool (=> (and (<= 20282409603651670423947251286016 x219) (> 40564819207303340847894502572032 x219)) (= (x469 20282409603651670423947251286015 x219) (- x219 20282409603651670423947251286016))))
(define-fun x176 ((x219 Real) (x544 Real)) Bool (and (= (+ (* 20282409603651670423947251286016 x544) (x469 20282409603651670423947251286015 x219)) x219) (<= 0 x544)))
(define-fun x211 ((x219 Real) (x161 Real)) Bool (and (x554 x219) (x689 x219) (x265 x219) (x176 x219 x161) (x7 x219)))
(define-fun x198 ((x219 Real) (x161 Real)) Bool (and (x211 x219 x161) (x201 x219 20282409603651670423947251286015)))
(define-fun x282 ((x219 Real)) Bool (= (x12 x219) (ite (> 10141204801825835211973625643008 (x469 x219 20282409603651670423947251286015)) (x469 x219 20282409603651670423947251286015) (+ 115792089237316195423570985008687907853269984645358154435805913583965878353920 (x469 x219 20282409603651670423947251286015)))))
(define-fun x704 ((x219 Real)) Bool (= (x469 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x469 115792089237316195423570985008687907853269984665640564039457584007913129639904 x219)) (x469 115792089237316195423570985008687907853269984665640564039457584007913129639904 x219)))
(define-fun x434 ((x219 Real)) Bool (=> (and (< x219 32) (<= 0 x219)) (= 0 (x469 115792089237316195423570985008687907853269984665640564039457584007913129639904 x219))))
(define-fun x549 ((x219 Real) (x544 Real) (x458 Real) (x398 Real)) Bool (and (<= 0 x458) (> 32 x544) (= (* 32 x458) (x469 115792089237316195423570985008687907853269984665640564039457584007913129639904 x219)) (>= x398 0) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x458) (= x219 (+ (* 32 x458) x544 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x398))) (<= 0 x544) (< x398 1)))
(define-fun x451 ((x219 Real) (x148 Real) (x710 Real) (x547 Real)) Bool (and (x549 x219 x148 x710 x547) (x704 x219) (x434 x219)))
(define-fun x385 ((x219 Real) (x148 Real) (x710 Real) (x547 Real)) Bool (and (x201 x219 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x451 x219 x148 x710 x547)))
(define-fun x227 ((x219 Real)) Bool (= (x469 1099511627775 x219) (x469 1099511627775 (x469 1099511627775 x219))))
(define-fun x222 ((x219 Real)) Bool (=> (and (>= x219 0) (> 1099511627776 x219)) (= x219 (x469 1099511627775 x219))))
(define-fun x247 ((x219 Real)) Bool (=> (= x219 (x469 1099511627775 x219)) (and (< x219 1099511627776) (<= 0 x219))))
(define-fun x614 ((x219 Real)) Bool (=> (and (<= 1099511627776 x219) (> 2199023255552 x219)) (= (- x219 1099511627776) (x469 1099511627775 x219))))
(define-fun x298 ((x219 Real) (x544 Real)) Bool (and (>= x544 0) (= x219 (+ (x469 1099511627775 x219) (* 1099511627776 x544)))))
(define-fun x49 ((x219 Real) (x161 Real)) Bool (and (x227 x219) (x614 x219) (x298 x219 x161) (x222 x219) (x247 x219)))
(define-fun x426 ((x219 Real) (x161 Real)) Bool (and (x49 x219 x161) (x201 x219 1099511627775)))
(define-fun x155 ((x219 Real)) Bool (= (x469 18446744073709551615 x219) (x469 18446744073709551615 (x469 18446744073709551615 x219))))
(define-fun x569 ((x219 Real)) Bool (=> (and (> 18446744073709551616 x219) (>= x219 0)) (= (x469 18446744073709551615 x219) x219)))
(define-fun x536 ((x219 Real)) Bool (=> (= (x469 18446744073709551615 x219) x219) (and (>= x219 0) (> 18446744073709551616 x219))))
(define-fun x652 ((x219 Real)) Bool (=> (and (<= 18446744073709551616 x219) (< x219 36893488147419103232)) (= (- x219 18446744073709551616) (x469 18446744073709551615 x219))))
(define-fun x64 ((x219 Real) (x544 Real)) Bool (and (>= x544 0) (= x219 (+ (* x544 18446744073709551616) (x469 18446744073709551615 x219)))))
(define-fun x443 ((x219 Real) (x161 Real)) Bool (and (x652 x219) (x155 x219) (x569 x219) (x64 x219 x161) (x536 x219)))
(define-fun x3 ((x219 Real) (x161 Real)) Bool (and (x443 x219 x161) (x201 x219 18446744073709551615)))
(define-fun x523 ((x608 Real)) Real (ite (= x608 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x532 x608)))
(define-fun x578 ((x608 Real)) Real (ite (= x608 0) x173 (x651 x608)))
(define-fun x650 ((x608 Real)) Real (ite (= x608 128) x173 (x454 x608)))
(define-fun x163 ((x608 Real)) Real (ite (= 128 x608) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x32 x608)))
(define-fun x699 ((x608 x58)) Real (ite (= x608 x41) x622 (x120 x608)))
(define-fun x62 ((x608 x58)) Real (ite (= x608 x174) x100 (x699 x608)))
(define-fun x99 ((x608 x58)) Real (ite (and x145 x648) (x62 x608) (x120 x608)))
(define-fun x234 ((x608 Real)) Real (ite (= x608 0) x504 (x77 x608)))
(define-fun x509 ((x608 Real)) Real (ite (= x608 128) x504 (x243 x608)))
(define-fun x473 ((x608 Real)) Real (ite (= 0 x608) x150 (x651 x608)))
(define-fun x529 ((x608 Real)) Real (ite (= x608 128) x150 (x454 x608)))
(define-fun x70 ((x608 Real)) Real (ite (= x608 0) x421 (x651 x608)))
(define-fun x636 ((x608 Real)) Real (ite (= 128 x608) x421 (x454 x608)))
(define-fun x670 ((x608 Real)) Real (ite (= x608 0) x656 (x651 x608)))
(define-fun x563 ((x608 Real)) Real (ite (= 128 x608) x656 (x454 x608)))
(define-fun x249 ((x608 x58)) Real (ite (= x608 x25) x690 (x98 x608)))
(define-fun x57 ((x608 x58)) Real (ite (= x608 x499) x579 (x249 x608)))
(define-fun x442 ((x608 Real)) Real (ite (= 0 x608) 1 (x556 x608)))
(define-fun x534 ((x608 Real)) Real (ite (and x278 x97) (x650 x608) (ite (and x396 x270) (x563 x608) (ite (and x180 x567) (x636 x608) (x529 x608)))))
(define-fun x570 ((x608 Real)) Real (ite (= x608 x537) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x534 x608)))
(define-fun x297 ((x608 Real)) Real (ite (= x428 x608) x376 (x570 x608)))
(define-fun x497 ((x608 Real)) Real (ite (= x537 x608) 1 (x640 x608)))
(define-fun x281 ((x608 x58)) Real (ite (= x608 x325) x139 (x168 x608)))
(define-fun x713 ((x608 x58)) Real (ite (= x608 x645) x693 (x281 x608)))
(define-fun x714 ((x608 Real)) Real (ite (= 0 x608) 1 (x556 x608)))
(define-fun x127 ((x608 Real)) Real (ite (= x537 x608) 1 (x640 x608)))
(define-fun x625 ((x608 Real)) Real (ite (= x608 0) x191 (x77 x608)))
(define-fun x616 ((x608 Real)) Real (ite (= 128 x608) x191 (x243 x608)))
(define-fun x329 ((x608 x58)) Real (ite (and x145 x648) (x98 x608) (ite (and x317 x361) (x98 x608) (x57 x608))))
(define-fun x56 ((x608 Real)) Real (ite (= x608 0) x204 (x77 x608)))
(define-fun x683 ((x608 Real)) Real (ite (= x608 128) x204 (x243 x608)))
(define-fun x565 ((x608 x58)) Real (ite (and x648 x145) (x168 x608) (ite (and x361 x317) (x713 x608) (x168 x608))))
(define-fun x573 ((x608 Real)) Real (ite (= x608 0) x412 (x77 x608)))
(define-fun x466 ((x608 Real)) Real (ite (= x608 128) x412 (x243 x608)))
(define-fun x250 ((x608 Real)) Real (ite (= 0 x608) 1 (x556 x608)))
(define-fun x698 ((x608 Real)) Real (ite (= x537 x608) 1 (x640 x608)))
(define-fun x688 ((x608 Real)) Real (ite (and x145 x648) (x698 x608) (ite (and x317 x361) (x127 x608) (x497 x608))))
(define-fun x416 ((x608 Real)) Real (ite (and x160 x606) (x509 x608) (ite (and x694 x662) (x466 x608) (ite (and x502 x225) (x683 x608) (x616 x608)))))
(define-fun x360 ((x219 Real)) Bool (=> (and (not (= 274184521717934524641157099916833587227 x219)) (not (= 204737060 x219)) (not (= x219 3253611544)) (not (= 20282409603651670423947251286016 x219)) (not (= 274184521717934524641157099916833587223 x219)) (not (= x219 1889567281)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x219)) (not (= x219 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (not (= 151187884 x219)) (not (= x219 826074471)) (not (= x219 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= 70124239 x219)) (not (= x219 3695885053)) (not (= x219 1099511627775)) (not (= x219 480214969)) (not (= x219 274184521717934524641157099916833587233)) (not (= 11269569 x219)) (not (= 10141204801825835211973625643007 x219)) (not (= 3119561463 x219)) (not (= x219 3638949393)) (not (= x219 2514000705)) (not (= x219 274184521717934524641157099916833587211)) (not (= 1208925819614629174706175 x219)) (not (= 3833100637 x219)) (not (= x219 2835717307)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x219)) (not (= x219 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 18446744073709551616 x219)) (not (= 98097205 x219)) (< 10000 x219) (not (= 20282409603651670423947251286015 x219)) (not (= 3795249780 x219)) (not (= 274184521717934524641157099916833587231 x219)) (not (= x219 18446744073709551615)) (not (= x219 2068668150)) (not (= x219 3889878717)) (not (= x219 1099511627776)) (not (= x219 1461501637330902918203684832716283019655932542975)) (not (= 274184521717934524641157099916833587235 x219)) (not (= 274184521717934524641157099916833587244 x219)) (not (= x219 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 950698303 x219)) (not (= 4033150093 x219))) (not ((_ is x429) (x9 x219)))))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x123 x447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x132 x333 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x135 x233 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x172 x333 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x202 x66 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x218 x200 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x233 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x262 x233 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x262 x588 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x268 x436 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x333 x132 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x333 x172 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x399 x351 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x436 x53 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x439 x482 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x447 x123 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x447 x66 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x464 x399 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x482 x439 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x482 x598 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x491 x93 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x588 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x598 x482 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x600 x66 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x66 x202 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x66 x447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x66 x600 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x669 x655 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x696 x692 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x93 x491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233 x93 x692 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x123 x447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x132 x333 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x135 x233 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x172 x333 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x202 x66 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x218 x200 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x233 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x262 x233 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x262 x588 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x268 x436 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x333 x132 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x333 x172 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x399 x351 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x436 x53 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x439 x482 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x447 x123 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x447 x66 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x464 x399 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x482 x439 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x482 x598 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x491 x93 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x588 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x598 x482 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x600 x66 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x66 x202 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x66 x447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x66 x600 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x669 x655 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x696 x692 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x93 x491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692 x93 x692 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)))
(assert (axiom_frac_bound x229 x610))
(assert (axiom_frac_zero x229 x610 x123 x447 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x132 x333 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x135 x233 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x172 x333 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x202 x66 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x218 x200 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x233 x262 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x262 x233 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x262 x588 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x268 x436 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x333 x132 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x333 x172 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x399 x351 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x436 x53 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x439 x482 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x447 x123 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x447 x66 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x464 x399 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x482 x439 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x482 x598 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x491 x93 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x588 x262 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x598 x482 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x600 x66 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x66 x202 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x66 x447 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x66 x600 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x669 x655 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x696 x692 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x93 x491 (uninterp_frac x229 x610)))
(assert (axiom_frac_zero x229 x610 x93 x692 (uninterp_frac x229 x610)))
(assert (axiom_frac_bound x433 x586))
(assert (axiom_frac_zero x433 x586 x123 x447 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x132 x333 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x135 x233 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x172 x333 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x202 x66 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x218 x200 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x233 x262 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x262 x233 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x262 x588 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x268 x436 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x333 x132 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x333 x172 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x399 x351 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x436 x53 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x439 x482 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x447 x123 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x447 x66 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x464 x399 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x482 x439 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x482 x598 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x491 x93 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x588 x262 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x598 x482 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x600 x66 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x66 x202 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x66 x447 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x66 x600 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x669 x655 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x696 x692 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x93 x491 (uninterp_frac x433 x586)))
(assert (axiom_frac_zero x433 x586 x93 x692 (uninterp_frac x433 x586)))
(assert (axiom_frac_bound x436 x233))
(assert (axiom_frac_zero x436 x233 x123 x447 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x132 x333 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x135 x233 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x172 x333 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x202 x66 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x218 x200 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x233 x262 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x262 x233 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x262 x588 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x268 x436 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x333 x132 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x333 x172 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x399 x351 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x436 x53 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x439 x482 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x447 x123 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x447 x66 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x464 x399 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x482 x439 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x482 x598 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x491 x93 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x588 x262 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x598 x482 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x600 x66 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x66 x202 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x66 x447 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x66 x600 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x669 x655 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x696 x692 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x93 x491 (uninterp_frac x436 x233)))
(assert (axiom_frac_zero x436 x233 x93 x692 (uninterp_frac x436 x233)))
(assert (axiom_frac_bound x436 x692))
(assert (axiom_frac_zero x436 x692 x123 x447 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x132 x333 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x135 x233 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x172 x333 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x202 x66 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x218 x200 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x233 x262 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x262 x233 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x262 x588 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x268 x436 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x333 x132 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x333 x172 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x399 x351 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x436 x53 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x439 x482 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x447 x123 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x447 x66 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x464 x399 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x482 x439 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x482 x598 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x491 x93 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x588 x262 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x598 x482 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x600 x66 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x66 x202 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x66 x447 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x66 x600 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x669 x655 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x696 x692 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x93 x491 (uninterp_frac x436 x692)))
(assert (axiom_frac_zero x436 x692 x93 x692 (uninterp_frac x436 x692)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x107))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x138))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x189))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x2))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x216))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x236))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x262))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x264))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x31))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x321))
(assert (axiom_int_approximation x322))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x347))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x388))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x453))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x475))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x477))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x482))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x516))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x53))
(assert (axiom_int_approximation x531))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x559))
(assert (axiom_int_approximation x560))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x588))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x631))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x641))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x693))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x85))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x96))
(assert (x159 x615))
(assert (x159 x321))
(assert (x159 x585))
(assert (= (x429 3253611544) (x9 3253611544)))
(assert (x159 x190))
(assert (x159 x637))
(assert (x159 x630))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x506 (x429 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (= (x506 (x429 18446744073709551616)) 18446744073709551616))
(assert (= (x506 (x9 274184521717934524641157099916833587211)) 274184521717934524641157099916833587211))
(assert (x159 x357))
(assert (x159 x642))
(assert (= (and (not x145) x648) x361))
(assert (= (=> (= x270 (= x370 274184521717934524641157099916833587227)) (and (=> (and x270 (= 274184521717934524641157099916833587211 x631) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x656) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2) (= x327 (x284 (- x441 4))) (= x411 1889567281) (= x334 (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0)) (= x175 (x634 (x9 274184521717934524641157099916833587227))) (= 36 x441) (not x188) (not (= 826074471 x411)) (= x656 (x168 x334)) (<= 0 x656) (= x188 (or (and (> 32 x327) (= true (<= x327 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x327 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x441 4)) (not (< x411 826074471)) (= 36 x441) (< 0 x175) (= x617 32) (= 1 x344)) x65) (=> (not x270) x54))) x167))
(assert (x159 x108))
(assert (= 2835717307 (x506 (x429 2835717307))))
(assert (x3 x417 x687))
(assert (x159 x263))
(assert (x159 x200))
(assert (x159 x158))
(assert (x159 x445))
(assert (x159 x206))
(assert (x147 x236))
(assert (x159 x23))
(assert (x159 x620))
(assert (x159 x676))
(assert (x159 x428))
(assert (x159 x338))
(assert (x159 x381))
(assert (x159 x275))
(assert (x159 x618))
(assert (x159 x511))
(assert (x159 x204))
(assert (x198 x541 x264))
(assert (= (x506 (x429 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (x147 x394))
(assert (= 3889878717 (x506 (x429 3889878717))))
(assert (x147 x85))
(assert (x159 x373))
(assert (= (x506 (x9 x291)) x291))
(assert (x159 x256))
(assert (= (or (and x214 x128) (and x662 x694) (and x160 x606) (and x225 x502)) x242))
(assert (= (x506 (x429 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (x159 x542))
(assert (x159 x55))
(assert (x147 x612))
(assert (= true x18))
(assert (x159 x152))
(assert (= (x9 3695885053) (x429 3695885053)))
(assert (= (x429 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x9 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x159 x391))
(assert (x159 x135))
(assert (x159 x274))
(assert (x159 x706))
(assert (x159 x607))
(assert (x42 x356 x82))
(assert (x159 x510))
(assert (x159 x595))
(assert (x159 x142))
(assert (= (and (not x435) x170) x561))
(assert (x159 x44))
(assert (x159 x374))
(assert (x159 x667))
(assert (x159 x81))
(assert (x147 x13))
(assert (x159 x386))
(assert (= 274184521717934524641157099916833587231 (x506 (x9 274184521717934524641157099916833587231))))
(assert (=> (< (- x291 1) 10000) (= (x429 x291) (x9 x291))))
(assert (x159 x364))
(assert (= (x429 1099511627775) (x9 1099511627775)))
(assert (= (=> (= (= 274184521717934524641157099916833587223 x370) x180) (and (=> (and (= x595 (x284 (- x266 4))) (<= x421 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x595) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x595) true) (> 32 x595))) x472) (= 1889567281 x620) (< 0 x602) (not (= x620 826074471)) (= 36 x266) (= (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0) x271) (not (> 826074471 x620)) (not x472) (= 1 x344) (not (< x266 4)) (= 36 x266) (= x421 (x98 x271)) (= x617 32) (= (x634 (x9 274184521717934524641157099916833587223)) x602) (<= 0 x421) x180 (= x564 274184521717934524641157099916833587211) (= x671 50942633119752846454219349998365661925608737367104304655302372697894809501696)) x65) (=> (not x180) x47))) x54))
(assert (x159 x332))
(assert (x360 274184521717934524641157099916833587227))
(assert (x147 x267))
(assert (x159 x406))
(assert (x159 x330))
(assert (x159 x622))
(assert (x159 x708))
(assert (x147 x356))
(assert (x147 x379))
(assert (x147 x390))
(assert (= (x9 274184521717934524641157099916833587211) (x429 274184521717934524641157099916833587211)))
(assert (x159 x638))
(assert (x159 x261))
(assert (= (x9 20282409603651670423947251286015) (x429 20282409603651670423947251286015)))
(assert (x147 x347))
(assert (x159 x379))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x506 (x429 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (x429 20282409603651670423947251286016) (x9 20282409603651670423947251286016)))
(assert (x3 x293 x493))
(assert (x159 x494))
(assert (x159 x389))
(assert (= (x9 1099511627776) (x429 1099511627776)))
(assert (x159 x237))
(assert (x282 x476))
(assert (x159 x293))
(assert (x360 x291))
(assert (x147 x637))
(assert (= x65 (=> (and (= x431 (x284 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x465))) (>= x93 0) (< x692 20282409603651670423947251286016) (= x197 x470) (not (= x344 0)) (>= x262 0) (= x663 (ite (or (and (> 0 x465) (= (<= x465 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x465)) 1 0)) (= (x279 (+ 68 x537)) x307) (= (x469 x448 x85) x223) (= 0 x478) (= (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x516) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x59)) (< x516 x59)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x59) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x516))) 1 0) x553) (= x478 (x469 x154 x553)) (not (< 10141204801825835211973625643007 x635)) (= x531 (x284 (- x59 x516))) (= x28 (x12 x541)) (< (* x669 x655) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite (or (> x28 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x28 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x28 0))) 1 0) x448) (not (< 10141204801825835211973625643007 x629)) (= (* x233 x262) x331) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x618) (and (< x618 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x618) true)))) (= (x469 x663 x129) x131) (= (x12 x197) x310) (= (x279 (+ x28 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x374) (= x516 (x534 128)) (= x428 (x279 (+ 132 x61))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x218 x200)) (= x465 (x284 (- x516 x28))) (<= x233 20282409603651670423947251286015) (= x615 0) (= x585 (x279 (+ x617 31))) (= x615 (x469 x657 x126)) (= (ite (not x185) 1 0) x657) (= (ite (not x393) 1 0) x154) (= x705 (x469 1461501637330902918203684832716283019655932542975 x488)) (= x223 0) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x465) (and (> 0 x465) (= (<= x465 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x185) (<= x262 18446744073709551615) (= x131 0) (not (or (> x617 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x617 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x617) true)))) (not (< x618 x580)) (<= x93 18446744073709551615) (= (x279 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819968 x28)) x59) (< x233 20282409603651670423947251286016) (= (x279 (+ 36 x537)) x113) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x516)) (= (x469 1461501637330902918203684832716283019655932542975 x267) x376) (= (ite (or (and (< x431 x310) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x431) (<= x310 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x431 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x310 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x126) (>= x692 0) (= (x279 (+ x61 128)) x537) (= x85 (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x374) (<= x516 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x374 x516) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x516) (<= x374 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= (x469 115792089237316195423570985008687907853269984665640564039457584007913129639904 x585) x61) (= x145 (= x705 274184521717934524641157099916833587231)) (<= x692 20282409603651670423947251286015) (= x618 (x279 (+ x310 x465))) (= (x284 (- x307 x537)) x609) (< x93 18446744073709551616) (= (* x93 x692) x470) (= (x469 20282409603651670423947251286015 x541) x635) (= x393 (or (and (< x28 0) (= true (<= x28 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x28))) (<= 0 x233) (= x541 x331) (> 18446744073709551616 x262) (= x129 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x310)) (and (> x531 x310) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531) (<= x310 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= (x469 20282409603651670423947251286015 x197) x629)) (and (=> (and (not (= x124 1889567281)) (= x609 x322) (= (x634 (x9 274184521717934524641157099916833587231)) x251) (not (< x124 826074471)) (= x100 (+ x475 x572)) (= x152 x580) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x682) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x75) (= (> x152 x136) x568) (= x682 x475) (= x41 (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0)) (= x446 x572) (= (x120 x60) x136) (<= 0 x136) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x359) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x359)) (> 64 x359))) x46) (= x359 (x284 (- x322 4))) (>= x682 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x136) (not (= 2514000705 x124)) (= x138 x34) (= x34 x376) (< 0 x251) x145 (>= 1461501637330902918203684832716283019655932542975 x34) (= (x203 (x9 x34) (x429 1) 0) x174) (= x60 (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0)) (= x414 (x203 (x9 x34) (x429 1) 0)) (not (= 826074471 x124)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x446 x682)) (not x568) (= x152 x446) (= 32 x207) (= 2835717307 x124) (= (x699 x414) x682) (not x46) (= x181 274184521717934524641157099916833587211) (= x432 1) (= 274184521717934524641157099916833587211 x29) (= (x284 (- x136 x152)) x622) (not (< x322 4)) (= 68 x322)) x566) (=> (not x145) x460)))))
(assert (x159 x619))
(assert (x159 x462))
(assert (x159 x582))
(assert (x159 x193))
(assert (= (x506 (x429 1889567281)) 1889567281))
(assert (x159 x21))
(assert (x159 x10))
(assert (x159 x154))
(assert (x159 x413))
(assert (x198 x476 x603))
(assert (x159 x53))
(assert (x159 x644))
(assert (x159 x575))
(assert (x159 x602))
(assert (x159 x123))
(assert (x159 x197))
(assert (= (x506 (x9 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x159 x446))
(assert (x159 x335))
(assert (x198 x237 x521))
(assert (= x507 (=> (= (= 274184521717934524641157099916833587244 x450) x128) (and (=> (not x128) x691) (=> (and (not (> 4 x382)) (= (x634 (x9 274184521717934524641157099916833587244)) x456) x128 (= x487 (x203 (x9 274184521717934524641157099916833587211) (x429 5) 0)) (= x390 (x12 x166)) (or (and (= x10 0) (not x639)) (and (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x390) true) (> 0 x390)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x390)) x457) (= (x469 20282409603651670423947251286015 x390) x439) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x482 x439)) x639 (<= 0 x482) (= x10 x404) (< x482 18446744073709551616) (<= x482 18446744073709551615) (= (* x439 x482) x11) (not x457) (= x404 x11))) (= x166 (x597 x487)) (= x246 274184521717934524641157099916833587211) (= x191 (x469 20282409603651670423947251286015 x10)) (= 1889567281 x560) (= (x284 (- x382 4)) x462) (< x166 20282409603651670423947251286016) (= 36 x382) (<= x166 20282409603651670423947251286015) (not x146) (= x382 36) (= 1 x367) (= (and (> x390 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x390))) x639) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x462) true) (< x462 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x462)) x146) (< x560 3119561463) (= 32 x332) (not (> 1889567281 x560)) (< 0 x456) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x607) (<= 0 x166)) x300)))))
(assert (x201 x708 x63))
(assert (x159 x459))
(assert (x159 x621))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x506 (x429 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x159 x257))
(assert (x159 x384))
(assert (x147 x448))
(assert (= (and (not x270) x396) x567))
(assert (= (x429 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x9 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x159 x518))
(assert (x159 x132))
(assert (x147 x386))
(assert (x159 x86))
(assert (x147 x661))
(assert (= 950698303 (x506 (x429 950698303))))
(assert (x159 x351))
(assert (x201 x637 x630))
(assert (x159 x100))
(assert (= (x9 4033150093) (x429 4033150093)))
(assert (x159 x417))
(assert (= x566 (=> (and (= (x284 (- x257 x388)) x672) (<= x591 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x363) (>= x363 0) (< 0 x574) (not (> 3889878717 x273)) (or (and (>= 20282409603651670423947251286015 x233) (or (and (= (x284 (- x447 x202)) x351) (= x164 x336) (= x256 x483) (= x392 x195) (< (+ x256 x582) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x452 x179) (= x582 x106) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x452 x164)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x333 x132)) (= x483 (* x202 x66)) (= x195 (* x132 x333)) (= x132 (+ x336 x179)) (= x79 x256) x538 (= x164 (+ x106 x79)) (= (* x399 x351) x423) (= x392 x386) (= x452 x423) (< (* x202 x66) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> x202 x447)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x399 x351))) (and (= x162 x190) (= x543 x582) (not x538) (< (+ x582 x190) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x190 x296) (= (+ x543 x162) x172) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x172 x333)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x447 x66)) (= x87 x81) (= x296 (* x66 x447)) (= x81 x386) (= x87 (* x333 x172)))) (= 0 x485) (>= x262 0) (= x237 x550) (>= 18446744073709551615 x93) (= x684 (< x233 x5)) (>= 20282409603651670423947251286015 x692) (= (x469 20282409603651670423947251286015 x551) x433) (>= x692 0) (> 20282409603651670423947251286016 x233) (>= x262 0) (= (x469 18446744073709551615 x522) x406) (= x283 (x469 18446744073709551615 x407)) (< (* x93 x491) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x469 20282409603651670423947251286015 x379) x586) (< x93 18446744073709551616) (= x379 x165) (= x659 x551) (>= 18446744073709551615 x407) (< x262 18446744073709551616) (< x93 18446744073709551616) (= x268 (x469 18446744073709551615 x386)) (= x165 (* x233 x262)) (= (ite (not x328) 1 0) x208) (= x637 (ite (not x341) 1 0)) (<= 0 x692) (= (x469 x208 x347) x485) (or (and x309 (= x600 0)) (and (= x55 x600) (not x309) (= (uninterp_mod x433 x586) x48) (= x48 0) (= x55 (- (/ x433 x586) (uninterp_frac x433 x586))))) (<= x233 20282409603651670423947251286015) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x436 x53)) (= x353 (x469 18446744073709551615 x349)) (= x587 x93) (= x299 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692))) (>= 18446744073709551615 x262) (= (* x93 x692) x659) (= (= 0 x233) x328) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x353 x93)) (= x293 x308) (= x289 (* x491 x93)) (< (* x123 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (or (and (>= x233 0) (= (uninterp_mod x436 x233) x510) (<= x417 18446744073709551615) (= x357 (- (/ x436 x233) (uninterp_frac x436 x233))) (<= 0 x354) (= (x469 18446744073709551615 x357) x116) (> x233 0) (<= x354 18446744073709551615) (= (x469 18446744073709551615 x417) x315) (< x233 20282409603651670423947251286016) (= 0 x510) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x116 x354)) (= x453 x116) (not x684) (= x354 x358) (< x354 18446744073709551616) (<= x233 20282409603651670423947251286015) (= (+ x453 x358) x417)) x684) (= x409 (* x436 x53)) (>= x262 0) (= x425 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233))) (= (ite (< x362 x93) 1 0) x276) (= x527 (* x268 x436)) (= (* x93 x692) x550) (< x233 20282409603651670423947251286016) (> 20282409603651670423947251286016 x233) (= (= 0 x610) x24) (= x333 x20) (<= x692 20282409603651670423947251286015) (= (ite (not x371) 1 0) x490) (<= x262 18446744073709551615) (= x654 (< x202 x600)) (= x96 (x469 18446744073709551615 x407)) (<= 0 x93) (<= 0 x262) (= (+ x558 x455) x407) (= x303 x455) (<= x262 18446744073709551615) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233)) x599) (= x133 0) (= (x469 18446744073709551615 x293) x303) (>= x93 0) (= (* x447 x123) x20) (= x306 (* x262 x233)) (= x381 (ite (< x599 x262) 1 0)) (= x289 x349) (not (> x38 1)) (= x221 (= 0 x233)) (<= 0 x692) (= x186 (> x5 x692)) (<= x93 18446744073709551615) (= x558 x262) (= (x469 x490 x276) x397) (= (ite (> x93 x299) 1 0) x630) (= x409 x491) (= x610 (x469 20282409603651670423947251286015 x492)) (< x262 18446744073709551616) (>= 18446744073709551615 x262) (= 0 x295) (or (and x24 (= x447 0)) (and (= (- (/ x229 x610) (uninterp_frac x229 x610)) x16) (not x24) (= 0 x189) (= (uninterp_mod x229 x610) x189) (= x16 x447))) (= x309 (= 0 x586)) (>= 18446744073709551615 x93) (= (x469 x109 x381) x295) (< x692 20282409603651670423947251286016) x78 (= (ite (not x221) 1 0) x109) (= (x469 20282409603651670423947251286015 x237) x229) (<= 0 x93) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x268 x436)) (= x588 x527) (>= 20282409603651670423947251286015 x692) (or x186 (and (= (x469 18446744073709551615 x612) x231) (= x524 (+ x501 x449)) (= x313 x501) (= x612 (- (/ x436 x692) (uninterp_frac x436 x692))) (<= x524 18446744073709551615) (= x50 0) (< 0 x692) (< (+ x313 x231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 20282409603651670423947251286016 x692) (= (uninterp_mod x436 x692) x50) (> 18446744073709551616 x313) (>= x692 0) (= x642 (x469 18446744073709551615 x524)) (<= x692 20282409603651670423947251286015) (= x449 x231) (not x186) (>= x313 0) (>= 18446744073709551615 x313))) (= (ite (> x262 x425) 1 0) x347) (= x133 (x469 x637 x630)) (<= x522 18446744073709551615) (> 18446744073709551616 x262) (>= x233 0) (= x123 (x284 (- 1 x38))) (<= 0 x93) (= x522 (+ x587 x593)) (<= 0 x233) (= x492 x306) (>= 18446744073709551615 x93) (< x692 20282409603651670423947251286016) (= x371 (= x692 0)) (= x538 (> x447 x202)) (= x696 x406) (= x135 x283) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692)) x362) (> 18446744073709551616 x93) (= x353 x593) (= (x469 18446744073709551615 x522) x395) (= (* x262 x588) x308) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x588 x262)) (>= x233 0) (< x262 18446744073709551616) (= (x469 18446744073709551615 x394) x53) (= x397 0) (> 20282409603651670423947251286016 x692) (or (and (= x464 (x284 (- x600 x202))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x582 x215)) (= x182 x215) (< (* x464 x399) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x394 x555) (= (* x464 x399) x92) (= x405 x215) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x66 x202)) x654 (= x707 x685) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x533 x685)) (= x582 x112) (= x405 (* x202 x66)) (= x533 x681) (= x685 x92) (= (+ x707 x681) x555) (= x533 (+ x112 x182)) (not (> x202 x600))) (and (= (* x600 x66) x415) (= x415 x526) (= x394 x272) (= x91 x526) (= x69 x582) (< (+ x582 x526) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x69 x91) x272) (not x654) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x66 x600)))) (= x341 (= 0 x692)) (>= 20282409603651670423947251286015 x233) (< x93 18446744073709551616) (< (+ x262 x303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (= x93 x696) (not x78) (= x262 x135))) (not (= 0 x432)) (<= 0 x259) (= (> x436 0) x78) (= x240 (x688 x537)) (>= 1461501637330902918203684832716283019655932542975 x259) (= x378 (ite x571 1 0)) (not (< x273 3253611544)) (= x240 x378) (< x388 1099511627776) (< 0 x240) (= (not x143) x571) (= x238 x621) (not (> 3638949393 x273)) (= (x634 (x9 274184521717934524641157099916833587211)) x574) (>= x388 0) (= x257 x495) (<= 0 x591) (not (> x388 x495)) (not (= 3889878717 x273)) (= x591 x590) (= x400 0) (= 4033150093 x273) (>= 1099511627775 x388) (= x143 (= x240 0)) (= x400 x384) (= x238 x363) (< x495 1099511627776) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x207)) (> 32 x207)) (> x207 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x436 (x469 1099511627775 x672)) (not (< x273 2068668150))) x530)))
(assert (x159 x456))
(assert (x159 x136))
(assert (x159 x496))
(assert (x3 x522 x505))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x506 (x429 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x159 x537))
(assert (x147 x357))
(assert (= 3695885053 (x506 (x429 3695885053))))
(assert (x147 x237))
(assert (x159 x656))
(assert (x159 x267))
(assert (x147 20282409603651670423947251286015))
(assert (= (x429 1889567281) (x9 1889567281)))
(assert (x147 x349))
(assert (= (x506 (x429 3253611544)) 3253611544))
(assert (= x396 (and (not x97) x278)))
(assert (x147 x154))
(assert true)
(assert (x159 x273))
(assert (x159 x233))
(assert (x159 x612))
(assert (= (x429 98097205) (x9 98097205)))
(assert (x147 x417))
(assert (= 98097205 (x506 (x429 98097205))))
(assert (x159 x591))
(assert (x159 x295))
(assert (= x427 (=> (and (<= 0 x692) (>= 1208925819614629174706175 x239) (= x676 x153) (>= x262 0) (<= 0 x354) (>= x365 0) (<= 0 x514) (>= 255 x68) (>= x330 0) (= x366 274184521717934524641157099916833587211) (<= 0 x313) (<= 0 x171) (<= 0 x239) (>= x90 0) (= (x628 (x9 274184521717934524641157099916833587211)) x330) (<= 0 x677) (<= x262 18446744073709551615) (<= x702 18446744073709551615) (<= 0 x286) (<= x313 18446744073709551615) (= (x628 (x9 274184521717934524641157099916833587244)) x611) (= x290 (x628 (x9 274184521717934524641157099916833587227))) x244 (>= x388 0) (= (x628 (x9 274184521717934524641157099916833587231)) x350) (<= x388 1099511627775) (>= x233 0) (<= 0 x350) x245 (= (< 0 (x634 (x9 274184521717934524641157099916833587235))) x245) (>= 18446744073709551615 x482) (= x644 (x628 (x9 274184521717934524641157099916833587223))) (>= 1208925819614629174706175 x338) (>= 1208925819614629174706175 x700) (= x676 x117) (= (< 0 (x634 (x9 274184521717934524641157099916833587233))) x210) (= x508 x206) x589 (<= 0 x489) (<= x508 1461501637330902918203684832716283019655932542975) (= x318 (x628 (x9 274184521717934524641157099916833587235))) (>= 20282409603651670423947251286015 x171) (= x304 (> (x634 (x9 274184521717934524641157099916833587227)) 0)) x210 (>= 1208925819614629174706175 x514) (>= 255 x677) (>= 20282409603651670423947251286015 x233) x673 (>= 255 x577) (<= x93 18446744073709551615) (= x619 x641) (>= 18446744073709551615 x354) (>= 1461501637330902918203684832716283019655932542975 x286) (<= 0 x290) (>= 18446744073709551615 x302) x304 x545 (>= x68 0) (<= 0 x302) (<= x90 18446744073709551615) (>= x318 0) (= x244 (> (x634 (x9 274184521717934524641157099916833587211)) 0)) (= x589 (not (= x641 274184521717934524641157099916833587211))) (<= 0 x577) (= x511 x619) (>= x700 0) (<= 0 x482) (<= x692 20282409603651670423947251286015) (<= 0 x702) (>= x93 0) (<= 0 x619) (<= 0 x611) (= (> (x634 (x9 274184521717934524641157099916833587244)) 0) x673) (= (> (x634 (x9 274184521717934524641157099916833587231)) 0) x520) (>= 1461501637330902918203684832716283019655932542975 x619) (= x365 (x628 (x9 274184521717934524641157099916833587233))) (<= 0 x627) (>= x437 0) (<= x437 20282409603651670423947251286015) (<= 0 x508) (= x545 (< 0 (x634 (x9 274184521717934524641157099916833587223)))) x520 (>= x644 0) (>= 1099511627775 x627) (= x590 x286) (= x511 x267) (<= x489 255) (<= 0 x338)) x67)))
(assert (x159 x51))
(assert (=> (> (+ 10000 1) x34) (= (x9 x34) (x429 x34))))
(assert (x159 x365))
(assert (x201 x154 x553))
(assert (= x648 (or (and x396 x270) (and x278 x97) (and x115 x141) (and x180 x567))))
(assert (x159 x551))
(assert (x159 x617))
(assert (x159 x354))
(assert (x147 x630))
(assert (x159 x191))
(assert (x159 x599))
(assert (x159 x356))
(assert (x159 x299))
(assert (x159 x471))
(assert (x159 x432))
(assert (x159 x447))
(assert (x159 x702))
(assert (x159 x223))
(assert (= (x506 (x429 10141204801825835211973625643007)) 10141204801825835211973625643007))
(assert (= (x506 (x429 57896044618658097711785492504343953926634992332820282019728792003956564819968)) 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x159 x641))
(assert (x159 x324))
(assert (= (x506 (x429 3638949393)) 3638949393))
(assert (x159 x107))
(assert (= x18 x278))
(assert (x42 x267 x252))
(assert (x159 x390))
(assert (= (x429 3889878717) (x9 3889878717)))
(assert (x3 x357 x711))
(assert (x159 x119))
(assert (x159 x50))
(assert (x159 x333))
(assert (x159 x131))
(assert (x159 x655))
(assert (x42 x488 x444))
(assert (x159 x495))
(assert (x201 x301 x13))
(assert (x159 x590))
(assert (= (x9 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x429 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x280 true))
(assert (x159 x407))
(assert (x159 x504))
(assert (x159 x408))
(assert (x159 x113))
(assert (x385 x585 x594 x624 x102))
(assert (x159 x491))
(assert (x159 x276))
(assert (= (x506 (x429 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x198 x369 x484))
(assert (= (x9 2835717307) (x429 2835717307)))
(assert (= (and (not x225) x502) x214))
(assert (x159 x480))
(assert (x198 x373 x94))
(assert (x147 x129))
(assert (x159 x149))
(assert (= (x506 (x429 480214969)) 480214969))
(assert (x159 x514))
(assert (= (=> (= (= 274184521717934524641157099916833587223 x450) x225) (and (=> (not x225) x507) (=> (and (= 36 x26) (< 0 x494) (= x387 (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0)) x225 (<= 0 x204) (= 32 x332) (= 274184521717934524641157099916833587211 x413) (= x204 (x329 x387)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x204) (not (< x122 826074471)) (= (x284 (- x26 4)) x6) (not (< x26 4)) (= x576 (or (and (> 32 x6) (= (<= x6 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x6 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x634 (x9 274184521717934524641157099916833587223)) x494) (= x367 1) (= 36 x26) (not (= 826074471 x122)) (not x576) (= 1889567281 x122) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x477)) x300))) x72))
(assert (x159 x433))
(assert (= 3119561463 (x506 (x429 3119561463))))
(assert (x3 x524 x114))
(assert (x159 x692))
(assert (x159 x322))
(assert (x159 x217))
(assert (x159 x368))
(assert (x147 x672))
(assert (x159 x399))
(assert (x360 x321))
(assert (x159 x631))
(assert (x159 x349))
(assert (x159 x410))
(assert (x147 x369))
(assert (x159 x422))
(assert (x159 x627))
(assert (x159 x586))
(assert (x159 x38))
(assert (x159 x104))
(assert (x159 x240))
(assert (=> (> (+ 10000 1) x321) (= (x429 x321) (x9 x321))))
(assert (x159 x508))
(assert (x159 x315))
(assert (x159 x392))
(assert (= 274184521717934524641157099916833587244 (x506 (x9 274184521717934524641157099916833587244))))
(assert (x159 x672))
(assert (x159 x482))
(assert (= (x429 274184521717934524641157099916833587235) (x9 274184521717934524641157099916833587235)))
(assert (x201 x448 x85))
(assert (= (x429 10141204801825835211973625643007) (x9 10141204801825835211973625643007)))
(assert (x159 x34))
(assert (x159 x489))
(assert (= (or (and x317 x361) (and x170 x435) (and x145 x648)) x503))
(assert (x198 x551 x35))
(assert (x159 x370))
(assert (x159 x215))
(assert (x159 x562))
(assert (x159 x286))
(assert (x3 x386 x194))
(assert (x159 x339))
(assert (x159 x452))
(assert (x159 x382))
(assert (= (x506 (x429 204737060)) 204737060))
(assert (x159 x679))
(assert (x147 x197))
(assert (x159 x584))
(assert (= 274184521717934524641157099916833587244 (x506 (x429 274184521717934524641157099916833587244))))
(assert (x159 x310))
(assert (x159 x436))
(assert (x147 x492))
(assert (= (x506 (x9 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x159 x311))
(assert (x159 x164))
(assert (x159 x649))
(assert (= x321 (x506 (x9 x321))))
(assert (x159 x404))
(assert (x159 x555))
(assert (= (x506 (x429 18446744073709551615)) 18446744073709551615))
(assert (x159 x318))
(assert (x159 x700))
(assert (x159 x412))
(assert (x159 x492))
(assert (x159 x189))
(assert (x159 x218))
(assert (x159 x359))
(assert (x159 x255))
(assert (x360 274184521717934524641157099916833587235))
(assert (x159 x83))
(assert (x159 x411))
(assert (x282 x197))
(assert (x198 x10 x224))
(assert (= (x506 (x429 1099511627775)) 1099511627775))
(assert (x147 x585))
(assert (x159 x678))
(assert (= x242 x372))
(assert (x159 x557))
(assert (x159 x686))
(assert (x159 x262))
(assert (x159 x400))
(assert (x159 x347))
(assert (= x592 (=> (= x435 (= x705 274184521717934524641157099916833587223)) (and (=> (not x435) x377) (=> (and (not x305) (= x263 (x284 (- x39 4))) (not (= x674 1889567281)) (<= 0 x335) (= x84 (x98 x613)) (= x25 (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0)) (= x321 x376) x435 (= 1 x432) (= x335 x486) (= x480 (x634 (x9 274184521717934524641157099916833587223))) (= x207 32) (not (= x674 826074471)) (= x474 274184521717934524641157099916833587211) (= x499 (x203 (x9 x321) (x429 1) 0)) (= x71 (> x557 x84)) (= x39 x609) (= (+ x486 x666) x579) (<= x321 1461501637330902918203684832716283019655932542975) (> x480 0) (= x557 x542) (not (< x39 4)) (not x71) (= x410 x321) (= x542 x666) (= 2835717307 x674) (<= x335 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x335 x542)) (= x613 (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0)) (= x339 274184521717934524641157099916833587211) (<= 0 x84) (= x305 (or (> x263 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x263 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x263)))) (not (= 2514000705 x674)) (= (x284 (- x84 x557)) x690) (= x525 (x203 (x9 x321) (x429 1) 0)) (not (> 826074471 x674)) (= 68 x39) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x125) (= x580 x557) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x84) (= (x249 x525) x335)) x566)))))
(assert (= (x506 (x9 x34)) x34))
(assert (x198 x390 x675))
(assert (x159 x588))
(assert (= 274184521717934524641157099916833587223 (x506 (x9 274184521717934524641157099916833587223))))
(assert (x159 x580))
(assert (x159 x93))
(assert (= (x429 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x9 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x429 18446744073709551615) (x9 18446744073709551615)))
(assert (x201 x661 x196))
(assert (x147 x373))
(assert (x159 x705))
(assert (x159 x553))
(assert (= (x506 (x429 2514000705)) 2514000705))
(assert (= x691 true))
(assert (= (x506 (x429 151187884)) 151187884))
(assert (not x427))
(assert (= (x429 151187884) (x9 151187884)))
(assert (x159 x661))
(assert (x159 x260))
(assert (= x14 (and (not x141) x115)))
(assert (x159 x609))
(assert (x360 274184521717934524641157099916833587231))
(assert (x147 x63))
(assert (x159 x202))
(assert (x159 x230))
(assert (x159 x285))
(assert (x159 x268))
(assert (x159 x116))
(assert (x159 x464))
(assert (x159 x251))
(assert (= (x506 (x429 1208925819614629174706175)) 1208925819614629174706175))
(assert (= (x9 1461501637330902918203684832716283019655932542975) (x429 1461501637330902918203684832716283019655932542975)))
(assert (x147 x663))
(assert (x147 x276))
(assert (x159 x109))
(assert (x159 x138))
(assert (x159 x124))
(assert (x159 x16))
(assert (x159 x266))
(assert (= x300 (=> (and (= x546 (x279 (+ x324 x438))) (= x355 (* x696 x692)) (= (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x51) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324)) (> x324 x51)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324) (> x51 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x326) (= x368 x355) (< (* x135 x233) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x135 x233) x680) (= (x12 x368) x324) (not (< 10141204801825835211973625643007 x31)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x696 x692)) (= x13 (ite (or (and (< x324 x584) (= (<= x324 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x584 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x324 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x584 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x196 (ite (or (and (> x226 x255) (= (<= x255 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x226 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x255 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x226))) 1 0)) (= x255 (x416 128)) (<= x692 20282409603651670423947251286015) (= x638 0) (= x584 (x284 (- x226 x255))) (<= 0 x135) (= 0 x389) (= x30 (x469 x301 x13)) (= (ite (not x248) 1 0) x528) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x332) (and (< x332 32) (= true (<= x332 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x248 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x438) true) (> 0 x438)) (> x438 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x661 (ite (not x419) 1 0)) (= x226 (x279 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819968 x402))) (< x233 20282409603651670423947251286016) (> 18446744073709551616 x135) (not (= 0 x367)) (= x22 (x469 x528 x326)) (< x692 20282409603651670423947251286016) (= x369 x680) (not (> x643 10141204801825835211973625643007)) (>= 20282409603651670423947251286015 x233) (= (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x667) (<= x255 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x255 x667)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x667) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x255))) 1 0) x63) (= x643 (x469 20282409603651670423947251286015 x368)) (= x708 (ite (or (and (= true (<= x402 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x402)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x402)) 1 0)) (not (> x255 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x30 0) (>= 18446744073709551615 x135) (= x638 (x469 x708 x63)) (> 18446744073709551616 x696) (>= x696 0) (= x402 (x12 x369)) (= (x279 (+ x402 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x667) (= (x469 20282409603651670423947251286015 x369) x31) (= (x284 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x438)) x51) (= x104 x546) (= x419 (or (> x402 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x402) (= (<= x402 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (<= 0 x692) (= x301 (ite (or (and (> 0 x438) (= (<= x438 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x438)) 1 0)) (>= x233 0) (= x389 (x469 x661 x196)) (<= x696 18446744073709551615) (= x22 0) (= (x284 (- x255 x402)) x438)) x232)))
(assert (x3 x612 x45))
(assert (x159 x647))
(assert (x159 x516))
(assert (x159 x476))
(assert (x147 x528))
(assert (x159 x171))
(assert (= (x9 274184521717934524641157099916833587244) (x429 274184521717934524641157099916833587244)))
(assert (x159 x76))
(assert (x159 x118))
(assert (x201 x528 x326))
(assert (x159 x657))
(assert (x159 x48))
(assert (x282 x368))
(assert (x159 x208))
(assert (x159 x378))
(assert (x159 x90))
(assert (x159 x89))
(assert (x159 x402))
(assert (x159 x95))
(assert (x159 x490))
(assert (x159 x246))
(assert (= x67 (=> (and (= x274 274184521717934524641157099916833587211) (= x285 0) (>= 1461501637330902918203684832716283019655932542975 x275) (not (< x383 3638949393)) (= (x469 1461501637330902918203684832716283019655932542975 x488) x370) (= x1 x89) (not (= x383 3638949393)) (> x445 0) (= x21 128) (= x384 x285) (not (< x383 2068668150)) (< x383 3889878717) (>= 1461501637330902918203684832716283019655932542975 x1) (>= 1461501637330902918203684832716283019655932542975 x267) (not (= 3795249780 x383)) (>= x275 0) (= (x634 (x9 274184521717934524641157099916833587211)) x445) (= x275 x107) (= x275 x590) (= x580 x153) (= (x469 1461501637330902918203684832716283019655932542975 x356) x107) (not (= x383 3695885053)) (>= x193 0) (= (= x370 274184521717934524641157099916833587231) x97) (<= 0 x1) (= x267 x261) (= x89 x621) (not (> 3253611544 x383)) (= 3833100637 x383) (>= 1461501637330902918203684832716283019655932542975 x193)) (and (=> (and (= 1 x344) (not (< x142 826074471)) (not x461) (= x209 36) (= (x120 x664) x173) (> x118 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x173) (= x678 (x284 (- x209 4))) (= x664 (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0)) (= 1889567281 x142) (= x548 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x706 274184521717934524641157099916833587211) (= x118 (x634 (x9 274184521717934524641157099916833587231))) (= x461 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x678) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x678) true) (< x678 32)))) (= 32 x617) (not (= 826074471 x142)) (= 36 x209) (not (> 4 x209)) x97 (>= x173 0)) x65) (=> (not x97) x167)))))
(assert (x159 x85))
(assert (x147 x368))
(assert (x159 x238))
(assert (x159 x229))
(assert (x159 x668))
(assert (x159 x535))
(assert (x159 x693))
(assert (x159 x175))
(assert (x159 x5))
(assert (x159 x59))
(assert (x159 x75))
(assert (x159 x425))
(assert (x147 x407))
(assert (x360 274184521717934524641157099916833587244))
(assert (= (x9 2514000705) (x429 2514000705)))
(assert (x159 x350))
(assert (x159 x291))
(assert (x159 x643))
(assert (= (x9 274184521717934524641157099916833587223) (x429 274184521717934524641157099916833587223)))
(assert (x147 x126))
(assert (x159 x231))
(assert (x159 x173))
(assert (= true x377))
(assert (x147 x476))
(assert (x159 x528))
(assert (x159 x68))
(assert (x159 x259))
(assert (x198 x166 x156))
(assert (x159 x313))
(assert (x159 x577))
(assert (x159 x63))
(assert (x159 x236))
(assert (= x502 (and x694 (not x662))))
(assert (= (x9 204737060) (x429 204737060)))
(assert (x159 x181))
(assert (x159 x272))
(assert (x159 x178))
(assert (x282 x541))
(assert (x159 x366))
(assert (x159 x88))
(assert (x159 x30))
(assert (= 70124239 (x506 (x429 70124239))))
(assert (x159 x362))
(assert (= (x506 (x429 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x360 x34))
(assert (x159 x388))
(assert (x159 x697))
(assert (x3 x394 x319))
(assert (x360 274184521717934524641157099916833587233))
(assert (x147 x488))
(assert (= (x429 3833100637) (x9 3833100637)))
(assert (x159 x478))
(assert (x159 x677))
(assert (= (x506 (x429 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x159 x353))
(assert (= (and (not x128) x214) x4))
(assert (x159 x17))
(assert (x159 x344))
(assert (x201 x657 x126))
(assert (= 274184521717934524641157099916833587227 (x506 (x429 274184521717934524641157099916833587227))))
(assert (x3 x407 x424))
(assert (x159 x207))
(assert (x147 x524))
(assert (x147 x166))
(assert (x159 x477))
(assert (x3 x349 x340))
(assert (x159 x485))
(assert (x159 x239))
(assert (x159 x696))
(assert (x159 x302))
(assert (x159 x383))
(assert (= (x429 274184521717934524641157099916833587231) (x9 274184521717934524641157099916833587231)))
(assert (x159 x522))
(assert (x198 x379 x418))
(assert (= (=> (and (= x105 (and (= (<= x217 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (<= 0 x217))) (= x559 x217) (= x104 x559) (= x177 0)) x105) x232))
(assert (x159 x133))
(assert (x159 x22))
(assert (x159 x96))
(assert (x147 x708))
(assert (x159 x439))
(assert (x159 x663))
(assert (x147 x301))
(assert (x159 x403))
(assert (x159 x226))
(assert (x159 x431))
(assert (x159 x228))
(assert (x360 274184521717934524641157099916833587211))
(assert (x159 x122))
(assert (x159 x421))
(assert (x159 x277))
(assert (x159 x559))
(assert (x159 x531))
(assert (x159 x326))
(assert (x159 x6))
(assert (x159 x500))
(assert (x147 x541))
(assert (x159 x2))
(assert (= (x429 480214969) (x9 480214969)))
(assert (= x170 (and x361 (not x317))))
(assert (x159 x574))
(assert (x159 x1))
(assert (x147 x490))
(assert (x159 x376))
(assert (x159 x488))
(assert (= (x429 3795249780) (x9 3795249780)))
(assert (= x530 (=> (and (< x178 204737060) (< x178 480214969) (not (= 98097205 x178)) (= x178 151187884) (= x88 (x634 (x9 274184521717934524641157099916833587211))) (= x471 x311) (>= 1461501637330902918203684832716283019655932542975 x500) (<= 0 x44) (not (= x178 11269569)) (= x649 x384) (= x668 274184521717934524641157099916833587211) (= (= x450 274184521717934524641157099916833587231) x606) (<= 0 x500) (< x178 2068668150) (> x88 0) (= x649 0) (>= 1461501637330902918203684832716283019655932542975 x471) (= x590 x500) (= x311 x621) (= x679 128) (>= 1461501637330902918203684832716283019655932542975 x44) (<= 0 x471) (< x178 950698303) (= x450 (x469 1461501637330902918203684832716283019655932542975 x488)) (not (= x178 70124239))) (and (=> (not x606) x212) (=> (and (not (< x230 4)) (= x504 (x99 x169)) (> x575 0) x606 (= (x634 (x9 274184521717934524641157099916833587231)) x575) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x504) (= 36 x230) (not (< x467 826074471)) (= x213 (or (and (< x23 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x23))) (> x23 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x230 36) (= 1 x367) (<= 0 x504) (= x169 (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x496) (= 32 x332) (= x23 (x284 (- x230 4))) (not (= 826074471 x467)) (= 1889567281 x467) (not x213) (= 274184521717934524641157099916833587211 x149)) x300)))))
(assert (x159 x682))
(assert (= 20282409603651670423947251286016 (x506 (x429 20282409603651670423947251286016))))
(assert (x159 x369))
(assert (= 3795249780 (x506 (x429 3795249780))))
(assert (= x460 (=> (= (= 274184521717934524641157099916833587227 x705) x317) (and (=> (not x317) x592) (=> (and (not (< x364 826074471)) (= x580 x697) (= x686 (x281 x468)) (not (< x76 4)) (= x8 (x168 x632)) (= 32 x207) (= 1 x432) (not x292) (<= 0 x686) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x108) (= x645 (x203 (x9 x291) (x429 1) 0)) (= (x634 (x9 274184521717934524641157099916833587227)) x403) (= x468 (x203 (x9 x291) (x429 1) 0)) (not (= 1889567281 x364)) (< 0 x403) (= x693 (+ x19 x220)) (<= x8 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x686) (= x623 (> x697 x8)) x317 (not (= 826074471 x364)) (not x623) (= 68 x76) (= x291 x647) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x43) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x43) true) (> 64 x43))) x292) (= 2835717307 x364) (= x76 x609) (>= x8 0) (= x216 274184521717934524641157099916833587211) (= x686 x19) (= x43 (x284 (- x76 4))) (= x376 x291) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x535 x686)) (= x535 x697) (= (x284 (- x8 x697)) x139) (= x632 (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0)) (>= 1461501637330902918203684832716283019655932542975 x291) (= (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0) x325) (not (= 2514000705 x364)) (= x535 x220) (= 274184521717934524641157099916833587211 x119)) x566)))))
(assert (x159 x441))
(assert (x159 x394))
(assert (x159 x533))
(assert (x159 x8))
(assert (x147 1461501637330902918203684832716283019655932542975))
(assert (x159 x669))
(assert (x159 x307))
(assert (x147 x381))
(assert (= (x429 274184521717934524641157099916833587233) (x9 274184521717934524641157099916833587233)))
(assert (x159 x31))
(assert (= (x429 70124239) (x9 70124239)))
(assert (x201 x208 x347))
(assert (= (x506 (x429 11269569)) 11269569))
(assert (x159 x448))
(assert (x159 x610))
(assert (x159 x26))
(assert (= x47 (=> (= (= 274184521717934524641157099916833587244 x370) x141) (and (=> (not x141) x280) (=> (and (= x130 (and (= (<= x373 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x373 0))) x141 (= x150 (x469 20282409603651670423947251286015 x236)) (= (x12 x476) x373) (= 1 x344) (< 0 x95) (> 20282409603651670423947251286016 x476) (not x601) (= x95 (x634 (x9 274184521717934524641157099916833587244))) (= x601 (or (> x459 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x459) (= (<= x459 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x277 1889567281) (not (< x228 4)) (>= 20282409603651670423947251286015 x476) (= x199 (x203 (x9 274184521717934524641157099916833587211) (x429 5) 0)) (= x86 274184521717934524641157099916833587211) (= x617 32) (> 3119561463 x277) (>= x476 0) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x158) (or (and (= x236 0) (not x130)) (and (= x323 x518) (<= x482 18446744073709551615) (= x518 x236) (<= 0 x482) (> 18446744073709551616 x482) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x482 x598)) (= (* x598 x482) x323) (not x40) (= (x469 20282409603651670423947251286015 x373) x598) (= x40 (or (and (= (<= x373 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x373)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x373))) x130)) (= x476 (x597 x199)) (= x228 36) (= (x284 (- x228 4)) x459) (not (> 1889567281 x277)) (= x228 36)) x65)))))
(assert (x159 x29))
(assert (x159 x465))
(assert (x159 x524))
(assert (x159 x526))
(assert (x282 x369))
(assert (x159 x598))
(assert (x159 x129))
(assert (x159 x28))
(assert (= (x506 (x429 1099511627776)) 1099511627776))
(assert (x159 x674))
(assert (x159 x283))
(assert (x159 x66))
(assert (x282 x166))
(assert (x159 x125))
(assert (= (x9 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x429 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x159 x564))
(assert (= x503 x160))
(assert (= 4033150093 (x506 (x429 4033150093))))
(assert (x159 x39))
(assert (x147 1099511627775))
(assert (x159 x196))
(assert (x159 x303))
(assert (x147 x196))
(assert (x159 x600))
(assert (x159 x290))
(assert (x159 x84))
(assert (x159 x314))
(assert (x147 x293))
(assert (x159 x150))
(assert (x159 x395))
(assert (x198 x197 x137))
(assert (x159 x611))
(assert (x159 x438))
(assert (x159 x560))
(assert (x159 x629))
(assert (= (x429 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x9 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x9 18446744073709551616) (x429 18446744073709551616)))
(assert (= (x9 11269569) (x429 11269569)))
(assert (= 826074471 (x506 (x429 826074471))))
(assert (= 274184521717934524641157099916833587235 (x506 (x9 274184521717934524641157099916833587235))))
(assert (x147 x326))
(assert (x159 x635))
(assert (x360 274184521717934524641157099916833587223))
(assert (= (x506 (x429 3833100637)) 3833100637))
(assert (x159 x166))
(assert (x159 x437))
(assert (= (x429 3638949393) (x9 3638949393)))
(assert (x159 x548))
(assert (x147 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x506 (x429 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x159 x153))
(assert (x201 x109 x381))
(assert (x159 x397))
(assert (x198 x236 x33))
(assert (x159 x541))
(assert (x159 x450))
(assert (x159 x467))
(assert (x159 x327))
(assert (= (and (not x180) x567) x115))
(assert (x201 x490 x276))
(assert (x147 x657))
(assert (x159 x367))
(assert (x147 x553))
(assert (x159 x216))
(assert (= (x9 274184521717934524641157099916833587227) (x429 274184521717934524641157099916833587227)))
(assert (= (x429 3119561463) (x9 3119561463)))
(assert (= (x429 2068668150) (x9 2068668150)))
(assert (x159 x671))
(assert (= (x429 826074471) (x9 826074471)))
(assert (= x694 (and x160 (not x606))))
(assert (x159 x61))
(assert (x159 x117))
(assert (x147 18446744073709551615))
(assert (x147 x551))
(assert (x159 x209))
(assert (= (x429 950698303) (x9 950698303)))
(assert (x198 x492 x346))
(assert (x201 x663 x129))
(assert (x159 x474))
(assert (x147 x109))
(assert (= 274184521717934524641157099916833587223 (x506 (x429 274184521717934524641157099916833587223))))
(assert (x159 x579))
(assert (x159 x690))
(assert (x159 x301))
(assert (x159 x172))
(assert (x159 x546))
(assert (x159 x177))
(assert (= (x9 1208925819614629174706175) (x429 1208925819614629174706175)))
(assert (x198 x368 x695))
(assert (x159 x685))
(assert (= (=> (= x662 (= 274184521717934524641157099916833587227 x450)) (and (=> (and (= x701 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x422) (and (> 32 x422) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x422))))) (= x391 274184521717934524641157099916833587211) (not (> 826074471 x260)) (not (= 826074471 x260)) (not (> 4 x562)) (= 32 x332) (= 1 x367) (not x701) (= 36 x562) (= (x203 (x9 274184521717934524641157099916833587211) (x429 1) 0) x540) (= x314 (x634 (x9 274184521717934524641157099916833587227))) (>= x412 0) (= x17 50942633119752846454219349998365661925608737367104304655302372697894809501696) x662 (< 0 x314) (= (x284 (- x562 4)) x422) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x412) (= 1889567281 x260) (= x562 36) (= x412 (x565 x540))) x300) (=> (not x662) x72))) x212))
(assert (= 274184521717934524641157099916833587211 (x506 (x429 274184521717934524641157099916833587211))))
(assert (x147 x522))
(assert (x159 x13))
(assert (x159 x43))
(assert (= 2068668150 (x506 (x429 2068668150))))
(assert (x159 x139))
(assert (x159 x363))
(assert (x159 x126))
(assert (x426 x672 x712))
(assert (x147 x208))
(assert (x147 x10))
(check-sat)
