(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x364 0)) (((x1857 (x1798 x364) (x1738 Real)) (x465 (x1544 Real)) (x686 (x1137 x364) (x472 x364) (x1206 Real)))))
(declare-fun x938 () Real)
(declare-fun x1982 () Real)
(declare-fun x784 () Real)
(declare-fun x619 () Real)
(declare-fun x620 () Real)
(declare-fun x468 () Real)
(declare-fun x461 () Real)
(declare-fun x737 () Real)
(declare-fun x2116 () Bool)
(declare-fun x647 () Real)
(declare-fun x85 () Bool)
(declare-fun x283 () Real)
(declare-fun x2013 () Real)
(declare-fun x918 () Real)
(declare-fun x1582 () Bool)
(declare-fun x969 () Real)
(declare-fun x359 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x611 () Real)
(declare-fun x1542 () x364)
(declare-fun x604 () Real)
(declare-fun x1756 () Bool)
(declare-fun x1180 () Real)
(declare-fun x652 (Real) Real)
(declare-fun x845 () Real)
(declare-fun x876 () Real)
(declare-fun x296 () Bool)
(declare-fun x1028 () Real)
(declare-fun x830 () Real)
(declare-fun x478 (x364) Real)
(declare-fun x663 () Bool)
(declare-fun x96 () Real)
(declare-fun x1426 () Bool)
(declare-fun x274 () Real)
(declare-fun x1682 () Real)
(declare-fun x1431 () Real)
(declare-fun x140 () Real)
(declare-fun x1978 () Bool)
(declare-fun x1453 () x364)
(declare-fun x899 () Real)
(declare-fun x1530 () Real)
(declare-fun x568 () Real)
(declare-fun x815 () Bool)
(declare-fun x294 () Real)
(declare-fun x2110 () Bool)
(declare-fun x1105 (Real) Real)
(declare-fun x974 () Real)
(declare-fun x543 () Real)
(declare-fun x1003 () Bool)
(declare-fun x821 () Real)
(declare-fun x748 () Real)
(declare-fun x6 () Real)
(declare-fun x1471 (Real) Real)
(declare-fun x1586 (Real) x364)
(declare-fun x438 () Real)
(declare-fun x796 () Real)
(declare-fun x350 () Real)
(declare-fun x80 (Real) Real)
(declare-fun x773 () Real)
(declare-fun x1515 () Bool)
(declare-fun x837 () Real)
(declare-fun x1852 () Real)
(declare-fun x1095 () Real)
(declare-fun x1861 (Real) Real)
(declare-fun x187 (x364) Real)
(declare-fun x1462 () Real)
(declare-fun x131 () Bool)
(declare-fun x269 () Bool)
(declare-fun x1194 () Real)
(declare-fun x1671 () Real)
(declare-fun x97 () Real)
(declare-fun x602 () Real)
(declare-fun x1036 () Bool)
(declare-fun x1757 () Real)
(declare-fun x855 () Real)
(declare-fun x110 () Real)
(declare-fun x1979 () Real)
(declare-fun x1242 () Real)
(declare-fun x627 () Real)
(declare-fun x123 () Real)
(declare-fun x978 () Real)
(declare-fun x791 () Real)
(declare-fun x485 () Bool)
(declare-fun x1202 () Real)
(declare-fun x649 () Real)
(declare-fun x1073 () Real)
(declare-fun x601 () Real)
(declare-fun x290 () Real)
(declare-fun x1820 () Bool)
(declare-fun x377 () Real)
(declare-fun x1002 () Real)
(declare-fun x1623 () Bool)
(declare-fun x1221 () Real)
(declare-fun x1138 () Bool)
(declare-fun x1768 () Real)
(declare-fun x646 () Real)
(declare-fun x1445 () Real)
(declare-fun x703 () Real)
(declare-fun x1895 () Real)
(declare-fun x1855 () Real)
(declare-fun x68 () Bool)
(declare-fun x589 () Real)
(declare-fun x932 () Real)
(declare-fun x1699 () Real)
(declare-fun x1144 () Real)
(declare-fun x5 () Real)
(declare-fun x136 () Real)
(declare-fun x2034 () Real)
(declare-fun x278 () Real)
(declare-fun x1354 () Real)
(declare-fun x1376 () Real)
(declare-fun x1005 () Real)
(declare-fun x626 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x1856 () Real)
(declare-fun x228 () Real)
(declare-fun x421 () Real)
(declare-fun x1526 () Real)
(declare-fun x146 (Real) Real)
(declare-fun x1200 () Real)
(declare-fun x2019 () Bool)
(declare-fun x550 (Real) Real)
(declare-fun x1282 (Real) Real)
(declare-fun x526 () Bool)
(declare-fun x411 (x364) Real)
(declare-fun x659 (Real) Real)
(declare-fun x1019 () Real)
(declare-fun x861 () Real)
(declare-fun x2143 () x364)
(declare-fun x711 () Bool)
(declare-fun x1656 () Real)
(declare-fun x1374 () Real)
(declare-fun x883 () Real)
(declare-fun x943 () Real)
(declare-fun x482 (x364) Real)
(declare-fun x347 () x364)
(declare-fun x808 () x364)
(declare-fun x141 () Real)
(declare-fun x1532 () Real)
(declare-fun x109 () Real)
(declare-fun x965 () Real)
(declare-fun x1219 () x364)
(declare-fun x1370 () Real)
(declare-fun x168 () Real)
(declare-fun x717 () Real)
(declare-fun x231 () Bool)
(declare-fun x51 () Real)
(declare-fun x1804 (Real) Real)
(declare-fun x1256 () Real)
(declare-fun x1045 () Bool)
(declare-fun x1877 () Bool)
(declare-fun x103 () Real)
(declare-fun x40 () Real)
(declare-fun x1470 () Real)
(declare-fun x454 () Bool)
(declare-fun x1571 () Real)
(declare-fun x2037 () Real)
(declare-fun x2059 () Bool)
(declare-fun x562 () Bool)
(declare-fun x1799 () Real)
(declare-fun x1371 () Real)
(declare-fun x2127 () Bool)
(declare-fun x1141 () Real)
(declare-fun x1302 () Real)
(declare-fun x735 () Bool)
(declare-fun x1716 () Real)
(declare-fun x628 () Real)
(declare-fun x1484 () Real)
(declare-fun x1633 () Real)
(declare-fun x999 () Real)
(declare-fun x2125 () Real)
(declare-fun x1560 () Real)
(declare-fun x1142 () Real)
(declare-fun x1317 () Bool)
(declare-fun x308 () Real)
(declare-fun x1060 (Real) Real)
(declare-fun x875 () Bool)
(declare-fun x427 () Real)
(declare-fun x1378 () Bool)
(declare-fun x1767 () Real)
(declare-fun x648 () Real)
(declare-fun x1251 () Real)
(declare-fun x828 () Real)
(declare-fun x245 () Real)
(declare-fun x2070 () Real)
(declare-fun x2017 () Real)
(declare-fun x1004 () Real)
(declare-fun x584 () Bool)
(declare-fun x549 (x364) Real)
(declare-fun x970 () Real)
(declare-fun x2051 () Real)
(declare-fun x851 () Bool)
(declare-fun x1500 () Real)
(declare-fun x1059 () Real)
(declare-fun x2047 () Real)
(declare-fun x24 () Real)
(declare-fun x433 () Real)
(declare-fun x701 () Real)
(declare-fun x1360 () Bool)
(declare-fun x1407 () Real)
(declare-fun x1162 () Real)
(declare-fun x708 () Real)
(declare-fun x985 () Real)
(declare-fun x234 () Real)
(declare-fun x1301 () Real)
(declare-fun x1094 () Real)
(declare-fun x2058 () Real)
(declare-fun x944 () Real)
(declare-fun x1235 () Bool)
(declare-fun x430 () Real)
(declare-fun x1306 () Real)
(declare-fun x1662 (Real) Real)
(declare-fun x1652 () Real)
(declare-fun x16 () Real)
(declare-fun x2123 () x364)
(declare-fun x1562 () Real)
(declare-fun x87 () Bool)
(declare-fun x1919 (x364) Real)
(declare-fun x1383 () Real)
(declare-fun x2064 (Real) Real)
(declare-fun x1629 () Real)
(declare-fun x1507 (x364) Real)
(declare-fun x106 () Real)
(declare-fun x764 () Real)
(declare-fun x300 (Real) Real)
(declare-fun x535 () Bool)
(declare-fun x1654 () Real)
(declare-fun x1029 () Real)
(declare-fun x21 () Real)
(declare-fun x375 () Real)
(declare-fun x1884 (x364) Real)
(declare-fun x2063 () Real)
(declare-fun x1677 () Real)
(declare-fun x1569 () Real)
(declare-fun x908 () Real)
(declare-fun x143 () Real)
(declare-fun x452 () Real)
(declare-fun x1976 () Bool)
(declare-fun x1545 () Real)
(declare-fun x1022 () Real)
(declare-fun x857 () Real)
(declare-fun x1128 () Real)
(declare-fun x153 () Real)
(declare-fun x1025 () Real)
(declare-fun x1041 () Bool)
(declare-fun x456 () Real)
(declare-fun x988 () Real)
(declare-fun x1504 () Real)
(declare-fun x1064 () Real)
(declare-fun x729 () Real)
(declare-fun x667 () Real)
(declare-fun x1531 () Real)
(declare-fun x1510 () Real)
(declare-fun x1808 () Real)
(declare-fun x1458 () Real)
(declare-fun x1514 () Bool)
(declare-fun x873 (Real) Real)
(declare-fun x693 () Real)
(declare-fun x291 () Real)
(declare-fun x522 () Real)
(declare-fun x933 () Real)
(declare-fun x1792 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x769 () Bool)
(declare-fun x1344 () Real)
(declare-fun x1365 () Real)
(declare-fun x404 () Real)
(declare-fun x1552 () Real)
(declare-fun x2106 (x364) Real)
(declare-fun x1989 () Real)
(declare-fun x1174 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x1289 () Real)
(declare-fun x1676 () Real)
(declare-fun x1177 () Bool)
(declare-fun x164 () Real)
(declare-fun x1640 () Real)
(declare-fun x1955 () Real)
(declare-fun x698 () Real)
(declare-fun x1960 () Real)
(declare-fun x1828 () Real)
(declare-fun x1651 () Bool)
(declare-fun x749 () Bool)
(declare-fun x849 () Real)
(declare-fun x1725 () Real)
(declare-fun x2095 () Real)
(declare-fun x1288 () Real)
(declare-fun x1577 () Real)
(declare-fun x336 () Real)
(declare-fun x2119 () Real)
(declare-fun x700 () Real)
(declare-fun x1888 () Real)
(declare-fun x722 () Real)
(declare-fun x1182 () Real)
(declare-fun x1891 () Real)
(declare-fun x2107 () Real)
(declare-fun x904 () Real)
(declare-fun x530 () Real)
(declare-fun x1123 () Bool)
(declare-fun x1051 () Real)
(declare-fun x1627 () Bool)
(declare-fun x1664 () Real)
(declare-fun x1087 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x1481 (Real) Real)
(declare-fun x495 () Real)
(declare-fun x488 () Real)
(declare-fun x474 () Real)
(declare-fun x1644 () Real)
(declare-fun x62 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x496 () Real)
(declare-fun x609 () Real)
(declare-fun x20 () Real)
(declare-fun x1474 () Real)
(declare-fun x1341 () Real)
(declare-fun x804 () Real)
(declare-fun x1390 () Real)
(declare-fun x214 (Real) Real)
(declare-fun x812 () Real)
(declare-fun x98 () Real)
(declare-fun x1420 () Real)
(declare-fun x52 () Real)
(declare-fun x219 () Bool)
(declare-fun x467 () Bool)
(declare-fun x202 () Real)
(declare-fun x1802 () Real)
(declare-fun x2 () Real)
(declare-fun x886 () Real)
(declare-fun x1518 () Real)
(declare-fun x235 () Real)
(declare-fun x2121 () Real)
(declare-fun x222 () Bool)
(declare-fun x981 () Bool)
(declare-fun x1234 () Real)
(declare-fun x1995 () Real)
(declare-fun x429 () Bool)
(declare-fun x489 () Bool)
(declare-fun x739 () Real)
(declare-fun x1489 () Bool)
(declare-fun x1600 () Real)
(declare-fun x393 () Real)
(declare-fun x2011 () Real)
(declare-fun x765 () Real)
(declare-fun x757 () Real)
(declare-fun x515 () x364)
(declare-fun x1109 () Real)
(declare-fun x2150 () Real)
(declare-fun x457 () Bool)
(declare-fun x1191 () Real)
(declare-fun x167 () Real)
(declare-fun x72 () Real)
(declare-fun x207 () Real)
(declare-fun x1869 () Real)
(declare-fun x1968 () Real)
(declare-fun x2026 () Bool)
(declare-fun x117 () Real)
(declare-fun x75 () Real)
(declare-fun x493 () Real)
(declare-fun x1449 () Bool)
(declare-fun x957 () Bool)
(declare-fun x1509 () Real)
(declare-fun x175 () Real)
(declare-fun x1119 () Bool)
(declare-fun x778 () Real)
(declare-fun x1637 () x364)
(declare-fun x1340 () Real)
(declare-fun x632 () Real)
(declare-fun x370 () Real)
(declare-fun x490 () Bool)
(declare-fun x948 () Real)
(declare-fun x2149 (Real) Real)
(declare-fun x2029 () Real)
(declare-fun x952 () Bool)
(declare-fun x1033 () Real)
(declare-fun x1027 () Real)
(declare-fun x844 () Real)
(declare-fun x1203 () x364)
(declare-fun x942 () Real)
(declare-fun x905 () Real)
(declare-fun x1954 () Real)
(declare-fun x2108 () Real)
(declare-fun x2068 () Real)
(declare-fun x715 () Bool)
(declare-fun x1659 () Real)
(declare-fun x1929 () Real)
(declare-fun x391 () Real)
(declare-fun x929 (Real) Real)
(declare-fun x1952 () Bool)
(declare-fun x469 () x364)
(declare-fun x986 () Real)
(declare-fun x1430 () Real)
(declare-fun x975 () Real)
(declare-fun x1632 () Real)
(declare-fun x839 () Real)
(declare-fun x1731 () Real)
(declare-fun x1845 () Real)
(declare-fun x3 () Real)
(declare-fun x1885 () Real)
(declare-fun x1670 () Bool)
(declare-fun x951 () Bool)
(declare-fun x2141 () Real)
(declare-fun x544 () Real)
(declare-fun x862 () Bool)
(declare-fun x1940 () Real)
(declare-fun x23 () Real)
(declare-fun x1785 () Real)
(declare-fun x1444 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x1794 () Real)
(declare-fun x2083 () x364)
(declare-fun x1053 () Real)
(declare-fun x1372 () Real)
(declare-fun x1046 () Real)
(declare-fun x1684 (x364) Real)
(declare-fun x1016 () Real)
(declare-fun x1165 () Real)
(declare-fun x582 () Real)
(declare-fun x1382 () Real)
(declare-fun x2015 () Bool)
(declare-fun x27 (x364) Real)
(declare-fun x1686 () Real)
(declare-fun x603 () Real)
(declare-fun x2117 () Real)
(declare-fun x1864 () Real)
(declare-fun x371 () Bool)
(declare-fun x466 () Bool)
(declare-fun x1658 () Real)
(declare-fun x1975 () Bool)
(declare-fun x854 () Real)
(declare-fun x1172 () Real)
(declare-fun x322 () Real)
(declare-fun x1823 () Real)
(declare-fun x1547 () Real)
(declare-fun x1157 () Real)
(declare-fun x2073 () Real)
(declare-fun x598 (Real) Real)
(declare-fun x1102 () x364)
(declare-fun x825 () Real)
(declare-fun x1213 () Real)
(declare-fun x43 () Real)
(declare-fun x1381 () Real)
(declare-fun x1129 () Real)
(declare-fun x120 () Real)
(declare-fun x1364 () Bool)
(declare-fun x569 () Real)
(declare-fun x244 (Real) Real)
(declare-fun x1604 () Real)
(declare-fun x926 () Real)
(declare-fun x1528 () Bool)
(declare-fun x634 (Real) Real)
(declare-fun x1393 () Real)
(declare-fun x1829 () Real)
(declare-fun x89 () Bool)
(declare-fun x633 () Real)
(declare-fun x233 () Bool)
(declare-fun x388 () Bool)
(declare-fun x1903 () Real)
(declare-fun x1163 () Real)
(declare-fun x1023 () Real)
(declare-fun x249 () Real)
(declare-fun x1965 () Real)
(declare-fun x1 () Real)
(declare-fun x1672 () Real)
(declare-fun x745 () Real)
(declare-fun x832 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x1031 () Real)
(declare-fun x682 () x364)
(declare-fun x789 () x364)
(declare-fun x521 () Bool)
(declare-fun x1806 () Real)
(declare-fun x979 () Real)
(declare-fun x1330 () Real)
(declare-fun x1068 () Real)
(declare-fun x1702 () Real)
(declare-fun x174 () Real)
(declare-fun x2129 () Real)
(declare-fun x376 () Real)
(declare-fun x2100 () Real)
(declare-fun x1244 () Bool)
(declare-fun x1056 () Real)
(declare-fun x1950 () Real)
(declare-fun x1116 () Real)
(declare-fun x1067 () Real)
(declare-fun x935 () Real)
(declare-fun x1104 () Real)
(declare-fun x657 () Real)
(declare-fun x10 () x364)
(declare-fun x1636 () Real)
(declare-fun x343 () Real)
(declare-fun x392 () Real)
(declare-fun x1977 () Real)
(declare-fun x574 () Real)
(declare-fun x792 () Real)
(declare-fun x1924 () Real)
(declare-fun x1896 () Real)
(declare-fun x1787 () Real)
(declare-fun x28 () Bool)
(declare-fun x1558 () Real)
(declare-fun x922 () Bool)
(declare-fun x1392 (x364) Real)
(declare-fun x213 () Bool)
(declare-fun x1300 () Real)
(declare-fun x272 () Real)
(declare-fun x1198 () Bool)
(declare-fun x513 () Real)
(declare-fun x413 () Real)
(declare-fun x71 () Real)
(declare-fun x772 (Real) Real)
(declare-fun x971 () Real)
(declare-fun x716 () x364)
(declare-fun x1873 () Real)
(declare-fun x940 () Bool)
(declare-fun x61 () Real)
(declare-fun x1006 () Real)
(declare-fun x1048 () Bool)
(declare-fun x381 () Real)
(declare-fun x1980 () Real)
(declare-fun x1834 () Real)
(declare-fun x494 () Real)
(declare-fun x654 () Real)
(declare-fun x1543 () Real)
(declare-fun x1021 () Real)
(declare-fun x344 () x364)
(declare-fun x1101 () Bool)
(declare-fun x925 () Real)
(declare-fun x1641 () Real)
(declare-fun x2081 () Real)
(declare-fun x2076 () Real)
(declare-fun x385 () Real)
(declare-fun x533 () Real)
(declare-fun x373 () Real)
(declare-fun x1324 () Real)
(declare-fun x621 () Bool)
(declare-fun x17 () Real)
(declare-fun x1680 () Real)
(declare-fun x1645 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x443 () Bool)
(declare-fun x923 () Bool)
(declare-fun x640 () Real)
(declare-fun x1945 () Real)
(declare-fun x287 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x220 () Real)
(declare-fun x230 () Bool)
(declare-fun x1488 () Real)
(declare-fun x2082 () Real)
(declare-fun x570 (Real) Real)
(declare-fun x2054 () Real)
(declare-fun x1868 () x364)
(declare-fun x88 () Real)
(declare-fun x928 () Bool)
(declare-fun x1257 () Real)
(declare-fun x966 () Bool)
(declare-fun x1319 () x364)
(declare-fun x637 () Real)
(declare-fun x704 () Real)
(declare-fun x841 () Real)
(declare-fun x592 () Real)
(declare-fun x1224 () Real)
(declare-fun x539 () Bool)
(declare-fun x1436 () Real)
(declare-fun x1817 () Real)
(declare-fun x1272 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x275 () Real)
(declare-fun x912 () Real)
(declare-fun x132 () Real)
(declare-fun x1502 () Bool)
(declare-fun x1827 () Real)
(declare-fun x1791 () Real)
(declare-fun x1599 () Real)
(declare-fun x1179 () x364)
(declare-fun x754 () Real)
(declare-fun x541 () Bool)
(declare-fun x1287 () Real)
(declare-fun x440 (x364) Real)
(declare-fun x581 () Real)
(declare-fun x982 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x1008 (Real) Real)
(declare-fun x205 () Real)
(declare-fun x221 () Real)
(declare-fun x189 () Real)
(declare-fun x256 () Real)
(declare-fun x1052 () Real)
(declare-fun x1883 () Real)
(declare-fun x551 () Real)
(declare-fun x1039 () Real)
(declare-fun x2061 () Bool)
(declare-fun x756 () Real)
(declare-fun x1712 () Bool)
(declare-fun x552 () Real)
(declare-fun x1987 (Real) Real)
(declare-fun x870 () Real)
(declare-fun x1795 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x446 () Real)
(declare-fun x1492 () Real)
(declare-fun x484 (Real) Real)
(declare-fun x2069 () Real)
(declare-fun x731 () Real)
(declare-fun x191 () Real)
(declare-fun x126 () Real)
(declare-fun x1414 () Real)
(declare-fun x1459 () Real)
(declare-fun x1931 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x161 (Real) Real)
(declare-fun x591 () Real)
(declare-fun x2152 () x364)
(declare-fun x93 () Real)
(declare-fun x412 (Real) Real)
(declare-fun x483 () Bool)
(declare-fun x1262 () x364)
(declare-fun x1438 () Real)
(declare-fun x42 () Real)
(declare-fun x1308 () Bool)
(declare-fun x348 () Real)
(declare-fun x761 () x364)
(declare-fun x1957 () Real)
(declare-fun x714 () Bool)
(declare-fun x1173 () Real)
(declare-fun x583 () Real)
(declare-fun x29 () Real)
(declare-fun x1491 () Real)
(declare-fun x894 () Real)
(declare-fun x817 () x364)
(declare-fun x1280 (Real) Real)
(declare-fun x243 () Real)
(declare-fun x1214 () Real)
(declare-fun x1559 () Bool)
(declare-fun x1410 () Real)
(declare-fun x1439 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x911 () Real)
(declare-fun x4 () x364)
(declare-fun x1334 () Real)
(declare-fun x2077 () Real)
(declare-fun x1222 () Real)
(declare-fun x1011 () Real)
(declare-fun x2089 () Real)
(declare-fun x973 (Real) Real)
(declare-fun x374 () Bool)
(declare-fun x1464 () Real)
(declare-fun x363 () Real)
(declare-fun x1475 () Real)
(declare-fun x1098 () Real)
(declare-fun x1932 () Real)
(declare-fun x1568 () Real)
(declare-fun x572 () Real)
(declare-fun x868 () Real)
(declare-fun x1422 () Real)
(declare-fun x281 () Real)
(declare-fun x402 () Real)
(declare-fun x1398 (Real) Real)
(declare-fun x390 () x364)
(declare-fun x586 () Real)
(declare-fun x795 () Real)
(declare-fun x12 () x364)
(declare-fun x299 () Real)
(declare-fun x1030 (Real) Real)
(declare-fun x1858 () Real)
(declare-fun x546 () Real)
(declare-fun x2104 () Real)
(declare-fun x963 () Real)
(declare-fun x340 () Real)
(declare-fun x1626 () Real)
(declare-fun x1388 () Bool)
(declare-fun x555 (Real) Real)
(declare-fun x1254 () Real)
(declare-fun x1551 () Real)
(declare-fun x2010 () Real)
(declare-fun x931 () Real)
(declare-fun x987 () Real)
(declare-fun x2099 () x364)
(declare-fun x102 () Real)
(declare-fun x1437 () Real)
(declare-fun x2124 () Real)
(declare-fun x897 () Real)
(declare-fun x1912 () Real)
(declare-fun x1472 () Real)
(declare-fun x1266 () Real)
(declare-fun x1140 (Real) Real)
(declare-fun x1351 () Real)
(declare-fun x1013 () Real)
(declare-fun x1413 () Real)
(declare-fun x345 () Real)
(declare-fun x593 () Real)
(declare-fun x1718 () Real)
(declare-fun x705 () Real)
(declare-fun x1020 () Real)
(declare-fun x56 () Real)
(declare-fun x1497 () Bool)
(declare-fun x406 () Real)
(declare-fun x453 () Real)
(declare-fun x2065 () Real)
(declare-fun x226 () Real)
(declare-fun x1675 () Real)
(declare-fun x2130 () Bool)
(declare-fun x1936 () Real)
(declare-fun x1215 () Real)
(declare-fun x1796 () x364)
(declare-fun x2087 () x364)
(declare-fun x1455 () Real)
(declare-fun x1606 () Real)
(declare-fun x1948 () Bool)
(declare-fun x869 () Real)
(declare-fun x847 () Real)
(declare-fun x492 () Real)
(declare-fun x850 () Real)
(declare-fun x968 () x364)
(declare-fun x156 () Bool)
(declare-fun x510 () Real)
(declare-fun x566 () Real)
(declare-fun x1353 () Bool)
(declare-fun x1379 () Real)
(declare-fun x723 () Bool)
(declare-fun x914 () x364)
(declare-fun x409 () Real)
(declare-fun x1527 () Real)
(declare-fun x2041 () Real)
(declare-fun x361 () Real)
(declare-fun x2032 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x309 () Bool)
(declare-fun x1066 () Real)
(declare-fun x1529 () Bool)
(declare-fun x1001 () Real)
(declare-fun x2138 () x364)
(declare-fun x445 () Real)
(declare-fun x408 () Real)
(declare-fun x1701 () Real)
(declare-fun x1160 () Bool)
(declare-fun x157 () Real)
(declare-fun x564 () Real)
(declare-fun x186 () Real)
(declare-fun x516 () Real)
(declare-fun x1503 () Real)
(declare-fun x590 () Bool)
(declare-fun x1697 () Real)
(declare-fun x1988 () Real)
(declare-fun x78 () Real)
(declare-fun x2140 () Real)
(declare-fun x1566 () Real)
(declare-fun x1310 () Real)
(declare-fun x1881 () Real)
(declare-fun x895 () Bool)
(declare-fun x1878 () Real)
(declare-fun x1265 () Bool)
(declare-fun x724 () Real)
(declare-fun x1762 () Real)
(declare-fun x305 () Real)
(declare-fun x1505 (Real) Real)
(declare-fun x917 () Bool)
(declare-fun x1872 () Real)
(declare-fun x39 () Real)
(declare-fun x1789 () Real)
(declare-fun x878 () Real)
(declare-fun x59 () Real)
(declare-fun x1779 () Real)
(declare-fun x1250 () Real)
(declare-fun x1397 () Real)
(declare-fun x1748 () Real)
(declare-fun x100 (Real) Real)
(declare-fun x1925 () Real)
(declare-fun x706 () Real)
(declare-fun x860 () Real)
(declare-fun x712 () Real)
(declare-fun x664 () x364)
(declare-fun x1279 () Real)
(declare-fun x1538 () Real)
(declare-fun x1521 () Bool)
(declare-fun x1071 () Real)
(declare-fun x139 () Real)
(declare-fun x595 () Real)
(declare-fun x314 () Real)
(declare-fun x916 () Real)
(declare-fun x1790 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x190 () Bool)
(declare-fun x499 () x364)
(declare-fun x237 () Bool)
(declare-fun x1167 () Real)
(declare-fun x181 () Bool)
(declare-fun x989 () Real)
(declare-fun x2131 () Real)
(declare-fun x208 () Real)
(declare-fun x1136 () Real)
(declare-fun x561 () Real)
(declare-fun x1958 () Bool)
(declare-fun x35 () Real)
(declare-fun x1361 () Real)
(declare-fun x372 () Real)
(declare-fun x1246 () Real)
(declare-fun x1647 () Bool)
(declare-fun x1078 () Real)
(declare-fun x1907 (Real) Real)
(declare-fun x554 () x364)
(declare-fun x629 () Real)
(declare-fun x814 () Real)
(declare-fun x2135 () Real)
(declare-fun x316 () Real)
(declare-fun x286 (Real) Real)
(declare-fun x1838 () Real)
(declare-fun x1443 () Real)
(declare-fun x1024 () Bool)
(declare-fun x242 () Bool)
(declare-fun x856 () Real)
(declare-fun x1276 () Real)
(declare-fun x434 () x364)
(declare-fun x1103 () Real)
(declare-fun x398 () Real)
(declare-fun x960 () Real)
(declare-fun x1143 () x364)
(declare-fun x389 (x364) Real)
(declare-fun x1966 () Real)
(declare-fun x326 () Real)
(declare-fun x1187 () Real)
(declare-fun x1880 () Real)
(declare-fun x1450 () Real)
(declare-fun x491 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x57 () Real)
(declare-fun x1108 () Real)
(declare-fun x332 () x364)
(declare-fun x1707 () Real)
(declare-fun x1255 () Real)
(declare-fun x823 (x364) Real)
(declare-fun x1298 (Real) Real)
(declare-fun x210 () x364)
(declare-fun x1784 (x364) Real)
(declare-fun x1683 () Real)
(declare-fun x777 () Real)
(declare-fun x806 () Real)
(declare-fun x335 () Real)
(declare-fun x1619 (Real) Real)
(declare-fun x261 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x1557 () Real)
(declare-fun x1314 () Real)
(declare-fun x571 () Real)
(declare-fun x641 () Real)
(declare-fun x696 () Real)
(declare-fun x1875 () Real)
(declare-fun x863 () Real)
(declare-fun x934 () Real)
(declare-fun x297 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x1337 () Real)
(declare-fun x779 () Real)
(declare-fun x1312 () Bool)
(declare-fun x54 () Real)
(declare-fun x1456 () Real)
(declare-fun x1315 () Real)
(declare-fun x915 () Real)
(declare-fun x1911 () Real)
(declare-fun x1325 (x364) Real)
(declare-fun x1264 () Real)
(declare-fun x1477 () Real)
(declare-fun x81 () Real)
(declare-fun x306 () Real)
(declare-fun x232 () Real)
(declare-fun x1328 () Bool)
(declare-fun x930 () Bool)
(declare-fun x852 () Real)
(declare-fun x786 (Real) Real)
(declare-fun x509 () Bool)
(declare-fun x1343 () Real)
(declare-fun x1775 (Real Real) Real)
(declare-fun x608 (Real) Real)
(declare-fun x240 () Real)
(declare-fun x22 () Real)
(declare-fun x346 (Real) Real)
(declare-fun x1797 () Real)
(declare-fun x250 () Real)
(declare-fun x653 () Real)
(declare-fun x1385 (x364) Real)
(declare-fun x1159 () Real)
(declare-fun x19 () Real)
(declare-fun x1063 () Real)
(declare-fun x558 () Real)
(declare-fun x1380 () x364)
(declare-fun x799 () Real)
(declare-fun x1065 () Real)
(declare-fun x651 () Real)
(declare-fun x871 () Bool)
(declare-fun x1733 () Real)
(declare-fun x1466 () Real)
(declare-fun x1321 () Bool)
(declare-fun x1416 () Real)
(declare-fun x1035 () Real)
(declare-fun x1204 () Real)
(declare-fun x2079 () Real)
(declare-fun x1782 () Real)
(declare-fun x1783 () Real)
(declare-fun x166 (Real) Real)
(declare-fun x384 () Real)
(declare-fun x518 () Real)
(declare-fun x1933 () Real)
(declare-fun x2133 () Real)
(declare-fun x1435 () Real)
(declare-fun x1469 () Real)
(declare-fun x813 () Real)
(declare-fun x284 () Real)
(declare-fun x1985 () Bool)
(declare-fun x1853 () Real)
(declare-fun x1770 () Bool)
(declare-fun x265 () Real)
(declare-fun x840 () Bool)
(declare-fun x578 () x364)
(declare-fun x64 () Real)
(declare-fun x1736 () Bool)
(declare-fun x319 () Real)
(declare-fun x1461 () Bool)
(declare-fun x358 () Real)
(declare-fun x1603 () x364)
(declare-fun x610 () Real)
(declare-fun x1771 () Real)
(declare-fun x1391 (x364) Real)
(declare-fun x8 () Real)
(declare-fun x1373 () Real)
(declare-fun x807 () Real)
(declare-fun x502 () Bool)
(declare-fun x2098 () Real)
(declare-fun x437 () Real)
(declare-fun x1176 () Real)
(declare-fun x888 () Bool)
(declare-fun x751 () Real)
(declare-fun x293 () Real)
(declare-fun x661 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x331 () Real)
(declare-fun x1639 () Real)
(declare-fun x18 () Bool)
(declare-fun x301 () Real)
(declare-fun x630 () Real)
(declare-fun x1525 () Real)
(declare-fun x1149 () Real)
(declare-fun x2075 () Real)
(declare-fun x1696 () Real)
(declare-fun x1485 () Real)
(declare-fun x137 () Real)
(declare-fun x1585 () Real)
(declare-fun x1598 () Real)
(declare-fun x672 () Real)
(declare-fun x173 () Bool)
(declare-fun x179 () x364)
(declare-fun x1120 () Real)
(declare-fun x49 () Bool)
(declare-fun x2102 () Real)
(declare-fun x1406 () Real)
(declare-fun x1269 (x364) Real)
(declare-fun x1761 () Real)
(declare-fun x994 () Real)
(declare-fun x537 () Bool)
(declare-fun x833 () Bool)
(declare-fun x625 () x364)
(declare-fun x2036 () Real)
(declare-fun x183 () Real)
(declare-fun x709 () Bool)
(declare-fun x1746 () Real)
(declare-fun x1408 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x70 (Real) Real)
(declare-fun x1669 () Bool)
(declare-fun x1356 () Real)
(declare-fun x1679 () Real)
(declare-fun x2085 () Real)
(declare-fun x31 () Real)
(declare-fun x1281 () Bool)
(declare-fun x1990 () Real)
(declare-fun x1352 () Real)
(declare-fun x1550 () Real)
(declare-fun x567 () Real)
(declare-fun x1579 () Real)
(declare-fun x1274 (Real) Real)
(declare-fun x1193 () Real)
(declare-fun x955 () Real)
(declare-fun x1037 () Real)
(declare-fun x2033 () Real)
(declare-fun x1886 () Real)
(declare-fun x1478 () Real)
(declare-fun x1597 () Real)
(declare-fun x884 () Real)
(declare-fun x1415 () Real)
(declare-fun x55 () Bool)
(declare-fun x63 () Real)
(declare-fun x674 () Real)
(declare-fun x1920 () Real)
(declare-fun x1916 () Bool)
(declare-fun x2009 () Real)
(declare-fun x426 () Bool)
(declare-fun x1463 () Real)
(declare-fun x1969 () Bool)
(declare-fun x1592 () Real)
(declare-fun x635 () Bool)
(declare-fun x147 () Bool)
(declare-fun x2139 () Real)
(declare-fun x690 () Bool)
(declare-fun x650 () Real)
(declare-fun x2101 () Real)
(declare-fun x523 () Bool)
(declare-fun x1778 () Real)
(declare-fun x967 () Real)
(declare-fun x679 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x1387 () Real)
(declare-fun x2039 () Real)
(declare-fun x1908 () Real)
(declare-fun x730 () Real)
(declare-fun x1726 (x364) Real)
(declare-fun x853 () x364)
(declare-fun x1732 () Real)
(declare-fun x1620 () Real)
(declare-fun x2093 (Real) Real)
(declare-fun x1267 () Real)
(declare-fun x473 () Real)
(declare-fun x1304 () Real)
(declare-fun x1259 (Real) Real)
(declare-fun x1728 () x364)
(declare-fun x760 (Real) Real)
(declare-fun x1755 () Real)
(declare-fun x2004 () Real)
(declare-fun x1887 () Real)
(declare-fun x127 () Real)
(declare-fun x2074 () Real)
(declare-fun x1611 () Real)
(declare-fun x95 () Real)
(declare-fun x1752 () Real)
(declare-fun x405 () Real)
(declare-fun x1032 () Real)
(declare-fun x302 () x364)
(declare-fun x771 () Real)
(declare-fun x2142 () Real)
(declare-fun x1079 () Real)
(declare-fun x1685 () Bool)
(declare-fun x962 () Real)
(declare-fun x1788 (Real) Real)
(declare-fun x1894 () x364)
(declare-fun x1092 () Real)
(declare-fun x2048 () Real)
(declare-fun x1178 (Real) Real)
(declare-fun x1909 () Bool)
(declare-fun x1106 () Real)
(declare-fun x1923 (Real) Real)
(declare-fun x755 () Bool)
(declare-fun x1185 () Real)
(declare-fun x1090 () Real)
(declare-fun x2112 () Real)
(declare-fun x1183 () Real)
(declare-fun x1070 () Real)
(declare-fun x695 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x2045 () Real)
(declare-fun x66 () Real)
(declare-fun x448 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x2097 () Real)
(declare-fun x2022 () Real)
(declare-fun x1181 () Real)
(declare-fun x14 () Real)
(declare-fun x2078 () Bool)
(declare-fun x1913 () Real)
(declare-fun x1348 () Real)
(declare-fun x1922 () Bool)
(declare-fun x924 () Bool)
(declare-fun x144 () Real)
(declare-fun x1992 () Real)
(declare-fun x1476 () Bool)
(declare-fun x2007 () Real)
(declare-fun x1951 () Real)
(declare-fun x263 () Real)
(declare-fun x1661 () Bool)
(declare-fun x1745 () Real)
(declare-fun x1666 () Real)
(declare-fun x1781 () Real)
(declare-fun x1339 () Bool)
(declare-fun x992 () Real)
(declare-fun x1963 () Real)
(declare-fun x1133 () Bool)
(declare-fun x577 () Real)
(declare-fun x1949 () x364)
(declare-fun x1368 () Real)
(declare-fun x945 () Real)
(declare-fun x1156 () Real)
(declare-fun x2042 () Real)
(declare-fun x1850 () x364)
(declare-fun x1130 () Real)
(declare-fun x995 () Real)
(declare-fun x1239 () Real)
(declare-fun x1158 () Real)
(declare-fun x403 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x315 () Bool)
(declare-fun x1572 () Real)
(declare-fun x325 () Real)
(declare-fun x99 () Bool)
(declare-fun x750 () Real)
(declare-fun x2096 () Real)
(declare-fun x36 () Real)
(declare-fun x1498 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x1814 () Real)
(declare-fun x1038 () Real)
(declare-fun x1428 () Real)
(declare-fun x710 () Real)
(declare-fun x1253 () Real)
(declare-fun x92 () Real)
(declare-fun x660 () Real)
(declare-fun x33 (Real) Real)
(declare-fun x2002 () Bool)
(declare-fun x793 () Bool)
(declare-fun x2027 () Real)
(declare-fun x280 () Real)
(declare-fun x1150 () Real)
(declare-fun x2056 () Real)
(declare-fun x383 () Bool)
(declare-fun x697 () Real)
(declare-fun x367 () Real)
(declare-fun x2148 () Real)
(declare-fun x1801 () Bool)
(declare-fun x215 () Real)
(declare-fun x827 () Bool)
(declare-fun x794 () Real)
(declare-fun x1706 () Real)
(declare-fun x1508 () x364)
(declare-fun x1166 () Real)
(declare-fun x2111 () Real)
(declare-fun x879 () Real)
(declare-fun x1425 () x364)
(declare-fun x365 () Real)
(declare-fun x1986 () Real)
(declare-fun x357 () Real)
(declare-fun x1014 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x121 () Real)
(declare-fun x1536 () Real)
(declare-fun x2132 (x364) Real)
(declare-fun x670 () Bool)
(declare-fun x1218 () Real)
(declare-fun x1567 () Real)
(declare-fun x74 () x364)
(declare-fun x342 (Real) Real)
(declare-fun x1175 () Bool)
(declare-fun x1097 () Real)
(declare-fun x1285 () Real)
(declare-fun x678 () Real)
(declare-fun x559 () Bool)
(declare-fun x362 () Real)
(declare-fun x1580 () Real)
(declare-fun x859 (Real) Real)
(declare-fun x1362 () Real)
(declare-fun x588 () Real)
(declare-fun x2146 () Real)
(declare-fun x600 () Bool)
(declare-fun x380 () Real)
(declare-fun x615 () Real)
(declare-fun x1563 () x364)
(declare-fun x118 () Real)
(declare-fun x605 () Real)
(declare-fun x1089 () Real)
(declare-fun x1127 () Real)
(declare-fun x180 () Real)
(declare-fun x1678 () Bool)
(declare-fun x662 () x364)
(declare-fun x1851 () Real)
(declare-fun x410 () Real)
(declare-fun x766 () Real)
(declare-fun x1034 () Bool)
(declare-fun x1866 (Real) Real)
(declare-fun x525 () Bool)
(declare-fun x111 () Real)
(declare-fun x1998 (Real) Real)
(declare-fun x1674 () x364)
(declare-fun x1487 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x1622 () Real)
(declare-fun x1047 () Real)
(declare-fun x548 () x364)
(declare-fun x1751 () Real)
(declare-fun x1189 () Bool)
(declare-fun x763 () Real)
(declare-fun x169 () Real)
(declare-fun x1483 () Real)
(declare-fun x831 () Real)
(declare-fun x1293 () Bool)
(declare-fun x285 () Real)
(declare-fun x758 () Real)
(declare-fun x1243 () Real)
(declare-fun x1535 () Real)
(declare-fun x1231 () Real)
(declare-fun x1917 () Real)
(declare-fun x2006 () Bool)
(declare-fun x58 () Bool)
(declare-fun x349 () Real)
(declare-fun x462 () Real)
(declare-fun x2000 () Real)
(declare-fun x354 () Bool)
(declare-fun x531 () Real)
(declare-fun x1349 () x364)
(declare-fun x317 () Real)
(declare-fun x596 () Real)
(declare-fun x1199 () Real)
(declare-fun x1465 () Real)
(declare-fun x798 () Real)
(declare-fun x129 () Real)
(declare-fun x838 () Real)
(declare-fun x872 () Bool)
(declare-fun x1421 () Real)
(declare-fun x720 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1292 () Real)
(declare-fun x1595 () Real)
(declare-fun x1655 () Real)
(declare-fun x774 () Real)
(declare-fun x802 () Real)
(declare-fun x614 () x364)
(declare-fun x2109 () Real)
(declare-fun x1832 () Real)
(declare-fun x1835 (Real) Real)
(declare-fun x38 () Bool)
(declare-fun x906 () Real)
(declare-fun x2136 () Real)
(declare-fun x2021 () Real)
(declare-fun x707 () Real)
(declare-fun x1062 () Bool)
(declare-fun x1973 () Real)
(declare-fun x788 () Bool)
(declare-fun x142 () x364)
(declare-fun x501 () x364)
(declare-fun x835 () Real)
(declare-fun x1737 () Real)
(declare-fun x151 () Real)
(declare-fun x1882 () Real)
(declare-fun x1270 () Real)
(declare-fun x1967 () Real)
(declare-fun x783 () Real)
(declare-fun x1901 () Real)
(declare-fun x776 () Real)
(declare-fun x288 () Real)
(declare-fun x459 () Real)
(declare-fun x726 () Real)
(declare-fun x1650 () Bool)
(declare-fun x182 (Real) Real)
(declare-fun x742 () Bool)
(declare-fun x475 () Real)
(declare-fun x746 () Real)
(declare-fun x1263 () Bool)
(declare-fun x1147 () Real)
(declare-fun x1082 () Real)
(declare-fun x1190 () Real)
(declare-fun x177 () Bool)
(declare-fun x909 () Real)
(declare-fun x1938 () Real)
(declare-fun x30 () Real)
(declare-fun x1044 () Real)
(declare-fun x2014 () Real)
(declare-fun x1075 () Real)
(declare-fun x2044 () Real)
(declare-fun x1750 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x498 () Real)
(declare-fun x534 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x1714 () Real)
(declare-fun x1717 () Real)
(declare-fun x67 () Real)
(declare-fun x435 () Real)
(declare-fun x1663 () Real)
(declare-fun x1405 () Bool)
(declare-fun x1984 () Real)
(declare-fun x333 () Real)
(declare-fun x1369 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x732 () Real)
(declare-fun x927 () Real)
(declare-fun x1749 () Real)
(declare-fun x1012 () Real)
(declare-fun x743 () Real)
(declare-fun x304 () Real)
(declare-fun x155 () Bool)
(declare-fun x741 () Real)
(declare-fun x1713 () Real)
(declare-fun x1893 () Real)
(declare-fun x1241 () Real)
(declare-fun x1934 (Real) Real)
(declare-fun x616 () Real)
(declare-fun x1494 () Real)
(declare-fun x2050 () Real)
(declare-fun x1863 () Real)
(declare-fun x824 (Real Real) Real)
(declare-fun x819 () Real)
(declare-fun x414 () Real)
(declare-fun x752 () Real)
(declare-fun x60 () Real)
(declare-fun x1441 () Real)
(declare-fun x2025 () Real)
(declare-fun x1296 () Real)
(declare-fun x1184 () Real)
(declare-fun x128 () Real)
(declare-fun x1996 () Real)
(declare-fun x822 () Bool)
(declare-fun x811 () Bool)
(declare-fun x725 () Real)
(declare-fun x713 () Real)
(declare-fun x801 () Real)
(declare-fun x479 () Real)
(declare-fun x1061 () Real)
(declare-fun x1997 () Real)
(declare-fun x253 () Real)
(declare-fun x369 (x364) Real)
(declare-fun x1240 () Real)
(declare-fun x337 () Real)
(declare-fun x901 () Real)
(declare-fun x797 () Real)
(declare-fun x976 () x364)
(declare-fun x669 () x364)
(declare-fun x1773 () Real)
(declare-fun x1705 () Bool)
(declare-fun x423 () Real)
(declare-fun x919 () Real)
(declare-fun x47 () Bool)
(declare-fun x400 () Real)
(declare-fun x2046 () Real)
(declare-fun x422 () Real)
(declare-fun x505 () Real)
(declare-fun x270 () Real)
(declare-fun x636 () Real)
(declare-fun x77 () Real)
(declare-fun x643 () Real)
(declare-fun x307 () Bool)
(declare-fun x2038 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x1848 () Real)
(declare-fun x196 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x236 () x364)
(declare-fun x874 () Bool)
(declare-fun x73 () Bool)
(declare-fun x1517 () Real)
(declare-fun x1821 () Real)
(declare-fun x921 () Real)
(declare-fun x1125 () Real)
(declare-fun x1049 () Real)
(declare-fun x818 () Real)
(declare-fun x360 () Real)
(declare-fun x115 (Real) Real)
(declare-fun x1777 () Real)
(declare-fun x476 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x1069 () Real)
(declare-fun x1688 () x364)
(declare-fun x451 () x364)
(declare-fun x1132 () Real)
(declare-fun x1905 () Bool)
(declare-fun x597 () Bool)
(declare-fun x439 () Real)
(declare-fun x1081 () Real)
(declare-fun x1151 () Real)
(declare-fun x1854 (Real) Real)
(declare-fun x1819 () Real)
(declare-fun x744 () x364)
(declare-fun x2128 () Real)
(declare-fun x204 () Real)
(declare-fun x295 () Bool)
(declare-fun x160 () Real)
(declare-fun x939 () Real)
(declare-fun x800 () Real)
(declare-fun x1840 () Real)
(declare-fun x268 (Real) Real)
(declare-fun x134 () Real)
(declare-fun x1915 () Real)
(declare-fun x1943 () Real)
(declare-fun x1311 () Bool)
(declare-fun x1807 () Real)
(declare-fun x1326 () Real)
(declare-fun x1897 () Real)
(declare-fun x1899 () Real)
(declare-fun x15 () Bool)
(declare-fun x785 () Real)
(declare-fun x1729 () Real)
(declare-fun x216 (Real) Real)
(declare-fun x1291 () Real)
(declare-fun x1846 () Real)
(declare-fun x1739 () Real)
(declare-fun x352 () Real)
(declare-fun x323 () Real)
(declare-fun x436 () Real)
(declare-fun x738 () x364)
(declare-fun x1810 () Real)
(declare-fun x1010 (Real) Real)
(declare-fun x1201 () Real)
(declare-fun x1549 (Real) Real)
(declare-fun x1077 () Real)
(declare-fun x1233 () x364)
(declare-fun x1927 () Bool)
(declare-fun x1195 () Real)
(declare-fun x1286 () Bool)
(declare-fun x685 () Real)
(declare-fun x1981 () Real)
(declare-fun x276 () Real)
(declare-fun x1457 () x364)
(declare-fun x1709 () Real)
(declare-fun x524 () Real)
(declare-fun x718 () Real)
(declare-fun x1833 () Real)
(declare-fun x1704 () Bool)
(declare-fun x442 () Real)
(declare-fun x470 () Real)
(declare-fun x416 () Real)
(declare-fun x1359 () Real)
(declare-fun x1377 (Real) Real)
(declare-fun x471 () Bool)
(declare-fun x1765 () Real)
(declare-fun x1050 () Real)
(declare-fun x320 () Real)
(declare-fun x1442 () Real)
(declare-fun x2113 () Real)
(declare-fun x2114 () Real)
(declare-fun x2028 () Real)
(declare-fun x1042 () Real)
(declare-fun x26 () Real)
(declare-fun x576 (Real) Real)
(declare-fun x1418 () Real)
(declare-fun x1088 (Real) Real)
(declare-fun x1692 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x898 () Real)
(declare-fun x953 () Real)
(declare-fun x1715 () Real)
(declare-fun x386 () Real)
(declare-fun x1974 () Real)
(declare-fun x1763 () Real)
(declare-fun x1115 () Bool)
(declare-fun x94 () Real)
(declare-fun x666 () Real)
(declare-fun x1687 () Real)
(declare-fun x1007 () Real)
(declare-fun x1635 () Real)
(declare-fun x311 () Real)
(declare-fun x676 () Bool)
(declare-fun x949 () Bool)
(declare-fun x37 () Real)
(declare-fun x1107 () Real)
(declare-fun x893 () Bool)
(declare-fun x1205 () Real)
(declare-fun x1961 () x364)
(declare-fun x607 () x364)
(declare-fun x1350 () Real)
(declare-fun x124 () Real)
(declare-fun x553 () Bool)
(declare-fun x858 () Real)
(declare-fun x1953 () Real)
(declare-fun x1942 () Real)
(declare-fun x2016 () Bool)
(declare-fun x1524 () x364)
(declare-fun x658 () Real)
(declare-fun x907 () Bool)
(declare-fun x1154 () Real)
(declare-fun x1212 (Real) Real)
(declare-fun x834 () Bool)
(declare-fun x775 () Real)
(declare-fun x218 () Real)
(declare-fun x655 () Bool)
(declare-fun x1196 () Real)
(declare-fun x1268 () Bool)
(declare-fun x1171 () x364)
(declare-fun x1208 () Real)
(declare-fun x512 () Real)
(declare-fun x1249 () x364)
(declare-fun x321 () Real)
(declare-fun x158 () Real)
(declare-fun x1646 (x364) Real)
(declare-fun x1589 () Real)
(declare-fun x1134 () Real)
(declare-fun x11 () Real)
(declare-fun x2134 () Real)
(declare-fun x1601 () Bool)
(declare-fun x255 () Real)
(declare-fun x887 () Real)
(declare-fun x1009 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x1849 () Real)
(declare-fun x2080 () Real)
(declare-fun x1759 () x364)
(declare-fun x532 () Real)
(declare-fun x418 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x557 () Real)
(declare-fun x1186 (Real) Real)
(declare-fun x2062 () Bool)
(declare-fun x1555 () Real)
(declare-fun x415 () Real)
(declare-fun x991 () Real)
(declare-fun x108 () Bool)
(declare-fun x324 () Bool)
(declare-fun x1290 () Real)
(declare-fun x1914 () x364)
(declare-fun x517 () Real)
(declare-fun x1229 () Real)
(declare-fun x1720 () Real)
(declare-fun x1320 () Real)
(declare-fun x1018 () Real)
(declare-fun x1099 () Bool)
(declare-fun x2040 () Real)
(declare-fun x1727 () Real)
(declare-fun x1621 () Real)
(declare-fun x1327 () Real)
(declare-fun x2066 () Real)
(declare-fun x86 () Real)
(declare-fun x2003 () Real)
(declare-fun x1283 () Real)
(declare-fun x1338 () Real)
(declare-fun x279 () Real)
(declare-fun x996 () Real)
(declare-fun x1096 () x364)
(declare-fun x69 () Real)
(declare-fun x486 () Real)
(declare-fun x267 () Real)
(declare-fun x993 () Real)
(declare-fun x328 (Real) Real)
(declare-fun x511 () Real)
(declare-fun x82 () Real)
(declare-fun x1812 () Real)
(declare-fun x105 () Real)
(declare-fun x201 () Real)
(declare-fun x1261 () Real)
(declare-fun x341 () Real)
(declare-fun x90 () Real)
(declare-fun x644 (Real) Real)
(declare-fun x330 () Real)
(declare-fun x1576 () Real)
(declare-fun x677 () Real)
(declare-fun x1570 () Bool)
(declare-fun x1653 () Real)
(declare-fun x1085 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x172 () Real)
(declare-fun x1935 () Real)
(declare-fun x455 () Real)
(declare-fun x998 () Real)
(declare-fun x573 () Real)
(declare-fun x631 () x364)
(declare-fun x382 (x364) Real)
(declare-fun x198 () Real)
(declare-fun x2144 () Real)
(declare-fun x1355 () Real)
(declare-fun x1278 () Real)
(declare-fun x865 () Real)
(declare-fun x1055 (Real) Real)
(declare-fun x1448 () Real)
(declare-fun x2092 () Real)
(declare-fun x2084 (Real) Real)
(declare-fun x1665 () Real)
(declare-fun x519 () x364)
(declare-fun x292 () Real)
(declare-fun x148 () Bool)
(declare-fun x1460 () Real)
(declare-fun x880 () Real)
(declare-fun x170 () Bool)
(declare-fun x254 () Real)
(declare-fun x864 () Real)
(declare-fun x178 (Real) Real)
(declare-fun x1342 () Bool)
(declare-fun x508 () Real)
(declare-fun x289 () Real)
(declare-fun x1533 () Real)
(declare-fun x889 () Bool)
(declare-fun x1347 () Real)
(declare-fun x1384 () Bool)
(declare-fun x642 (Real) Real)
(declare-fun x1904 () x364)
(declare-fun x1698 () Bool)
(declare-fun x638 () Real)
(declare-fun x1972 () x364)
(declare-fun x203 () Real)
(declare-fun x867 () Real)
(declare-fun x1860 () Real)
(declare-fun x1230 () Real)
(declare-fun x1643 () Real)
(declare-fun x396 () Real)
(declare-fun x560 () x364)
(declare-fun x113 () Real)
(declare-fun x1495 (Real) Real)
(declare-fun x1131 () Bool)
(declare-fun x162 () Bool)
(declare-fun x913 () Real)
(declare-fun x401 () Real)
(declare-fun x1867 () Real)
(declare-fun x1424 () x364)
(declare-fun x1332 () Real)
(declare-fun x1114 () Real)
(declare-fun x1939 () Real)
(declare-fun x1074 () Real)
(declare-fun x1522 (Real) Real)
(declare-fun x447 () Real)
(declare-fun x366 () Real)
(declare-fun x1546 () Real)
(declare-fun x579 () Real)
(declare-fun x84 () Bool)
(declare-fun x2086 () x364)
(declare-fun x1630 () Real)
(declare-fun x1322 () Bool)
(declare-fun x206 () Real)
(declare-fun x112 () Real)
(declare-fun x1944 () Real)
(declare-fun x599 () Bool)
(declare-fun x1811 () Bool)
(declare-fun x1766 () x364)
(declare-fun x2120 () Real)
(declare-fun x1271 (Real) Real)
(declare-fun x1307 () Bool)
(declare-fun x805 () Real)
(declare-fun x1710 () Real)
(declare-fun x1245 () Bool)
(declare-fun x881 () Real)
(declare-fun x740 () Real)
(declare-fun x1197 () Real)
(declare-fun x1890 () Real)
(declare-fun x645 () Real)
(declare-fun x613 () Real)
(declare-fun x1433 () Real)
(declare-fun x1419 () Bool)
(declare-fun x829 () Real)
(declare-fun x1793 () Bool)
(declare-fun x1892 () Real)
(declare-fun x1786 () Real)
(declare-fun x229 () Real)
(declare-fun x1209 () Bool)
(declare-fun x689 () Real)
(declare-fun x990 () Real)
(declare-fun x780 () Real)
(declare-fun x885 () Real)
(declare-fun x2122 () Real)
(declare-fun x946 () Real)
(declare-fun x1440 () Real)
(declare-fun x135 () Real)
(declare-fun x1534 () Bool)
(declare-fun x1991 () Real)
(declare-fun x1399 () Real)
(declare-fun x527 () Real)
(declare-fun x200 () Real)
(declare-fun x1247 () Bool)
(declare-fun x587 () Real)
(declare-fun x1758 () Real)
(declare-fun x2031 () Real)
(declare-fun x1188 () Real)
(declare-fun x1207 () Real)
(declare-fun x891 () Bool)
(declare-fun x450 () Real)
(declare-fun x1826 () Real)
(declare-fun x1258 () Real)
(declare-fun x892 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x1375 () Real)
(declare-fun x152 () Real)
(declare-fun x1910 () Real)
(declare-fun x1496 () Real)
(declare-fun x1971 () Real)
(declare-fun x1091 () Real)
(declare-fun x159 () Bool)
(declare-fun x2072 () Real)
(declare-fun x1610 () Real)
(declare-fun x1602 () Real)
(declare-fun x171 () Bool)
(declare-fun x896 () x364)
(declare-fun x1581 () x364)
(declare-fun x194 () Real)
(declare-fun x902 () Real)
(declare-fun x397 (x364) Real)
(declare-fun x1284 () Real)
(declare-fun x1260 () Real)
(declare-fun x1113 () Real)
(declare-fun x188 () Real)
(declare-fun x547 () Real)
(declare-fun x318 () Real)
(declare-fun x1402 () Real)
(declare-fun x165 (x364) Real)
(declare-fun x767 () Real)
(declare-fun x1690 () Bool)
(declare-fun x1297 () Real)
(declare-fun x477 () Real)
(declare-fun x782 () Real)
(declare-fun x1454 () Real)
(declare-fun x1512 () Real)
(declare-fun x1086 () Real)
(declare-fun x2052 () Real)
(declare-fun x1299 () Real)
(declare-fun x368 () Real)
(declare-fun x1642 () Real)
(declare-fun x2053 () Real)
(declare-fun x407 () Real)
(declare-fun x271 () Real)
(declare-fun x514 () Real)
(declare-fun x65 () Real)
(declare-fun x2055 () Real)
(declare-fun x264 () Bool)
(declare-fun x747 () x364)
(declare-fun x503 () Real)
(declare-fun x1395 () Bool)
(declare-fun x1754 (Real) Real)
(declare-fun x759 () Real)
(declare-fun x184 () Real)
(declare-fun x1358 () Bool)
(declare-fun x1493 () Real)
(declare-fun x1742 () x364)
(declare-fun x1294 () Real)
(declare-fun x1608 () Real)
(declare-fun x1824 () Real)
(declare-fun x1452 () Real)
(declare-fun x699 () Bool)
(declare-fun x195 () Real)
(declare-fun x2008 () Real)
(declare-fun x2147 () Real)
(declare-fun x1080 () Bool)
(declare-fun x1118 () Real)
(declare-fun x1427 () x364)
(declare-fun x1237 () Bool)
(declare-fun x353 () Real)
(declare-fun x104 () Real)
(declare-fun x1523 () Real)
(declare-fun x1722 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x260 () x364)
(declare-fun x520 () Bool)
(declare-fun x1591 () Real)
(declare-fun x1994 () Real)
(declare-fun x538 () Real)
(declare-fun x1124 () Real)
(declare-fun x2088 () Real)
(declare-fun x1764 () Real)
(declare-fun x1210 () Real)
(declare-fun x487 () Bool)
(declare-fun x1691 () Real)
(declare-fun x1825 () Real)
(declare-fun x2060 () Real)
(declare-fun x1396 () Real)
(declare-fun x1772 () Bool)
(declare-fun x1417 (Real) Real)
(declare-fun x1146 () Bool)
(declare-fun x1227 () Real)
(declare-fun x1594 () Real)
(declare-fun x34 () Bool)
(declare-fun x1164 () Real)
(declare-fun x936 () Real)
(define-fun x32 ((x364 x364) (x1323 Real)) x364 (ite ((_ is x1857) x364) (x1857 (x1798 x364) (+ (x1738 x364) x1323)) (ite ((_ is x686) x364) (x686 (x1137 x364) (x472 x364) (+ x1323 (x1206 x364))) (x465 (+ (x1544 x364) x1323)))))
(define-fun x1590 ((x441 Real)) Real (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x441) (>= x441 0)) x441 (- x441 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1839 ((x441 Real)) Real (ite (and (< x441 0) (>= x441 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x441) x441))
(define-fun x334 ((x900 Real)) Bool (and (<= 0 x900) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x900)))
(define-fun x958 ((x900 Real)) Bool (and (= x900 (x824 x900 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x900 (x824 115792089237316195423570985008687907853269984665640564039457584007913129639935 x900))))
(define-fun x866 ((x900 Real)) Bool (and (= (x824 x900 0) 0) (= 0 (x824 0 x900))))
(define-fun x185 ((x900 Real)) Bool (= (x824 x900 x900) x900))
(define-fun x1539 ((x900 Real)) Bool (and (x866 x900) (x958 x900) (x185 x900)))
(define-fun x506 ((x900 Real)) Bool (= (x824 20282409603651670423947251286015 x900) (x824 20282409603651670423947251286015 (x824 20282409603651670423947251286015 x900))))
(define-fun x101 ((x900 Real)) Bool (=> (and (> 20282409603651670423947251286016 x900) (<= 0 x900)) (= x900 (x824 20282409603651670423947251286015 x900))))
(define-fun x826 ((x900 Real)) Bool (=> (= x900 (x824 20282409603651670423947251286015 x900)) (and (<= 0 x900) (> 20282409603651670423947251286016 x900))))
(define-fun x444 ((x900 Real)) Bool (=> (and (<= 20282409603651670423947251286016 x900) (< x900 40564819207303340847894502572032)) (= (- x900 20282409603651670423947251286016) (x824 20282409603651670423947251286015 x900))))
(define-fun x1615 ((x900 Real) (x1516 Real)) Bool (and (= (+ (* 20282409603651670423947251286016 x1516) (x824 20282409603651670423947251286015 x900)) x900) (>= x1516 0)))
(define-fun x848 ((x900 Real) (x2024 Real)) Bool (and (x101 x900) (x444 x900) (x1615 x900 x2024) (x506 x900) (x826 x900)))
(define-fun x1520 ((x900 Real) (x1516 Real)) Bool (= (x824 x900 x1516) (x824 x1516 x900)))
(define-fun x223 ((x900 Real) (x1516 Real)) Bool (and (>= (x824 x900 x1516) 0) (=> (>= x1516 0) (>= x1516 (x824 x900 x1516))) (=> (<= 0 x900) (<= (x824 x900 x1516) x900))))
(define-fun x542 ((x900 Real) (x1516 Real)) Bool (and (x1520 x900 x1516) (x223 x900 x1516)))
(define-fun x1501 ((x900 Real) (x2024 Real)) Bool (and (x542 x900 20282409603651670423947251286015) (x848 x900 x2024)))
(define-fun x1192 ((x900 Real)) Bool (= (ite (< (x824 x900 20282409603651670423947251286015) 10141204801825835211973625643008) (x824 x900 20282409603651670423947251286015) (+ (x824 x900 20282409603651670423947251286015) 115792089237316195423570985008687907853269984645358154435805913583965878353920)) (x346 x900)))
(define-fun x1401 ((x900 Real)) Bool (= (x824 255 (x824 255 x900)) (x824 255 x900)))
(define-fun x1519 ((x900 Real)) Bool (=> (and (< x900 256) (<= 0 x900)) (= x900 (x824 255 x900))))
(define-fun x846 ((x900 Real)) Bool (=> (= x900 (x824 255 x900)) (and (>= x900 0) (< x900 256))))
(define-fun x1015 ((x900 Real)) Bool (=> (and (> 512 x900) (>= x900 256)) (= (- x900 256) (x824 255 x900))))
(define-fun x954 ((x900 Real) (x1516 Real)) Bool (and (>= x1516 0) (= x900 (+ (* 256 x1516) (x824 255 x900)))))
(define-fun x1574 ((x900 Real) (x2024 Real)) Bool (and (x954 x900 x2024) (x846 x900) (x1401 x900) (x1519 x900) (x1015 x900)))
(define-fun x1703 ((x900 Real) (x2024 Real)) Bool (and (x542 x900 255) (x1574 x900 x2024)))
(define-fun x1403 ((x900 Real)) Bool (= (x824 1461501637330902918203684832716283019655932542975 x900) (x824 1461501637330902918203684832716283019655932542975 (x824 1461501637330902918203684832716283019655932542975 x900))))
(define-fun x211 ((x900 Real)) Bool (=> (and (<= 0 x900) (< x900 1461501637330902918203684832716283019655932542976)) (= x900 (x824 1461501637330902918203684832716283019655932542975 x900))))
(define-fun x199 ((x900 Real)) Bool (=> (= (x824 1461501637330902918203684832716283019655932542975 x900) x900) (and (< x900 1461501637330902918203684832716283019655932542976) (>= x900 0))))
(define-fun x1111 ((x900 Real)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x900) (< x900 2923003274661805836407369665432566039311865085952)) (= (- x900 1461501637330902918203684832716283019655932542976) (x824 1461501637330902918203684832716283019655932542975 x900))))
(define-fun x1780 ((x900 Real) (x1516 Real)) Bool (and (>= x1516 0) (= x900 (+ (* 1461501637330902918203684832716283019655932542976 x1516) (x824 1461501637330902918203684832716283019655932542975 x900)))))
(define-fun x481 ((x900 Real) (x2024 Real)) Bool (and (x199 x900) (x1403 x900) (x211 x900) (x1111 x900) (x1780 x900 x2024)))
(define-fun x1735 ((x900 Real) (x2024 Real)) Bool (and (x481 x900 x2024) (x542 x900 1461501637330902918203684832716283019655932542975)))
(define-fun x768 ((x900 Real)) Bool (= (x824 340282366920938463463374607431768211455 (x824 340282366920938463463374607431768211455 x900)) (x824 340282366920938463463374607431768211455 x900)))
(define-fun x984 ((x900 Real)) Bool (=> (and (< x900 340282366920938463463374607431768211456) (<= 0 x900)) (= (x824 340282366920938463463374607431768211455 x900) x900)))
(define-fun x329 ((x900 Real)) Bool (=> (= x900 (x824 340282366920938463463374607431768211455 x900)) (and (> 340282366920938463463374607431768211456 x900) (>= x900 0))))
(define-fun x355 ((x900 Real)) Bool (=> (and (>= x900 340282366920938463463374607431768211456) (< x900 680564733841876926926749214863536422912)) (= (- x900 340282366920938463463374607431768211456) (x824 340282366920938463463374607431768211455 x900))))
(define-fun x130 ((x900 Real) (x1516 Real)) Bool (and (= (+ (* x1516 340282366920938463463374607431768211456) (x824 340282366920938463463374607431768211455 x900)) x900) (<= 0 x1516)))
(define-fun x2105 ((x900 Real) (x2024 Real)) Bool (and (x130 x900 x2024) (x768 x900) (x355 x900) (x984 x900) (x329 x900)))
(define-fun x728 ((x900 Real) (x2024 Real)) Bool (and (x2105 x900 x2024) (x542 x900 340282366920938463463374607431768211455)))
(define-fun x2151 ((x900 Real)) Bool (= (x824 18446744073709551615 x900) (x824 18446744073709551615 (x824 18446744073709551615 x900))))
(define-fun x114 ((x900 Real)) Bool (=> (and (< x900 18446744073709551616) (<= 0 x900)) (= x900 (x824 18446744073709551615 x900))))
(define-fun x961 ((x900 Real)) Bool (=> (= x900 (x824 18446744073709551615 x900)) (and (< x900 18446744073709551616) (>= x900 0))))
(define-fun x1126 ((x900 Real)) Bool (=> (and (> 36893488147419103232 x900) (>= x900 18446744073709551616)) (= (x824 18446744073709551615 x900) (- x900 18446744073709551616))))
(define-fun x656 ((x900 Real) (x1516 Real)) Bool (and (>= x1516 0) (= (+ (x824 18446744073709551615 x900) (* x1516 18446744073709551616)) x900)))
(define-fun x1800 ((x900 Real) (x2024 Real)) Bool (and (x961 x900) (x1126 x900) (x656 x900 x2024) (x114 x900) (x2151 x900)))
(define-fun x702 ((x900 Real) (x2024 Real)) Bool (and (x542 x900 18446744073709551615) (x1800 x900 x2024)))
(define-fun x528 ((x900 Real)) Bool (= (x824 65535 x900) (x824 65535 (x824 65535 x900))))
(define-fun x1122 ((x900 Real)) Bool (=> (and (>= x900 0) (< x900 65536)) (= (x824 65535 x900) x900)))
(define-fun x673 ((x900 Real)) Bool (=> (= x900 (x824 65535 x900)) (and (< x900 65536) (>= x900 0))))
(define-fun x356 ((x900 Real)) Bool (=> (and (< x900 131072) (>= x900 65536)) (= (- x900 65536) (x824 65535 x900))))
(define-fun x624 ((x900 Real) (x1516 Real)) Bool (and (>= x1516 0) (= (+ (x824 65535 x900) (* 65536 x1516)) x900)))
(define-fun x2126 ((x900 Real) (x2024 Real)) Bool (and (x356 x900) (x1122 x900) (x673 x900) (x624 x900 x2024) (x528 x900)))
(define-fun x248 ((x900 Real) (x2024 Real)) Bool (and (x542 x900 65535) (x2126 x900 x2024)))
(define-fun x258 ((x900 Real)) Bool (= (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x900)) (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x900)))
(define-fun x312 ((x900 Real)) Bool (=> (and (>= x900 0) (> 32 x900)) (= (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x900) 0)))
(define-fun x1993 ((x900 Real) (x1516 Real) (x565 Real) (x692 Real)) Bool (and (< x1516 32) (<= 0 x1516) (> 1 x692) (= (* 32 x565) (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x900)) (>= x692 0) (= x900 (+ (* x692 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 32 x565) x1516)) (>= x565 0) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x565)))
(define-fun x1587 ((x900 Real) (x149 Real) (x45 Real) (x691 Real)) Bool (and (x1993 x900 x149 x45 x691) (x312 x900) (x258 x900)))
(define-fun x145 ((x900 Real) (x149 Real) (x45 Real) (x691 Real)) Bool (and (x542 x900 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1587 x900 x149 x45 x691)))
(define-fun x536 ((x900 Real)) Bool (= (x1788 x900) (ite (< (x824 x900 340282366920938463463374607431768211455) 170141183460469231731687303715884105728) (x824 x900 340282366920938463463374607431768211455) (+ (x824 x900 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480))))
(define-fun x1467 ((x1831 Real)) Real (ite (= x830 x1831) x433 (x1377 x1831)))
(define-fun x212 ((x1831 Real)) Real (ite (= x1831 x456) x1033 (x1178 x1831)))
(define-fun x1841 ((x1831 Real)) Real (ite (= x1831 x1428) x1073 (x1298 x1831)))
(define-fun x277 ((x1831 Real)) Real (ite (= x2077 x1831) x2139 (x859 x1831)))
(define-fun x1275 ((x1831 Real)) Real (ite (= x168 x1831) x365 (x70 x1831)))
(define-fun x816 ((x1831 Real)) Real (ite (= x1831 x696) x689 (x1505 x1831)))
(define-fun x671 ((x1831 Real)) Real (ite (= x1831 x992) x601 (x1088 x1831)))
(define-fun x1389 ((x1831 Real)) Real (ite (= x1942 x1831) x21 (x1907 x1831)))
(define-fun x1169 ((x1831 Real)) Real (ite (= 128 x1831) x847 (x786 x1831)))
(define-fun x1446 ((x1831 Real)) Real (ite (= x1831 160) x363 (x1169 x1831)))
(define-fun x9 ((x1831 Real)) Real (ite (= 192 x1831) x1794 (x1446 x1831)))
(define-fun x176 ((x1831 Real)) Real (ite (= x1831 224) x588 (x9 x1831)))
(define-fun x1634 ((x1831 Real)) Real (ite (= x1831 256) x1773 (x176 x1831)))
(define-fun x1956 ((x1831 Real)) Real (ite (= x1831 128) x203 (x786 x1831)))
(define-fun x1584 ((x1831 Real)) Real (ite (= x1831 160) x1107 (x1956 x1831)))
(define-fun x2012 ((x1831 Real)) Real (ite (= x1831 192) x571 (x1584 x1831)))
(define-fun x1432 ((x1831 Real)) Real (ite (= x1831 224) x1187 (x2012 x1831)))
(define-fun x1740 ((x1831 Real)) Real (ite (= 256 x1831) x589 (x1432 x1831)))
(define-fun x266 ((x1831 Real)) Real (ite (and x287 x1307) (x1634 x1831) (x1740 x1831)))
(define-fun x585 ((x1831 Real)) Real (ite (= 128 x1831) x1202 (x1835 x1831)))
(define-fun x790 ((x1831 Real)) Real (ite (= x1831 160) x512 (x585 x1831)))
(define-fun x241 ((x1831 Real)) Real (ite (= 192 x1831) x186 (x790 x1831)))
(define-fun x1346 ((x1831 Real)) Real (ite (= 224 x1831) x188 (x241 x1831)))
(define-fun x420 ((x1831 Real)) Real (ite (= x1831 256) x414 (x1346 x1831)))
(define-fun x1394 ((x1831 Real)) Real (ite (= x291 x1831) x1291 (x178 x1831)))
(define-fun x1876 ((x1831 Real)) Real (ite (= x604 x1831) x2076 (x1394 x1831)))
(define-fun x721 ((x1831 Real)) Real (ite (= x1315 x1831) x341 (x1876 x1831)))
(define-fun x877 ((x1831 Real)) Real (ite (= x1164 x1831) x453 (x721 x1831)))
(define-fun x997 ((x1831 Real)) Real (ite (= x134 x1831) x106 (x877 x1831)))
(define-fun x2049 ((x1831 Real)) Real (ite (= x1831 0) x330 (x608 x1831)))
(define-fun x540 ((x1831 Real)) Real (ite (= x1831 32) x1229 (x2049 x1831)))
(define-fun x394 ((x1831 Real)) Real (ite (= 64 x1831) x1633 (x540 x1831)))
(define-fun x1959 ((x1831 Real)) Real (ite (= 96 x1831) x1751 (x394 x1831)))
(define-fun x688 ((x1831 Real)) Real (ite (= 128 x1831) x725 (x1959 x1831)))
(define-fun x91 ((x1831 Real)) Real (ite (= x1831 128) x1202 (x1280 x1831)))
(define-fun x1223 ((x1831 Real)) Real (ite (= 160 x1831) x741 (x91 x1831)))
(define-fun x1625 ((x1831 Real)) Real (ite (= x1831 192) x186 (x1223 x1831)))
(define-fun x1947 ((x1831 Real)) Real (ite (= 224 x1831) x188 (x1625 x1831)))
(define-fun x1842 ((x1831 Real)) Real (ite (= 256 x1831) x414 (x1947 x1831)))
(define-fun x956 ((x1831 Real)) Real (ite (= 0 x1831) x1197 (x598 x1831)))
(define-fun x1962 ((x1831 Real)) Real (ite (= x1831 32) x1051 (x956 x1831)))
(define-fun x972 ((x1831 Real)) Real (ite (= 64 x1831) x1971 (x1962 x1831)))
(define-fun x1930 ((x1831 Real)) Real (ite (= 96 x1831) x270 (x972 x1831)))
(define-fun x1874 ((x1831 Real)) Real (ite (= 128 x1831) x256 (x1930 x1831)))
(define-fun x298 ((x1831 x364)) Real (ite (= x1831 x1961) x1075 (x823 x1831)))
(define-fun x251 ((x1831 x364)) Real (ite x1795 (x823 x1831) (x298 x1831)))
(define-fun x1760 ((x1831 x364)) Real (ite (= x1831 x1096) x1713 (x482 x1831)))
(define-fun x1490 ((x1831 x364)) Real (ite (= x1831 x1961) x1599 (x482 x1831)))
(define-fun x44 ((x1831 x364)) Real (ite x1795 (x1760 x1831) (x1490 x1831)))
(define-fun x1870 ((x1831 Real)) Real (ite (= x1831 x1306) x461 (x1549 x1831)))
(define-fun x1345 ((x1831 Real)) Real (ite (= x1831 x627) x885 (x550 x1831)))
(define-fun x1612 ((x1831 Real)) Real (ite (= x1665 x1831) x254 (x1271 x1831)))
(define-fun x1657 ((x1831 Real)) Real (ite (= x1831 x35) x410 (x1481 x1831)))
(define-fun x192 ((x1831 Real)) Real (ite (= x1831 x2065) x1555 (x286 x1831)))
(define-fun x1889 ((x1831 Real)) Real (ite (= x1218 x1831) x1686 (x929 x1831)))
(define-fun x1226 ((x1831 Real)) Real (ite (= x1831 x1938) x729 (x1754 x1831)))
(define-fun x79 ((x1831 Real)) Real (ite (= x1831 x495) x1731 (x1140 x1831)))
(define-fun x1541 ((x1831 x364)) Real (ite (= x1831 x631) x72 (x1784 x1831)))
(define-fun x399 ((x1831 x364)) Real (ite x1795 (x1541 x1831) (x1784 x1831)))
(define-fun x1747 ((x1831 Real)) Real (ite (= 128 x1831) x221 (x1105 x1831)))
(define-fun x1583 ((x1831 Real)) Real (ite (= x1831 160) x1643 (x1747 x1831)))
(define-fun x1902 ((x1831 Real)) Real (ite (= x1831 192) x1864 (x1583 x1831)))
(define-fun x252 ((x1831 Real)) Real (ite (= x1831 224) x255 (x1902 x1831)))
(define-fun x1216 ((x1831 Real)) Real (ite (= x1831 256) x1828 (x252 x1831)))
(define-fun x2030 ((x1831 Real)) Real (ite (= 128 x1831) x366 (x1105 x1831)))
(define-fun x1900 ((x1831 Real)) Real (ite (= 160 x1831) x880 (x2030 x1831)))
(define-fun x733 ((x1831 Real)) Real (ite (= x1831 192) x701 (x1900 x1831)))
(define-fun x1578 ((x1831 Real)) Real (ite (= 224 x1831) x547 (x733 x1831)))
(define-fun x529 ((x1831 Real)) Real (ite (= 256 x1831) x172 (x1578 x1831)))
(define-fun x449 ((x1831 Real)) Real (ite (and x2103 x2032) (x1216 x1831) (x529 x1831)))
(define-fun x1836 ((x1831 Real)) Real (ite (= x1831 128) x1202 (x1998 x1831)))
(define-fun x1366 ((x1831 Real)) Real (ite (= x1831 160) x1551 (x1836 x1831)))
(define-fun x395 ((x1831 Real)) Real (ite (= 192 x1831) x186 (x1366 x1831)))
(define-fun x1170 ((x1831 Real)) Real (ite (= x1831 224) x188 (x395 x1831)))
(define-fun x803 ((x1831 Real)) Real (ite (= x1831 256) x414 (x1170 x1831)))
(define-fun x138 ((x1831 Real)) Real (ite (= x1566 x1831) x377 (x1866 x1831)))
(define-fun x1774 ((x1831 Real)) Real (ite (= x1831 x385) x1466 (x138 x1831)))
(define-fun x1906 ((x1831 Real)) Real (ite (= x2031 x1831) x1255 (x1774 x1831)))
(define-fun x1017 ((x1831 Real)) Real (ite (= x1831 x1132) x784 (x1906 x1831)))
(define-fun x424 ((x1831 Real)) Real (ite (= x1831 x232) x349 (x1017 x1831)))
(define-fun x2035 ((x1831 Real)) Real (ite (= 0 x1831) x1510 (x161 x1831)))
(define-fun x1561 ((x1831 Real)) Real (ite (= 32 x1831) x1848 (x2035 x1831)))
(define-fun x1513 ((x1831 Real)) Real (ite (= 64 x1831) x194 (x1561 x1831)))
(define-fun x1596 ((x1831 Real)) Real (ite (= x1831 96) x913 (x1513 x1831)))
(define-fun x1649 ((x1831 Real)) Real (ite (= x1831 128) x1880 (x1596 x1831)))
(define-fun x1548 ((x1831 Real)) Real (ite (= 128 x1831) x1202 (x2093 x1831)))
(define-fun x432 ((x1831 Real)) Real (ite (= 160 x1831) x933 (x1548 x1831)))
(define-fun x1575 ((x1831 Real)) Real (ite (= 192 x1831) x186 (x432 x1831)))
(define-fun x1506 ((x1831 Real)) Real (ite (= x1831 224) x188 (x1575 x1831)))
(define-fun x1724 ((x1831 Real)) Real (ite (= 256 x1831) x414 (x1506 x1831)))
(define-fun x1689 ((x1831 Real)) Real (ite (= x1831 0) x962 (x1060 x1831)))
(define-fun x2115 ((x1831 Real)) Real (ite (= 32 x1831) x782 (x1689 x1831)))
(define-fun x1168 ((x1831 Real)) Real (ite (= x1831 64) x1748 (x2115 x1831)))
(define-fun x1624 ((x1831 Real)) Real (ite (= x1831 96) x157 (x1168 x1831)))
(define-fun x2043 ((x1831 Real)) Real (ite (= 128 x1831) x1702 (x1624 x1831)))
(define-fun x246 ((x1831 Real)) Real (ite (= x677 x1831) x533 (x115 x1831)))
(define-fun x1331 ((x1831 Real)) Real (ite (= x1831 x1213) x1047 (x33 x1831)))
(define-fun x1139 ((x1831 Real)) Real (ite (= x1831 x1067) x1410 (x1030 x1831)))
(define-fun x762 ((x1831 Real)) Real (ite (= x1831 x42) x876 (x570 x1831)))
(define-fun x1313 ((x1831 Real)) Real (ite (= x1475 x1831) x2022 (x146 x1831)))
(define-fun x1822 ((x1831 Real)) Real (ite (= x1361 x1831) x470 (x484 x1831)))
(define-fun x1593 ((x1831 Real)) Real (ite (= x1831 x1450) x450 (x1186 x1831)))
(define-fun x303 ((x1831 Real)) Real (ite (= x1831 x2074) x51 (x166 x1831)))
(define-fun x1970 ((x1831 Real)) Real (ite (= 288 x1831) x1201 (x1398 x1831)))
(define-fun x1225 ((x1831 Real)) Real (ite (= 320 x1831) x574 (x1970 x1831)))
(define-fun x1220 ((x1831 Real)) Real (ite (= x1831 352) x2051 (x1225 x1831)))
(define-fun x1862 ((x1831 Real)) Real (ite (= x1831 384) x175 (x1220 x1831)))
(define-fun x1588 ((x1831 Real)) Real (ite (= 416 x1831) x1288 (x1862 x1831)))
(define-fun x259 ((x1831 Real)) Real (ite (= 288 x1831) x971 (x1398 x1831)))
(define-fun x612 ((x1831 Real)) Real (ite (= x1831 320) x925 (x259 x1831)))
(define-fun x950 ((x1831 Real)) Real (ite (= x1831 352) x794 (x612 x1831)))
(define-fun x1329 ((x1831 Real)) Real (ite (= x1831 384) x1094 (x950 x1831)))
(define-fun x843 ((x1831 Real)) Real (ite (= x1831 416) x532 (x1329 x1831)))
(define-fun x1695 ((x1831 Real)) Real (ite (= x1831 128) x1202 (x772 x1831)))
(define-fun x842 ((x1831 Real)) Real (ite (= x1831 160) x1374 (x1695 x1831)))
(define-fun x460 ((x1831 Real)) Real (ite (= x1831 192) x186 (x842 x1831)))
(define-fun x1681 ((x1831 Real)) Real (ite (= x1831 224) x188 (x460 x1831)))
(define-fun x497 ((x1831 Real)) Real (ite (= x1831 256) x414 (x1681 x1831)))
(define-fun x1700 ((x1831 Real)) Real (ite (= x1831 x1005) x967 (x328 x1831)))
(define-fun x2094 ((x1831 Real)) Real (ite (= x1464 x1831) x1379 (x1700 x1831)))
(define-fun x154 ((x1831 Real)) Real (ite (= x1831 x75) x1891 (x2094 x1831)))
(define-fun x1865 ((x1831 Real)) Real (ite (= x1831 x919) x1455 (x154 x1831)))
(define-fun x882 ((x1831 Real)) Real (ite (= x987 x1831) x1957 (x1865 x1831)))
(define-fun x25 ((x1831 Real)) Real (ite (= x1831 0) x1130 (x576 x1831)))
(define-fun x727 ((x1831 Real)) Real (ite (= 32 x1831) x1832 (x25 x1831)))
(define-fun x1054 ((x1831 Real)) Real (ite (= 64 x1831) x1144 (x727 x1831)))
(define-fun x1083 ((x1831 Real)) Real (ite (= 96 x1831) x765 (x1054 x1831)))
(define-fun x247 ((x1831 Real)) Real (ite (= x1831 128) x1936 (x1083 x1831)))
(define-fun x1482 ((x1831 Real)) Real (ite (= x611 x1831) x637 (x644 x1831)))
(define-fun x2001 ((x1831 Real)) Real (ite (= x1128 x1831) x1764 (x1934 x1831)))
(define-fun x1076 ((x1831 Real)) Real (ite (= x1831 x2008) x605 (x642 x1831)))
(define-fun x1511 ((x1831 Real)) Real (ite (= x1831 x1025) x1991 (x634 x1831)))
(define-fun x810 ((x1831 Real)) Real (ite (= x2129 x1831) x375 (x2149 x1831)))
(define-fun x959 ((x1831 Real)) Real (ite (= x1831 x1141) x24 (x300 x1831)))
(define-fun x1941 ((x1831 Real)) Real (ite (= x1831 x1955) x380 (x1662 x1831)))
(define-fun x107 ((x1831 Real)) Real (ite (= x1831 x1074) x602 (x80 x1831)))
(define-fun x1607 ((x1831 Real)) Real (ite (= x1831 128) x884 (x1212 x1831)))
(define-fun x623 ((x1831 Real)) Real (ite (= 160 x1831) x1966 (x1607 x1831)))
(define-fun x419 ((x1831 Real)) Real (ite (= 192 x1831) x1737 (x623 x1831)))
(define-fun x1983 ((x1831 Real)) Real (ite (= x1831 224) x2119 (x419 x1831)))
(define-fun x1412 ((x1831 Real)) Real (ite (= x1831 256) x835 (x1983 x1831)))
(define-fun x225 ((x1831 Real)) Real (ite (= 128 x1831) x36 (x1212 x1831)))
(define-fun x787 ((x1831 Real)) Real (ite (= 160 x1831) x368 (x225 x1831)))
(define-fun x1480 ((x1831 Real)) Real (ite (= x1831 192) x1097 (x787 x1831)))
(define-fun x1411 ((x1831 Real)) Real (ite (= x1831 224) x1725 (x1480 x1831)))
(define-fun x1734 ((x1831 Real)) Real (ite (= x1831 256) x860 (x1411 x1831)))
(define-fun x83 ((x1831 Real)) Real (ite (= x1831 128) x1202 (x244 x1831)))
(define-fun x1217 ((x1831 Real)) Real (ite (= 160 x1831) x139 (x83 x1831)))
(define-fun x1879 ((x1831 Real)) Real (ite (= 192 x1831) x186 (x1217 x1831)))
(define-fun x1556 ((x1831 Real)) Real (ite (= x1831 224) x188 (x1879 x1831)))
(define-fun x1058 ((x1831 Real)) Real (ite (= x1831 256) x414 (x1556 x1831)))
(define-fun x209 ((x1831 Real)) Real (ite (= x546 x1831) x1589 (x1495 x1831)))
(define-fun x1057 ((x1831 Real)) Real (ite (= x1831 x855) x143 (x209 x1831)))
(define-fun x2020 ((x1831 Real)) Real (ite (= x1831 x985) x386 (x1057 x1831)))
(define-fun x116 ((x1831 Real)) Real (ite (= x479 x1831) x1882 (x2020 x1831)))
(define-fun x425 ((x1831 Real)) Real (ite (= x912 x1831) x1278 (x116 x1831)))
(define-fun x1667 ((x1831 Real)) Real (ite (= 0 x1831) x1292 (x214 x1831)))
(define-fun x622 ((x1831 Real)) Real (ite (= x1831 32) x759 (x1667 x1831)))
(define-fun x687 ((x1831 Real)) Real (ite (= x1831 64) x158 (x622 x1831)))
(define-fun x1565 ((x1831 Real)) Real (ite (= 96 x1831) x1413 (x687 x1831)))
(define-fun x563 ((x1831 Real)) Real (ite (= 128 x1831) x1142 (x1565 x1831)))
(define-fun x1112 ((x1831 Real)) Real (ite (= x1831 x1005) x2003 (x328 x1831)))
(define-fun x1026 ((x1831 Real)) Real (ite (= x1831 x111) x813 (x1112 x1831)))
(define-fun x575 ((x1831 Real)) Real (ite (= x821 x1831) x633 (x1026 x1831)))
(define-fun x1753 ((x1831 Real)) Real (ite (= x1831 x2122) x1270 (x575 x1831)))
(define-fun x1847 ((x1831 Real)) Real (ite (= x98 x1831) x1935 (x1753 x1831)))
(define-fun x351 ((x1831 Real)) Real (ite (and x2137 x68) (x882 x1831) (x1847 x1831)))
(define-fun x119 ((x1831 Real)) Real (ite x535 (x351 x1831) (x1010 x1831)))
(define-fun x618 ((x1831 Real)) Real (ite (= x1831 x546) x1636 (x1495 x1831)))
(define-fun x262 ((x1831 Real)) Real (ite (= x2125 x1831) x1436 (x618 x1831)))
(define-fun x1609 ((x1831 Real)) Real (ite (= x965 x1831) x1977 (x262 x1831)))
(define-fun x2118 ((x1831 Real)) Real (ite (= x1338 x1831) x1258 (x1609 x1831)))
(define-fun x1946 ((x1831 Real)) Real (ite (= x1352 x1831) x348 (x2118 x1831)))
(define-fun x1660 ((x1831 Real)) Real (ite (and x429 x1647) (x425 x1831) (x1946 x1831)))
(define-fun x1668 ((x1831 Real)) Real (ite x1177 (x1660 x1831) (x100 x1831)))
(define-fun x1921 ((x1831 Real)) Real (ite (and (not x1138) x1152) (x1010 x1831) (x119 x1831)))
(define-fun x1040 ((x1831 Real)) Real (ite x359 (ite (and (not x84) x874) (x100 x1831) (x1668 x1831)) (x100 x1831)))
(define-fun x1238 ((x1831 Real)) Real (ite (= x1831 x1006) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1040 x1831)))
(define-fun x1741 ((x1831 Real)) Real (ite (= x647 x1831) x1500 (x1238 x1831)))
(define-fun x681 ((x1831 x364)) Real (ite (= x554 x1831) x850 (x1325 x1831)))
(define-fun x1719 ((x1831 Real)) Real (ite (= x1831 0) 1 (x1417 x1831)))
(define-fun x675 ((x1831 Real)) Real (ite (= x1006 x1831) 1 (x652 x1831)))
(define-fun x1145 ((x1831 Real)) Real (ite (= 128 x1831) x1963 (x1861 x1831)))
(define-fun x1694 ((x1831 Real)) Real (ite (= x1831 224) x1547 (x342 x1831)))
(define-fun x197 ((x1831 Real)) Real (ite (= x1831 256) x113 (x1274 x1831)))
(define-fun x1809 ((x1831 Real)) Real (ite (= 128 x1831) x235 (x1145 x1831)))
(define-fun x1121 ((x1831 Real)) Real (ite (= x1831 192) x657 (x555 x1831)))
(define-fun x1336 ((x1831 Real)) Real (ite (= x1831 192) x40 (x555 x1831)))
(define-fun x464 ((x1831 Real)) Real (ite (and x711 x2023 x1408) (x1336 x1831) (x1121 x1831)))
(define-fun x1386 ((x1831 Real)) Real (ite (= 160 x1831) x1221 (x1854 x1831)))
(define-fun x719 ((x1831 Real)) Real (ite (= x1831 160) x206 (x1854 x1831)))
(define-fun x379 ((x1831 Real)) Real (ite (= 128 x1831) x1202 (x1259 x1831)))
(define-fun x1093 ((x1831 Real)) Real (ite (= 160 x1831) x1642 (x379 x1831)))
(define-fun x694 ((x1831 Real)) Real (ite (= 192 x1831) x186 (x1093 x1831)))
(define-fun x680 ((x1831 Real)) Real (ite (= x1831 224) x188 (x694 x1831)))
(define-fun x125 ((x1831 Real)) Real (ite (= 256 x1831) x414 (x680 x1831)))
(define-fun x282 ((x1831 Real)) Real (ite (= x1831 0) x1104 (x873 x1831)))
(define-fun x41 ((x1831 Real)) Real (ite (= x1831 32) x1525 (x282 x1831)))
(define-fun x836 ((x1831 Real)) Real (ite (= x1831 64) x1207 (x41 x1831)))
(define-fun x163 ((x1831 Real)) Real (ite (= x1831 96) x712 (x836 x1831)))
(define-fun x504 ((x1831 Real)) Real (ite (= x1831 128) x2041 (x163 x1831)))
(define-fun x1628 ((x1831 Real)) Real (ite (= x1831 128) x1202 (x1804 x1831)))
(define-fun x224 ((x1831 Real)) Real (ite (= 160 x1831) x581 (x1628 x1831)))
(define-fun x46 ((x1831 Real)) Real (ite (= x1831 192) x186 (x224 x1831)))
(define-fun x890 ((x1831 Real)) Real (ite (= 224 x1831) x188 (x46 x1831)))
(define-fun x431 ((x1831 Real)) Real (ite (= x1831 256) x414 (x890 x1831)))
(define-fun x1252 ((x1831 Real)) Real (ite (= 0 x1831) x1016 (x1471 x1831)))
(define-fun x2145 ((x1831 Real)) Real (ite (= x1831 32) x1533 (x1252 x1831)))
(define-fun x480 ((x1831 Real)) Real (ite (= 64 x1831) x516 (x2145 x1831)))
(define-fun x1228 ((x1831 Real)) Real (ite (= 96 x1831) x829 (x480 x1831)))
(define-fun x2018 ((x1831 Real)) Real (ite (= 128 x1831) x1664 (x1228 x1831)))
(define-fun x217 ((x1831 Real)) Real (ite (and x1317 (not x1948)) (x760 x1831) (ite x1650 (x1921 x1831) (x1010 x1831))))
(define-fun x1573 ((x1831 Real)) Real (ite (= x1194 x1831) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x217 x1831)))
(define-fun x580 ((x1831 Real)) Real (ite (= x1831 x2131) x201 (x1573 x1831)))
(define-fun x606 ((x1831 Real)) Real (ite (= x1831 x1208) x763 (x580 x1831)))
(define-fun x1816 ((x1831 x364)) Real (ite (= x1831 x548) x2112 (x1325 x1831)))
(define-fun x1434 ((x1831 Real)) Real (ite (= x1831 0) 1 (x2064 x1831)))
(define-fun x378 ((x1831 Real)) Real (ite (= x1831 x1194) 1 (x606 x1831)))
(define-fun x1117 ((x1831 Real)) Real (ite (and x1174 x711 x2023) (x719 x1831) (x1386 x1831)))
(define-fun x2091 ((x1831 Real)) Real (ite (= 128 x1831) x361 (x1987 x1831)))
(define-fun x947 ((x1831 Real)) Real (ite (= 160 x1831) x513 (x2091 x1831)))
(define-fun x983 ((x1831 Real)) Real (ite (= 192 x1831) x1042 (x947 x1831)))
(define-fun x1648 ((x1831 Real)) Real (ite (= 224 x1831) x1715 (x983 x1831)))
(define-fun x7 ((x1831 Real)) Real (ite (= 256 x1831) x667 (x1648 x1831)))
(define-fun x1295 ((x1831 Real)) Real (ite (= x291 x1831) x775 (x178 x1831)))
(define-fun x1813 ((x1831 Real)) Real (ite (= x1831 x77) x1023 (x1295 x1831)))
(define-fun x1153 ((x1831 Real)) Real (ite (= x2070 x1831) x462 (x1813 x1831)))
(define-fun x1711 ((x1831 Real)) Real (ite (= x1831 x908) x2100 (x1153 x1831)))
(define-fun x920 ((x1831 Real)) Real (ite (= x406 x1831) x801 (x1711 x1831)))
(define-fun x53 ((x1831 Real)) Real (ite (= 0 x1831) x1200 (x608 x1831)))
(define-fun x310 ((x1831 Real)) Real (ite (= 32 x1831) x2054 (x53 x1831)))
(define-fun x428 ((x1831 Real)) Real (ite (= x1831 64) x1090 (x310 x1831)))
(define-fun x753 ((x1831 Real)) Real (ite (= x1831 96) x743 (x428 x1831)))
(define-fun x781 ((x1831 Real)) Real (ite (= 128 x1831) x475 (x753 x1831)))
(define-fun x1844 ((x1831 Real)) Real (ite (= 128 x1831) x361 (x268 x1831)))
(define-fun x2090 ((x1831 Real)) Real (ite (= x1831 160) x1239 (x1844 x1831)))
(define-fun x2057 ((x1831 Real)) Real (ite (= 192 x1831) x1042 (x2090 x1831)))
(define-fun x1730 ((x1831 Real)) Real (ite (= 224 x1831) x1715 (x2057 x1831)))
(define-fun x1537 ((x1831 Real)) Real (ite (= 256 x1831) x667 (x1730 x1831)))
(define-fun x1303 ((x1831 Real)) Real (ite (= x1831 0) x638 (x598 x1831)))
(define-fun x327 ((x1831 Real)) Real (ite (= x1831 32) x1376 (x1303 x1831)))
(define-fun x809 ((x1831 Real)) Real (ite (= 64 x1831) x283 (x327 x1831)))
(define-fun x1473 ((x1831 Real)) Real (ite (= x1831 96) x1183 (x809 x1831)))
(define-fun x1423 ((x1831 Real)) Real (ite (= x1831 128) x1720 (x1473 x1831)))
(define-fun x150 ((x1831 Real)) Real (ite (= x1831 128) x361 (x1008 x1831)))
(define-fun x507 ((x1831 Real)) Real (ite (= x1831 160) x955 (x150 x1831)))
(define-fun x193 ((x1831 Real)) Real (ite (= 192 x1831) x1042 (x507 x1831)))
(define-fun x1409 ((x1831 Real)) Real (ite (= 224 x1831) x1715 (x193 x1831)))
(define-fun x2071 ((x1831 Real)) Real (ite (= x1831 256) x667 (x1409 x1831)))
(define-fun x910 ((x1831 Real)) Real (ite (= x1566 x1831) x459 (x1866 x1831)))
(define-fun x76 ((x1831 Real)) Real (ite (= x1887 x1831) x169 (x910 x1831)))
(define-fun x903 ((x1831 Real)) Real (ite (= x340 x1831) x783 (x76 x1831)))
(define-fun x977 ((x1831 Real)) Real (ite (= x1032 x1831) x1165 (x903 x1831)))
(define-fun x1618 ((x1831 Real)) Real (ite (= x1831 x405) x854 (x977 x1831)))
(define-fun x1918 ((x1831 Real)) Real (ite (= x1831 0) x2108 (x161 x1831)))
(define-fun x980 ((x1831 Real)) Real (ite (= x1831 32) x844 (x1918 x1831)))
(define-fun x736 ((x1831 Real)) Real (ite (= x1831 64) x1610 (x980 x1831)))
(define-fun x639 ((x1831 Real)) Real (ite (= 96 x1831) x1652 (x736 x1831)))
(define-fun x1837 ((x1831 Real)) Real (ite (= x1831 128) x603 (x639 x1831)))
(define-fun x941 ((x1831 Real)) Real (ite (= x1831 128) x361 (x1282 x1831)))
(define-fun x1769 ((x1831 Real)) Real (ite (= x1831 160) x1162 (x941 x1831)))
(define-fun x964 ((x1831 Real)) Real (ite (= 192 x1831) x1042 (x1769 x1831)))
(define-fun x1815 ((x1831 Real)) Real (ite (= 224 x1831) x1715 (x964 x1831)))
(define-fun x463 ((x1831 Real)) Real (ite (= 256 x1831) x667 (x1815 x1831)))
(define-fun x770 ((x1831 Real)) Real (ite (= 0 x1831) x1954 (x1060 x1831)))
(define-fun x820 ((x1831 Real)) Real (ite (= x1831 32) x1375 (x770 x1831)))
(define-fun x556 ((x1831 Real)) Real (ite (= x1831 64) x1979 (x820 x1831)))
(define-fun x500 ((x1831 Real)) Real (ite (= 96 x1831) x1151 (x556 x1831)))
(define-fun x668 ((x1831 Real)) Real (ite (= 128 x1831) x2042 (x500 x1831)))
(define-fun x1333 ((x1831 Real)) Real (ite (= x1831 128) x361 (x182 x1831)))
(define-fun x1859 ((x1831 Real)) Real (ite (= x1831 160) x1826 (x1333 x1831)))
(define-fun x313 ((x1831 Real)) Real (ite (= x1831 192) x1042 (x1859 x1831)))
(define-fun x257 ((x1831 Real)) Real (ite (= x1831 224) x1715 (x313 x1831)))
(define-fun x1617 ((x1831 Real)) Real (ite (= 256 x1831) x667 (x257 x1831)))
(define-fun x1553 ((x1831 Real)) Real (ite (= 0 x1831) x1980 (x576 x1831)))
(define-fun x1564 ((x1831 Real)) Real (ite (= x1831 32) x577 (x1553 x1831)))
(define-fun x273 ((x1831 Real)) Real (ite (= x1831 64) x1355 (x1564 x1831)))
(define-fun x734 ((x1831 Real)) Real (ite (= 96 x1831) x1939 (x273 x1831)))
(define-fun x1072 ((x1831 Real)) Real (ite (= 128 x1831) x71 (x734 x1831)))
(define-fun x1486 ((x1831 Real)) Real (ite (= x1831 128) x361 (x216 x1831)))
(define-fun x50 ((x1831 Real)) Real (ite (= x1831 160) x807 (x1486 x1831)))
(define-fun x1110 ((x1831 Real)) Real (ite (= x1831 192) x1042 (x50 x1831)))
(define-fun x338 ((x1831 Real)) Real (ite (= 224 x1831) x1715 (x1110 x1831)))
(define-fun x665 ((x1831 Real)) Real (ite (= 256 x1831) x667 (x338 x1831)))
(define-fun x1818 ((x1831 Real)) Real (ite (= x1831 0) x1173 (x214 x1831)))
(define-fun x683 ((x1831 Real)) Real (ite (= x1831 32) x1231 (x1818 x1831)))
(define-fun x684 ((x1831 Real)) Real (ite (= 64 x1831) x1167 (x683 x1831)))
(define-fun x1614 ((x1831 Real)) Real (ite (= x1831 96) x1441 (x684 x1831)))
(define-fun x339 ((x1831 Real)) Real (ite (= 128 x1831) x583 (x1614 x1831)))
(define-fun x13 ((x1831 Real)) Real (ite (= 128 x1831) x361 (x1923 x1831)))
(define-fun x239 ((x1831 Real)) Real (ite (= 160 x1831) x1953 (x13 x1831)))
(define-fun x1277 ((x1831 Real)) Real (ite (= x1831 192) x1042 (x239 x1831)))
(define-fun x1805 ((x1831 Real)) Real (ite (= 224 x1831) x1715 (x1277 x1831)))
(define-fun x1638 ((x1831 Real)) Real (ite (= x1831 256) x667 (x1805 x1831)))
(define-fun x227 ((x1831 Real)) Real (ite (= x1831 0) x311 (x873 x1831)))
(define-fun x1743 ((x1831 Real)) Real (ite (= x1831 32) x234 (x227 x1831)))
(define-fun x1928 ((x1831 Real)) Real (ite (= 64 x1831) x1494 (x1743 x1831)))
(define-fun x1161 ((x1831 Real)) Real (ite (= x1831 96) x713 (x1928 x1831)))
(define-fun x937 ((x1831 Real)) Real (ite (= 128 x1831) x422 (x1161 x1831)))
(define-fun x1937 ((x1831 Real)) Real (ite (= 128 x1831) x361 (x2084 x1831)))
(define-fun x1273 ((x1831 Real)) Real (ite (= 160 x1831) x1459 (x1937 x1831)))
(define-fun x1871 ((x1831 Real)) Real (ite (= 192 x1831) x1042 (x1273 x1831)))
(define-fun x545 ((x1831 Real)) Real (ite (= x1831 224) x1715 (x1871 x1831)))
(define-fun x1721 ((x1831 Real)) Real (ite (= x1831 256) x667 (x545 x1831)))
(define-fun x1744 ((x1831 Real)) Real (ite (= 0 x1831) x2114 (x1471 x1831)))
(define-fun x133 ((x1831 Real)) Real (ite (= 32 x1831) x573 (x1744 x1831)))
(define-fun x1554 ((x1831 Real)) Real (ite (= 64 x1831) x1783 (x133 x1831)))
(define-fun x1708 ((x1831 Real)) Real (ite (= 96 x1831) x2098 (x1554 x1831)))
(define-fun x1000 ((x1831 Real)) Real (ite (= x1831 128) x543 (x1708 x1831)))
(define-fun x1148 ((x1831 x364)) Real (ite (= x1233 x1831) x1046 (x187 x1831)))
(define-fun x387 ((x1831 Real)) Real (ite (= x1831 0) 1 (x1417 x1831)))
(define-fun x417 ((x1831 Real)) Real (ite (= x1006 x1831) 1 (x652 x1831)))
(define-fun x1803 ((x1831 x364)) Real (ite (= x1262 x1831) x517 (x1919 x1831)))
(define-fun x1318 ((x1831 Real)) Real (ite (= 0 x1831) 1 (x1417 x1831)))
(define-fun x48 ((x1831 Real)) Real (ite (= x1831 x1006) 1 (x652 x1831)))
(define-fun x617 ((x1831 Real)) Real (ite (and x1308 x491) (x997 x1831) (x920 x1831)))
(define-fun x458 ((x1831 Real)) Real (ite (and x156 x822) (x424 x1831) (x1618 x1831)))
(define-fun x594 ((x1831 Real)) Real (ite (and x949 x952) (x675 x1831) (ite (and x1927 x466) (x48 x1831) (x417 x1831))))
(define-fun x122 ((x900 Real)) Bool (=> (and (not (= 274184521717934524641157099916833587229 x900)) (not (= 2000660004 x900)) (not (= x900 840395849)) (not (= x900 826074471)) (not (= 1889567281 x900)) (not (= 1752364190 x900)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x900)) (< 10000 x900) (not (= 1208925819614629174706176 x900)) (not (= x900 830980174)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x900)) (not (= x900 2059964113)) (not (= 1034154046 x900)) (not (= x900 18446744073709551615)) (not (= x900 20282409603651670423947251286016)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x900)) (not (= x900 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x900 806251499)) (not (= x900 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 641995544 x900)) (not (= 340282366920938463463374607431768211455 x900)) (not (= x900 2059260625)) (not (= 1461501637330902918203684832716283019655932542975 x900)) (not (= 1208925819614629174706175 x900)) (not (= 65536 x900)) (not (= 274184521717934524641157099916833587225 x900)) (not (= 1461501637330902918203684832716283019655932542976 x900)) (not (= 340282366920938463463374607431768211456 x900)) (not (= x900 274184521717934524641157099916833587221)) (not (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x900)) (not (= 170141183460469231731687303715884105727 x900)) (not (= 1736444767 x900)) (not (= 1099511627775 x900)) (not (= 10141204801825835211973625643007 x900)) (not (= x900 4062139261)) (not (= x900 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= 20282409603651670423947251286015 x900)) (not (= 274184521717934524641157099916833587233 x900)) (not (= 1558726628 x900)) (not (= 2055092157 x900)) (not (= x900 274184521717934524641157099916833587242)) (not (= 274184521717934524641157099916833587231 x900)) (not (= x900 950698303)) (not (= 1176186698 x900)) (not (= x900 4272920204)) (not (= x900 2514000705)) (not (= x900 2362581449)) (not (= x900 2835717307)) (not (= 18446744073709551616 x900)) (not (= x900 3257672857)) (not (= x900 65535)) (not (= x900 274184521717934524641157099916833587209)) (not (= x900 614716962))) (not ((_ is x465) (x1586 x900)))))
(assert (axiom_frac_bound (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1788 x1418) x988 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1180 x934 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1227 x343 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 x357 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1606 (x1788 x1283) (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639 x944 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x343 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1885 x1873 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1901 (x1788 x1579) (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913 x357 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1990 x636 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x357 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2082 x343 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 x343 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1066 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1227 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x17 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x2082 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x123 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1279 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1348 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1592 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1913 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1994 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427 x658 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x435 x2095 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x61 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x1990 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x658 x427 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x697 x1021 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x785 x960 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x868 x343 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x870 (x1788 x1061) (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x881 x1289 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1180 (uninterp_frac (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1788 x1418) x988 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1180 x934 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1227 x343 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 x357 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1606 (x1788 x1283) (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639 x944 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x343 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1885 x1873 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1901 (x1788 x1579) (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913 x357 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1990 x636 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x357 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2082 x343 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 x343 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1066 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1227 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x17 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x2082 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x123 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1279 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1348 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1592 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1913 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1994 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427 x658 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x435 x2095 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x61 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x1990 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x658 x427 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x697 x1021 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x785 x960 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x868 x343 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x870 (x1788 x1061) (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x881 x1289 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1180 (uninterp_frac (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1788 x1418) x988 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1180 x934 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1227 x343 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 x357 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1606 (x1788 x1283) (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639 x944 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x343 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1885 x1873 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1901 (x1788 x1579) (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913 x357 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1990 x636 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x357 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2082 x343 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 x343 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1066 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1227 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x17 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x2082 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x123 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1279 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1348 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1592 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1913 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1994 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427 x658 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x435 x2095 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x61 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x1990 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x658 x427 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x697 x1021 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x785 x960 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x868 x343 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x870 (x1788 x1061) (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x881 x1289 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1180 (uninterp_frac (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1788 x1418) x988 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1180 x934 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1227 x343 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 x357 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1606 (x1788 x1283) (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639 x944 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x343 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1885 x1873 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1901 (x1788 x1579) (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913 x357 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1990 x636 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x357 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2082 x343 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 x343 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1066 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1227 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x17 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x2082 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x123 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1279 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1348 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1592 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1913 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1994 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427 x658 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x435 x2095 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x61 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x1990 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x658 x427 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x697 x1021 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x785 x960 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x868 x343 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x870 (x1788 x1061) (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x881 x1289 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1180 (uninterp_frac (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1788 x1418) x988 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1180 x934 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1227 x343 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 x357 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1606 (x1788 x1283) (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639 x944 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x343 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1885 x1873 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1901 (x1788 x1579) (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913 x357 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1990 x636 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x357 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2082 x343 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 x343 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1066 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1227 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x17 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x2082 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x123 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1279 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1348 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1592 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1913 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1994 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427 x658 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x435 x2095 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x61 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x1990 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x658 x427 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x697 x1021 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x785 x960 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x868 x343 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x870 (x1788 x1061) (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x881 x1289 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1180 (uninterp_frac (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1788 x1418) x988 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1180 x934 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1227 x343 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 x357 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1606 (x1788 x1283) (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639 x944 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x343 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1885 x1873 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1901 (x1788 x1579) (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913 x357 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1990 x636 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x357 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2082 x343 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 x343 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1066 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1227 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x17 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x2082 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x123 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1279 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1348 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1592 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1913 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1994 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427 x658 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x435 x2095 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x61 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x1990 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x658 x427 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x697 x1021 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x785 x960 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x868 x343 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x870 (x1788 x1061) (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x881 x1289 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1180 (uninterp_frac (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1788 x1418) x988 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1180 x934 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1227 x343 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 x357 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1606 (x1788 x1283) (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639 x944 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x343 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1885 x1873 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1901 (x1788 x1579) (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913 x357 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1990 x636 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x357 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2082 x343 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 x343 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1066 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1227 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x17 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x2082 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x123 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1279 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1348 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1592 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1913 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1994 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427 x658 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x435 x2095 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x61 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x1990 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x658 x427 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x697 x1021 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x785 x960 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x868 x343 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x870 (x1788 x1061) (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x881 x1289 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1180 (uninterp_frac (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1788 x1418) x988 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1180 x934 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1227 x343 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1279 x357 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1606 (x1788 x1283) (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639 x944 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x343 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1885 x1873 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1901 (x1788 x1579) (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913 x357 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1990 x636 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x357 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2082 x343 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 x343 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1066 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x1227 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x17 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x343 x2082 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x123 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1279 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1348 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1592 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1913 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357 x1994 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427 x658 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x435 x2095 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x61 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x1990 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x658 x427 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x697 x1021 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x785 x960 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x868 x343 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x870 (x1788 x1061) (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x881 x1289 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1180 (uninterp_frac (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1059 x343))
(assert (axiom_frac_zero x1059 x343 (x1788 x1418) x988 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1180 x934 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1227 x343 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1279 x357 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1606 (x1788 x1283) (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1639 x944 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x17 x343 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1885 x1873 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1901 (x1788 x1579) (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1913 x357 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1990 x636 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x1994 x357 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x2082 x343 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x318 x343 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x343 x1066 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x343 x1227 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x343 x17 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x343 x2082 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x357 x123 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x357 x1279 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x357 x1348 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x357 x1592 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x357 x1913 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x357 x1994 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x427 x658 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x435 x2095 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x442 x61 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x636 x1990 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x658 x427 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x697 x1021 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x785 x960 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x868 x343 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x870 (x1788 x1061) (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x881 x1289 (uninterp_frac x1059 x343)))
(assert (axiom_frac_zero x1059 x343 x934 x1180 (uninterp_frac x1059 x343)))
(assert (axiom_frac_bound x110 x343))
(assert (axiom_frac_zero x110 x343 (x1788 x1418) x988 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1180 x934 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1227 x343 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1279 x357 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1606 (x1788 x1283) (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1639 x944 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x17 x343 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1885 x1873 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1901 (x1788 x1579) (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1913 x357 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1990 x636 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x1994 x357 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x2082 x343 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x318 x343 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x343 x1066 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x343 x1227 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x343 x17 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x343 x2082 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x357 x123 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x357 x1279 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x357 x1348 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x357 x1592 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x357 x1913 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x357 x1994 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x427 x658 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x435 x2095 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x442 x61 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x636 x1990 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x658 x427 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x697 x1021 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x785 x960 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x868 x343 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x870 (x1788 x1061) (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x881 x1289 (uninterp_frac x110 x343)))
(assert (axiom_frac_zero x110 x343 x934 x1180 (uninterp_frac x110 x343)))
(assert (axiom_frac_bound x473 x357))
(assert (axiom_frac_zero x473 x357 (x1788 x1418) x988 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1180 x934 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1227 x343 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1279 x357 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1606 (x1788 x1283) (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1639 x944 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x17 x343 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1885 x1873 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1901 (x1788 x1579) (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1913 x357 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1990 x636 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x1994 x357 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x2082 x343 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x318 x343 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x343 x1066 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x343 x1227 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x343 x17 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x343 x2082 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x357 x123 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x357 x1279 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x357 x1348 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x357 x1592 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x357 x1913 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x357 x1994 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x427 x658 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x435 x2095 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x442 x61 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x636 x1990 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x658 x427 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x697 x1021 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x785 x960 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x868 x343 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x870 (x1788 x1061) (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x881 x1289 (uninterp_frac x473 x357)))
(assert (axiom_frac_zero x473 x357 x934 x1180 (uninterp_frac x473 x357)))
(assert (axiom_frac_bound x986 x357))
(assert (axiom_frac_zero x986 x357 (x1788 x1418) x988 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1180 x934 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1227 x343 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1279 x357 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1606 (x1788 x1283) (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1639 x944 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x17 x343 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1885 x1873 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1901 (x1788 x1579) (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1913 x357 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1990 x636 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x1994 x357 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x2082 x343 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x318 x343 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x343 x1066 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x343 x1227 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x343 x17 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x343 x2082 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x357 x123 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x357 x1279 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x357 x1348 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x357 x1592 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x357 x1913 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x357 x1994 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x427 x658 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x435 x2095 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x442 x61 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x636 x1990 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x658 x427 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x697 x1021 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x785 x960 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x868 x343 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x870 (x1788 x1061) (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x881 x1289 (uninterp_frac x986 x357)))
(assert (axiom_frac_zero x986 x357 x934 x1180 (uninterp_frac x986 x357)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1007))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1023))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1027))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1044))
(assert (axiom_int_approximation x1046))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1051))
(assert (axiom_int_approximation x1052))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1056))
(assert (axiom_int_approximation x1059))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1063))
(assert (axiom_int_approximation x1064))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x1090))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1095))
(assert (axiom_int_approximation x1097))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x1109))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1116))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1120))
(assert (axiom_int_approximation x1124))
(assert (axiom_int_approximation x1125))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1134))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1147))
(assert (axiom_int_approximation x1149))
(assert (axiom_int_approximation x1150))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1154))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x1162))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1166))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1181))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1185))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x1190))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1193))
(assert (axiom_int_approximation x1194))
(assert (axiom_int_approximation x1195))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1197))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1205))
(assert (axiom_int_approximation x1207))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1210))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1218))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1222))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1227))
(assert (axiom_int_approximation x1229))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1231))
(assert (axiom_int_approximation x1234))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1253))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1257))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1264))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1267))
(assert (axiom_int_approximation x127))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x128))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1314))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1320))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1326))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x1330))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1341))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1347))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x1351))
(assert (axiom_int_approximation x1352))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1361))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x1370))
(assert (axiom_int_approximation x1371))
(assert (axiom_int_approximation x1372))
(assert (axiom_int_approximation x1373))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1376))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1382))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1393))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x1397))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1407))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x1410))
(assert (axiom_int_approximation x1413))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1416))
(assert (axiom_int_approximation x1418))
(assert (axiom_int_approximation x1420))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1433))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1436))
(assert (axiom_int_approximation x1437))
(assert (axiom_int_approximation x1438))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1448))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1454))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1456))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1464))
(assert (axiom_int_approximation x1465))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1483))
(assert (axiom_int_approximation x1484))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1488))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1492))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1494))
(assert (axiom_int_approximation x1496))
(assert (axiom_int_approximation x1500))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x151))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1512))
(assert (axiom_int_approximation x1517))
(assert (axiom_int_approximation x1518))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1523))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x1527))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1530))
(assert (axiom_int_approximation x1531))
(assert (axiom_int_approximation x1532))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1538))
(assert (axiom_int_approximation x1543))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x1550))
(assert (axiom_int_approximation x1551))
(assert (axiom_int_approximation x1552))
(assert (axiom_int_approximation x1555))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1562))
(assert (axiom_int_approximation x1566))
(assert (axiom_int_approximation x1567))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1571))
(assert (axiom_int_approximation x1572))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x1577))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1589))
(assert (axiom_int_approximation x1591))
(assert (axiom_int_approximation x1592))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x1599))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1608))
(assert (axiom_int_approximation x1610))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1620))
(assert (axiom_int_approximation x1621))
(assert (axiom_int_approximation x1622))
(assert (axiom_int_approximation x1626))
(assert (axiom_int_approximation x1629))
(assert (axiom_int_approximation x1630))
(assert (axiom_int_approximation x1632))
(assert (axiom_int_approximation x1633))
(assert (axiom_int_approximation x1635))
(assert (axiom_int_approximation x1636))
(assert (axiom_int_approximation x1639))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x1640))
(assert (axiom_int_approximation x1641))
(assert (axiom_int_approximation x1642))
(assert (axiom_int_approximation x1643))
(assert (axiom_int_approximation x1644))
(assert (axiom_int_approximation x1652))
(assert (axiom_int_approximation x1653))
(assert (axiom_int_approximation x1654))
(assert (axiom_int_approximation x1655))
(assert (axiom_int_approximation x1656))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x1659))
(assert (axiom_int_approximation x1663))
(assert (axiom_int_approximation x1664))
(assert (axiom_int_approximation x1665))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x1671))
(assert (axiom_int_approximation x1672))
(assert (axiom_int_approximation x1675))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1677))
(assert (axiom_int_approximation x1679))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x1680))
(assert (axiom_int_approximation x1682))
(assert (axiom_int_approximation x1683))
(assert (axiom_int_approximation x1686))
(assert (axiom_int_approximation x1687))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x1691))
(assert (axiom_int_approximation x1696))
(assert (axiom_int_approximation x1697))
(assert (axiom_int_approximation x1699))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x1701))
(assert (axiom_int_approximation x1702))
(assert (axiom_int_approximation x1706))
(assert (axiom_int_approximation x1707))
(assert (axiom_int_approximation x1709))
(assert (axiom_int_approximation x1710))
(assert (axiom_int_approximation x1713))
(assert (axiom_int_approximation x1714))
(assert (axiom_int_approximation x1715))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x1717))
(assert (axiom_int_approximation x1718))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x1720))
(assert (axiom_int_approximation x1725))
(assert (axiom_int_approximation x1727))
(assert (axiom_int_approximation x1729))
(assert (axiom_int_approximation x1731))
(assert (axiom_int_approximation x1732))
(assert (axiom_int_approximation x1733))
(assert (axiom_int_approximation x1737))
(assert (axiom_int_approximation x1739))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x1745))
(assert (axiom_int_approximation x1746))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x1749))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x1751))
(assert (axiom_int_approximation x1752))
(assert (axiom_int_approximation x1755))
(assert (axiom_int_approximation x1757))
(assert (axiom_int_approximation x1758))
(assert (axiom_int_approximation x1761))
(assert (axiom_int_approximation x1762))
(assert (axiom_int_approximation x1763))
(assert (axiom_int_approximation x1764))
(assert (axiom_int_approximation x1765))
(assert (axiom_int_approximation x1767))
(assert (axiom_int_approximation x1768))
(assert (axiom_int_approximation x1771))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x1777))
(assert (axiom_int_approximation x1778))
(assert (axiom_int_approximation x1779))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1782))
(assert (axiom_int_approximation x1783))
(assert (axiom_int_approximation x1785))
(assert (axiom_int_approximation x1786))
(assert (axiom_int_approximation x1787))
(assert (axiom_int_approximation x1789))
(assert (axiom_int_approximation x1791))
(assert (axiom_int_approximation x1794))
(assert (axiom_int_approximation x1797))
(assert (axiom_int_approximation x1799))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x1802))
(assert (axiom_int_approximation x1806))
(assert (axiom_int_approximation x1807))
(assert (axiom_int_approximation x1808))
(assert (axiom_int_approximation x1810))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1814))
(assert (axiom_int_approximation x1817))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x1821))
(assert (axiom_int_approximation x1823))
(assert (axiom_int_approximation x1824))
(assert (axiom_int_approximation x1825))
(assert (axiom_int_approximation x1826))
(assert (axiom_int_approximation x1827))
(assert (axiom_int_approximation x1828))
(assert (axiom_int_approximation x1829))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x1832))
(assert (axiom_int_approximation x1833))
(assert (axiom_int_approximation x1834))
(assert (axiom_int_approximation x1838))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x1840))
(assert (axiom_int_approximation x1845))
(assert (axiom_int_approximation x1846))
(assert (axiom_int_approximation x1848))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x1851))
(assert (axiom_int_approximation x1852))
(assert (axiom_int_approximation x1853))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1856))
(assert (axiom_int_approximation x1858))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x1860))
(assert (axiom_int_approximation x1863))
(assert (axiom_int_approximation x1864))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1869))
(assert (axiom_int_approximation x1872))
(assert (axiom_int_approximation x1873))
(assert (axiom_int_approximation x1875))
(assert (axiom_int_approximation x1878))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x1880))
(assert (axiom_int_approximation x1881))
(assert (axiom_int_approximation x1882))
(assert (axiom_int_approximation x1883))
(assert (axiom_int_approximation x1885))
(assert (axiom_int_approximation x1886))
(assert (axiom_int_approximation x1887))
(assert (axiom_int_approximation x1888))
(assert (axiom_int_approximation x189))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1891))
(assert (axiom_int_approximation x1892))
(assert (axiom_int_approximation x1893))
(assert (axiom_int_approximation x1895))
(assert (axiom_int_approximation x1896))
(assert (axiom_int_approximation x1897))
(assert (axiom_int_approximation x1899))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x1901))
(assert (axiom_int_approximation x1903))
(assert (axiom_int_approximation x1908))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x1910))
(assert (axiom_int_approximation x1911))
(assert (axiom_int_approximation x1912))
(assert (axiom_int_approximation x1913))
(assert (axiom_int_approximation x1915))
(assert (axiom_int_approximation x1917))
(assert (axiom_int_approximation x1920))
(assert (axiom_int_approximation x1924))
(assert (axiom_int_approximation x1925))
(assert (axiom_int_approximation x1929))
(assert (axiom_int_approximation x1932))
(assert (axiom_int_approximation x1933))
(assert (axiom_int_approximation x1935))
(assert (axiom_int_approximation x1936))
(assert (axiom_int_approximation x1938))
(assert (axiom_int_approximation x1939))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x1940))
(assert (axiom_int_approximation x1942))
(assert (axiom_int_approximation x1943))
(assert (axiom_int_approximation x1944))
(assert (axiom_int_approximation x1945))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x1950))
(assert (axiom_int_approximation x1951))
(assert (axiom_int_approximation x1953))
(assert (axiom_int_approximation x1954))
(assert (axiom_int_approximation x1955))
(assert (axiom_int_approximation x1957))
(assert (axiom_int_approximation x1960))
(assert (axiom_int_approximation x1963))
(assert (axiom_int_approximation x1965))
(assert (axiom_int_approximation x1966))
(assert (axiom_int_approximation x1967))
(assert (axiom_int_approximation x1968))
(assert (axiom_int_approximation x1971))
(assert (axiom_int_approximation x1973))
(assert (axiom_int_approximation x1974))
(assert (axiom_int_approximation x1977))
(assert (axiom_int_approximation x1979))
(assert (axiom_int_approximation x198))
(assert (axiom_int_approximation x1980))
(assert (axiom_int_approximation x1981))
(assert (axiom_int_approximation x1982))
(assert (axiom_int_approximation x1984))
(assert (axiom_int_approximation x1986))
(assert (axiom_int_approximation x1988))
(assert (axiom_int_approximation x1989))
(assert (axiom_int_approximation x1990))
(assert (axiom_int_approximation x1991))
(assert (axiom_int_approximation x1992))
(assert (axiom_int_approximation x1994))
(assert (axiom_int_approximation x1995))
(assert (axiom_int_approximation x1996))
(assert (axiom_int_approximation x1997))
(assert (axiom_int_approximation x2))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x2000))
(assert (axiom_int_approximation x2003))
(assert (axiom_int_approximation x2004))
(assert (axiom_int_approximation x2007))
(assert (axiom_int_approximation x2008))
(assert (axiom_int_approximation x2009))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x2010))
(assert (axiom_int_approximation x2011))
(assert (axiom_int_approximation x2013))
(assert (axiom_int_approximation x2014))
(assert (axiom_int_approximation x2017))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x2021))
(assert (axiom_int_approximation x2022))
(assert (axiom_int_approximation x2025))
(assert (axiom_int_approximation x2027))
(assert (axiom_int_approximation x2028))
(assert (axiom_int_approximation x2029))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x2031))
(assert (axiom_int_approximation x2033))
(assert (axiom_int_approximation x2034))
(assert (axiom_int_approximation x2036))
(assert (axiom_int_approximation x2037))
(assert (axiom_int_approximation x2039))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x2040))
(assert (axiom_int_approximation x2041))
(assert (axiom_int_approximation x2042))
(assert (axiom_int_approximation x2044))
(assert (axiom_int_approximation x2045))
(assert (axiom_int_approximation x2046))
(assert (axiom_int_approximation x2047))
(assert (axiom_int_approximation x2048))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x2050))
(assert (axiom_int_approximation x2051))
(assert (axiom_int_approximation x2052))
(assert (axiom_int_approximation x2053))
(assert (axiom_int_approximation x2054))
(assert (axiom_int_approximation x2055))
(assert (axiom_int_approximation x2056))
(assert (axiom_int_approximation x2058))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x2060))
(assert (axiom_int_approximation x2063))
(assert (axiom_int_approximation x2065))
(assert (axiom_int_approximation x2066))
(assert (axiom_int_approximation x2068))
(assert (axiom_int_approximation x2069))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x2070))
(assert (axiom_int_approximation x2072))
(assert (axiom_int_approximation x2073))
(assert (axiom_int_approximation x2074))
(assert (axiom_int_approximation x2075))
(assert (axiom_int_approximation x2076))
(assert (axiom_int_approximation x2077))
(assert (axiom_int_approximation x2079))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x2080))
(assert (axiom_int_approximation x2081))
(assert (axiom_int_approximation x2082))
(assert (axiom_int_approximation x2085))
(assert (axiom_int_approximation x2088))
(assert (axiom_int_approximation x2089))
(assert (axiom_int_approximation x2092))
(assert (axiom_int_approximation x2095))
(assert (axiom_int_approximation x2096))
(assert (axiom_int_approximation x2097))
(assert (axiom_int_approximation x2098))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x2100))
(assert (axiom_int_approximation x2101))
(assert (axiom_int_approximation x2102))
(assert (axiom_int_approximation x2104))
(assert (axiom_int_approximation x2107))
(assert (axiom_int_approximation x2108))
(assert (axiom_int_approximation x2109))
(assert (axiom_int_approximation x2111))
(assert (axiom_int_approximation x2112))
(assert (axiom_int_approximation x2113))
(assert (axiom_int_approximation x2114))
(assert (axiom_int_approximation x2117))
(assert (axiom_int_approximation x2119))
(assert (axiom_int_approximation x2120))
(assert (axiom_int_approximation x2121))
(assert (axiom_int_approximation x2122))
(assert (axiom_int_approximation x2124))
(assert (axiom_int_approximation x2125))
(assert (axiom_int_approximation x2128))
(assert (axiom_int_approximation x2129))
(assert (axiom_int_approximation x2131))
(assert (axiom_int_approximation x2133))
(assert (axiom_int_approximation x2134))
(assert (axiom_int_approximation x2135))
(assert (axiom_int_approximation x2136))
(assert (axiom_int_approximation x2139))
(assert (axiom_int_approximation x2140))
(assert (axiom_int_approximation x2141))
(assert (axiom_int_approximation x2142))
(assert (axiom_int_approximation x2144))
(assert (axiom_int_approximation x2146))
(assert (axiom_int_approximation x2147))
(assert (axiom_int_approximation x2148))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x2150))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x279))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x31))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x321))
(assert (axiom_int_approximation x322))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x343))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x348))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x40))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x427))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x453))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x468))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x475))
(assert (axiom_int_approximation x477))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x503))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x516))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x530))
(assert (axiom_int_approximation x531))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x54))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x567))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x57))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x588))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x605))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x628))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x641))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x65))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x651))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x689))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x693))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x731))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x763))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x765))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x767))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x802))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x870))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x880))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x884))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x886))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x909))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x913))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x925))
(assert (axiom_int_approximation x926))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x935))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x939))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x943))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x963))
(assert (axiom_int_approximation x965))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x970))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x975))
(assert (axiom_int_approximation x978))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x987))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x989))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x991))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x993))
(assert (axiom_int_approximation x994))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x996))
(assert (axiom_int_approximation x998))
(assert (axiom_int_approximation x999))
(assert (x334 x137))
(assert (x334 x1049))
(assert (x334 x160))
(assert (x334 x858))
(assert (= 274184521717934524641157099916833587242 (x27 (x1586 274184521717934524641157099916833587242))))
(assert (x334 x1130))
(assert (x334 x1911))
(assert (x334 x320))
(assert (x334 x1545))
(assert (= x96 (x27 (x1586 x96))))
(assert (= (x27 (x465 65536)) 65536))
(assert (= (x27 (x465 18446744073709551615)) 18446744073709551615))
(assert (x334 x864))
(assert (x145 x1120 x1330 x2147 x153))
(assert (x334 x1442))
(assert (= 0 (x760 x1414)))
(assert (x334 x77))
(assert (x1539 x926))
(assert (x334 x40))
(assert (x334 x232))
(assert (x334 x1402))
(assert (x334 x1214))
(assert (= (x27 (x32 x10 2)) (+ (x27 x10) 2)))
(assert (= x1468 (=> (= (or (> x1853 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1853 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1853))) x148) (and (=> x148 x230) (=> (and (not x148) (= x1109 1)) x793)))))
(assert (x334 x391))
(assert (x334 x1971))
(assert (x334 x1797))
(assert (x334 x1739))
(assert (x334 x1120))
(assert (x334 x1431))
(assert (=> (< (- x1442 1) 10000) (= (x465 x1442) (x1586 x1442))))
(assert (= (or x1645 (and (not x1487) x2002)) x85))
(assert (x334 x1002))
(assert (= (x786 x301) (ite (= x301 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1055 x301))))
(assert (x1501 x59 x705))
(assert (x334 x1413))
(assert (x1501 x245 x1883))
(assert (x334 x985))
(assert (x334 x672))
(assert (x334 x1164))
(assert (x1539 x1250))
(assert (=> (> (+ 10000 1) x2069) (= (x465 x2069) (x1586 x2069))))
(assert (x334 x797))
(assert (x334 x1023))
(assert (x334 x710))
(assert (x334 x1981))
(assert (x334 x468))
(assert (= (x27 (x1586 x30)) x30))
(assert (x334 x459))
(assert (x122 x778))
(assert (x334 x1082))
(assert (x334 x415))
(assert (x334 x510))
(assert (= x1347 (x27 (x1586 x1347))))
(assert (x1539 x2120))
(assert (x1703 x102 x1341))
(assert (= (x465 1752364190) (x1586 1752364190)))
(assert (x334 x532))
(assert (x334 x948))
(assert (x1539 x350))
(assert (= (x27 (x465 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (x334 x1630))
(assert (= x353 (x27 (x1586 x353))))
(assert (x334 x1091))
(assert (x334 x105))
(assert (x1539 x1156))
(assert (x334 x1073))
(assert (x334 x564))
(assert (= (x27 (x465 806251499)) 806251499))
(assert (=> (< (- x1683 1) 10000) (= (x465 x1683) (x1586 x1683))))
(assert (x334 x86))
(assert (x1501 x748 x572))
(assert (x334 x201))
(assert (x334 x1791))
(assert (x334 x452))
(assert (= (x1398 x1749) (ite (= 288 x1749) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x760 x1749))))
(assert (x334 x1370))
(assert (x334 x918))
(assert (= (x27 (x1586 x732)) x732))
(assert (x334 x748))
(assert (x334 x59))
(assert (x122 x514))
(assert (x1501 x2135 x1181))
(assert (x334 x1912))
(assert (x334 x801))
(assert (x334 x2050))
(assert (x334 x152))
(assert (x334 x998))
(assert (x1501 x796 x1304))
(assert (x334 x678))
(assert (= 950698303 (x27 (x465 950698303))))
(assert (x334 x498))
(assert (x334 x392))
(assert (x334 x437))
(assert (= (x27 (x1586 x865)) x865))
(assert (x334 x71))
(assert (x334 x1051))
(assert (x334 x1932))
(assert (x334 x1608))
(assert (=> (< (- x437 1) 10000) (= (x1586 x437) (x465 x437))))
(assert (x1539 x220))
(assert (x1501 x1431 x916))
(assert (x122 x1381))
(assert (=> (< (- x508 1) 10000) (= (x465 x508) (x1586 x508))))
(assert (x334 x2092))
(assert (x1539 x1671))
(assert (x334 x65))
(assert (x1703 x653 x2048))
(assert (= x371 true))
(assert (x334 x1276))
(assert (x334 x1440))
(assert (= (x27 (x465 2059964113)) 2059964113))
(assert (x334 x168))
(assert (x1539 x1297))
(assert (x334 x1899))
(assert (= x47 (and x1419 (not x520))))
(assert (x334 x1157))
(assert (x334 x1472))
(assert (= (and x1342 (not x426)) x1497))
(assert (x1501 x384 x1327))
(assert (x334 x2148))
(assert (x334 x188))
(assert (x334 x805))
(assert (=> (< (- x30 1) 10000) (= (x1586 x30) (x465 x30))))
(assert (x334 x245))
(assert (x334 x1185))
(assert (x334 x1390))
(assert (x334 x1344))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x27 (x465 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x334 x2146))
(assert (x536 x1283))
(assert (x334 x175))
(assert (x1501 x1739 x129))
(assert (x334 x1974))
(assert (x1539 x391))
(assert (= x525 x1353))
(assert (x1539 x1210))
(assert (x334 x407))
(assert (x334 x1504))
(assert (x1501 x477 x1134))
(assert (x334 x1246))
(assert (x334 x1945))
(assert (x334 x1641))
(assert (x334 x1278))
(assert (x1539 255))
(assert (x334 x2010))
(assert (x334 x763))
(assert (x122 x616))
(assert (x334 x777))
(assert (x334 x703))
(assert (= (x465 274184521717934524641157099916833587233) (x1586 274184521717934524641157099916833587233)))
(assert (x1192 x748))
(assert (x334 x759))
(assert (x334 x693))
(assert (x334 x362))
(assert (x1539 x1029))
(assert (x334 x2022))
(assert (= (x27 (x465 2055092157)) 2055092157))
(assert (x122 274184521717934524641157099916833587221))
(assert (x1539 x592))
(assert (x334 x1838))
(assert (x334 x990))
(assert (x1703 x1777 x1438))
(assert (= (x1586 641995544) (x465 641995544)))
(assert (= (and x1308 (not x491)) x1146))
(assert (x334 x898))
(assert (= x1247 (or x535 (and x1736 x1198))))
(assert (x334 x1697))
(assert (x334 x837))
(assert (x1539 x452))
(assert (=> (< (- x1381 1) 10000) (= (x1586 x1381) (x465 x1381))))
(assert (x334 x999))
(assert (= x523 (and x2002 x1487)))
(assert (x334 x839))
(assert (x334 x203))
(assert (x334 x349))
(assert (= (or x359 (and (not x715) x1043)) x952))
(assert (x1501 x1254 x1546))
(assert (x1539 x1474))
(assert (= x1152 (or (and x1342 x426) (and x1497 x162))))
(assert (x334 x361))
(assert (= (x33 x117) 0))
(assert (x334 x604))
(assert (= (x27 (x465 274184521717934524641157099916833587221)) 274184521717934524641157099916833587221))
(assert (x1192 x975))
(assert (= 20282409603651670423947251286016 (x27 (x465 20282409603651670423947251286016))))
(assert (x1539 x1230))
(assert (x334 x1195))
(assert (x334 x704))
(assert (x334 x1460))
(assert (x334 x253))
(assert (x334 x422))
(assert (x334 x1675))
(assert (x334 x82))
(assert (x334 x544))
(assert (x334 x1056))
(assert (x334 x1354))
(assert (= 0 (x1934 x26)))
(assert (x334 x1891))
(assert (= 0 (x146 x381)))
(assert (x334 x1420))
(assert (x334 x1781))
(assert (= x1416 (x27 (x1586 x1416))))
(assert (x334 x814))
(assert (= (x1586 830980174) (x465 830980174)))
(assert (x122 x887))
(assert (x334 x291))
(assert (x122 x2101))
(assert (x1539 x2102))
(assert (x334 x14))
(assert (x334 x140))
(assert (x334 x726))
(assert (= (ite (= 128 x1018) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x412 x1018)) (x1105 x1018)))
(assert (x334 x2070))
(assert (x334 x935))
(assert (x334 x632))
(assert (x1703 x2124 x1852))
(assert (= x1419 (and x156 (not x822))))
(assert (x334 x674))
(assert (x334 x51))
(assert (x542 x195 x894))
(assert (x334 x1376))
(assert (x334 x123))
(assert (= (x1586 20282409603651670423947251286015) (x465 20282409603651670423947251286015)))
(assert (x334 x1347))
(assert (x334 x1433))
(assert (= (x27 (x465 1208925819614629174706176)) 1208925819614629174706176))
(assert (x334 x413))
(assert (x334 x909))
(assert (x122 274184521717934524641157099916833587231))
(assert (= (=> (= x242 (or (> x337 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x337)) (> 0 x337)))) (and (=> (and (= x284 1) (= x1350 x1915) (not x242)) x443) (=> x242 x1958))) x269))
(assert (x334 x1081))
(assert (x334 x461))
(assert (= (x27 (x1586 x1442)) x1442))
(assert (x334 x1794))
(assert (x334 x1151))
(assert (x334 x1106))
(assert (x1539 x56))
(assert (x334 x1314))
(assert (x334 x120))
(assert (x334 x1477))
(assert (x334 x1938))
(assert (x334 x2054))
(assert (x334 x847))
(assert (x1501 x1819 x1611))
(assert (x334 x812))
(assert (x334 x2055))
(assert (= x892 (=> (and (= (x346 x1068) x1061) (= 288 x86) (= x2039 (x824 1461501637330902918203684832716283019655932542975 x352)) (= x426 (= x2039 274184521717934524641157099916833587233))) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1642) (<= x188 115792089237316195423570985008687907853269984665640564039457584007913129639935) x426 (= x1642 (x369 x1637)) (= x731 4) (>= x186 0) (> 1208925819614629174706176 x1202) (not (> 4 x731)) (= x883 (x2132 (x1586 274184521717934524641157099916833587233))) (= 1 x136) (= x712 (x125 224)) (= 160 x1089) (<= x186 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x125 224) x175) (< x414 1208925819614629174706176) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x2117) (= (x125 256) x2041) (<= x414 1208925819614629174706175) (not (= 3257672857 x63)) (= x731 4) (not (< x63 2362581449)) (= x1104 (x125 128)) (not (= x63 2362581449)) (= x1637 (x686 (x1586 x1929) (x465 1) 0)) (<= 0 x1642) (= (x125 160) x1525) (= x63 4272920204) (= (x125 192) x2051) (not (= x63 4062139261)) (= x574 (x125 160)) (< 0 x883) (>= 1208925819614629174706175 x1202) (= (x125 256) x1288) (<= 0 x1202) (= x1201 (x125 128)) (<= 0 x188) (<= 0 x414) (= (x125 192) x1207)) x2127) (=> (not x426) x73)))))
(assert (= (x1586 2835717307) (x465 2835717307)))
(assert (x334 x939))
(assert (x334 x2014))
(assert (x334 x1680))
(assert (= (x27 (x465 274184521717934524641157099916833587242)) 274184521717934524641157099916833587242))
(assert (x334 x975))
(assert (x334 x605))
(assert (x334 x844))
(assert (x1501 x81 x795))
(assert (x1539 x1445))
(assert (x334 x1075))
(assert (x334 x2047))
(assert (x334 x1361))
(assert (= (x786 x1243) (ite (= 128 x1243) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1055 x1243))))
(assert (= (x1586 614716962) (x465 614716962)))
(assert (x334 x886))
(assert (x334 x870))
(assert (= (and (not x1673) x309) x2038))
(assert (x122 274184521717934524641157099916833587209))
(assert (x334 x1881))
(assert (x122 x305))
(assert (x334 x1633))
(assert (= (x27 (x1586 x935)) x935))
(assert (x334 x1768))
(assert (= 2059260625 (x27 (x465 2059260625))))
(assert (x334 x2082))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x27 (x465 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (x334 x1709))
(assert (x334 x331))
(assert (= (=> (and (= x1251 (ite x1570 1 0)) (= x1357 (or (> x1127 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x1127) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1127) true)))) (= (not x1357) x1570)) x1529) x457))
(assert (x1539 x1911))
(assert (x334 x1880))
(assert (x334 x299))
(assert (x334 x1819))
(assert (=> (< (- x1039 1) 10000) (= (x1586 x1039) (x465 x1039))))
(assert (x1539 x975))
(assert (x334 x1289))
(assert (x334 x301))
(assert (x1192 x275))
(assert (x334 x648))
(assert (= x360 (x27 (x1586 x360))))
(assert (=> (> (+ 10000 1) x620) (= (x1586 x620) (x465 x620))))
(assert (= (ite (and x1342 x426) (x1588 x1302) (x843 x1302)) (x1010 x1302)))
(assert (x334 x724))
(assert (x334 x1968))
(assert (x334 x531))
(assert (x334 x1888))
(assert (x334 x731))
(assert (x334 x845))
(assert (x702 x1382 x78))
(assert (x1501 x1630 x373))
(assert (x334 x860))
(assert (x334 x1977))
(assert (x334 x2139))
(assert (= (x27 (x1586 x730)) x730))
(assert (= (or (and x383 x1447) (and x1101 x1003)) x874))
(assert (x122 x240))
(assert (x334 x1430))
(assert (x122 x30))
(assert (x334 x1207))
(assert (x334 x350))
(assert (x1501 x391 x1550))
(assert (= x514 (x27 (x1586 x514))))
(assert (x1539 x245))
(assert (x334 x215))
(assert (x334 x1552))
(assert (x334 x341))
(assert (x334 x1526))
(assert (x334 x1652))
(assert (x334 x884))
(assert (x334 x274))
(assert (x334 x867))
(assert (x1539 x2107))
(assert (x334 x1777))
(assert (x334 x831))
(assert (x334 x235))
(assert (x1501 x592 x43))
(assert (x334 x1707))
(assert (x334 x1197))
(assert (x334 x573))
(assert (x1539 x1068))
(assert (= (x465 1208925819614629174706175) (x1586 1208925819614629174706175)))
(assert (= x309 (and x1916 x1133)))
(assert (x334 x1915))
(assert (x334 x725))
(assert (x334 x1599))
(assert (x334 x1849))
(assert (x334 x144))
(assert (=> (> (+ 10000 1) x953) (= (x465 x953) (x1586 x953))))
(assert (= 641995544 (x27 (x465 641995544))))
(assert (x334 x1324))
(assert (x334 x512))
(assert (= (+ (x27 x625) 1) (x27 (x32 x625 1))))
(assert (x1192 x2044))
(assert (x334 x1509))
(assert (x334 x221))
(assert (x334 x1441))
(assert (x334 x290))
(assert (x334 x414))
(assert (= (x465 274184521717934524641157099916833587229) (x1586 274184521717934524641157099916833587229)))
(assert (x334 x189))
(assert (x334 x551))
(assert (x334 x1602))
(assert (= 0 (x70 x905)))
(assert (= (x27 (x465 2362581449)) 2362581449))
(assert (x1539 x81))
(assert (x334 x971))
(assert (= (x1586 274184521717934524641157099916833587231) (x465 274184521717934524641157099916833587231)))
(assert (x1735 x1791 x586))
(assert (x1539 x911))
(assert (x334 x1896))
(assert (x334 x57))
(assert (= (x465 2362581449) (x1586 2362581449)))
(assert (x334 x368))
(assert (x334 x1484))
(assert (x334 x784))
(assert (x1539 x730))
(assert (x334 x1996))
(assert (x334 x1604))
(assert (x334 x1672))
(assert (x334 x798))
(assert (x334 x271))
(assert (x1501 x1629 x737))
(assert (= (=> (and (not (= x927 0)) (<= x1470 1208925819614629174706175) (= (< 0 x1044) x84) (= (x100 160) x218) (= x1312 (and (= (<= x218 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x218 0))) (= x1044 (x824 255 x653)) (= x1070 (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1399)) (= x862 (not x1312)) (= x1399 (x1590 (+ 31 x325))) (= (x824 340282366920938463463374607431768211455 x218) x1606) (= (uninterp_mod (* x1606 (x1788 x1283)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x263) (= x1996 0) (not (ite x862 x862 (and (< 170141183460469231731687303715884105727 x218) (= (<= x218 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x1590 (+ x1070 128)) x278) (>= 1208925819614629174706175 x1699) (= (x100 128) x1699) (not (or (and (< x325 160) (= true (<= x325 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x325))) (= x1470 (x100 256))) (and (=> x84 x1476) (=> (and (= x278 x1602) (not x84) (= x1872 x263)) x237))) x1135))
(assert (x334 x180))
(assert (x1539 x1254))
(assert (x334 x427))
(assert (x1539 x764))
(assert (x122 x946))
(assert (x1539 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x334 x353))
(assert (x334 x2073))
(assert (x334 x754))
(assert (x1539 x2044))
(assert (x334 x897))
(assert (= x315 (or (and x156 x822) (and x1419 x520))))
(assert (x334 x158))
(assert (x334 x1882))
(assert (x334 x462))
(assert (x334 x1827))
(assert (x536 x1579))
(assert (x1539 x1622))
(assert (= (=> (and (<= x1166 20282409603651670423947251286015) (= (x197 256) x1297) (= (ite (<= x806 57896044618658097711785492504343953926634992332820282019728792003956564819967) x806 (- x806 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1903) (= (x824 65535 x445) x1599) (= x1948 (or (and (> 0 (x346 x764)) (= true (<= (x346 x764) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x346 x764)))) (= x613 (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1463) x1463 (- x1463 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x346 x1166) x806) (= x1075 (x824 20282409603651670423947251286015 x65)) (= (x686 (x1586 x935) (x465 5) 0) x1961) (= (x824 18446744073709551615 x220) x1659) (= (x823 x1961) x1166) (= (x1117 160) x538) (= (+ x613 x936) x511) (= (x1809 128) x800) (= x936 x1193) (= (x346 x800) x65) (= x505 (x824 255 x1297)) (>= x1166 0) (= (x824 18446744073709551615 x538) x1867) (= x935 (x824 1461501637330902918203684832716283019655932542975 x1932)) (= (x1694 224) x445) (= x220 (x464 192)) (= (x346 x1075) x1463)) (and (=> (and (or (and (<= x343 18446744073709551615) (= x95 (* x343 x1066)) (not (or (and (> 0 x1440) (= (<= x1440 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1440))) (= (x824 20282409603651670423947251286015 x1440) x1066) (not (< 10141204801825835211973625643007 x104)) (< x343 18446744073709551616) (not x1678) (< (* x343 x1066) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x824 20282409603651670423947251286015 x3) x104) (= x1068 x3) (>= x343 0) (= x3 x95)) (and (not (= x1440 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x191)) (> 18446744073709551616 x357) (< (* x357 x1913) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x1913 x357) x90) (>= x357 0) (= x1150 (x1839 (- 0 x1440))) x1678 (= x191 (x346 x1431)) (not (< 10141204801825835211973625643007 x906)) (>= 18446744073709551615 x357) (= x1913 (x824 20282409603651670423947251286015 x1150)) (= (x1839 (- 0 x191)) x1504) (= x1504 x1068) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1150) (and (> 0 x1150) (= (<= x1150 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x90 x1431) (= x906 (x824 20282409603651670423947251286015 x1431)))) (= x1242 (x824 20282409603651670423947251286015 x818)) (= (x1839 (- 0 x1912)) x818) (= (x298 x302) x1671) (= (x686 (x1586 x1205) (x465 5) 0) x302) (= x1912 (x346 x764)) (> 20282409603651670423947251286016 x1671) (= x662 (x686 (x1586 x620) (x465 5) 0)) (< x353 65536) (= (x824 1461501637330902918203684832716283019655932542975 x1932) x620) (= x1205 (x824 1461501637330902918203684832716283019655932542975 x1932)) (= (x346 x1671) x1440) (>= 65535 x353) (not (> x1569 x1242)) (not (= x1912 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x1490 x662) x353) (= x1678 (or (and (> 0 x1440) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1440) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1440))) (<= 0 x353) (<= 0 x1671) (<= x1671 20282409603651670423947251286015) x1948) x892) (=> (and (= x1194 288) (not x1948)) x1363))) x1698))
(assert (= x946 (x27 (x1586 x946))))
(assert (x122 x732))
(assert (x1735 x704 x1108))
(assert (x334 x1980))
(assert (= x1198 (and x1138 x1152)))
(assert (= (x1586 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x465 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= true x1009))
(assert (= (and x2038 x148) x156))
(assert true)
(assert (x334 x1144))
(assert (= x541 (=> (and (= x1350 x1063) (= x1605 (or (and (> 0 x345) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x345) true)) (> x345 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (ite x1582 1 0) x284) (= (not x1605) x1582)) x443)))
(assert (x334 x766))
(assert (x334 x1933))
(assert (= 0 (x859 x2056)))
(assert (x334 x1149))
(assert (x334 x285))
(assert (x334 x1994))
(assert (x1539 x362))
(assert (= (x1586 2059964113) (x465 2059964113)))
(assert (=> (< (- x1416 1) 10000) (= (x465 x1416) (x1586 x1416))))
(assert (x334 x527))
(assert (= x1802 (x27 (x1586 x1802))))
(assert (x334 x508))
(assert (x334 x902))
(assert (x334 x22))
(assert (x334 x2081))
(assert (x334 x636))
(assert (x1501 x646 x2021))
(assert (x334 x1488))
(assert (x334 x1132))
(assert (x334 x358))
(assert (= x951 x1528))
(assert (x122 x1416))
(assert (= (x27 (x32 x1203 2)) (+ (x27 x1203) 2)))
(assert (x334 x1094))
(assert (x536 x1061))
(assert (= x1772 (=> (and (= x1796 (x686 (x1586 x609) (x465 11) 0)) (> 256 x468) (= 0 x2034) (= x1949 (x686 (x465 0) (x465 9) 0)) (<= 0 x468) (<= x468 255) (= x374 (= 0 x468)) (= (x1391 x1949) x732) (>= 1461501637330902918203684832716283019655932542975 x732) (= x332 (x686 (x1586 x732) x1796 0)) (<= 0 x732) (< x732 1461501637330902918203684832716283019655932542976) (= x468 (x1507 x332))) (and (=> (and x374 (= x1214 x1656)) x621) (=> (not x374) x1534)))))
(assert (= (=> (and (= x307 (or (> x2144 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2144 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2144 0)))) (= x1479 (not x307)) (= x1109 (ite x1479 1 0))) x793) x2067))
(assert (= (x27 (x465 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x334 x2033))
(assert (x334 x2037))
(assert (= (x1586 840395849) (x465 840395849)))
(assert (x334 x1663))
(assert (x334 x615))
(assert (x1501 x1433 x1296))
(assert (x1539 x630))
(assert (x122 x1347))
(assert (x334 x1710))
(assert (x334 x348))
(assert (= (x27 (x1586 x857)) x857))
(assert (x334 x1639))
(assert (x334 x1475))
(assert (x122 x1332))
(assert (x334 x912))
(assert (x334 x1562))
(assert (x1539 x678))
(assert (=> (> (+ 10000 1) x305) (= (x465 x305) (x1586 x305))))
(assert (x334 x135))
(assert (x1539 x818))
(assert (= (and (not x1307) x287) x2110))
(assert (x1539 x226))
(assert (x334 x280))
(assert (= (and x711 x2023) x1317))
(assert (x334 x855))
(assert (= (ite (= x1018 x1566) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x449 x1018)) (x1866 x1018)))
(assert (x334 x1943))
(assert (x334 x110))
(assert (x1539 x2066))
(assert (x334 x1063))
(assert (x334 x1560))
(assert (x122 x407))
(assert (= x1449 (=> (and (not x539) (= (> x1676 1) x539) (= (x824 255 x653) x1676) (= x164 x2144)) x2067)))
(assert (= x1528 (or x1795 x893)))
(assert (x334 x1466))
(assert (= (x1586 274184521717934524641157099916833587209) (x465 274184521717934524641157099916833587209)))
(assert (not x930))
(assert (x1539 x1777))
(assert (x334 x1242))
(assert (x334 x1142))
(assert (x702 x2120 x904))
(assert (x334 x2125))
(assert (= 274184521717934524641157099916833587229 (x27 (x1586 274184521717934524641157099916833587229))))
(assert (= (x27 (x1586 x1039)) x1039))
(assert (x334 x1070))
(assert (x334 x660))
(assert (=> (< (- x1817 1) 10000) (= (x465 x1817) (x1586 x1817))))
(assert (x334 x1338))
(assert (x334 x60))
(assert (= x1444 (and (not x1927) x466)))
(assert (x1735 x998 x376))
(assert (x1539 x1120))
(assert (= x1211 (=> (= x1268 (= x1159 274184521717934524641157099916833587231)) (and (=> (not x1268) x1801) (=> (and (= 160 x740) (<= 0 x361) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1196) (>= x1042 0) (>= x1715 0) (= x633 (x1617 192)) (= x1935 (x1617 256)) (= (x1590 (+ x677 352)) x2122) (= 4272920204 x1672) (< x361 1208925819614629174706176) (not (> 4 x798)) (= x2003 (x1617 128)) (= x530 (x2132 (x1586 274184521717934524641157099916833587231))) x1268 (>= 1208925819614629174706175 x361) (<= x667 1208925819614629174706175) (= (x686 (x1586 x1929) (x465 1) 0) x499) (= (x1617 224) x1270) (= x798 x1103) (<= 0 x1826) (= 4 x798) (= x577 (x1617 160)) (not (= x1672 4062139261)) (= (x1617 192) x1355) (not (= 3257672857 x1672)) (= x813 (x1617 160)) (= (x549 x499) x1826) (> x530 0) (= (x1617 128) x1980) (<= x1826 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x1672 2362581449)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1715) (<= 0 x667) (< x667 1208925819614629174706176) (not (= x1672 2362581449)) (= x71 (x1617 256)) (= x111 (x1590 (+ x677 288))) (= x98 (x1590 (+ x677 384))) (= (x1590 (+ x677 320)) x821) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1042) (= x1896 1) (= x1939 (x1617 224))) x471)))))
(assert (x334 x1982))
(assert (x334 x1291))
(assert (x334 x1851))
(assert (= (ite (= x1789 x1566) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x449 x1789)) (x1866 x1789)))
(assert (=> (> (+ 10000 1) x1332) (= (x465 x1332) (x1586 x1332))))
(assert (x334 x380))
(assert (=> (< (- x946 1) 10000) (= (x465 x946) (x1586 x946))))
(assert (x334 x456))
(assert (x334 x61))
(assert (x1735 x437 x1037))
(assert (x334 x601))
(assert (x1539 x477))
(assert (x334 x1491))
(assert (x334 x416))
(assert (x334 x495))
(assert (x1539 x279))
(assert (x122 x1802))
(assert (x334 x19))
(assert (x1501 x226 x1079))
(assert (x334 x708))
(assert (x1192 x384))
(assert (x334 x806))
(assert (x334 x2003))
(assert (= (=> (= (= 274184521717934524641157099916833587225 x1727) x1927) (and (=> (not x1927) x1115) (=> (and (= 2835717307 x1493) (= x1078 x151) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x498 x1531)) (= x514 x1500) (= (or (and (= true (<= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x805 64)) (> x805 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x155) (> x2068 0) (= x1260 (x1919 x578)) (= (x686 (x1586 274184521717934524641157099916833587209) (x465 1) 0) x1262) (<= 0 x1260) (= x498 x1078) (= (x686 (x1586 x514) (x465 1) 0) x1380) (= x996 1) (<= x1531 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x1493 826074471)) (not (> 4 x1621)) (= x1531 (x1803 x1380)) x1927 (= x58 (< x1260 x1078)) (= x993 274184521717934524641157099916833587209) (= 68 x1621) (not (= x1493 2514000705)) (= (x2132 (x1586 274184521717934524641157099916833587225)) x2068) (= (x686 (x1586 274184521717934524641157099916833587209) (x465 1) 0) x578) (not (= x1493 826074471)) (= x1825 (+ x1371 x11)) (= x11 x1531) (not (= x1493 1889567281)) (not x155) (<= x1260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x805 (x1839 (- x1621 4))) (= (x1839 (- x1260 x1078)) x517) (>= x1531 0) (= x2047 x1621) (= x514 x2000) (>= 1461501637330902918203684832716283019655932542975 x514) (= x498 x1371) (not x58) (= x1890 274184521717934524641157099916833587209) (= x1517 32) (= x1635 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1985))) x1439))
(assert (x334 x1028))
(assert (x334 x1702))
(assert (x334 x1396))
(assert (x334 x707))
(assert (=> (> (+ 10000 1) x353) (= (x465 x353) (x1586 x353))))
(assert (x334 x402))
(assert (x1539 x1532))
(assert (= (x27 (x1586 x508)) x508))
(assert (x334 x1536))
(assert (= (x27 (x1586 x620)) x620))
(assert (= (ite (and x1342 x426) (x1588 416) (x843 416)) (x1010 416)))
(assert (= (ite (and x383 x1447) (x1412 x726) (x1734 x726)) (x100 x726)))
(assert (x334 x887))
(assert (x334 x646))
(assert (x334 x69))
(assert (= (x465 1176186698) (x1586 1176186698)))
(assert (= x1388 (=> (= x715 (or (and (< x263 0) (= (<= x263 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263))) (and (=> x715 x1062) (=> (and (= 1 x1696) (not x715) (= x278 x1006)) x1045)))))
(assert (x1539 x538))
(assert (=> (< (- x710 1) 10000) (= (x465 x710) (x1586 x710))))
(assert (x334 x1158))
(assert (= (=> (and (= x716 (x32 x738 1)) (= (x440 x716) x1073) (<= 0 x689) (= (x212 x1372) x29) (<= 0 x2139) (= x830 (x1590 (+ 384 x19))) (= 0 x1655) (= (x824 255 x2124) x1370) (= (x1590 (+ x2077 64)) x696) (>= 18446744073709551615 x2139) (<= 0 x21) (< x1033 1461501637330902918203684832716283019655932542976) (= (x397 x1759) x365) (< x365 18446744073709551616) (<= x601 18446744073709551615) (= x992 (x1590 (+ 64 x168))) (< x436 1461501637330902918203684832716283019655932542976) (= (x1590 (+ 64 x830)) x861) (<= x433 255) (= x1697 4) (> 340282366920938463463374607431768211456 x697) (>= x436 0) (= (x1590 (+ x319 288)) x1372) (= (x1646 x1759) x689) (= x1428 (x1590 (+ x830 64))) (= x436 x1782) (> 18446744073709551616 x689) (> 340282366920938463463374607431768211456 x21) (<= x1033 1461501637330902918203684832716283019655932542975) (<= x689 18446744073709551615) (= (x686 (x465 0) (x465 9) 0) x2143) (>= 1461501637330902918203684832716283019655932542975 x436) (= x896 (x686 (x1586 x1817) x1904 0)) (= (x1391 x2143) x436) (= (x1590 (+ 512 x319)) x291) (= x215 0) (> 256 x433) (<= x365 18446744073709551615) (= x1532 (x1841 x861)) (= (x1269 x716) x2139) (= x494 (x824 1461501637330902918203684832716283019655932542975 x437)) (= x1742 (x32 x716 2)) (= (x212 x456) x1241) (= x738 (x686 (x465 0) (x465 10) 0)) (= x21 (x1392 x1742)) (= x1904 (x686 (x1586 x494) (x465 6) 0)) (= 0 x1370) (= (x32 x738 2) x1759) (= (x1590 (+ 288 x319)) x456) (= (x1590 (+ x1428 64)) x168) (>= 1461501637330902918203684832716283019655932542975 x1073) (= (= 274184521717934524641157099916833587233 x293) x491) (= x1942 (x1590 (+ 64 x696))) (= x1782 (x824 1461501637330902918203684832716283019655932542975 x1241)) (<= 0 x697) (= (x411 x1759) x601) (= (x1784 x896) x697) (= (x1884 x738) x433) (= (x824 1461501637330902918203684832716283019655932542975 x1532) x293) (= (x1590 (+ x456 64)) x2077) (= (x1467 x830) x2124) (<= 0 x601) (<= x697 340282366920938463463374607431768211455) (= (x2106 x738) x1033) (< x1073 1461501637330902918203684832716283019655932542976) (> 18446744073709551616 x2139) (<= 0 x1073) (>= 340282366920938463463374607431768211455 x21) (>= x365 0) (= x1817 (x824 1461501637330902918203684832716283019655932542975 x29)) (<= 0 x433) (> 18446744073709551616 x601) (>= x1033 0)) (and (=> (and (= (x420 192) x341) (= (x420 224) x453) (>= x1202 0) (= (x2132 (x1586 274184521717934524641157099916833587233)) x978) (>= x512 0) (= x1633 (x420 192)) (not (< x1001 2362581449)) (= (x420 160) x2076) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x503) (not (< x1368 4)) (= (x420 256) x725) (<= 0 x186) (= (x686 (x1586 x274) (x465 1) 0) x669) (not (= 4062139261 x1001)) (= x604 (x1590 (+ x830 288))) (= (x420 160) x1229) (>= 1208925819614629174706175 x414) (= (x420 256) x106) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x512) (<= x186 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x420 128) x330) (= 4 x1368) (= (x369 x669) x512) (< x414 1208925819614629174706176) (>= x188 0) (< 0 x978) (not (= 2362581449 x1001)) (= x1697 x1368) (= (x1590 (+ 320 x830)) x1315) x491 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x188) (not (= x1001 3257672857)) (= x1682 160) (<= x1202 1208925819614629174706175) (= 4272920204 x1001) (= (x1590 (+ 384 x830)) x134) (= (x1590 (+ 352 x830)) x1164) (< x1202 1208925819614629174706176) (<= 0 x414) (= 1 x97) (= x1291 (x420 128)) (= (x420 224) x1751)) x599) (=> (not x491) x502))) x1502))
(assert (x334 x1355))
(assert (x334 x254))
(assert (= (=> (and (= 128 x438) (= (x346 x796) x1579) (= x849 (x824 1461501637330902918203684832716283019655932542975 x352)) (= x2103 (= x849 274184521717934524641157099916833587233))) (and (=> (not x2103) x1670) (=> (and (< x414 1208925819614629174706176) (= (x1724 160) x782) (= (x686 (x1586 x2069) (x465 1) 0) x607) (>= 1208925819614629174706175 x1202) (not (= x439 4062139261)) (= x157 (x1724 224)) (= x370 160) (= x1828 (x1724 256)) (= (x1724 224) x255) (= 4 x1663) (= 4 x1663) (= x1643 (x1724 160)) (>= x1202 0) (not (> 2362581449 x439)) (not (= 2362581449 x439)) (<= 0 x414) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x188) (= (x369 x607) x933) (not (< x1663 4)) (not (= 3257672857 x439)) (= (x1724 192) x1748) (< x1202 1208925819614629174706176) (= x1124 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x1864 (x1724 192)) (>= x188 0) (= x962 (x1724 128)) (= (x1724 128) x221) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x186) (= x1986 (x2132 (x1586 274184521717934524641157099916833587233))) (= 1 x322) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x933) (= x439 4272920204) (<= 0 x186) (> x1986 0) (= (x1724 256) x1702) x2103 (<= 0 x933) (<= x414 1208925819614629174706175)) x264))) x834))
(assert (= (and (not x1736) x1198) x957))
(assert (x334 x1183))
(assert (x1539 x704))
(assert (x334 x1194))
(assert (= (and x749 (not x924)) x1043))
(assert (x334 x1029))
(assert (= x1034 x711))
(assert (= x1045 (=> (and (= (x824 340282366920938463463374607431768211455 x477) x151) (= x2047 (x1839 (- x1856 x1006))) (= (x1590 (+ x1006 4)) x647) (< 0 x1696) (= (x1590 (+ x1006 36)) x118) (= x1500 (x824 1461501637330902918203684832716283019655932542975 x1791)) (= (x1590 (+ x1006 68)) x1856) (= x949 (= x1727 274184521717934524641157099916833587229)) (= (x824 1461501637330902918203684832716283019655932542975 x1538) x1727)) (and (=> (not x949) x1439) (=> (and (= x1500 x1973) (< 0 x1845) (= x1276 (+ x706 x921)) (not (> 4 x2017)) (>= 1461501637330902918203684832716283019655932542975 x1973) (= x724 x654) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1081) (not x981) (= x593 (x1325 x789)) (<= x593 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x518) (= x1517 32) x949 (= x2017 x2047) (= x1860 x1973) (not x923) (< (+ x654 x1081) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1839 (- x593 x724)) x850) (= x151 x724) (= x789 (x686 (x1586 274184521717934524641157099916833587209) (x465 1) 0)) (= 1 x996) (= x1319 (x686 (x1586 x1973) (x465 1) 0)) (= x706 x654) (not (= x628 826074471)) (= x700 274184521717934524641157099916833587209) (>= x1081 0) (= (> x724 x593) x981) (= (x681 x1319) x1081) (= x1300 274184521717934524641157099916833587209) (= x923 (or (and (> 64 x1185) (= (<= x1185 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1185 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= 0 x593) (not (= x628 1889567281)) (= (x2132 (x1586 274184521717934524641157099916833587229)) x1845) (= 2835717307 x628) (= 68 x2017) (= (x686 (x1586 274184521717934524641157099916833587209) (x465 1) 0) x554) (= x921 x1081) (= (x1839 (- x2017 4)) x1185) (not (> 826074471 x628)) (not (= 2514000705 x628))) x1985)))))
(assert (x334 x1443))
(assert (= (x1586 826074471) (x465 826074471)))
(assert (x334 x2068))
(assert (x1539 x1768))
(assert (= (x27 (x1586 x1713)) x1713))
(assert (x1539 1461501637330902918203684832716283019655932542975))
(assert (x334 x1655))
(assert (x702 x496 x1351))
(assert (x334 x174))
(assert (x1735 x1532 x1568))
(assert (x334 x643))
(assert (x334 x281))
(assert (x122 x508))
(assert (x334 x583))
(assert (x1539 x1819))
(assert (=> (> (+ 10000 1) x1713) (= (x465 x1713) (x1586 x1713))))
(assert (x1539 x1460))
(assert (x334 x1845))
(assert (x334 x106))
(assert (x334 x1046))
(assert (x122 x353))
(assert (x334 x1095))
(assert (x702 x220 x1577))
(assert (x334 x283))
(assert (x334 x1215))
(assert (= true x1801))
(assert (x1735 x208 x2025))
(assert (x1501 x911 x1320))
(assert (x334 x1989))
(assert (x334 x557))
(assert (= 0 (x412 x1018)))
(assert (x334 x641))
(assert (x334 x198))
(assert (x334 x94))
(assert (= (or (and x1244 x1146) (and x1308 x491)) x28))
(assert (x334 x1729))
(assert (x334 x1012))
(assert (x1539 x6))
(assert (=> (< (- x778 1) 10000) (= (x465 x778) (x1586 x778))))
(assert (x334 x1285))
(assert (x334 x2080))
(assert (x334 x1725))
(assert (x334 x1610))
(assert (x334 x1373))
(assert (=> (> (+ 10000 1) x308) (= (x1586 x308) (x465 x308))))
(assert (x1192 x1580))
(assert (x1539 18446744073709551615))
(assert (x334 x265))
(assert (=> (> (+ 10000 1) x240) (= (x465 x240) (x1586 x240))))
(assert (x1501 x1620 x1469))
(assert (x334 x1551))
(assert (x334 x758))
(assert (x334 x955))
(assert (x334 x1979))
(assert (x334 x546))
(assert (x334 x1988))
(assert (= (x555 192) x2014))
(assert (x1539 x1579))
(assert (x1539 x1791))
(assert (x334 x1279))
(assert (x334 x1643))
(assert (= true x1322))
(assert (x334 x1984))
(assert (x334 x1299))
(assert (x334 x1255))
(assert (x334 x1686))
(assert (x334 x1543))
(assert (x728 x1163 x1031))
(assert (x122 x1039))
(assert (x334 x1579))
(assert (= (ite (= x726 x546) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x100 x726)) (x1495 x726)))
(assert (x334 x2036))
(assert (x334 x2088))
(assert (=> (> (+ 10000 1) x1929) (= (x1586 x1929) (x465 x1929))))
(assert (x334 x569))
(assert (x334 x337))
(assert (x334 x513))
(assert (x334 x697))
(assert (x334 x2135))
(assert (x1539 x3))
(assert (= 274184521717934524641157099916833587209 (x27 (x465 274184521717934524641157099916833587209))))
(assert (x334 x21))
(assert (x1501 x800 x587))
(assert (x334 x322))
(assert (x334 x1450))
(assert (x334 x1895))
(assert (x334 x207))
(assert (x334 x1086))
(assert (x334 x1414))
(assert (x334 x1375))
(assert (x334 x1572))
(assert (x334 x1374))
(assert (= x778 (x27 (x1586 x778))))
(assert (x334 x2097))
(assert (x334 x1167))
(assert (x334 x1071))
(assert (= (ite (and x1342 x426) (x1588 320) (x843 320)) (x1010 320)))
(assert (x334 x2114))
(assert (= x599 (=> (and (= x1761 (x1275 x905)) (= x1210 (ite (or (and (> x393 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x174 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x174 x393) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x174) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x393)))) 1 0)) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1214) (and (< x1214 0) (= (<= x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) 1 0) x195) (= (ite (not x584) 1 0) x1397) (= (uninterp_mod (* x697 x1021) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1180) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1180 x934)) (= (x1590 (+ x1372 64)) x2056) (= x393 (x1839 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1214))) (= (x824 x195 x894) x446) (= (x1590 (+ x1214 x174)) x1717) (= (x824 18446744073709551615 x1761) x934) (= (x617 x1243) x135) (= x1285 0) (= 0 x446) (= x1257 (x617 x291)) (= (x1590 (+ x861 64)) x905) (not (= x97 0)) (= x174 x2085) (<= x1257 1208925819614629174706175) (= x695 (not x403)) (>= 1208925819614629174706175 x372) (= (ite (or (and (<= x272 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x174)) (and (= (<= x174 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x272)) (< x174 x272))) 1 0) x894) (= (x617 x301) x372) (not (or (> x1682 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 x1682) (= true (<= x1682 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1243 (x1590 (+ x830 288))) (= (* x934 x1180) x2085) (= x403 (and (= (<= x135 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x135 0))) (not (> x174 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (x1590 (+ 64 x291)) x140) (= x1285 (x824 x1397 x1210)) (not (ite x695 x695 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x135) true) (> x135 170141183460469231731687303715884105727)))) (= (x1839 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1214)) x272) (= x1656 x1717) (= x584 (or (> x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1214)))) (= (x1590 (+ x140 64)) x301) (= (x277 x2056) x321) (= (x824 340282366920938463463374607431768211455 x135) x1021)) x621)))
(assert (x334 x566))
(assert (x702 x773 x2009))
(assert (x145 x1184 x1053 x16 x746))
(assert (x1539 x1397))
(assert (x334 x1555))
(assert (x334 x200))
(assert (x122 x96))
(assert (x334 x1814))
(assert (=> (< (- x407 1) 10000) (= (x465 x407) (x1586 x407))))
(assert (x334 x1885))
(assert (x334 x1779))
(assert (x542 x1246 x678))
(assert (x334 x1832))
(assert (x334 x1567))
(assert (x334 x592))
(assert (x334 x2075))
(assert (x334 x953))
(assert (x1539 x1710))
(assert (= (x27 (x465 2000660004)) 2000660004))
(assert (x1539 x1620))
(assert (x334 x1208))
(assert (x334 x1527))
(assert (x334 x1492))
(assert (= 1208925819614629174706175 (x27 (x465 1208925819614629174706175))))
(assert (x728 x1418 x121))
(assert (x334 x1886))
(assert (= (=> (and (not (ite x1830 x1830 (and (> x183 170141183460469231731687303715884105727) (= (<= x183 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1830 (not x1085)) (= x1915 (x1590 (+ x1484 288))) (<= x2081 1208925819614629174706175) (= x1729 0) (= x948 (x1010 416)) (= x1484 (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1421)) (= (x1590 (+ 31 x1089)) x1421) (= x1640 (x824 255 x653)) (= x183 (x1010 320)) (= x2081 (x1010 288)) (= (> x1640 0) x1138) (= x337 (uninterp_mod (* x870 (x1788 x1061)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= 0 x136)) (>= 1208925819614629174706175 x948) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1089) (and (= (<= x1089 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 x1089)))) (= (x824 340282366920938463463374607431768211455 x183) x870) (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x183) true) (> x183 0)) x1085)) (and (=> x1138 x1499) (=> (and (not x1138) (= x345 x337) (= x1063 x1915)) x541))) x2127))
(assert (= (x465 2055092157) (x1586 2055092157)))
(assert (x1192 x1819))
(assert (x728 x183 x2045))
(assert (= (x1105 x1789) (ite (= x1789 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x412 x1789))))
(assert (x334 x410))
(assert (x1539 x1924))
(assert (x1539 x1399))
(assert (= (and (not x742) x1444) x1515))
(assert (x542 x756 x2109))
(assert (x334 x1782))
(assert (x334 x514))
(assert (x334 x308))
(assert (x334 x1833))
(assert (x334 x184))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x27 (x465 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= (x1030 x1558) 0))
(assert (= 170141183460469231731687303715884105727 (x27 (x465 170141183460469231731687303715884105727))))
(assert (= true x1131))
(assert (x334 x967))
(assert (x334 x1470))
(assert (x334 x876))
(assert (x728 x1283 x1407))
(assert (x1539 x1061))
(assert (x334 x1090))
(assert (x334 x645))
(assert (x334 x589))
(assert (x334 x1332))
(assert (= x1133 (or (and x1321 x679) (and x2032 x2103))))
(assert (x334 x1858))
(assert (x1501 x1768 x1199))
(assert (x334 x2074))
(assert (=> (> (+ 10000 1) x1802) (= (x465 x1802) (x1586 x1802))))
(assert (= (x27 (x1586 x2069)) x2069))
(assert (x334 x1873))
(assert (x334 x447))
(assert (= (ite (= x1749 x1005) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1010 x1749)) (x328 x1749)))
(assert (x334 x64))
(assert (x334 x1829))
(assert (= (x1586 18446744073709551615) (x465 18446744073709551615)))
(assert (x334 x1455))
(assert (x1735 x1924 x1310))
(assert (x334 x24))
(assert (= true x1245))
(assert (= (x27 (x1586 x609)) x609))
(assert (x334 x2100))
(assert (x334 x1205))
(assert (x334 x894))
(assert (x334 x698))
(assert (x334 x305))
(assert (x334 x1415))
(assert (x334 x1173))
(assert (x1539 x204))
(assert (x334 x401))
(assert (x334 x1493))
(assert (= x1723 (or (and x2038 (not x148)) x699)))
(assert (x334 x1683))
(assert (x334 x1953))
(assert (x1539 x1433))
(assert (x334 x1935))
(assert (x334 x1653))
(assert (= (or (and x742 x1444) (and x952 x949) (and x466 x1927)) x1795))
(assert (x334 x1869))
(assert (x1539 x1075))
(assert (= (x27 (x465 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x334 x93))
(assert (x334 x582))
(assert (x334 x667))
(assert (x334 x194))
(assert (= (or (and x2110 x99) (and x1307 x287)) x2002))
(assert (x334 x97))
(assert (x334 x2098))
(assert (= (x27 (x1586 x494)) x494))
(assert (x1735 x1241 x718))
(assert (= (x1055 x301) 0))
(assert (x334 x1764))
(assert (x334 x1306))
(assert (x728 x1579 x323))
(assert (= (x27 (x465 840395849)) 840395849))
(assert (x334 x1965))
(assert (x334 x908))
(assert (x334 x1642))
(assert (x334 x651))
(assert (x334 x1098))
(assert (x1539 x2148))
(assert (x334 x518))
(assert (x334 x360))
(assert (x334 x751))
(assert (x1539 x2124))
(assert (= (x642 x1732) 0))
(assert (x334 x132))
(assert (x334 x696))
(assert (x334 x352))
(assert (x334 x2109))
(assert (= (and x679 (not x1321)) x1123))
(assert (x334 x1496))
(assert (x334 x1454))
(assert (x334 x654))
(assert (x334 x1190))
(assert (x334 x533))
(assert (x334 x2124))
(assert (= x502 (=> (= x1244 (= x293 274184521717934524641157099916833587231)) (and (=> (and (<= 0 x1715) (= x801 (x7 256)) (= x462 (x7 192)) (= x1023 (x7 160)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1808) (> x869 0) (= 4272920204 x969) (= 4 x1988) (= (x7 192) x1090) (= (x686 (x1586 x274) (x465 1) 0) x744) (not (= 3257672857 x969)) (<= 0 x667) x1244 (= x77 (x1590 (+ x830 288))) (= x513 (x549 x744)) (= x743 (x7 224)) (= x1200 (x7 128)) (<= x667 1208925819614629174706175) (<= x1715 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x869 (x2132 (x1586 274184521717934524641157099916833587231))) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x775 (x7 128)) (>= x361 0) (not (< x1988 4)) (= x908 (x1590 (+ x830 352))) (= x475 (x7 256)) (<= 0 x513) (= x1988 x1697) (= (x7 224) x2100) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1042) (= (x7 160) x2054) (>= x1042 0) (< x361 1208925819614629174706176) (not (= 4062139261 x969)) (= 160 x1682) (= x2070 (x1590 (+ 320 x830))) (> 1208925819614629174706176 x667) (not (= x969 2362581449)) (<= x361 1208925819614629174706175) (not (< x969 2362581449)) (= x97 1) (= x406 (x1590 (+ x830 384)))) x599) (=> (not x1244) x371)))))
(assert (x542 x290 x750))
(assert (x334 x741))
(assert (x334 x1737))
(assert (= (x465 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1586 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x334 x2111))
(assert (= (x27 (x1586 x308)) x308))
(assert (x334 x1213))
(assert (= (=> (and (> x408 0) (= x408 x1443) (not (= 0 x996)) (= (ite x907 1 0) x1443) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1517) (and (> 32 x1517) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1517))))) (= (= 0 x408) x190) (= (not x190) x907) (= x408 (x594 x1006))) x1999) x1985))
(assert (x334 x2066))
(assert (x334 x450))
(assert (x334 x1808))
(assert (x334 x813))
(assert (x1539 x59))
(assert (x1192 x1431))
(assert (x1539 x1932))
(assert (x334 x488))
(assert (= (=> (and (<= x857 1461501637330902918203684832716283019655932542975) (= (x1507 x1219) x766) (<= 0 x857) (= x864 0) (= (= 0 x766) x1673) (<= x766 255) (<= 0 x766) (= (x686 (x1586 x30) (x465 11) 0) x2083) (= (x686 (x1586 x857) x2083 0) x1219) (= (x1391 x469) x857) (= x469 (x686 (x465 0) (x465 9) 0)) (> 1461501637330902918203684832716283019655932542976 x857) (> 256 x766)) (and (=> (not x1673) x1468) (=> (and x1673 (= x164 x1853)) x1449))) x676))
(assert (= (x1586 274184521717934524641157099916833587225) (x465 274184521717934524641157099916833587225)))
(assert (x334 x2144))
(assert (x334 x945))
(assert (x334 x700))
(assert (x334 x1067))
(assert (x334 x1576))
(assert (x1539 x2111))
(assert (x1539 x1629))
(assert (x1539 x552))
(assert (x334 x1806))
(assert (x334 x1676))
(assert (x334 x819))
(assert (x1501 x926 x567))
(assert (x334 x1924))
(assert (x334 x1890))
(assert (x334 x96))
(assert (x334 x81))
(assert (x1735 x1932 x1256))
(assert (x334 x637))
(assert (x334 x627))
(assert (x1501 x837 x430))
(assert (x334 x2142))
(assert (x334 x503))
(assert (x1539 x1246))
(assert (x334 x1761))
(assert (x334 x42))
(assert (x334 x785))
(assert (x334 x1826))
(assert (= x930 (=> (and (= (< 0 (x2132 (x1586 274184521717934524641157099916833587229))) x1404) (>= x447 0) (<= x1191 255) (>= x335 0) (<= 0 x180) (= x1007 (x1385 (x1586 274184521717934524641157099916833587209))) (<= 0 x1221) x1309 (>= x1908 0) x1155 (= x1155 (> (x2132 (x1586 274184521717934524641157099916833587209)) 0)) (<= 0 x126) (<= 0 x838) (>= x1526 0) x537 (>= 18446744073709551615 x206) (= x1002 (x1385 (x1586 274184521717934524641157099916833587231))) (= x1707 x1709) (= (> (x2132 (x1586 274184521717934524641157099916833587225)) 0) x1048) (>= 1208925819614629174706175 x361) x1048 (>= 255 x838) (>= 20282409603651670423947251286015 x1950) (= false x597) (<= 0 x2082) (= x1908 (x1385 (x1586 274184521717934524641157099916833587242))) x891 (>= x845 0) (<= x1359 255) (<= x1221 18446744073709551615) (>= x1968 0) (= x995 4) (>= x1359 0) (= (> (x2132 (x1586 274184521717934524641157099916833587242)) 0) x1309) (= (< 0 (x2132 (x1586 274184521717934524641157099916833587221))) x173) (>= 18446744073709551615 x126) (>= x414 0) (>= x361 0) (= x1709 x865) (<= x357 18446744073709551615) (= false x1041) (<= x414 1208925819614629174706175) (<= x667 1208925819614629174706175) (>= x404 0) (<= 0 x206) (<= 0 x1994) (<= x831 1099511627775) (<= 0 x1895) (>= 20282409603651670423947251286015 x1994) (>= 1208925819614629174706175 x1202) (= x404 (x1385 (x1586 274184521717934524641157099916833587229))) (= x1491 x1840) (>= x672 0) (<= 0 x1709) (<= 0 x1491) (= x180 (x1385 (x1586 274184521717934524641157099916833587221))) (= x392 274184521717934524641157099916833587209) (= x1984 x2101) (<= 0 x1191) (<= x343 18446744073709551615) (>= 18446744073709551615 x1895) (>= 1461501637330902918203684832716283019655932542975 x1709) (>= x1950 0) (<= 0 x357) (<= 0 x343) x173 (= 641995544 x1190) (= false x1521) (<= x1984 1461501637330902918203684832716283019655932542975) (<= x2092 255) x1404 (>= 1461501637330902918203684832716283019655932542975 x1491) (<= x335 1099511627775) (= (x1385 (x1586 274184521717934524641157099916833587233)) x1968) (= x537 (< 0 (x2132 (x1586 274184521717934524641157099916833587233)))) (= (x1385 (x1586 274184521717934524641157099916833587225)) x447) (>= 18446744073709551615 x1038) (<= 0 x1202) (>= x2092 0) (>= 20282409603651670423947251286015 x845) (<= 0 x1984) (>= x667 0) (= x1705 false) (<= x2082 20282409603651670423947251286015) (= x891 (not (= x1707 274184521717934524641157099916833587209))) (<= 0 x1038) (>= 18446744073709551615 x672) (<= 0 x1007) (<= x1526 255) (= x1685 (< 0 (x2132 (x1586 274184521717934524641157099916833587231)))) (<= 0 x1002) x1685 (<= 0 x831)) x509)))
(assert (x334 x167))
(assert (x334 x408))
(assert (x1539 x1431))
(assert (= (ite (and x426 x1342) (x1588 x1749) (x843 x1749)) (x1010 x1749)))
(assert (x334 x275))
(assert (x334 x653))
(assert (x1539 x756))
(assert (x334 x202))
(assert (x334 x2120))
(assert (x542 x552 x1250))
(assert (= (x1398 x1302) (ite (= 288 x1302) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x760 x1302))))
(assert (x334 x994))
(assert (x334 x883))
(assert (= (x465 1558726628) (x1586 1558726628)))
(assert (x1501 x1075 x1762))
(assert (x334 x987))
(assert (x1501 x1150 x938))
(assert (x334 x906))
(assert (x334 x610))
(assert (x334 x1150))
(assert (x122 x308))
(assert (x334 x2065))
(assert (= 0 (x2149 x1765)))
(assert (x1192 x1075))
(assert (x334 x208))
(assert (x334 x1748))
(assert (= (x27 (x465 115792089237316195423570985008687907853269984655499359237631748795939503996928)) 115792089237316195423570985008687907853269984655499359237631748795939503996928))
(assert (= x1205 (x27 (x1586 x1205))))
(assert (x1501 x939 x1147))
(assert (x334 x807))
(assert (= (=> (and (= x345 x1114) (= x735 (> x416 1)) (not x735) (= x752 x1063) (= x416 (x824 255 x653))) x541) x196))
(assert (x1539 x748))
(assert (x542 x2066 x279))
(assert (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x27 (x465 115197700812830431890159100217698998050002284567939525164234024451216521560064))))
(assert (= (x27 (x465 274184521717934524641157099916833587225)) 274184521717934524641157099916833587225))
(assert (x1501 x3 x568))
(assert (x334 x538))
(assert (x334 x1065))
(assert (= x305 (x27 (x1586 x305))))
(assert (= x240 (x27 (x1586 x240))))
(assert (= (x1586 65536) (x465 65536)))
(assert (x334 x470))
(assert (= (x27 (x465 1558726628)) 1558726628))
(assert (=> (> (+ 10000 1) x730) (= (x465 x730) (x1586 x730))))
(assert (x334 x2041))
(assert (= (x27 (x1586 x1129)) x1129))
(assert (x1735 x630 x1910))
(assert (x334 x1128))
(assert (x334 x284))
(assert (x334 x143))
(assert (x334 x1787))
(assert (x334 x992))
(assert (=> (< (- x1393 1) 10000) (= (x1586 x1393) (x465 x1393))))
(assert (x334 x1172))
(assert (= (+ (x27 x1203) 1) (x27 (x32 x1203 1))))
(assert (x334 x849))
(assert (= (x286 x619) 0))
(assert (x334 x1290))
(assert (x334 x752))
(assert (x334 x75))
(assert (= (=> (and (= x615 x763) (= x1779 x1264) (not x889) (>= x1886 0) (not (> 4 x1264)) (= (x1839 (- x205 x1194)) x1779) (= (x1325 x747) x1886) (= 274184521717934524641157099916833587209 x2133) (= x1969 (not x487)) (= (x1590 (+ x1194 4)) x2131) (>= x1188 0) (= 68 x1264) (not (< x37 826074471)) (= (ite x1969 1 0) x1477) (<= x1886 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x1240 x595) x1086) (= x1600 x1240) (= (x1590 (+ 36 x1194)) x1208) (= x201 (x824 1461501637330902918203684832716283019655932542975 x1791)) (= x93 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2004 (x1839 (- x1264 4))) (= x1680 (x2132 (x1586 274184521717934524641157099916833587229))) (= (x1590 (+ x1194 68)) x205) (= (x378 x1194) x333) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1188) (not (= x37 2514000705)) (= 274184521717934524641157099916833587229 x137) (< (+ x1600 x1188) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1347 x1056) (= x763 (x824 20282409603651670423947251286015 x477)) (= x333 x1477) (= x548 (x686 (x1586 274184521717934524641157099916833587209) (x465 1) 0)) (= (= x333 0) x487) (= x1600 x615) (not (= x37 826074471)) (= x2138 (x686 (x1586 x1347) (x465 1) 0)) (= x747 (x686 (x1586 274184521717934524641157099916833587209) (x465 1) 0)) (not x295) (= 274184521717934524641157099916833587209 x2010) (= x37 2835717307) (< 0 x333) (= x1347 x201) (= x2112 (x1839 (- x1886 x615))) (= x1188 (x1816 x2138)) (< 0 x1680) (= (> x615 x1886) x295) (= x889 (or (and (= true (<= x2004 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2004 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2004))) (= x595 x1188) (not (= 1889567281 x37)) (= x1897 274184521717934524641157099916833587229)) x1999) x1363))
(assert (= (x27 (x1586 x710)) x710))
(assert (x122 x437))
(assert (x1735 x141 x1224))
(assert (x334 x1666))
(assert (x334 x226))
(assert (x334 x2096))
(assert (x334 x384))
(assert (x1735 x29 x1116))
(assert (x1539 x1082))
(assert (x334 x1410))
(assert (x334 x619))
(assert (x334 x942))
(assert (x334 x881))
(assert (x334 x1687))
(assert (= (=> (and (= x15 x1461) (= x1360 (or x1461 (not x1692)))) x1360) x1014))
(assert (x334 x3))
(assert (= x1160 (and (not x1244) x1146)))
(assert (x334 x925))
(assert (x1501 x1445 x596))
(assert (=> (> (+ 10000 1) x857) (= (x1586 x857) (x465 x857))))
(assert (x1539 x796))
(assert (x334 x919))
(assert (x334 x1594))
(assert (x334 x473))
(assert (= x230 (=> (and (>= 340282366920938463463374607431768211455 x960) (< x1555 18446744073709551616) (= (x411 x1728) x729) (= x1129 (x824 1461501637330902918203684832716283019655932542975 x730)) (= x1179 (x32 x1203 1)) (>= x885 0) (= x1802 (x824 1461501637330902918203684832716283019655932542975 x1924)) (>= x1686 0) (= (x397 x1728) x1555) (= x1503 (x824 1461501637330902918203684832716283019655932542975 x1156)) (> 1461501637330902918203684832716283019655932542976 x885) (= x1203 (x686 (x465 0) (x465 10) 0)) (<= x729 18446744073709551615) (= (x1590 (+ x1306 64)) x1069) (= (x2106 x1203) x885) (= x1218 (x1590 (+ 64 x35))) (= x1035 4) (= x1503 x1204) (< x1731 340282366920938463463374607431768211456) (= (x1391 x1894) x1204) (= x704 (x1612 x1069)) (>= 1461501637330902918203684832716283019655932542975 x1204) (<= x1731 340282366920938463463374607431768211455) (= (x399 x236) x960) (= (x1345 x1028) x1924) (= (= 274184521717934524641157099916833587233 x1829) x822) (<= x254 1461501637330902918203684832716283019655932542975) (< x1686 18446744073709551616) (<= 0 x960) (= (x1590 (+ 384 x945)) x1306) (>= x1731 0) (>= x461 0) (= (x1646 x1728) x1686) (<= 0 x410) (< x410 18446744073709551616) (= x410 (x1269 x1179)) (= (x1590 (+ x2065 64)) x1938) (= x1731 (x1392 x614)) (>= x254 0) (= (x1590 (+ 64 x1665)) x2065) (>= 18446744073709551615 x410) (= x1572 0) (<= x1686 18446744073709551615) (> 340282366920938463463374607431768211456 x960) (<= 0 x1555) (= (x824 1461501637330902918203684832716283019655932542975 x704) x1829) (= x614 (x32 x1179 2)) (<= x461 255) (= x627 (x1590 (+ 288 x2142))) (>= x729 0) (< x461 256) (= x198 0) (= x1028 (x1590 (+ x2142 288))) (>= x1204 0) (= 0 x1858) (= x1777 (x1870 x1306)) (>= 1461501637330902918203684832716283019655932542975 x885) (> 18446744073709551616 x729) (= (x1590 (+ 64 x627)) x35) (= x254 (x440 x1179)) (= (x1884 x1203) x461) (= x1728 (x32 x1203 2)) (= (x824 255 x1777) x198) (= x236 (x686 (x1586 x1802) x142 0)) (= x1566 (x1590 (+ 512 x2142))) (= x142 (x686 (x1586 x1129) (x465 6) 0)) (< x254 1461501637330902918203684832716283019655932542976) (>= 18446744073709551615 x1555) (= (x1590 (+ 64 x1306)) x1665) (= x1156 (x1345 x627)) (= x1894 (x686 (x465 0) (x465 9) 0)) (= (x1590 (+ 64 x1218)) x495) (> 1461501637330902918203684832716283019655932542976 x1204)) (and (=> (not x822) x489) (=> (and (= (x803 224) x784) (> 1208925819614629174706176 x1202) (= x377 (x803 128)) (= (x1590 (+ 352 x1306)) x1132) (= x349 (x803 256)) (>= x414 0) (= x2031 (x1590 (+ x1306 320))) (not (> 4 x2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x186) (not (< x648 2362581449)) (= (x803 192) x194) (= x1603 (x686 (x1586 x2069) (x465 1) 0)) (not (= 4062139261 x648)) (= x2 x1035) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x188) (= x1551 (x369 x1603)) (= (x2132 (x1586 274184521717934524641157099916833587233)) x564) (= 160 x510) (= 4272920204 x648) (= x385 (x1590 (+ x1306 288))) (< x414 1208925819614629174706176) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x777) (<= x414 1208925819614629174706175) (= x1510 (x803 128)) (< 0 x564) (<= x1551 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1202 1208925819614629174706175) (= (x1590 (+ 384 x1306)) x232) (= 4 x2) (= x1098 1) (= (x803 160) x1466) (not (= x648 2362581449)) (= x1880 (x803 256)) x822 (= x1255 (x803 192)) (= (x803 160) x1848) (<= 0 x186) (not (= x648 3257672857)) (= x913 (x803 224)) (>= x188 0) (>= x1551 0) (<= 0 x1202)) x55)))))
(assert (x334 x571))
(assert (x334 x279))
(assert (x334 x1064))
(assert (x334 x2089))
(assert (x1539 x2007))
(assert (= x1311 (=> (and (= (x346 x1580) x1418) (= (= 274184521717934524641157099916833587233 x64) x1307) (= x1496 128) (= x64 (x824 1461501637330902918203684832716283019655932542975 x352))) (and (=> (not x1307) x1087) (=> (and (<= 0 x414) (> 1208925819614629174706176 x414) (= x1992 160) (<= 0 x1202) (not (< x2141 4)) x1307 (>= 1208925819614629174706175 x1202) (= (x686 (x1586 x274) (x465 1) 0) x434) (= x1718 4272920204) (= x847 (x1842 128)) (= x1197 (x1842 128)) (= (x1842 192) x1971) (>= 1208925819614629174706175 x414) (not (= 4062139261 x1718)) (<= 0 x186) (not (= x1718 2362581449)) (= x1051 (x1842 160)) (<= x186 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1842 160) x363) (= x2141 4) (= x2141 4) (= x1794 (x1842 192)) (= x588 (x1842 224)) (= 1 x1691) (not (= 3257672857 x1718)) (<= x188 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1773 (x1842 256)) (>= x741 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x741) (= (x2132 (x1586 274184521717934524641157099916833587233)) x856) (= (x1842 256) x256) (= (x1842 224) x270) (= (x369 x434) x741) (< 0 x856) (not (< x1718 2362581449)) (< x1202 1208925819614629174706176) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x2146) (<= 0 x188)) x213)))))
(assert (x1539 x1787))
(assert (x1192 x1254))
(assert (x334 x325))
(assert (x334 x1665))
(assert (x334 x1129))
(assert (x728 x135 x250))
(assert (x334 x141))
(assert (x334 x126))
(assert (= x2016 (and (not x99) x2110)))
(assert (x334 x2101))
(assert (x334 x1191))
(assert (= (or (and (not x84) x874) x626) x359))
(assert (x334 x26))
(assert (= (x1055 x1243) 0))
(assert (x334 x1382))
(assert (x334 x765))
(assert (= (or x315 (and x309 x1673)) x1339))
(assert (x334 x1230))
(assert (x334 x1253))
(assert (= (=> (and (not (= x1604 2000660004)) (= x1492 x1373) (not (> 1558726628 x1604)) (not (< x1604 1176186698)) (= x1492 (x346 x2135)) (>= 1461501637330902918203684832716283019655932542975 x865) (not (= 2055092157 x1604)) (< x2135 20282409603651670423947251286016) (not (= x1604 1736444767)) (< 0 x915) (= x1604 2059260625) (not (= 1752364190 x1604)) (<= 0 x2135) (= x2135 (x823 x1563)) (> 2059964113 x1604) (= x915 (x2132 (x1586 274184521717934524641157099916833587209))) (not (= x1604 1558726628)) (= x1563 (x686 (x1586 x865) (x465 5) 0)) (<= x2135 20282409603651670423947251286015) (not (> 1034154046 x1604))) (=> (and (< x2080 1034154046) (not (= 840395849 x2080)) (= x1427 (x686 (x1586 x437) (x465 5) 0)) (= x1709 x437) (<= x245 20282409603651670423947251286015) (not (> 806251499 x2080)) (= (x686 (x1586 x437) (x465 5) 0) x1143) (<= 0 x609) (<= x609 65535) (= (x482 x1427) x609) (> 20282409603651670423947251286016 x245) (> 65536 x609) (<= x437 1461501637330902918203684832716283019655932542975) (not (< x2080 614716962)) (= (x2132 (x1586 274184521717934524641157099916833587209)) x1195) (= x89 (or (and (> 0 x970) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x970))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x970))) (< 0 x1195) (not (= x2080 806251499)) (= x1433 (x346 x245)) (<= 0 x245) (= x402 0) (= x2080 950698303) (= x1373 x970) (= x245 (x823 x1143)) (= x1237 (or (and (< x1433 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1433))) (> x1433 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 2059964113 x2080) (not (= 830980174 x2080)) (not (= 826074471 x2080)) (or (and (= (x824 20282409603651670423947251286015 x226) x288) (>= x343 0) (= x1580 x226) (not (or (> x1433 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1433)) (< x1433 0)))) (not x1237) (< x343 18446744073709551616) (< (* x1227 x343) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x343 x1227) x791) (>= 18446744073709551615 x343) (not (> x288 10141204801825835211973625643007)) (= x226 x791) (= (x824 20282409603651670423947251286015 x1433) x1227)) (and (= (x824 20282409603651670423947251286015 x592) x1348) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x592) (and (= true (<= x592 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x592 0)))) (not (> x1077 10141204801825835211973625643007)) (= x415 (x346 x1632)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1433)) (>= x357 0) (= x228 (* x357 x1348)) (> 18446744073709551616 x357) (= x1580 x751) x1237 (= x228 x1632) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x415)) (= (x1839 (- 0 x1433)) x592) (< (* x357 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1077 (x824 20282409603651670423947251286015 x1632)) (= (x1839 (- 0 x415)) x751) (>= 18446744073709551615 x357)))) x1311)) x509))
(assert (x122 x857))
(assert (x334 x2079))
(assert (x334 x1786))
(assert (x334 x905))
(assert (x334 x1758))
(assert (x334 x1872))
(assert (x334 x330))
(assert (x334 x978))
(assert (x334 x186))
(assert (x334 x1047))
(assert (x334 x1878))
(assert (x334 x628))
(assert (x334 x616))
(assert (= (x465 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x1586 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= (x1586 18446744073709551616) (x465 18446744073709551616)))
(assert (x334 x205))
(assert (x1192 x1064))
(assert (= x1305 (and (not x2137) x68)))
(assert (x334 x249))
(assert (x334 x611))
(assert (x334 x830))
(assert (= (+ 2 (x27 x1425)) (x27 (x32 x1425 2))))
(assert (x334 x505))
(assert (x334 x868))
(assert (x334 x1966))
(assert (x334 x1558))
(assert (x334 x775))
(assert (x334 x547))
(assert (x334 x439))
(assert (x334 x1050))
(assert (x1501 x57 x2113))
(assert (x1501 x1230 x722))
(assert (x122 x620))
(assert (x1501 x975 x943))
(assert (x1735 x1538 x1458))
(assert (x334 x220))
(assert (x334 x2056))
(assert (x334 x2052))
(assert (x334 x1925))
(assert (=> (< (- x1065 1) 10000) (= (x465 x1065) (x1586 x1065))))
(assert (x334 x1260))
(assert (x1539 x52))
(assert (x1539 x1184))
(assert (x334 x1706))
(assert (x1539 x1827))
(assert (x334 x183))
(assert (x334 x1749))
(assert (x334 x1124))
(assert (x334 x1485))
(assert (x334 x1530))
(assert (x334 x996))
(assert (x122 x494))
(assert (x334 x1720))
(assert (= (x27 (x465 2835717307)) 2835717307))
(assert (x334 x1141))
(assert (x1539 x1608))
(assert (x334 x2028))
(assert (x334 x1297))
(assert (x334 x1184))
(assert (x1539 x1222))
(assert (x1539 x1632))
(assert (x728 x477 x804))
(assert (x334 x1531))
(assert (x334 x850))
(assert (x334 x2000))
(assert (x334 x865))
(assert (x1539 x641))
(assert (x334 x857))
(assert (= 0 (x412 x1789)))
(assert (x334 x370))
(assert (x334 x1538))
(assert (x122 x953))
(assert (x1539 x1071))
(assert (x334 x54))
(assert (x334 x335))
(assert (x334 x1066))
(assert (x334 x1418))
(assert (x334 x234))
(assert (x334 x630))
(assert (x1539 x1158))
(assert (x334 x1))
(assert (x334 x1864))
(assert (x334 x1202))
(assert (= (x1586 340282366920938463463374607431768211456) (x465 340282366920938463463374607431768211456)))
(assert (x334 x1166))
(assert (x334 x1021))
(assert (x334 x1127))
(assert (= x812 (x27 (x1586 x812))))
(assert (x334 x1691))
(assert (= true x1236))
(assert (x334 x1510))
(assert (x334 x1435))
(assert (x334 x2133))
(assert (= (x27 (x32 x347 2)) (+ (x27 x347) 2)))
(assert (x334 x1287))
(assert (x334 x657))
(assert (= x1647 (and x715 x1043)))
(assert (= (x465 4272920204) (x1586 4272920204)))
(assert (x334 x1428))
(assert (x122 x2069))
(assert (x334 x1517))
(assert (x334 x1264))
(assert (x334 x1751))
(assert (x1539 x1150))
(assert (x334 x88))
(assert (= x1248 true))
(assert (x122 x1683))
(assert (x334 x1089))
(assert (x334 x1350))
(assert (x334 x139))
(assert (x334 x386))
(assert (x334 x1250))
(assert (= x793 (=> (and (= x1324 (ite x661 1 0)) (= x661 (not x534)) (= (= 0 x1109) x534)) (=> (= x15 (not (= 0 x1324))) x1014))))
(assert (x334 x1950))
(assert (= (x1854 160) x1571))
(assert (x334 x861))
(assert (x1539 x496))
(assert (x334 x191))
(assert (x1539 x1064))
(assert (x334 x1746))
(assert (x334 x913))
(assert (x334 x1954))
(assert (= (x27 (x465 1176186698)) 1176186698))
(assert (x334 x1656))
(assert (x334 x1406))
(assert (= (x27 (x32 x738 1)) (+ 1 (x27 x738))))
(assert (= (x27 (x465 4062139261)) 4062139261))
(assert (= (x465 274184521717934524641157099916833587242) (x1586 274184521717934524641157099916833587242)))
(assert (= (=> (and (= x1005 (x1590 (+ x1915 512))) (>= x470 0) (<= 0 x2022) (= (x686 (x1586 x778) (x465 6) 0) x808) (= x630 (x1139 x1558)) (= x51 (x1392 x2086)) (>= x1406 0) (= (x1391 x1766) x1406) (= (x824 1461501637330902918203684832716283019655932542975 x998) x2134) (< x876 18446744073709551616) (<= x1289 340282366920938463463374607431768211455) (= x2074 (x1590 (+ x1361 64))) (<= x533 255) (= (x2106 x10) x1047) (< x1289 340282366920938463463374607431768211456) (= (x411 x761) x450) (= x876 (x1269 x1425)) (= (x1590 (+ x1213 64)) x42) (= (x440 x1425) x1410) (= (x1331 x117) x998) (<= x1410 1461501637330902918203684832716283019655932542975) (<= 0 x876) (<= 0 x51) (= (x1590 (+ 64 x1475)) x1450) (= (x246 x677) x56) (>= 18446744073709551615 x2022) (= x814 0) (>= 18446744073709551615 x470) (> 256 x533) (<= 0 x533) (= (x1590 (+ 64 x1067)) x1475) (= x1558 (x1590 (+ x677 64))) (< x450 18446744073709551616) (< x1047 1461501637330902918203684832716283019655932542976) (= x1361 (x1590 (+ x42 64))) (> 18446744073709551616 x470) (= x144 (x824 1461501637330902918203684832716283019655932542975 x141)) (<= 0 x450) (= (x1590 (+ 288 x1915)) x117) (= (x824 255 x56) x814) (= x1406 x144) (< x1406 1461501637330902918203684832716283019655932542976) (= x533 (x1884 x10)) (= x2137 (= 274184521717934524641157099916833587233 x1159)) (<= x876 18446744073709551615) (<= 0 x1047) (= x1159 (x824 1461501637330902918203684832716283019655932542975 x630)) (>= 340282366920938463463374607431768211455 x51) (<= 0 x1289) (= (x397 x761) x2022) (>= 1461501637330902918203684832716283019655932542975 x1406) (>= 1461501637330902918203684832716283019655932542975 x1047) (= (x1331 x1213) x141) (= x761 (x32 x10 2)) (= x682 (x686 (x1586 x2134) x808 0)) (>= 18446744073709551615 x450) (= x1766 (x686 (x465 0) (x465 9) 0)) (> 340282366920938463463374607431768211456 x51) (= (x686 (x465 0) (x465 10) 0) x10) (= x1213 (x1590 (+ 288 x1915))) (<= 0 x1410) (= x1425 (x32 x10 1)) (= 0 x2088) (= (x1590 (+ x1484 544)) x677) (= (x32 x1425 2) x2086) (= (x1784 x682) x1289) (= 4 x1103) (< x2022 18446744073709551616) (= x132 0) (> 1461501637330902918203684832716283019655932542976 x1410) (= (x1590 (+ 64 x677)) x1067) (= x778 (x824 1461501637330902918203684832716283019655932542975 x1932)) (= (x1646 x761) x470)) (and (=> (not x2137) x1211) (=> (and (= x967 (x497 128)) (<= x1374 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2137 (= (x497 192) x1891) (= x1706 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x1957 (x497 256)) (< 0 x401) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x186) (= (x369 x451) x1374) (= 1 x1896) (= (x1590 (+ x677 288)) x1464) (>= 1208925819614629174706175 x1202) (not (= 4062139261 x1595)) (= (x497 256) x1936) (= x474 x1103) (not (< x1595 2362581449)) (= (x497 224) x765) (= (x497 160) x1832) (>= x1202 0) (= (x497 128) x1130) (= (x1590 (+ 352 x677)) x919) (not (< x474 4)) (<= 0 x186) (= x474 4) (= (x497 224) x1455) (>= x188 0) (< x414 1208925819614629174706176) (= (x1590 (+ x677 320)) x75) (= 4272920204 x1595) (<= x188 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1595 3257672857)) (= (x686 (x1586 x1929) (x465 1) 0) x451) (>= x414 0) (= x1379 (x497 160)) (>= x1374 0) (= x401 (x2132 (x1586 274184521717934524641157099916833587233))) (<= x414 1208925819614629174706175) (not (= x1595 2362581449)) (= x987 (x1590 (+ x677 384))) (< x1202 1208925819614629174706176) (= (x497 192) x1144) (= 160 x740)) x471))) x1958))
(assert (x334 x333))
(assert (x1539 x102))
(assert (x334 x1478))
(assert (= (x1586 170141183460469231731687303715884105727) (x465 170141183460469231731687303715884105727)))
(assert (x1539 x1630))
(assert (= x287 x1353))
(assert (= x535 (or (and x2137 x68) (and x1268 x1305))))
(assert (x122 x865))
(assert (x334 x743))
(assert (x1539 x1283))
(assert (x334 x1901))
(assert (x334 x304))
(assert (x334 x1201))
(assert (x334 x475))
(assert (x334 x658))
(assert (x334 x5))
(assert (= (and x874 x84) x749))
(assert (x334 x1042))
(assert (x334 x1846))
(assert (x702 x2148 x989))
(assert (x334 x195))
(assert (x1539 x837))
(assert (x334 x1807))
(assert (= x621 (=> (and (= (> x632 1) x388) (not x388) (= x1656 x1127) (= x632 (x824 255 x653))) x457)))
(assert (= (x27 (x465 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (x1735 x1156 x1834))
(assert (x334 x1421))
(assert (= (=> (= x1003 (= x413 274184521717934524641157099916833587231)) (and (=> (not x1003) x928) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1459) (<= 0 x667) (= (x1721 160) x573) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1715) (= (x1721 224) x1725) (>= x1715 0) (= 160 x325) (= x2114 (x1721 128)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1042) (not (= x1106 4062139261)) x1003 (not (< x1106 2362581449)) (= x1459 (x549 x501)) (= (x1721 128) x36) (= 4 x2028) (= (x1721 256) x543) (= x1097 (x1721 192)) (= x1869 (x2132 (x1586 274184521717934524641157099916833587231))) (= (x686 (x1586 x1929) (x465 1) 0) x501) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1299) (not (= x1106 2362581449)) (= x2098 (x1721 224)) (= x927 1) (< 0 x1869) (= x860 (x1721 256)) (>= 1208925819614629174706175 x361) (not (> 4 x2028)) (>= x1459 0) (<= x667 1208925819614629174706175) (= 4272920204 x1106) (> 1208925819614629174706176 x667) (< x361 1208925819614629174706176) (<= 0 x1042) (not (= 3257672857 x1106)) (= (x1721 192) x1783) (<= 0 x361) (= x368 (x1721 160)) (= x2028 4)) x1135))) x922))
(assert (x334 x969))
(assert (= (x27 (x1586 x887)) x887))
(assert (x1539 x290))
(assert (x334 x1261))
(assert (x1539 x939))
(assert (x334 x1188))
(assert (x334 x2095))
(assert (x334 x493))
(assert (=> (> (+ 10000 1) x1205) (= (x465 x1205) (x1586 x1205))))
(assert (= 0 (x760 x1749)))
(assert (x334 x98))
(assert (x334 x1893))
(assert (x334 x255))
(assert (x334 x934))
(assert (x334 x436))
(assert (x334 x1897))
(assert (x334 x1300))
(assert (x334 x1532))
(assert (x334 x1474))
(assert (x334 x522))
(assert (= (=> (and (= x1194 x1350) (> x284 0)) x1363) x443))
(assert (= (x1586 340282366920938463463374607431768211455) (x465 340282366920938463463374607431768211455)))
(assert (x1539 x750))
(assert (x334 x1913))
(assert (x334 x1359))
(assert (x702 x1071 x112))
(assert (x334 x1867))
(assert (= (x465 1034154046) (x1586 1034154046)))
(assert (x334 x1387))
(assert (x334 x229))
(assert (x542 x1397 x1210))
(assert (x334 x343))
(assert (x145 x1421 x991 x1326 x1518))
(assert (x334 x1464))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x27 (x465 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x1539 x57))
(assert (x334 x1221))
(assert (x334 x438))
(assert (x334 x1229))
(assert (= (=> (= (or (and (> 0 x1214) (= true (<= x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1214)) x1036) (and (=> x1036 x1502) (=> (and (not x1036) (= x1251 1)) x1529))) x1534))
(assert (x334 x372))
(assert (x1539 x65))
(assert (x334 x367))
(assert (x334 x1035))
(assert (x334 x157))
(assert (x334 x1463))
(assert (x334 x31))
(assert (x334 x1606))
(assert (=> (> (+ 10000 1) x360) (= (x1586 x360) (x465 x360))))
(assert (x334 x602))
(assert (x334 x1644))
(assert (x728 x1622 x1465))
(assert (x334 x1600))
(assert (= (or x1650 (and (not x242) x957)) x966))
(assert (x334 x1006))
(assert (x334 x1973))
(assert (x122 x360))
(assert (= x437 (x27 (x1586 x437))))
(assert (x1539 x1166))
(assert (x334 x2044))
(assert (= (+ (x27 x625) 2) (x27 (x32 x625 2))))
(assert (x334 x1752))
(assert (x1735 x1827 x1855))
(assert (x334 x1783))
(assert (x1501 x204 x66))
(assert (x122 x1393))
(assert (x334 x243))
(assert (x334 x1824))
(assert (= x2130 (=> (and (= 128 x551) (= x1283 (x346 x926)) (= x413 (x824 1461501637330902918203684832716283019655932542975 x352)) (= (= x413 274184521717934524641157099916833587233) x1447)) (and (=> (and (not (< x1687 2362581449)) (= (x431 128) x1016) (= x1966 (x431 160)) (not (= 3257672857 x1687)) (= x835 (x431 256)) (not (= x1687 2362581449)) (> 1208925819614629174706176 x1202) (= 1 x927) (= x1654 115197700812830431890159100217698998050002284567939525164234024451216521560064) (<= x414 1208925819614629174706175) (<= x581 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x431 192) x1737) (not (= 4062139261 x1687)) x1447 (<= 0 x186) (= (x686 (x1586 x1929) (x465 1) 0) x515) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x186) (= x1797 4) (= (x431 256) x1664) (= x581 (x369 x515)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x188) (>= x1202 0) (= x325 160) (= x516 (x431 192)) (< 0 x1543) (= x1797 4) (<= 0 x581) (= 4272920204 x1687) (= x1543 (x2132 (x1586 274184521717934524641157099916833587233))) (= x2119 (x431 224)) (< x414 1208925819614629174706176) (= x829 (x431 224)) (<= x1202 1208925819614629174706175) (= x1533 (x431 160)) (>= x414 0) (>= x188 0) (= (x431 128) x884) (not (> 4 x1797))) x1135) (=> (not x1447) x922)))))
(assert (= (+ (x27 x1179) 2) (x27 (x32 x1179 2))))
(assert (x334 x1635))
(assert (x334 x757))
(assert (x334 x1069))
(assert (x334 x63))
(assert (x334 x543))
(assert (= (x465 1208925819614629174706176) (x1586 1208925819614629174706176)))
(assert (x248 x445 x717))
(assert (x334 x701))
(assert (x542 x1710 x350))
(assert (x334 x879))
(assert (x334 x1416))
(assert (= x2032 x951))
(assert (x334 x730))
(assert (x122 274184521717934524641157099916833587225))
(assert (x334 x1682))
(assert (x334 x318))
(assert (x334 x946))
(assert (x334 x880))
(assert (x334 x1204))
(assert (x122 x1929))
(assert (= true x928))
(assert (x334 x492))
(assert (x334 x1917))
(assert (x1539 x437))
(assert (x334 x1671))
(assert (x334 x2004))
(assert (x728 x1158 x2060))
(assert (x334 x29))
(assert (= (x178 x301) (ite (= x301 x291) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x266 x301))))
(assert (=> (> (+ 10000 1) x616) (= (x465 x616) (x1586 x616))))
(assert (x334 x2076))
(assert (= 1736444767 (x27 (x465 1736444767))))
(assert (x334 x1940))
(assert (x1501 x65 x776))
(assert (x1539 x1739))
(assert (= (x1586 4062139261) (x465 4062139261)))
(assert (= x1723 x1722))
(assert (x334 x712))
(assert (x334 x779))
(assert (x334 x1227))
(assert (x334 x965))
(assert (x334 x357))
(assert (x334 x828))
(assert (x334 x885))
(assert (x334 x1038))
(assert (x1539 x183))
(assert (x334 x30))
(assert (= 1034154046 (x27 (x465 1034154046))))
(assert (x334 x1920))
(assert (x334 x1733))
(assert (= (=> (and (= x1736 (= x200 0)) (= (x686 (x1586 x1653) x817 0) x1249) (= (x1507 x1249) x200) (>= x1653 0) (>= 1461501637330902918203684832716283019655932542975 x1653) (< x200 256) (< x1653 1461501637330902918203684832716283019655932542976) (= x1881 0) (= x817 (x686 (x1586 x353) (x465 11) 0)) (= (x1391 x344) x1653) (<= 0 x200) (= (x686 (x465 0) (x465 9) 0) x344) (<= x200 255)) (and (=> (not x1736) x269) (=> (and x1736 (= x337 x1114) (= x752 x1915)) x196))) x1499))
(assert (x334 x2046))
(assert (x334 x405))
(assert (= x1308 (and x1036 x181)))
(assert (= (x27 (x1586 x274)) x274))
(assert (x334 x1001))
(assert (x334 x1368))
(assert (x334 x1957))
(assert (= (x27 (x465 10141204801825835211973625643007)) 10141204801825835211973625643007))
(assert (x334 x799))
(assert (x334 x1716))
(assert (x1539 x208))
(assert (x334 x1986))
(assert (x334 x111))
(assert (= (x27 (x465 3257672857)) 3257672857))
(assert (x334 x1929))
(assert (= (x465 1461501637330902918203684832716283019655932542976) (x1586 1461501637330902918203684832716283019655932542976)))
(assert (x1539 340282366920938463463374607431768211455))
(assert (x1539 x275))
(assert (x334 x381))
(assert (x1539 x703))
(assert (= x407 (x27 (x1586 x407))))
(assert (x1192 x245))
(assert (x334 x1118))
(assert (=> (> (+ 10000 1) x1129) (= (x1586 x1129) (x465 x1129))))
(assert (x334 x1292))
(assert (x334 x1503))
(assert (x334 x944))
(assert (= x466 (and (not x949) x952)))
(assert (x334 x453))
(assert (x334 x365))
(assert (x334 x1626))
(assert (= x237 (=> (and (= x1006 x1602) (= (or (> x1872 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x1872) (= true (<= x1872 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1426) (= (ite x2026 1 0) x1696) (= x2026 (not x1426))) x1045)))
(assert (x1539 x1163))
(assert (x334 x2008))
(assert (x334 x363))
(assert (x334 x218))
(assert (x1192 x926))
(assert (x334 x713))
(assert (x1501 x2044 x666))
(assert (x334 x854))
(assert (x334 x1267))
(assert (x1192 x1445))
(assert (x334 x1995))
(assert (x334 x56))
(assert (x334 x960))
(assert (x334 x1714))
(assert (= x1062 (=> (and (= x1141 (x1590 (+ x1025 64))) (= x1113 (x1391 x210)) (= x1885 (x1541 x664)) (= x902 (x824 1461501637330902918203684832716283019655932542975 x703)) (= 0 x82) (>= x1764 0) (>= 18446744073709551615 x24) (= (x411 x853) x380) (<= x1113 1461501637330902918203684832716283019655932542975) (= (x440 x347) x605) (= (x1590 (+ x278 288)) x1128) (= x210 (x686 (x465 0) (x465 9) 0)) (<= 0 x375) (< x24 18446744073709551616) (<= 0 x380) (= (x1590 (+ 384 x1070)) x611) (>= 1461501637330902918203684832716283019655932542975 x605) (<= x602 340282366920938463463374607431768211455) (> 1461501637330902918203684832716283019655932542976 x1113) (= x637 (x1884 x625)) (>= x602 0) (<= 0 x1885) (> 18446744073709551616 x380) (= (x686 (x1586 x1381) (x465 6) 0) x4) (= 0 x69) (= (x1482 x611) x102) (= x546 (x1590 (+ x278 512))) (= x1457 (x32 x347 2)) (= 4 x1050) (= x1666 x1113) (>= x24 0) (> 18446744073709551616 x375) (= x1626 0) (>= 255 x637) (= (= x902 274184521717934524641157099916833587233) x429) (> 1461501637330902918203684832716283019655932542976 x605) (<= x1885 340282366920938463463374607431768211455) (= x1025 (x1590 (+ x1128 64))) (= x664 (x686 (x1586 x1442) x4 0)) (= x1381 (x824 1461501637330902918203684832716283019655932542975 x1932)) (= (x824 1461501637330902918203684832716283019655932542975 x208) x1666) (= x602 (x1392 x1457)) (= x347 (x32 x625 1)) (= x853 (x32 x625 2)) (= x2129 (x1590 (+ x2008 64))) (> 340282366920938463463374607431768211456 x1885) (>= x605 0) (= x208 (x2001 x1128)) (> 18446744073709551616 x1991) (= x24 (x1646 x853)) (= (x1590 (+ 64 x2129)) x1955) (= x1442 (x824 1461501637330902918203684832716283019655932542975 x1827)) (> 256 x637) (= (x1590 (+ 64 x1141)) x1074) (= x625 (x686 (x465 0) (x465 10) 0)) (= (x2001 x26) x1827) (>= 18446744073709551615 x375) (<= 0 x1113) (= x1764 (x2106 x625)) (> 340282366920938463463374607431768211456 x602) (<= x1764 1461501637330902918203684832716283019655932542975) (= (x1590 (+ x611 64)) x2008) (> 1461501637330902918203684832716283019655932542976 x1764) (= (x1590 (+ 288 x278)) x26) (<= x380 18446744073709551615) (= (x1269 x347) x1991) (= x703 (x1076 x1732)) (<= 0 x637) (= (x824 255 x102) x82) (>= 18446744073709551615 x1991) (= x1732 (x1590 (+ 64 x611))) (>= x1991 0) (= (x397 x853) x375)) (and (=> (not x429) x147) (=> (and (= (x1058 192) x386) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x139) (<= x414 1208925819614629174706175) (= x912 (x1590 (+ 384 x611))) (= x985 (x1590 (+ x611 320))) (not (> 2362581449 x2079)) (= (x1058 224) x1413) (> x2097 0) (> 1208925819614629174706176 x414) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x188) (= (x1058 128) x1292) (= x143 (x1058 160)) (= x479 (x1590 (+ 352 x611))) (= (x1058 224) x1882) (<= 0 x1202) (= x1050 x544) (< x1202 1208925819614629174706176) (>= x188 0) (>= 1208925819614629174706175 x1202) (= x158 (x1058 192)) (<= 0 x414) (= x855 (x1590 (+ 288 x611))) (= x566 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x2079 4272920204) (>= x186 0) (= 160 x1562) (= (x369 x2152) x139) (= x202 1) (not (= x2079 3257672857)) (= (x1058 256) x1142) (= (x1058 256) x1278) (<= x186 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 4 x544)) (= (x1058 128) x1589) (= (x686 (x1586 x1929) (x465 1) 0) x2152) (= x2097 (x2132 (x1586 274184521717934524641157099916833587233))) (not (= x2079 2362581449)) (>= x139 0) (= x759 (x1058 160)) (= 4 x544) x429 (not (= x2079 4062139261))) x448)))))
(assert (= x213 (=> (and (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1992) (and (> 160 x1992) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1992))))) (not (ite x1811 x1811 (and (> x1787 170141183460469231731687303715884105727) (= (<= x1787 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x707 (x824 255 x653)) (= (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1120) x19) (= x1120 (x1590 (+ x1992 31))) (= (x266 256) x799) (= (x1590 (+ x19 128)) x319) (not (= x1691 0)) (>= 1208925819614629174706175 x799) (= (uninterp_mod (* (x1788 x1418) x988) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1214) (= x832 (and (> x1787 0) (= true (<= x1787 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x266 160) x1787) (= (> x707 0) x1487) (= (not x832) x1811) (>= 1208925819614629174706175 x1806) (= x331 0) (= (x824 340282366920938463463374607431768211455 x1787) x988) (= x1806 (x266 128))) (and (=> (and (not x1487) (= x1127 x1214)) x457) (=> x1487 x1772)))))
(assert (x334 x1234))
(assert (= x893 (or x966 (and x1317 (not x1948)))))
(assert (x334 x2042))
(assert (x334 x1825))
(assert (x334 x1727))
(assert (x334 x2069))
(assert (x334 x1052))
(assert (x334 x1992))
(assert (x334 x2039))
(assert (= x68 (and x957 x242)))
(assert (x334 x558))
(assert (= x2006 (and (not x1268) x1305)))
(assert (= (=> (= x162 (= 274184521717934524641157099916833587231 x2039)) (and (=> (not x162) x1131) (=> (and (= x794 (x1638 192)) (not (< x2073 2362581449)) (<= x1042 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2362581449 x2073)) (<= 0 x1953) (> 1208925819614629174706176 x667) (<= x1715 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x667 0) x162 (= x136 1) (= x532 (x1638 256)) (not (= x2073 4062139261)) (< x361 1208925819614629174706176) (= x1089 160) (= x311 (x1638 128)) (not (> 4 x1420)) (<= 0 x1042) (= x1420 4) (= (x1638 128) x971) (= x234 (x1638 160)) (>= x1715 0) (= (x686 (x1586 x1929) (x465 1) 0) x2099) (= (x1638 192) x1494) (<= 0 x361) (> x2075 0) (= x713 (x1638 224)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x557) (= 4272920204 x2073) (>= 1208925819614629174706175 x667) (= (x549 x2099) x1953) (= (x1638 256) x422) (= 4 x1420) (<= x361 1208925819614629174706175) (not (= 3257672857 x2073)) (= (x2132 (x1586 274184521717934524641157099916833587231)) x2075) (= (x1638 224) x1094) (= x925 (x1638 160)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1953)) x2127))) x73))
(assert (x1539 x894))
(assert (x334 x1422))
(assert (= (x465 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1586 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x334 x1104))
(assert (= (x27 (x1586 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (= (=> (= x562 (= x902 274184521717934524641157099916833587231)) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1715) (= x1338 (x1590 (+ x611 352))) (= (x665 224) x1441) (= 4272920204 x1157) (<= x1042 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x807) (= x914 (x686 (x1586 x1929) (x465 1) 0)) (not (< x1157 2362581449)) (<= 0 x361) (not (= x1157 3257672857)) (= x1995 4) (= (x2132 (x1586 274184521717934524641157099916833587231)) x285) (not (< x1995 4)) (= x1050 x1995) (= 1 x202) (= (x665 160) x1436) (= (x1590 (+ 384 x611)) x1352) x562 (= (x1590 (+ 320 x611)) x965) (> 1208925819614629174706176 x361) (= (x665 256) x348) (<= 0 x1042) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x152) (>= x667 0) (>= 1208925819614629174706175 x361) (<= 0 x1715) (<= x807 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x807 (x549 x914)) (= 160 x1562) (not (= x1157 2362581449)) (= x1636 (x665 128)) (= (x665 192) x1167) (< 0 x285) (= (x1590 (+ 288 x611)) x2125) (>= 1208925819614629174706175 x667) (= x1258 (x665 224)) (= (x665 256) x583) (= (x665 128) x1173) (not (= x1157 4062139261)) (= (x665 192) x1977) (> 1208925819614629174706176 x667) (= x1231 (x665 160))) x448) (=> (not x562) x1322))) x147))
(assert (x334 x995))
(assert (x334 x1340))
(assert (x334 x1159))
(assert (x334 x1059))
(assert (x334 x2119))
(assert (=> (> (+ 10000 1) x494) (= (x1586 x494) (x465 x494))))
(assert (x1539 x128))
(assert (x334 x2112))
(assert (= x448 (=> (and (= (x1590 (+ x314 x546)) x184) (= (x1511 x1415) x693) (= x2037 (x824 x290 x750)) (= x1716 (x1590 (+ x546 64))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1639 x944)) (= 0 x2037) (= x1765 (x1590 (+ x1732 64))) (= x184 x2046) (<= x31 1208925819614629174706175) (= (or (and (< x263 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263))) (> x263 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1328) (not (ite x720 x720 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6)) (> x6 170141183460469231731687303715884105727)))) (= (* x1639 x944) x1136) (= x1414 (x1590 (+ 288 x611))) (= (x1839 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263)) x1893) (= (x1839 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x263)) x1344) (= x452 (x1590 (+ 31 x1562))) (= 0 x292) (= x314 (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x452)) (= (x1660 x726) x1933) (= x1873 (x824 340282366920938463463374607431768211455 x6)) (= (x824 18446744073709551615 x1382) x1639) (= x1415 (x1590 (+ x26 64))) (= x750 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1344) (> x754 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x754 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1344)) (> x1344 x754))) 1 0)) (= x756 (ite (not x1328) 1 0)) (= x754 x1136) (= (x1660 x1414) x6) (= (x1590 (+ x263 x754)) x1641) (not (or (and (> 160 x1562) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1562) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1562))) (= x2109 (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1893) (<= x754 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1893 x754) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1893) (<= x754 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= (ite (or (> x263 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263) true) (< x263 0))) 1 0) x290) (= x944 (uninterp_mod (* x1885 x1873) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= x202 0)) (= (not x418) x720) (= x1382 (x810 x1765)) (not (> x754 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x418 (and (< 0 x6) (= (<= x6 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= x292 (x824 x756 x2109)) (<= x1933 1208925819614629174706175) (= x1641 x708) (= (x1590 (+ 64 x1716)) x726) (= x31 (x1660 x546))) x219)))
(assert (x334 x292))
(assert (x334 x1200))
(assert (= (x27 (x465 274184521717934524641157099916833587229)) 274184521717934524641157099916833587229))
(assert (x728 x1787 x1013))
(assert (x122 274184521717934524641157099916833587242))
(assert (x334 x134))
(assert (= x1034 (or (and (not x1036) x181) x85)))
(assert (x1501 x1608 x109))
(assert (x1501 x1911 x878))
(assert (x334 x393))
(assert (= (ite (and x1447 x383) (x1412 x1414) (x1734 x1414)) (x100 x1414)))
(assert (x334 x1853))
(assert (x334 x767))
(assert (x122 274184521717934524641157099916833587229))
(assert (x334 x629))
(assert (x334 x1187))
(assert (= (x178 x1243) (ite (= x1243 x291) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x266 x1243))))
(assert (x334 x794))
(assert (x334 x1569))
(assert (x334 x1243))
(assert (=> (> (+ 10000 1) x1347) (= (x1586 x1347) (x465 x1347))))
(assert (= (x27 (x465 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (=> (< (- x887 1) 10000) (= (x465 x887) (x1586 x887))))
(assert (x1539 x445))
(assert (x334 x2077))
(assert (x334 x6))
(assert (x334 x433))
(assert (= (and (not x374) x523) x181))
(assert (x334 x1362))
(assert (x334 x2122))
(assert (x334 x2108))
(assert (x334 x1196))
(assert (x334 x1765))
(assert (= (x100 160) (ite (and x1447 x383) (x1412 160) (x1734 160))))
(assert (x334 x638))
(assert (x334 x1068))
(assert (x334 x1436))
(assert (=> (< (- x514 1) 10000) (= (x465 x514) (x1586 x514))))
(assert (x1539 x646))
(assert (= (+ (x27 x10) 1) (x27 (x32 x10 1))))
(assert (x1501 x1460 x92))
(assert (x334 x1525))
(assert (x334 x1908))
(assert (x1501 x1029 x455))
(assert (= (x27 (x465 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (= 0 (x1178 x1372)))
(assert (x334 x1863))
(assert (x334 x1109))
(assert (x145 x1399 x2072 x1944 x1767))
(assert (x334 x932))
(assert (x1539 20282409603651670423947251286015))
(assert (x334 x856))
(assert (= x1332 (x27 (x1586 x1332))))
(assert (= x723 (and (not x562) x1263)))
(assert (x334 x1699))
(assert (x334 x1044))
(assert (x334 x1963))
(assert (x334 x1592))
(assert (x334 x1887))
(assert (x122 x609))
(assert (x334 x740))
(assert (x334 x974))
(assert (x334 x1156))
(assert (x334 x1165))
(assert (=> (> (+ 10000 1) x865) (= (x465 x865) (x1586 x865))))
(assert (x334 x2027))
(assert (x1501 x1064 x1535))
(assert (x1501 x764 x39))
(assert (= (x1586 274184521717934524641157099916833587221) (x465 274184521717934524641157099916833587221)))
(assert (x334 x423))
(assert (x1539 x195))
(assert (x334 x764))
(assert (x334 x1620))
(assert (x334 x1445))
(assert (x334 x1955))
(assert (x702 x1222 x2053))
(assert (= 18446744073709551616 (x27 (x465 18446744073709551616))))
(assert (= (x465 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x1586 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x1501 x1580 x421))
(assert (x334 x1632))
(assert (x1703 x56 x1810))
(assert (x334 x911))
(assert (= (x27 (x1586 x1393)) x1393))
(assert (x334 x1589))
(assert (x334 x1092))
(assert (x122 x2134))
(assert (x334 x375))
(assert (= (x100 128) (ite (and x383 x1447) (x1412 128) (x1734 128))))
(assert (x1735 x352 x396))
(assert (x334 x1571))
(assert (x1539 x745))
(assert (x334 x1020))
(assert (x334 x117))
(assert (= (x27 (x1586 x2101)) x2101))
(assert (x122 x1817))
(assert (x334 x1677))
(assert (= (or x1177 (and x924 x749)) x626))
(assert (x334 x136))
(assert (x334 x1967))
(assert (x1192 x911))
(assert (x1501 x1166 x1778))
(assert (x334 x1061))
(assert (= x1476 (=> (and (= x924 (= 0 x1234)) (>= x96 0) (= (x686 (x1586 x407) (x465 11) 0) x2123) (>= 255 x1234) (<= x96 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x96) (= (x1507 x390) x1234) (= x12 (x686 (x465 0) (x465 9) 0)) (= x96 (x1391 x12)) (> 256 x1234) (= x2055 0) (= (x686 (x1586 x96) x2123 0) x390) (<= 0 x1234)) (and (=> (and x924 (= x278 x2046) (= x263 x708)) x219) (=> (not x924) x1388)))))
(assert (x334 x986))
(assert (x334 x1016))
(assert (x334 x677))
(assert (x122 x1205))
(assert (= (x634 x1415) 0))
(assert (x334 x1379))
(assert (=> (> (+ 10000 1) x935) (= (x465 x935) (x1586 x935))))
(assert (x334 x1621))
(assert (x334 x818))
(assert (x334 x102))
(assert (x334 x1533))
(assert (= (ite (and x383 x1447) (x1412 256) (x1734 256)) (x100 256)))
(assert (x334 x2058))
(assert (x334 x1288))
(assert (= (=> (= x99 (= x64 274184521717934524641157099916833587231)) (and (=> (not x99) x1245) (=> (and x99 (= x1674 (x686 (x1586 x274) (x465 1) 0)) (not (= 2362581449 x167)) (not (= x167 3257672857)) (= (x2132 (x1586 274184521717934524641157099916833587231)) x1878) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x990) (<= 0 x667) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1715) (= (x1537 192) x283) (= x638 (x1537 128)) (<= 0 x1042) (= x1239 (x549 x1674)) (> x1878 0) (= 160 x1992) (not (> 4 x1172)) (<= x1239 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1715 0) (= (x1537 224) x1187) (= (x1537 192) x571) (= (x1537 128) x203) (not (< x167 2362581449)) (<= x1042 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1183 (x1537 224)) (= x1720 (x1537 256)) (= x1172 4) (= 4 x1172) (>= 1208925819614629174706175 x361) (>= x361 0) (= x167 4272920204) (= x589 (x1537 256)) (>= x1239 0) (= (x1537 160) x1107) (> 1208925819614629174706176 x667) (= x1376 (x1537 160)) (not (= 4062139261 x167)) (>= 1208925819614629174706175 x667) (= 1 x1691) (< x361 1208925819614629174706176)) x213))) x1087))
(assert (x334 x620))
(assert (= 1752364190 (x27 (x465 1752364190))))
(assert (x334 x1283))
(assert (x122 x1973))
(assert (x334 x37))
(assert (x334 x496))
(assert (x334 x933))
(assert (= (x27 (x1586 274184521717934524641157099916833587225)) 274184521717934524641157099916833587225))
(assert (= (=> (= (= 274184521717934524641157099916833587231 x1829) x520) (and (=> (and (>= 1208925819614629174706175 x667) (>= x955 0) x520 (<= 0 x361) (= x2108 (x2071 128)) (>= 1208925819614629174706175 x361) (= x1757 (x2132 (x1586 274184521717934524641157099916833587231))) (= x1032 (x1590 (+ x1306 352))) (> x1757 0) (<= 0 x1042) (= 4 x1838) (= x459 (x2071 128)) (<= x1042 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x667 0) (= (x549 x1850) x955) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x304) (= (x2071 224) x1165) (= 160 x510) (not (= x1472 2362581449)) (not (> 2362581449 x1472)) (not (= 4062139261 x1472)) (<= 0 x1715) (= x783 (x2071 192)) (<= x955 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1590 (+ x1306 384)) x405) (= (x2071 160) x844) (= (x2071 256) x854) (> 1208925819614629174706176 x667) (= (x2071 256) x603) (= (x2071 224) x1652) (= 4272920204 x1472) (= x1850 (x686 (x1586 x2069) (x465 1) 0)) (= x169 (x2071 160)) (<= x1715 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 3257672857 x1472)) (= x1887 (x1590 (+ 288 x1306))) (not (< x1838 4)) (= 1 x1098) (> 1208925819614629174706176 x361) (= (x1590 (+ 320 x1306)) x340) (= (x2071 192) x1610) (= x1035 x1838)) x55) (=> (not x520) x1236))) x489))
(assert (x334 x732))
(assert (x334 x1512))
(assert (= (x27 (x1586 x616)) x616))
(assert (x334 x494))
(assert (x334 x288))
(assert (x334 x1731))
(assert (x1539 x1761))
(assert (x702 x52 x276))
(assert (x145 x2107 x591 x8 x579))
(assert (x334 x1222))
(assert (=> (< (- x732 1) 10000) (= (x465 x732) (x1586 x732))))
(assert (= (and x383 (not x1447)) x1101))
(assert (x334 x1007))
(assert (x334 x1715))
(assert (x334 x640))
(assert (x334 x1566))
(assert (x334 x778))
(assert (x334 x1294))
(assert (x334 x1828))
(assert (= x1650 (or x1247 (and (not x1138) x1152))))
(assert (x334 x272))
(assert (x334 x1022))
(assert (x334 x1302))
(assert (x334 x577))
(assert (x122 x1129))
(assert (x1501 x818 x486))
(assert (x334 x435))
(assert (x122 x1713))
(assert (x334 x118))
(assert (x1501 x275 x2128))
(assert (= x1381 (x27 (x1586 x1381))))
(assert (x334 x2107))
(assert (x334 x263))
(assert (x334 x23))
(assert (x334 x1241))
(assert (x334 x1266))
(assert (x334 x1713))
(assert (x1539 x2135))
(assert (= (x27 (x1586 274184521717934524641157099916833587209)) 274184521717934524641157099916833587209))
(assert (x334 x783))
(assert (x122 274184521717934524641157099916833587233))
(assert (x334 x385))
(assert (x1539 x1241))
(assert (x334 x745))
(assert (x334 x128))
(assert (x334 x2141))
(assert (x1501 x1440 x1448))
(assert (x1539 x1421))
(assert (= (=> (and (= (not x1931) x1429) (= (ite x1429 1 0) x1989) (= (= x1251 0) x1931)) (=> (and (= (x1839 (- x819 4)) x1799) (not (> 614716962 x909)) (>= 1461501637330902918203684832716283019655932542975 x1538) (<= 0 x1527) (> x5 0) (or (and (not x87) (= (x686 (x1586 x1393) (x465 3) 0) x2087) (= x999 (x165 x260)) (= x260 (x686 (x1586 x2101) x2087 0)) (< x999 256) (>= x999 0) (= x2027 x999) (>= 255 x999) (= x1393 (x824 1461501637330902918203684832716283019655932542975 x1932))) (and (= x2027 (ite x87 1 0)) x87)) (= x87 (= x1932 x2101)) (= x1932 x660) (= 0 x1892) (= x755 x769) (= x280 x105) (>= 1461501637330902918203684832716283019655932542975 x1791) (= x1091 x1538) (= x1712 x1316) (= x1791 x1402) (= x1387 x1932) (not x755) (> 806251499 x909) (= x477 x1294) (= true (<= x819 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x819 131) (<= x1052 1461501637330902918203684832716283019655932542975) (>= x1052 0) (not (or (> x1799 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1799 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1799 128)))) (not (< x819 4)) (= x1149 x1892) (= (not (= 0 x1989)) x1316) (= x477 x2136) (= x280 x1022) (<= x1932 1461501637330902918203684832716283019655932542975) (= x1790 (or (not x89) x1712)) (not (= x909 614716962)) (<= x1022 1461501637330902918203684832716283019655932542975) (= x1514 x755) (= x1527 x2101) (= x1012 x1791) (> 1034154046 x909) (> 2059964113 x909) (>= 1461501637330902918203684832716283019655932542975 x1527) (= (x2132 (x1586 274184521717934524641157099916833587209)) x5) (= x1538 x867) (= x398 x1929) (= 641995544 x909) x1790 (<= 0 x1022)) x714)) x1529))
(assert (x334 x1459))
(assert (x122 x1442))
(assert (x334 x1257))
(assert (= (x465 1099511627775) (x1586 1099511627775)))
(assert (x1539 x218))
(assert (x334 x1284))
(assert (=> (> (+ 10000 1) x96) (= (x465 x96) (x1586 x96))))
(assert (= (x27 (x465 65535)) 65535))
(assert (=> (> (+ 10000 1) x1973) (= (x465 x1973) (x1586 x1973))))
(assert (x334 x869))
(assert (x334 x1840))
(assert (= (or (and x1263 x562) (and x1647 x429)) x1177))
(assert (x334 x561))
(assert (x122 x274))
(assert (= (or x28 (and x374 x523)) x1645))
(assert (= x1877 (and (not x1003) x1101)))
(assert (= (x570 x493) 0))
(assert (x334 x1659))
(assert (x334 x1990))
(assert (x334 x1372))
(assert (x1192 x796))
(assert (= 274184521717934524641157099916833587221 (x27 (x1586 274184521717934524641157099916833587221))))
(assert (x334 x962))
(assert (x334 x1591))
(assert (x334 x172))
(assert (= (x465 2000660004) (x1586 2000660004)))
(assert (x122 x730))
(assert (x728 x1474 x1456))
(assert (= (+ (x27 x738) 2) (x27 (x32 x738 2))))
(assert (x334 x377))
(assert (x334 x366))
(assert (x334 x1033))
(assert (= (x27 (x465 826074471)) 826074471))
(assert (x334 x319))
(assert (x334 x206))
(assert (x334 x345))
(assert (x334 x36))
(assert (x334 x1960))
(assert (x334 x821))
(assert (x334 x1892))
(assert (x334 x2134))
(assert (x334 x1270))
(assert (x702 x538 x739))
(assert (x334 x792))
(assert (x334 x1585))
(assert (= 0 (x760 x726)))
(assert (= (x1212 x1414) (ite (= x1414 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x760 x1414))))
(assert (x1539 x29))
(assert (x334 x1718))
(assert (x1501 x362 x1821))
(assert (x334 x931))
(assert (x334 x2017))
(assert (x334 x1860))
(assert (x334 x1315))
(assert (x122 x710))
(assert (= (=> (= (= x1727 274184521717934524641157099916833587221) x742) (and (=> (and (not (= 1889567281 x1284)) (< 0 x1356) (= x253 x2047) x742 (not x1235) (= x797 x151) (= x797 x1733) (not (< x253 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x358) (>= x774 0) (= x1500 x508) (not (< x1284 826074471)) (= x940 (< x774 x797)) (= x1812 x317) (= x522 274184521717934524641157099916833587209) (not (= 2514000705 x1284)) (not (= 826074471 x1284)) (= x253 68) (= 274184521717934524641157099916833587209 x1974) (>= 1461501637330902918203684832716283019655932542975 x508) (= (x686 (x1586 x508) (x465 1) 0) x1424) (= x1235 (or (> x207 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x207 64) (= (<= x207 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1517 32) (<= x774 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1301 x1733) (= 2835717307 x1284) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x317) (= x1233 (x686 (x1586 274184521717934524641157099916833587209) (x465 1) 0)) (not x940) (= x996 1) (= x1951 x508) (= (x686 (x1586 274184521717934524641157099916833587209) (x465 1) 0) x1171) (= x774 (x187 x1171)) (= (x1839 (- x253 4)) x207) (= x1356 (x2132 (x1586 274184521717934524641157099916833587221))) (= x898 (+ x1301 x1812)) (= (x1148 x1424) x317) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1733 x317)) (= (x1839 (- x774 x797)) x1046) (>= x317 0)) x1985) (=> (not x742) x1248))) x1115))
(assert (x334 x1580))
(assert (x1539 x141))
(assert (= (x27 (x465 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x1539 x1418))
(assert (x334 x1951))
(assert (= (x465 1461501637330902918203684832716283019655932542975) (x1586 1461501637330902918203684832716283019655932542975)))
(assert (x1539 x2052))
(assert (x334 x2051))
(assert (x334 x1823))
(assert (= (=> (and (= x1849 (x2132 (x1586 274184521717934524641157099916833587209))) (not (= 1736444767 x103)) (> 2059964113 x103) (= x367 x2104) (= x1581 (x686 (x1586 x887) (x465 5) 0)) (not (= x103 1558726628)) (not (= 2055092157 x103)) (not (< x103 1558726628)) (= x911 (x251 x1581)) (not (> 1034154046 x103)) (<= x911 20282409603651670423947251286015) (= 2059260625 x103) (= (x346 x911) x2104) (not (= x103 2000660004)) (< 0 x1849) (>= 1461501637330902918203684832716283019655932542975 x887) (not (= x103 1752364190)) (< x911 20282409603651670423947251286016) (>= x911 0) (not (< x103 1176186698))) (=> (and (< x30 65536) (< x2044 20282409603651670423947251286016) (< 0 x1049) (= x367 x1215) (= (x44 x560) x30) (= (x346 x2044) x204) (not (= x1118 840395849)) (<= x30 65535) (= x730 x1709) (= x1049 (x2132 (x1586 274184521717934524641157099916833587209))) (= (x251 x968) x2044) (>= 1461501637330902918203684832716283019655932542975 x730) (not (< x1118 806251499)) (= x1692 (or (and (< x1215 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1215) true)) (> x1215 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (and (= x294 (* x868 x343)) (< x343 18446744073709551616) (not (or (> x204 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x204 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x204)))) (>= x343 0) (= x1911 x796) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x868 x343)) (not x670) (= x792 (x824 20282409603651670423947251286015 x1911)) (not (< 10141204801825835211973625643007 x792)) (>= 18446744073709551615 x343) (= x868 (x824 20282409603651670423947251286015 x204)) (= x294 x1911)) (and (< (* x357 x1592) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x824 20282409603651670423947251286015 x939) x558) (>= 18446744073709551615 x357) (= x674 (x346 x939)) (not (< 10141204801825835211973625643007 x558)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x204)) (>= x357 0) (< x357 18446744073709551616) (= x1460 (x1839 (- 0 x204))) (not (or (and (> 0 x1460) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1460))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1460))) (= x1437 x939) (not (= x674 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (* x357 x1592) x1437) (= x1592 (x824 20282409603651670423947251286015 x1460)) (= x1488 x796) (= (x1839 (- 0 x674)) x1488) x670)) (= x968 (x686 (x1586 x730) (x465 5) 0)) (> 1034154046 x1118) (<= 0 x2044) (not (= 830980174 x1118)) (not (= x1118 826074471)) (> 2059964113 x1118) (= x670 (or (and (< x204 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x204))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x204))) (= x1677 0) (>= 20282409603651670423947251286015 x2044) (not (= 806251499 x1118)) (= x560 (x686 (x1586 x730) (x465 5) 0)) (not (> 614716962 x1118)) (= 950698303 x1118) (>= x30 0)) x834)) x1898))
(assert (x145 x452 x1452 x524 x67))
(assert (= x1999 (=> (= x887 x1709) x1898)))
(assert (x334 x2104))
(assert (x1192 x939))
(assert (x334 x1097))
(assert (x334 x588))
(assert (x1539 x1440))
(assert (x334 x2129))
(assert (x334 x1817))
(assert (x334 x2007))
(assert (= x1263 (and (not x429) x1647)))
(assert (x334 x278))
(assert (x334 x1936))
(assert (x1539 x800))
(assert (x334 x1254))
(assert (x334 x581))
(assert (x728 x6 x1658))
(assert (= (=> (= x1321 (= x849 274184521717934524641157099916833587231)) (and (=> (and (= x1390 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x1979 (x463 192)) (= (x686 (x1586 x2069) (x465 1) 0) x1508) (= x1807 4) (>= 1208925819614629174706175 x667) (= x880 (x463 160)) (= x1954 (x463 128)) (<= 0 x361) (= x547 (x463 224)) (< 0 x640) (= 1 x322) (<= 0 x1715) (>= x1042 0) (= x370 160) (< x667 1208925819614629174706176) (not (> 2362581449 x1422)) (= (x463 160) x1375) (= x701 (x463 192)) (not (= 3257672857 x1422)) (not (= 4062139261 x1422)) (= x640 (x2132 (x1586 274184521717934524641157099916833587231))) (< x361 1208925819614629174706176) (= x1422 4272920204) x1321 (<= 0 x1162) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1042) (not (> 4 x1807)) (<= x1162 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1807 4) (= x1162 (x549 x1508)) (<= 0 x667) (<= x1715 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2042 (x463 256)) (= (x463 224) x1151) (not (= 2362581449 x1422)) (= x366 (x463 128)) (= (x463 256) x172) (>= 1208925819614629174706175 x361)) x264) (=> (not x1321) x1009))) x1670))
(assert (x1501 x128 x1755))
(assert (x334 x1125))
(assert (= 0 (x760 x1302)))
(assert (= (x27 (x1586 x2134)) x2134))
(assert (x702 x1761 x1771))
(assert (x334 x1113))
(assert (x334 x1939))
(assert (x334 x409))
(assert (x1539 x1580))
(assert (x334 x1210))
(assert (x334 x689))
(assert (= (x550 x1028) 0))
(assert (x334 x927))
(assert (x334 x970))
(assert (=> (> (+ 10000 1) x1653) (= (x1586 x1653) (x465 x1653))))
(assert (x334 x1397))
(assert (= x219 (=> (and (= (x824 255 x653) x1745) (= x354 (< 1 x1745)) (not x354) (= x1872 x708) (= x1602 x2046)) x237)))
(assert (= (x27 (x1586 x953)) x953))
(assert (= (x1586 65535) (x465 65535)))
(assert (= (x1586 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x465 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x334 x1025))
(assert (x334 x104))
(assert (x334 x835))
(assert (= x714 (=> (and (> x2027 0) (= (x824 1461501637330902918203684832716283019655932542975 x1538) x839) (= x2023 (= 274184521717934524641157099916833587229 x839))) (and (=> (and (= x160 (x824 340282366920938463463374607431768211455 x477)) (<= 0 x1713) (= x553 (ite (= 0 x1530) (not (= (x824 340282366920938463463374607431768211455 x1158) 0)) (= x1530 0))) (= x1524 (x686 (x1586 x946) x1542 0)) (= (x686 (x1586 x308) x74 0) x179) (> 65536 x1713) (= x1972 (x686 (x1586 x240) x179 0)) (= x72 (x824 340282366920938463463374607431768211455 x1158)) (= x1039 (x824 1461501637330902918203684832716283019655932542975 x1932)) (= x1756 x1661) (= x616 (x824 1461501637330902918203684832716283019655932542975 x1932)) (= (x824 340282366920938463463374607431768211455 x477) x1290) (= x490 (= x1781 0)) (<= x1683 65535) (= (x824 1461501637330902918203684832716283019655932542975 x1538) x953) (= (x1839 (- x974 x160)) x1163) (= x1914 (x686 (x1586 x1332) (x465 6) 0)) (<= x275 20282409603651670423947251286015) (<= x1530 340282366920938463463374607431768211455) (>= 65535 x1713) (= x1960 x1065) (= x946 (x824 1461501637330902918203684832716283019655932542975 x1538)) (= x976 (x686 (x1586 x1039) (x465 6) 0)) (= x710 (x824 1461501637330902918203684832716283019655932542975 x1932)) (= (x824 1461501637330902918203684832716283019655932542975 x1932) x360) (>= x1530 0) (= (x382 x1453) x974) (= x407 (x1760 x1349)) (= (= 0 x767) x159) (= x1683 (x482 x1868)) (<= x1940 340282366920938463463374607431768211455) (>= x407 0) (= x62 (not x1451)) (= x812 (x824 1461501637330902918203684832716283019655932542975 x1538)) (= (x823 x519) x275) (= (x824 1461501637330902918203684832716283019655932542975 x1538) x1065) (= (x686 (x1586 x360) (x465 5) 0) x1868) (= x1102 (x686 (x1586 x812) x976 0)) (<= x767 255) (= x1770 (not x62)) (= (x1839 (- x1530 x1290)) x1158) (or (and (= 1 x1781) x553) (and (= x1265 (not x1540)) (= x1781 0) (not x553) (= x108 (ite x1265 (= (x824 340282366920938463463374607431768211455 x1158) 0) x1265)) (= x1540 (= 0 x1530)))) (= x391 (x346 x275)) (= (x686 (x1586 x305) (x465 5) 0) x1349) (= x1542 (x686 (x1586 x1713) (x465 11) 0)) (= (x1684 x1972) x1713) (not (> x1290 x1530)) (<= 0 x275) (= x1096 (x686 (x1586 x616) (x465 5) 0)) (= (+ x825 x1266) x650) (= (x686 (x1586 x953) (x465 2) 0) x1453) (> 340282366920938463463374607431768211456 x1530) (not (< x974 x160)) (= x1661 (not x490)) (>= 65535 x407) (= x1530 (x1784 x1102)) (= x1004 (x1522 x779)) (>= x1683 0) (> 65536 x407) (not x2023) (< x275 20282409603651670423947251286016) (= (ite (not x1770) 1 0) x240) (= (x824 340282366920938463463374607431768211455 x1163) x1552) (< x767 256) (> 65536 x1683) (= x1266 x72) (>= x1940 0) (= x1332 (x824 1461501637330902918203684832716283019655932542975 x1932)) (or (and (= x1092 x926) (= x1279 (x824 20282409603651670423947251286015 x1620)) (= x1092 (x1839 (- 0 x1965))) x1905 (not (< 10141204801825835211973625643007 x189)) (< (* x357 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x357) (= (x824 20282409603651670423947251286015 x1254) x189) (not (or (and (< x1620 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1620) true)) (> x1620 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x1965 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (<= x357 18446744073709551615) (< x357 18446744073709551616) (= (x1839 (- 0 x391)) x1620) (= x1965 (x346 x1254)) (not (= x391 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (* x1279 x357) x124) (= x124 x1254)) (and (> 18446744073709551616 x343) (= (x824 20282409603651670423947251286015 x1608) x1362) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x391) (and (> 0 x391) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x391) true)))) (not (< 10141204801825835211973625643007 x1362)) (>= x343 0) (= x127 x1608) (= (* x318 x343) x127) (>= 18446744073709551615 x343) (= x926 x1608) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x318 x343)) (not x1905) (= x318 (x824 20282409603651670423947251286015 x391)))) (= x1065 x779) (= (x686 (x1586 x710) (x465 5) 0) x519) (< x974 340282366920938463463374607431768211456) (= (x824 1461501637330902918203684832716283019655932542975 x1538) x308) (<= 0 x974) (= x1905 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x391) (and (= (<= x391 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x391)))) (= x767 (x1507 x1524)) (= x1756 (not x159)) (>= 340282366920938463463374607431768211455 x974) (= x825 (- x1004 x1917)) (<= 0 x767) (= (x686 (x1586 x1065) x1914 0) x631) (= x74 (x686 (x1586 x1683) (x465 12) 0)) (= x1451 (= x1781 0)) (= (x1784 x631) x1940) (= x1940 x1917) (= (x824 1461501637330902918203684832716283019655932542975 x1932) x305)) x2130) (=> (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1752 x1644)) (<= 0 x2014) (= (x824 20282409603651670423947251286015 x1029) x1059) (= (x686 (x1586 x1416) (x465 5) 0) x1688) (= x235 (x346 x1819)) (= x1752 x979) (= (- (/ x986 x357) (uninterp_frac x986 x357)) x1629) (= (x346 x1445) x1963) (= (= x838 0) x297) (or (and (= x1768 0) (not x655)) (and (= (x824 20282409603651670423947251286015 x748) x1785) x655 (= x1557 x1768) (= x1576 (x824 20282409603651670423947251286015 x477)) (= x1557 (ite (> x1576 x1785) x748 x477)) (= x1125 (x346 x748)) (not (or (and (< x1125 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1125))) (> x1125 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x482 x1688) x1547) (= (x824 20282409603651670423947251286015 x1768) x629) (= (x389 x1688) x113) (<= x2082 20282409603651670423947251286015) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x346 x975))) (< (x346 x975) 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x346 x975))) x1408) (< 0 x343) (= (x824 20282409603651670423947251286015 x1629) x1) (= x1154 (* x1994 x357)) (< x1547 65536) (>= 18446744073709551615 x343) (= (x1839 (- x1567 x629)) x1029) (>= x2082 0) (or (and (<= x206 18446744073709551615) (> 18446744073709551616 x206) x1174 (>= x206 0)) (and (>= x1221 0) (> 18446744073709551616 x1221) (>= 18446744073709551615 x1221) (not x1174))) (>= 20282409603651670423947251286015 x986) (or (and (= (x824 20282409603651670423947251286015 x1739) x473) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1509)) x1792 (= (x824 20282409603651670423947251286015 x1064) x2140) (= (x346 x1064) x1509) (not (< 10141204801825835211973625643007 x2140)) (= (x1839 (- 0 x492)) x1739) (= x492 (x346 x764)) (> 18446744073709551616 x357) (< 0 x357) (= (x1839 (- 0 x1509)) x1560) (= x1819 x1560) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x492)) (>= x357 0) (= x1064 (- (/ x473 x357) (uninterp_frac x473 x357))) (not (or (and (= (<= x1739 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x1739)) (> x1739 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 18446744073709551615 x357)) (and (= (- (/ x110 x343) (uninterp_frac x110 x343)) x1630) (= x897 (x346 x764)) (not (< 10141204801825835211973625643007 x1920)) (= x1630 x1819) (< 0 x343) (<= 0 x343) (not (or (> x897 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x897)) (> 0 x897)))) (not x1792) (= (x824 20282409603651670423947251286015 x1630) x1920) (= x110 (x824 20282409603651670423947251286015 x764)) (< x343 18446744073709551616) (>= 18446744073709551615 x343))) (< x343 18446744073709551616) (= x1644 (x824 20282409603651670423947251286015 x646)) (= x483 (or (and (> 0 (x346 x384)) (= true (<= (x346 x384) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x346 x384)))) (= x827 (not x297)) (< x838 256) x2023 (= (x824 20282409603651670423947251286015 x837) x1752) (>= 65535 x1547) (= x2036 (x824 20282409603651670423947251286015 x1768)) (= (x346 x477) x1253) (= x1644 x863) (>= 18446744073709551615 x357) (<= x1571 18446744073709551615) (= (x824 20282409603651670423947251286015 x128) x1823) (> x357 0) (= x1523 x81) (= (x824 1461501637330902918203684832716283019655932542975 x1932) x1416) (= (x1590 (+ 10141204801825835211973625643007 x1253)) x2150) (= (ite (not x1922) 1 0) x2052) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1253) (and (= (<= x1253 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1253 0))) x1922) (< x343 18446744073709551616) (= 128 x1863) (<= x1445 20282409603651670423947251286015) (> 18446744073709551616 x2014) (>= x838 0) (= x229 (x1590 (+ 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1253))) (= x279 (ite (or (and (> x2150 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x645)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x645) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2150)) (< x2150 x645))) 1 0)) (= (x823 x1688) x1445) (= (or (> (x346 x1819) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x346 x1819))) (< (x346 x1819) 0))) x1174) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2082 x343)) (<= x1994 20282409603651670423947251286015) (= x2089 (ite (not x827) 1 0)) (>= x1571 0) (= x2066 (ite (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1253)) (> 0 x1253)) (> x1253 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0)) (= (x1839 (- x645 x1253)) x764) (>= 255 x838) (= (x1726 x1688) x1571) (= (ite (or (and (<= x229 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x645 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x229) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x645)) (> x229 x645))) 1 0) x641) (= x1714 (x824 20282409603651670423947251286015 x477)) (>= x1547 0) (or (and (>= 18446744073709551615 x206) (= x23 (x824 18446744073709551615 x2148)) (= x852 x2148) (= x267 x1261) (= x427 (x824 18446744073709551615 x2111)) (= (x824 18446744073709551615 x1222) x271) (= (x346 x975) x1267) (= (x1839 (- 0 x1267)) x1230) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x427 x658)) (= x496 (x555 192)) (< (+ x23 x1261) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1839 (- x206 x271)) x2111) (= (+ x267 x1383) x40) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1267)) (= (x1854 160) x1222) (<= x40 18446744073709551615) (= x658 (x824 20282409603651670423947251286015 x1230)) (<= 0 x206) (= x852 (* x658 x427)) (> 18446744073709551616 x206) (= (x824 18446744073709551615 x496) x1261) (not (< x206 x271)) x1408 (= x23 x1383)) (and (<= x657 18446744073709551615) (= x22 (x824 18446744073709551615 x2007)) (= (x1839 (- x1221 x527)) x1071) (= (x1854 160) x773) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1990 x636)) (= x657 (+ x899 x649)) (= x899 x1875) (= (x824 18446744073709551615 x1071) x636) (= x527 (x824 18446744073709551615 x773)) (not (< x1221 x527)) (= (x555 192) x2007) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x22 x1875)) (= x1990 (x824 20282409603651670423947251286015 x975)) (= x1365 x745) (<= x1221 18446744073709551615) (<= 0 x1221) (not x1408) (< x1221 18446744073709551616) (= x1875 (x824 18446744073709551615 x745)) (= x1365 (* x636 x1990)) (= x22 x649))) (not (< x1567 x629)) (<= 0 x343) (= (x824 x2066 x279) x299) (> 20282409603651670423947251286016 x1994) (= x1567 (x824 20282409603651670423947251286015 x81)) (= (x346 x748) x645) (<= x343 18446744073709551615) (>= x357 0) (= 0 x299) (= (x1145 128) x384) (not (> x2036 x1435)) (= x1792 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x346 x764))) (< (x346 x764) 0)) (> (x346 x764) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x646 (x1839 (- x1435 x2036))) (= x655 (and (= true (<= (x346 x748) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 (x346 x748)))) (<= 0 x343) (< x357 18446744073709551616) (= x1154 x837) (= 0 x1512) (= x128 (- (/ x1059 x343) (uninterp_frac x1059 x343))) (> 256 x113) (not (< 10141204801825835211973625643007 x1714)) (= (x824 x2052 x641) x1512) (> 20282409603651670423947251286016 x2082) (>= x357 0) (> 20282409603651670423947251286016 x1445) (<= x113 255) (= x2014 (x478 x1688)) (or (and (= (x824 20282409603651670423947251286015 x384) x17) (< (* x17 x343) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x343 18446744073709551616) (= (x346 x384) x409) (>= 18446744073709551615 x343) (= x423 (x824 20282409603651670423947251286015 x362)) (>= x343 0) (not (or (and (= true (<= x409 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x409 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x409))) (= x748 x362) (= x362 x326) (not (> x423 10141204801825835211973625643007)) (not x483) (= x326 (* x343 x17))) (and (> 18446744073709551616 x357) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1536)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1945)) (= x1536 (x346 x59)) (<= x357 18446744073709551615) x483 (= x123 (x824 20282409603651670423947251286015 x57)) (= x320 (x1839 (- 0 x1536))) (< (* x357 x123) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x346 x384) x1945) (= x57 (x1839 (- 0 x1945))) (not (> x1594 10141204801825835211973625643007)) (<= 0 x357) (not (or (> x57 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x57 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x57)))) (= (* x357 x123) x1027) (= (x824 20282409603651670423947251286015 x59) x1594) (= x59 x1027) (= x320 x748))) (>= 18446744073709551615 x2014) (= (+ x979 x863) x986) (<= x357 18446744073709551615) (= x1435 (x824 20282409603651670423947251286015 x477)) (<= 0 x113) (< x1571 18446744073709551616) (< x357 18446744073709551616) (<= 0 x1994) (< (* x357 x1994) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1445 0) (= (* x343 x2082) x1523) (= (x1145 128) x975)) x1698)))))
(assert (x334 x1114))
(assert (x334 x311))
(assert (x334 x603))
(assert (=> (> (+ 10000 1) x609) (= (x465 x609) (x1586 x609))))
(assert (x1192 x1068))
(assert (x334 x340))
(assert (x1539 x1538))
(assert (x1192 x477))
(assert (=> (> (+ 10000 1) x812) (= (x465 x812) (x1586 x812))))
(assert (x334 x1745))
(assert (x122 x812))
(assert (=> (> (+ 10000 1) x274) (= (x1586 x274) (x465 x274))))
(assert (x334 x685))
(assert (x334 x103))
(assert (x1539 x352))
(assert (= 274184521717934524641157099916833587233 (x27 (x1586 274184521717934524641157099916833587233))))
(assert (= 830980174 (x27 (x465 830980174))))
(assert (x1501 x1632 x336))
(assert (= 0 (x1298 x861)))
(assert (x1539 x2096))
(assert (x334 x72))
(assert (x334 x1789))
(assert (x334 x926))
(assert (x334 x1032))
(assert (x334 x1018))
(assert (x334 x1180))
(assert (x334 x1103))
(assert (=> (> (+ 10000 1) x2134) (= (x1586 x2134) (x465 x2134))))
(assert (= true x525))
(assert (x1192 x1632))
(assert (x334 x2117))
(assert (x334 x1162))
(assert (x334 x306))
(assert (x334 x774))
(assert (x334 x963))
(assert (x542 x2052 x641))
(assert (= x1683 (x27 (x1586 x1683))))
(assert (x334 x1629))
(assert (x334 x2029))
(assert (x334 x240))
(assert (= x264 (=> (and (<= x120 1208925819614629174706175) (= x120 (x449 256)) (= x306 0) (= x1916 (> x1943 0)) (= x1943 (x824 255 x653)) (= x1901 (x824 340282366920938463463374607431768211455 x1622)) (<= x685 1208925819614629174706175) (= (uninterp_mod (* x1901 (x1788 x1579)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1853) (not (or (> x370 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 x370) (= (<= x370 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x982 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1622)) (< 0 x1622))) (= x2142 (x1590 (+ 128 x945))) (= x945 (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1184)) (= (x449 160) x1622) (= (x1590 (+ 31 x370)) x1184) (= x685 (x449 128)) (not (= 0 x322)) (= (not x982) x324) (not (ite x324 x324 (and (< 170141183460469231731687303715884105727 x1622) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1622) true))))) (and (=> x1916 x676) (=> (and (not x1916) (= x1853 x2144)) x2067)))))
(assert (x334 x169))
(assert (x334 x317))
(assert (x334 x1348))
(assert (= (x1586 1889567281) (x465 1889567281)))
(assert (x334 x750))
(assert (x334 x1763))
(assert (= x1065 (x27 (x1586 x1065))))
(assert (x334 x314))
(assert (x334 x1732))
(assert (= (x1271 x1069) 0))
(assert (= (x27 (x1586 x1973)) x1973))
(assert (x334 x2150))
(assert (x1539 x773))
(assert (x334 x633))
(assert (x536 x1418))
(assert (x334 x574))
(assert (x1539 x998))
(assert (x1539 x2109))
(assert (x702 x2007 x841))
(assert (= (x27 (x1586 x1929)) x1929))
(assert (x334 x1557))
(assert (x334 x1598))
(assert (= (x465 2059260625) (x1586 2059260625)))
(assert (x334 x1848))
(assert (x334 x901))
(assert (x334 x647))
(assert (x334 x2102))
(assert (x334 x113))
(assert (= (x465 3257672857) (x1586 3257672857)))
(assert (x728 x1061 x1337))
(assert (x334 x2031))
(assert (x334 x1654))
(assert (x334 x593))
(assert (x334 x256))
(assert (x334 x164))
(assert (x334 x1393))
(assert (= (x1586 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x465 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x334 x829))
(assert (= 1099511627775 (x27 (x465 1099511627775))))
(assert (x334 x2))
(assert (x122 x935))
(assert (x334 x800))
(assert (x334 x293))
(assert (x334 x1356))
(assert (x542 x2102 x1082))
(assert (x334 x2013))
(assert (x334 x1381))
(assert (x334 x1622))
(assert (x122 x1065))
(assert (x1539 x653))
(assert (x334 x1182))
(assert (x334 x1597))
(assert (x334 x796))
(assert (x1192 x59))
(assert (x334 x1636))
(assert (x334 x406))
(assert (x334 x446))
(assert (x334 x151))
(assert (x334 x1399))
(assert (= (x27 (x1586 x1653)) x1653))
(assert (= x895 (and (not x162) x1497)))
(assert (x334 x479))
(assert (x334 x400))
(assert (x334 x270))
(assert (x334 x530))
(assert (x334 x1163))
(assert (x334 x1717))
(assert (x334 x993))
(assert (x334 x516))
(assert (x1501 x1068 x1483))
(assert (x334 x445))
(assert (x334 x1664))
(assert (x1735 x703 x802))
(assert (x334 x2040))
(assert (x334 x1239))
(assert (x334 x2136))
(assert (= (x465 2514000705) (x1586 2514000705)))
(assert (x334 x2011))
(assert (x122 x1653))
(assert (x334 x1785))
(assert (x334 x1334))
(assert (x334 x782))
(assert (x334 x1352))
(assert (x1501 x1671 x1679))
(assert (x334 x316))
(assert (x334 x773))
(assert (x334 x1773))
(assert (= (x1495 x1414) (ite (= x1414 x546) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x100 x1414))))
(assert (= x1342 (and x1948 x1317)))
(assert (x1539 x384))
(assert (x334 x398))
(assert (x1192 x2135))
(assert (= (x328 x1302) (ite (= x1005 x1302) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1010 x1302))))
(assert (x1192 x1671))
(assert (x334 x477))
(assert (x334 x1251))
(assert (x334 x1595))
(assert (x334 x1757))
(assert (x334 x780))
(assert (x334 x474))
(assert (x1192 x800))
(assert (x334 x1547))
(assert (x334 x1258))
(assert (x334 x1494))
(assert (x334 x52))
(assert (x334 x2131))
(assert (x334 x1942))
(assert (x1192 x764))
(assert (x702 x745 x20))
(assert (x334 x915))
(assert (x334 x552))
(assert (x334 x1991))
(assert (= x699 (or x1339 (and (not x1916) x1133))))
(assert (x334 x1875))
(assert (x1703 x1297 x771))
(assert (x1539 x1382))
(assert (x334 x1696))
(assert (x334 x2140))
(assert (x728 x2096 x1997))
(assert (x334 x1462))
(assert (x1539 65535))
(assert (x728 x218 x2121))
(assert (x334 x2034))
(assert (x334 x1231))
(assert (x334 x1019))
(assert (x334 x756))
(assert (x334 x1500))
(assert (x334 x204))
(assert (x334 x729))
(assert (x334 x1005))
(assert (= (x27 (x465 4272920204)) 4272920204))
(assert (x334 x1218))
(assert (x334 x35))
(assert (x334 x2063))
(assert (x334 x838))
(assert (= (and x2032 (not x2103)) x679))
(assert (x334 x1078))
(assert (= (x465 20282409603651670423947251286016) (x1586 20282409603651670423947251286016)))
(assert (= (x465 1736444767) (x1586 1736444767)))
(assert (= (+ 2 (x27 x716)) (x27 (x32 x716 2))))
(assert (= (ite (and x1342 x426) (x1588 288) (x843 288)) (x1010 288)))
(assert (x1192 x1166))
(assert (x334 x1074))
(assert (x334 x321))
(assert (= x383 (and x711 (not x2023))))
(assert (= 2514000705 (x27 (x465 2514000705))))
(assert (x334 x1640))
(assert (= (x465 950698303) (x1586 950698303)))
(assert (x334 x1799))
(assert (= (x465 806251499) (x1586 806251499)))
(assert (x334 x517))
(assert (= 614716962 (x27 (x465 614716962))))
(assert (= (x465 10141204801825835211973625643007) (x1586 10141204801825835211973625643007)))
(assert (= (ite (= x726 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x760 x726)) (x1212 x726)))
(assert (x1735 x730 x1343))
(assert (x334 x1107))
(assert (x702 x2111 x1176))
(assert (= x1817 (x27 (x1586 x1817))))
(assert (x1539 x135))
(assert (x334 x1077))
(assert (= x55 (=> (and (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531)) (= (ite (or (and (< x2050 x531) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531) (<= x2050 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x531 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2050 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1250) (= (x824 x552 x1250) x1982) (= (ite (or (and (< x531 x2013) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2013) (<= x531 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x2013 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531))) 1 0) x350) (= (x1590 (+ x1566 64)) x1430) (= (uninterp_mod (* x785 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x435) (= x552 (ite (not x1367) 1 0)) (not (ite x1272 x1272 (and (> x1474 170141183460469231731687303715884105727) (= true (<= x1474 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x510)) (> 160 x510)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x510))) (= x619 (x1590 (+ 64 x1069))) (= x531 x1011) (= 0 x1340) (= (x192 x619) x2120) (= (x1657 x1020) x1675) (= x243 (x458 x1018)) (= x1474 (x458 x1789)) (= x2013 (x1839 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1853))) (>= 1208925819614629174706175 x243) (= (x1839 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1853)) x2050) (= x1982 0) (= x1020 (x1590 (+ x1028 64))) (= (x458 x1566) x931) (not (= 0 x1098)) (< (* x435 x2095) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x785 (x824 340282366920938463463374607431768211455 x1474)) (= (not x238) x1272) (= (or (and (= (<= x1853 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1853 0)) (> x1853 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1367) (= x1746 x164) (= (x1590 (+ x531 x1853)) x1746) (= x1011 (* x435 x2095)) (= (x1590 (+ 288 x1306)) x1789) (= (ite (or (and (> 0 x1853) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1853))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1853)) 1 0) x1710) (= (x824 x1710 x350) x1340) (= x238 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1474)) (> x1474 0))) (<= x931 1208925819614629174706175) (= x1018 (x1590 (+ 64 x1430))) (= x2095 (x824 18446744073709551615 x2120))) x1449)))
(assert (= 0 (x1481 x1020)))
(assert (x334 x1701))
(assert (x334 x1856))
(assert (= 1461501637330902918203684832716283019655932542976 (x27 (x465 1461501637330902918203684832716283019655932542976))))
(assert (x334 x17))
(assert (x334 x442))
(assert (x334 x1802))
(assert (= x471 (=> (and (not (> x1182 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (<= x1462 1208925819614629174706175) (= x2102 (ite (not x690) 1 0)) (= x1082 (ite (or (and (= (<= x1182 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x651 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x651 x1182)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1182) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x651))) 1 0)) (= x493 (x1590 (+ 64 x117))) (= x381 (x1590 (+ 64 x1558))) (= x881 (x824 340282366920938463463374607431768211455 x2096)) (= x289 (* x442 x61)) (= x1246 (ite (or (and (< x337 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x337))) (> x337 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0)) (<= x60 1208925819614629174706175) (= (x824 x1246 x678) x1585) (= x52 (x1313 x381)) (= (x824 x2102 x1082) x1981) (= (x1590 (+ x1095 64)) x1302) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x442 x61)) (= (x351 x1302) x1462) (not (ite x840 x840 (and (< 170141183460469231731687303715884105727 x2096) (= (<= x2096 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x875 (and (= true (<= x2096 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2096 0))) (= (x824 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2107) x2058) (= x1114 x1814) (not (or (> x740 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x740 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x740) true)))) (= x1758 x752) (= x442 (uninterp_mod (* x881 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x651 (x1839 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x337))) (= x840 (not x875)) (= (x351 x1749) x2096) (= (x1590 (+ x1005 64)) x1095) (= x1749 (x1590 (+ 288 x677))) (= (x1590 (+ x1182 x337)) x1814) (= (x1590 (+ x2058 x1005)) x1758) (= x963 (x762 x493)) (not (= x1896 0)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x337) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x337) true) (< x337 0))) x690) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1182) (<= x1454 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1454) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1182)) (< x1182 x1454))) 1 0) x678) (= x1585 0) (= x1182 x289) (= x61 (x824 18446744073709551615 x52)) (= (x1590 (+ 31 x740)) x2107) (= (x351 x1005) x60) (= x1981 0) (= (x1839 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x337)) x1454)) x196)))
(assert (x334 x609))
(assert (= (x27 (x465 1889567281)) 1889567281))
(assert (x334 x988))
(assert (x334 x1039))
(assert (x334 x404))
(assert (=> (< (- x2101 1) 10000) (= (x465 x2101) (x1586 x2101))))
(check-sat)
