(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x4071 0)) (((x2113 (x25 x4071) (x2077 x4071) (x2758 Real)) (x4099 (x3664 x4071) (x2382 Real)) (x4755 (x5013 Real)))))
(declare-fun x1183 () Bool)
(declare-fun x4413 () Real)
(declare-fun x2238 () Real)
(declare-fun x1534 () Bool)
(declare-fun x547 () Real)
(declare-fun x4352 () Real)
(declare-fun x830 () Bool)
(declare-fun x3290 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x401 () Bool)
(declare-fun x2095 () Real)
(declare-fun x3689 () Bool)
(declare-fun x3231 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x2376 () Real)
(declare-fun x2340 () Real)
(declare-fun x1547 () Bool)
(declare-fun x3551 () Real)
(declare-fun x439 () Real)
(declare-fun x4703 () Bool)
(declare-fun x1161 () x4071)
(declare-fun x3722 () x4071)
(declare-fun x750 () Real)
(declare-fun x450 (Real) Real)
(declare-fun x4085 () Real)
(declare-fun x1022 () Real)
(declare-fun x3553 () Real)
(declare-fun x1423 (x4071) Real)
(declare-fun x544 () Real)
(declare-fun x3154 () Real)
(declare-fun x2115 () Real)
(declare-fun x1103 () Real)
(declare-fun x1090 () Bool)
(declare-fun x4756 () Real)
(declare-fun x271 () Real)
(declare-fun x1614 () Bool)
(declare-fun x4899 (Real) Real)
(declare-fun x1568 () Real)
(declare-fun x4192 () Bool)
(declare-fun x2242 () Real)
(declare-fun x4986 () Real)
(declare-fun x2523 () Bool)
(declare-fun x3060 () Real)
(declare-fun x3358 () x4071)
(declare-fun x163 () Real)
(declare-fun x2410 () Real)
(declare-fun x2834 () Real)
(declare-fun x1174 () Bool)
(declare-fun x369 () Bool)
(declare-fun x2564 () x4071)
(declare-fun x4892 () Bool)
(declare-fun x475 () Bool)
(declare-fun x928 () Real)
(declare-fun x945 () Real)
(declare-fun x5175 (Real) Real)
(declare-fun x1082 () Bool)
(declare-fun x1208 () Real)
(declare-fun x4153 () Bool)
(declare-fun x3999 () Real)
(declare-fun x1666 () Real)
(declare-fun x558 () Bool)
(declare-fun x1032 () Real)
(declare-fun x5076 () Bool)
(declare-fun x1874 () x4071)
(declare-fun x1861 () Bool)
(declare-fun x3228 () Bool)
(declare-fun x494 () Real)
(declare-fun x3821 () Real)
(declare-fun x1776 () Real)
(declare-fun x2363 () Real)
(declare-fun x2227 () Bool)
(declare-fun x313 () Real)
(declare-fun x4654 () Real)
(declare-fun x461 () Real)
(declare-fun x1961 () Bool)
(declare-fun x3088 () Real)
(declare-fun x3385 () Real)
(declare-fun x4118 () Real)
(declare-fun x2260 () Real)
(declare-fun x241 () Real)
(declare-fun x57 () Real)
(declare-fun x964 () x4071)
(declare-fun x1867 () x4071)
(declare-fun x3574 () x4071)
(declare-fun x613 () Real)
(declare-fun x3714 () Real)
(declare-fun x819 () Bool)
(declare-fun x2444 () Real)
(declare-fun x4080 () Real)
(declare-fun x2159 () Real)
(declare-fun x3561 () Real)
(declare-fun x376 () Real)
(declare-fun x2470 () x4071)
(declare-fun x3406 () Real)
(declare-fun x2838 () Bool)
(declare-fun x4324 () Real)
(declare-fun x600 () Real)
(declare-fun x63 () Bool)
(declare-fun x2947 () Bool)
(declare-fun x4591 () x4071)
(declare-fun x3800 () Bool)
(declare-fun x1573 () Real)
(declare-fun x988 () Real)
(declare-fun x102 () Real)
(declare-fun x480 () Real)
(declare-fun x4147 () Real)
(declare-fun x3651 () Real)
(declare-fun x2195 (x4071) Real)
(declare-fun x2157 () Bool)
(declare-fun x3345 () Bool)
(declare-fun x3142 () Bool)
(declare-fun x5345 () Bool)
(declare-fun x4969 () Bool)
(declare-fun x2221 () Real)
(declare-fun x4730 () x4071)
(declare-fun x2219 () Bool)
(declare-fun x261 () Bool)
(declare-fun x4594 () Real)
(declare-fun x3214 () Real)
(declare-fun x2112 () Real)
(declare-fun x4127 () Real)
(declare-fun x4829 () x4071)
(declare-fun x1441 () Bool)
(declare-fun x3256 () Real)
(declare-fun x901 () Bool)
(declare-fun x2395 () Real)
(declare-fun x2354 () Real)
(declare-fun x4190 () Real)
(declare-fun x234 () Real)
(declare-fun x3498 () x4071)
(declare-fun x3873 () Real)
(declare-fun x2057 () Real)
(declare-fun x3040 () Bool)
(declare-fun x266 () Real)
(declare-fun x3580 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x4156 () Bool)
(declare-fun x1892 () x4071)
(declare-fun x2542 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x471 () Real)
(declare-fun x5192 () Real)
(declare-fun x1909 () Bool)
(declare-fun x896 () Bool)
(declare-fun x347 () Real)
(declare-fun x1222 () Real)
(declare-fun x4331 () Bool)
(declare-fun x4948 () Bool)
(declare-fun x1599 () Real)
(declare-fun x4019 () Real)
(declare-fun x4125 () Bool)
(declare-fun x846 () Bool)
(declare-fun x4122 () Real)
(declare-fun x27 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x4753 () Real)
(declare-fun x3543 () Real)
(declare-fun x2509 () Real)
(declare-fun x3748 () Real)
(declare-fun x1552 () Bool)
(declare-fun x4614 () Bool)
(declare-fun x3950 () Real)
(declare-fun x5092 () Bool)
(declare-fun x5230 () Real)
(declare-fun x4254 () Bool)
(declare-fun x4098 () Real)
(declare-fun x3329 () Real)
(declare-fun x4623 (x4071) Real)
(declare-fun x196 () Bool)
(declare-fun x4504 () Bool)
(declare-fun x2111 () x4071)
(declare-fun x670 () Real)
(declare-fun x289 (Real) Real)
(declare-fun x3015 () Real)
(declare-fun x3348 () x4071)
(declare-fun x799 () Bool)
(declare-fun x1761 () Real)
(declare-fun x2161 () Bool)
(declare-fun x685 () x4071)
(declare-fun x812 () Real)
(declare-fun x4373 () Bool)
(declare-fun x332 () Real)
(declare-fun x3395 () Real)
(declare-fun x195 () Real)
(declare-fun x4387 () Real)
(declare-fun x1346 () Bool)
(declare-fun x1137 () Real)
(declare-fun x4160 () Real)
(declare-fun x408 () Real)
(declare-fun x318 () Real)
(declare-fun x4638 () Bool)
(declare-fun x1797 () Real)
(declare-fun x1544 () Real)
(declare-fun x1437 () Real)
(declare-fun x1972 () Real)
(declare-fun x1618 () Real)
(declare-fun x3351 () Real)
(declare-fun x3792 () Bool)
(declare-fun x5066 () Real)
(declare-fun x1301 () Real)
(declare-fun x793 () Bool)
(declare-fun x4772 () x4071)
(declare-fun x1980 () Bool)
(declare-fun x382 (x4071) Real)
(declare-fun x3277 () Real)
(declare-fun x1485 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x3849 () Real)
(declare-fun x3992 () Real)
(declare-fun x53 () Real)
(declare-fun x187 () Real)
(declare-fun x1157 () Real)
(declare-fun x3083 () Bool)
(declare-fun x2305 () Real)
(declare-fun x794 () Real)
(declare-fun x2848 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x1095 () Real)
(declare-fun x3831 () Real)
(declare-fun x493 (Real) Real)
(declare-fun x486 () Real)
(declare-fun x4958 () Bool)
(declare-fun x4010 () Real)
(declare-fun x1649 () Real)
(declare-fun x3495 () Bool)
(declare-fun x4515 () Real)
(declare-fun x131 () Real)
(declare-fun x867 () Real)
(declare-fun x2696 () Real)
(declare-fun x4015 () Real)
(declare-fun x5226 () Bool)
(declare-fun x4472 () Bool)
(declare-fun x2241 () Real)
(declare-fun x2269 () x4071)
(declare-fun x5193 () Real)
(declare-fun x2782 () Bool)
(declare-fun x1536 () Real)
(declare-fun x3058 () Real)
(declare-fun x2942 () Bool)
(declare-fun x429 () Real)
(declare-fun x4569 () Real)
(declare-fun x2473 () Real)
(declare-fun x1705 () Real)
(declare-fun x2003 () Bool)
(declare-fun x4955 () Real)
(declare-fun x4383 () Real)
(declare-fun x4384 () x4071)
(declare-fun x495 () Bool)
(declare-fun x4896 () Real)
(declare-fun x4408 () Bool)
(declare-fun x67 () Real)
(declare-fun x4104 () Bool)
(declare-fun x469 () Real)
(declare-fun x3279 () Real)
(declare-fun x2690 () Bool)
(declare-fun x1665 () Real)
(declare-fun x861 () Real)
(declare-fun x1040 () Bool)
(declare-fun x2429 () Real)
(declare-fun x398 () Real)
(declare-fun x4603 () x4071)
(declare-fun x4675 () Real)
(declare-fun x4432 () Bool)
(declare-fun x4651 (Real) Real)
(declare-fun x4208 (Real) Real)
(declare-fun x516 () Bool)
(declare-fun x2131 () x4071)
(declare-fun x3112 () Real)
(declare-fun x5171 () Bool)
(declare-fun x4873 (x4071) Real)
(declare-fun x506 () Real)
(declare-fun x1228 () Real)
(declare-fun x2468 () Real)
(declare-fun x4618 (Real) Real)
(declare-fun x2139 () Bool)
(declare-fun x136 () Bool)
(declare-fun x3889 () Real)
(declare-fun x329 () Real)
(declare-fun x3541 () Real)
(declare-fun x4967 () Real)
(declare-fun x5205 () Real)
(declare-fun x3252 () Real)
(declare-fun x4693 () Real)
(declare-fun x337 () Real)
(declare-fun x2727 () Real)
(declare-fun x676 () x4071)
(declare-fun x1054 () Real)
(declare-fun x1881 () Real)
(declare-fun x2202 () Real)
(declare-fun x2432 () Real)
(declare-fun x3817 (x4071) Real)
(declare-fun x122 () Real)
(declare-fun x3648 () Real)
(declare-fun x120 () Bool)
(declare-fun x4657 () Real)
(declare-fun x733 () Real)
(declare-fun x2946 () Real)
(declare-fun x446 () Real)
(declare-fun x1633 () Real)
(declare-fun x3886 () Real)
(declare-fun x2293 () Real)
(declare-fun x5292 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x1803 () Real)
(declare-fun x2807 () Real)
(declare-fun x291 () Bool)
(declare-fun x3628 () Real)
(declare-fun x3478 () Real)
(declare-fun x1100 () Real)
(declare-fun x5239 () x4071)
(declare-fun x5048 () Bool)
(declare-fun x1885 () Real)
(declare-fun x1391 () Bool)
(declare-fun x164 () Bool)
(declare-fun x3862 () x4071)
(declare-fun x417 () Bool)
(declare-fun x1074 () Real)
(declare-fun x1491 () Real)
(declare-fun x3632 (Real) Real)
(declare-fun x1145 () Bool)
(declare-fun x4281 () Bool)
(declare-fun x5366 () Bool)
(declare-fun x5073 () Bool)
(declare-fun x2234 () Real)
(declare-fun x4571 () Real)
(declare-fun x4747 () Real)
(declare-fun x917 () Real)
(declare-fun x78 () Bool)
(declare-fun x1053 () Real)
(declare-fun x2049 () Real)
(declare-fun x1217 () Real)
(declare-fun x2421 () Real)
(declare-fun x2956 () Bool)
(declare-fun x1231 (x4071) Real)
(declare-fun x3665 () Bool)
(declare-fun x5322 () Bool)
(declare-fun x1646 () Real)
(declare-fun x2055 () Bool)
(declare-fun x2006 () Real)
(declare-fun x3672 () Bool)
(declare-fun x2694 () Bool)
(declare-fun x2397 () Real)
(declare-fun x119 () Bool)
(declare-fun x3952 () Real)
(declare-fun x3731 () Real)
(declare-fun x1029 () Real)
(declare-fun x2247 () Real)
(declare-fun x838 () x4071)
(declare-fun x2761 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x478 () x4071)
(declare-fun x3637 () Bool)
(declare-fun x4602 () x4071)
(declare-fun x2803 () Real)
(declare-fun x85 () Real)
(declare-fun x1309 () Real)
(declare-fun x3493 () Bool)
(declare-fun x925 () Bool)
(declare-fun x3340 () Real)
(declare-fun x4072 () Real)
(declare-fun x1811 () Bool)
(declare-fun x3718 () Real)
(declare-fun x4425 () Real)
(declare-fun x4317 () Real)
(declare-fun x4169 () Real)
(declare-fun x549 () Real)
(declare-fun x4460 () Bool)
(declare-fun x4328 () Real)
(declare-fun x1194 () Real)
(declare-fun x3502 () Real)
(declare-fun x310 () Real)
(declare-fun x3908 () Real)
(declare-fun x3721 () Real)
(declare-fun x4831 (Real) Real)
(declare-fun x677 () Bool)
(declare-fun x5224 () Real)
(declare-fun x699 () Bool)
(declare-fun x1655 (Real) Real)
(declare-fun x4913 () Bool)
(declare-fun x3467 () Bool)
(declare-fun x2704 () Real)
(declare-fun x1722 () Real)
(declare-fun x2011 () Real)
(declare-fun x565 () Real)
(declare-fun x5144 () Bool)
(declare-fun x51 () x4071)
(declare-fun x5362 (x4071) Real)
(declare-fun x1258 () Bool)
(declare-fun x311 () x4071)
(declare-fun x4505 () Bool)
(declare-fun x3723 () Real)
(declare-fun x3913 () Real)
(declare-fun x3360 () Bool)
(declare-fun x2110 () Real)
(declare-fun x2206 () Bool)
(declare-fun x2671 () Bool)
(declare-fun x1462 (Real) Real)
(declare-fun x1905 () Real)
(declare-fun x1521 () Bool)
(declare-fun x1402 () Real)
(declare-fun x1756 () Bool)
(declare-fun x3468 () Real)
(declare-fun x1954 () Bool)
(declare-fun x3504 () Real)
(declare-fun x1580 () Real)
(declare-fun x3353 () x4071)
(declare-fun x3993 () Real)
(declare-fun x2721 () Real)
(declare-fun x430 () Real)
(declare-fun x4951 () Real)
(declare-fun x5040 () Real)
(declare-fun x1260 () Bool)
(declare-fun x1036 () Real)
(declare-fun x4155 (x4071) Real)
(declare-fun x2374 () Bool)
(declare-fun x5377 () x4071)
(declare-fun x941 () Real)
(declare-fun x5387 () Real)
(declare-fun x3202 () Real)
(declare-fun x2181 () Bool)
(declare-fun x4568 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x523 () Bool)
(declare-fun x3316 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x4798 () Real)
(declare-fun x5047 () Bool)
(declare-fun x3610 () Real)
(declare-fun x1973 () Bool)
(declare-fun x2189 () Real)
(declare-fun x1572 () Bool)
(declare-fun x753 () Real)
(declare-fun x2910 () Bool)
(declare-fun x4709 () Real)
(declare-fun x4803 () Real)
(declare-fun x4817 () Real)
(declare-fun x4977 (Real) Real)
(declare-fun x3446 () Bool)
(declare-fun x3289 () Bool)
(declare-fun x2715 () Real)
(declare-fun x5229 () Bool)
(declare-fun x249 () Real)
(declare-fun x1256 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x840 () Real)
(declare-fun x4288 () Real)
(declare-fun x55 () Bool)
(declare-fun x220 () Real)
(declare-fun x2813 () Bool)
(declare-fun x3754 () Real)
(declare-fun x4218 () Bool)
(declare-fun x425 (Real) Real)
(declare-fun x3793 () Real)
(declare-fun x3062 () Real)
(declare-fun x1647 () Bool)
(declare-fun x1827 () Real)
(declare-fun x5153 () Real)
(declare-fun x5225 () x4071)
(declare-fun x4563 () Bool)
(declare-fun x3875 () Real)
(declare-fun x3234 () Real)
(declare-fun x4833 () Real)
(declare-fun x106 () Bool)
(declare-fun x3424 () Real)
(declare-fun x44 () Bool)
(declare-fun x3644 () Real)
(declare-fun x1613 () Bool)
(declare-fun x2393 () Real)
(declare-fun x250 () Bool)
(declare-fun x980 () Real)
(declare-fun x1490 () Real)
(declare-fun x824 () Bool)
(declare-fun x3258 () Bool)
(declare-fun x575 () Real)
(declare-fun x989 () Bool)
(declare-fun x2811 () Real)
(declare-fun x1707 () Bool)
(declare-fun x431 () Real)
(declare-fun x394 () Real)
(declare-fun x3736 () Real)
(declare-fun x4705 () Real)
(declare-fun x1454 () Bool)
(declare-fun x4732 () Real)
(declare-fun x1660 () Bool)
(declare-fun x632 () Real)
(declare-fun x3313 () Real)
(declare-fun x608 () Bool)
(declare-fun x5271 () Real)
(declare-fun x149 (x4071) Real)
(declare-fun x2515 () Bool)
(declare-fun x3739 (Real) Real)
(declare-fun x1877 () Real)
(declare-fun x1079 () Bool)
(declare-fun x1066 () Real)
(declare-fun x5266 (x4071) Real)
(declare-fun x1126 () Bool)
(declare-fun x4114 () Real)
(declare-fun x763 () Bool)
(declare-fun x5027 () Bool)
(declare-fun x4094 () Real)
(declare-fun x656 () Real)
(declare-fun x4309 () Real)
(declare-fun x3273 () Real)
(declare-fun x751 () Real)
(declare-fun x4934 () Real)
(declare-fun x3615 () Bool)
(declare-fun x90 () Bool)
(declare-fun x5082 () Bool)
(declare-fun x4787 () Real)
(declare-fun x4807 () Real)
(declare-fun x47 () Real)
(declare-fun x3938 () Bool)
(declare-fun x3074 () Real)
(declare-fun x2896 () Bool)
(declare-fun x5273 () Real)
(declare-fun x4909 () Real)
(declare-fun x2737 () Real)
(declare-fun x3655 () Bool)
(declare-fun x4620 (Real) Real)
(declare-fun x1914 () Real)
(declare-fun x691 () Bool)
(declare-fun x1773 () Real)
(declare-fun x74 () Real)
(declare-fun x4848 () Bool)
(declare-fun x3683 () Real)
(declare-fun x1768 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1466 (Real) Real)
(declare-fun x3251 () Bool)
(declare-fun x5284 () Bool)
(declare-fun x4386 () Real)
(declare-fun x749 () Real)
(declare-fun x1747 () Real)
(declare-fun x566 () Real)
(declare-fun x3342 () Real)
(declare-fun x1933 () Bool)
(declare-fun x1676 () Real)
(declare-fun x405 () Real)
(declare-fun x3713 () Bool)
(declare-fun x4105 () x4071)
(declare-fun x5392 () Real)
(declare-fun x3445 () Real)
(declare-fun x2056 (x4071) Real)
(declare-fun x1595 () Real)
(declare-fun x1712 () Bool)
(declare-fun x4997 () Bool)
(declare-fun x202 () Bool)
(declare-fun x10 () x4071)
(declare-fun x2703 () Bool)
(declare-fun x4570 () Bool)
(declare-fun x5021 () Real)
(declare-fun x1799 () Real)
(declare-fun x2652 () Real)
(declare-fun x2053 () Bool)
(declare-fun x4686 () Real)
(declare-fun x5323 () Real)
(declare-fun x5177 (Real) Real)
(declare-fun x2428 () Real)
(declare-fun x3106 () Real)
(declare-fun x5169 () Bool)
(declare-fun x3246 () Real)
(declare-fun x4991 () Real)
(declare-fun x1269 () Bool)
(declare-fun x3695 () Bool)
(declare-fun x3185 () Real)
(declare-fun x4788 () Real)
(declare-fun x5394 () Real)
(declare-fun x2149 () Bool)
(declare-fun x5005 () Bool)
(declare-fun x2912 () Real)
(declare-fun x2993 () Real)
(declare-fun x355 () Bool)
(declare-fun x1365 () Real)
(declare-fun x1390 () Real)
(declare-fun x4580 () Bool)
(declare-fun x1851 () Real)
(declare-fun x5058 () Bool)
(declare-fun x5351 () Real)
(declare-fun x5120 () Bool)
(declare-fun x4914 () Bool)
(declare-fun x483 () Bool)
(declare-fun x94 () x4071)
(declare-fun x219 () Real)
(declare-fun x522 () Bool)
(declare-fun x4226 () Real)
(declare-fun x893 () Bool)
(declare-fun x4251 () x4071)
(declare-fun x3805 () Real)
(declare-fun x2061 () Real)
(declare-fun x3931 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x4462 () Bool)
(declare-fun x2534 () Real)
(declare-fun x46 () Bool)
(declare-fun x2232 () Real)
(declare-fun x3336 () Bool)
(declare-fun x3797 () Real)
(declare-fun x2208 () Bool)
(declare-fun x4270 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x4574 () Bool)
(declare-fun x4615 () Real)
(declare-fun x1467 () Real)
(declare-fun x3250 () Bool)
(declare-fun x3300 () Real)
(declare-fun x2988 () Real)
(declare-fun x3982 (x4071) Real)
(declare-fun x1159 () Bool)
(declare-fun x3407 () Bool)
(declare-fun x2697 () Real)
(declare-fun x4702 () x4071)
(declare-fun x2324 () Real)
(declare-fun x2198 () Real)
(declare-fun x661 () Real)
(declare-fun x813 () Real)
(declare-fun x3045 () Real)
(declare-fun x724 () Bool)
(declare-fun x4203 () Real)
(declare-fun x3698 () Real)
(declare-fun x997 () Real)
(declare-fun x3141 () Bool)
(declare-fun x339 () Bool)
(declare-fun x5385 () Bool)
(declare-fun x828 () Real)
(declare-fun x536 () Real)
(declare-fun x977 () Real)
(declare-fun x2365 () Real)
(declare-fun x529 (Real) Real)
(declare-fun x2067 () Bool)
(declare-fun x5030 (x4071) Real)
(declare-fun x1198 () Real)
(declare-fun x5087 () Real)
(declare-fun x3176 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x5078 () Real)
(declare-fun x5045 () Real)
(declare-fun x3489 () Real)
(declare-fun x317 () Real)
(declare-fun x2287 () Real)
(declare-fun x1670 () Bool)
(declare-fun x2456 () Real)
(declare-fun x4320 () Real)
(declare-fun x2638 () Real)
(declare-fun x898 () Bool)
(declare-fun x4992 () Real)
(declare-fun x4655 () Real)
(declare-fun x3061 () Bool)
(declare-fun x336 () Bool)
(declare-fun x4507 () Real)
(declare-fun x1876 () Bool)
(declare-fun x4942 () Bool)
(declare-fun x993 () Bool)
(declare-fun x465 () Bool)
(declare-fun x3708 () Real)
(declare-fun x2855 () Bool)
(declare-fun x517 () Real)
(declare-fun x3188 () Real)
(declare-fun x2705 () Real)
(declare-fun x385 () Bool)
(declare-fun x2265 () Real)
(declare-fun x2920 () Real)
(declare-fun x905 () Real)
(declare-fun x3879 () Bool)
(declare-fun x3836 () Bool)
(declare-fun x5339 () Bool)
(declare-fun x3111 () Real)
(declare-fun x2951 () Bool)
(declare-fun x976 () Bool)
(declare-fun x3056 () Real)
(declare-fun x3884 () Real)
(declare-fun x5114 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x4583 () Bool)
(declare-fun x4894 () Real)
(declare-fun x2277 () Bool)
(declare-fun x4049 () Real)
(declare-fun x4101 () Real)
(declare-fun x2041 (x4071) Real)
(declare-fun x2579 () x4071)
(declare-fun x34 () Real)
(declare-fun x383 () Real)
(declare-fun x4238 () Real)
(declare-fun x1819 () Real)
(declare-fun x4308 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x1993 () Real)
(declare-fun x653 () Real)
(declare-fun x2756 () Bool)
(declare-fun x3412 () Real)
(declare-fun x4952 () Bool)
(declare-fun x5209 () Real)
(declare-fun x3036 () x4071)
(declare-fun x2840 () Bool)
(declare-fun x3477 () Real)
(declare-fun x3030 () Real)
(declare-fun x1796 (Real) Real)
(declare-fun x3926 () Real)
(declare-fun x3609 () x4071)
(declare-fun x3676 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x287 (Real) Real)
(declare-fun x1178 () Bool)
(declare-fun x776 () Bool)
(declare-fun x1037 () Real)
(declare-fun x3025 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x4498 () Bool)
(declare-fun x2953 () Real)
(declare-fun x1306 () Real)
(declare-fun x3978 () Bool)
(declare-fun x2841 () Real)
(declare-fun x3261 () Real)
(declare-fun x4706 () x4071)
(declare-fun x2647 () Real)
(declare-fun x4111 () Real)
(declare-fun x1343 () Bool)
(declare-fun x505 () Bool)
(declare-fun x4888 () Bool)
(declare-fun x2892 () Real)
(declare-fun x1557 () Real)
(declare-fun x38 () Real)
(declare-fun x293 () Bool)
(declare-fun x1724 () Real)
(declare-fun x5358 (Real) Real)
(declare-fun x314 () Real)
(declare-fun x4396 () Bool)
(declare-fun x3177 () Real)
(declare-fun x2373 () Bool)
(declare-fun x2426 () Real)
(declare-fun x858 () Real)
(declare-fun x1468 () Real)
(declare-fun x1310 () Real)
(declare-fun x364 () Real)
(declare-fun x5053 () Real)
(declare-fun x3640 () Real)
(declare-fun x276 () x4071)
(declare-fun x2843 () Real)
(declare-fun x3034 () Bool)
(declare-fun x780 () Real)
(declare-fun x655 () Bool)
(declare-fun x3000 () x4071)
(declare-fun x2766 () Real)
(declare-fun x2557 () Real)
(declare-fun x3620 () Real)
(declare-fun x4743 () Real)
(declare-fun x4217 () Real)
(declare-fun x1917 () Real)
(declare-fun x96 () Real)
(declare-fun x3936 () Bool)
(declare-fun x4672 () Bool)
(declare-fun x2299 () Real)
(declare-fun x826 () Real)
(declare-fun x966 () Real)
(declare-fun x2156 () Real)
(declare-fun x1789 () Real)
(declare-fun x3882 () Real)
(declare-fun x876 () Real)
(declare-fun x1046 () Real)
(declare-fun x338 () Bool)
(declare-fun x3859 () Bool)
(declare-fun x2142 () Real)
(declare-fun x2882 () Bool)
(declare-fun x1637 () Real)
(declare-fun x3173 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x4450 () Real)
(declare-fun x605 () Bool)
(declare-fun x2952 (Real) Real)
(declare-fun x4253 () Real)
(declare-fun x3794 () Real)
(declare-fun x1729 () Real)
(declare-fun x481 () Real)
(declare-fun x1944 () Real)
(declare-fun x4227 () Real)
(declare-fun x3773 () Bool)
(declare-fun x2923 () Bool)
(declare-fun x1681 (x4071) Real)
(declare-fun x4658 () Bool)
(declare-fun x729 () Real)
(declare-fun x407 () Real)
(declare-fun x4646 () Bool)
(declare-fun x4694 () Real)
(declare-fun x2100 () Real)
(declare-fun x3914 () Real)
(declare-fun x5002 () Real)
(declare-fun x1820 () Real)
(declare-fun x4885 () Real)
(declare-fun x80 () Real)
(declare-fun x4231 () Real)
(declare-fun x4422 () Real)
(declare-fun x3465 () Bool)
(declare-fun x2979 () x4071)
(declare-fun x4146 () Bool)
(declare-fun x3396 () Real)
(declare-fun x190 () Real)
(declare-fun x4604 () Real)
(declare-fun x4381 () Real)
(declare-fun x3339 () Real)
(declare-fun x4572 () Real)
(declare-fun x1854 () Real)
(declare-fun x2765 () Real)
(declare-fun x4869 () x4071)
(declare-fun x2835 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x283 () x4071)
(declare-fun x578 () Real)
(declare-fun x1215 () Real)
(declare-fun x2931 () Real)
(declare-fun x4027 () Real)
(declare-fun x1488 () Real)
(declare-fun x144 () Real)
(declare-fun x13 () Bool)
(declare-fun x2570 () Real)
(declare-fun x3278 () Bool)
(declare-fun x1357 () Real)
(declare-fun x888 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x4493 (x4071) Real)
(declare-fun x5007 () Bool)
(declare-fun x5278 () Real)
(declare-fun x4454 () x4071)
(declare-fun x5326 () Real)
(declare-fun x2958 () Bool)
(declare-fun x4650 () Bool)
(declare-fun x4537 () Real)
(declare-fun x207 () Bool)
(declare-fun x3778 () Real)
(declare-fun x5396 () Bool)
(declare-fun x3027 () Real)
(declare-fun x1823 () Real)
(declare-fun x2519 () Real)
(declare-fun x2628 () Bool)
(declare-fun x403 () Bool)
(declare-fun x3151 () Real)
(declare-fun x3400 () Real)
(declare-fun x2288 () Bool)
(declare-fun x3486 () Real)
(declare-fun x3603 () Bool)
(declare-fun x4419 () Bool)
(declare-fun x4367 () Bool)
(declare-fun x1575 () Real)
(declare-fun x4314 () Bool)
(declare-fun x4874 () Real)
(declare-fun x5347 () Real)
(declare-fun x3217 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x3447 () Real)
(declare-fun x3071 () Real)
(declare-fun x1758 () Real)
(declare-fun x1493 () Real)
(declare-fun x4875 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x4451 () Bool)
(declare-fun x3157 (Real) Real)
(declare-fun x2577 () Bool)
(declare-fun x4760 () Real)
(declare-fun x4826 () Real)
(declare-fun x2098 () Real)
(declare-fun x1916 () Real)
(declare-fun x4405 () Bool)
(declare-fun x4180 () Real)
(declare-fun x4838 () Bool)
(declare-fun x618 () Bool)
(declare-fun x2383 () Real)
(declare-fun x4318 () Real)
(declare-fun x5057 () Real)
(declare-fun x2791 () Real)
(declare-fun x2806 () Real)
(declare-fun x2780 () Real)
(declare-fun x1270 () Real)
(declare-fun x129 () Real)
(declare-fun x5072 () Bool)
(declare-fun x951 () Real)
(declare-fun x4503 () Bool)
(declare-fun x2810 () Real)
(declare-fun x4742 () Real)
(declare-fun x4520 () Real)
(declare-fun x4222 () Real)
(declare-fun x3860 () Real)
(declare-fun x2716 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x2508 (x4071) Real)
(declare-fun x1410 () Bool)
(declare-fun x1307 () Real)
(declare-fun x4766 (x4071) Real)
(declare-fun x1233 () Bool)
(declare-fun x2581 () Real)
(declare-fun x3210 () Bool)
(declare-fun x4179 () Real)
(declare-fun x5253 () Bool)
(declare-fun x4947 () Bool)
(declare-fun x2738 () Real)
(declare-fun x2844 () x4071)
(declare-fun x3152 () Real)
(declare-fun x1478 () Real)
(declare-fun x222 () Real)
(declare-fun x580 () Real)
(declare-fun x674 () Bool)
(declare-fun x3259 () Bool)
(declare-fun x3701 () x4071)
(declare-fun x1846 () Bool)
(declare-fun x4166 () Real)
(declare-fun x2138 () Bool)
(declare-fun x5068 () Real)
(declare-fun x1317 () Bool)
(declare-fun x1951 () Real)
(declare-fun x4595 () Real)
(declare-fun x2763 () Real)
(declare-fun x307 () Bool)
(declare-fun x991 () x4071)
(declare-fun x4051 () Bool)
(declare-fun x442 () Real)
(declare-fun x2575 () Bool)
(declare-fun x829 () Real)
(declare-fun x4437 () Real)
(declare-fun x4086 () Real)
(declare-fun x2004 () Bool)
(declare-fun x130 () Real)
(declare-fun x3605 () Real)
(declare-fun x2881 () Bool)
(declare-fun x4332 () Real)
(declare-fun x849 () Real)
(declare-fun x244 () Real)
(declare-fun x1129 () Real)
(declare-fun x1735 () Real)
(declare-fun x294 () Real)
(declare-fun x2783 () Real)
(declare-fun x1502 () Real)
(declare-fun x5003 () Bool)
(declare-fun x1588 () Real)
(declare-fun x4243 () Bool)
(declare-fun x103 () Real)
(declare-fun x5118 () Bool)
(declare-fun x5121 () x4071)
(declare-fun x704 () Real)
(declare-fun x2928 (Real) Real)
(declare-fun x3663 () Real)
(declare-fun x1220 () Bool)
(declare-fun x3815 () Bool)
(declare-fun x3662 () x4071)
(declare-fun x3593 () x4071)
(declare-fun x3705 () Real)
(declare-fun x4506 () Real)
(declare-fun x3031 () Real)
(declare-fun x4639 () Real)
(declare-fun x2364 () Bool)
(declare-fun x4093 () Real)
(declare-fun x4725 () Real)
(declare-fun x1327 () Real)
(declare-fun x3021 () Real)
(declare-fun x3570 () Bool)
(declare-fun x457 () Real)
(declare-fun x262 () Bool)
(declare-fun x5124 (Real) Real)
(declare-fun x2814 () Real)
(declare-fun x1243 () Real)
(declare-fun x2786 () Real)
(declare-fun x1934 () Real)
(declare-fun x4338 () Bool)
(declare-fun x4718 (x4071) Real)
(declare-fun x1785 () Real)
(declare-fun x2525 () Bool)
(declare-fun x2955 () Real)
(declare-fun x1321 () Bool)
(declare-fun x4256 () Real)
(declare-fun x192 () Real)
(declare-fun x3265 () Real)
(declare-fun x995 () Bool)
(declare-fun x907 () Bool)
(declare-fun x23 () Bool)
(declare-fun x996 () Real)
(declare-fun x4224 () Real)
(declare-fun x2143 () Real)
(declare-fun x827 () Real)
(declare-fun x1473 () Real)
(declare-fun x5150 () Bool)
(declare-fun x4727 (Real) Real)
(declare-fun x3430 () Real)
(declare-fun x2992 () Real)
(declare-fun x3696 () Real)
(declare-fun x36 () Real)
(declare-fun x3013 () Real)
(declare-fun x4335 () Bool)
(declare-fun x4082 () Bool)
(declare-fun x3954 () Real)
(declare-fun x1335 () x4071)
(declare-fun x3466 () Real)
(declare-fun x3706 () Bool)
(declare-fun x4745 () Real)
(declare-fun x1347 () Real)
(declare-fun x4296 () Real)
(declare-fun x3266 () x4071)
(declare-fun x391 () Real)
(declare-fun x2230 () Real)
(declare-fun x1308 () Bool)
(declare-fun x2592 () Bool)
(declare-fun x5365 () Real)
(declare-fun x1274 () Bool)
(declare-fun x2751 () x4071)
(declare-fun x258 () Real)
(declare-fun x4564 () Bool)
(declare-fun x3607 () Bool)
(declare-fun x58 () Real)
(declare-fun x4863 () Real)
(declare-fun x2419 () Real)
(declare-fun x1901 () Real)
(declare-fun x2836 () Real)
(declare-fun x458 () Real)
(declare-fun x3866 () Bool)
(declare-fun x1067 () x4071)
(declare-fun x4302 () Real)
(declare-fun x2033 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x3524 () Real)
(declare-fun x1050 () Real)
(declare-fun x4690 () Real)
(declare-fun x2630 () Real)
(declare-fun x1597 () Real)
(declare-fun x4248 () Bool)
(declare-fun x146 () x4071)
(declare-fun x3820 () Bool)
(declare-fun x1386 () Real)
(declare-fun x2116 () Bool)
(declare-fun x1440 () x4071)
(declare-fun x779 () Real)
(declare-fun x931 () Bool)
(declare-fun x641 () Bool)
(declare-fun x2443 () Bool)
(declare-fun x4855 () Real)
(declare-fun x1878 (Real) Real)
(declare-fun x999 () Bool)
(declare-fun x1339 (Real) Real)
(declare-fun x3678 () Real)
(declare-fun x3929 () Real)
(declare-fun x4002 () Bool)
(declare-fun x3735 () Real)
(declare-fun x680 () Real)
(declare-fun x5367 () Real)
(declare-fun x1708 () Real)
(declare-fun x2294 () Real)
(declare-fun x1538 () Real)
(declare-fun x1883 () Real)
(declare-fun x1203 () Real)
(declare-fun x3834 () Real)
(declare-fun x3877 () Real)
(declare-fun x3617 () Real)
(declare-fun x946 () Real)
(declare-fun x3483 () Real)
(declare-fun x4399 () Real)
(declare-fun x3575 () Real)
(declare-fun x2937 () Real)
(declare-fun x4291 () Bool)
(declare-fun x1810 () Real)
(declare-fun x1314 () x4071)
(declare-fun x2038 () Real)
(declare-fun x2522 () Real)
(declare-fun x1272 () x4071)
(declare-fun x3139 () Real)
(declare-fun x2268 () x4071)
(declare-fun x2605 () x4071)
(declare-fun x4375 () Real)
(declare-fun x3671 () Real)
(declare-fun x432 () x4071)
(declare-fun x5104 () Bool)
(declare-fun x1594 () Real)
(declare-fun x89 () Bool)
(declare-fun x143 () Bool)
(declare-fun x3135 (Real Real) Real)
(declare-fun x4455 () Real)
(declare-fun x3315 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x2080 () Bool)
(declare-fun x4004 () Real)
(declare-fun x1448 () Real)
(declare-fun x2972 () Real)
(declare-fun x3357 () Bool)
(declare-fun x3020 () Real)
(declare-fun x4550 () Real)
(declare-fun x3165 () Bool)
(declare-fun x4201 () Bool)
(declare-fun x4968 () Real)
(declare-fun x3019 () Real)
(declare-fun x785 () Bool)
(declare-fun x246 () Real)
(declare-fun x3101 () Real)
(declare-fun x3850 () Real)
(declare-fun x4045 () Real)
(declare-fun x3169 () Real)
(declare-fun x2566 () Bool)
(declare-fun x1738 () x4071)
(declare-fun x3749 () Real)
(declare-fun x5233 () Real)
(declare-fun x2199 () Bool)
(declare-fun x2631 () Real)
(declare-fun x3148 () Real)
(declare-fun x5065 () Real)
(declare-fun x1609 () Real)
(declare-fun x4333 () Real)
(declare-fun x194 () Real)
(declare-fun x3050 () x4071)
(declare-fun x4773 () Real)
(declare-fun x4890 () Real)
(declare-fun x2069 () Real)
(declare-fun x767 () Bool)
(declare-fun x3902 () Real)
(declare-fun x4711 () Real)
(declare-fun x2352 () Real)
(declare-fun x4095 (x4071) Real)
(declare-fun x4695 () Real)
(declare-fun x1924 () Real)
(declare-fun x2469 () Bool)
(declare-fun x770 (Real) Real)
(declare-fun x3451 () x4071)
(declare-fun x1904 () Bool)
(declare-fun x4599 () Bool)
(declare-fun x3601 () Real)
(declare-fun x4285 () Real)
(declare-fun x1612 () Real)
(declare-fun x1424 () Real)
(declare-fun x1380 () Real)
(declare-fun x4573 () Bool)
(declare-fun x2980 () Bool)
(declare-fun x721 () Real)
(declare-fun x4132 () Real)
(declare-fun x236 () Bool)
(declare-fun x4534 () Real)
(declare-fun x21 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x1527 () Real)
(declare-fun x1262 () Real)
(declare-fun x4748 () Real)
(declare-fun x3535 () Bool)
(declare-fun x4867 () Bool)
(declare-fun x4679 () Real)
(declare-fun x1062 () Real)
(declare-fun x3716 () Bool)
(declare-fun x4794 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x2981 () Real)
(declare-fun x3848 () Real)
(declare-fun x2439 () Bool)
(declare-fun x4881 () Real)
(declare-fun x199 () Real)
(declare-fun x2434 () Bool)
(declare-fun x3732 () Real)
(declare-fun x660 () Real)
(declare-fun x1918 () Bool)
(declare-fun x5126 () Bool)
(declare-fun x537 () Bool)
(declare-fun x4813 () x4071)
(declare-fun x5054 () Real)
(declare-fun x540 () Bool)
(declare-fun x105 () Real)
(declare-fun x2424 () Bool)
(declare-fun x490 () Real)
(declare-fun x741 () Real)
(declare-fun x654 () Real)
(declare-fun x5138 () Real)
(declare-fun x879 () Bool)
(declare-fun x1369 () Real)
(declare-fun x4715 () Real)
(declare-fun x4944 () Real)
(declare-fun x5329 () Real)
(declare-fun x1959 () Real)
(declare-fun x3759 () x4071)
(declare-fun x4687 () Real)
(declare-fun x4673 () Bool)
(declare-fun x4187 () Real)
(declare-fun x4920 () Bool)
(declare-fun x2698 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x4656 () Real)
(declare-fun x5 () Real)
(declare-fun x2254 () Bool)
(declare-fun x5020 () Bool)
(declare-fun x72 () Bool)
(declare-fun x1313 () Real)
(declare-fun x1181 () Real)
(declare-fun x4596 () Real)
(declare-fun x5152 () Bool)
(declare-fun x4185 () x4071)
(declare-fun x3126 () Bool)
(declare-fun x3105 () Real)
(declare-fun x2633 () Real)
(declare-fun x4245 () Real)
(declare-fun x4662 () Bool)
(declare-fun x2047 () Bool)
(declare-fun x3269 () Real)
(declare-fun x3582 () Bool)
(declare-fun x3762 () Real)
(declare-fun x3150 () Real)
(declare-fun x5125 () Real)
(declare-fun x3109 () Bool)
(declare-fun x4566 () Real)
(declare-fun x2197 () Real)
(declare-fun x3312 () x4071)
(declare-fun x2134 () Real)
(declare-fun x5235 () Real)
(declare-fun x1051 (x4071) Real)
(declare-fun x2915 () Real)
(declare-fun x2861 () Real)
(declare-fun x4457 () Real)
(declare-fun x1806 () Real)
(declare-fun x5010 () x4071)
(declare-fun x1677 () Bool)
(declare-fun x5243 () Real)
(declare-fun x2250 () Real)
(declare-fun x1330 () Bool)
(declare-fun x1558 () Real)
(declare-fun x857 () Bool)
(declare-fun x2686 () Real)
(declare-fun x2436 () Real)
(declare-fun x1511 () Real)
(declare-fun x3359 (Real) Real)
(declare-fun x3307 (Real) Real)
(declare-fun x4933 () Real)
(declare-fun x2879 () Real)
(declare-fun x5080 () Real)
(declare-fun x1825 () Real)
(declare-fun x4200 () Real)
(declare-fun x1977 () Real)
(declare-fun x1415 () Bool)
(declare-fun x2873 () Real)
(declare-fun x1465 () Bool)
(declare-fun x4048 () Real)
(declare-fun x2514 (Real) Real)
(declare-fun x1920 () Real)
(declare-fun x3474 (Real) Real)
(declare-fun x350 () Bool)
(declare-fun x507 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x739 () x4071)
(declare-fun x3066 () Real)
(declare-fun x1374 () Bool)
(declare-fun x3865 () x4071)
(declare-fun x4964 () Real)
(declare-fun x4722 () Real)
(declare-fun x5096 () Real)
(declare-fun x3847 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x2729 () Bool)
(declare-fun x669 () Real)
(declare-fun x5081 () Real)
(declare-fun x4652 () Bool)
(declare-fun x985 () Real)
(declare-fun x22 () Bool)
(declare-fun x416 (x4071) Real)
(declare-fun x579 () Bool)
(declare-fun x703 () Real)
(declare-fun x1779 () Real)
(declare-fun x5136 () Real)
(declare-fun x1211 () Bool)
(declare-fun x2351 (x4071) Real)
(declare-fun x424 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x800 () Real)
(declare-fun x2068 () Bool)
(declare-fun x3702 () Bool)
(declare-fun x4819 () Bool)
(declare-fun x3962 () Bool)
(declare-fun x1863 () Real)
(declare-fun x719 () Real)
(declare-fun x5156 () Real)
(declare-fun x3473 () Bool)
(declare-fun x4487 () Real)
(declare-fun x4392 () x4071)
(declare-fun x4395 () Real)
(declare-fun x2359 () Real)
(declare-fun x4485 () Bool)
(declare-fun x528 () Bool)
(declare-fun x4871 () Bool)
(declare-fun x588 (Real) Real)
(declare-fun x2718 () Real)
(declare-fun x5019 () Real)
(declare-fun x2880 () Bool)
(declare-fun x4882 () Real)
(declare-fun x2593 () Real)
(declare-fun x1579 (Real) Real)
(declare-fun x1679 () Real)
(declare-fun x3943 () Real)
(declare-fun x3373 () Bool)
(declare-fun x3904 () Real)
(declare-fun x4178 () x4071)
(declare-fun x3333 () Bool)
(declare-fun x4144 () Real)
(declare-fun x4412 () Real)
(declare-fun x3939 (Real) Real)
(declare-fun x720 (Real) Real)
(declare-fun x4025 () Bool)
(declare-fun x5155 () Bool)
(declare-fun x4181 () Real)
(declare-fun x927 () x4071)
(declare-fun x2875 () Bool)
(declare-fun x3828 () Real)
(declare-fun x4464 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x2297 () Real)
(declare-fun x2621 () Real)
(declare-fun x2860 () Real)
(declare-fun x4398 () Real)
(declare-fun x4556 () Bool)
(declare-fun x463 () Real)
(declare-fun x3717 () Bool)
(declare-fun x568 () Bool)
(declare-fun x2342 () Bool)
(declare-fun x2913 () Real)
(declare-fun x3080 () Real)
(declare-fun x2933 () Bool)
(declare-fun x4283 () Real)
(declare-fun x5228 () Real)
(declare-fun x2320 () Real)
(declare-fun x4140 () Real)
(declare-fun x4946 () x4071)
(declare-fun x4907 () Real)
(declare-fun x4301 () Bool)
(declare-fun x41 () Real)
(declare-fun x3772 () Real)
(declare-fun x3973 () Real)
(declare-fun x2396 (Real) Real)
(declare-fun x497 () Real)
(declare-fun x5038 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x3544 () Real)
(declare-fun x4110 () Real)
(declare-fun x2318 () Real)
(declare-fun x3680 () Real)
(declare-fun x5190 () Bool)
(declare-fun x4734 () Real)
(declare-fun x1240 () Bool)
(declare-fun x5338 () Real)
(declare-fun x4547 () x4071)
(declare-fun x1069 () Real)
(declare-fun x4064 (x4071) Real)
(declare-fun x889 (Real) Real)
(declare-fun x972 () Real)
(declare-fun x83 () Bool)
(declare-fun x3164 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x3893 () Real)
(declare-fun x737 () Bool)
(declare-fun x3347 () Real)
(declare-fun x3963 () Real)
(declare-fun x4336 () Real)
(declare-fun x4116 (Real) Real)
(declare-fun x811 () x4071)
(declare-fun x3562 (Real) Real)
(declare-fun x3915 () Real)
(declare-fun x2400 () x4071)
(declare-fun x203 () Real)
(declare-fun x835 () x4071)
(declare-fun x3364 () Real)
(declare-fun x2105 () Bool)
(declare-fun x2819 () Real)
(declare-fun x374 (Real) Real)
(declare-fun x1616 () Bool)
(declare-fun x556 () Real)
(declare-fun x783 () Bool)
(declare-fun x2303 () Real)
(declare-fun x2285 () Real)
(declare-fun x2518 () Bool)
(declare-fun x3006 () Bool)
(declare-fun x521 () Real)
(declare-fun x3 () Real)
(declare-fun x814 () Real)
(declare-fun x1717 () Bool)
(declare-fun x2856 () Bool)
(declare-fun x1888 () Real)
(declare-fun x4167 () Real)
(declare-fun x274 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x4784 () Real)
(declare-fun x1879 () Bool)
(declare-fun x984 (Real) Real)
(declare-fun x4525 () Real)
(declare-fun x3776 (x4071) Real)
(declare-fun x3434 () Real)
(declare-fun x5255 () Real)
(declare-fun x2812 () Real)
(declare-fun x5257 () Real)
(declare-fun x942 () Real)
(declare-fun x2804 () Real)
(declare-fun x5042 () Bool)
(declare-fun x4284 (Real) Real)
(declare-fun x513 () x4071)
(declare-fun x3238 () Real)
(declare-fun x4038 () x4071)
(declare-fun x4912 () Bool)
(declare-fun x2361 () Real)
(declare-fun x1232 () Real)
(declare-fun x5294 () Real)
(declare-fun x2427 (Real) Real)
(declare-fun x1376 () Bool)
(declare-fun x4475 () Real)
(declare-fun x2801 () Bool)
(declare-fun x1798 () Real)
(declare-fun x1384 () Real)
(declare-fun x673 () Bool)
(declare-fun x2375 () Real)
(declare-fun x5070 () Bool)
(declare-fun x1853 (Real) Real)
(declare-fun x5185 () Real)
(declare-fun x1113 () Real)
(declare-fun x5184 () Real)
(declare-fun x760 () Real)
(declare-fun x1586 () Real)
(declare-fun x3591 () Bool)
(declare-fun x3159 () Real)
(declare-fun x406 () x4071)
(declare-fun x3851 () Real)
(declare-fun x1912 () Real)
(declare-fun x2477 () Real)
(declare-fun x1915 () Bool)
(declare-fun x4707 () Real)
(declare-fun x4988 () Bool)
(declare-fun x615 () Real)
(declare-fun x3089 () Real)
(declare-fun x4223 () Real)
(declare-fun x2627 () Bool)
(declare-fun x1775 () Real)
(declare-fun x2337 () Real)
(declare-fun x2614 () Real)
(declare-fun x709 () Real)
(declare-fun x4236 () Bool)
(declare-fun x713 () Bool)
(declare-fun x515 (x4071) Real)
(declare-fun x5059 () Real)
(declare-fun x884 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x4474 (x4071) Real)
(declare-fun x4565 () Bool)
(declare-fun x4844 () Real)
(declare-fun x327 () Real)
(declare-fun x4039 () Real)
(declare-fun x2223 () Real)
(declare-fun x2624 () Bool)
(declare-fun x139 () Real)
(declare-fun x4262 () Real)
(declare-fun x3153 () Real)
(declare-fun x1714 () Real)
(declare-fun x2949 () Bool)
(declare-fun x649 () x4071)
(declare-fun x2259 () Real)
(declare-fun x3881 () Bool)
(declare-fun x4832 () Real)
(declare-fun x3462 () Real)
(declare-fun x1039 () Real)
(declare-fun x1940 () Real)
(declare-fun x1857 () Real)
(declare-fun x1550 () Real)
(declare-fun x4365 () Real)
(declare-fun x1096 () Real)
(declare-fun x1341 () Bool)
(declare-fun x4665 () Real)
(declare-fun x5275 () Real)
(declare-fun x3158 () Real)
(declare-fun x910 () Real)
(declare-fun x3242 () Bool)
(declare-fun x4541 () Real)
(declare-fun x2708 () Bool)
(declare-fun x1025 () Real)
(declare-fun x1749 () Real)
(declare-fun x1099 () Real)
(declare-fun x4439 () Real)
(declare-fun x1559 () Bool)
(declare-fun x2825 (Real) Real)
(declare-fun x4108 () Real)
(declare-fun x663 () Real)
(declare-fun x172 () Real)
(declare-fun x2037 () Real)
(declare-fun x2609 () x4071)
(declare-fun x2492 () Real)
(declare-fun x3726 () Real)
(declare-fun x2437 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x4479 () Bool)
(declare-fun x628 () Real)
(declare-fun x1784 () Bool)
(declare-fun x2890 () Real)
(declare-fun x3686 () Real)
(declare-fun x5111 () Real)
(declare-fun x5069 () Bool)
(declare-fun x590 () Real)
(declare-fun x1848 () Real)
(declare-fun x3995 () Real)
(declare-fun x5165 () x4071)
(declare-fun x584 () Real)
(declare-fun x4133 () Real)
(declare-fun x1496 () Real)
(declare-fun x5269 () Real)
(declare-fun x3861 () Real)
(declare-fun x1991 () Bool)
(declare-fun x4342 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x4390 () Real)
(declare-fun x1284 () Real)
(declare-fun x4353 (Real) Real)
(declare-fun x2713 () Real)
(declare-fun x1625 () Bool)
(declare-fun x3742 () Real)
(declare-fun x3460 () Bool)
(declare-fun x622 () Real)
(declare-fun x4609 () Real)
(declare-fun x4825 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x3244 () Bool)
(declare-fun x1107 () Real)
(declare-fun x3306 (x4071) Real)
(declare-fun x2065 () Real)
(declare-fun x825 () x4071)
(declare-fun x5187 () Bool)
(declare-fun x524 () Real)
(declare-fun x3274 () Bool)
(declare-fun x5370 () Bool)
(declare-fun x4622 () Real)
(declare-fun x935 () Real)
(declare-fun x4052 () Bool)
(declare-fun x2015 () Real)
(declare-fun x4494 () Real)
(declare-fun x118 () Real)
(declare-fun x5264 () Real)
(declare-fun x462 () Real)
(declare-fun x2587 () Real)
(declare-fun x1285 () Real)
(declare-fun x851 () Real)
(declare-fun x4424 () Real)
(declare-fun x2314 () Real)
(declare-fun x4030 () Real)
(declare-fun x4878 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x1252 () Real)
(declare-fun x4987 () Bool)
(declare-fun x1387 () Real)
(declare-fun x2965 () Real)
(declare-fun x1843 () Real)
(declare-fun x5315 () Real)
(declare-fun x4998 () Bool)
(declare-fun x2897 () Real)
(declare-fun x4891 () Real)
(declare-fun x4448 () Real)
(declare-fun x3715 () Real)
(declare-fun x2380 () Real)
(declare-fun x1264 (x4071) Real)
(declare-fun x4120 () Real)
(declare-fun x4037 () Bool)
(declare-fun x3206 () Real)
(declare-fun x3633 () x4071)
(declare-fun x1268 () Real)
(declare-fun x690 () Real)
(declare-fun x5241 () x4071)
(declare-fun x1560 () Bool)
(declare-fun x561 () Real)
(declare-fun x2362 () Real)
(declare-fun x4589 () Bool)
(declare-fun x4252 () Real)
(declare-fun x554 () Real)
(declare-fun x638 () Real)
(declare-fun x154 (Real) Real)
(declare-fun x1942 () Bool)
(declare-fun x3666 () Real)
(declare-fun x900 () Real)
(declare-fun x4429 () Real)
(declare-fun x1273 () Real)
(declare-fun x2507 () Real)
(declare-fun x2511 () Bool)
(declare-fun x1239 () Real)
(declare-fun x1626 () Real)
(declare-fun x1821 () Real)
(declare-fun x3533 () Real)
(declare-fun x1447 () Bool)
(declare-fun x576 () Bool)
(declare-fun x4619 () Real)
(declare-fun x2486 () Real)
(declare-fun x3162 () Real)
(declare-fun x5196 () Bool)
(declare-fun x5280 () Real)
(declare-fun x5208 () Real)
(declare-fun x3499 () Real)
(declare-fun x3137 () Bool)
(declare-fun x2435 () Real)
(declare-fun x715 () Bool)
(declare-fun x3264 () Real)
(declare-fun x191 () Real)
(declare-fun x511 () Bool)
(declare-fun x5151 () Real)
(declare-fun x4269 () Bool)
(declare-fun x625 (Real) Real)
(declare-fun x4716 (Real) Real)
(declare-fun x3003 () Real)
(declare-fun x2846 () Real)
(declare-fun x1226 () Bool)
(declare-fun x3296 () Real)
(declare-fun x1893 () Bool)
(declare-fun x2987 () Bool)
(declare-fun x2616 () Real)
(declare-fun x943 () x4071)
(declare-fun x5354 () Real)
(declare-fun x1600 () Real)
(declare-fun x2746 () Real)
(declare-fun x4741 () Bool)
(declare-fun x4561 (Real) Real)
(declare-fun x3932 () Real)
(declare-fun x2248 () Bool)
(declare-fun x2274 () Real)
(declare-fun x2474 (Real) Real)
(declare-fun x1288 () Real)
(declare-fun x1684 () Bool)
(declare-fun x2735 () Bool)
(declare-fun x3867 () Bool)
(declare-fun x865 () Real)
(declare-fun x1348 () Bool)
(declare-fun x1435 () Real)
(declare-fun x263 () Real)
(declare-fun x4076 () Real)
(declare-fun x3567 () Real)
(declare-fun x1546 () Real)
(declare-fun x3002 (Real) Real)
(declare-fun x701 () Real)
(declare-fun x3975 () Real)
(declare-fun x1792 () Real)
(declare-fun x5279 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x4361 () Real)
(declare-fun x3765 () Real)
(declare-fun x3439 () Bool)
(declare-fun x162 () x4071)
(declare-fun x3693 () Real)
(declare-fun x198 () Bool)
(declare-fun x2820 () Real)
(declare-fun x4861 () Real)
(declare-fun x1990 () Bool)
(declare-fun x3216 () Bool)
(declare-fun x2604 () Real)
(declare-fun x3431 () Bool)
(declare-fun x3041 () Bool)
(declare-fun x4113 () Real)
(declare-fun x545 () Bool)
(declare-fun x1360 () Real)
(declare-fun x2673 () Bool)
(declare-fun x3215 (x4071) Real)
(declare-fun x5298 () Real)
(declare-fun x508 () Real)
(declare-fun x1923 () Bool)
(declare-fun x1329 (Real) Real)
(declare-fun x4476 () Real)
(declare-fun x4790 () Real)
(declare-fun x1010 () Bool)
(declare-fun x4355 () Real)
(declare-fun x4068 () Real)
(declare-fun x2430 (Real) Real)
(declare-fun x1687 () Real)
(declare-fun x137 () Bool)
(declare-fun x1433 () Real)
(declare-fun x2602 () Bool)
(declare-fun x229 (x4071) Real)
(declare-fun x1640 () Bool)
(declare-fun x975 () Bool)
(declare-fun x2967 () x4071)
(declare-fun x1482 () Real)
(declare-fun x3940 () Real)
(declare-fun x1551 () Bool)
(declare-fun x377 () Real)
(declare-fun x60 () Bool)
(declare-fun x3976 () Real)
(declare-fun x4299 (Real) Real)
(declare-fun x885 () Bool)
(declare-fun x4112 () Bool)
(declare-fun x8 () Bool)
(declare-fun x4685 () Real)
(declare-fun x5212 () x4071)
(declare-fun x2707 (x4071) Real)
(declare-fun x5262 () Real)
(declare-fun x5340 () Real)
(declare-fun x2501 () Real)
(declare-fun x1669 () Bool)
(declare-fun x2334 () Real)
(declare-fun x3642 () Real)
(declare-fun x664 () Bool)
(declare-fun x4250 () Bool)
(declare-fun x2447 () Real)
(declare-fun x4779 () x4071)
(declare-fun x2438 () x4071)
(declare-fun x5183 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x454 () x4071)
(declare-fun x2212 () Real)
(declare-fun x5123 () Real)
(declare-fun x4480 () x4071)
(declare-fun x3967 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x344 () Real)
(declare-fun x4524 () Real)
(declare-fun x4822 () Real)
(declare-fun x54 () Bool)
(declare-fun x5099 () Bool)
(declare-fun x2554 () Bool)
(declare-fun x4883 () Real)
(declare-fun x1873 () Real)
(declare-fun x2152 () Real)
(declare-fun x1383 () Real)
(declare-fun x1787 () Bool)
(declare-fun x49 () x4071)
(declare-fun x1554 () Bool)
(declare-fun x4793 (Real) Real)
(declare-fun x3082 () Real)
(declare-fun x2660 () Bool)
(declare-fun x4815 () Real)
(declare-fun x4764 () Real)
(declare-fun x175 () x4071)
(declare-fun x3052 () Real)
(declare-fun x3903 () Bool)
(declare-fun x3270 () Real)
(declare-fun x81 () Real)
(declare-fun x873 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x208 () Bool)
(declare-fun x2346 () Real)
(declare-fun x3257 () x4071)
(declare-fun x5043 () Bool)
(declare-fun x3738 () Bool)
(declare-fun x185 () Real)
(declare-fun x205 () Real)
(declare-fun x1114 () x4071)
(declare-fun x4423 () Bool)
(declare-fun x4165 () Real)
(declare-fun x2042 () Bool)
(declare-fun x4343 () Bool)
(declare-fun x3098 () Real)
(declare-fun x3075 () Bool)
(declare-fun x445 () Bool)
(declare-fun x3022 () x4071)
(declare-fun x3344 (Real) Real)
(declare-fun x4371 () Bool)
(declare-fun x3399 () Real)
(declare-fun x5145 () Bool)
(declare-fun x3658 () Real)
(declare-fun x3789 () Bool)
(declare-fun x842 () Real)
(declare-fun x4731 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x4143 () Bool)
(declare-fun x5281 () Real)
(declare-fun x2885 () x4071)
(declare-fun x2267 () Bool)
(declare-fun x5063 () Bool)
(declare-fun x1593 () Real)
(declare-fun x295 () Real)
(declare-fun x1765 () Bool)
(declare-fun x3236 () Bool)
(declare-fun x4136 () Real)
(declare-fun x2262 () Bool)
(declare-fun x452 () Real)
(declare-fun x4018 () Bool)
(declare-fun x5202 () Real)
(declare-fun x1319 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1636 () Real)
(declare-fun x2794 () Bool)
(declare-fun x2440 () Real)
(declare-fun x4974 () Real)
(declare-fun x1245 () Bool)
(declare-fun x3874 () Real)
(declare-fun x854 () Real)
(declare-fun x1179 () Real)
(declare-fun x3297 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x4368 () Real)
(declare-fun x3898 () Bool)
(declare-fun x3813 () Bool)
(declare-fun x3595 () x4071)
(declare-fun x5195 () Bool)
(declare-fun x2465 () Real)
(declare-fun x4441 () Real)
(declare-fun x4777 () Bool)
(declare-fun x3826 () Real)
(declare-fun x3305 (x4071) Real)
(declare-fun x983 () Real)
(declare-fun x5025 () Bool)
(declare-fun x5327 () Bool)
(declare-fun x157 () x4071)
(declare-fun x4780 () Real)
(declare-fun x3897 () Bool)
(declare-fun x1359 () Real)
(declare-fun x474 () Real)
(declare-fun x4433 () Bool)
(declare-fun x1443 () Real)
(declare-fun x4502 () Bool)
(declare-fun x322 () Bool)
(declare-fun x460 () Bool)
(declare-fun x4124 () Real)
(declare-fun x5231 () Bool)
(declare-fun x2431 () Bool)
(declare-fun x4057 () Real)
(declare-fun x2907 () Real)
(declare-fun x4310 () Real)
(declare-fun x1523 () Real)
(declare-fun x2258 () Real)
(declare-fun x2076 () Real)
(declare-fun x2403 () x4071)
(declare-fun x1282 () Real)
(declare-fun x3761 () Real)
(declare-fun x3751 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x870 () Bool)
(declare-fun x2626 () Real)
(declare-fun x5242 () Real)
(declare-fun x5194 () Bool)
(declare-fun x4789 () Real)
(declare-fun x3067 () Real)
(declare-fun x4852 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x3516 () Real)
(declare-fun x1658 () Real)
(declare-fun x852 () Real)
(declare-fun x4759 () Real)
(declare-fun x2868 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x3576 (x4071) Real)
(declare-fun x1404 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x180 () Real)
(declare-fun x1480 () Bool)
(declare-fun x288 () Real)
(declare-fun x5386 () Real)
(declare-fun x342 () Real)
(declare-fun x683 () Real)
(declare-fun x4966 () Real)
(declare-fun x2457 (x4071) Real)
(declare-fun x3374 () Real)
(declare-fun x3341 () Real)
(declare-fun x5051 () x4071)
(declare-fun x4585 () Real)
(declare-fun x3065 () Real)
(declare-fun x227 () Real)
(declare-fun x4828 () Real)
(declare-fun x1035 () Real)
(declare-fun x1009 () Real)
(declare-fun x3737 () Real)
(declare-fun x3527 () Bool)
(declare-fun x4488 () Real)
(declare-fun x141 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x2802 () Real)
(declare-fun x1688 () Real)
(declare-fun x2599 () Bool)
(declare-fun x5371 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x4484 () Real)
(declare-fun x1542 (x4071) Real)
(declare-fun x1438 () Real)
(declare-fun x138 () Bool)
(declare-fun x2218 () Real)
(declare-fun x3331 () Real)
(declare-fun x4478 () Real)
(declare-fun x1932 () Bool)
(declare-fun x998 () Real)
(declare-fun x4066 (Real) Real)
(declare-fun x1754 () Bool)
(declare-fun x86 () Real)
(declare-fun x3890 () Real)
(declare-fun x3201 (Real Real) Real)
(declare-fun x802 () Bool)
(declare-fun x4244 () Real)
(declare-fun x3443 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x1974 () Real)
(declare-fun x5312 () Bool)
(declare-fun x273 () Real)
(declare-fun x4587 () Real)
(declare-fun x2620 () Bool)
(declare-fun x5380 () Real)
(declare-fun x4791 () Bool)
(declare-fun x2851 () Bool)
(declare-fun x3987 () Real)
(declare-fun x2603 () Real)
(declare-fun x3131 () Real)
(declare-fun x5091 () Real)
(declare-fun x3538 () Bool)
(declare-fun x2902 () Real)
(declare-fun x3028 () Bool)
(declare-fun x1622 () Real)
(declare-fun x3911 () Bool)
(declare-fun x1610 () Real)
(declare-fun x436 () Bool)
(declare-fun x1519 () Real)
(declare-fun x3799 () Real)
(declare-fun x2210 () Bool)
(declare-fun x2959 (Real) Real)
(declare-fun x3084 () Real)
(declare-fun x2701 () Bool)
(declare-fun x4287 () Real)
(declare-fun x5223 () Real)
(declare-fun x4900 () Bool)
(declare-fun x2858 () Real)
(declare-fun x2728 () Bool)
(declare-fun x2968 () Real)
(declare-fun x2709 () Real)
(declare-fun x3127 () Real)
(declare-fun x4751 (Real) Real)
(declare-fun x61 () Real)
(declare-fun x2723 () Bool)
(declare-fun x134 () Real)
(declare-fun x441 () Real)
(declare-fun x2649 () Real)
(declare-fun x711 () Real)
(declare-fun x3565 () Real)
(declare-fun x4736 () Real)
(declare-fun x444 () Real)
(declare-fun x4931 () Bool)
(declare-fun x5250 () Bool)
(declare-fun x2096 () Real)
(declare-fun x4000 () Real)
(declare-fun x3146 () Real)
(declare-fun x1123 () Real)
(declare-fun x3099 () Real)
(declare-fun x3291 () Real)
(declare-fun x4950 () Bool)
(declare-fun x2296 () Bool)
(declare-fun x296 () Bool)
(declare-fun x2869 () Bool)
(declare-fun x4526 () Real)
(declare-fun x3115 () Bool)
(declare-fun x387 () Real)
(declare-fun x4545 () Bool)
(declare-fun x4006 () Real)
(declare-fun x3503 () Bool)
(declare-fun x2921 () Real)
(declare-fun x5179 () Bool)
(declare-fun x2371 () Real)
(declare-fun x4941 () Real)
(declare-fun x396 () Real)
(declare-fun x3840 () Bool)
(declare-fun x3596 (Real) Real)
(declare-fun x844 () Bool)
(declare-fun x4053 () Bool)
(declare-fun x501 () Real)
(declare-fun x2255 () Bool)
(declare-fun x2745 () Real)
(declare-fun x706 () Bool)
(declare-fun x5393 () Real)
(declare-fun x1048 () Real)
(declare-fun x3530 () Bool)
(declare-fun x2839 (Real) Real)
(declare-fun x2998 () Real)
(declare-fun x2544 () Bool)
(declare-fun x807 () Real)
(declare-fun x3230 () Bool)
(declare-fun x5135 () Bool)
(declare-fun x1235 () Real)
(declare-fun x4409 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x4410 () Real)
(declare-fun x2502 () Bool)
(declare-fun x5301 () Bool)
(declare-fun x3037 () Real)
(declare-fun x201 () Bool)
(declare-fun x4182 () x4071)
(declare-fun x3795 () x4071)
(declare-fun x3700 (Real) Real)
(declare-fun x3354 () Bool)
(declare-fun x725 () Bool)
(declare-fun x2560 () Real)
(declare-fun x2048 () Real)
(declare-fun x2870 () Real)
(declare-fun x2934 () x4071)
(declare-fun x221 (Real) Real)
(declare-fun x1213 () x4071)
(declare-fun x610 () Bool)
(declare-fun x916 () Bool)
(declare-fun x3846 () Bool)
(declare-fun x116 () Real)
(declare-fun x4092 () Real)
(declare-fun x1674 () Bool)
(declare-fun x1505 () Real)
(declare-fun x974 () Real)
(declare-fun x3181 (Real) Real)
(declare-fun x1516 () Bool)
(declare-fun x2024 () Real)
(declare-fun x4378 () Real)
(declare-fun x4264 () Bool)
(declare-fun x3647 () Real)
(declare-fun x179 () Real)
(declare-fun x2754 () Real)
(declare-fun x272 () Real)
(declare-fun x4628 () Real)
(declare-fun x1173 () Real)
(declare-fun x4028 () Real)
(declare-fun x3532 (Real) Real)
(declare-fun x2211 () Bool)
(declare-fun x4613 () Real)
(declare-fun x110 (Real) Real)
(declare-fun x5307 () Bool)
(declare-fun x204 () Bool)
(declare-fun x1405 () Real)
(declare-fun x142 () Bool)
(declare-fun x5181 () Bool)
(declare-fun x598 () Real)
(declare-fun x1734 () Bool)
(declare-fun x804 () Bool)
(declare-fun x4866 () Bool)
(declare-fun x708 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x4075 () x4071)
(declare-fun x735 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x2413 (x4071) Real)
(declare-fun x2876 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x4786 () Bool)
(declare-fun x1249 () Real)
(declare-fun x548 () Real)
(declare-fun x3414 () Real)
(declare-fun x5321 () Real)
(declare-fun x871 () Real)
(declare-fun x216 () Real)
(declare-fun x435 () Real)
(declare-fun x255 () Real)
(declare-fun x4069 () Real)
(declare-fun x2824 () Real)
(declare-fun x3558 () Real)
(declare-fun x226 () Real)
(declare-fun x3369 () Real)
(declare-fun x3534 () Real)
(declare-fun x4916 () Real)
(declare-fun x1422 () Real)
(declare-fun x730 () Real)
(declare-fun x2854 () Real)
(declare-fun x4411 (Real) Real)
(declare-fun x2787 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x4466 (Real) Real)
(declare-fun x437 () Bool)
(declare-fun x2612 () Real)
(declare-fun x1967 () Real)
(declare-fun x3511 () Bool)
(declare-fun x2821 () Real)
(declare-fun x4877 () Bool)
(declare-fun x1718 () Real)
(declare-fun x1571 (Real) Real)
(declare-fun x2147 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x2740 () Real)
(declare-fun x5130 () Bool)
(declare-fun x5061 () Real)
(declare-fun x3809 () Bool)
(declare-fun x665 () Bool)
(declare-fun x1006 () x4071)
(declare-fun x4204 () x4071)
(declare-fun x2070 () Real)
(declare-fun x77 () Bool)
(declare-fun x553 () Bool)
(declare-fun x4214 () Real)
(declare-fun x4183 () Bool)
(declare-fun x2103 () Real)
(declare-fun x4330 () Real)
(declare-fun x2598 () Real)
(declare-fun x3899 () Real)
(declare-fun x612 () Real)
(declare-fun x1078 () Real)
(declare-fun x4089 () Bool)
(declare-fun x4337 () Real)
(declare-fun x3479 () Real)
(declare-fun x2781 () Real)
(declare-fun x636 () Real)
(declare-fun x3653 () Real)
(declare-fun x5055 () x4071)
(declare-fun x4463 () Bool)
(declare-fun x1890 () Real)
(declare-fun x2997 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x2663 () Real)
(declare-fun x3842 () Real)
(declare-fun x499 () Bool)
(declare-fun x4910 () Real)
(declare-fun x3009 () Real)
(declare-fun x4382 () Real)
(declare-fun x3947 () Bool)
(declare-fun x2741 () Real)
(declare-fun x2816 () Bool)
(declare-fun x3323 () Real)
(declare-fun x2889 () Real)
(declare-fun x3786 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x4959 () Bool)
(declare-fun x5162 () x4071)
(declare-fun x805 () Real)
(declare-fun x133 () Real)
(declare-fun x525 () Bool)
(declare-fun x555 () x4071)
(declare-fun x5044 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x1731 (x4071) Real)
(declare-fun x362 () Bool)
(declare-fun x1507 () Real)
(declare-fun x5272 () Real)
(declare-fun x4315 () Real)
(declare-fun x1520 () Real)
(declare-fun x2459 () Real)
(declare-fun x448 () Real)
(declare-fun x4417 () Bool)
(declare-fun x1200 () Real)
(declare-fun x4645 () Real)
(declare-fun x4172 () Real)
(declare-fun x3458 () Real)
(declare-fun x1976 () x4071)
(declare-fun x4470 () Bool)
(declare-fun x1639 (Real) Real)
(declare-fun x2310 () Bool)
(declare-fun x3199 () Real)
(declare-fun x2724 () Real)
(declare-fun x4440 () Bool)
(declare-fun x639 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x2187 () Real)
(declare-fun x3918 () Bool)
(declare-fun x3225 () Real)
(declare-fun x4096 () Bool)
(declare-fun x3611 () Real)
(declare-fun x1692 () Real)
(declare-fun x564 () Real)
(declare-fun x1813 () Real)
(declare-fun x2984 () x4071)
(declare-fun x4544 () Bool)
(declare-fun x4898 () Bool)
(declare-fun x1545 () Real)
(declare-fun x2150 () Real)
(declare-fun x4461 () Real)
(declare-fun x4459 () Bool)
(declare-fun x2898 () Real)
(declare-fun x1500 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x2451 () Real)
(declare-fun x5009 () Real)
(declare-fun x3219 () Bool)
(declare-fun x2446 () Real)
(declare-fun x1673 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x1953 () Real)
(declare-fun x1265 () Real)
(declare-fun x2165 () Real)
(declare-fun x1607 () Bool)
(declare-fun x3569 () Bool)
(declare-fun x414 () Real)
(declare-fun x1995 () Bool)
(declare-fun x2155 (Real) Real)
(declare-fun x3583 () Real)
(declare-fun x3381 () Bool)
(declare-fun x1777 () Real)
(declare-fun x335 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x3594 () x4071)
(declare-fun x2176 () x4071)
(declare-fun x5211 () Real)
(declare-fun x4020 () Real)
(declare-fun x5200 () Real)
(declare-fun x1941 () Real)
(declare-fun x4597 () Bool)
(declare-fun x698 () Real)
(declare-fun x1988 () x4071)
(declare-fun x520 () Real)
(declare-fun x4358 () Real)
(declare-fun x4801 () Real)
(declare-fun x4853 () Bool)
(declare-fun x66 () Real)
(declare-fun x1543 () Real)
(declare-fun x2767 () Real)
(declare-fun x5015 () Real)
(declare-fun x3394 () x4071)
(declare-fun x3844 () Bool)
(declare-fun x1257 () Real)
(declare-fun x2404 () Real)
(declare-fun x5035 () Bool)
(declare-fun x4549 () Real)
(declare-fun x4553 () Bool)
(declare-fun x5261 (x4071) Real)
(declare-fun x734 () Real)
(declare-fun x1983 () Real)
(declare-fun x2935 () Bool)
(declare-fun x4843 () Real)
(declare-fun x1919 () Bool)
(declare-fun x4260 () Real)
(declare-fun x503 () Bool)
(declare-fun x2886 () Real)
(declare-fun x1084 () Bool)
(declare-fun x3674 () Real)
(declare-fun x3293 () Real)
(declare-fun x808 (Real) Real)
(declare-fun x4158 () Real)
(declare-fun x1281 (x4071) Real)
(declare-fun x3295 () Real)
(declare-fun x1859 () Real)
(declare-fun x3470 () Real)
(declare-fun x470 () Bool)
(declare-fun x484 () Real)
(declare-fun x1247 () x4071)
(declare-fun x415 () Real)
(declare-fun x230 () Real)
(declare-fun x345 () Real)
(declare-fun x971 () Real)
(declare-fun x2977 () Bool)
(declare-fun x1750 () Real)
(declare-fun x1356 () Real)
(declare-fun x1772 () Real)
(declare-fun x4372 () Real)
(declare-fun x5143 () Bool)
(declare-fun x1458 () Real)
(declare-fun x4668 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x631 (Real) Real)
(declare-fun x5106 () Real)
(declare-fun x1533 () Real)
(declare-fun x2918 () Real)
(declare-fun x4152 () Real)
(declare-fun x3095 () Real)
(declare-fun x325 () Real)
(declare-fun x5399 () Real)
(declare-fun x2808 () Real)
(declare-fun x3104 () Real)
(declare-fun x4627 () Bool)
(declare-fun x1804 () Real)
(declare-fun x4106 () Real)
(declare-fun x3505 () Real)
(declare-fun x52 () x4071)
(declare-fun x645 () Real)
(declare-fun x2482 () Real)
(declare-fun x3955 () Bool)
(declare-fun x4962 (Real) Real)
(declare-fun x2454 () Real)
(declare-fun x3621 () Real)
(declare-fun x1504 () Real)
(declare-fun x3144 () Bool)
(declare-fun x2938 () Real)
(declare-fun x2731 () Real)
(declare-fun x4666 () Real)
(declare-fun x5113 () Bool)
(declare-fun x2641 () Real)
(declare-fun x1401 () Bool)
(declare-fun x2513 () Real)
(declare-fun x2911 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x2271 () Real)
(declare-fun x31 () x4071)
(declare-fun x2894 () Real)
(declare-fun x4210 (x4071) Real)
(declare-fun x3782 () Bool)
(declare-fun x3051 () Real)
(declare-fun x1858 () Real)
(declare-fun x4927 () Real)
(declare-fun x1889 () Bool)
(declare-fun x651 () Real)
(declare-fun x381 () Bool)
(declare-fun x3986 () Real)
(declare-fun x2160 () Real)
(declare-fun x4528 () Bool)
(declare-fun x3001 () Real)
(declare-fun x2989 () Real)
(declare-fun x112 () Real)
(declare-fun x3927 () Real)
(declare-fun x1830 () Real)
(declare-fun x3166 () Bool)
(declare-fun x5303 () Bool)
(declare-fun x1286 () Real)
(declare-fun x2818 () Real)
(declare-fun x3429 () Real)
(declare-fun x1305 () Real)
(declare-fun x5220 () Real)
(declare-fun x5304 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x4159 () Real)
(declare-fun x3417 () Real)
(declare-fun x4978 () Bool)
(declare-fun x2520 (Real) Real)
(declare-fun x4864 () Real)
(declare-fun x2903 () Bool)
(declare-fun x3818 () Bool)
(declare-fun x4141 () Bool)
(declare-fun x3487 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x869 () Real)
(declare-fun x2190 () Real)
(declare-fun x2445 () x4071)
(declare-fun x14 () Real)
(declare-fun x2164 (x4071) Real)
(declare-fun x2674 () Real)
(declare-fun x341 () Real)
(declare-fun x1937 () Real)
(declare-fun x5133 () Bool)
(declare-fun x2013 () Real)
(declare-fun x2332 () Bool)
(declare-fun x211 () Real)
(declare-fun x970 () Real)
(declare-fun x4453 () Bool)
(declare-fun x2974 () Real)
(declare-fun x1844 () Real)
(declare-fun x5305 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1621 () Real)
(declare-fun x4489 () Real)
(declare-fun x3136 () Bool)
(declare-fun x2683 () Real)
(declare-fun x4323 () Bool)
(declare-fun x2085 () x4071)
(declare-fun x3956 () Real)
(declare-fun x4884 () Real)
(declare-fun x1170 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x2784 () Bool)
(declare-fun x5251 () Bool)
(declare-fun x3488 () Real)
(declare-fun x714 () Bool)
(declare-fun x659 () Real)
(declare-fun x98 () Real)
(declare-fun x675 () Bool)
(declare-fun x4617 () Bool)
(declare-fun x4077 (Real) Real)
(declare-fun x3427 () Bool)
(declare-fun x1316 () Real)
(declare-fun x1727 () Bool)
(declare-fun x2052 () Bool)
(declare-fun x3579 () Bool)
(declare-fun x2257 () Real)
(declare-fun x1406 () Real)
(declare-fun x3490 () Bool)
(declare-fun x4612 () Bool)
(declare-fun x4771 () Real)
(declare-fun x4363 () Real)
(declare-fun x5310 () Real)
(declare-fun x2771 () Bool)
(declare-fun x1188 () Real)
(declare-fun x1913 (x4071) Real)
(declare-fun x567 () Bool)
(declare-fun x2109 () Real)
(declare-fun x3432 () Real)
(declare-fun x4698 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x3563 () Bool)
(declare-fun x4659 () Real)
(declare-fun x518 (Real) Real)
(declare-fun x762 () Real)
(declare-fun x1163 () Real)
(declare-fun x3320 () Real)
(declare-fun x1451 () Real)
(declare-fun x693 () Bool)
(declare-fun x1997 () Real)
(declare-fun x4438 () Real)
(declare-fun x3744 () Bool)
(declare-fun x2832 () Bool)
(declare-fun x1322 (x4071) Real)
(declare-fun x252 () Bool)
(declare-fun x1742 () Real)
(declare-fun x1841 () Bool)
(declare-fun x892 () Real)
(declare-fun x5252 () Bool)
(declare-fun x297 () Bool)
(declare-fun x504 () Real)
(declare-fun x3322 () Real)
(declare-fun x1045 () Real)
(declare-fun x4467 (x4071) Real)
(declare-fun x3780 () Real)
(declare-fun x360 () Real)
(declare-fun x4298 () Bool)
(declare-fun x1034 () Real)
(declare-fun x1398 () Real)
(declare-fun x5357 () Real)
(declare-fun x3271 () Real)
(declare-fun x596 () x4071)
(declare-fun x1080 () Real)
(declare-fun x1793 () Real)
(declare-fun x1948 () Bool)
(declare-fun x2485 () Real)
(declare-fun x4805 () Bool)
(declare-fun x286 () Real)
(declare-fun x903 () Real)
(declare-fun x3180 () Real)
(declare-fun x2391 () Bool)
(declare-fun x2360 () Real)
(declare-fun x4847 () Real)
(declare-fun x489 () Bool)
(declare-fun x2031 () x4071)
(declare-fun x2553 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x2799 () Real)
(declare-fun x316 () Real)
(declare-fun x3397 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x3825 () Real)
(declare-fun x1694 () Real)
(declare-fun x5267 () Real)
(declare-fun x1908 () Real)
(declare-fun x1483 () Bool)
(declare-fun x791 () Real)
(declare-fun x5317 () Real)
(declare-fun x2634 () Real)
(declare-fun x3195 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x700 () Bool)
(declare-fun x978 () Real)
(declare-fun x279 () Real)
(declare-fun x3937 () Real)
(declare-fun x3514 () Real)
(declare-fun x1109 () Bool)
(declare-fun x3319 () Bool)
(declare-fun x1829 () Real)
(declare-fun x2884 () Bool)
(declare-fun x3852 () Bool)
(declare-fun x117 () Bool)
(declare-fun x2610 () Real)
(declare-fun x2632 () Real)
(declare-fun x1221 () Bool)
(declare-fun x3631 () Real)
(declare-fun x1134 () Real)
(declare-fun x3537 () x4071)
(declare-fun x1057 () Real)
(declare-fun x1081 () Bool)
(declare-fun x3983 () Real)
(declare-fun x269 () Real)
(declare-fun x3472 () Real)
(declare-fun x679 (Real) Real)
(declare-fun x3448 () Real)
(declare-fun x818 () Real)
(declare-fun x5154 () Real)
(declare-fun x2355 () Bool)
(declare-fun x620 () Real)
(declare-fun x1499 () Bool)
(declare-fun x3687 () Real)
(declare-fun x4345 () Bool)
(declare-fun x4486 () Real)
(declare-fun x1371 () Real)
(declare-fun x1242 () Real)
(declare-fun x1064 () Bool)
(declare-fun x4359 () Real)
(declare-fun x4643 (x4071) Real)
(declare-fun x1300 () Real)
(declare-fun x1623 () Real)
(declare-fun x3788 () Real)
(declare-fun x3461 () Real)
(declare-fun x3703 () x4071)
(declare-fun x2757 () Bool)
(declare-fun x3377 () Bool)
(declare-fun x926 () Bool)
(declare-fun x771 () Real)
(declare-fun x2019 () Bool)
(declare-fun x2777 () Real)
(declare-fun x1903 () Real)
(declare-fun x5006 (Real) Real)
(declare-fun x3024 () Real)
(declare-fun x5210 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x420 () Real)
(declare-fun x473 () Real)
(declare-fun x982 () Real)
(declare-fun x1574 () Bool)
(declare-fun x2284 () Real)
(declare-fun x2090 () Bool)
(declare-fun x5217 () Bool)
(declare-fun x4701 () Real)
(declare-fun x1206 (x4071) Real)
(declare-fun x3484 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x2596 () Real)
(declare-fun x2678 () x4071)
(declare-fun x2823 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x4272 () x4071)
(declare-fun x4862 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x2417 () x4071)
(declare-fun x3616 () Bool)
(declare-fun x514 () Real)
(declare-fun x1033 () Bool)
(declare-fun x1510 () Real)
(declare-fun x3365 () Real)
(declare-fun x487 () Real)
(declare-fun x1927 () Bool)
(declare-fun x4491 () x4071)
(declare-fun x411 () Bool)
(declare-fun x1994 () Real)
(declare-fun x1013 () x4071)
(declare-fun x2484 () Bool)
(declare-fun x904 () Real)
(declare-fun x5288 () Real)
(declare-fun x1176 () Real)
(declare-fun x4119 () Bool)
(declare-fun x5168 () Bool)
(declare-fun x4820 () Bool)
(declare-fun x3548 () Bool)
(declare-fun x5283 () Real)
(declare-fun x4510 () Real)
(declare-fun x5085 () Bool)
(declare-fun x3287 () Real)
(declare-fun x3539 () Bool)
(declare-fun x4209 () Real)
(declare-fun x392 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x3138 () Bool)
(declare-fun x123 () Real)
(declare-fun x3433 () Real)
(declare-fun x3361 () Real)
(declare-fun x712 (Real Real Real Real Real Real Real Real Real) Real)
(declare-fun x1148 () Real)
(declare-fun x611 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x652 () Real)
(declare-fun x4688 () Bool)
(declare-fun x958 () Real)
(declare-fun x3167 () Bool)
(declare-fun x4799 () x4071)
(declare-fun x817 () Bool)
(declare-fun x1911 () Real)
(declare-fun x3435 () x4071)
(declare-fun x5384 () Real)
(declare-fun x2480 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x2939 () Bool)
(declare-fun x1340 (Real) Real)
(declare-fun x4207 () Real)
(declare-fun x1925 () Real)
(declare-fun x2243 () Real)
(declare-fun x2684 () Real)
(declare-fun x4319 () Real)
(declare-fun x1498 () Real)
(declare-fun x4839 () Real)
(declare-fun x3905 () Bool)
(declare-fun x171 () Real)
(declare-fun x1577 () Bool)
(declare-fun x2291 () Real)
(declare-fun x5107 () Real)
(declare-fun x895 () Real)
(declare-fun x2642 () Real)
(declare-fun x2866 () Bool)
(declare-fun x4930 () Bool)
(declare-fun x3720 () Real)
(declare-fun x1497 () Real)
(declare-fun x2573 () Real)
(declare-fun x3572 () Real)
(declare-fun x2545 () Real)
(declare-fun x3969 () x4071)
(declare-fun x2415 () Real)
(declare-fun x4042 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x5227 () Real)
(declare-fun x4175 () Real)
(declare-fun x1512 () Real)
(declare-fun x4700 () Real)
(declare-fun x2175 () Real)
(declare-fun x3383 () Real)
(declare-fun x5391 () Real)
(declare-fun x3771 () Real)
(declare-fun x4059 () Real)
(declare-fun x3704 () Real)
(declare-fun x1304 () Bool)
(declare-fun x2323 () x4071)
(declare-fun x764 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x633 () Real)
(declare-fun x5246 () Real)
(declare-fun x3457 () Real)
(declare-fun x1753 () Real)
(declare-fun x3547 () Bool)
(declare-fun x3710 () Bool)
(declare-fun x5189 () Bool)
(declare-fun x2970 () Real)
(declare-fun x2280 () Real)
(declare-fun x1122 () Real)
(declare-fun x2045 () Bool)
(declare-fun x2874 () Bool)
(declare-fun x3729 (Real) Real)
(declare-fun x3667 () Real)
(declare-fun x33 () Real)
(declare-fun x956 () Real)
(declare-fun x2179 () Real)
(declare-fun x3660 () Real)
(declare-fun x809 () Bool)
(declare-fun x940 () Bool)
(declare-fun x834 () Bool)
(declare-fun x4859 () Real)
(declare-fun x1555 () Real)
(declare-fun x3589 (Real) Real)
(declare-fun x4213 () Real)
(declare-fun x4778 () Real)
(declare-fun x1730 () Real)
(declare-fun x2924 () Bool)
(declare-fun x1736 () Bool)
(declare-fun x732 () Bool)
(declare-fun x39 () Bool)
(declare-fun x1807 () Real)
(declare-fun x2753 () Bool)
(declare-fun x859 () Real)
(declare-fun x1638 (Real) Real)
(declare-fun x4247 (x4071) Real)
(declare-fun x2399 () Real)
(declare-fun x3528 () Bool)
(declare-fun x1 () Real)
(declare-fun x1349 () Bool)
(declare-fun x3393 () Real)
(declare-fun x3182 () Bool)
(declare-fun x1142 () Real)
(declare-fun x1978 () Bool)
(declare-fun x4471 () Real)
(declare-fun x1120 () Bool)
(declare-fun x3207 (Real) Real)
(declare-fun x3746 () Real)
(declare-fun x5033 () Bool)
(declare-fun x2954 () Bool)
(declare-fun x2536 () Real)
(declare-fun x806 () Real)
(declare-fun x1172 () Real)
(declare-fun x646 () Bool)
(declare-fun x5148 () Bool)
(declare-fun x1733 () Real)
(declare-fun x3309 () x4071)
(declare-fun x455 () Real)
(declare-fun x372 () Bool)
(declare-fun x42 (x4071) Real)
(declare-fun x5109 () Real)
(declare-fun x2531 () Bool)
(declare-fun x186 () Bool)
(declare-fun x5031 () Real)
(declare-fun x3612 () Real)
(declare-fun x4901 () Real)
(declare-fun x302 () Real)
(declare-fun x2719 () Real)
(declare-fun x570 () Real)
(declare-fun x4230 () Real)
(declare-fun x621 () Real)
(declare-fun x973 () Real)
(declare-fun x5201 () Bool)
(declare-fun x2408 () Real)
(declare-fun x3910 () Bool)
(declare-fun x648 () Real)
(declare-fun x2300 () Bool)
(declare-fun x2597 () x4071)
(declare-fun x4084 () Real)
(declare-fun x2026 () Real)
(declare-fun x738 () Real)
(declare-fun x1608 () Bool)
(declare-fun x586 () Real)
(declare-fun x1016 () Real)
(declare-fun x1766 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x3578 () x4071)
(declare-fun x3090 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x1146 () Real)
(declare-fun x1124 () Bool)
(declare-fun x3091 () Bool)
(declare-fun x1318 () Real)
(declare-fun x5204 () Real)
(declare-fun x5018 () Real)
(declare-fun x4154 () Real)
(declare-fun x2636 () Bool)
(declare-fun x1871 (x4071) Real)
(declare-fun x4307 () Real)
(declare-fun x240 () Real)
(declare-fun x3044 () Real)
(declare-fun x65 () Bool)
(declare-fun x4481 () x4071)
(declare-fun x5158 () Real)
(declare-fun x1236 () Bool)
(declare-fun x4100 () Real)
(declare-fun x1902 () Real)
(declare-fun x3220 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x3235 () Bool)
(declare-fun x1184 () Real)
(declare-fun x2104 () Bool)
(declare-fun x3833 () Real)
(declare-fun x2541 () Real)
(declare-fun x5016 () Real)
(declare-fun x3769 () Real)
(declare-fun x874 () Bool)
(declare-fun x2759 () Real)
(declare-fun x1970 () Real)
(declare-fun x3128 () Bool)
(declare-fun x2563 () Real)
(declare-fun x4621 () Bool)
(declare-fun x367 () Bool)
(declare-fun x5222 () Real)
(declare-fun x2450 () Bool)
(declare-fun x2517 () Real)
(declare-fun x5032 (Real) x4071)
(declare-fun x2180 () Bool)
(declare-fun x4197 () Real)
(declare-fun x4138 () Bool)
(declare-fun x4982 () Bool)
(declare-fun x3521 (Real) Real)
(declare-fun x1012 () Real)
(declare-fun x9 () Real)
(declare-fun x662 () Real)
(declare-fun x4904 () Real)
(declare-fun x2078 () Real)
(declare-fun x890 () Real)
(declare-fun x3497 () Bool)
(declare-fun x1345 () Real)
(declare-fun x589 () Real)
(declare-fun x2488 () Real)
(declare-fun x1004 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x1421 () Real)
(declare-fun x324 () Real)
(declare-fun x1326 () Bool)
(declare-fun x4696 () Real)
(declare-fun x438 () Real)
(declare-fun x1292 () Bool)
(declare-fun x2123 () Real)
(declare-fun x1656 () Real)
(declare-fun x2830 () x4071)
(declare-fun x510 () Real)
(declare-fun x4271 () Real)
(declare-fun x1576 () Real)
(declare-fun x4123 () Real)
(declare-fun x969 () Real)
(declare-fun x368 () Real)
(declare-fun x5330 () Real)
(declare-fun x4426 () Real)
(declare-fun x168 () Real)
(declare-fun x2760 () Bool)
(declare-fun x3838 () Bool)
(declare-fun x1642 () x4071)
(declare-fun x3068 () Real)
(declare-fun x423 () Bool)
(declare-fun x3808 () Real)
(declare-fun x2833 () Bool)
(declare-fun x882 () Bool)
(declare-fun x184 () Real)
(declare-fun x4754 () Real)
(declare-fun x1277 () Bool)
(declare-fun x1446 () Real)
(declare-fun x4936 () Real)
(declare-fun x1629 () Real)
(declare-fun x35 () Real)
(declare-fun x571 () Real)
(declare-fun x552 () Real)
(declare-fun x3832 () Bool)
(declare-fun x1583 () Real)
(declare-fun x5390 () Real)
(declare-fun x587 () Bool)
(declare-fun x866 () Real)
(declare-fun x3564 () Bool)
(declare-fun x2552 () Real)
(declare-fun x887 () Real)
(declare-fun x4836 () Real)
(declare-fun x1187 () Bool)
(declare-fun x4581 () Bool)
(declare-fun x839 () Real)
(declare-fun x3770 () Bool)
(declare-fun x3418 () Bool)
(declare-fun x2692 () Bool)
(declare-fun x2040 () Real)
(declare-fun x2253 () Real)
(declare-fun x1682 (x4071) Real)
(declare-fun x306 () Real)
(declare-fun x668 () Bool)
(declare-fun x356 () Bool)
(declare-fun x4600 () Bool)
(declare-fun x3355 () Bool)
(declare-fun x3571 () Real)
(declare-fun x1350 () x4071)
(declare-fun x4857 () Bool)
(declare-fun x4280 () x4071)
(declare-fun x4865 () Real)
(declare-fun x2200 () Bool)
(declare-fun x5206 () Real)
(declare-fun x2639 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x626 () Real)
(declare-fun x2582 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x4519 () Real)
(declare-fun x3327 () Bool)
(declare-fun x312 () Real)
(declare-fun x1589 () Bool)
(declare-fun x2353 () Bool)
(declare-fun x4225 () Real)
(declare-fun x4212 () Bool)
(declare-fun x7 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x2891 () Bool)
(declare-fun x1165 () Real)
(declare-fun x550 (Real) Real)
(declare-fun x3673 (Real) Real)
(declare-fun x1354 () Real)
(declare-fun x4279 () Real)
(declare-fun x348 () x4071)
(declare-fun x1870 () Real)
(declare-fun x2035 () Real)
(declare-fun x2533 () Real)
(declare-fun x2135 () x4071)
(declare-fun x2130 () x4071)
(declare-fun x897 () Real)
(declare-fun x4670 () Bool)
(declare-fun x5112 () Real)
(declare-fun x2917 () x4071)
(declare-fun x784 () Bool)
(declare-fun x4055 () Bool)
(declare-fun x359 () Bool)
(declare-fun x832 () Real)
(declare-fun x3965 () Bool)
(declare-fun x657 () Bool)
(declare-fun x2859 () Bool)
(declare-fun x346 () Real)
(declare-fun x3178 (Real) Real)
(declare-fun x169 () Real)
(declare-fun x5046 () Real)
(declare-fun x1875 () Real)
(declare-fun x183 (x4071) Real)
(declare-fun x5258 () Real)
(declare-fun x3382 () Real)
(declare-fun x3421 () Bool)
(declare-fun x2865 () Real)
(declare-fun x3901 () Real)
(declare-fun x3907 () Bool)
(declare-fun x4189 () x4071)
(declare-fun x3740 () x4071)
(declare-fun x2184 () x4071)
(declare-fun x2537 () Real)
(declare-fun x3529 () Real)
(declare-fun x666 () Real)
(declare-fun x534 (Real) Real)
(declare-fun x3602 () Real)
(declare-fun x4081 () Bool)
(declare-fun x3029 () Bool)
(declare-fun x1001 () Real)
(declare-fun x4109 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x5122 () Real)
(declare-fun x1223 () Bool)
(declare-fun x1185 () Real)
(declare-fun x3317 () Real)
(declare-fun x2691 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x4509 () Real)
(declare-fun x3174 () Real)
(declare-fun x2693 () Real)
(declare-fun x3870 () Real)
(declare-fun x1950 () Real)
(declare-fun x3324 () Bool)
(declare-fun x4768 () Real)
(declare-fun x3837 () Bool)
(declare-fun x2119 () Real)
(declare-fun x4644 () Bool)
(declare-fun x3072 () Real)
(declare-fun x3552 () Bool)
(declare-fun x4792 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x2682 () Real)
(declare-fun x1225 (Real) Real)
(declare-fun x5219 () Real)
(declare-fun x1128 () Bool)
(declare-fun x3496 () Real)
(declare-fun x4928 () Real)
(declare-fun x992 () Bool)
(declare-fun x280 () Real)
(declare-fun x4164 () Real)
(declare-fun x1910 (Real) Real)
(declare-fun x4 () Real)
(declare-fun x319 () x4071)
(declare-fun x5083 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x4500 () Real)
(declare-fun x2216 () Real)
(declare-fun x2027 () Real)
(declare-fun x1351 () Bool)
(declare-fun x4145 () Real)
(declare-fun x1331 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x4347 () Bool)
(declare-fun x93 (Real) Real)
(declare-fun x2209 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x2569 (x4071) Real)
(declare-fun x2498 () Bool)
(declare-fun x4527 () Real)
(declare-fun x5101 () Real)
(declare-fun x5240 () Real)
(declare-fun x2225 () Real)
(declare-fun x3330 () Real)
(declare-fun x3920 () Real)
(declare-fun x4034 () Bool)
(declare-fun x225 () Real)
(declare-fun x5086 () Real)
(declare-fun x330 () Real)
(declare-fun x911 () Real)
(declare-fun x822 () Real)
(declare-fun x3894 () Bool)
(declare-fun x2681 () Bool)
(declare-fun x82 () Real)
(declare-fun x3262 () Real)
(declare-fun x5218 () Bool)
(declare-fun x1537 () Real)
(declare-fun x1291 () Bool)
(declare-fun x3125 () Bool)
(declare-fun x3587 () Real)
(declare-fun x1563 () Real)
(declare-fun x774 () Bool)
(declare-fun x1140 () Real)
(declare-fun x543 () Bool)
(declare-fun x3619 () Real)
(declare-fun x1073 () x4071)
(declare-fun x2982 () Real)
(declare-fun x3042 () Real)
(declare-fun x4824 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x5034 () Bool)
(declare-fun x1952 () Real)
(declare-fun x3996 () Real)
(declare-fun x3824 (Real) Real)
(declare-fun x5098 () Bool)
(declare-fun x69 () Real)
(declare-fun x3130 () Real)
(declare-fun x2237 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x4044 () Real)
(declare-fun x4389 () Real)
(declare-fun x2901 () Bool)
(declare-fun x5062 () Real)
(declare-fun x3008 () Real)
(declare-fun x5244 () Real)
(declare-fun x2666 () Bool)
(declare-fun x533 () Real)
(declare-fun x1713 () Real)
(declare-fun x4128 () Real)
(declare-fun x1047 () Real)
(declare-fun x5293 () Bool)
(declare-fun x5364 () Bool)
(declare-fun x727 () Real)
(declare-fun x4562 () Real)
(declare-fun x856 () Real)
(declare-fun x2888 () Bool)
(declare-fun x3263 () Real)
(declare-fun x4512 () Real)
(declare-fun x4046 () Real)
(declare-fun x3481 () Bool)
(declare-fun x2580 () Real)
(declare-fun x4403 () Real)
(declare-fun x5238 () x4071)
(declare-fun x3255 () Real)
(declare-fun x4887 () Bool)
(declare-fun x2960 () Bool)
(declare-fun x2644 () Real)
(declare-fun x2936 () Bool)
(declare-fun x3389 () x4071)
(declare-fun x936 () Bool)
(declare-fun x1167 () Real)
(declare-fun x4327 () Real)
(declare-fun x3568 () Real)
(declare-fun x5316 () Real)
(declare-fun x2571 () Bool)
(declare-fun x4221 (Real) Real)
(declare-fun x2606 () Bool)
(declare-fun x4061 () Real)
(declare-fun x3916 () Bool)
(declare-fun x3586 () Real)
(declare-fun x1060 () Bool)
(declare-fun x5328 () Real)
(declare-fun x2442 () Real)
(declare-fun x4918 () Real)
(declare-fun x3401 () Bool)
(declare-fun x3690 () Real)
(declare-fun x3191 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x3426 () Real)
(declare-fun x707 () Real)
(declare-fun x2117 () x4071)
(declare-fun x3054 () x4071)
(declare-fun x4738 () Real)
(declare-fun x3892 () Real)
(declare-fun x4023 () Real)
(declare-fun x3627 () Real)
(declare-fun x343 (Real) Real)
(declare-fun x3557 () Real)
(declare-fun x5297 () Bool)
(declare-fun x1805 () Bool)
(declare-fun x5309 () x4071)
(declare-fun x5170 () Bool)
(declare-fun x697 () Bool)
(declare-fun x3878 () Bool)
(declare-fun x2640 () Real)
(declare-fun x932 () Bool)
(declare-fun x5017 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x3951 () Bool)
(declare-fun x5311 () Real)
(declare-fun x1461 () Bool)
(declare-fun x1709 () Real)
(declare-fun x4477 () Real)
(declare-fun x1190 (Real Real) Real)
(declare-fun x4586 () x4071)
(declare-fun x4577 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x4611 () Real)
(declare-fun x5146 () Bool)
(declare-fun x4401 () Bool)
(declare-fun x1378 () Real)
(declare-fun x4344 () Real)
(declare-fun x1015 () Real)
(declare-fun x2213 () Real)
(declare-fun x298 () Real)
(declare-fun x1041 () Real)
(declare-fun x4692 () Bool)
(declare-fun x3409 () Bool)
(declare-fun x373 () Real)
(declare-fun x1229 (x4071) Real)
(declare-fun x1132 () Bool)
(declare-fun x2153 () Real)
(declare-fun x3033 () Real)
(declare-fun x3758 () Real)
(declare-fun x1856 () Bool)
(declare-fun x5132 () Bool)
(declare-fun x4065 () Real)
(declare-fun x5276 () Real)
(declare-fun x773 () Real)
(declare-fun x3966 () x4071)
(declare-fun x5142 () Real)
(declare-fun x3804 () Bool)
(declare-fun x872 () Bool)
(declare-fun x4631 (x4071) Real)
(declare-fun x2487 () Bool)
(declare-fun x2872 () Real)
(declare-fun x2969 () Real)
(declare-fun x1710 () Real)
(declare-fun x2073 () Real)
(declare-fun x2357 () Real)
(declare-fun x2425 () Real)
(declare-fun x4031 () Bool)
(declare-fun x4205 () Real)
(declare-fun x2773 () Real)
(declare-fun x68 (x4071) Real)
(declare-fun x2722 () x4071)
(declare-fun x758 () Real)
(declare-fun x4795 () Real)
(declare-fun x5203 () Real)
(declare-fun x410 () Real)
(declare-fun x2378 () Real)
(declare-fun x2706 () Real)
(declare-fun x4971 () Real)
(declare-fun x5174 (Real Real) Real)
(declare-fun x466 () Real)
(declare-fun x1662 () Bool)
(declare-fun x5089 () x4071)
(declare-fun x419 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x855 () Bool)
(declare-fun x616 () Real)
(declare-fun x1420 () Bool)
(declare-fun x3196 () Real)
(declare-fun x1847 () Real)
(declare-fun x2986 () Real)
(declare-fun x850 () Real)
(declare-fun x614 () Real)
(declare-fun x3011 () Real)
(declare-fun x1106 (Real) Real)
(declare-fun x2932 () Bool)
(declare-fun x761 () Real)
(declare-fun x4872 () Real)
(declare-fun x4393 () Real)
(declare-fun x502 () Real)
(declare-fun x2106 () Bool)
(declare-fun x1899 () Real)
(declare-fun x4177 () Real)
(declare-fun x4533 () Real)
(declare-fun x2622 () Bool)
(declare-fun x4229 () Real)
(declare-fun x4261 () Real)
(declare-fun x1939 () Real)
(declare-fun x3492 () Bool)
(declare-fun x833 () Bool)
(declare-fun x4380 () Real)
(declare-fun x4294 () Bool)
(declare-fun x4835 () Real)
(declare-fun x349 (x4071) Real)
(declare-fun x2099 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x2118 () Real)
(declare-fun x4005 () Bool)
(declare-fun x132 () Real)
(declare-fun x3455 () Real)
(declare-fun x695 () Bool)
(declare-fun x2133 (Real) Real)
(declare-fun x500 () Bool)
(declare-fun x1562 (x4071) Real)
(declare-fun x3366 () Bool)
(declare-fun x1715 () Real)
(declare-fun x1315 () Real)
(declare-fun x3149 () Real)
(declare-fun x3223 () x4071)
(declare-fun x5302 () Bool)
(declare-fun x4925 () Bool)
(declare-fun x2670 () Bool)
(declare-fun x3734 () Real)
(declare-fun x2406 () Real)
(declare-fun x2849 () Real)
(declare-fun x990 () x4071)
(declare-fun x3117 () x4071)
(declare-fun x2623 () Real)
(declare-fun x451 () Bool)
(declare-fun x5378 () Real)
(declare-fun x4364 () Bool)
(declare-fun x399 () x4071)
(declare-fun x781 () x4071)
(declare-fun x1076 () Bool)
(declare-fun x1894 () Real)
(declare-fun x4546 () Real)
(declare-fun x5191 () Real)
(declare-fun x1591 () x4071)
(declare-fun x1043 () Bool)
(declare-fun x1193 (Real) Real)
(declare-fun x433 () Bool)
(declare-fun x2615 () Bool)
(declare-fun x2203 () Real)
(declare-fun x2826 () Real)
(declare-fun x32 () Real)
(declare-fun x847 () Real)
(declare-fun x15 () Real)
(declare-fun x1548 () Real)
(declare-fun x4388 () Bool)
(declare-fun x206 () Bool)
(declare-fun x3871 () Bool)
(declare-fun x17 () Real)
(declare-fun x4529 () Real)
(declare-fun x4193 () Bool)
(declare-fun x4723 () Real)
(declare-fun x1364 () Real)
(declare-fun x4961 () Real)
(declare-fun x694 () Real)
(declare-fun x2275 () Bool)
(declare-fun x4174 () Real)
(declare-fun x1192 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x5131 () Real)
(declare-fun x305 () Real)
(declare-fun x3803 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x4607 () Real)
(declare-fun x3343 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x453 () Bool)
(declare-fun x4560 () Bool)
(declare-fun x412 () Real)
(declare-fun x2687 () Real)
(declare-fun x913 () Real)
(declare-fun x3171 () Real)
(declare-fun x5221 () Real)
(declare-fun x2770 () Real)
(declare-fun x188 () Real)
(declare-fun x3784 () Real)
(declare-fun x2102 () Bool)
(declare-fun x4267 () Bool)
(declare-fun x128 () Real)
(declare-fun x2714 () Real)
(declare-fun x4242 () Bool)
(declare-fun x260 () Real)
(declare-fun x2063 () Real)
(declare-fun x121 () Real)
(declare-fun x4999 () Real)
(declare-fun x1501 () Real)
(declare-fun x1017 (x4071) Real)
(declare-fun x3491 () Real)
(declare-fun x3363 () Real)
(declare-fun x3682 () Real)
(declare-fun x4949 () Real)
(declare-fun x223 () Real)
(declare-fun x3224 () Real)
(declare-fun x3709 () Real)
(declare-fun x4241 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x3763 () Real)
(declare-fun x1191 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x2214 () Real)
(declare-fun x3086 () Real)
(declare-fun x1969 () Real)
(declare-fun x3968 () Real)
(declare-fun x3286 () Real)
(declare-fun x2654 () Bool)
(declare-fun x3247 () Real)
(declare-fun x4713 () Real)
(declare-fun x4126 () Bool)
(declare-fun x1530 () Real)
(declare-fun x4630 () Bool)
(declare-fun x788 () Real)
(declare-fun x1624 () Real)
(declare-fun x2151 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x4377 (x4071) Real)
(declare-fun x789 () Real)
(declare-fun x1745 () Real)
(declare-fun x3549 () Bool)
(declare-fun x4148 () Real)
(declare-fun x2347 () Bool)
(declare-fun x3140 () Real)
(declare-fun x2089 () Real)
(declare-fun x4979 () Real)
(declare-fun x4170 () Real)
(declare-fun x3802 () Bool)
(declare-fun x2853 () Real)
(declare-fun x3471 () Bool)
(declare-fun x3282 () Real)
(declare-fun x4325 () Bool)
(declare-fun x3032 (Real) Real)
(declare-fun x1794 () Real)
(declare-fun x3636 () Bool)
(declare-fun x351 () Real)
(declare-fun x4770 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x5172 () Real)
(declare-fun x3119 () Real)
(declare-fun x4103 () Real)
(declare-fun x1442 () Real)
(declare-fun x2381 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x1808 () Real)
(declare-fun x3292 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x1957 () Real)
(declare-fun x2433 () Real)
(declare-fun x28 (Real Real Real Real) Real)
(declare-fun x1338 () Real)
(declare-fun x2405 () Bool)
(declare-fun x4842 (x4071) Real)
(declare-fun x284 () Real)
(declare-fun x1699 () Real)
(declare-fun x113 () Real)
(declare-fun x994 () Bool)
(declare-fun x4530 () Real)
(declare-fun x4058 () Bool)
(declare-fun x541 () Real)
(declare-fun x2805 () Real)
(declare-fun x635 (Real) Real)
(declare-fun x140 () Real)
(declare-fun x3035 () Bool)
(declare-fun x353 () Real)
(declare-fun x4282 () Bool)
(declare-fun x3675 () Real)
(declare-fun x4752 () Real)
(declare-fun x1611 () Real)
(declare-fun x2336 () Real)
(declare-fun x3764 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x1336 () x4071)
(declare-fun x627 () Bool)
(declare-fun x5137 () x4071)
(declare-fun x4060 () Bool)
(declare-fun x606 () Real)
(declare-fun x5026 () Real)
(declare-fun x354 () Real)
(declare-fun x2235 () Bool)
(declare-fun x1949 () Real)
(declare-fun x1723 () Real)
(declare-fun x11 () Bool)
(declare-fun x3819 () Bool)
(declare-fun x2943 () Real)
(declare-fun x2778 () Real)
(declare-fun x1144 () Real)
(declare-fun x3988 () Real)
(declare-fun x4879 () Real)
(declare-fun x4350 () Bool)
(declare-fun x5039 () x4071)
(declare-fun x3212 () Real)
(declare-fun x954 () Real)
(declare-fun x358 () Bool)
(declare-fun x2699 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x2510 () Bool)
(declare-fun x908 () Bool)
(declare-fun x2922 () Real)
(declare-fun x1087 () Bool)
(declare-fun x3413 (Real) Real)
(declare-fun x2008 () Real)
(declare-fun x1147 () Bool)
(declare-fun x2007 () Real)
(declare-fun x2789 () Real)
(declare-fun x2672 () Real)
(declare-fun x2591 () Real)
(declare-fun x1089 () Real)
(declare-fun x527 () x4071)
(declare-fun x3669 () x4071)
(declare-fun x4083 () Real)
(declare-fun x2643 () Real)
(declare-fun x4682 () Real)
(declare-fun x5313 (Real Real) Real)
(declare-fun x1358 () Real)
(declare-fun x2847 () Bool)
(declare-fun x5343 () Real)
(declare-fun x4953 () Real)
(declare-fun x1372 (x4071) Real)
(declare-fun x4521 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x251 () Real)
(declare-fun x1008 () Real)
(declare-fun x3670 () Real)
(declare-fun x1603 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x3573 () Real)
(declare-fun x3853 (Real) Real)
(declare-fun x1131 () Real)
(declare-fun x3248 () Bool)
(declare-fun x3542 () x4071)
(declare-fun x4008 () Real)
(declare-fun x1992 () Real)
(declare-fun x4397 () Real)
(declare-fun x153 () Real)
(declare-fun x5147 () Real)
(declare-fun x2136 () Real)
(declare-fun x1721 () Bool)
(declare-fun x126 (x4071) Real)
(declare-fun x3303 () Real)
(declare-fun x2736 () Real)
(declare-fun x4746 () Real)
(declare-fun x1098 () Bool)
(declare-fun x2887 () Real)
(declare-fun x2481 () Real)
(declare-fun x5014 () Bool)
(declare-fun x76 () x4071)
(declare-fun x3872 () Real)
(declare-fun x4130 () Real)
(declare-fun x3854 () x4071)
(declare-fun x4608 () Bool)
(declare-fun x3592 () Real)
(declare-fun x2173 () Real)
(declare-fun x1938 () Real)
(declare-fun x2611 () Bool)
(declare-fun x3599 () Real)
(declare-fun x4536 () x4071)
(declare-fun x3522 () Real)
(declare-fun x2032 () Real)
(declare-fun x3624 () Real)
(declare-fun x2158 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x754 () Real)
(declare-fun x4667 () Bool)
(declare-fun x1701 () Real)
(declare-fun x5381 () Bool)
(declare-fun x264 () Real)
(declare-fun x2348 () Real)
(declare-fun x3519 () Real)
(declare-fun x5100 () x4071)
(declare-fun x803 () Real)
(declare-fun x4348 () Bool)
(declare-fun x4259 () Real)
(declare-fun x1975 () x4071)
(declare-fun x5075 () Bool)
(declare-fun x3827 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1436 () Real)
(declare-fun x1700 (x4071) Real)
(declare-fun x5164 () Bool)
(declare-fun x232 () Real)
(declare-fun x2276 () Real)
(declare-fun x1524 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x491 () Real)
(declare-fun x4013 () Bool)
(declare-fun x3618 (Real) Real)
(declare-fun x4889 () Real)
(declare-fun x2983 () Real)
(declare-fun x5376 () Bool)
(declare-fun x2963 () Bool)
(declare-fun x4499 () x4071)
(declare-fun x4648 () Bool)
(declare-fun x2845 () Real)
(declare-fun x5285 () Real)
(declare-fun x1379 () Real)
(declare-fun x4740 () Bool)
(declare-fun x3685 () Real)
(declare-fun x4442 () Bool)
(declare-fun x2141 () Real)
(declare-fun x2637 () Real)
(declare-fun x3388 () Bool)
(declare-fun x3974 () Bool)
(declare-fun x3977 () Real)
(declare-fun x5373 () Bool)
(declare-fun x111 () Real)
(declare-fun x5320 () Bool)
(declare-fun x914 () Bool)
(declare-fun x3868 () Bool)
(declare-fun x3240 () Real)
(declare-fun x5067 () Real)
(declare-fun x5332 () Real)
(declare-fun x4014 () Bool)
(declare-fun x323 () Bool)
(declare-fun x2996 () Real)
(declare-fun x1620 () Bool)
(declare-fun x667 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x3386 (Real) Real)
(declare-fun x3707 () Real)
(declare-fun x2082 () Bool)
(declare-fun x557 () x4071)
(declare-fun x924 () x4071)
(declare-fun x4523 () Real)
(declare-fun x1104 () Real)
(declare-fun x1839 () Real)
(declare-fun x3814 () Real)
(declare-fun x1946 () Real)
(declare-fun x3005 () Bool)
(declare-fun x531 () Bool)
(declare-fun x658 () Real)
(declare-fun x2283 () Real)
(declare-fun x426 (Real) Real)
(declare-fun x1602 () Bool)
(declare-fun x4029 () Real)
(declare-fun x4919 () Real)
(declare-fun x5215 (x4071) Real)
(declare-fun x1822 () Real)
(declare-fun x2148 () Bool)
(declare-fun x1486 () Real)
(declare-fun x5232 () Bool)
(declare-fun x5395 () Real)
(declare-fun x4188 () Real)
(declare-fun x755 () Real)
(declare-fun x4041 () x4071)
(declare-fun x562 () Real)
(declare-fun x2051 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x4033 () x4071)
(declare-fun x743 () Real)
(declare-fun x574 () Real)
(declare-fun x3145 () Real)
(declare-fun x5041 () Bool)
(declare-fun x3691 () Real)
(declare-fun x4708 () Real)
(declare-fun x239 () Real)
(declare-fun x5333 () Real)
(declare-fun x2685 () Bool)
(declare-fun x759 () Real)
(declare-fun x2286 () Bool)
(declare-fun x4056 (x4071) Real)
(declare-fun x4035 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x3887 () Bool)
(declare-fun x1518 () x4071)
(declare-fun x1469 () Real)
(declare-fun x3523 () x4071)
(declare-fun x1293 () Real)
(declare-fun x937 () Real)
(declare-fun x2550 () Real)
(declare-fun x2862 (Real) Real)
(declare-fun x2900 () Real)
(declare-fun x5023 () Real)
(declare-fun x3092 () Real)
(declare-fun x3494 () Real)
(declare-fun x3049 () Real)
(declare-fun x3129 () Bool)
(declare-fun x894 () Real)
(declare-fun x2964 () Real)
(declare-fun x29 () Bool)
(declare-fun x2114 () Real)
(declare-fun x1627 () Bool)
(declare-fun x4277 () Real)
(declare-fun x3113 (Real) Real)
(declare-fun x2322 () Bool)
(declare-fun x4994 () Bool)
(declare-fun x4326 () x4071)
(declare-fun x769 () Real)
(declare-fun x4804 (x4071) Real)
(declare-fun x2108 () Real)
(declare-fun x5245 () Bool)
(declare-fun x1984 () Real)
(declare-fun x2039 () Bool)
(declare-fun x2675 () x4071)
(declare-fun x5274 () Bool)
(declare-fun x2005 () Real)
(declare-fun x801 () x4071)
(declare-fun x3046 () Real)
(declare-fun x4629 () Real)
(declare-fun x397 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x891 () Bool)
(declare-fun x1450 () Real)
(declare-fun x930 () Real)
(declare-fun x1842 () x4071)
(declare-fun x1180 () Bool)
(declare-fun x270 () Bool)
(declare-fun x18 () Bool)
(declare-fun x3730 () Real)
(declare-fun x2471 () Real)
(declare-fun x3318 () Bool)
(declare-fun x4797 () x4071)
(declare-fun x5398 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x4691 () Real)
(declare-fun x2516 () Real)
(declare-fun x71 () Real)
(declare-fun x722 () Bool)
(declare-fun x4303 () Real)
(declare-fun x3623 () Bool)
(declare-fun x1413 () Real)
(declare-fun x5110 () x4071)
(declare-fun x3233 () Bool)
(declare-fun x933 () Real)
(declare-fun x2084 () Bool)
(declare-fun x3280 () Real)
(declare-fun x2809 () Real)
(declare-fun x4924 () Real)
(declare-fun x5265 () Real)
(declare-fun x482 () x4071)
(declare-fun x740 () Real)
(declare-fun x1445 () Bool)
(declare-fun x4983 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x4626 () Real)
(declare-fun x2319 () Real)
(declare-fun x1416 () Bool)
(declare-fun x3404 () Real)
(declare-fun x1396 () Real)
(declare-fun x3190 () Real)
(declare-fun x3517 () Real)
(declare-fun x1342 () Bool)
(declare-fun x2676 () Real)
(declare-fun x2390 () Real)
(declare-fun x2583 () Bool)
(declare-fun x3807 () Real)
(declare-fun x3845 () Bool)
(declare-fun x987 () Bool)
(declare-fun x5036 () Real)
(declare-fun x4473 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x4921 () Real)
(declare-fun x2940 () Real)
(declare-fun x3387 () Real)
(declare-fun x3520 () x4071)
(declare-fun x3912 () Real)
(declare-fun x603 () Real)
(declare-fun x2316 () Real)
(declare-fun x2295 () Bool)
(declare-fun x4554 () Real)
(declare-fun x1136 () Real)
(declare-fun x320 () Real)
(declare-fun x3203 () Real)
(declare-fun x2656 () Real)
(declare-fun x3380 () Bool)
(declare-fun x4956 () Real)
(declare-fun x4199 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x3081 () Real)
(declare-fun x3048 () Real)
(declare-fun x3376 () Real)
(declare-fun x535 () Real)
(declare-fun x4191 () Bool)
(declare-fun x4508 () Real)
(declare-fun x3588 (Real) Real)
(declare-fun x2695 () Real)
(declare-fun x2877 () Real)
(declare-fun x4539 () Real)
(declare-fun x5163 () Bool)
(declare-fun x4202 (Real) Real)
(declare-fun x3367 () Bool)
(declare-fun x352 () Real)
(declare-fun x2629 () Bool)
(declare-fun x4246 () Bool)
(declare-fun x485 () Bool)
(declare-fun x3403 () Bool)
(declare-fun x2567 () x4071)
(declare-fun x5167 (Real) Real)
(declare-fun x1102 () Bool)
(declare-fun x235 () Real)
(declare-fun x2414 () Real)
(declare-fun x3010 () Real)
(declare-fun x19 () Real)
(declare-fun x5260 () Real)
(declare-fun x115 () Real)
(declare-fun x2059 () Real)
(declare-fun x3107 (Real) Real)
(declare-fun x4275 () Real)
(declare-fun x5325 () x4071)
(declare-fun x4689 () Real)
(declare-fun x1397 (x4071) Real)
(declare-fun x3719 () Real)
(declare-fun x1092 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x4374 () Bool)
(declare-fun x1475 () Real)
(declare-fun x1083 () Bool)
(declare-fun x3463 () x4071)
(declare-fun x629 () Real)
(declare-fun x1115 () Real)
(declare-fun x3919 () Bool)
(declare-fun x4418 () Real)
(declare-fun x402 () Real)
(declare-fun x2496 () Real)
(declare-fun x361 () Bool)
(declare-fun x2328 () Real)
(declare-fun x1663 () Real)
(declare-fun x2978 () Bool)
(declare-fun x3267 () Bool)
(declare-fun x37 () Real)
(declare-fun x3007 (Real) Real)
(declare-fun x1116 () Real)
(declare-fun x2081 () Bool)
(declare-fun x5139 () Real)
(declare-fun x4816 (Real) Real)
(declare-fun x1355 () Bool)
(declare-fun x573 () Real)
(declare-fun x1696 () Real)
(declare-fun x3934 (Real) Real)
(declare-fun x3917 () Bool)
(declare-fun x2330 () Real)
(declare-fun x4009 () Bool)
(declare-fun x4414 (x4071) Real)
(declare-fun x1065 () x4071)
(declare-fun x582 () Bool)
(declare-fun x1748 () Real)
(declare-fun x4850 () x4071)
(declare-fun x5300 () Real)
(declare-fun x3559 () Bool)
(declare-fun x601 () x4071)
(declare-fun x4653 () x4071)
(declare-fun x45 () Real)
(declare-fun x278 () Real)
(declare-fun x2495 () Real)
(declare-fun x1086 () Real)
(declare-fun x4228 () Bool)
(declare-fun x161 () Real)
(declare-fun x1367 () Real)
(declare-fun x716 () Bool)
(declare-fun x2500 () Real)
(declare-fun x5141 () Bool)
(declare-fun x747 () Bool)
(declare-fun x3985 () Real)
(declare-fun x2601 () Real)
(declare-fun x1489 () Bool)
(declare-fun x5012 () Real)
(declare-fun x3959 () Bool)
(declare-fun x5077 () Real)
(declare-fun x748 () Bool)
(declare-fun x303 () Real)
(declare-fun x841 () Real)
(declare-fun x290 (Real) Real)
(declare-fun x5256 () Real)
(declare-fun x4087 (x4071) Real)
(declare-fun x1631 () Real)
(declare-fun x176 () Real)
(declare-fun x786 (x4071) Real)
(declare-fun x4769 () Real)
(declare-fun x2154 () Real)
(declare-fun x4416 () Real)
(declare-fun x2188 () Real)
(declare-fun x572 () Bool)
(declare-fun x1133 () Real)
(declare-fun x3241 () Real)
(declare-fun x210 () Bool)
(declare-fun x1094 () Real)
(declare-fun x1186 () Real)
(declare-fun x4088 () Bool)
(declare-fun x334 () Bool)
(declare-fun x3218 (Real) Real)
(declare-fun x3924 () Bool)
(declare-fun x1230 () Real)
(declare-fun x304 () Real)
(declare-fun x960 () Real)
(declare-fun x3442 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x607 () Real)
(declare-fun x644 () Real)
(declare-fun x189 () Bool)
(declare-fun x530 () Bool)
(declare-fun x2734 () Real)
(declare-fun x4404 () Bool)
(declare-fun x3727 () Real)
(declare-fun x2021 () Real)
(declare-fun x2576 () Bool)
(declare-fun x379 () Bool)
(declare-fun x4163 () Real)
(declare-fun x4584 (x4071) Real)
(declare-fun x1141 () Real)
(declare-fun x4255 () Bool)
(declare-fun x1606 () Real)
(declare-fun x4497 () Real)
(declare-fun x3743 () x4071)
(declare-fun x4800 () Real)
(declare-fun x1244 () Real)
(declare-fun x1332 () Real)
(declare-fun x5268 () Real)
(declare-fun x386 () Real)
(declare-fun x902 () Real)
(declare-fun x1430 () Real)
(declare-fun x1155 () Real)
(declare-fun x309 () Bool)
(declare-fun x4897 () Bool)
(declare-fun x5216 () Real)
(declare-fun x4880 () Real)
(declare-fun x468 () Bool)
(declare-fun x3750 () Real)
(declare-fun x1921 () Real)
(declare-fun x3654 () Bool)
(declare-fun x1283 () Real)
(declare-fun x4763 () Real)
(declare-fun x2914 () Real)
(declare-fun x1259 () Real)
(declare-fun x2867 () Real)
(declare-fun x2730 () Real)
(declare-fun x400 () x4071)
(declare-fun x3876 () Real)
(declare-fun x1672 () Bool)
(declare-fun x742 () Real)
(declare-fun x5336 () Bool)
(declare-fun x5004 () Real)
(declare-fun x3779 () Real)
(declare-fun x3302 () Real)
(declare-fun x2785 () Real)
(declare-fun x1474 () Real)
(declare-fun x1774 () Real)
(declare-fun x4856 () Bool)
(declare-fun x5389 () Bool)
(declare-fun x2625 () Bool)
(declare-fun x1117 () Real)
(declare-fun x4750 () Real)
(declare-fun x2680 () Bool)
(declare-fun x3156 () Real)
(declare-fun x3581 () Real)
(declare-fun x912 () Real)
(declare-fun x2975 () Real)
(declare-fun x2398 () Real)
(declare-fun x602 () Real)
(declare-fun x3785 () Real)
(declare-fun x4237 () Bool)
(declare-fun x84 () Real)
(declare-fun x256 () Real)
(declare-fun x1757 () Real)
(declare-fun x705 () Bool)
(declare-fun x5103 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x5079 () Real)
(declare-fun x2317 () Bool)
(declare-fun x5363 () Bool)
(declare-fun x3398 () Real)
(declare-fun x5011 () Bool)
(declare-fun x1201 () Real)
(declare-fun x4040 () Real)
(declare-fun x5352 () Real)
(declare-fun x4369 () Real)
(declare-fun x2358 () Real)
(declare-fun x2309 () Real)
(declare-fun x4286 () Real)
(declare-fun x2999 () x4071)
(declare-fun x938 () Real)
(declare-fun x4981 () Real)
(declare-fun x3096 () Bool)
(declare-fun x1678 (Real) Real)
(declare-fun x4249 () Real)
(declare-fun x2178 () Bool)
(declare-fun x1935 () Real)
(declare-fun x1601 () Bool)
(declare-fun x4775 () Bool)
(declare-fun x2455 () Real)
(declare-fun x3452 () Real)
(declare-fun x3014 () Bool)
(declare-fun x4634 () Real)
(declare-fun x2990 () Real)
(declare-fun x1630 () Bool)
(declare-fun x3122 () Bool)
(declare-fun x3783 () Bool)
(declare-fun x1966 () Real)
(declare-fun x48 () Bool)
(declare-fun x145 () Bool)
(declare-fun x2462 () Real)
(declare-fun x5342 () Bool)
(declare-fun x1645 () Real)
(declare-fun x1689 () Real)
(declare-fun x147 () x4071)
(declare-fun x797 () Real)
(declare-fun x3187 () Real)
(declare-fun x3415 () Real)
(declare-fun x2538 () Bool)
(declare-fun x3681 () Real)
(declare-fun x2416 () Bool)
(declare-fun x4903 () Real)
(declare-fun x768 () Bool)
(declare-fun x4598 () Real)
(declare-fun x4150 () Real)
(declare-fun x404 () Real)
(declare-fun x1130 () Real)
(declare-fun x1979 () Bool)
(declare-fun x4402 () Real)
(declare-fun x3226 () Real)
(declare-fun x1860 () Bool)
(declare-fun x1112 () Real)
(declare-fun x3392 () Real)
(declare-fun x3613 () Real)
(declare-fun x2950 () Real)
(declare-fun x300 () Bool)
(declare-fun x1985 () Real)
(declare-fun x4821 () Bool)
(declare-fun x3004 () Real)
(declare-fun x1831 () Real)
(declare-fun x5308 () Bool)
(declare-fun x957 () Bool)
(declare-fun x1171 () Real)
(declare-fun x3835 (x4071) Real)
(declare-fun x1207 () Real)
(declare-fun x4311 () Real)
(declare-fun x2909 () Bool)
(declare-fun x1072 () Real)
(declare-fun x5117 () Real)
(declare-fun x1759 () Real)
(declare-fun x2298 () Bool)
(declare-fun x2559 () Bool)
(declare-fun x3923 (Real) Real)
(declare-fun x3645 () Bool)
(declare-fun x1755 () Real)
(declare-fun x440 () Bool)
(declare-fun x3692 () Bool)
(declare-fun x5173 () Real)
(declare-fun x4674 (x4071) Real)
(declare-fun x4601 () Bool)
(declare-fun x1522 (Real) Real)
(declare-fun x281 () Real)
(declare-fun x2743 () Bool)
(declare-fun x1963 () Bool)
(declare-fun x1368 () Real)
(declare-fun x1361 () Real)
(declare-fun x4195 () Real)
(declare-fun x3069 () Real)
(declare-fun x2246 () Real)
(declare-fun x4681 () Bool)
(declare-fun x2478 () Bool)
(declare-fun x3768 () x4071)
(declare-fun x5166 () Real)
(declare-fun x955 () x4071)
(declare-fun x1002 () Real)
(declare-fun x2174 () Real)
(declare-fun x4184 (Real) Real)
(declare-fun x792 () Bool)
(declare-fun x4278 () Bool)
(declare-fun x267 (Real) Real)
(declare-fun x1824 () Real)
(declare-fun x3960 () x4071)
(declare-fun x4394 () Bool)
(declare-fun x2499 () Real)
(declare-fun x1024 () Real)
(declare-fun x3170 () Real)
(declare-fun x238 () Real)
(declare-fun x1648 () Real)
(declare-fun x1697 () Real)
(declare-fun x2196 () Bool)
(declare-fun x2772 () Bool)
(declare-fun x1564 () Real)
(declare-fun x3843 () Real)
(declare-fun x1719 () Real)
(declare-fun x1352 () Bool)
(declare-fun x59 () Bool)
(declare-fun x4517 () Real)
(declare-fun x1279 () Real)
(declare-fun x1111 () Bool)
(declare-fun x1930 () Real)
(declare-fun x2044 (x4071) Real)
(declare-fun x4346 () Bool)
(declare-fun x3100 () Real)
(declare-fun x1023 () Bool)
(declare-fun x4876 () Bool)
(declare-fun x1814 (x4071) Real)
(declare-fun x1216 () Bool)
(declare-fun x4465 () Real)
(declare-fun x1150 () Bool)
(declare-fun x5344 () Real)
(declare-fun x64 () Real)
(declare-fun x4017 () Real)
(declare-fun x5159 () Real)
(declare-fun x2422 () Bool)
(declare-fun x4719 () Real)
(declare-fun x3711 () Real)
(declare-fun x4996 () x4071)
(declare-fun x1982 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x1484 (Real) Real)
(declare-fun x3757 () Bool)
(declare-fun x2769 () Real)
(declare-fun x2655 () Bool)
(declare-fun x4579 (x4071) Real)
(declare-fun x2145 () Real)
(declare-fun x5277 () Real)
(declare-fun x2256 () Bool)
(declare-fun x2795 () Real)
(declare-fun x1698 () Real)
(declare-fun x5248 () Real)
(declare-fun x2326 () Bool)
(declare-fun x3781 () Real)
(declare-fun x95 () Bool)
(declare-fun x2191 () Real)
(declare-fun x2034 () Real)
(declare-fun x1818 () Bool)
(declare-fun x4810 () Bool)
(declare-fun x3311 () Real)
(declare-fun x3310 () Real)
(declare-fun x2476 () Real)
(declare-fun x1427 () Bool)
(declare-fun x2204 () Real)
(declare-fun x3211 () Bool)
(declare-fun x597 () Real)
(declare-fun x3501 (x4071) Real)
(declare-fun x1248 () Bool)
(declare-fun x357 () Bool)
(declare-fun x3697 () Bool)
(declare-fun x2140 () Real)
(declare-fun x1567 () Real)
(declare-fun x2925 () x4071)
(declare-fun x253 () Real)
(declare-fun x1801 () Bool)
(declare-fun x526 () Real)
(declare-fun x961 () Real)
(declare-fun x2665 () Real)
(declare-fun x4012 () Real)
(declare-fun x3057 () Real)
(declare-fun x918 () Bool)
(declare-fun x4446 () Real)
(declare-fun x4070 () Real)
(declare-fun x1686 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x5236 () Bool)
(declare-fun x4360 () Bool)
(declare-fun x519 () Real)
(declare-fun x5348 () Real)
(declare-fun x2957 () Bool)
(declare-fun x2543 () Real)
(declare-fun x948 () Bool)
(declare-fun x2878 () Real)
(declare-fun x2062 () Bool)
(declare-fun x5331 () Real)
(declare-fun x4970 () Real)
(declare-fun x3332 () Real)
(declare-fun x4704 () Real)
(declare-fun x4929 () Real)
(declare-fun x4908 () Real)
(declare-fun x944 () Real)
(declare-fun x2270 () Real)
(declare-fun x3810 () Bool)
(declare-fun x3338 () Real)
(declare-fun x4032 () Bool)
(declare-fun x765 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x1999 () Real)
(declare-fun x5296 () Real)
(declare-fun x1634 () Bool)
(declare-fun x3790 () Real)
(declare-fun x2201 () Bool)
(declare-fun x2712 () Bool)
(declare-fun x2458 () Real)
(declare-fun x4610 () Real)
(declare-fun x2043 () Bool)
(declare-fun x4616 () Bool)
(declare-fun x5360 () Bool)
(declare-fun x3756 () Real)
(declare-fun x3922 () Bool)
(declare-fun x4067 () Bool)
(declare-fun x4362 () Real)
(declare-fun x5084 () Bool)
(declare-fun x3880 () Real)
(declare-fun x3885 () Bool)
(declare-fun x1296 () Real)
(declare-fun x3260 () Real)
(declare-fun x4435 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x174 () Bool)
(declare-fun x4932 () Real)
(declare-fun x981 () Real)
(declare-fun x3997 () Real)
(declare-fun x3733 () Real)
(declare-fun x4117 () Real)
(declare-fun x2169 () Real)
(declare-fun x1817 () Real)
(declare-fun x3822 () Real)
(declare-fun x4492 () Bool)
(declare-fun x3949 () Real)
(declare-fun x2669 () Real)
(declare-fun x4776 () Real)
(declare-fun x5001 () Bool)
(declare-fun x886 () Real)
(declare-fun x5361 () Bool)
(declare-fun x5290 () Real)
(declare-fun x919 () Real)
(declare-fun x4558 () Real)
(declare-fun x3606 () Real)
(declare-fun x2788 () Bool)
(declare-fun x3935 () Real)
(declare-fun x617 () Bool)
(declare-fun x4886 () Real)
(declare-fun x2289 () Bool)
(declare-fun x3677 () Real)
(declare-fun x1865 () Real)
(declare-fun x3775 () Real)
(declare-fun x4555 (x4071) Real)
(declare-fun x2752 () Real)
(declare-fun x4812 () x4071)
(declare-fun x1664 () Real)
(declare-fun x393 () Bool)
(declare-fun x4588 () Real)
(declare-fun x4300 () Real)
(declare-fun x2182 () Real)
(declare-fun x864 (x4071) Real)
(declare-fun x3858 () Real)
(declare-fun x1344 () Real)
(declare-fun x5306 () Real)
(declare-fun x1752 () Bool)
(declare-fun x4664 () Real)
(declare-fun x686 () Real)
(declare-fun x181 () Real)
(declare-fun x4911 () Bool)
(declare-fun x1375 () Real)
(declare-fun x2097 () Real)
(declare-fun x3016 () Bool)
(declare-fun x5382 () Bool)
(declare-fun x2239 () Real)
(declare-fun x375 () Real)
(declare-fun x3064 () x4071)
(declare-fun x5289 () Real)
(declare-fun x4406 () Real)
(declare-fun x5028 () Real)
(declare-fun x2733 () Bool)
(declare-fun x5324 () Real)
(declare-fun x4683 (Real) Real)
(declare-fun x2905 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x3371 () Real)
(declare-fun x4137 () Bool)
(declare-fun x2163 () Real)
(declare-fun x4415 () Bool)
(declare-fun x4356 () Bool)
(declare-fun x1455 () Real)
(declare-fun x3459 () Bool)
(declare-fun x2776 () Bool)
(declare-fun x4808 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x70 () Real)
(declare-fun x4024 () Real)
(declare-fun x2930 () Real)
(declare-fun x395 () Real)
(declare-fun x3638 () Real)
(declare-fun x3200 () Bool)
(declare-fun x4157 () Real)
(declare-fun x3787 () Bool)
(declare-fun x1250 () Real)
(declare-fun x906 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x3745 () Real)
(declare-fun x790 () Bool)
(declare-fun x4449 () Bool)
(declare-fun x3941 () Real)
(declare-fun x2548 () Real)
(declare-fun x476 () Real)
(declare-fun x418 () Real)
(declare-fun x1868 () Real)
(declare-fun x1151 () Real)
(declare-fun x1197 () Real)
(declare-fun x2618 () Real)
(declare-fun x3839 () Real)
(declare-fun x5157 () Real)
(declare-fun x2420 () Bool)
(declare-fun x1121 () Real)
(declare-fun x3189 () Real)
(declare-fun x2842 () Bool)
(declare-fun x2016 () Real)
(declare-fun x4532 () Real)
(declare-fun x2973 () Bool)
(declare-fun x366 () Real)
(declare-fun x4915 () Real)
(declare-fun x2279 () x4071)
(declare-fun x1780 () Real)
(declare-fun x254 (Real) Real)
(declare-fun x1541 () Real)
(declare-fun x1929 () Bool)
(declare-fun x427 () Real)
(declare-fun x1743 () Real)
(declare-fun x5199 () Real)
(declare-fun x2126 () Bool)
(declare-fun x4001 () Bool)
(declare-fun x4846 () Bool)
(declare-fun x965 () Bool)
(declare-fun x3272 () Real)
(declare-fun x5128 () Bool)
(declare-fun x4022 () Bool)
(declare-fun x1838 () Real)
(declare-fun x1362 () Real)
(declare-fun x3245 () Bool)
(declare-fun x3942 () x4071)
(declare-fun x899 () Real)
(declare-fun x1513 () Bool)
(declare-fun x831 (x4071) Real)
(declare-fun x1377 () Real)
(declare-fun x953 () Real)
(declare-fun x4305 () Real)
(declare-fun x1353 () Real)
(declare-fun x4926 () Real)
(declare-fun x4854 () Real)
(declare-fun x1695 (x4071) Real)
(declare-fun x4906 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x3970 () Real)
(declare-fun x3796 () Bool)
(declare-fun x950 () Real)
(declare-fun x3123 () Bool)
(declare-fun x4922 () Real)
(declare-fun x5176 () Real)
(declare-fun x5060 () Real)
(declare-fun x2588 () x4071)
(declare-fun x3076 () Bool)
(declare-fun x1246 () Real)
(declare-fun x4007 () Bool)
(declare-fun x3855 (x4071) Real)
(declare-fun x1434 () Real)
(declare-fun x1093 () Real)
(declare-fun x962 () Bool)
(declare-fun x155 () Bool)
(declare-fun x4196 () Real)
(declare-fun x56 () Real)
(declare-fun x959 () Real)
(declare-fun x5140 () Real)
(declare-fun x5356 () Bool)
(declare-fun x4026 () Real)
(declare-fun x3326 () Real)
(declare-fun x682 () Real)
(declare-fun x50 () Real)
(declare-fun x2526 () Real)
(declare-fun x4774 () Bool)
(declare-fun x539 () Bool)
(declare-fun x2829 () Real)
(declare-fun x2995 () Real)
(declare-fun x217 () Real)
(declare-fun x1812 () Bool)
(declare-fun x836 () Real)
(declare-fun x2529 () Real)
(declare-fun x772 () Real)
(declare-fun x4684 () Real)
(declare-fun x384 () Real)
(declare-fun x3958 () Real)
(declare-fun x1900 () Bool)
(declare-fun x4215 () Bool)
(declare-fun x967 () Real)
(declare-fun x371 () Bool)
(declare-fun x331 () x4071)
(declare-fun x4351 () Real)
(declare-fun x247 () Bool)
(declare-fun x2653 () Bool)
(declare-fun x3891 () x4071)
(declare-fun x2574 () Real)
(declare-fun x2245 () Bool)
(declare-fun x2864 () Bool)
(declare-fun x2677 () Real)
(declare-fun x2072 () Real)
(declare-fun x860 () Real)
(declare-fun x1135 () Real)
(declare-fun x2401 () x4071)
(declare-fun x4937 () Bool)
(declare-fun x4806 () Real)
(declare-fun x1781 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x3909 () x4071)
(declare-fun x4663 () Real)
(declare-fun x282 () Real)
(declare-fun x2711 () Real)
(declare-fun x559 (Real) Real)
(declare-fun x3314 (Real) Real)
(declare-fun x979 () Bool)
(declare-fun x3390 () Real)
(declare-fun x1989 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x4557 () x4071)
(declare-fun x3143 () Bool)
(declare-fun x4385 () Bool)
(declare-fun x4139 () Real)
(declare-fun x4341 () Real)
(declare-fun x1835 () Real)
(declare-fun x3124 () Real)
(declare-fun x1651 () Real)
(declare-fun x1644 () Bool)
(declare-fun x2030 () Real)
(declare-fun x3622 () Real)
(declare-fun x4635 () Bool)
(declare-fun x4783 () Real)
(declare-fun x2207 () x4071)
(declare-fun x4642 () Real)
(declare-fun x4840 () Real)
(declare-fun x878 () Real)
(declare-fun x4578 () Bool)
(declare-fun x4216 () Real)
(declare-fun x4370 () Real)
(declare-fun x1529 () Real)
(declare-fun x4443 () Real)
(declare-fun x3078 () Bool)
(declare-fun x3806 () Real)
(declare-fun x2312 () Bool)
(declare-fun x4016 () Real)
(declare-fun x3134 () Real)
(declare-fun x1943 () Real)
(declare-fun x3994 () Real)
(declare-fun x3659 () Bool)
(declare-fun x4717 () Bool)
(declare-fun x1726 (x4071) Real)
(declare-fun x3017 () Bool)
(declare-fun x4739 () Real)
(declare-fun x1472 () Real)
(declare-fun x2668 () Bool)
(declare-fun x1615 () x4071)
(declare-fun x488 () Bool)
(declare-fun x1539 () Real)
(declare-fun x1585 () Bool)
(declare-fun x1928 () Real)
(declare-fun x114 () Bool)
(declare-fun x30 () Real)
(declare-fun x3281 () Real)
(declare-fun x2224 () Real)
(declare-fun x3420 () Bool)
(declare-fun x3540 () Real)
(declare-fun x3168 () Real)
(declare-fun x3990 () Real)
(declare-fun x3656 () Bool)
(declare-fun x5314 () Real)
(declare-fun x5319 () Real)
(declare-fun x4340 () Real)
(declare-fun x2750 () Real)
(declare-fun x2893 () Real)
(declare-fun x3362 () Bool)
(declare-fun x1385 () Real)
(declare-fun x2372 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x1399 () Real)
(declare-fun x2261 () Real)
(declare-fun x3590 () Real)
(declare-fun x1019 () Real)
(declare-fun x4511 () Real)
(declare-fun x5134 () Real)
(declare-fun x3268 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x2539 () x4071)
(declare-fun x4290 (x4071) Real)
(declare-fun x4232 () Real)
(declare-fun x4313 () Bool)
(declare-fun x3441 () Real)
(declare-fun x4266 () Real)
(declare-fun x4102 () Real)
(declare-fun x5090 () Bool)
(declare-fun x213 () Bool)
(declare-fun x4592 () Real)
(declare-fun x2883 () Real)
(declare-fun x3984 () Bool)
(declare-fun x3337 () Real)
(declare-fun x3304 () Bool)
(declare-fun x1732 () Real)
(declare-fun x4625 () Bool)
(declare-fun x3657 () Bool)
(declare-fun x1635 () Real)
(declare-fun x160 () Real)
(declare-fun x3888 () Bool)
(declare-fun x1363 () Real)
(declare-fun x939 () Bool)
(declare-fun x2613 () Bool)
(declare-fun x1855 () Real)
(declare-fun x5270 () Real)
(declare-fun x1477 () Bool)
(declare-fun x2899 () Real)
(declare-fun x4785 () Real)
(declare-fun x2448 () Real)
(declare-fun x5282 () Real)
(declare-fun x2792 () Bool)
(declare-fun x1196 () Real)
(declare-fun x4268 (x4071) Real)
(declare-fun x4366 () Real)
(declare-fun x3283 () Real)
(declare-fun x197 () Real)
(declare-fun x3077 () Real)
(declare-fun x512 () Real)
(declare-fun x1457 () Real)
(declare-fun x268 () Real)
(declare-fun x2828 () Bool)
(declare-fun x3053 () Bool)
(declare-fun x224 () Real)
(declare-fun x1311 () Real)
(declare-fun x165 () Bool)
(declare-fun x178 () Real)
(declare-fun x5116 () Real)
(declare-fun x1152 () x4071)
(declare-fun x3513 () Real)
(declare-fun x1055 () Real)
(declare-fun x3945 () x4071)
(declare-fun x3816 () Bool)
(declare-fun x3384 () Real)
(declare-fun x921 () Real)
(declare-fun x3428 () Real)
(declare-fun x467 () Real)
(declare-fun x4540 () Real)
(declare-fun x2350 () Bool)
(declare-fun x1958 () Real)
(declare-fun x1143 () Real)
(declare-fun x2762 () Real)
(declare-fun x218 () Real)
(declare-fun x5056 () Bool)
(declare-fun x3186 () Real)
(declare-fun x2129 () Real)
(declare-fun x2177 () Real)
(declare-fun x4729 () Real)
(declare-fun x1085 () Real)
(declare-fun x340 () Bool)
(declare-fun x2720 () Real)
(declare-fun x934 () Real)
(declare-fun x1110 () Bool)
(declare-fun x1289 () Real)
(declare-fun x778 () Real)
(declare-fun x1227 () Real)
(declare-fun x3980 () Bool)
(declare-fun x4431 (x4071) Real)
(declare-fun x1432 () Real)
(declare-fun x193 () Bool)
(declare-fun x4482 () Real)
(declare-fun x2226 () Real)
(declare-fun x2172 () Real)
(declare-fun x265 () Real)
(declare-fun x5350 () Real)
(declare-fun x2590 () Bool)
(declare-fun x952 () Real)
(declare-fun x3630 () Real)
(declare-fun x4444 () Real)
(declare-fun x4149 () Real)
(declare-fun x1945 () Real)
(declare-fun x3368 () Bool)
(declare-fun x4827 () Bool)
(declare-fun x1494 () Real)
(declare-fun x577 () Real)
(declare-fun x3485 () Real)
(declare-fun x599 () Real)
(declare-fun x245 () Real)
(declare-fun x4043 () Bool)
(declare-fun x4669 () Real)
(declare-fun x3116 () Bool)
(declare-fun x5052 () Bool)
(declare-fun x5369 () Bool)
(declare-fun x3243 () Real)
(declare-fun x1922 () Real)
(declare-fun x2389 () Bool)
(declare-fun x4107 () Real)
(declare-fun x671 () x4071)
(declare-fun x1431 () Real)
(declare-fun x1276 () Bool)
(declare-fun x1149 () Real)
(declare-fun x4198 () Real)
(declare-fun x2837 () Bool)
(declare-fun x3688 () Real)
(declare-fun x4761 () Real)
(declare-fun x3294 () Real)
(declare-fun x2244 () Real)
(declare-fun x2449 () Bool)
(declare-fun x4240 () Real)
(declare-fun x592 () Real)
(declare-fun x1703 () Real)
(declare-fun x4543 () Real)
(declare-fun x257 () Bool)
(declare-fun x5161 () Real)
(declare-fun x5029 () Real)
(declare-fun x333 () Real)
(declare-fun x4321 () Bool)
(declare-fun x5022 () Real)
(declare-fun x2301 () Real)
(declare-fun x1452 (x4071) Real)
(declare-fun x3830 () Bool)
(declare-fun x4845 () Real)
(declare-fun x231 () Bool)
(declare-fun x2251 () Real)
(declare-fun x62 () Bool)
(declare-fun x1325 () Real)
(declare-fun x593 () Real)
(declare-fun x2075 () Real)
(declare-fun x1479 () Real)
(declare-fun x1205 () Bool)
(declare-fun x156 (Real) Real)
(declare-fun x1691 () Real)
(declare-fun x909 () Real)
(declare-fun x4640 () Real)
(declare-fun x2315 () Real)
(declare-fun x1299 () Real)
(declare-fun x2546 () Real)
(declare-fun x1617 () Real)
(declare-fun x684 () Real)
(declare-fun x380 (x4071) Real)
(declare-fun x3328 () x4071)
(declare-fun x630 () Bool)
(declare-fun x3863 () Real)
(declare-fun x3724 (x4071) Real)
(declare-fun x843 () Bool)
(declare-fun x3480 () Bool)
(declare-fun x1782 (Real) Real)
(declare-fun x2827 () Real)
(declare-fun x1556 () Real)
(declare-fun x2168 () Real)
(declare-fun x5105 () Real)
(declare-fun x2423 (Real) Real)
(declare-fun x2281 () Bool)
(declare-fun x4420 () x4071)
(declare-fun x4726 () x4071)
(declare-fun x5287 () Real)
(declare-fun x1439 () Real)
(declare-fun x4428 () x4071)
(declare-fun x1981 () Bool)
(declare-fun x2240 () Real)
(declare-fun x1323 () Bool)
(declare-fun x2863 () Real)
(declare-fun x1320 () Bool)
(declare-fun x2662 () Real)
(declare-fun x795 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x3284 () Bool)
(declare-fun x3971 () Bool)
(declare-fun x4516 () Real)
(declare-fun x107 () Bool)
(declare-fun x2584 () Bool)
(declare-fun x2822 () Bool)
(declare-fun x5074 () Bool)
(declare-fun x4765 () Real)
(declare-fun x292 () Bool)
(declare-fun x3204 () Bool)
(declare-fun x1891 () Real)
(declare-fun x3334 () Real)
(declare-fun x883 () Real)
(declare-fun x672 () Real)
(declare-fun x1783 () Real)
(declare-fun x551 () Real)
(declare-fun x2327 () Real)
(declare-fun x3506 () Real)
(declare-fun x4391 () Real)
(declare-fun x4721 () Real)
(declare-fun x2292 () Real)
(declare-fun x135 () Real)
(declare-fun x4576 () Real)
(declare-fun x1261 () Real)
(declare-fun x5071 () Real)
(declare-fun x1525 () Real)
(declare-fun x4818 () Bool)
(declare-fun x2651 () Bool)
(declare-fun x4531 () Bool)
(declare-fun x315 () Real)
(declare-fun x922 () Bool)
(declare-fun x1832 () Real)
(declare-fun x1834 () Bool)
(declare-fun x5064 () Bool)
(declare-fun x726 () Bool)
(declare-fun x2710 () Real)
(declare-fun x4837 () Real)
(declare-fun x3402 () Bool)
(declare-fun x5094 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x4219 () Real)
(declare-fun x472 () Bool)
(declare-fun x1394 () Real)
(declare-fun x752 () Real)
(declare-fun x3118 () x4071)
(declare-fun x4021 () Real)
(declare-fun x3198 () Real)
(declare-fun x821 () Bool)
(declare-fun x2945 () Bool)
(declare-fun x3857 () Real)
(declare-fun x4757 () Bool)
(declare-fun x1263 () Real)
(declare-fun x949 () Real)
(declare-fun x3526 () Real)
(declare-fun x4720 () Bool)
(declare-fun x4496 () Bool)
(declare-fun x3584 () Real)
(declare-fun x1460 () Real)
(declare-fun x4636 () Bool)
(declare-fun x108 () Real)
(declare-fun x3232 () Bool)
(declare-fun x3510 () Real)
(declare-fun x3626 () Bool)
(declare-fun x4074 () x4071)
(declare-fun x3192 () Bool)
(declare-fun x3039 () Real)
(declare-fun x1931 () Real)
(declare-fun x4131 () Real)
(declare-fun x4939 () Real)
(declare-fun x736 () x4071)
(declare-fun x3725 () Real)
(declare-fun x5374 () Real)
(declare-fun x3798 () Bool)
(declare-fun x5341 () Bool)
(declare-fun x3639 () Real)
(declare-fun x1403 () Bool)
(declare-fun x1760 () Real)
(declare-fun x2233 () Real)
(declare-fun x915 () Real)
(declare-fun x3275 () Bool)
(declare-fun x1744 () Real)
(declare-fun x299 () Bool)
(declare-fun x389 () Real)
(declare-fun x1419 () Real)
(declare-fun x5372 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x5119 () Real)
(declare-fun x2304 () Real)
(declare-fun x4767 () Real)
(declare-fun x3953 () Real)
(declare-fun x4258 () Real)
(declare-fun x1690 () Bool)
(declare-fun x3018 () Real)
(declare-fun x2345 () Bool)
(declare-fun x2490 () Real)
(declare-fun x125 () Real)
(declare-fun x1393 () Real)
(declare-fun x853 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x2464 () Real)
(declare-fun x542 () Real)
(declare-fun x3906 () Bool)
(declare-fun x4514 () Real)
(declare-fun x3598 () Real)
(declare-fun x3509 () Bool)
(declare-fun x2046 () Real)
(declare-fun x4548 () Real)
(declare-fun x1517 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x4239 () Real)
(declare-fun x4376 () Bool)
(declare-fun x3500 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x3325 () Bool)
(declare-fun x4322 () Real)
(declare-fun x787 () Bool)
(declare-fun x4677 () Bool)
(declare-fun x1569 () Real)
(declare-fun x4265 () Bool)
(declare-fun x5375 () Real)
(declare-fun x5088 () Bool)
(declare-fun x243 () Bool)
(declare-fun x4990 () Real)
(declare-fun x4263 () Real)
(declare-fun x1138 () x4071)
(declare-fun x3577 () Real)
(declare-fun x2273 () Bool)
(declare-fun x4735 () Real)
(declare-fun x4090 () Real)
(declare-fun x3883 () Bool)
(declare-fun x215 () Real)
(declare-fun x2562 () Real)
(declare-fun x1711 () Bool)
(declare-fun x2747 () Bool)
(declare-fun x3436 () Real)
(declare-fun x1070 () Real)
(declare-fun x4972 () Bool)
(declare-fun x3194 () Real)
(declare-fun x4980 () Real)
(declare-fun x1751 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x148 () Real)
(declare-fun x2025 () Bool)
(declare-fun x3635 (Real) Real)
(declare-fun x2463 (Real) Real)
(declare-fun x1042 () Real)
(declare-fun x2306 () Real)
(declare-fun x3423 (Real) Real)
(declare-fun x3811 () Bool)
(declare-fun x2367 () Bool)
(declare-fun x1105 () Real)
(declare-fun x4316 () Real)
(declare-fun x1661 () Real)
(declare-fun x4989 () Real)
(declare-fun x4011 () Bool)
(declare-fun x2313 () Real)
(declare-fun x3531 () Bool)
(declare-fun x4632 () Real)
(declare-fun x1287 () Bool)
(declare-fun x4762 () Real)
(declare-fun x746 (x4071) Real)
(declare-fun x2540 () Bool)
(declare-fun x3961 () Real)
(declare-fun x5149 () Bool)
(declare-fun x26 () Real)
(declare-fun x99 () Real)
(declare-fun x4518 () Bool)
(declare-fun x3823 () Real)
(declare-fun x637 () Bool)
(declare-fun x4782 () Real)
(declare-fun x4802 () x4071)
(declare-fun x3944 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x4063 () Bool)
(declare-fun x4834 () Bool)
(declare-fun x3550 () Real)
(declare-fun x4973 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x2817 () Real)
(declare-fun x3155 () Real)
(declare-fun x4078 () Bool)
(declare-fun x1675 (Real) Real)
(declare-fun x2966 (x4071) Real)
(declare-fun x5093 () Real)
(declare-fun x3546 () Real)
(declare-fun x87 () Real)
(declare-fun x3444 () Real)
(declare-fun x2278 () Real)
(declare-fun x1063 () Bool)
(declare-fun x4194 () Bool)
(declare-fun x1011 () Real)
(declare-fun x1212 () Real)
(declare-fun x2658 () Real)
(declare-fun x4469 () Bool)
(declare-fun x43 () Real)
(declare-fun x1255 () Real)
(declare-fun x2411 (x4071) Real)
(declare-fun x624 () Real)
(declare-fun x1476 () Bool)
(declare-fun x2388 () Bool)
(declare-fun x1464 () Real)
(declare-fun x2064 () Bool)
(declare-fun x4495 () Bool)
(declare-fun x2688 () Real)
(declare-fun x443 (x4071) Real)
(declare-fun x1770 () Real)
(declare-fun x3469 () Real)
(declare-fun x2308 () Bool)
(declare-fun x2066 () Real)
(declare-fun x2036 () Real)
(declare-fun x2412 () Real)
(declare-fun x1508 () Real)
(declare-fun x1864 () Real)
(declare-fun x4186 () x4071)
(declare-fun x4427 () x4071)
(declare-fun x479 (x4071) Real)
(declare-fun x1337 () Real)
(declare-fun x2689 () Real)
(declare-fun x4115 () Real)
(declare-fun x3408 () Real)
(declare-fun x4744 () Real)
(declare-fun x3515 () Real)
(declare-fun x3114 () Real)
(declare-fun x3747 () x4071)
(declare-fun x4811 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x5213 () Real)
(declare-fun x2494 () Real)
(declare-fun x1471 () Real)
(declare-fun x3335 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x595 () Real)
(declare-fun x2906 () Bool)
(declare-fun x4671 () Real)
(declare-fun x2815 () Real)
(declare-fun x1955 () Bool)
(declare-fun x158 () Real)
(declare-fun x5254 () Bool)
(declare-fun x2249 () Real)
(declare-fun x3370 () Real)
(declare-fun x5359 () Bool)
(declare-fun x1657 () Real)
(declare-fun x3600 () Bool)
(declare-fun x2146 () Bool)
(declare-fun x365 () Real)
(declare-fun x3597 () Real)
(declare-fun x88 () Real)
(declare-fun x2489 () Real)
(declare-fun x4003 () Real)
(declare-fun x4135 () Bool)
(declare-fun x868 () Bool)
(declare-fun x4151 () Real)
(declare-fun x2779 () Real)
(declare-fun x370 () Bool)
(declare-fun x1872 () Real)
(declare-fun x1271 () Real)
(declare-fun x1996 () Real)
(declare-fun x1049 () Real)
(declare-fun x2 () x4071)
(declare-fun x3536 () Real)
(declare-fun x678 () Bool)
(declare-fun x5129 () Real)
(declare-fun x4407 () Real)
(declare-fun x4660 () Real)
(declare-fun x2732 () Bool)
(declare-fun x688 () Real)
(declare-fun x2343 () Bool)
(declare-fun x815 () Bool)
(declare-fun x2132 () Real)
(declare-fun x1786 () Real)
(declare-fun x3175 () Bool)
(declare-fun x1964 () Real)
(declare-fun x880 () Real)
(declare-fun x1031 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x3856 () Real)
(declare-fun x2527 () Real)
(declare-fun x986 () Real)
(declare-fun x532 () x4071)
(declare-fun x4483 () Real)
(declare-fun x3979 () Real)
(declare-fun x2121 () Real)
(declare-fun x3425 () Real)
(declare-fun x4050 () Real)
(declare-fun x2407 () Real)
(declare-fun x5008 () x4071)
(declare-fun x1850 () Real)
(declare-fun x2831 () Real)
(declare-fun x4206 () Real)
(declare-fun x3391 () Bool)
(declare-fun x4458 () Real)
(declare-fun x1388 () Real)
(define-fun x6 ((x4071 x4071) (x308 Real)) x4071 (ite ((_ is x4099) x4071) (x4099 (x3664 x4071) (+ (x2382 x4071) x308)) (ite ((_ is x2113) x4071) (x2113 (x25 x4071) (x2077 x4071) (+ x308 (x2758 x4071))) (x4755 (+ (x5013 x4071) x308)))))
(define-fun x1960 ((x3121 Real)) Real (ite (and (>= x3121 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3121)) x3121 (- x3121 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x4062 ((x3121 Real)) Real (ite (and (>= x3121 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x3121 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3121) x3121))
(define-fun x609 ((x837 Real)) Bool (and (<= 0 x837) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837)))
(define-fun x820 ((x837 Real)) Bool (and (= x837 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639935 x837)) (= (x5313 x837 115792089237316195423570985008687907853269984665640564039457584007913129639935) x837)))
(define-fun x3012 ((x837 Real)) Bool (and (= 0 (x5313 0 x837)) (= 0 (x5313 x837 0))))
(define-fun x702 ((x837 Real)) Bool (= (x5313 x837 x837) x837))
(define-fun x745 ((x837 Real)) Bool (and (x820 x837) (x702 x837) (x3012 x837)))
(define-fun x723 ((x837 Real)) Bool (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x837)) (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x837)))
(define-fun x2797 ((x837 Real)) Bool (=> (and (< x837 32) (<= 0 x837)) (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x837) 0)))
(define-fun x5295 ((x837 Real) (x2764 Real) (x127 Real) (x777 Real)) Bool (and (< x777 1) (> 32 x2764) (< x127 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= x837 (+ x2764 (* x127 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x777))) (>= x777 0) (>= x127 0) (>= x2764 0) (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x837) (* x127 32))))
(define-fun x3454 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x723 x837) (x5295 x837 x2774 x4306 x744) (x2797 x837)))
(define-fun x5368 ((x837 Real) (x2764 Real)) Bool (= (x5313 x837 x2764) (x5313 x2764 x837)))
(define-fun x3422 ((x837 Real) (x2764 Real)) Bool (and (>= (x5313 x837 x2764) 0) (=> (>= x2764 0) (<= (x5313 x837 x2764) x2764)) (=> (>= x837 0) (<= (x5313 x837 x2764) x837))))
(define-fun x4661 ((x837 Real) (x2764 Real)) Bool (and (x3422 x837 x2764) (x5368 x837 x2764)))
(define-fun x79 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x3454 x837 x2774 x4306 x744) (x4661 x837 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x328 ((x837 Real)) Bool (= (x5313 255 x837) (x5313 255 (x5313 255 x837))))
(define-fun x4097 ((x837 Real)) Bool (=> (and (> 256 x837) (>= x837 0)) (= (x5313 255 x837) x837)))
(define-fun x5178 ((x837 Real)) Bool (=> (= (x5313 255 x837) x837) (and (< x837 256) (<= 0 x837))))
(define-fun x2528 ((x837 Real)) Bool (=> (and (< x837 512) (<= 256 x837)) (= (x5313 255 x837) (- x837 256))))
(define-fun x3308 ((x837 Real) (x2764 Real)) Bool (and (= x837 (+ (* 256 x2764) (x5313 255 x837))) (>= x2764 0)))
(define-fun x3249 ((x837 Real) (x4295 Real)) Bool (and (x328 x837) (x5178 x837) (x3308 x837 x4295) (x2528 x837) (x4097 x837)))
(define-fun x4276 ((x837 Real) (x4295 Real)) Bool (and (x3249 x837 x4295) (x4661 x837 255)))
(define-fun x2742 ((x837 Real)) Bool (= (x5313 18446744073709551615 x837) (x5313 18446744073709551615 (x5313 18446744073709551615 x837))))
(define-fun x4749 ((x837 Real)) Bool (=> (and (>= x837 0) (< x837 18446744073709551616)) (= x837 (x5313 18446744073709551615 x837))))
(define-fun x2796 ((x837 Real)) Bool (=> (= x837 (x5313 18446744073709551615 x837)) (and (<= 0 x837) (> 18446744073709551616 x837))))
(define-fun x3110 ((x837 Real)) Bool (=> (and (> 36893488147419103232 x837) (<= 18446744073709551616 x837)) (= (- x837 18446744073709551616) (x5313 18446744073709551615 x837))))
(define-fun x4943 ((x837 Real) (x2764 Real)) Bool (and (= x837 (+ (* 18446744073709551616 x2764) (x5313 18446744073709551615 x837))) (<= 0 x2764)))
(define-fun x2402 ((x837 Real) (x4295 Real)) Bool (and (x4943 x837 x4295) (x4749 x837) (x3110 x837) (x2742 x837) (x2796 x837)))
(define-fun x3641 ((x837 Real) (x4295 Real)) Bool (and (x2402 x837 x4295) (x4661 x837 18446744073709551615)))
(define-fun x104 ((x837 Real)) Bool (= (x5313 4294967295 (x5313 4294967295 x837)) (x5313 4294967295 x837)))
(define-fun x647 ((x837 Real)) Bool (=> (and (>= x837 0) (> 4294967296 x837)) (= (x5313 4294967295 x837) x837)))
(define-fun x3791 ((x837 Real)) Bool (=> (= x837 (x5313 4294967295 x837)) (and (< x837 4294967296) (<= 0 x837))))
(define-fun x4633 ((x837 Real)) Bool (=> (and (< x837 8589934592) (<= 4294967296 x837)) (= (- x837 4294967296) (x5313 4294967295 x837))))
(define-fun x1826 ((x837 Real) (x2764 Real)) Bool (and (>= x2764 0) (= (+ (x5313 4294967295 x837) (* x2764 4294967296)) x837)))
(define-fun x920 ((x837 Real) (x4295 Real)) Bool (and (x647 x837) (x1826 x837 x4295) (x4633 x837) (x3791 x837) (x104 x837)))
(define-fun x3239 ((x837 Real) (x4295 Real)) Bool (and (x920 x837 x4295) (x4661 x837 4294967295)))
(define-fun x3103 ((x837 Real)) Bool (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639680 x837) (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639680 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639680 x837))))
(define-fun x3864 ((x837 Real)) Bool (=> (and (>= x837 0) (< x837 256)) (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639680 x837) 0)))
(define-fun x1059 ((x837 Real) (x2764 Real) (x127 Real) (x777 Real)) Bool (and (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639680 x837) (* x127 256)) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 x127) (<= 0 x127) (>= x2764 0) (> 256 x2764) (> 1 x777) (<= 0 x777) (= x837 (+ x2764 (* x127 256) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x777)))))
(define-fun x604 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x3103 x837) (x1059 x837 x2774 x4306 x744) (x3864 x837)))
(define-fun x4823 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x4661 x837 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x604 x837 x2774 x4306 x744)))
(define-fun x1153 ((x837 Real)) Bool (= (x5313 1461501637330902918203684832716283019655932542975 (x5313 1461501637330902918203684832716283019655932542975 x837)) (x5313 1461501637330902918203684832716283019655932542975 x837)))
(define-fun x3356 ((x837 Real)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x837) (>= x837 0)) (= x837 (x5313 1461501637330902918203684832716283019655932542975 x837))))
(define-fun x4945 ((x837 Real)) Bool (=> (= (x5313 1461501637330902918203684832716283019655932542975 x837) x837) (and (< x837 1461501637330902918203684832716283019655932542976) (<= 0 x837))))
(define-fun x4542 ((x837 Real)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x837) (>= x837 1461501637330902918203684832716283019655932542976)) (= (x5313 1461501637330902918203684832716283019655932542975 x837) (- x837 1461501637330902918203684832716283019655932542976))))
(define-fun x1561 ((x837 Real) (x2764 Real)) Bool (and (<= 0 x2764) (= (+ (x5313 1461501637330902918203684832716283019655932542975 x837) (* 1461501637330902918203684832716283019655932542976 x2764)) x837)))
(define-fun x2466 ((x837 Real) (x4295 Real)) Bool (and (x1561 x837 x4295) (x4542 x837) (x1153 x837) (x4945 x837) (x3356 x837)))
(define-fun x3829 ((x837 Real) (x4295 Real)) Bool (and (x4661 x837 1461501637330902918203684832716283019655932542975) (x2466 x837 x4295)))
(define-fun x2368 ((x837 Real)) Bool (= (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 x837) (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 x837))))
(define-fun x3777 ((x837 Real)) Bool (=> (and (>= x837 0) (< x837 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x837 (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 x837))))
(define-fun x3608 ((x837 Real)) Bool (=> (= x837 (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 x837)) (and (< x837 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= 0 x837))))
(define-fun x2331 ((x837 Real)) Bool (=> (and (< x837 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x837)) (= (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 x837) (- x837 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(define-fun x3556 ((x837 Real) (x2764 Real)) Bool (and (<= 0 x2764) (= (+ (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 x837) (* x2764 57896044618658097711785492504343953926634992332820282019728792003956564819968)) x837)))
(define-fun x1168 ((x837 Real) (x4295 Real)) Bool (and (x3777 x837) (x3556 x837 x4295) (x2331 x837) (x2368 x837) (x3608 x837)))
(define-fun x1898 ((x837 Real) (x4295 Real)) Bool (and (x1168 x837 x4295) (x4661 x837 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(define-fun x5346 ((x837 Real)) Bool (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x837)) (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x837)))
(define-fun x2236 ((x837 Real)) Bool (=> (and (<= 0 x837) (> 1461501637330902918203684832716283019655932542976 x837)) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x837) 0)))
(define-fun x3712 ((x837 Real) (x2764 Real) (x127 Real) (x777 Real)) Bool (and (= x837 (+ x2764 (* x777 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 1461501637330902918203684832716283019655932542976 x127))) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x837) (* 1461501637330902918203684832716283019655932542976 x127)) (< x127 79228162514264337593543950336) (< x777 1) (>= x777 0) (<= 0 x127) (<= 0 x2764) (< x2764 1461501637330902918203684832716283019655932542976)))
(define-fun x237 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x3712 x837 x2774 x4306 x744) (x2236 x837) (x5346 x837)))
(define-fun x1139 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x237 x837 x2774 x4306 x744) (x4661 x837 115792089237316195423570985007226406215939081747436879206741300988257197096960)))
(define-fun x3869 ((x837 Real)) Bool (= (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x837)) (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x837)))
(define-fun x3767 ((x837 Real)) Bool (=> (and (<= 0 x837) (> 1461501637330902918203684832716283019655932542976 x837)) (= x837 (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x837))))
(define-fun x2228 ((x837 Real) (x2764 Real) (x127 Real) (x777 Real)) Bool (and (= (+ (* x777 26959946667150639794667015087019630673637144422540572481103610249216) x2764) (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x837)) (> 4294967296 x777) (>= x127 0) (= x837 (+ x2764 (* 1461501637330902918203684832716283019655932542976 x127) (* x777 26959946667150639794667015087019630673637144422540572481103610249216))) (<= 0 x2764) (< x127 18446744073709551616) (> 1461501637330902918203684832716283019655932542976 x2764) (<= 0 x777)))
(define-fun x1788 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x2228 x837 x2774 x4306 x744) (x3767 x837) (x3869 x837)))
(define-fun x4468 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x1788 x837 x2774 x4306 x744) (x4661 x837 115792089210356248756420345215482394403581256910207104449633294546465451933695)))
(define-fun x3026 ((x837 Real)) Bool (= (x5313 26959946667150639793205513449688727755433459589824289461447677706240 (x5313 26959946667150639793205513449688727755433459589824289461447677706240 x837)) (x5313 26959946667150639793205513449688727755433459589824289461447677706240 x837)))
(define-fun x167 ((x837 Real)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x837) (<= 0 x837)) (= (x5313 26959946667150639793205513449688727755433459589824289461447677706240 x837) 0)))
(define-fun x2941 ((x837 Real) (x2764 Real) (x127 Real) (x777 Real)) Bool (and (<= 0 x2764) (< x777 4294967296) (>= x127 0) (> 18446744073709551616 x127) (< x2764 1461501637330902918203684832716283019655932542976) (= x837 (+ (* x127 1461501637330902918203684832716283019655932542976) (* 26959946667150639794667015087019630673637144422540572481103610249216 x777) x2764)) (= (* 1461501637330902918203684832716283019655932542976 x127) (x5313 26959946667150639793205513449688727755433459589824289461447677706240 x837)) (>= x777 0)))
(define-fun x3227 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x167 x837) (x3026 x837) (x2941 x837 x2774 x4306 x744)))
(define-fun x2749 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x3227 x837 x2774 x4306 x744) (x4661 x837 26959946667150639793205513449688727755433459589824289461447677706240)))
(define-fun x3299 ((x837 Real)) Bool (= (x5313 26959946667150639794667015087019630673637144422540572481103610249215 (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x837)) (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x837)))
(define-fun x1791 ((x837 Real)) Bool (=> (and (< x837 26959946667150639794667015087019630673637144422540572481103610249216) (<= 0 x837)) (= x837 (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x837))))
(define-fun x2472 ((x837 Real)) Bool (=> (= x837 (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x837)) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x837) (>= x837 0))))
(define-fun x75 ((x837 Real)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x837) (< x837 53919893334301279589334030174039261347274288845081144962207220498432)) (= (- x837 26959946667150639794667015087019630673637144422540572481103610249216) (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x837))))
(define-fun x1809 ((x837 Real) (x2764 Real)) Bool (and (>= x2764 0) (= (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x2764) (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x837)) x837)))
(define-fun x5355 ((x837 Real) (x4295 Real)) Bool (and (x75 x837) (x3299 x837) (x1791 x837) (x1809 x837 x4295) (x2472 x837)))
(define-fun x5318 ((x837 Real) (x4295 Real)) Bool (and (x5355 x837 x4295) (x4661 x837 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x4312 ((x837 Real)) Bool (= (x5313 115792089237316195423570984636004990333889740523700931696805413995650331181055 x837) (x5313 115792089237316195423570984636004990333889740523700931696805413995650331181055 (x5313 115792089237316195423570984636004990333889740523700931696805413995650331181055 x837))))
(define-fun x640 ((x837 Real)) Bool (=> (and (< x837 1461501637330902918203684832716283019655932542976) (>= x837 0)) (= x837 (x5313 115792089237316195423570984636004990333889740523700931696805413995650331181055 x837))))
(define-fun x1667 ((x837 Real) (x2764 Real) (x127 Real) (x777 Real)) Bool (and (= x837 (+ x2764 (* 1461501637330902918203684832716283019655932542976 x127) (* x777 374144419156711147060143317175368453031918731001856))) (= (x5313 115792089237316195423570984636004990333889740523700931696805413995650331181055 x837) (+ x2764 (* 374144419156711147060143317175368453031918731001856 x777))) (<= 0 x127) (<= 0 x2764) (<= 0 x777) (> 309485009821345068724781056 x777) (> 1461501637330902918203684832716283019655932542976 x2764) (< x127 256)))
(define-fun x2467 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x1667 x837 x2774 x4306 x744) (x640 x837) (x4312 x837)))
(define-fun x3649 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x4661 x837 115792089237316195423570984636004990333889740523700931696805413995650331181055) (x2467 x837 x2774 x4306 x744)))
(define-fun x563 ((x837 Real)) Bool (= (x5313 372682917519380244141939632342652170012262798458880 (x5313 372682917519380244141939632342652170012262798458880 x837)) (x5313 372682917519380244141939632342652170012262798458880 x837)))
(define-fun x5180 ((x837 Real)) Bool (=> (and (<= 0 x837) (< x837 1461501637330902918203684832716283019655932542976)) (= 0 (x5313 372682917519380244141939632342652170012262798458880 x837))))
(define-fun x3229 ((x837 Real) (x2764 Real) (x127 Real) (x777 Real)) Bool (and (< x127 256) (< x777 309485009821345068724781056) (< x2764 1461501637330902918203684832716283019655932542976) (<= 0 x127) (>= x777 0) (= (* 1461501637330902918203684832716283019655932542976 x127) (x5313 372682917519380244141939632342652170012262798458880 x837)) (= x837 (+ (* 1461501637330902918203684832716283019655932542976 x127) (* x777 374144419156711147060143317175368453031918731001856) x2764)) (<= 0 x2764)))
(define-fun x3163 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x563 x837) (x3229 x837 x2774 x4306 x744) (x5180 x837)))
(define-fun x2556 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x4661 x837 372682917519380244141939632342652170012262798458880) (x3163 x837 x2774 x4306 x744)))
(define-fun x1728 ((x837 Real)) Bool (= (x5313 115792089210356248756420345214020892766250353992003419616917011526809519390720 (x5313 115792089210356248756420345214020892766250353992003419616917011526809519390720 x837)) (x5313 115792089210356248756420345214020892766250353992003419616917011526809519390720 x837)))
(define-fun x2555 ((x837 Real)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x837) (>= x837 0)) (= 0 (x5313 115792089210356248756420345214020892766250353992003419616917011526809519390720 x837))))
(define-fun x2217 ((x837 Real) (x2764 Real) (x127 Real) (x777 Real)) Bool (and (>= x2764 0) (< x127 4294967296) (> 26959946667150639794667015087019630673637144422540572481103610249216 x2764) (= (+ (* x127 26959946667150639794667015087019630673637144422540572481103610249216) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x777) x2764) x837) (= (x5313 115792089210356248756420345214020892766250353992003419616917011526809519390720 x837) (* x127 26959946667150639794667015087019630673637144422540572481103610249216)) (>= x127 0) (> 1 x777) (>= x777 0)))
(define-fun x2927 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x2555 x837) (x2217 x837 x2774 x4306 x744) (x1728 x837)))
(define-fun x3350 ((x837 Real) (x2774 Real) (x4306 Real) (x744 Real)) Bool (and (x4661 x837 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x2927 x837 x2774 x4306 x744)))
(define-fun x5102 ((x2850 Real)) Real (x2423 x2850))
(define-fun x2092 ((x2850 x4071)) Real (ite (= x2850 (x5032 x4213)) x2301 (x1731 x2850)))
(define-fun x4047 ((x2850 x4071)) Real (ite (= (x5032 274184521717934524641157099916833587240) x2850) x4596 (x2092 x2850)))
(define-fun x1619 ((x2850 Real)) Real (ite (= x2850 128) x3901 (x493 x2850)))
(define-fun x4513 ((x2850 Real)) Real (ite (and (< x2850 (+ x3901 160)) (>= x2850 160)) (x2423 (+ x1621 (- x2850 160))) (x1619 x2850)))
(define-fun x3694 ((x2850 Real)) Real (ite (= x4861 x2850) 0 (x4513 x2850)))
(define-fun x1324 ((x2850 Real)) Real (ite (= x521 x2850) x915 (x3694 x2850)))
(define-fun x4641 ((x2850 Real)) Real (ite (= x2850 x2649) x2348 (x1324 x2850)))
(define-fun x1570 ((x2850 Real)) Real (ite (= x2850 x5086) x2974 (x4641 x2850)))
(define-fun x875 ((x2850 Real)) Real (ite (= x2046 x2850) x4836 (x1570 x2850)))
(define-fun x4161 ((x2850 Real)) Real (ite (= x2850 x1078) x3660 (x875 x2850)))
(define-fun x1764 ((x2850 Real)) Real (ite (= x2850 x5316) x3338 (x4161 x2850)))
(define-fun x1014 ((x2850 Real)) Real (ite (= x3624 x2850) x4305 (x1764 x2850)))
(define-fun x2264 ((x2850 Real)) Real (ite (= x99 x2850) x3784 (x1014 x2850)))
(define-fun x1578 ((x2850 Real)) Real (ite (= x1433 x2850) x1730 (x2264 x2850)))
(define-fun x2088 ((x2850 Real)) Real (ite (= x2850 x3331) x3892 (x1578 x2850)))
(define-fun x4552 ((x2850 Real)) Real (ite (= x2850 x2179) (ite true 1 0) (x2088 x2850)))
(define-fun x766 ((x2850 x4071)) Real (ite (= x676 x2850) x2682 (x3215 x2850)))
(define-fun x3507 ((x2850 Real)) Real (ite (= x4046 x2850) x915 (x4552 x2850)))
(define-fun x100 ((x2850 Real)) Real (ite (= x1817 x2850) x2348 (x3507 x2850)))
(define-fun x863 ((x2850 Real)) Real (ite (= x3272 x2850) x3505 (x100 x2850)))
(define-fun x2386 ((x2850 Real)) Real (ite (= x2890 x2850) x2964 (x863 x2850)))
(define-fun x623 ((x2850 Real)) Real (ite (= x1448 x2850) x435 (x2386 x2850)))
(define-fun x1158 ((x2850 Real)) Real (ite (= x2850 x179) x3199 (x623 x2850)))
(define-fun x159 ((x2850 Real)) Real (ite (= x3863 x2850) x1299 (x1158 x2850)))
(define-fun x3933 ((x2850 Real)) Real (ite (= x2850 x1858) x789 (x159 x2850)))
(define-fun x3208 ((x2850 Real)) Real (ite (= x2850 x4307) x4100 (x3933 x2850)))
(define-fun x1018 ((x2850 Real)) Real (ite (= x2529 x2850) x2834 (x3208 x2850)))
(define-fun x173 ((x2850 Real)) Real (ite (= x2850 x279) 11430537079145650693387304458692941425836787954612963690241153482819318579200 (x1018 x2850)))
(define-fun x1956 ((x2850 Real)) Real (ite (= x2850 x2008) x4693 (x173 x2850)))
(define-fun x4535 ((x2850 Real)) Real (ite (= x2850 x1865) 0 (x4208 x2850)))
(define-fun x4575 ((x2850 Real)) Real (ite (= x2850 x2618) x3935 (x4535 x2850)))
(define-fun x2585 ((x2850 Real)) Real (ite (= x5333 x2850) x620 (x4575 x2850)))
(define-fun x4292 ((x2850 Real)) Real (ite (= x2850 x5040) x4147 (x2585 x2850)))
(define-fun x4858 ((x2850 Real)) Real (ite (= x4398 x2850) x3958 (x4292 x2850)))
(define-fun x3925 ((x2850 Real)) Real (ite (= x2850 0) x5280 (x3923 x2850)))
(define-fun x3070 ((x2850 Real)) Real (ite (= x5116 x2850) x5280 (x4858 x2850)))
(define-fun x782 ((x2850 Real)) Real (ite (= x2850 x1865) 0 (x4208 x2850)))
(define-fun x1584 ((x2850 Real)) Real (ite (= x2850 x3658) x3935 (x782 x2850)))
(define-fun x823 ((x2850 Real)) Real (ite (= x1863 x2850) x1772 (x1584 x2850)))
(define-fun x1590 ((x2850 Real)) Real (ite (= x2734 x2850) x2232 (x823 x2850)))
(define-fun x434 ((x2850 Real)) Real (ite (= x951 x2850) x985 (x1590 x2850)))
(define-fun x1027 ((x2850 Real)) Real (ite (= x2850 0) x2492 (x625 x2850)))
(define-fun x845 ((x2850 Real)) Real (ite (= x4239 x2850) x2492 (x434 x2850)))
(define-fun x20 ((x2850 Real)) Real (ite (and x2906 x2881 (not x1716)) (ite (and (not x5341) (not x1716) x2881 (not x2594) (not x2373) x2906) (x3070 x2850) (ite (and (not x2373) (not x1716) (not x5341) x2594 x2906 x2881) (x3070 x2850) (x4208 x2850))) (ite (and (not x2881) x1528 (not x1716) x2906) (ite (and x2906 (not x2881) x1528 (not x1716) (not x3250) (not x830) (not x65)) (x845 x2850) (ite (and (not x1716) x3250 (not x65) x1528 x2906 (not x830) (not x2881)) (x845 x2850) (x4208 x2850))) (x4208 x2850))))
(define-fun x585 ((x2850 x4071)) Real (ite (= x2850 x3348) x4729 (x766 x2850)))
(define-fun x4054 ((x2850 x4071)) Real (ite (= x2850 x3463) x1820 (x585 x2850)))
(define-fun x4676 ((x2850 x4071)) Real (ite (= x2850 x3966) x3750 (x4054 x2850)))
(define-fun x2589 ((x2850 x4071)) Real (ite (= x2176 x2850) x1819 (x4676 x2850)))
(define-fun x2087 ((x2850 x4071)) Real (ite (= x3747 x2850) x1186 (x2589 x2850)))
(define-fun x1492 ((x2850 x4071)) Real (ite (= x2850 x3747) x3851 (x2087 x2850)))
(define-fun x2800 ((x2850 x4071)) Real (ite (= x2850 x1152) x303 (x1492 x2850)))
(define-fun x5160 ((x2850 x4071)) Real (ite (= x1152 x2850) x5213 (x2800 x2850)))
(define-fun x2379 ((x2850 x4071)) Real (ite (= x1152 x2850) x3620 (x5160 x2850)))
(define-fun x2010 ((x2850 x4071)) Real (ite (= x283 x2850) x5329 (x2379 x2850)))
(define-fun x3161 ((x2850 x4071)) Real (ite (= x2850 x283) x2380 (x2010 x2850)))
(define-fun x363 ((x2850 Real)) Real (ite (= x225 x2850) 904250603428552709895185118199468575982109441609966099573332780532423983104 (x20 x2850)))
(define-fun x422 ((x2850 Real)) Real (ite (and (> (+ 32 x225) x2850) (>= x2850 x225)) (x3521 (+ (- x2850 x225) 0)) (x4977 x2850)))
(define-fun x4976 ((x2850 Real)) Real (x3853 x2850))
(define-fun x3410 ((x2850 x4071)) Real (ite (= (x5032 x826) x2850) x832 (x1731 x2850)))
(define-fun x2904 ((x2850 x4071)) Real (ite (= x2850 (x5032 274184521717934524641157099916833587240)) x930 (x3410 x2850)))
(define-fun x390 ((x2850 Real)) Real (ite (= 128 x2850) x1536 (x4727 x2850)))
(define-fun x2547 ((x2850 Real)) Real (ite (and (> (+ 160 x1536) x2850) (<= 160 x2850)) (x3853 (+ (- x2850 160) x2089)) (x390 x2850)))
(define-fun x1643 ((x2850 Real)) Real (ite (= x2850 x969) 0 (x2547 x2850)))
(define-fun x3555 ((x2850 Real)) Real (ite (= x4224 x2850) x4318 (x1643 x2850)))
(define-fun x2054 ((x2850 Real)) Real (ite (= x2850 x2779) x4844 (x3555 x2850)))
(define-fun x3073 ((x2850 Real)) Real (ite (= x3584 x2850) x3154 (x2054 x2850)))
(define-fun x1411 ((x2850 Real)) Real (ite (= x4783 x2850) x683 (x3073 x2850)))
(define-fun x3560 ((x2850 Real)) Real (ite (= x2850 x2808) x3074 (x1411 x2850)))
(define-fun x464 ((x2850 Real)) Real (ite (= x2850 x2425) x3098 (x3560 x2850)))
(define-fun x2944 ((x2850 Real)) Real (ite (= x4883 x2850) x1039 (x464 x2850)))
(define-fun x4452 ((x2850 Real)) Real (ite (= x2850 x4771) x4548 (x2944 x2850)))
(define-fun x3440 ((x2850 Real)) Real (ite (= x1556 x2850) x4157 (x4452 x2850)))
(define-fun x4445 ((x2850 Real)) Real (ite (= x2850 x82) x2897 (x3440 x2850)))
(define-fun x3512 ((x2850 Real)) Real (ite (= x2850 x4543) (ite true 1 0) (x4445 x2850)))
(define-fun x2532 ((x2850 x4071)) Real (ite (= x2850 x2438) x3696 (x3215 x2850)))
(define-fun x1828 ((x2850 Real)) Real (ite (= x2850 x3310) x4318 (x3512 x2850)))
(define-fun x4830 ((x2850 Real)) Real (ite (= x2850 x2769) x4844 (x1828 x2850)))
(define-fun x3928 ((x2850 Real)) Real (ite (= x4249 x2850) x1729 (x4830 x2850)))
(define-fun x3184 ((x2850 Real)) Real (ite (= x2850 x2765) x909 (x3928 x2850)))
(define-fun x428 ((x2850 Real)) Real (ite (= x2451 x2850) x3540 (x3184 x2850)))
(define-fun x5388 ((x2850 Real)) Real (ite (= x5200 x2850) x1344 (x428 x2850)))
(define-fun x5353 ((x2850 Real)) Real (ite (= x2850 x2259) x2075 (x5388 x2850)))
(define-fun x1297 ((x2850 Real)) Real (ite (= x3992 x2850) x3044 (x5353 x2850)))
(define-fun x923 ((x2850 Real)) Real (ite (= x2850 x3408) x4100 (x1297 x2850)))
(define-fun x4073 ((x2850 Real)) Real (ite (= x2850 x4585) x3018 (x923 x2850)))
(define-fun x1077 ((x2850 Real)) Real (ite (= x4166 x2850) 11430537079145650693387304458692941425836787954612963690241153482819318579200 (x4073 x2850)))
(define-fun x1849 ((x2850 Real)) Real (ite (= x2850 x2191) x656 (x1077 x2850)))
(define-fun x1463 ((x2850 Real)) Real (ite (= x2850 x2537) 0 (x4221 x2850)))
(define-fun x2521 ((x2850 Real)) Real (ite (= x3150 x2850) x4070 (x1463 x2850)))
(define-fun x696 ((x2850 Real)) Real (ite (= x3685 x2850) x302 (x2521 x2850)))
(define-fun x3193 ((x2850 Real)) Real (ite (= x2850 x4231) x320 (x696 x2850)))
(define-fun x2700 ((x2850 Real)) Real (ite (= x2850 x2955) x3904 (x3193 x2850)))
(define-fun x5049 ((x2850 Real)) Real (ite (= x2850 0) x4527 (x1462 x2850)))
(define-fun x3650 ((x2850 Real)) Real (ite (= x4754 x2850) x4527 (x2700 x2850)))
(define-fun x4490 ((x2850 Real)) Real (ite (= x2537 x2850) 0 (x4221 x2850)))
(define-fun x3989 ((x2850 Real)) Real (ite (= x2850 x3283) x4070 (x4490 x2850)))
(define-fun x4590 ((x2850 Real)) Real (ite (= x195 x2850) x3943 (x3989 x2850)))
(define-fun x1418 ((x2850 Real)) Real (ite (= x3277 x2850) x325 (x4590 x2850)))
(define-fun x4162 ((x2850 Real)) Real (ite (= x2850 x4261) x3799 (x1418 x2850)))
(define-fun x2263 ((x2850 Real)) Real (ite (= 0 x2850) x4177 (x110 x2850)))
(define-fun x3160 ((x2850 Real)) Real (ite (= x2850 x5265) x4177 (x4162 x2850)))
(define-fun x2530 ((x2850 Real)) Real (ite (and (not x2405) x3292 x790) (ite (and (not x2405) x790 (not x4811) (not x3783) x3292 (not x1790)) (x3650 x2850) (ite (and x4811 (not x2405) (not x1790) (not x3783) x3292 x790) (x3650 x2850) (x4221 x2850))) (ite (and (not x790) x3292 x2158 (not x2405)) (ite (and (not x790) (not x1752) (not x2003) x2158 x3292 (not x2405) (not x5231)) (x3160 x2850) (ite (and (not x2405) (not x5231) x2158 (not x2003) x1752 x3292 (not x790)) (x3160 x2850) (x4221 x2850))) (x4221 x2850))))
(define-fun x1056 ((x2850 x4071)) Real (ite (= x4033 x2850) x3127 (x2532 x2850)))
(define-fun x692 ((x2850 x4071)) Real (ite (= x1874 x2850) x4707 (x1056 x2850)))
(define-fun x877 ((x2850 x4071)) Real (ite (= x2850 x3862) x4219 (x692 x2850)))
(define-fun x4870 ((x2850 x4071)) Real (ite (= x4491 x2850) x4232 (x877 x2850)))
(define-fun x4379 ((x2850 x4071)) Real (ite (= x2850 x5238) x4317 (x4870 x2850)))
(define-fun x2994 ((x2850 x4071)) Real (ite (= x2850 x5238) x3149 (x4379 x2850)))
(define-fun x687 ((x2850 x4071)) Real (ite (= x2850 x527) x3468 (x2994 x2850)))
(define-fun x496 ((x2850 x4071)) Real (ite (= x527 x2850) x3433 (x687 x2850)))
(define-fun x4781 ((x2850 x4071)) Real (ite (= x2850 x527) x4839 (x496 x2850)))
(define-fun x2572 ((x2850 x4071)) Real (ite (= x3722 x2850) x1622 (x4781 x2850)))
(define-fun x4349 ((x2850 x4071)) Real (ite (= x3722 x2850) x2247 (x2572 x2850)))
(define-fun x3625 ((x2850 Real)) Real (ite (= x2850 x2992) 904250603428552709895185118199468575982109441609966099573332780532423983104 (x2530 x2850)))
(define-fun x3205 ((x2850 Real)) Real (ite (and (>= x2850 x2992) (< x2850 (+ x2992 32))) (x93 (+ (- x2850 x2992) 0)) (x4651 x2850)))
(define-fun x3209 ((x2850 x4071)) Real (ite (= x3595 x2850) x894 (x5266 x2850)))
(define-fun x731 ((x2850 x4071)) Real (ite x4601 (ite (and x735 x3570) (x5266 x2850) (ite (and x2289 x5170) (x3209 x2850) (x5266 x2850))) (ite (and (not x1517) x2772 x2728) (x1682 x2850) (x5266 x2850))))
(define-fun x583 ((x2850 x4071)) Real (ite (= x2850 x2417) x4424 (x864 x2850)))
(define-fun x5286 ((x2850 x4071)) Real (ite (and x2654 x4838) (x864 x2850) (ite (and x657 x3717) (x583 x2850) (x864 x2850))))
(define-fun x798 ((x2850 x4071)) Real (ite (and x874 x3511 (not x3591) x3016) (x1397 x2850) (x479 x2850)))
(define-fun x233 ((x2850 x4071)) Real (ite (and x3016 x874 (not x3591)) (x798 x2850) (x479 x2850)))
(define-fun x3059 ((x2850 x4071)) Real (ite (= x5010 x2850) x4929 (x4766 x2850)))
(define-fun x1947 ((x2850 x4071)) Real (ite x4601 (ite (and x735 x3570) (x4766 x2850) (ite (and x5170 x2289) (x4766 x2850) (x3059 x2850))) (ite (and x2728 x2772 (not x1517)) (x1913 x2850) (x4766 x2850))))
(define-fun x1795 ((x2850 x4071)) Real (ite (= x3328 x2850) x3189 (x1562 x2850)))
(define-fun x862 ((x2850 x4071)) Real (ite (and x4838 x2654) (x1562 x2850) (ite (and x3717 x657) (x1562 x2850) (x1795 x2850))))
(define-fun x1154 ((x2850 x4071)) Real (ite (and x874 x3511 x3016 (not x3591)) (x2569 x2850) (x831 x2850)))
(define-fun x5337 ((x2850 x4071)) Real (ite (and x3016 x874 (not x3591)) (x1154 x2850) (x831 x2850)))
(define-fun x4993 ((x2850 x4071)) Real (ite (= x2850 x1335) x966 (x4555 x2850)))
(define-fun x409 ((x2850 x4071)) Real (ite (= x3594 x2850) x3369 (x4993 x2850)))
(define-fun x1177 ((x2850 x4071)) Real (ite x4601 (ite (and x735 x3570) (x4555 x2850) (ite (and x2289 x5170) (x409 x2850) (x4555 x2850))) (ite (and (not x1517) x2772 x2728) (x4467 x2850) (x4555 x2850))))
(define-fun x3120 ((x2850 x4071)) Real (ite (= x2850 x2984) x1912 (x4579 x2850)))
(define-fun x538 ((x2850 x4071)) Real (ite (= x4547 x2850) x4441 (x3120 x2850)))
(define-fun x1298 ((x2850 x4071)) Real (ite (and x4838 x2654) (x4579 x2850) (ite (and x657 x3717) (x538 x2850) (x4579 x2850))))
(define-fun x4257 ((x2850 x4071)) Real (ite (and x1932 x5003) (x4087 x2850) (x4579 x2850)))
(define-fun x2307 ((x2850 x4071)) Real (ite (= x2850 x2567) x4855 (x1681 x2850)))
(define-fun x4273 ((x2850 x4071)) Real (ite (= x991 x2850) x4916 (x2307 x2850)))
(define-fun x2101 ((x2850 x4071)) Real (ite (and x370 x2980) (x4273 x2850) (x1681 x2850)))
(define-fun x5383 ((x2850 x4071)) Real (ite (and (not x3591) x3016 x874 x3511) (x126 x2850) (x1681 x2850)))
(define-fun x3643 ((x2850 x4071)) Real (ite (and x874 x3016 (not x3591)) (x5383 x2850) (x1681 x2850)))
(define-fun x4567 ((x2850 x4071)) Real (ite x4601 (x2904 x2850) (ite (and x2728 x2772 (not x1517)) (x3817 x2850) (x2904 x2850))))
(define-fun x3895 ((x2850 x4071)) Real (ite (= (x5032 274184521717934524641157099916833587240) x2850) x672 (x1695 x2850)))
(define-fun x3055 ((x2850 x4071)) Real (ite (= (x5032 x3823) x2850) x3565 (x3895 x2850)))
(define-fun x2290 ((x2850 x4071)) Real (ite (= (x5032 x3823) x2850) x1419 (x3055 x2850)))
(define-fun x4984 ((x2850 x4071)) Real (ite (= x2850 (x5032 274184521717934524641157099916833587240)) x1949 (x2290 x2850)))
(define-fun x689 ((x2850 x4071)) Real (ite (and x5003 x1932) (x4247 x2850) (x1695 x2850)))
(define-fun x1487 ((x2850 x4071)) Real (ite (= x2850 (x5032 274184521717934524641157099916833587240)) x466 (x2044 x2850)))
(define-fun x4357 ((x2850 x4071)) Real (ite (= (x5032 x4368) x2850) x1141 (x1487 x2850)))
(define-fun x421 ((x2850 x4071)) Real (ite (= x2850 (x5032 x4368)) x244 (x4357 x2850)))
(define-fun x591 ((x2850 x4071)) Real (ite (= x2850 (x5032 274184521717934524641157099916833587240)) x2328 (x421 x2850)))
(define-fun x4940 ((x2850 x4071)) Real (ite (= x2850 (x5032 274184521717934524641157099916833587240)) x4525 (x2044 x2850)))
(define-fun x3755 ((x2850 x4071)) Real (ite (= (x5032 x4889) x2850) x5343 (x4940 x2850)))
(define-fun x4917 ((x2850 x4071)) Real (ite (and x3511 x3016 (not x3591) x874) (x2508 x2850) (x3755 x2850)))
(define-fun x2985 ((x2850 x4071)) Real (ite (= (x5032 x4889) x2850) x4175 (x4917 x2850)))
(define-fun x1869 ((x2850 x4071)) Real (ite (= (x5032 274184521717934524641157099916833587240) x2850) x958 (x2985 x2850)))
(define-fun x5127 ((x2850 x4071)) Real (ite (and x3016 x874 (not x3591)) (x1869 x2850) (x2044 x2850)))
(define-fun x1632 ((x2850 x4071)) Real (ite x748 (ite x3421 (x591 x2850) (x5127 x2850)) (x1731 x2850)))
(define-fun x4234 ((x2850 x4071)) Real (ite (= x1272 x2850) x510 (x2707 x2850)))
(define-fun x1328 ((x2850 x4071)) Real (ite (= x1013 x2850) x2447 (x4234 x2850)))
(define-fun x1182 ((x2850 x4071)) Real (ite (= x955 x2850) x983 (x1328 x2850)))
(define-fun x1906 ((x2850 x4071)) Real (ite (= x10 x2850) x1478 (x1182 x2850)))
(define-fun x1097 ((x2850 x4071)) Real (ite x4601 (ite (and x735 x3570) (x1906 x2850) (x2707 x2850)) (x2707 x2850)))
(define-fun x3508 ((x2850 x4071)) Real (ite (= x2850 x5212) x3155 (x1097 x2850)))
(define-fun x816 ((x2850 x4071)) Real (ite (= x2850 x49) x4069 (x1542 x2850)))
(define-fun x4434 ((x2850 x4071)) Real (ite (= x2850 x4779) x4514 (x816 x2850)))
(define-fun x3518 ((x2850 x4071)) Real (ite (= x4186 x2850) x194 (x4434 x2850)))
(define-fun x4680 ((x2850 x4071)) Real (ite (= x2850 x685) x3575 (x3518 x2850)))
(define-fun x3301 ((x2850 x4071)) Real (ite (and x2654 x4838) (x4680 x2850) (x1542 x2850)))
(define-fun x2344 ((x2850 x4071)) Real (ite x2394 (ite x764 (x3301 x2850) (x1542 x2850)) (x1542 x2850)))
(define-fun x4233 ((x2850 x4071)) Real (ite x748 (x2344 x2850) (x3215 x2850)))
(define-fun x4176 ((x2850 x4071)) Real (ite (= x2850 x3743) x476 (x416 x2850)))
(define-fun x581 ((x2850 x4071)) Real (ite (= x4041 x2850) x4817 (x4176 x2850)))
(define-fun x1845 ((x2850 x4071)) Real (ite x4601 (ite (and x3570 x735) (x416 x2850) (ite (and x5170 x2289) (x416 x2850) (x581 x2850))) (ite (and x2728 (not x1517) x2772) (x2413 x2850) (x416 x2850))))
(define-fun x477 ((x2850 x4071)) Real (ite (= x2850 x162) x35 (x1264 x2850)))
(define-fun x5000 ((x2850 x4071)) Real (ite (= x2850 x3353) x2123 (x477 x2850)))
(define-fun x2058 ((x2850 x4071)) Real (ite (and x2654 x4838) (x1264 x2850) (ite (and x657 x3717) (x1264 x2850) (x5000 x2850))))
(define-fun x3679 ((x2850 x4071)) Real (ite (and x5003 x1932) (x4493 x2850) (x1264 x2850)))
(define-fun x4171 ((x2850 x4071)) Real (ite (= x4802 x2850) x4506 (x515 x2850)))
(define-fun x3604 ((x2850 x4071)) Real (ite (= x2850 x3945) x3037 (x4171 x2850)))
(define-fun x3132 ((x2850 x4071)) Real (ite (and x2980 x370) (x515 x2850) (x3604 x2850)))
(define-fun x4522 ((x2850 x4071)) Real (ite (and x3511 x3016 x874 (not x3591)) (x4842 x2850) (x515 x2850)))
(define-fun x3614 ((x2850 x4071)) Real (ite (and x3016 x874 (not x3591)) (x4522 x2850) (x515 x2850)))
(define-fun x4809 ((x2850 Real)) Real (x2423 x2850))
(define-fun x101 ((x2850 x4071)) Real (ite (= x2850 (x5032 x4213)) x1775 (x1632 x2850)))
(define-fun x3475 ((x2850 x4071)) Real (ite (= (x5032 274184521717934524641157099916833587240) x2850) x899 (x101 x2850)))
(define-fun x1509 ((x2850 Real)) Real (ite (= x487 x2850) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x290 x2850)))
(define-fun x681 ((x2850 Real)) Real (ite (= x203 x2850) x1089 (x1509 x2850)))
(define-fun x569 ((x2850 Real)) Real (ite (= x2850 x2676) 274184521717934524641157099916833587240 (x681 x2850)))
(define-fun x1650 ((x2850 x4071)) Real (ite (= x2850 x2) x1176 (x1017 x2850)))
(define-fun x4893 ((x2850 x4071)) Real (ite (= x2850 x3633) x4549 (x1650 x2850)))
(define-fun x4091 ((x2850 x4071)) Real (ite (= x3118 x2850) x941 (x4893 x2850)))
(define-fun x4714 ((x2850 x4071)) Real (ite (= x2850 x2967) x1569 (x4091 x2850)))
(define-fun x170 ((x2850 Real)) Real (ite (= x487 x2850) x660 (x3474 x2850)))
(define-fun x4905 ((x2850 Real)) Real (ite (= x487 x2850) x1137 (x3474 x2850)))
(define-fun x277 ((x2850 Real)) Real (ite (= x487 x2850) 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x290 x2850)))
(define-fun x2506 ((x2850 Real)) Real (ite (= x2850 x3902) x2759 (x277 x2850)))
(define-fun x3254 ((x2850 Real)) Real (ite (= x2850 x268) 274184521717934524641157099916833587240 (x2506 x2850)))
(define-fun x1802 ((x2850 Real)) Real (ite (= x2850 x455) x613 (x3254 x2850)))
(define-fun x3419 ((x2850 Real)) Real (ite (= x2850 x3666) x494 (x1802 x2850)))
(define-fun x3760 ((x2850 Real)) Real (ite (= x1544 x2850) 160 (x3419 x2850)))
(define-fun x1058 ((x2850 Real)) Real (ite (and (> (+ x487 0) x2850) (>= x2850 x487)) (x3562 (+ (- x2850 x487) 0)) (x3618 x2850)))
(define-fun x2852 ((x2850 Real)) Real (ite x5063 (ite (and x1499 x4199) (x3474 x2850) (ite (and x243 x1812) (x170 x2850) (x4905 x2850))) (ite (and x4670 (not x3716) x1978) (x1058 x2850) (x3618 x2850))))
(define-fun x3094 ((x2850 x4071)) Real (ite (= x3389 x2850) x3332 (x5266 x2850)))
(define-fun x4938 ((x2850 x4071)) Real (ite x5063 (ite (and x4199 x1499) (x5266 x2850) (ite (and x243 x1812) (x3094 x2850) (x5266 x2850))) (ite (and x1978 (not x3716) x4670) (x2457 x2850) (x5266 x2850))))
(define-fun x1254 ((x2850 x4071)) Real (ite (= x557 x2850) x3020 (x4555 x2850)))
(define-fun x2338 ((x2850 x4071)) Real (ite (= x3701 x2850) x2780 (x1254 x2850)))
(define-fun x3930 ((x2850 x4071)) Real (ite x5063 (ite (and x1499 x4199) (x4555 x2850) (ite (and x243 x1812) (x2338 x2850) (x4555 x2850))) (ite (and (not x3716) x1978 x4670) (x1726 x2850) (x4555 x2850))))
(define-fun x5214 ((x2850 x4071)) Real (ite (= x1073 x2850) x1045 (x416 x2850)))
(define-fun x5259 ((x2850 x4071)) Real (ite (= x2850 x5325) x3915 (x5214 x2850)))
(define-fun x4954 ((x2850 x4071)) Real (ite x5063 (ite (and x1499 x4199) (x416 x2850) (ite (and x243 x1812) (x416 x2850) (x5259 x2850))) (ite (and x4670 x1978 (not x3716)) (x5030 x2850) (x416 x2850))))
(define-fun x2366 ((x2850 x4071)) Real (ite x5063 (ite (and x1499 x4199) (x4714 x2850) (x1017 x2850)) (x1017 x2850)))
(define-fun x3349 ((x2850 x4071)) Real (ite x5063 (x4047 x2850) (ite (and (not x3716) x1978 x4670) (x1231 x2850) (x4047 x2850))))
(define-fun x3253 ((x2850 x4071)) Real (ite (= x2850 x2751) x946 (x4766 x2850)))
(define-fun x2586 ((x2850 x4071)) Real (ite x5063 (ite (and x4199 x1499) (x4766 x2850) (ite (and x1812 x243) (x4766 x2850) (x3253 x2850))) (ite (and x1978 (not x3716) x4670) (x4095 x2850) (x4766 x2850))))
(define-fun x1702 ((x2850 x4071)) Real (ite (= x5039 x2850) x3872 (x2366 x2850)))
(define-fun x1739 ((x2850 Real)) Real (ite (= x3619 x2850) 9518847204935358166548570266051330015907116135037852959641967396525866745856 (x550 x2850)))
(define-fun x4841 ((x2850 Real)) Real (ite (= x2850 x4657) x4108 (x1739 x2850)))
(define-fun x3629 ((x2850 Real)) Real (ite (= x2850 x3105) 0 (x4841 x2850)))
(define-fun x2645 ((x2850 Real)) Real (ite (= x2850 x3247) x4516 (x3629 x2850)))
(define-fun x4297 ((x2850 Real)) Real (ite (= x2850 x3976) 128 (x2645 x2850)))
(define-fun x2091 ((x2850 Real)) Real (ite (= x2850 x467) x3011 (x4618 x2850)))
(define-fun x1840 ((x2850 Real)) Real (ite (= x2850 x934) 0 (x4816 x2850)))
(define-fun x1444 ((x2850 Real)) Real (ite (and (>= x2850 x3619) (> (+ 32 x3619) x2850)) (x2133 (+ 0 (- x2850 x3619))) (x2474 x2850)))
(define-fun x4329 ((x2850 Real)) Real (ite (and x4600 x4193 x4451) (x1444 x2850) (x2474 x2850)))
(define-fun x456 ((x2850 Real)) Real (ite (= x2850 x541) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x3359 x2850)))
(define-fun x1895 ((x2850 Real)) Real (ite (= x2850 0) x856 (x450 x2850)))
(define-fun x3405 ((x2850 Real)) Real (ite (= x541 x2850) x856 (x1340 x2850)))
(define-fun x3752 ((x2850 Real)) Real (ite (= x541 x2850) x5123 (x1340 x2850)))
(define-fun x2050 ((x2850 Real)) Real (ite (= x541 x2850) x5134 (x1340 x2850)))
(define-fun x3684 ((x2850 Real)) Real (ite (and x1754 x3391) (x3405 x2850) (ite (and x2180 x2947) (x3752 x2850) (x2050 x2850))))
(define-fun x3172 ((x2850 Real)) Real (ite x908 (x3684 x2850) (x3359 x2850)))
(define-fun x1725 ((x2850 Real)) Real (ite (= x2616 x2850) 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x3172 x2850)))
(define-fun x1395 ((x2850 Real)) Real (ite (= x5057 x2850) x1974 (x1725 x2850)))
(define-fun x5335 ((x2850 Real)) Real (ite (and (>= x2850 x2616) (< x2850 (+ 0 x2616))) (x426 (+ 0 (- x2850 x2616))) (x3181 x2850)))
(define-fun x1125 ((x2850 Real)) Real (ite (= x2616 x2850) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x529 x2850)))
(define-fun x4624 ((x2850 Real)) Real (ite (= 0 x2850) x3737 (x4620 x2850)))
(define-fun x1238 ((x2850 Real)) Real (ite (= x2850 x2616) x3737 (x343 x2850)))
(define-fun x2661 ((x2850 Real)) Real (ite (= x4970 x2850) x438 (x3359 x2850)))
(define-fun x1251 ((x2850 Real)) Real (ite (= x2850 x9) 274184521717934524641157099916833587240 (x2661 x2850)))
(define-fun x1428 ((x2850 Real)) Real (ite (= x373 x2850) x703 (x1251 x2850)))
(define-fun x4559 ((x2850 Real)) Real (ite (= x2850 x541) x2032 (x1428 x2850)))
(define-fun x1210 ((x2850 Real)) Real (ite (= x2850 x4594) x1648 (x4559 x2850)))
(define-fun x3298 ((x2850 Real)) Real (ite (= x2850 x910) 32 (x1210 x2850)))
(define-fun x1224 ((x2850 Real)) Real (ite (= x4315 x2850) x5080 (x4751 x2850)))
(define-fun x2086 ((x2850 Real)) Real (ite (= x2850 x661) 0 (x1106 x2850)))
(define-fun x756 ((x2850 x4071)) Real (ite (= x2850 x3891) x4217 (x5362 x2850)))
(define-fun x3753 ((x2850 x4071)) Real (ite (= x555 x2850) x3341 (x756 x2850)))
(define-fun x1253 ((x2850 x4071)) Real (ite (= x3523 x2850) x4732 (x3753 x2850)))
(define-fun x1884 ((x2850 x4071)) Real (ite (= x2130 x2850) x506 (x1253 x2850)))
(define-fun x3812 ((x2850 x4071)) Real (ite (and x3528 x4577) (x1884 x2850) (x5362 x2850)))
(define-fun x1535 ((x2850 x4071)) Real (ite x1963 (ite x2987 (x3812 x2850) (x5362 x2850)) (x5362 x2850)))
(define-fun x3964 ((x2850 x4071)) Real (ite (= x2850 x2445) x4382 (x149 x2850)))
(define-fun x1028 ((x2850 x4071)) Real (ite (= x2850 x4557) x4110 (x3964 x2850)))
(define-fun x3981 ((x2850 x4071)) Real (ite (and x3528 x4577) (x149 x2850) (ite (and x4432 x5210) (x149 x2850) (x1028 x2850))))
(define-fun x4849 ((x2850 x4071)) Real (ite (and x4067 x1915) (x380 x2850) (x149 x2850)))
(define-fun x2325 ((x2850 x4071)) Real (ite x1963 (ite x2987 (x3981 x2850) (x149 x2850)) (x4849 x2850)))
(define-fun x2493 ((x2850 x4071)) Real (ite (= x2850 x4730) x982 (x1229 x2850)))
(define-fun x2166 ((x2850 x4071)) Real (ite (= x2850 x596) x2990 (x2493 x2850)))
(define-fun x4796 ((x2850 x4071)) Real (ite (and x4577 x3528) (x1229 x2850) (ite (and x5210 x4432) (x2166 x2850) (x1229 x2850))))
(define-fun x4902 ((x2850 x4071)) Real (ite (and x4067 x1915) (x4056 x2850) (x1229 x2850)))
(define-fun x775 ((x2850 x4071)) Real (ite x1963 (ite x2987 (x4796 x2850) (x1229 x2850)) (x4902 x2850)))
(define-fun x5349 ((x2850 x4071)) Real (ite (= x2850 (x5032 274184521717934524641157099916833587240)) x847 (x4584 x2850)))
(define-fun x5095 ((x2850 x4071)) Real (ite (= x2850 (x5032 x4735)) x3426 (x5349 x2850)))
(define-fun x3453 ((x2850 x4071)) Real (ite (= (x5032 x4735) x2850) x542 (x5095 x2850)))
(define-fun x2000 ((x2850 x4071)) Real (ite (= (x5032 274184521717934524641157099916833587240) x2850) x933 (x3453 x2850)))
(define-fun x1407 ((x2850 x4071)) Real (ite (and x1915 x4067) (x4268 x2850) (x4584 x2850)))
(define-fun x2503 ((x2850 Real)) Real (ite (= x1857 x2850) x1197 (x559 x2850)))
(define-fun x2755 ((x2850 Real)) Real (ite (= x2850 x1857) x1505 (x559 x2850)))
(define-fun x5263 ((x2850 Real)) Real (ite (= 0 x2850) 1 (x5177 x2850)))
(define-fun x4637 ((x2850 Real)) Real (ite (= x2850 0) 1 (x5177 x2850)))
(define-fun x2971 ((x2850 Real)) Real (ite (and x4577 x3528) (x5177 x2850) (ite (and x5210 x4432) (x5263 x2850) (x4637 x2850))))
(define-fun x1295 ((x2850 Real)) Real (ite (= x2850 x1857) x461 (x4202 x2850)))
(define-fun x4274 ((x2850 Real)) Real (ite (and (> (+ x1496 x461) x2850) (>= x2850 x1496)) (x2971 (+ 0 (- x2850 x1496))) (x1295 x2850)))
(define-fun x4582 ((x2850 Real)) Real (ite (and x2987 x558) (x4202 x2850) (x4274 x2850)))
(define-fun x5097 ((x2850 Real)) Real (ite (= x2616 x2850) x4383 (x343 x2850)))
(define-fun x3183 ((x2850 Real)) Real (ite (= x2616 x2850) x2545 (x343 x2850)))
(define-fun x4538 ((x2850 Real)) Real (ite (and x5149 x1274) (x1238 x2850) (ite (and x2901 x2698) (x5097 x2850) (x3183 x2850))))
(define-fun x1267 ((x2850 Real)) Real (ite x1963 (ite x2987 (x4582 x2850) (x3359 x2850)) (ite x3782 (x4538 x2850) (x529 x2850))))
(define-fun x4960 ((x2850 x4071)) Real (ite (= (x5032 274184521717934524641157099916833587240) x2850) x4437 (x4623 x2850)))
(define-fun x5397 ((x2850 x4071)) Real (ite (= (x5032 x3187) x2850) x5031 (x4960 x2850)))
(define-fun x1971 ((x2850 x4071)) Real (ite (and (not x1862) x821 x3692 x1547) (x4643 x2850) (x5397 x2850)))
(define-fun x4814 ((x2850 x4071)) Real (ite (= (x5032 x3187) x2850) x1113 (x1971 x2850)))
(define-fun x124 ((x2850 Real)) Real (ite (= x2850 x1050) x1099 (x1267 x2850)))
(define-fun x2392 ((x2850 Real)) Real (ite (= x2233 x2850) x612 (x124 x2850)))
(define-fun x4647 ((x2850 Real)) Real (ite (= x869 x2850) x5348 (x2392 x2850)))
(define-fun x2775 ((x2850 Real)) Real (ite (= x3104 x2850) x3639 (x4647 x2850)))
(define-fun x4710 ((x2850 Real)) Real (ite (= x4457 x2850) 32 (x2775 x2850)))
(define-fun x16 ((x2850 Real)) Real (ite (= x520 x2850) x4090 (x3307 x2850)))
(define-fun x3379 ((x2850 Real)) Real (ite (= x2850 x2414) 0 (x425 x2850)))
(define-fun x1659 ((x2850 x4071)) Real (ite (and x4451 x4600) (ite (and x4600 x4193 x4451) (x4210 x2850) (x2586 x2850)) (x2586 x2850)))
(define-fun x4354 ((x2850 x4071)) Real (ite (and x4451 x4600) (ite (and x4600 x4451 x4193) (x2411 x2850) (x4938 x2850)) (x4938 x2850)))
(define-fun x12 ((x2850 x4071)) Real (ite (= x2850 (x5032 274184521717934524641157099916833587240)) x4150 (x4623 x2850)))
(define-fun x4304 ((x2850 x4071)) Real (ite (= x2850 (x5032 x1279)) x4 (x12 x2850)))
(define-fun x2222 ((x2850 x4071)) Real (ite (= x2850 x4499) x4122 (x775 x2850)))
(define-fun x2558 ((x2850 Real)) Real (ite (= x2850 0) 1 (x4066 x2850)))
(define-fun x1453 ((x2850 Real)) Real (ite (= x2877 x2850) x3734 (x4299 x2850)))
(define-fun x1592 ((x2850 Real)) Real (ite (= x2850 x282) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x5167 x2850)))
(define-fun x24 ((x2850 Real)) Real (ite (= x2850 x3302) x1424 (x1592 x2850)))
(define-fun x2356 ((x2850 Real)) Real (ite (= x2850 x2687) 274184521717934524641157099916833587240 (x24 x2850)))
(define-fun x2568 ((x2850 Real)) Real (ite (= x2850 x282) x238 (x3934 x2850)))
(define-fun x1987 ((x2850 Real)) Real (ite (= x2850 x282) x589 (x3934 x2850)))
(define-fun x3634 ((x2850 Real)) Real (ite (= x2850 x282) 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x5167 x2850)))
(define-fun x3237 ((x2850 Real)) Real (ite (= x2850 x3384) x3771 (x3634 x2850)))
(define-fun x228 ((x2850 Real)) Real (ite (= x5087 x2850) 274184521717934524641157099916833587240 (x3237 x2850)))
(define-fun x717 ((x2850 Real)) Real (ite (= x822 x2850) x4439 (x228 x2850)))
(define-fun x2561 ((x2850 Real)) Real (ite (= x2850 x240) x3269 (x717 x2850)))
(define-fun x5379 ((x2850 Real)) Real (ite (= x1692 x2850) 160 (x2561 x2850)))
(define-fun x2441 ((x2850 Real)) Real (ite (and (>= x2850 x282) (> (+ x282 0) x2850)) (x1782 (+ 0 (- x2850 x282))) (x1655 x2850)))
(define-fun x4965 ((x2850 Real)) Real (ite x4601 (ite (and x735 x3570) (x3934 x2850) (ite (and x5170 x2289) (x2568 x2850) (x1987 x2850))) (ite (and x2772 x2728 (not x1517)) (x2441 x2850) (x1655 x2850))))
(define-fun x4235 ((x2850 Real)) Real (ite (= x652 x2850) 9518847204935358166548570266051330015907116135037852959641967396525866745856 (x1571 x2850)))
(define-fun x4168 ((x2850 Real)) Real (ite (= x972 x2850) x3873 (x4235 x2850)))
(define-fun x3841 ((x2850 Real)) Real (ite (= x2850 x4391) 0 (x4168 x2850)))
(define-fun x4334 ((x2850 Real)) Real (ite (= x5157 x2850) x554 (x3841 x2850)))
(define-fun x2018 ((x2850 Real)) Real (ite (= x2850 x3688) 128 (x4334 x2850)))
(define-fun x4220 ((x2850 Real)) Real (ite (= x1827 x2850) x3667 (x1910 x2850)))
(define-fun x3946 ((x2850 Real)) Real (ite (= x2850 x1593) 0 (x808 x2850)))
(define-fun x3464 ((x2850 Real)) Real (ite (and (>= x2850 x652) (< x2850 (+ x652 32))) (x5175 (+ 0 (- x2850 x652))) (x5124 x2850)))
(define-fun x594 ((x2850 Real)) Real (ite (and x1516 x763 x2185) (x3464 x2850) (x5124 x2850)))
(define-fun x5299 ((x2850 Real)) Real (ite (= x1822 x2850) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1639 x2850)))
(define-fun x4737 ((x2850 Real)) Real (ite (= 0 x2850) x2902 (x3700 x2850)))
(define-fun x1526 ((x2850 Real)) Real (ite (= x2850 x1822) x2902 (x1638 x2850)))
(define-fun x5024 ((x2850 Real)) Real (ite (= x1822 x2850) x2824 (x1638 x2850)))
(define-fun x73 ((x2850 Real)) Real (ite (= x1822 x2850) x4508 (x1638 x2850)))
(define-fun x4606 ((x2850 Real)) Real (ite (and x1893 x2484) (x1526 x2850) (ite (and x189 x931) (x5024 x2850) (x73 x2850))))
(define-fun x3456 ((x2850 Real)) Real (ite x3230 (x4606 x2850) (x1639 x2850)))
(define-fun x1241 ((x2850 Real)) Real (ite (= x2241 x2850) 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x3456 x2850)))
(define-fun x4036 ((x2850 Real)) Real (ite (= x2850 x3382) x3857 (x1241 x2850)))
(define-fun x3097 ((x2850 Real)) Real (ite (and (<= x2241 x2850) (> (+ x2241 0) x2850)) (x4899 (+ 0 (- x2850 x2241))) (x3596 x2850)))
(define-fun x5234 ((x2850 Real)) Real (ite (= x2241 x2850) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x254 x2850)))
(define-fun x3416 ((x2850 Real)) Real (ite (= x2850 0) x4333 (x1878 x2850)))
(define-fun x2349 ((x2850 Real)) Real (ite (= x2850 x2241) x4333 (x2396 x2850)))
(define-fun x3766 ((x2850 Real)) Real (ite (= x5045 x2850) x1047 (x1639 x2850)))
(define-fun x5115 ((x2850 Real)) Real (ite (= x2850 x1984) 274184521717934524641157099916833587240 (x3766 x2850)))
(define-fun x5037 ((x2850 Real)) Real (ite (= x4024 x2850) x3780 (x5115 x2850)))
(define-fun x546 ((x2850 Real)) Real (ite (= x2850 x1822) x3956 (x5037 x2850)))
(define-fun x459 ((x2850 Real)) Real (ite (= x3914 x2850) x4226 (x546 x2850)))
(define-fun x4995 ((x2850 Real)) Real (ite (= x4170 x2850) 32 (x459 x2850)))
(define-fun x4895 ((x2850 Real)) Real (ite (= x580 x2850) x4084 (x289 x2850)))
(define-fun x5334 ((x2850 Real)) Real (ite (= x2850 x3704) 0 (x3532 x2850)))
(define-fun x1118 ((x2850 Real)) Real (ite (= x2850 x32) x4159 (x3423 x2850)))
(define-fun x4134 ((x2850 Real)) Real (ite (= x32 x2850) x769 (x3423 x2850)))
(define-fun x3375 ((x2850 Real)) Real (ite (= x2850 0) 1 (x4077 x2850)))
(define-fun x2535 ((x2850 Real)) Real (ite (= 0 x2850) 1 (x4077 x2850)))
(define-fun x4975 ((x2850 Real)) Real (ite (and x2654 x4838) (x4077 x2850) (ite (and x657 x3717) (x3375 x2850) (x2535 x2850))))
(define-fun x2002 ((x2850 Real)) Real (ite (= x32 x2850) x4992 (x3314 x2850)))
(define-fun x5197 ((x2850 Real)) Real (ite (and (> (+ x5287 x4992) x2850) (<= x5287 x2850)) (x4975 (+ (- x2850 x5287) 0)) (x2002 x2850)))
(define-fun x3482 ((x2850 Real)) Real (ite (and x764 x693) (x3314 x2850) (x5197 x2850)))
(define-fun x2595 ((x2850 Real)) Real (ite (= x2241 x2850) x1617 (x2396 x2850)))
(define-fun x1175 ((x2850 Real)) Real (ite (= x2241 x2850) x1992 (x2396 x2850)))
(define-fun x2679 ((x2850 Real)) Real (ite (and x1447 x4630) (x2349 x2850) (ite (and x2923 x2229) (x2595 x2850) (x1175 x2850))))
(define-fun x151 ((x2850 Real)) Real (ite x2394 (ite x764 (x3482 x2850) (x1639 x2850)) (ite x372 (x2679 x2850) (x254 x2850))))
(define-fun x4447 ((x2850 Real)) Real (ite (= x4494 x2850) x5009 (x151 x2850)))
(define-fun x4551 ((x2850 Real)) Real (ite (= x2850 x1780) x4115 (x4447 x2850)))
(define-fun x1459 ((x2850 Real)) Real (ite (= x2850 x3469) x1207 (x4551 x2850)))
(define-fun x5188 ((x2850 Real)) Real (ite (= x2806 x2850) x2238 (x1459 x2850)))
(define-fun x2608 ((x2850 Real)) Real (ite (= x2850 x3031) 32 (x5188 x2850)))
(define-fun x166 ((x2850 Real)) Real (ite (= x480 x2850) x1196 (x3632 x2850)))
(define-fun x2162 ((x2850 Real)) Real (ite (= x3876 x2850) 0 (x3002 x2850)))
(define-fun x3063 ((x2850 Real)) Real (ite (= x2850 0) 1 (x2825 x2850)))
(define-fun x2266 ((x2850 Real)) Real (ite (= x2850 x1748) x3262 (x1193 x2850)))
(define-fun x1414 ((x2850 Real)) Real (ite (= x2850 128) x2284 (x3729 x2850)))
(define-fun x1986 ((x2850 Real)) Real (ite (and (<= 160 x2850) (> (+ x2284 160) x2850)) (x2423 (+ x4296 (- x2850 160))) (x1414 x2850)))
(define-fun x2648 ((x2850 Real)) Real (ite (= x2850 x3940) 0 (x1986 x2850)))
(define-fun x3566 ((x2850 Real)) Real (ite (= x4872 x2850) x1806 (x2648 x2850)))
(define-fun x1654 ((x2850 Real)) Real (ite (= x4461 x2850) x2410 (x3566 x2850)))
(define-fun x4121 ((x2850 Real)) Real (ite (= x4833 x2850) x2239 (x1654 x2850)))
(define-fun x321 ((x2850 Real)) Real (ite (= x2850 x4967) x354 (x4121 x2850)))
(define-fun x4142 ((x2850 Real)) Real (ite (= x2850 x1085) x4288 (x321 x2850)))
(define-fun x2460 ((x2850 Real)) Real (ite (= x2850 x682) x3296 (x4142 x2850)))
(define-fun x5182 ((x2850 Real)) Real (ite (= x2013 x2850) x3561 (x2460 x2850)))
(define-fun x710 ((x2850 Real)) Real (ite (= x4507 x2850) x37 (x5182 x2850)))
(define-fun x2739 ((x2850 Real)) Real (ite (= x2850 x1332) x1957 (x710 x2850)))
(define-fun x4173 ((x2850 Real)) Real (ite (= x5223 x2850) x1850 (x2739 x2850)))
(define-fun x1693 ((x2850 Real)) Real (ite (= x344 x2850) (ite true 1 0) (x4173 x2850)))
(define-fun x5186 ((x2850 Real)) Real (ite (= x1635 x2850) x1806 (x1693 x2850)))
(define-fun x152 ((x2850 Real)) Real (ite (= x2850 x2359) x2410 (x5186 x2850)))
(define-fun x1762 ((x2850 Real)) Real (ite (= x457 x2850) x3010 (x152 x2850)))
(define-fun x2667 ((x2850 Real)) Real (ite (= x791 x2850) x3953 (x1762 x2850)))
(define-fun x2916 ((x2850 Real)) Real (ite (= x2850 x1689) x1367 (x2667 x2850)))
(define-fun x3023 ((x2850 Real)) Real (ite (= x407 x2850) x2136 (x2916 x2850)))
(define-fun x1671 ((x2850 Real)) Real (ite (= x2850 x1270) x2048 (x3023 x2850)))
(define-fun x177 ((x2850 Real)) Real (ite (= x2850 x1612) x2913 (x1671 x2850)))
(define-fun x643 ((x2850 Real)) Real (ite (= x2850 x2293) x4100 (x177 x2850)))
(define-fun x2186 ((x2850 Real)) Real (ite (= x1019 x2850) x226 (x643 x2850)))
(define-fun x1108 ((x2850 Real)) Real (ite (= x4149 x2850) 11430537079145650693387304458692941425836787954612963690241153482819318579200 (x2186 x2850)))
(define-fun x1886 ((x2850 Real)) Real (ite (= x2850 x2870) x2883 (x1108 x2850)))
(define-fun x2504 ((x2850 Real)) Real (ite (= x2850 x2975) 0 (x3673 x2850)))
(define-fun x3774 ((x2850 Real)) Real (ite (= x1925 x2850) x4566 (x2504 x2850)))
(define-fun x3921 ((x2850 Real)) Real (ite (= x2850 x3417) x3707 (x3774 x2850)))
(define-fun x1866 ((x2850 Real)) Real (ite (= x2415 x2850) x2354 (x3921 x2850)))
(define-fun x2193 ((x2850 Real)) Real (ite (= x2850 x4279) x3890 (x1866 x2850)))
(define-fun x4678 ((x2850 Real)) Real (ite (= x2850 x122) x4550 (x2193 x2850)))
(define-fun x1833 ((x2850 Real)) Real (ite (= x2850 x2975) 0 (x3673 x2850)))
(define-fun x182 ((x2850 Real)) Real (ite (= x2850 x4587) x4566 (x1833 x2850)))
(define-fun x2551 ((x2850 Real)) Real (ite (= x2718 x2850) x2336 (x182 x2850)))
(define-fun x718 ((x2850 Real)) Real (ite (= x3742 x2850) x4511 (x2551 x2850)))
(define-fun x4935 ((x2850 Real)) Real (ite (= x2850 x412) x2803 (x718 x2850)))
(define-fun x1587 ((x2850 Real)) Real (ite (= x2850 x2223) x1877 (x4935 x2850)))
(define-fun x2001 ((x2850 Real)) Real (ite (and x1174 x4777) (ite (and x4777 (not x4930) (not x4433) (not x4248) x1174) (x4678 x2850) (ite (and x4930 (not x4433) x1174 x4777 (not x4248)) (x4678 x2850) (x3673 x2850))) (ite (and x1955 (not x4827)) (ite (and (not x2317) (not x4827) (not x3473) x1955 (not x2215)) (x1587 x2850) (ite (and x1955 x3473 (not x4827) (not x2317) (not x2215)) (x1587 x2850) (x3673 x2850))) (x3673 x2850))))
(define-fun x929 ((x2850 Real)) Real (ite (= x2850 x3790) 904250603428552709895185118199468575982109441609966099573332780532423983104 (x2001 x2850)))
(define-fun x2895 ((x2850 Real)) Real (ite (and (<= x3790 x2850) (< x2850 (+ x3790 32))) (x5358 (+ 0 (- x2850 x3790))) (x2155 x2850)))
(define-fun x1653 ((x2850 Real)) Real (ite (= x2850 x2907) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3157 x2850)))
(define-fun x634 ((x2850 Real)) Real (ite (= x2850 x3180) x606 (x1653 x2850)))
(define-fun x4728 ((x2850 Real)) Real (ite (= x2030 x2850) 274184521717934524641157099916833587240 (x634 x2850)))
(define-fun x2452 ((x2850 Real)) Real (ite (= x2850 x2907) x1354 (x3344 x2850)))
(define-fun x209 ((x2850 Real)) Real (ite x2690 (x3344 x2850) (x2452 x2850)))
(define-fun x2991 ((x2850 Real)) Real (ite (= x2907 x2850) x218 (x3344 x2850)))
(define-fun x248 ((x2850 Real)) Real (ite x882 (x3344 x2850) (x2991 x2850)))
(define-fun x2908 ((x2850 Real)) Real (ite (= x2850 x2907) 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x3157 x2850)))
(define-fun x388 ((x2850 Real)) Real (ite (= x2850 x1713) x1184 (x2908 x2850)))
(define-fun x1896 ((x2850 Real)) Real (ite (= x2850 x1070) 274184521717934524641157099916833587240 (x388 x2850)))
(define-fun x2079 ((x2850 Real)) Real (ite (= x1096 x2850) x1806 (x1896 x2850)))
(define-fun x4436 ((x2850 Real)) Real (ite (= x2850 x615) x2410 (x2079 x2850)))
(define-fun x2646 ((x2850 Real)) Real (ite (= x2850 x3060) 160 (x4436 x2850)))
(define-fun x2790 ((x2850 Real)) Real (ite (and (< x2850 (+ 0 x2907)) (>= x2850 x2907)) (x518 (+ 0 (- x2850 x2907))) (x156 x2850)))
(define-fun x1382 ((x2850 Real)) Real (ite (and (not x5088) x5236) (ite x1420 (x3344 x2850) (ite x4409 (x209 x2850) (x248 x2850))) (ite (and x783 (not x3006) x4906) (x2790 x2850) (x156 x2850))))
(define-fun x4129 ((x2850 Real)) Real (ite (= x2069 x2850) 9518847204935358166548570266051330015907116135037852959641967396525866745856 (x4561 x2850)))
(define-fun x3972 ((x2850 Real)) Real (ite (= x1497 x2850) x144 (x4129 x2850)))
(define-fun x285 ((x2850 Real)) Real (ite (= x1011 x2850) 0 (x3972 x2850)))
(define-fun x3801 ((x2850 Real)) Real (ite (= x1779 x2850) x4010 (x285 x2850)))
(define-fun x2635 ((x2850 Real)) Real (ite (= x2850 x5378) 128 (x3801 x2850)))
(define-fun x509 ((x2850 Real)) Real (ite (= x2850 x5046) x3095 (x2928 x2850)))
(define-fun x3346 ((x2850 Real)) Real (ite (= x2850 x680) 0 (x2427 x2850)))
(define-fun x1704 ((x2850 Real)) Real (ite (and (<= x2069 x2850) (< x2850 (+ 32 x2069))) (x2430 (+ (- x2850 x2069) 0)) (x1675 x2850)))
(define-fun x1837 ((x2850 Real)) Real (ite (and x4082 (not x2093) x639) (x1704 x2850) (x1675 x2850)))
(define-fun x2220 ((x2850 x4071)) Real (ite (= x2403 x2850) x4769 (x4233 x2850)))
(define-fun x4339 ((x2850 Real)) Real (ite (= 0 x2850) x4550 (x4116 x2850)))
(define-fun x2231 ((x2850 x4071)) Real (ite (= x2850 x4850) x1066 (x2220 x2850)))
(define-fun x4957 ((x2850 x4071)) Real (ite (= x2850 x2722) x2741 (x2231 x2850)))
(define-fun x3087 ((x2850 x4071)) Real (ite (= x2850 x2830) x536 (x4957 x2850)))
(define-fun x3741 ((x2850 x4071)) Real (ite (= x2850 x1988) x2265 (x3087 x2850)))
(define-fun x3437 ((x2850 x4071)) Real (ite (= x2850 x1350) x105 (x3741 x2850)))
(define-fun x963 ((x2850 x4071)) Real (ite (= x1350 x2850) x4691 (x3437 x2850)))
(define-fun x3957 ((x2850 x4071)) Real (ite (= x4272 x2850) x1951 (x963 x2850)))
(define-fun x2619 ((x2850 x4071)) Real (ite (= x4272 x2850) x621 (x3957 x2850)))
(define-fun x1068 ((x2850 x4071)) Real (ite (= x2850 x4272) x368 (x2619 x2850)))
(define-fun x2060 ((x2850 x4071)) Real (ite (= x1738 x2850) x701 (x1068 x2850)))
(define-fun x212 ((x2850 x4071)) Real (ite (= x1738 x2850) x1555 (x2060 x2850)))
(define-fun x326 ((x2850 x4071)) Real (ite (and x5236 (not x5088)) (x3475 x2850) (ite (and (not x3006) x783 x4906) (x1423 x2850) (x3475 x2850))))
(define-fun x2029 ((x2850 Real)) Real (ite (= x61 x2850) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x267 x2850)))
(define-fun x1290 ((x2850 x4071)) Real (ite (and (not x3083) x2286) (x42 x2850) (ite (and x3547 x2949) (x42 x2850) (ite (and x3702 x1990) (x2195 x2850) (ite (and x2735 x1092) (x382 x2850) (ite (and (not x3659) x567) (x42 x2850) (ite (and x2424 (not x5132)) (x42 x2850) (ite (and x3288 x3258) (x42 x2850) (ite (and x411 x2148) (x42 x2850) (ite (and x5005 x4648) (x2195 x2850) (x42 x2850)))))))))))
(define-fun x3998 ((x2850 x4071)) Real (ite (= x399 x2850) x4974 (x382 x2850)))
(define-fun x2120 ((x2850 x4071)) Real (ite (= x4586 x2850) x5029 (x3998 x2850)))
(define-fun x2798 ((x2850 x4071)) Real (ite x3955 (x1290 x2850) (x2120 x2850)))
(define-fun x4724 ((x2850 x4071)) Real (ite (and x5236 (not x5088)) (ite x1420 (x2798 x2850) (x42 x2850)) (x42 x2850)))
(define-fun x2617 ((x2850 x4071)) Real (ite (= x2850 x3022) x4604 (x4724 x2850)))
(define-fun x1962 ((x2850 Real)) Real (ite (= 0 x2850) x866 (x4793 x2850)))
(define-fun x3378 ((x2850 Real)) Real (ite (= x61 x2850) x866 (x221 x2850)))
(define-fun x2726 ((x2850 Real)) Real (ite (= x2850 x61) x2213 (x221 x2850)))
(define-fun x848 ((x2850 Real)) Real (ite (= x2850 x61) x5296 (x221 x2850)))
(define-fun x1275 ((x2850 Real)) Real (ite (and x2776 (not x3672) x3164) (x3378 x2850) (ite (and x3672 x3164 x2776) (x221 x2850) (ite (and x4825 (not x3984) x3222) (x2726 x2850) (ite (and x3222 x3984 x4825) (x221 x2850) (ite (and (not x784) x3141 x5163) (x848 x2850) (x221 x2850)))))))
(define-fun x2144 ((x2850 Real)) Real (ite (and x5014 (not x3800)) (x1275 x2850) (x267 x2850)))
(define-fun x4733 ((x2850 Real)) Real (ite (= x2850 x721) 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x2144 x2850)))
(define-fun x2418 ((x2850 Real)) Real (ite (= x2850 x3361) x2037 (x4733 x2850)))
(define-fun x3043 ((x2850 Real)) Real (ite (and (>= x2850 x721) (< x2850 (+ 0 x721))) (x720 (+ (- x2850 x721) 0)) (x4962 x2850)))
(define-fun x2272 ((x2850 x4071)) Real (ite (and (not x4638) x1961 x4853) (x746 x2850) (x4718 x2850)))
(define-fun x447 ((x2850 Real)) Real (ite (= x721 x2850) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2463 x2850)))
(define-fun x150 ((x2850 Real)) Real (ite (= 0 x2850) x565 (x2839 x2850)))
(define-fun x1189 ((x2850 Real)) Real (ite (= x721 x2850) x565 (x1329 x2850)))
(define-fun x757 ((x2850 Real)) Real (ite (= x2850 x721) x3265 (x1329 x2850)))
(define-fun x4860 ((x2850 Real)) Real (ite (= x721 x2850) x3681 (x1329 x2850)))
(define-fun x1209 ((x2850 Real)) Real (ite (and (not x5146) x4911 x2431) (x1189 x2850) (ite (and x4911 x5146 x2431) (x1329 x2850) (ite (and x2978 (not x2381) x3710) (x757 x2850) (ite (and x2978 x3710 x2381) (x1329 x2850) (ite (and (not x4994) x819 x309) (x4860 x2850) (x1329 x2850)))))))
(define-fun x4421 ((x2850 Real)) Real (ite (= x2850 x3577) x2152 (x267 x2850)))
(define-fun x1280 ((x2850 Real)) Real (ite (= x3825 x2850) 274184521717934524641157099916833587240 (x4421 x2850)))
(define-fun x4649 ((x2850 Real)) Real (ite (= x1413 x2850) x2040 (x1280 x2850)))
(define-fun x1852 ((x2850 Real)) Real (ite (= x61 x2850) x5012 (x4649 x2850)))
(define-fun x1199 ((x2850 Real)) Real (ite (= x1618 x2850) x1798 (x1852 x2850)))
(define-fun x2505 ((x2850 Real)) Real (ite (= x2827 x2850) 32 (x1199 x2850)))
(define-fun x1160 ((x2850 Real)) Real (ite (= x2850 x1855) x1117 (x534 x2850)))
(define-fun x1101 ((x2850 Real)) Real (ite (= x4399 x2850) 0 (x4353 x2850)))
(define-fun x413 ((x2850 Real)) Real (ite (= x2850 x944) x3927 (x3386 x2850)))
(define-fun x968 ((x2850 Real)) Real (ite x1805 (x3386 x2850) (x413 x2850)))
(define-fun x301 ((x2850 Real)) Real (ite (= x2850 x944) x501 (x3386 x2850)))
(define-fun x1685 ((x2850 Real)) Real (ite x2020 (x3386 x2850) (x301 x2850)))
(define-fun x4868 ((x2850 Real)) Real (ite (= x2850 0) 1 (x4683 x2850)))
(define-fun x2497 ((x2850 Real)) Real (ite x1805 (x4683 x2850) (x4868 x2850)))
(define-fun x1968 ((x2850 Real)) Real (ite (= x2850 0) 1 (x4683 x2850)))
(define-fun x2453 ((x2850 Real)) Real (ite x2020 (x4683 x2850) (x1968 x2850)))
(define-fun x947 ((x2850 Real)) Real (ite x4453 (ite x3665 (x4683 x2850) (ite x2813 (x2497 x2850) (x2453 x2850))) (x4284 x2850)))
(define-fun x3085 ((x2850 Real)) Real (ite (= x944 x2850) x2057 (x3207 x2850)))
(define-fun x91 ((x2850 Real)) Real (ite (and (<= x2721 x2850) (< x2850 (+ x2721 x2057))) (x947 (+ (- x2850 x2721) 0)) (x3085 x2850)))
(define-fun x642 ((x2850 Real)) Real (ite (and x523 x2515) (x3207 x2850) (x91 x2850)))
(define-fun x2961 ((x2850 Real)) Real (ite (and (not x3897) x2074) (ite (and (not x4460) x23) (x1209 x2850) (x2463 x2850)) (ite x2298 (x642 x2850) (x267 x2850))))
(define-fun x1503 ((x2850 Real)) Real (ite (= x3711 x2850) x3186 (x2961 x2850)))
(define-fun x3352 ((x2850 Real)) Real (ite (= x3601 x2850) x1136 (x1503 x2850)))
(define-fun x3661 ((x2850 Real)) Real (ite (= x2696 x2850) x4320 (x3352 x2850)))
(define-fun x3450 ((x2850 Real)) Real (ite (= x4690 x2850) x1437 (x3661 x2850)))
(define-fun x3668 ((x2850 Real)) Real (ite (= x4790 x2850) 32 (x3450 x2850)))
(define-fun x3321 ((x2850 Real)) Real (ite (= x2850 x3185) x897 (x3413 x2850)))
(define-fun x5249 ((x2850 Real)) Real (ite (= x187 x2850) 0 (x2952 x2850)))
(define-fun x1553 ((x2850 x4071)) Real (ite (= (x5032 274184521717934524641157099916833587240) x2850) x1468 (x4718 x2850)))
(define-fun x4400 ((x2850 x4071)) Real (ite (= x2850 (x5032 x353)) x3194 (x1553 x2850)))
(define-fun x200 ((x2850 x4071)) Real (ite (= x2850 (x5032 x353)) x3670 (x4400 x2850)))
(define-fun x378 ((x2850 x4071)) Real (ite (= x2850 (x5032 274184521717934524641157099916833587240)) x3434 (x200 x2850)))
(define-fun x4712 ((x2850 x4071)) Real (ite (= (x5032 274184521717934524641157099916833587240) x2850) x3393 (x68 x2850)))
(define-fun x619 ((x2850 x4071)) Real (ite (= x2850 (x5032 x5105)) x4180 (x4712 x2850)))
(define-fun x5050 ((x2850 x4071)) Real (ite (and (not x2708) x1166 x3947 x5076) (x1206 x2850) (x619 x2850)))
(define-fun x2409 ((x2850 x4071)) Real (ite (= x2850 (x5032 x5105)) x4863 (x5050 x2850)))
(define-fun x2664 ((x2850 x4071)) Real (ite (and (not x525) x4242) (x3776 x2850) (ite (and x4913 x2288) (x3776 x2850) (ite (and x1323 x1023) (x4804 x2850) (ite (and x655 x4775) (x3576 x2850) (ite (and (not x4034) x247) (x3776 x2850) (ite (and x1425 (not x3859)) (x3776 x2850) (ite (and x4463 x3626) (x3776 x2850) (ite (and x768 x3336) (x3776 x2850) (ite (and x143 x77) (x4804 x2850) (x3776 x2850)))))))))))
(define-fun x881 ((x2850 x4071)) Real (ite (= x76 x2850) x1140 (x3576 x2850)))
(define-fun x109 ((x2850 x4071)) Real (ite (= x835 x2850) x4131 (x881 x2850)))
(define-fun x2549 ((x2850 x4071)) Real (ite x4294 (x2664 x2850) (x109 x2850)))
(define-fun x5207 ((x2850 x4071)) Real (ite x3665 (x2549 x2850) (x3776 x2850)))
(define-fun x2183 ((x2850 x4071)) Real (ite (and x2074 (not x3897)) (x3776 x2850) (ite x2298 (ite x4453 (x5207 x2850) (x3776 x2850)) (x3776 x2850))))
(define-fun x92 ((x2850 Real)) Real (ite (= x2850 0) x1877 (x3824 x2850)))
(define-fun x4697 ((x2850 x4071)) Real (ite (= x2850 x1440) x2621 (x4674 x2850)))
(define-fun x3108 ((x2850 x4071)) Real (ite x2690 (x4674 x2850) (x4697 x2850)))
(define-fun x2578 ((x2850 x4071)) Real (ite (and (not x5088) x5236) (ite x1420 (x4674 x2850) (ite x4409 (x3108 x2850) (x4674 x2850))) (ite (and x4906 (not x3006) x783) (x2351 x2850) (x4674 x2850))))
(define-fun x1312 ((x2850 x4071)) Real (ite (and x90 x3318) (ite (and (not x2093) x639 x4082) (x5261 x2850) (x2578 x2850)) (x2578 x2850)))
(define-fun x1514 ((x2850 x4071)) Real (ite (and x2768 x2911) (x1452 x2850) (ite (and x4565 x1088) (x3982 x2850) (ite (and x2343 x3035) (x2041 x2850) (ite (and (not x2822) x2936) (x2041 x2850) (ite (and x4335 x4846) (x2041 x2850) (ite (and x4518 x4942) (x1452 x2850) (ite (and x4498 x2042) (x2041 x2850) (x3982 x2850)))))))))
(define-fun x2976 ((x2850 x4071)) Real (ite x2690 (x1514 x2850) (x1452 x2850)))
(define-fun x2524 ((x2850 x4071)) Real (ite (and x5236 (not x5088)) (ite x1420 (x2041 x2850) (ite x4409 (x2976 x2850) (x2041 x2850))) (ite (and x4906 (not x3006) x783) (x229 x2850) (x2041 x2850))))
(define-fun x2107 ((x2850 x4071)) Real (ite (and x3195 x2933) (x1372 x2850) (ite (and x2837 x870) (x3306 x2850) (ite (and x992 x1020) (x3835 x2850) (ite (and x369 (not x2252)) (x3835 x2850) (ite (and x1202 x587) (x3835 x2850) (ite (and x3910 x706) (x1372 x2850) (ite (and x1404 x5114) (x3835 x2850) (x3306 x2850)))))))))
(define-fun x3221 ((x2850 x4071)) Real (ite x882 (x2107 x2850) (x1372 x2850)))
(define-fun x4851 ((x2850 x4071)) Real (ite (and (not x5088) x5236) (ite x1420 (x3835 x2850) (ite x4409 (x3835 x2850) (x3221 x2850))) (ite (and (not x3006) x783 x4906) (x4414 x2850) (x3835 x2850))))
(define-fun x796 ((x2850 x4071)) Real (ite (= x2597 x2850) x2435 (x2056 x2850)))
(define-fun x492 ((x2850 x4071)) Real (ite x882 (x2056 x2850) (x796 x2850)))
(define-fun x2962 ((x2850 x4071)) Real (ite (and (not x5088) x5236) (ite x1420 (x2056 x2850) (ite x4409 (x2056 x2850) (x492 x2850))) (ite (and x4906 (not x3006) x783) (x2966 x2850) (x2056 x2850))))
(define-fun x4211 ((x2850 x4071)) Real (ite (and x3318 x90) (ite (and x639 (not x2093) x4082) (x1051 x2850) (x2962 x2850)) (x2962 x2850)))
(define-fun x3449 ((x2850 Real)) Real (ite (= x4919 x2850) x1228 (x374 x2850)))
(define-fun x2137 ((x2850 Real)) Real (ite x4472 (x374 x2850) (x3449 x2850)))
(define-fun x1741 ((x2850 Real)) Real (ite (= x4919 x2850) x2309 (x374 x2850)))
(define-fun x5237 ((x2850 Real)) Real (ite x1861 (x374 x2850) (x1741 x2850)))
(define-fun x1071 ((x2850 Real)) Real (ite (= x2850 0) 1 (x2514 x2850)))
(define-fun x3093 ((x2850 Real)) Real (ite x4472 (x2514 x2850) (x1071 x2850)))
(define-fun x2171 ((x2850 Real)) Real (ite (= 0 x2850) 1 (x2514 x2850)))
(define-fun x3652 ((x2850 Real)) Real (ite x1861 (x2514 x2850) (x2171 x2850)))
(define-fun x275 ((x2850 Real)) Real (ite x3220 (ite x3129 (x3093 x2850) (x3652 x2850)) (x154 x2850)))
(define-fun x4963 ((x2850 Real)) Real (ite (= x4919 x2850) x1966 (x4716 x2850)))
(define-fun x498 ((x2850 Real)) Real (ite (and (> (+ x1966 x4253) x2850) (<= x4253 x2850)) (x275 (+ 0 (- x2850 x4253))) (x4963 x2850)))
(define-fun x4501 ((x2850 Real)) Real (ite (and x691 x4866) (x4716 x2850) (x498 x2850)))
(define-fun x3476 ((x2850 x4071)) Real (ite (= x2850 (x5032 274184521717934524641157099916833587240)) x2632 (x68 x2850)))
(define-fun x97 ((x2850 x4071)) Real (ite (= (x5032 x5256) x2850) x1972 (x3476 x2850)))
(define-fun x5291 ((x2850 Real)) Real (ite (= x2850 0) 1 (x2520 x2850)))
(define-fun x4699 ((x2850 Real)) Real (ite (= 0 x2850) 1 (x2520 x2850)))
(define-fun x1720 ((x2850 Real)) Real (ite (= x2850 0) x5134 (x450 x2850)))
(define-fun x2339 ((x2850 Real)) Real (ite (= x2850 0) x5123 (x450 x2850)))
(define-fun x2744 ((x2850 Real)) Real (ite (= 0 x2850) x2545 (x4620 x2850)))
(define-fun x728 ((x2850 Real)) Real (ite (= x2850 0) x4383 (x4620 x2850)))
(define-fun x1266 ((x2850 x4071)) Real (ite (= x2850 x532) x327 (x2325 x2850)))
(define-fun x2122 ((x2850 Real)) Real (ite (= x2850 0) 1 (x4066 x2850)))
(define-fun x1038 ((x2850 Real)) Real (ite (= x2850 x2877) x43 (x4299 x2850)))
(define-fun x2014 ((x2850 Real)) Real (ite (= 0 x2850) 1 (x4831 x2850)))
(define-fun x1007 ((x2850 Real)) Real (ite (= x2850 0) 1 (x4831 x2850)))
(define-fun x2475 ((x2850 Real)) Real (ite (= 0 x2850) x4508 (x3700 x2850)))
(define-fun x4430 ((x2850 Real)) Real (ite (= x2850 0) x2824 (x3700 x2850)))
(define-fun x4456 ((x2850 Real)) Real (ite (= x2850 0) x1992 (x1878 x2850)))
(define-fun x242 ((x2850 Real)) Real (ite (= x2850 0) x1617 (x1878 x2850)))
(define-fun x1598 ((x2850 Real)) Real (ite (= x2850 0) 1 (x2825 x2850)))
(define-fun x2127 ((x2850 Real)) Real (ite (= x2850 x1748) x176 (x1193 x2850)))
(define-fun x4079 ((x2850 Real)) Real (ite (= x2850 0) x5296 (x4793 x2850)))
(define-fun x4293 ((x2850 Real)) Real (ite (= x2850 0) x2213 (x4793 x2850)))
(define-fun x560 ((x2850 x4071)) Real (ite (and (not x4638) x1961 x4853) (x4155 x2850) (x183 x2850)))
(define-fun x3525 ((x2850 x4071)) Real (ite (and (not x4638) x1961 x4853) (x4064 x2850) (x4431 x2850)))
(define-fun x4593 ((x2850 Real)) Real (ite (= x2850 0) x3681 (x2839 x2850)))
(define-fun x1565 ((x2850 Real)) Real (ite (= 0 x2850) x3265 (x2839 x2850)))
(define-fun x4758 ((x2850 x4071)) Real (ite (and x5217 x3655) (x3724 x2850) (ite (and x893 x3888) (x3305 x2850) (ite (and x1031 x356) (x183 x2850) (ite (and x5073 (not x2685)) (x183 x2850) (ite (and x4385 x1998) (x183 x2850) (ite (and x1098 x4875) (x3724 x2850) (ite (and x3373 x3316) (x183 x2850) (x3305 x2850)))))))))
(define-fun x3133 ((x2850 x4071)) Real (ite x1805 (x4758 x2850) (x3724 x2850)))
(define-fun x4985 ((x2850 x4071)) Real (ite x3665 (x183 x2850) (ite x2813 (x3133 x2850) (x183 x2850))))
(define-fun x2282 ((x2850 x4071)) Real (ite (and x451 x5092) (x443 x2850) (ite (and x4583 x1506) (x786 x2850) (ite (and x186 x401) (x4431 x2850) (ite (and x3535 (not x4088)) (x4431 x2850) (ite (and x3401 x1605) (x4431 x2850) (ite (and x3025 x3654) (x443 x2850) (ite (and x5371 x1811) (x4431 x2850) (x786 x2850)))))))))
(define-fun x214 ((x2850 x4071)) Real (ite x2020 (x2282 x2850) (x443 x2850)))
(define-fun x4605 ((x2850 x4071)) Real (ite x3665 (x4431 x2850) (ite x2813 (x4431 x2850) (x214 x2850))))
(define-fun x5247 ((x2850 x4071)) Real (ite (= (x5032 x5256) x2850) x4061 (x97 x2850)))
(define-fun x40 ((x2850 Real)) Real (ite (= 0 x2850) 1 (x770 x2850)))
(define-fun x1769 ((x2850 Real)) Real (ite (= x2850 0) 1 (x770 x2850)))
(define-fun x2565 ((x2850 x4071)) Real (ite (and (not x3897) x2074) (x3525 x2850) (ite x2298 (ite x4453 (x4605 x2850) (x4431 x2850)) (x4431 x2850))))
(define-fun x3545 ((x2850 x4071)) Real (ite (= x5051 x2850) x4722 (x2565 x2850)))
(define-fun x5198 ((x2850 x4071)) Real (ite (and x2074 (not x3897)) (x560 x2850) (ite x2298 (ite x4453 (x4985 x2850) (x183 x2850)) (x183 x2850))))
(define-fun x2017 ((x2850 x4071)) Real (ite (= x3451 x2850) x2456 (x5198 x2850)))
(define-fun x810 ((x2850 Real)) Real (ite (and x4578 x617) (x2558 x2850) (x2122 x2850)))
(define-fun x5108 ((x2850 x4071)) Real (ite (= (x5032 x1279) x2850) x2145 (x4304 x2850)))
(define-fun x650 ((x2850 Real)) Real (ite (= x2850 x2877) x4216 (x1484 x2850)))
(define-fun x3276 ((x2850 Real)) Real (ite (and (<= x1770 x2850) (< x2850 (+ x1770 x4216))) (x810 (+ (- x2850 x1770) 0)) (x650 x2850)))
(define-fun x4923 ((x2850 Real)) Real (ite (and x3319 x1076) (x1484 x2850) (x3276 x2850)))
(define-fun x1641 ((x2850 Real)) Real (ite (and x370 x2980) (x3063 x2850) (x1598 x2850)))
(define-fun x2012 ((x2850 Real)) Real (ite (= x1748 x2850) x3746 (x3113 x2850)))
(define-fun x1417 ((x2850 Real)) Real (ite (and (< x2850 (+ x4040 x3746)) (>= x2850 x4040)) (x1641 (+ 0 (- x2850 x4040))) (x2012 x2850)))
(define-fun x3896 ((x2850 Real)) Real (ite (and x3421 x3917) (x3113 x2850) (x1417 x2850)))
(define-fun x4289 ((x837 Real)) Bool (=> (and (not (= 34167655436598589418538772692774877509225721125679165766806516059628562808832 x837)) (not (= x837 599290589)) (not (= x837 904250603428552709895185118199468575982109441609966099573332780532423983104)) (not (= 2650021976 x837)) (not (= 455944412 x837)) (not (= x837 115792089237316195423570985008687907853269984665640564039457584007913129639908)) (not (= x837 1166402363)) (not (= x837 115792089210356248756420345215482394403581256910207104449633294546465451933695)) (not (= 18446744073709551616 x837)) (not (= x837 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 2514000705 x837)) (not (= 5192296858534827628530496329220096 x837)) (not (= x837 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= 2311529814 x837)) (not (= 274184521717934524641157099916833587240 x837)) (not (= 2335792882 x837)) (not (= 18446744073709551615 x837)) (not (= x837 274184521717934524641157099916833587202)) (not (= 115792089237316195423570985007226406215939081747436879206741300988257197096960 x837)) (not (= x837 511946350)) (not (= x837 11430537079145650693387304458692941425836787954612963690241153482819318579200)) (< 10000 x837) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x837)) (not (= x837 1461501637330902918203684832716283019655932542976)) (not (= x837 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (not (= 826074471 x837)) (not (= x837 115792089237316195423570984636004990333889740523700931696805413995650331181055)) (not (= 57896044618658097711785492504343953926418782139537452191302581570759080747168 x837)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x837)) (not (= x837 1722255204)) (not (= 4294967296 x837)) (not (= 117300739 x837)) (not (= x837 1461501637330902918203684832716283019655932542975)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x837)) (not (= 1858285468 x837)) (not (= x837 4294967295)) (not (= x837 1889567281)) (not (= 3155786881 x837)) (not (= x837 274184521717934524641157099916833587206)) (not (= x837 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (not (= x837 9518847204935358166548570266051330015907116135037852959641967396525866745856)) (not (= 404098525 x837)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x837)) (not (= x837 1845821197)) (not (= x837 26959946667150639794667015087019630673637144422540572481103610249216)) (not (= 109576784812748834340197573905731726730118698833493337707389013487240318287872 x837)) (not (= x837 2835717307)) (not (= x837 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (not (= 98474297345890754025501882143967591664980152141971839855651084132735363579904 x837)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x837)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x837)) (not (= 157198259 x837))) (not ((_ is x4755) (x5032 x837)))))
(assert (axiom_frac_bound (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1039 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2315 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x2897 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3074 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3660 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1729 x4844 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1759 x2250 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2250 x1759 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2348 x3505 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2495 79228162514264337593543950336 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3010 x2410 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3269 x4686 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3462 x1046 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892 79228162514264337593543950336 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x415 x4416 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4305 79228162514264337593543950336 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4685 79228162514264337593543950336 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4686 x3269 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494 x1358 (uninterp_frac (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 79228162514264337593543950336 x1039 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 79228162514264337593543950336 x2315 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 79228162514264337593543950336 x2897 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 79228162514264337593543950336 x3074 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 79228162514264337593543950336 x3660 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x1729 x4844 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x1759 x2250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x2250 x1759 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x2348 x3505 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x2495 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x3010 x2410 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x3269 x4686 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x3462 x1046 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x3892 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x415 x4416 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x4305 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x4685 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x4686 x3269 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348 x494 x1358 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 79228162514264337593543950336 x1039 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 79228162514264337593543950336 x2315 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 79228162514264337593543950336 x2897 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 79228162514264337593543950336 x3074 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 79228162514264337593543950336 x3660 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x1729 x4844 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x1759 x2250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x2250 x1759 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x2348 x3505 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x2495 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x3010 x2410 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x3269 x4686 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x3462 x1046 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x3892 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x415 x4416 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x4305 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x4685 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x4686 x3269 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410 x494 x1358 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 79228162514264337593543950336 x1039 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 79228162514264337593543950336 x2315 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 79228162514264337593543950336 x2897 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 79228162514264337593543950336 x3074 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 79228162514264337593543950336 x3660 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x1729 x4844 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x1759 x2250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x2250 x1759 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x2348 x3505 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x2495 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x3010 x2410 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x3269 x4686 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x3462 x1046 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x3892 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x415 x4416 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x4305 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x4685 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x4686 x3269 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462 x494 x1358 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 79228162514264337593543950336 x1039 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 79228162514264337593543950336 x2315 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 79228162514264337593543950336 x2897 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 79228162514264337593543950336 x3074 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 79228162514264337593543950336 x3660 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x1729 x4844 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x1759 x2250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x2250 x1759 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x2348 x3505 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x2495 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x3010 x2410 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x3269 x4686 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x3462 x1046 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x3892 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x415 x4416 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x4305 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x4685 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x4686 x3269 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844 x494 x1358 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)))
(assert (axiom_frac_bound x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x1039 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x2315 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x2897 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x3074 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x3660 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1729 x4844 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1759 x2250 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2250 x1759 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2348 x3505 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2495 79228162514264337593543950336 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3010 x2410 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3269 x4686 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3462 x1046 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3892 79228162514264337593543950336 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x415 x4416 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4305 79228162514264337593543950336 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4685 79228162514264337593543950336 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4686 x3269 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968 x494 x1358 (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_bound x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x1039 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x2315 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x2897 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x3074 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x3660 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1729 x4844 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1759 x2250 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2250 x1759 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2348 x3505 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2495 79228162514264337593543950336 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3010 x2410 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3269 x4686 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3462 x1046 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3892 79228162514264337593543950336 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x415 x4416 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4305 79228162514264337593543950336 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4685 79228162514264337593543950336 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4686 x3269 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x494 x1358 (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_bound x3027 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x1039 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x2315 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x2897 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x3074 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x3660 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x1729 x4844 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x1759 x2250 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x2250 x1759 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x2348 x3505 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x2495 79228162514264337593543950336 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x3010 x2410 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x3269 x4686 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x3462 x1046 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x3892 79228162514264337593543950336 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x415 x4416 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x4305 79228162514264337593543950336 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x4685 79228162514264337593543950336 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x4686 x3269 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x3027 452312848583266388373324160190187140051835877600158453279131187530910662656 x494 x1358 (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_bound x3170 100))
(assert (axiom_frac_zero x3170 100 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 79228162514264337593543950336 x1039 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 79228162514264337593543950336 x2315 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 79228162514264337593543950336 x2897 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 79228162514264337593543950336 x3074 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 79228162514264337593543950336 x3660 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x1729 x4844 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x1759 x2250 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x2250 x1759 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x2348 x3505 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x2495 79228162514264337593543950336 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x3010 x2410 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x3269 x4686 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x3462 x1046 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x3892 79228162514264337593543950336 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x415 x4416 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x4305 79228162514264337593543950336 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x4685 79228162514264337593543950336 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x4686 x3269 (uninterp_frac x3170 100)))
(assert (axiom_frac_zero x3170 100 x494 x1358 (uninterp_frac x3170 100)))
(assert (axiom_frac_bound x3680 100))
(assert (axiom_frac_zero x3680 100 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 79228162514264337593543950336 x1039 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 79228162514264337593543950336 x2315 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 79228162514264337593543950336 x2897 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 79228162514264337593543950336 x3074 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 79228162514264337593543950336 x3660 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x1729 x4844 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x1759 x2250 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x2250 x1759 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x2348 x3505 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x2495 79228162514264337593543950336 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x3010 x2410 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x3269 x4686 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x3462 x1046 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x3892 79228162514264337593543950336 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x415 x4416 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x4305 79228162514264337593543950336 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x4685 79228162514264337593543950336 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x4686 x3269 (uninterp_frac x3680 100)))
(assert (axiom_frac_zero x3680 100 x494 x1358 (uninterp_frac x3680 100)))
(assert (axiom_frac_bound x384 5192296858534827628530496329220096))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 79228162514264337593543950336 x1039 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 79228162514264337593543950336 x2315 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 79228162514264337593543950336 x2897 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 79228162514264337593543950336 x3074 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 79228162514264337593543950336 x3660 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x1729 x4844 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x1759 x2250 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x2250 x1759 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x2348 x3505 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x2495 79228162514264337593543950336 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x3010 x2410 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x3269 x4686 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x3462 x1046 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x3892 79228162514264337593543950336 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x415 x4416 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x4305 79228162514264337593543950336 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x4685 79228162514264337593543950336 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x4686 x3269 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x384 5192296858534827628530496329220096 x494 x1358 (uninterp_frac x384 5192296858534827628530496329220096)))
(assert (axiom_frac_bound x4124 100))
(assert (axiom_frac_zero x4124 100 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 79228162514264337593543950336 x1039 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 79228162514264337593543950336 x2315 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 79228162514264337593543950336 x2897 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 79228162514264337593543950336 x3074 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 79228162514264337593543950336 x3660 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x1729 x4844 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x1759 x2250 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x2250 x1759 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x2348 x3505 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x2495 79228162514264337593543950336 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x3010 x2410 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x3269 x4686 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x3462 x1046 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x3892 79228162514264337593543950336 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x415 x4416 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x4305 79228162514264337593543950336 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x4685 79228162514264337593543950336 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x4686 x3269 (uninterp_frac x4124 100)))
(assert (axiom_frac_zero x4124 100 x494 x1358 (uninterp_frac x4124 100)))
(assert (axiom_frac_bound x4337 18446744073709551616))
(assert (axiom_frac_zero x4337 18446744073709551616 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 79228162514264337593543950336 x1039 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 79228162514264337593543950336 x2315 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 79228162514264337593543950336 x2897 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 79228162514264337593543950336 x3074 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 79228162514264337593543950336 x3660 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x1729 x4844 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x1759 x2250 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x2250 x1759 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x2348 x3505 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x2495 79228162514264337593543950336 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x3010 x2410 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x3269 x4686 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x3462 x1046 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x3892 79228162514264337593543950336 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x415 x4416 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x4305 79228162514264337593543950336 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x4685 79228162514264337593543950336 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x4686 x3269 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_zero x4337 18446744073709551616 x494 x1358 (uninterp_frac x4337 18446744073709551616)))
(assert (axiom_frac_bound x4412 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x1039 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x2315 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x2897 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x3074 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x3660 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x1729 x4844 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x1759 x2250 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x2250 x1759 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x2348 x3505 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x2495 79228162514264337593543950336 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x3010 x2410 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x3269 x4686 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x3462 x1046 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x3892 79228162514264337593543950336 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x415 x4416 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x4305 79228162514264337593543950336 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x4685 79228162514264337593543950336 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x4686 x3269 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x4412 452312848583266388373324160190187140051835877600158453279131187530910662656 x494 x1358 (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_bound x4826 5192296858534827628530496329220096))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 79228162514264337593543950336 x1039 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 79228162514264337593543950336 x2315 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 79228162514264337593543950336 x2897 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 79228162514264337593543950336 x3074 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 79228162514264337593543950336 x3660 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x1729 x4844 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x1759 x2250 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x2250 x1759 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x2348 x3505 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x2495 79228162514264337593543950336 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x3010 x2410 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x3269 x4686 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x3462 x1046 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x3892 79228162514264337593543950336 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x415 x4416 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x4305 79228162514264337593543950336 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x4685 79228162514264337593543950336 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x4686 x3269 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x4826 5192296858534827628530496329220096 x494 x1358 (uninterp_frac x4826 5192296858534827628530496329220096)))
(assert (axiom_frac_bound x5093 5192296858534827628530496329220096))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 79228162514264337593543950336 x1039 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 79228162514264337593543950336 x2315 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 79228162514264337593543950336 x2897 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 79228162514264337593543950336 x3074 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 79228162514264337593543950336 x3660 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x1729 x4844 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x1759 x2250 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x2250 x1759 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x2348 x3505 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x2495 79228162514264337593543950336 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x3010 x2410 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x3269 x4686 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x3462 x1046 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x3892 79228162514264337593543950336 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x415 x4416 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x4305 79228162514264337593543950336 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x4685 79228162514264337593543950336 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x4686 x3269 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x5093 5192296858534827628530496329220096 x494 x1358 (uninterp_frac x5093 5192296858534827628530496329220096)))
(assert (axiom_frac_bound x5161 18446744073709551616))
(assert (axiom_frac_zero x5161 18446744073709551616 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 79228162514264337593543950336 x1039 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 79228162514264337593543950336 x2315 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 79228162514264337593543950336 x2897 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 79228162514264337593543950336 x3074 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 79228162514264337593543950336 x3660 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x1729 x4844 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x1759 x2250 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x2250 x1759 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x2348 x3505 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x2495 79228162514264337593543950336 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x3010 x2410 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x3269 x4686 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x3462 x1046 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x3892 79228162514264337593543950336 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x415 x4416 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x4305 79228162514264337593543950336 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x4685 79228162514264337593543950336 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x4686 x3269 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_zero x5161 18446744073709551616 x494 x1358 (uninterp_frac x5161 18446744073709551616)))
(assert (axiom_frac_bound x5243 18446744073709551616))
(assert (axiom_frac_zero x5243 18446744073709551616 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 79228162514264337593543950336 x1039 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 79228162514264337593543950336 x2315 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 79228162514264337593543950336 x2897 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 79228162514264337593543950336 x3074 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 79228162514264337593543950336 x3660 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x1729 x4844 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x1759 x2250 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x2250 x1759 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x2348 x3505 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x2495 79228162514264337593543950336 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x3010 x2410 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x3269 x4686 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x3462 x1046 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x3892 79228162514264337593543950336 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x415 x4416 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x4305 79228162514264337593543950336 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x4685 79228162514264337593543950336 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x4686 x3269 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_zero x5243 18446744073709551616 x494 x1358 (uninterp_frac x5243 18446744073709551616)))
(assert (axiom_frac_bound x851 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x1039 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x2315 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x2897 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x3074 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 79228162514264337593543950336 x3660 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x1729 x4844 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x1759 x2250 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x2250 x1759 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x2348 x3505 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x2495 79228162514264337593543950336 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x3010 x2410 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x3269 x4686 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x3462 x1046 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x3892 79228162514264337593543950336 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x415 x4416 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x4305 79228162514264337593543950336 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x4685 79228162514264337593543950336 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x4686 x3269 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_zero x851 452312848583266388373324160190187140051835877600158453279131187530910662656 x494 x1358 (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (axiom_frac_bound x88 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x1839 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x2574 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x258 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x4285 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 1461501637330902918203684832716283019655932542976 x462 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 26959946667150639794667015087019630673637144422540572481103610249216 x1359 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 26959946667150639794667015087019630673637144422540572481103610249216 x3196 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x1039 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x2315 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x2897 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x3074 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 79228162514264337593543950336 x3660 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1121 26959946667150639794667015087019630673637144422540572481103610249216 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1729 x4844 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1759 x2250 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2250 x1759 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2348 x3505 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2495 79228162514264337593543950336 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3010 x2410 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3269 x4686 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3462 x1046 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3541 1461501637330902918203684832716283019655932542976 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3892 79228162514264337593543950336 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x415 x4416 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4305 79228162514264337593543950336 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4685 79228162514264337593543950336 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4686 x3269 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_frac_zero x88 57896044618658097711785492504343953926634992332820282019728792003956564819968 x494 x1358 (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1008))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1015))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1024))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x1041))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x1046))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1057))
(assert (axiom_int_approximation x1062))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1085))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x1093))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1095))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1112))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1115))
(assert (axiom_int_approximation x1116))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1121))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1123))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1133))
(assert (axiom_int_approximation x1134))
(assert (axiom_int_approximation x1135))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x1149))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1181))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1185))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x1194))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1197))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1207))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1222))
(assert (axiom_int_approximation x1227))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1235))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1249))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1257))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1262))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1265))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1273))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x128))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1286))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1305))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1313))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1316))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1347))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1357))
(assert (axiom_int_approximation x1358))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x1360))
(assert (axiom_int_approximation x1361))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1363))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x1371))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1377))
(assert (axiom_int_approximation x1378))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x1388))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1393))
(assert (axiom_int_approximation x1394))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1405))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1413))
(assert (axiom_int_approximation x1419))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1433))
(assert (axiom_int_approximation x1434))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1436))
(assert (axiom_int_approximation x1437))
(assert (axiom_int_approximation x1438))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1448))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1464))
(assert (axiom_int_approximation x1467))
(assert (axiom_int_approximation x1468))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x1471))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1479))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x1482))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1488))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1494))
(assert (axiom_int_approximation x1496))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1498))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x1501))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1505))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x1508))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1512))
(assert (axiom_int_approximation x1519))
(assert (axiom_int_approximation x1520))
(assert (axiom_int_approximation x1523))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x1527))
(assert (axiom_int_approximation x1529))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1530))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x1538))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x1541))
(assert (axiom_int_approximation x1543))
(assert (axiom_int_approximation x1544))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1550))
(assert (axiom_int_approximation x1555))
(assert (axiom_int_approximation x1556))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1567))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1575))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1583))
(assert (axiom_int_approximation x1586))
(assert (axiom_int_approximation x1588))
(assert (axiom_int_approximation x1593))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1599))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1609))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x1610))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1617))
(assert (axiom_int_approximation x1618))
(assert (axiom_int_approximation x1621))
(assert (axiom_int_approximation x1622))
(assert (axiom_int_approximation x1623))
(assert (axiom_int_approximation x1624))
(assert (axiom_int_approximation x1626))
(assert (axiom_int_approximation x1629))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x1631))
(assert (axiom_int_approximation x1633))
(assert (axiom_int_approximation x1635))
(assert (axiom_int_approximation x1636))
(assert (axiom_int_approximation x1637))
(assert (axiom_int_approximation x1645))
(assert (axiom_int_approximation x1646))
(assert (axiom_int_approximation x1648))
(assert (axiom_int_approximation x1649))
(assert (axiom_int_approximation x1651))
(assert (axiom_int_approximation x1656))
(assert (axiom_int_approximation x1657))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x1661))
(assert (axiom_int_approximation x1663))
(assert (axiom_int_approximation x1664))
(assert (axiom_int_approximation x1665))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1679))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x1687))
(assert (axiom_int_approximation x1688))
(assert (axiom_int_approximation x1689))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x1691))
(assert (axiom_int_approximation x1692))
(assert (axiom_int_approximation x1694))
(assert (axiom_int_approximation x1696))
(assert (axiom_int_approximation x1697))
(assert (axiom_int_approximation x1698))
(assert (axiom_int_approximation x1699))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x1701))
(assert (axiom_int_approximation x1703))
(assert (axiom_int_approximation x1705))
(assert (axiom_int_approximation x1708))
(assert (axiom_int_approximation x1709))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1710))
(assert (axiom_int_approximation x1713))
(assert (axiom_int_approximation x1714))
(assert (axiom_int_approximation x1715))
(assert (axiom_int_approximation x1718))
(assert (axiom_int_approximation x1719))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x1722))
(assert (axiom_int_approximation x1723))
(assert (axiom_int_approximation x1724))
(assert (axiom_int_approximation x1729))
(assert (axiom_int_approximation x1730))
(assert (axiom_int_approximation x1732))
(assert (axiom_int_approximation x1733))
(assert (axiom_int_approximation x1735))
(assert (axiom_int_approximation x1742))
(assert (axiom_int_approximation x1743))
(assert (axiom_int_approximation x1744))
(assert (axiom_int_approximation x1745))
(assert (axiom_int_approximation x1747))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x1749))
(assert (axiom_int_approximation x1750))
(assert (axiom_int_approximation x1753))
(assert (axiom_int_approximation x1755))
(assert (axiom_int_approximation x1757))
(assert (axiom_int_approximation x1758))
(assert (axiom_int_approximation x1759))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x1760))
(assert (axiom_int_approximation x1761))
(assert (axiom_int_approximation x1770))
(assert (axiom_int_approximation x1772))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x1774))
(assert (axiom_int_approximation x1775))
(assert (axiom_int_approximation x1776))
(assert (axiom_int_approximation x1777))
(assert (axiom_int_approximation x1779))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x1780))
(assert (axiom_int_approximation x1783))
(assert (axiom_int_approximation x1785))
(assert (axiom_int_approximation x1786))
(assert (axiom_int_approximation x1789))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x1792))
(assert (axiom_int_approximation x1793))
(assert (axiom_int_approximation x1794))
(assert (axiom_int_approximation x1797))
(assert (axiom_int_approximation x1798))
(assert (axiom_int_approximation x1799))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1804))
(assert (axiom_int_approximation x1806))
(assert (axiom_int_approximation x1807))
(assert (axiom_int_approximation x1808))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x1810))
(assert (axiom_int_approximation x1813))
(assert (axiom_int_approximation x1817))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x1820))
(assert (axiom_int_approximation x1821))
(assert (axiom_int_approximation x1822))
(assert (axiom_int_approximation x1823))
(assert (axiom_int_approximation x1824))
(assert (axiom_int_approximation x1825))
(assert (axiom_int_approximation x1827))
(assert (axiom_int_approximation x1829))
(assert (axiom_int_approximation x1830))
(assert (axiom_int_approximation x1831))
(assert (axiom_int_approximation x1832))
(assert (axiom_int_approximation x1835))
(assert (axiom_int_approximation x1838))
(assert (axiom_int_approximation x1839))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x1843))
(assert (axiom_int_approximation x1844))
(assert (axiom_int_approximation x1847))
(assert (axiom_int_approximation x1848))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x1850))
(assert (axiom_int_approximation x1851))
(assert (axiom_int_approximation x1854))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1857))
(assert (axiom_int_approximation x1858))
(assert (axiom_int_approximation x1859))
(assert (axiom_int_approximation x1863))
(assert (axiom_int_approximation x1864))
(assert (axiom_int_approximation x1865))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x1870))
(assert (axiom_int_approximation x1872))
(assert (axiom_int_approximation x1873))
(assert (axiom_int_approximation x1875))
(assert (axiom_int_approximation x1877))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x1881))
(assert (axiom_int_approximation x1883))
(assert (axiom_int_approximation x1885))
(assert (axiom_int_approximation x1888))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1891))
(assert (axiom_int_approximation x1894))
(assert (axiom_int_approximation x1899))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x1901))
(assert (axiom_int_approximation x1902))
(assert (axiom_int_approximation x1903))
(assert (axiom_int_approximation x1905))
(assert (axiom_int_approximation x1908))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x1911))
(assert (axiom_int_approximation x1912))
(assert (axiom_int_approximation x1914))
(assert (axiom_int_approximation x1916))
(assert (axiom_int_approximation x1917))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x1920))
(assert (axiom_int_approximation x1921))
(assert (axiom_int_approximation x1922))
(assert (axiom_int_approximation x1924))
(assert (axiom_int_approximation x1925))
(assert (axiom_int_approximation x1928))
(assert (axiom_int_approximation x1930))
(assert (axiom_int_approximation x1931))
(assert (axiom_int_approximation x1934))
(assert (axiom_int_approximation x1935))
(assert (axiom_int_approximation x1937))
(assert (axiom_int_approximation x1938))
(assert (axiom_int_approximation x1939))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x1940))
(assert (axiom_int_approximation x1941))
(assert (axiom_int_approximation x1943))
(assert (axiom_int_approximation x1944))
(assert (axiom_int_approximation x1945))
(assert (axiom_int_approximation x1946))
(assert (axiom_int_approximation x1949))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x1950))
(assert (axiom_int_approximation x1951))
(assert (axiom_int_approximation x1952))
(assert (axiom_int_approximation x1953))
(assert (axiom_int_approximation x1957))
(assert (axiom_int_approximation x1958))
(assert (axiom_int_approximation x1959))
(assert (axiom_int_approximation x1964))
(assert (axiom_int_approximation x1966))
(assert (axiom_int_approximation x1967))
(assert (axiom_int_approximation x1969))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x1970))
(assert (axiom_int_approximation x1972))
(assert (axiom_int_approximation x1974))
(assert (axiom_int_approximation x1977))
(assert (axiom_int_approximation x1983))
(assert (axiom_int_approximation x1984))
(assert (axiom_int_approximation x1985))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x1992))
(assert (axiom_int_approximation x1993))
(assert (axiom_int_approximation x1994))
(assert (axiom_int_approximation x1996))
(assert (axiom_int_approximation x1997))
(assert (axiom_int_approximation x1999))
(assert (axiom_int_approximation x2005))
(assert (axiom_int_approximation x2006))
(assert (axiom_int_approximation x2007))
(assert (axiom_int_approximation x2008))
(assert (axiom_int_approximation x2011))
(assert (axiom_int_approximation x2013))
(assert (axiom_int_approximation x2015))
(assert (axiom_int_approximation x2016))
(assert (axiom_int_approximation x2021))
(assert (axiom_int_approximation x2024))
(assert (axiom_int_approximation x2026))
(assert (axiom_int_approximation x2027))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x2030))
(assert (axiom_int_approximation x2032))
(assert (axiom_int_approximation x2034))
(assert (axiom_int_approximation x2035))
(assert (axiom_int_approximation x2036))
(assert (axiom_int_approximation x2037))
(assert (axiom_int_approximation x2038))
(assert (axiom_int_approximation x2040))
(assert (axiom_int_approximation x2046))
(assert (axiom_int_approximation x2048))
(assert (axiom_int_approximation x2049))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x2057))
(assert (axiom_int_approximation x2059))
(assert (axiom_int_approximation x2061))
(assert (axiom_int_approximation x2063))
(assert (axiom_int_approximation x2065))
(assert (axiom_int_approximation x2066))
(assert (axiom_int_approximation x2069))
(assert (axiom_int_approximation x2070))
(assert (axiom_int_approximation x2072))
(assert (axiom_int_approximation x2073))
(assert (axiom_int_approximation x2075))
(assert (axiom_int_approximation x2076))
(assert (axiom_int_approximation x2078))
(assert (axiom_int_approximation x2089))
(assert (axiom_int_approximation x2095))
(assert (axiom_int_approximation x2096))
(assert (axiom_int_approximation x2097))
(assert (axiom_int_approximation x2098))
(assert (axiom_int_approximation x2100))
(assert (axiom_int_approximation x2103))
(assert (axiom_int_approximation x2108))
(assert (axiom_int_approximation x2109))
(assert (axiom_int_approximation x211))
(assert (axiom_int_approximation x2110))
(assert (axiom_int_approximation x2112))
(assert (axiom_int_approximation x2114))
(assert (axiom_int_approximation x2115))
(assert (axiom_int_approximation x2118))
(assert (axiom_int_approximation x2119))
(assert (axiom_int_approximation x2121))
(assert (axiom_int_approximation x2123))
(assert (axiom_int_approximation x2129))
(assert (axiom_int_approximation x2132))
(assert (axiom_int_approximation x2134))
(assert (axiom_int_approximation x2136))
(assert (axiom_int_approximation x2140))
(assert (axiom_int_approximation x2141))
(assert (axiom_int_approximation x2142))
(assert (axiom_int_approximation x2143))
(assert (axiom_int_approximation x2145))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x2150))
(assert (axiom_int_approximation x2152))
(assert (axiom_int_approximation x2153))
(assert (axiom_int_approximation x2154))
(assert (axiom_int_approximation x2156))
(assert (axiom_int_approximation x2159))
(assert (axiom_int_approximation x216))
(assert (axiom_int_approximation x2160))
(assert (axiom_int_approximation x2163))
(assert (axiom_int_approximation x2165))
(assert (axiom_int_approximation x2168))
(assert (axiom_int_approximation x2169))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x2172))
(assert (axiom_int_approximation x2173))
(assert (axiom_int_approximation x2174))
(assert (axiom_int_approximation x2175))
(assert (axiom_int_approximation x2177))
(assert (axiom_int_approximation x2179))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x2182))
(assert (axiom_int_approximation x2187))
(assert (axiom_int_approximation x2188))
(assert (axiom_int_approximation x2189))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x2190))
(assert (axiom_int_approximation x2191))
(assert (axiom_int_approximation x2197))
(assert (axiom_int_approximation x2198))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x2202))
(assert (axiom_int_approximation x2203))
(assert (axiom_int_approximation x2204))
(assert (axiom_int_approximation x2212))
(assert (axiom_int_approximation x2213))
(assert (axiom_int_approximation x2214))
(assert (axiom_int_approximation x2216))
(assert (axiom_int_approximation x2218))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x2221))
(assert (axiom_int_approximation x2223))
(assert (axiom_int_approximation x2224))
(assert (axiom_int_approximation x2225))
(assert (axiom_int_approximation x2226))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x2230))
(assert (axiom_int_approximation x2232))
(assert (axiom_int_approximation x2233))
(assert (axiom_int_approximation x2234))
(assert (axiom_int_approximation x2238))
(assert (axiom_int_approximation x2239))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x2240))
(assert (axiom_int_approximation x2241))
(assert (axiom_int_approximation x2242))
(assert (axiom_int_approximation x2243))
(assert (axiom_int_approximation x2244))
(assert (axiom_int_approximation x2246))
(assert (axiom_int_approximation x2247))
(assert (axiom_int_approximation x2249))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x2250))
(assert (axiom_int_approximation x2251))
(assert (axiom_int_approximation x2253))
(assert (axiom_int_approximation x2257))
(assert (axiom_int_approximation x2258))
(assert (axiom_int_approximation x2259))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x2260))
(assert (axiom_int_approximation x2261))
(assert (axiom_int_approximation x2265))
(assert (axiom_int_approximation x227))
(assert (axiom_int_approximation x2270))
(assert (axiom_int_approximation x2271))
(assert (axiom_int_approximation x2274))
(assert (axiom_int_approximation x2276))
(assert (axiom_int_approximation x2278))
(assert (axiom_int_approximation x2280))
(assert (axiom_int_approximation x2283))
(assert (axiom_int_approximation x2284))
(assert (axiom_int_approximation x2285))
(assert (axiom_int_approximation x2287))
(assert (axiom_int_approximation x2291))
(assert (axiom_int_approximation x2292))
(assert (axiom_int_approximation x2293))
(assert (axiom_int_approximation x2294))
(assert (axiom_int_approximation x2297))
(assert (axiom_int_approximation x2299))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x2301))
(assert (axiom_int_approximation x2303))
(assert (axiom_int_approximation x2304))
(assert (axiom_int_approximation x2305))
(assert (axiom_int_approximation x2306))
(assert (axiom_int_approximation x2309))
(assert (axiom_int_approximation x2313))
(assert (axiom_int_approximation x2314))
(assert (axiom_int_approximation x2315))
(assert (axiom_int_approximation x2316))
(assert (axiom_int_approximation x2318))
(assert (axiom_int_approximation x2319))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x2320))
(assert (axiom_int_approximation x2324))
(assert (axiom_int_approximation x2327))
(assert (axiom_int_approximation x2328))
(assert (axiom_int_approximation x2330))
(assert (axiom_int_approximation x2334))
(assert (axiom_int_approximation x2336))
(assert (axiom_int_approximation x2337))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x2340))
(assert (axiom_int_approximation x2346))
(assert (axiom_int_approximation x2348))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x2352))
(assert (axiom_int_approximation x2354))
(assert (axiom_int_approximation x2357))
(assert (axiom_int_approximation x2358))
(assert (axiom_int_approximation x2359))
(assert (axiom_int_approximation x2360))
(assert (axiom_int_approximation x2361))
(assert (axiom_int_approximation x2362))
(assert (axiom_int_approximation x2363))
(assert (axiom_int_approximation x2365))
(assert (axiom_int_approximation x2371))
(assert (axiom_int_approximation x2375))
(assert (axiom_int_approximation x2376))
(assert (axiom_int_approximation x2378))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x2380))
(assert (axiom_int_approximation x2383))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x2390))
(assert (axiom_int_approximation x2393))
(assert (axiom_int_approximation x2395))
(assert (axiom_int_approximation x2397))
(assert (axiom_int_approximation x2398))
(assert (axiom_int_approximation x2399))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x2404))
(assert (axiom_int_approximation x2406))
(assert (axiom_int_approximation x2407))
(assert (axiom_int_approximation x2408))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x2410))
(assert (axiom_int_approximation x2412))
(assert (axiom_int_approximation x2414))
(assert (axiom_int_approximation x2415))
(assert (axiom_int_approximation x2419))
(assert (axiom_int_approximation x2421))
(assert (axiom_int_approximation x2425))
(assert (axiom_int_approximation x2426))
(assert (axiom_int_approximation x2428))
(assert (axiom_int_approximation x2429))
(assert (axiom_int_approximation x2432))
(assert (axiom_int_approximation x2433))
(assert (axiom_int_approximation x2435))
(assert (axiom_int_approximation x2436))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x2440))
(assert (axiom_int_approximation x2442))
(assert (axiom_int_approximation x2444))
(assert (axiom_int_approximation x2446))
(assert (axiom_int_approximation x2447))
(assert (axiom_int_approximation x2448))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x2451))
(assert (axiom_int_approximation x2454))
(assert (axiom_int_approximation x2455))
(assert (axiom_int_approximation x2456))
(assert (axiom_int_approximation x2458))
(assert (axiom_int_approximation x2459))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x2462))
(assert (axiom_int_approximation x2464))
(assert (axiom_int_approximation x2465))
(assert (axiom_int_approximation x2468))
(assert (axiom_int_approximation x2471))
(assert (axiom_int_approximation x2473))
(assert (axiom_int_approximation x2476))
(assert (axiom_int_approximation x2477))
(assert (axiom_int_approximation x2481))
(assert (axiom_int_approximation x2482))
(assert (axiom_int_approximation x2485))
(assert (axiom_int_approximation x2486))
(assert (axiom_int_approximation x2488))
(assert (axiom_int_approximation x2489))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x2490))
(assert (axiom_int_approximation x2492))
(assert (axiom_int_approximation x2494))
(assert (axiom_int_approximation x2495))
(assert (axiom_int_approximation x2496))
(assert (axiom_int_approximation x2499))
(assert (axiom_int_approximation x2500))
(assert (axiom_int_approximation x2501))
(assert (axiom_int_approximation x2507))
(assert (axiom_int_approximation x2509))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x2513))
(assert (axiom_int_approximation x2516))
(assert (axiom_int_approximation x2517))
(assert (axiom_int_approximation x2519))
(assert (axiom_int_approximation x2522))
(assert (axiom_int_approximation x2526))
(assert (axiom_int_approximation x2527))
(assert (axiom_int_approximation x2529))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x2533))
(assert (axiom_int_approximation x2534))
(assert (axiom_int_approximation x2536))
(assert (axiom_int_approximation x2537))
(assert (axiom_int_approximation x2541))
(assert (axiom_int_approximation x2543))
(assert (axiom_int_approximation x2545))
(assert (axiom_int_approximation x2546))
(assert (axiom_int_approximation x2548))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x2550))
(assert (axiom_int_approximation x2552))
(assert (axiom_int_approximation x2557))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x2560))
(assert (axiom_int_approximation x2562))
(assert (axiom_int_approximation x2563))
(assert (axiom_int_approximation x2570))
(assert (axiom_int_approximation x2573))
(assert (axiom_int_approximation x2574))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x2580))
(assert (axiom_int_approximation x2581))
(assert (axiom_int_approximation x2587))
(assert (axiom_int_approximation x2591))
(assert (axiom_int_approximation x2593))
(assert (axiom_int_approximation x2596))
(assert (axiom_int_approximation x2598))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x2601))
(assert (axiom_int_approximation x2603))
(assert (axiom_int_approximation x2604))
(assert (axiom_int_approximation x2610))
(assert (axiom_int_approximation x2612))
(assert (axiom_int_approximation x2614))
(assert (axiom_int_approximation x2616))
(assert (axiom_int_approximation x2618))
(assert (axiom_int_approximation x2621))
(assert (axiom_int_approximation x2623))
(assert (axiom_int_approximation x2626))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x2630))
(assert (axiom_int_approximation x2631))
(assert (axiom_int_approximation x2632))
(assert (axiom_int_approximation x2633))
(assert (axiom_int_approximation x2634))
(assert (axiom_int_approximation x2637))
(assert (axiom_int_approximation x2638))
(assert (axiom_int_approximation x264))
(assert (axiom_int_approximation x2640))
(assert (axiom_int_approximation x2641))
(assert (axiom_int_approximation x2642))
(assert (axiom_int_approximation x2643))
(assert (axiom_int_approximation x2644))
(assert (axiom_int_approximation x2647))
(assert (axiom_int_approximation x2649))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x2652))
(assert (axiom_int_approximation x2656))
(assert (axiom_int_approximation x2658))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x2662))
(assert (axiom_int_approximation x2663))
(assert (axiom_int_approximation x2665))
(assert (axiom_int_approximation x2669))
(assert (axiom_int_approximation x2672))
(assert (axiom_int_approximation x2674))
(assert (axiom_int_approximation x2676))
(assert (axiom_int_approximation x2677))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x2682))
(assert (axiom_int_approximation x2683))
(assert (axiom_int_approximation x2684))
(assert (axiom_int_approximation x2686))
(assert (axiom_int_approximation x2687))
(assert (axiom_int_approximation x2688))
(assert (axiom_int_approximation x2689))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x2693))
(assert (axiom_int_approximation x2695))
(assert (axiom_int_approximation x2696))
(assert (axiom_int_approximation x2697))
(assert (axiom_int_approximation x2704))
(assert (axiom_int_approximation x2705))
(assert (axiom_int_approximation x2706))
(assert (axiom_int_approximation x2709))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x2710))
(assert (axiom_int_approximation x2711))
(assert (axiom_int_approximation x2713))
(assert (axiom_int_approximation x2714))
(assert (axiom_int_approximation x2715))
(assert (axiom_int_approximation x2718))
(assert (axiom_int_approximation x2719))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x2720))
(assert (axiom_int_approximation x2721))
(assert (axiom_int_approximation x2724))
(assert (axiom_int_approximation x2727))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x2730))
(assert (axiom_int_approximation x2731))
(assert (axiom_int_approximation x2734))
(assert (axiom_int_approximation x2736))
(assert (axiom_int_approximation x2737))
(assert (axiom_int_approximation x2738))
(assert (axiom_int_approximation x2740))
(assert (axiom_int_approximation x2741))
(assert (axiom_int_approximation x2745))
(assert (axiom_int_approximation x2746))
(assert (axiom_int_approximation x2750))
(assert (axiom_int_approximation x2752))
(assert (axiom_int_approximation x2754))
(assert (axiom_int_approximation x2759))
(assert (axiom_int_approximation x2762))
(assert (axiom_int_approximation x2763))
(assert (axiom_int_approximation x2765))
(assert (axiom_int_approximation x2766))
(assert (axiom_int_approximation x2767))
(assert (axiom_int_approximation x2769))
(assert (axiom_int_approximation x2770))
(assert (axiom_int_approximation x2773))
(assert (axiom_int_approximation x2777))
(assert (axiom_int_approximation x2778))
(assert (axiom_int_approximation x2779))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x2780))
(assert (axiom_int_approximation x2781))
(assert (axiom_int_approximation x2783))
(assert (axiom_int_approximation x2785))
(assert (axiom_int_approximation x2786))
(assert (axiom_int_approximation x2789))
(assert (axiom_int_approximation x279))
(assert (axiom_int_approximation x2791))
(assert (axiom_int_approximation x2795))
(assert (axiom_int_approximation x2799))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x2802))
(assert (axiom_int_approximation x2803))
(assert (axiom_int_approximation x2804))
(assert (axiom_int_approximation x2805))
(assert (axiom_int_approximation x2806))
(assert (axiom_int_approximation x2807))
(assert (axiom_int_approximation x2808))
(assert (axiom_int_approximation x2809))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x2810))
(assert (axiom_int_approximation x2811))
(assert (axiom_int_approximation x2812))
(assert (axiom_int_approximation x2814))
(assert (axiom_int_approximation x2815))
(assert (axiom_int_approximation x2817))
(assert (axiom_int_approximation x2818))
(assert (axiom_int_approximation x2819))
(assert (axiom_int_approximation x282))
(assert (axiom_int_approximation x2820))
(assert (axiom_int_approximation x2821))
(assert (axiom_int_approximation x2824))
(assert (axiom_int_approximation x2826))
(assert (axiom_int_approximation x2827))
(assert (axiom_int_approximation x2829))
(assert (axiom_int_approximation x2831))
(assert (axiom_int_approximation x2834))
(assert (axiom_int_approximation x2836))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x2841))
(assert (axiom_int_approximation x2843))
(assert (axiom_int_approximation x2845))
(assert (axiom_int_approximation x2846))
(assert (axiom_int_approximation x2849))
(assert (axiom_int_approximation x2853))
(assert (axiom_int_approximation x2854))
(assert (axiom_int_approximation x2858))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x2860))
(assert (axiom_int_approximation x2861))
(assert (axiom_int_approximation x2863))
(assert (axiom_int_approximation x2865))
(assert (axiom_int_approximation x2867))
(assert (axiom_int_approximation x2870))
(assert (axiom_int_approximation x2872))
(assert (axiom_int_approximation x2873))
(assert (axiom_int_approximation x2877))
(assert (axiom_int_approximation x2878))
(assert (axiom_int_approximation x2879))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x2883))
(assert (axiom_int_approximation x2886))
(assert (axiom_int_approximation x2887))
(assert (axiom_int_approximation x2889))
(assert (axiom_int_approximation x2890))
(assert (axiom_int_approximation x2892))
(assert (axiom_int_approximation x2893))
(assert (axiom_int_approximation x2894))
(assert (axiom_int_approximation x2897))
(assert (axiom_int_approximation x2898))
(assert (axiom_int_approximation x2899))
(assert (axiom_int_approximation x2900))
(assert (axiom_int_approximation x2902))
(assert (axiom_int_approximation x2907))
(assert (axiom_int_approximation x2912))
(assert (axiom_int_approximation x2913))
(assert (axiom_int_approximation x2914))
(assert (axiom_int_approximation x2915))
(assert (axiom_int_approximation x2918))
(assert (axiom_int_approximation x2920))
(assert (axiom_int_approximation x2921))
(assert (axiom_int_approximation x2922))
(assert (axiom_int_approximation x2930))
(assert (axiom_int_approximation x2931))
(assert (axiom_int_approximation x2937))
(assert (axiom_int_approximation x2938))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x2940))
(assert (axiom_int_approximation x2943))
(assert (axiom_int_approximation x2946))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x2950))
(assert (axiom_int_approximation x2953))
(assert (axiom_int_approximation x2955))
(assert (axiom_int_approximation x2964))
(assert (axiom_int_approximation x2965))
(assert (axiom_int_approximation x2968))
(assert (axiom_int_approximation x2969))
(assert (axiom_int_approximation x2970))
(assert (axiom_int_approximation x2972))
(assert (axiom_int_approximation x2974))
(assert (axiom_int_approximation x2975))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x2981))
(assert (axiom_int_approximation x2982))
(assert (axiom_int_approximation x2983))
(assert (axiom_int_approximation x2986))
(assert (axiom_int_approximation x2988))
(assert (axiom_int_approximation x2989))
(assert (axiom_int_approximation x2990))
(assert (axiom_int_approximation x2992))
(assert (axiom_int_approximation x2993))
(assert (axiom_int_approximation x2995))
(assert (axiom_int_approximation x2996))
(assert (axiom_int_approximation x2998))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x3001))
(assert (axiom_int_approximation x3003))
(assert (axiom_int_approximation x3004))
(assert (axiom_int_approximation x3008))
(assert (axiom_int_approximation x3009))
(assert (axiom_int_approximation x3010))
(assert (axiom_int_approximation x3011))
(assert (axiom_int_approximation x3013))
(assert (axiom_int_approximation x3015))
(assert (axiom_int_approximation x3018))
(assert (axiom_int_approximation x3019))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x3020))
(assert (axiom_int_approximation x3021))
(assert (axiom_int_approximation x3024))
(assert (axiom_int_approximation x3027))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x3030))
(assert (axiom_int_approximation x3031))
(assert (axiom_int_approximation x3033))
(assert (axiom_int_approximation x3037))
(assert (axiom_int_approximation x3039))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x3042))
(assert (axiom_int_approximation x3044))
(assert (axiom_int_approximation x3045))
(assert (axiom_int_approximation x3046))
(assert (axiom_int_approximation x3048))
(assert (axiom_int_approximation x3049))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x3051))
(assert (axiom_int_approximation x3052))
(assert (axiom_int_approximation x3056))
(assert (axiom_int_approximation x3057))
(assert (axiom_int_approximation x3058))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x3060))
(assert (axiom_int_approximation x3062))
(assert (axiom_int_approximation x3065))
(assert (axiom_int_approximation x3066))
(assert (axiom_int_approximation x3067))
(assert (axiom_int_approximation x3068))
(assert (axiom_int_approximation x3069))
(assert (axiom_int_approximation x3071))
(assert (axiom_int_approximation x3072))
(assert (axiom_int_approximation x3074))
(assert (axiom_int_approximation x3077))
(assert (axiom_int_approximation x3080))
(assert (axiom_int_approximation x3081))
(assert (axiom_int_approximation x3082))
(assert (axiom_int_approximation x3084))
(assert (axiom_int_approximation x3086))
(assert (axiom_int_approximation x3088))
(assert (axiom_int_approximation x3089))
(assert (axiom_int_approximation x3092))
(assert (axiom_int_approximation x3095))
(assert (axiom_int_approximation x3098))
(assert (axiom_int_approximation x3099))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x3100))
(assert (axiom_int_approximation x3101))
(assert (axiom_int_approximation x3104))
(assert (axiom_int_approximation x3105))
(assert (axiom_int_approximation x3106))
(assert (axiom_int_approximation x3111))
(assert (axiom_int_approximation x3112))
(assert (axiom_int_approximation x3114))
(assert (axiom_int_approximation x3119))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x3124))
(assert (axiom_int_approximation x3127))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x3130))
(assert (axiom_int_approximation x3131))
(assert (axiom_int_approximation x3134))
(assert (axiom_int_approximation x3139))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x3140))
(assert (axiom_int_approximation x3145))
(assert (axiom_int_approximation x3146))
(assert (axiom_int_approximation x3148))
(assert (axiom_int_approximation x3149))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x3150))
(assert (axiom_int_approximation x3151))
(assert (axiom_int_approximation x3152))
(assert (axiom_int_approximation x3153))
(assert (axiom_int_approximation x3154))
(assert (axiom_int_approximation x3155))
(assert (axiom_int_approximation x3156))
(assert (axiom_int_approximation x3158))
(assert (axiom_int_approximation x3159))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x3162))
(assert (axiom_int_approximation x3168))
(assert (axiom_int_approximation x3169))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x3170))
(assert (axiom_int_approximation x3171))
(assert (axiom_int_approximation x3174))
(assert (axiom_int_approximation x3177))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x3180))
(assert (axiom_int_approximation x3185))
(assert (axiom_int_approximation x3186))
(assert (axiom_int_approximation x3187))
(assert (axiom_int_approximation x3188))
(assert (axiom_int_approximation x3189))
(assert (axiom_int_approximation x3190))
(assert (axiom_int_approximation x3194))
(assert (axiom_int_approximation x3196))
(assert (axiom_int_approximation x3198))
(assert (axiom_int_approximation x3199))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x3202))
(assert (axiom_int_approximation x3203))
(assert (axiom_int_approximation x3206))
(assert (axiom_int_approximation x3212))
(assert (axiom_int_approximation x3214))
(assert (axiom_int_approximation x3224))
(assert (axiom_int_approximation x3225))
(assert (axiom_int_approximation x3226))
(assert (axiom_int_approximation x3234))
(assert (axiom_int_approximation x3238))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x3240))
(assert (axiom_int_approximation x3241))
(assert (axiom_int_approximation x3243))
(assert (axiom_int_approximation x3246))
(assert (axiom_int_approximation x3247))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x3252))
(assert (axiom_int_approximation x3255))
(assert (axiom_int_approximation x3256))
(assert (axiom_int_approximation x3260))
(assert (axiom_int_approximation x3261))
(assert (axiom_int_approximation x3262))
(assert (axiom_int_approximation x3263))
(assert (axiom_int_approximation x3264))
(assert (axiom_int_approximation x3265))
(assert (axiom_int_approximation x3269))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x3270))
(assert (axiom_int_approximation x3271))
(assert (axiom_int_approximation x3272))
(assert (axiom_int_approximation x3273))
(assert (axiom_int_approximation x3277))
(assert (axiom_int_approximation x3279))
(assert (axiom_int_approximation x3280))
(assert (axiom_int_approximation x3281))
(assert (axiom_int_approximation x3282))
(assert (axiom_int_approximation x3283))
(assert (axiom_int_approximation x3286))
(assert (axiom_int_approximation x3287))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x3291))
(assert (axiom_int_approximation x3293))
(assert (axiom_int_approximation x3294))
(assert (axiom_int_approximation x3295))
(assert (axiom_int_approximation x3296))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x3300))
(assert (axiom_int_approximation x3302))
(assert (axiom_int_approximation x3303))
(assert (axiom_int_approximation x3310))
(assert (axiom_int_approximation x3311))
(assert (axiom_int_approximation x3313))
(assert (axiom_int_approximation x3317))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x3320))
(assert (axiom_int_approximation x3322))
(assert (axiom_int_approximation x3323))
(assert (axiom_int_approximation x3326))
(assert (axiom_int_approximation x3329))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x3330))
(assert (axiom_int_approximation x3331))
(assert (axiom_int_approximation x3332))
(assert (axiom_int_approximation x3334))
(assert (axiom_int_approximation x3337))
(assert (axiom_int_approximation x3338))
(assert (axiom_int_approximation x3339))
(assert (axiom_int_approximation x3340))
(assert (axiom_int_approximation x3341))
(assert (axiom_int_approximation x3342))
(assert (axiom_int_approximation x3347))
(assert (axiom_int_approximation x3351))
(assert (axiom_int_approximation x3361))
(assert (axiom_int_approximation x3363))
(assert (axiom_int_approximation x3364))
(assert (axiom_int_approximation x3365))
(assert (axiom_int_approximation x3369))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x3370))
(assert (axiom_int_approximation x3371))
(assert (axiom_int_approximation x3374))
(assert (axiom_int_approximation x3376))
(assert (axiom_int_approximation x3382))
(assert (axiom_int_approximation x3383))
(assert (axiom_int_approximation x3384))
(assert (axiom_int_approximation x3385))
(assert (axiom_int_approximation x3387))
(assert (axiom_int_approximation x3390))
(assert (axiom_int_approximation x3392))
(assert (axiom_int_approximation x3393))
(assert (axiom_int_approximation x3395))
(assert (axiom_int_approximation x3396))
(assert (axiom_int_approximation x3398))
(assert (axiom_int_approximation x3399))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x3400))
(assert (axiom_int_approximation x3404))
(assert (axiom_int_approximation x3406))
(assert (axiom_int_approximation x3408))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x3412))
(assert (axiom_int_approximation x3414))
(assert (axiom_int_approximation x3415))
(assert (axiom_int_approximation x3417))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x3424))
(assert (axiom_int_approximation x3425))
(assert (axiom_int_approximation x3426))
(assert (axiom_int_approximation x3428))
(assert (axiom_int_approximation x3429))
(assert (axiom_int_approximation x3430))
(assert (axiom_int_approximation x3432))
(assert (axiom_int_approximation x3433))
(assert (axiom_int_approximation x3434))
(assert (axiom_int_approximation x3436))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x3441))
(assert (axiom_int_approximation x3444))
(assert (axiom_int_approximation x3445))
(assert (axiom_int_approximation x3447))
(assert (axiom_int_approximation x3448))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x3452))
(assert (axiom_int_approximation x3455))
(assert (axiom_int_approximation x3457))
(assert (axiom_int_approximation x3458))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x3461))
(assert (axiom_int_approximation x3462))
(assert (axiom_int_approximation x3466))
(assert (axiom_int_approximation x3468))
(assert (axiom_int_approximation x3469))
(assert (axiom_int_approximation x347))
(assert (axiom_int_approximation x3470))
(assert (axiom_int_approximation x3472))
(assert (axiom_int_approximation x3477))
(assert (axiom_int_approximation x3478))
(assert (axiom_int_approximation x3479))
(assert (axiom_int_approximation x3483))
(assert (axiom_int_approximation x3485))
(assert (axiom_int_approximation x3486))
(assert (axiom_int_approximation x3488))
(assert (axiom_int_approximation x3489))
(assert (axiom_int_approximation x3491))
(assert (axiom_int_approximation x3494))
(assert (axiom_int_approximation x3496))
(assert (axiom_int_approximation x3499))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x3502))
(assert (axiom_int_approximation x3504))
(assert (axiom_int_approximation x3505))
(assert (axiom_int_approximation x3506))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x3510))
(assert (axiom_int_approximation x3513))
(assert (axiom_int_approximation x3514))
(assert (axiom_int_approximation x3515))
(assert (axiom_int_approximation x3516))
(assert (axiom_int_approximation x3517))
(assert (axiom_int_approximation x3519))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x3522))
(assert (axiom_int_approximation x3524))
(assert (axiom_int_approximation x3526))
(assert (axiom_int_approximation x3529))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x3533))
(assert (axiom_int_approximation x3534))
(assert (axiom_int_approximation x3536))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x3540))
(assert (axiom_int_approximation x3541))
(assert (axiom_int_approximation x3543))
(assert (axiom_int_approximation x3544))
(assert (axiom_int_approximation x3546))
(assert (axiom_int_approximation x3550))
(assert (axiom_int_approximation x3551))
(assert (axiom_int_approximation x3553))
(assert (axiom_int_approximation x3557))
(assert (axiom_int_approximation x3558))
(assert (axiom_int_approximation x3561))
(assert (axiom_int_approximation x3565))
(assert (axiom_int_approximation x3567))
(assert (axiom_int_approximation x3568))
(assert (axiom_int_approximation x3571))
(assert (axiom_int_approximation x3572))
(assert (axiom_int_approximation x3573))
(assert (axiom_int_approximation x3575))
(assert (axiom_int_approximation x3577))
(assert (axiom_int_approximation x3581))
(assert (axiom_int_approximation x3583))
(assert (axiom_int_approximation x3584))
(assert (axiom_int_approximation x3586))
(assert (axiom_int_approximation x3587))
(assert (axiom_int_approximation x3590))
(assert (axiom_int_approximation x3592))
(assert (axiom_int_approximation x3597))
(assert (axiom_int_approximation x3598))
(assert (axiom_int_approximation x3599))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x3601))
(assert (axiom_int_approximation x3602))
(assert (axiom_int_approximation x3605))
(assert (axiom_int_approximation x3606))
(assert (axiom_int_approximation x3610))
(assert (axiom_int_approximation x3611))
(assert (axiom_int_approximation x3612))
(assert (axiom_int_approximation x3613))
(assert (axiom_int_approximation x3617))
(assert (axiom_int_approximation x3619))
(assert (axiom_int_approximation x3620))
(assert (axiom_int_approximation x3621))
(assert (axiom_int_approximation x3622))
(assert (axiom_int_approximation x3624))
(assert (axiom_int_approximation x3627))
(assert (axiom_int_approximation x3628))
(assert (axiom_int_approximation x3630))
(assert (axiom_int_approximation x3631))
(assert (axiom_int_approximation x3638))
(assert (axiom_int_approximation x3639))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x3640))
(assert (axiom_int_approximation x3642))
(assert (axiom_int_approximation x3644))
(assert (axiom_int_approximation x3647))
(assert (axiom_int_approximation x3648))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x3651))
(assert (axiom_int_approximation x3653))
(assert (axiom_int_approximation x3658))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x3660))
(assert (axiom_int_approximation x3663))
(assert (axiom_int_approximation x3666))
(assert (axiom_int_approximation x3667))
(assert (axiom_int_approximation x3670))
(assert (axiom_int_approximation x3671))
(assert (axiom_int_approximation x3674))
(assert (axiom_int_approximation x3675))
(assert (axiom_int_approximation x3677))
(assert (axiom_int_approximation x3678))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x3680))
(assert (axiom_int_approximation x3681))
(assert (axiom_int_approximation x3682))
(assert (axiom_int_approximation x3683))
(assert (axiom_int_approximation x3685))
(assert (axiom_int_approximation x3686))
(assert (axiom_int_approximation x3687))
(assert (axiom_int_approximation x3688))
(assert (axiom_int_approximation x3690))
(assert (axiom_int_approximation x3691))
(assert (axiom_int_approximation x3693))
(assert (axiom_int_approximation x3696))
(assert (axiom_int_approximation x3698))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x3704))
(assert (axiom_int_approximation x3705))
(assert (axiom_int_approximation x3707))
(assert (axiom_int_approximation x3708))
(assert (axiom_int_approximation x3709))
(assert (axiom_int_approximation x3711))
(assert (axiom_int_approximation x3714))
(assert (axiom_int_approximation x3715))
(assert (axiom_int_approximation x3718))
(assert (axiom_int_approximation x3719))
(assert (axiom_int_approximation x3720))
(assert (axiom_int_approximation x3721))
(assert (axiom_int_approximation x3723))
(assert (axiom_int_approximation x3725))
(assert (axiom_int_approximation x3726))
(assert (axiom_int_approximation x3727))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x3730))
(assert (axiom_int_approximation x3731))
(assert (axiom_int_approximation x3732))
(assert (axiom_int_approximation x3733))
(assert (axiom_int_approximation x3734))
(assert (axiom_int_approximation x3735))
(assert (axiom_int_approximation x3736))
(assert (axiom_int_approximation x3737))
(assert (axiom_int_approximation x3742))
(assert (axiom_int_approximation x3745))
(assert (axiom_int_approximation x3746))
(assert (axiom_int_approximation x3748))
(assert (axiom_int_approximation x3749))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x3750))
(assert (axiom_int_approximation x3754))
(assert (axiom_int_approximation x3756))
(assert (axiom_int_approximation x3758))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x3761))
(assert (axiom_int_approximation x3762))
(assert (axiom_int_approximation x3763))
(assert (axiom_int_approximation x3765))
(assert (axiom_int_approximation x3769))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x3771))
(assert (axiom_int_approximation x3772))
(assert (axiom_int_approximation x3775))
(assert (axiom_int_approximation x3778))
(assert (axiom_int_approximation x3779))
(assert (axiom_int_approximation x3780))
(assert (axiom_int_approximation x3781))
(assert (axiom_int_approximation x3784))
(assert (axiom_int_approximation x3785))
(assert (axiom_int_approximation x3788))
(assert (axiom_int_approximation x3790))
(assert (axiom_int_approximation x3793))
(assert (axiom_int_approximation x3794))
(assert (axiom_int_approximation x3797))
(assert (axiom_int_approximation x3799))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x3805))
(assert (axiom_int_approximation x3806))
(assert (axiom_int_approximation x3807))
(assert (axiom_int_approximation x3808))
(assert (axiom_int_approximation x3814))
(assert (axiom_int_approximation x3821))
(assert (axiom_int_approximation x3822))
(assert (axiom_int_approximation x3823))
(assert (axiom_int_approximation x3825))
(assert (axiom_int_approximation x3826))
(assert (axiom_int_approximation x3828))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x3831))
(assert (axiom_int_approximation x3833))
(assert (axiom_int_approximation x3834))
(assert (axiom_int_approximation x3839))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x3842))
(assert (axiom_int_approximation x3843))
(assert (axiom_int_approximation x3848))
(assert (axiom_int_approximation x3849))
(assert (axiom_int_approximation x3850))
(assert (axiom_int_approximation x3851))
(assert (axiom_int_approximation x3856))
(assert (axiom_int_approximation x3857))
(assert (axiom_int_approximation x3858))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x3860))
(assert (axiom_int_approximation x3861))
(assert (axiom_int_approximation x3863))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x3870))
(assert (axiom_int_approximation x3872))
(assert (axiom_int_approximation x3873))
(assert (axiom_int_approximation x3874))
(assert (axiom_int_approximation x3875))
(assert (axiom_int_approximation x3876))
(assert (axiom_int_approximation x3877))
(assert (axiom_int_approximation x3880))
(assert (axiom_int_approximation x3882))
(assert (axiom_int_approximation x3884))
(assert (axiom_int_approximation x3886))
(assert (axiom_int_approximation x3889))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x3890))
(assert (axiom_int_approximation x3892))
(assert (axiom_int_approximation x3893))
(assert (axiom_int_approximation x3899))
(assert (axiom_int_approximation x3901))
(assert (axiom_int_approximation x3902))
(assert (axiom_int_approximation x3904))
(assert (axiom_int_approximation x3908))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x3912))
(assert (axiom_int_approximation x3913))
(assert (axiom_int_approximation x3914))
(assert (axiom_int_approximation x3915))
(assert (axiom_int_approximation x3920))
(assert (axiom_int_approximation x3926))
(assert (axiom_int_approximation x3927))
(assert (axiom_int_approximation x3929))
(assert (axiom_int_approximation x3932))
(assert (axiom_int_approximation x3935))
(assert (axiom_int_approximation x3937))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x3940))
(assert (axiom_int_approximation x3941))
(assert (axiom_int_approximation x3943))
(assert (axiom_int_approximation x3949))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x3950))
(assert (axiom_int_approximation x3952))
(assert (axiom_int_approximation x3953))
(assert (axiom_int_approximation x3954))
(assert (axiom_int_approximation x3956))
(assert (axiom_int_approximation x3958))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x3961))
(assert (axiom_int_approximation x3963))
(assert (axiom_int_approximation x3968))
(assert (axiom_int_approximation x3970))
(assert (axiom_int_approximation x3973))
(assert (axiom_int_approximation x3975))
(assert (axiom_int_approximation x3976))
(assert (axiom_int_approximation x3977))
(assert (axiom_int_approximation x3979))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x3983))
(assert (axiom_int_approximation x3985))
(assert (axiom_int_approximation x3986))
(assert (axiom_int_approximation x3987))
(assert (axiom_int_approximation x3988))
(assert (axiom_int_approximation x3990))
(assert (axiom_int_approximation x3992))
(assert (axiom_int_approximation x3993))
(assert (axiom_int_approximation x3994))
(assert (axiom_int_approximation x3995))
(assert (axiom_int_approximation x3996))
(assert (axiom_int_approximation x3997))
(assert (axiom_int_approximation x3999))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x4000))
(assert (axiom_int_approximation x4003))
(assert (axiom_int_approximation x4004))
(assert (axiom_int_approximation x4006))
(assert (axiom_int_approximation x4008))
(assert (axiom_int_approximation x4010))
(assert (axiom_int_approximation x4012))
(assert (axiom_int_approximation x4015))
(assert (axiom_int_approximation x4016))
(assert (axiom_int_approximation x4017))
(assert (axiom_int_approximation x4019))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x4020))
(assert (axiom_int_approximation x4021))
(assert (axiom_int_approximation x4023))
(assert (axiom_int_approximation x4024))
(assert (axiom_int_approximation x4026))
(assert (axiom_int_approximation x4027))
(assert (axiom_int_approximation x4028))
(assert (axiom_int_approximation x4029))
(assert (axiom_int_approximation x4030))
(assert (axiom_int_approximation x4039))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x4040))
(assert (axiom_int_approximation x4044))
(assert (axiom_int_approximation x4045))
(assert (axiom_int_approximation x4046))
(assert (axiom_int_approximation x4048))
(assert (axiom_int_approximation x4049))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x4050))
(assert (axiom_int_approximation x4057))
(assert (axiom_int_approximation x4059))
(assert (axiom_int_approximation x4061))
(assert (axiom_int_approximation x4065))
(assert (axiom_int_approximation x4068))
(assert (axiom_int_approximation x4069))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x4070))
(assert (axiom_int_approximation x4072))
(assert (axiom_int_approximation x4076))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x4080))
(assert (axiom_int_approximation x4083))
(assert (axiom_int_approximation x4084))
(assert (axiom_int_approximation x4085))
(assert (axiom_int_approximation x4086))
(assert (axiom_int_approximation x4090))
(assert (axiom_int_approximation x4092))
(assert (axiom_int_approximation x4093))
(assert (axiom_int_approximation x4094))
(assert (axiom_int_approximation x4098))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x4100))
(assert (axiom_int_approximation x4101))
(assert (axiom_int_approximation x4102))
(assert (axiom_int_approximation x4103))
(assert (axiom_int_approximation x4106))
(assert (axiom_int_approximation x4107))
(assert (axiom_int_approximation x4108))
(assert (axiom_int_approximation x4110))
(assert (axiom_int_approximation x4111))
(assert (axiom_int_approximation x4113))
(assert (axiom_int_approximation x4114))
(assert (axiom_int_approximation x4115))
(assert (axiom_int_approximation x4117))
(assert (axiom_int_approximation x4118))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x4120))
(assert (axiom_int_approximation x4122))
(assert (axiom_int_approximation x4123))
(assert (axiom_int_approximation x4124))
(assert (axiom_int_approximation x4127))
(assert (axiom_int_approximation x4128))
(assert (axiom_int_approximation x4130))
(assert (axiom_int_approximation x4131))
(assert (axiom_int_approximation x4132))
(assert (axiom_int_approximation x4133))
(assert (axiom_int_approximation x4136))
(assert (axiom_int_approximation x4139))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x4140))
(assert (axiom_int_approximation x4144))
(assert (axiom_int_approximation x4145))
(assert (axiom_int_approximation x4147))
(assert (axiom_int_approximation x4148))
(assert (axiom_int_approximation x4149))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x4150))
(assert (axiom_int_approximation x4151))
(assert (axiom_int_approximation x4152))
(assert (axiom_int_approximation x4154))
(assert (axiom_int_approximation x4157))
(assert (axiom_int_approximation x4158))
(assert (axiom_int_approximation x4159))
(assert (axiom_int_approximation x4160))
(assert (axiom_int_approximation x4163))
(assert (axiom_int_approximation x4164))
(assert (axiom_int_approximation x4165))
(assert (axiom_int_approximation x4166))
(assert (axiom_int_approximation x4167))
(assert (axiom_int_approximation x4169))
(assert (axiom_int_approximation x4170))
(assert (axiom_int_approximation x4172))
(assert (axiom_int_approximation x4174))
(assert (axiom_int_approximation x4175))
(assert (axiom_int_approximation x4177))
(assert (axiom_int_approximation x4179))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x4180))
(assert (axiom_int_approximation x4181))
(assert (axiom_int_approximation x4187))
(assert (axiom_int_approximation x4188))
(assert (axiom_int_approximation x4190))
(assert (axiom_int_approximation x4195))
(assert (axiom_int_approximation x4196))
(assert (axiom_int_approximation x4197))
(assert (axiom_int_approximation x4198))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x4200))
(assert (axiom_int_approximation x4203))
(assert (axiom_int_approximation x4205))
(assert (axiom_int_approximation x4206))
(assert (axiom_int_approximation x4207))
(assert (axiom_int_approximation x4209))
(assert (axiom_int_approximation x4213))
(assert (axiom_int_approximation x4214))
(assert (axiom_int_approximation x4216))
(assert (axiom_int_approximation x4217))
(assert (axiom_int_approximation x4219))
(assert (axiom_int_approximation x4222))
(assert (axiom_int_approximation x4223))
(assert (axiom_int_approximation x4224))
(assert (axiom_int_approximation x4225))
(assert (axiom_int_approximation x4226))
(assert (axiom_int_approximation x4227))
(assert (axiom_int_approximation x4229))
(assert (axiom_int_approximation x4230))
(assert (axiom_int_approximation x4231))
(assert (axiom_int_approximation x4232))
(assert (axiom_int_approximation x4238))
(assert (axiom_int_approximation x4239))
(assert (axiom_int_approximation x4240))
(assert (axiom_int_approximation x4244))
(assert (axiom_int_approximation x4245))
(assert (axiom_int_approximation x4249))
(assert (axiom_int_approximation x4252))
(assert (axiom_int_approximation x4253))
(assert (axiom_int_approximation x4256))
(assert (axiom_int_approximation x4258))
(assert (axiom_int_approximation x4259))
(assert (axiom_int_approximation x4260))
(assert (axiom_int_approximation x4261))
(assert (axiom_int_approximation x4262))
(assert (axiom_int_approximation x4263))
(assert (axiom_int_approximation x4266))
(assert (axiom_int_approximation x427))
(assert (axiom_int_approximation x4271))
(assert (axiom_int_approximation x4275))
(assert (axiom_int_approximation x4277))
(assert (axiom_int_approximation x4279))
(assert (axiom_int_approximation x4283))
(assert (axiom_int_approximation x4285))
(assert (axiom_int_approximation x4286))
(assert (axiom_int_approximation x4287))
(assert (axiom_int_approximation x4288))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x4296))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x4300))
(assert (axiom_int_approximation x4302))
(assert (axiom_int_approximation x4303))
(assert (axiom_int_approximation x4305))
(assert (axiom_int_approximation x4307))
(assert (axiom_int_approximation x4309))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x4310))
(assert (axiom_int_approximation x4311))
(assert (axiom_int_approximation x4315))
(assert (axiom_int_approximation x4316))
(assert (axiom_int_approximation x4317))
(assert (axiom_int_approximation x4318))
(assert (axiom_int_approximation x4319))
(assert (axiom_int_approximation x4320))
(assert (axiom_int_approximation x4322))
(assert (axiom_int_approximation x4324))
(assert (axiom_int_approximation x4327))
(assert (axiom_int_approximation x4328))
(assert (axiom_int_approximation x4330))
(assert (axiom_int_approximation x4332))
(assert (axiom_int_approximation x4333))
(assert (axiom_int_approximation x4336))
(assert (axiom_int_approximation x4337))
(assert (axiom_int_approximation x4340))
(assert (axiom_int_approximation x4341))
(assert (axiom_int_approximation x4344))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x4351))
(assert (axiom_int_approximation x4352))
(assert (axiom_int_approximation x4355))
(assert (axiom_int_approximation x4358))
(assert (axiom_int_approximation x4359))
(assert (axiom_int_approximation x4361))
(assert (axiom_int_approximation x4362))
(assert (axiom_int_approximation x4363))
(assert (axiom_int_approximation x4365))
(assert (axiom_int_approximation x4366))
(assert (axiom_int_approximation x4368))
(assert (axiom_int_approximation x4369))
(assert (axiom_int_approximation x4370))
(assert (axiom_int_approximation x4372))
(assert (axiom_int_approximation x4375))
(assert (axiom_int_approximation x4378))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x4380))
(assert (axiom_int_approximation x4381))
(assert (axiom_int_approximation x4382))
(assert (axiom_int_approximation x4383))
(assert (axiom_int_approximation x4386))
(assert (axiom_int_approximation x4387))
(assert (axiom_int_approximation x4389))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x4390))
(assert (axiom_int_approximation x4391))
(assert (axiom_int_approximation x4393))
(assert (axiom_int_approximation x4395))
(assert (axiom_int_approximation x4397))
(assert (axiom_int_approximation x4398))
(assert (axiom_int_approximation x4399))
(assert (axiom_int_approximation x4402))
(assert (axiom_int_approximation x4403))
(assert (axiom_int_approximation x4406))
(assert (axiom_int_approximation x4407))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x4410))
(assert (axiom_int_approximation x4412))
(assert (axiom_int_approximation x4413))
(assert (axiom_int_approximation x4416))
(assert (axiom_int_approximation x4418))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x4422))
(assert (axiom_int_approximation x4424))
(assert (axiom_int_approximation x4425))
(assert (axiom_int_approximation x4426))
(assert (axiom_int_approximation x4429))
(assert (axiom_int_approximation x4437))
(assert (axiom_int_approximation x4438))
(assert (axiom_int_approximation x4439))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x4441))
(assert (axiom_int_approximation x4443))
(assert (axiom_int_approximation x4444))
(assert (axiom_int_approximation x4446))
(assert (axiom_int_approximation x4448))
(assert (axiom_int_approximation x4450))
(assert (axiom_int_approximation x4455))
(assert (axiom_int_approximation x4457))
(assert (axiom_int_approximation x4458))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x4461))
(assert (axiom_int_approximation x4465))
(assert (axiom_int_approximation x4471))
(assert (axiom_int_approximation x4475))
(assert (axiom_int_approximation x4476))
(assert (axiom_int_approximation x4477))
(assert (axiom_int_approximation x4478))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x4482))
(assert (axiom_int_approximation x4483))
(assert (axiom_int_approximation x4484))
(assert (axiom_int_approximation x4486))
(assert (axiom_int_approximation x4487))
(assert (axiom_int_approximation x4488))
(assert (axiom_int_approximation x4489))
(assert (axiom_int_approximation x4494))
(assert (axiom_int_approximation x4497))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x4500))
(assert (axiom_int_approximation x4506))
(assert (axiom_int_approximation x4507))
(assert (axiom_int_approximation x4508))
(assert (axiom_int_approximation x4509))
(assert (axiom_int_approximation x4510))
(assert (axiom_int_approximation x4511))
(assert (axiom_int_approximation x4512))
(assert (axiom_int_approximation x4514))
(assert (axiom_int_approximation x4515))
(assert (axiom_int_approximation x4516))
(assert (axiom_int_approximation x4517))
(assert (axiom_int_approximation x4519))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x4520))
(assert (axiom_int_approximation x4523))
(assert (axiom_int_approximation x4524))
(assert (axiom_int_approximation x4525))
(assert (axiom_int_approximation x4526))
(assert (axiom_int_approximation x4527))
(assert (axiom_int_approximation x4529))
(assert (axiom_int_approximation x4530))
(assert (axiom_int_approximation x4532))
(assert (axiom_int_approximation x4533))
(assert (axiom_int_approximation x4534))
(assert (axiom_int_approximation x4537))
(assert (axiom_int_approximation x4539))
(assert (axiom_int_approximation x4540))
(assert (axiom_int_approximation x4541))
(assert (axiom_int_approximation x4543))
(assert (axiom_int_approximation x4546))
(assert (axiom_int_approximation x4548))
(assert (axiom_int_approximation x4549))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x4550))
(assert (axiom_int_approximation x4554))
(assert (axiom_int_approximation x4558))
(assert (axiom_int_approximation x4562))
(assert (axiom_int_approximation x4566))
(assert (axiom_int_approximation x4569))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x4571))
(assert (axiom_int_approximation x4572))
(assert (axiom_int_approximation x4576))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x4585))
(assert (axiom_int_approximation x4587))
(assert (axiom_int_approximation x4588))
(assert (axiom_int_approximation x4592))
(assert (axiom_int_approximation x4594))
(assert (axiom_int_approximation x4595))
(assert (axiom_int_approximation x4596))
(assert (axiom_int_approximation x4598))
(assert (axiom_int_approximation x4604))
(assert (axiom_int_approximation x4607))
(assert (axiom_int_approximation x4609))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x4610))
(assert (axiom_int_approximation x4611))
(assert (axiom_int_approximation x4613))
(assert (axiom_int_approximation x4615))
(assert (axiom_int_approximation x4619))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x4622))
(assert (axiom_int_approximation x4626))
(assert (axiom_int_approximation x4628))
(assert (axiom_int_approximation x4629))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x4632))
(assert (axiom_int_approximation x4634))
(assert (axiom_int_approximation x4639))
(assert (axiom_int_approximation x4640))
(assert (axiom_int_approximation x4642))
(assert (axiom_int_approximation x4645))
(assert (axiom_int_approximation x4654))
(assert (axiom_int_approximation x4655))
(assert (axiom_int_approximation x4656))
(assert (axiom_int_approximation x4657))
(assert (axiom_int_approximation x4659))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x4660))
(assert (axiom_int_approximation x4663))
(assert (axiom_int_approximation x4664))
(assert (axiom_int_approximation x4665))
(assert (axiom_int_approximation x4666))
(assert (axiom_int_approximation x4669))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x4671))
(assert (axiom_int_approximation x4675))
(assert (axiom_int_approximation x4679))
(assert (axiom_int_approximation x4682))
(assert (axiom_int_approximation x4684))
(assert (axiom_int_approximation x4685))
(assert (axiom_int_approximation x4686))
(assert (axiom_int_approximation x4687))
(assert (axiom_int_approximation x4689))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x4690))
(assert (axiom_int_approximation x4691))
(assert (axiom_int_approximation x4693))
(assert (axiom_int_approximation x4694))
(assert (axiom_int_approximation x4695))
(assert (axiom_int_approximation x4696))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x4700))
(assert (axiom_int_approximation x4701))
(assert (axiom_int_approximation x4704))
(assert (axiom_int_approximation x4705))
(assert (axiom_int_approximation x4707))
(assert (axiom_int_approximation x4708))
(assert (axiom_int_approximation x4709))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x4711))
(assert (axiom_int_approximation x4713))
(assert (axiom_int_approximation x4715))
(assert (axiom_int_approximation x4719))
(assert (axiom_int_approximation x4721))
(assert (axiom_int_approximation x4722))
(assert (axiom_int_approximation x4723))
(assert (axiom_int_approximation x4725))
(assert (axiom_int_approximation x4729))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x4732))
(assert (axiom_int_approximation x4734))
(assert (axiom_int_approximation x4735))
(assert (axiom_int_approximation x4736))
(assert (axiom_int_approximation x4738))
(assert (axiom_int_approximation x4739))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x4742))
(assert (axiom_int_approximation x4743))
(assert (axiom_int_approximation x4744))
(assert (axiom_int_approximation x4745))
(assert (axiom_int_approximation x4746))
(assert (axiom_int_approximation x4747))
(assert (axiom_int_approximation x4748))
(assert (axiom_int_approximation x4750))
(assert (axiom_int_approximation x4752))
(assert (axiom_int_approximation x4753))
(assert (axiom_int_approximation x4754))
(assert (axiom_int_approximation x4756))
(assert (axiom_int_approximation x4759))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x4760))
(assert (axiom_int_approximation x4761))
(assert (axiom_int_approximation x4762))
(assert (axiom_int_approximation x4763))
(assert (axiom_int_approximation x4764))
(assert (axiom_int_approximation x4765))
(assert (axiom_int_approximation x4767))
(assert (axiom_int_approximation x4768))
(assert (axiom_int_approximation x4769))
(assert (axiom_int_approximation x4771))
(assert (axiom_int_approximation x4773))
(assert (axiom_int_approximation x4776))
(assert (axiom_int_approximation x4778))
(assert (axiom_int_approximation x4780))
(assert (axiom_int_approximation x4782))
(assert (axiom_int_approximation x4783))
(assert (axiom_int_approximation x4784))
(assert (axiom_int_approximation x4785))
(assert (axiom_int_approximation x4787))
(assert (axiom_int_approximation x4788))
(assert (axiom_int_approximation x4789))
(assert (axiom_int_approximation x4790))
(assert (axiom_int_approximation x4795))
(assert (axiom_int_approximation x4798))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x4800))
(assert (axiom_int_approximation x4801))
(assert (axiom_int_approximation x4803))
(assert (axiom_int_approximation x4806))
(assert (axiom_int_approximation x4807))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x4815))
(assert (axiom_int_approximation x4817))
(assert (axiom_int_approximation x4822))
(assert (axiom_int_approximation x4826))
(assert (axiom_int_approximation x4828))
(assert (axiom_int_approximation x4832))
(assert (axiom_int_approximation x4833))
(assert (axiom_int_approximation x4835))
(assert (axiom_int_approximation x4836))
(assert (axiom_int_approximation x4837))
(assert (axiom_int_approximation x4839))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x4840))
(assert (axiom_int_approximation x4843))
(assert (axiom_int_approximation x4844))
(assert (axiom_int_approximation x4845))
(assert (axiom_int_approximation x4847))
(assert (axiom_int_approximation x4854))
(assert (axiom_int_approximation x4855))
(assert (axiom_int_approximation x4859))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x4861))
(assert (axiom_int_approximation x4863))
(assert (axiom_int_approximation x4864))
(assert (axiom_int_approximation x4865))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x4872))
(assert (axiom_int_approximation x4874))
(assert (axiom_int_approximation x4879))
(assert (axiom_int_approximation x4880))
(assert (axiom_int_approximation x4881))
(assert (axiom_int_approximation x4882))
(assert (axiom_int_approximation x4883))
(assert (axiom_int_approximation x4884))
(assert (axiom_int_approximation x4885))
(assert (axiom_int_approximation x4886))
(assert (axiom_int_approximation x4889))
(assert (axiom_int_approximation x4890))
(assert (axiom_int_approximation x4891))
(assert (axiom_int_approximation x4894))
(assert (axiom_int_approximation x4896))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x4901))
(assert (axiom_int_approximation x4903))
(assert (axiom_int_approximation x4904))
(assert (axiom_int_approximation x4907))
(assert (axiom_int_approximation x4908))
(assert (axiom_int_approximation x4909))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x4910))
(assert (axiom_int_approximation x4915))
(assert (axiom_int_approximation x4916))
(assert (axiom_int_approximation x4918))
(assert (axiom_int_approximation x4919))
(assert (axiom_int_approximation x4921))
(assert (axiom_int_approximation x4922))
(assert (axiom_int_approximation x4924))
(assert (axiom_int_approximation x4926))
(assert (axiom_int_approximation x4927))
(assert (axiom_int_approximation x4928))
(assert (axiom_int_approximation x4929))
(assert (axiom_int_approximation x4932))
(assert (axiom_int_approximation x4933))
(assert (axiom_int_approximation x4934))
(assert (axiom_int_approximation x4936))
(assert (axiom_int_approximation x4939))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x4941))
(assert (axiom_int_approximation x4944))
(assert (axiom_int_approximation x4949))
(assert (axiom_int_approximation x4951))
(assert (axiom_int_approximation x4953))
(assert (axiom_int_approximation x4955))
(assert (axiom_int_approximation x4956))
(assert (axiom_int_approximation x4961))
(assert (axiom_int_approximation x4964))
(assert (axiom_int_approximation x4966))
(assert (axiom_int_approximation x4967))
(assert (axiom_int_approximation x4968))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x4970))
(assert (axiom_int_approximation x4971))
(assert (axiom_int_approximation x4974))
(assert (axiom_int_approximation x4979))
(assert (axiom_int_approximation x4980))
(assert (axiom_int_approximation x4981))
(assert (axiom_int_approximation x4986))
(assert (axiom_int_approximation x4989))
(assert (axiom_int_approximation x4990))
(assert (axiom_int_approximation x4991))
(assert (axiom_int_approximation x4992))
(assert (axiom_int_approximation x4999))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x5002))
(assert (axiom_int_approximation x5004))
(assert (axiom_int_approximation x5009))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x5012))
(assert (axiom_int_approximation x5015))
(assert (axiom_int_approximation x5016))
(assert (axiom_int_approximation x5018))
(assert (axiom_int_approximation x5019))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x5021))
(assert (axiom_int_approximation x5022))
(assert (axiom_int_approximation x5023))
(assert (axiom_int_approximation x5026))
(assert (axiom_int_approximation x5028))
(assert (axiom_int_approximation x5029))
(assert (axiom_int_approximation x5031))
(assert (axiom_int_approximation x5036))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x5040))
(assert (axiom_int_approximation x5045))
(assert (axiom_int_approximation x5046))
(assert (axiom_int_approximation x5053))
(assert (axiom_int_approximation x5054))
(assert (axiom_int_approximation x5057))
(assert (axiom_int_approximation x5059))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x5060))
(assert (axiom_int_approximation x5061))
(assert (axiom_int_approximation x5062))
(assert (axiom_int_approximation x5065))
(assert (axiom_int_approximation x5066))
(assert (axiom_int_approximation x5067))
(assert (axiom_int_approximation x5068))
(assert (axiom_int_approximation x5071))
(assert (axiom_int_approximation x5077))
(assert (axiom_int_approximation x5078))
(assert (axiom_int_approximation x5079))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x5080))
(assert (axiom_int_approximation x5081))
(assert (axiom_int_approximation x5086))
(assert (axiom_int_approximation x5087))
(assert (axiom_int_approximation x5091))
(assert (axiom_int_approximation x5093))
(assert (axiom_int_approximation x5096))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x5101))
(assert (axiom_int_approximation x5105))
(assert (axiom_int_approximation x5106))
(assert (axiom_int_approximation x5107))
(assert (axiom_int_approximation x5109))
(assert (axiom_int_approximation x5111))
(assert (axiom_int_approximation x5112))
(assert (axiom_int_approximation x5116))
(assert (axiom_int_approximation x5117))
(assert (axiom_int_approximation x5119))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x5122))
(assert (axiom_int_approximation x5123))
(assert (axiom_int_approximation x5125))
(assert (axiom_int_approximation x5129))
(assert (axiom_int_approximation x5131))
(assert (axiom_int_approximation x5134))
(assert (axiom_int_approximation x5136))
(assert (axiom_int_approximation x5138))
(assert (axiom_int_approximation x5139))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x5140))
(assert (axiom_int_approximation x5142))
(assert (axiom_int_approximation x5147))
(assert (axiom_int_approximation x5151))
(assert (axiom_int_approximation x5153))
(assert (axiom_int_approximation x5154))
(assert (axiom_int_approximation x5156))
(assert (axiom_int_approximation x5157))
(assert (axiom_int_approximation x5158))
(assert (axiom_int_approximation x5159))
(assert (axiom_int_approximation x5161))
(assert (axiom_int_approximation x5166))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x5172))
(assert (axiom_int_approximation x5173))
(assert (axiom_int_approximation x5176))
(assert (axiom_int_approximation x5184))
(assert (axiom_int_approximation x5185))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x5191))
(assert (axiom_int_approximation x5192))
(assert (axiom_int_approximation x5193))
(assert (axiom_int_approximation x5199))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x5200))
(assert (axiom_int_approximation x5202))
(assert (axiom_int_approximation x5203))
(assert (axiom_int_approximation x5204))
(assert (axiom_int_approximation x5205))
(assert (axiom_int_approximation x5206))
(assert (axiom_int_approximation x5208))
(assert (axiom_int_approximation x5209))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x5211))
(assert (axiom_int_approximation x5213))
(assert (axiom_int_approximation x5216))
(assert (axiom_int_approximation x5219))
(assert (axiom_int_approximation x5220))
(assert (axiom_int_approximation x5221))
(assert (axiom_int_approximation x5222))
(assert (axiom_int_approximation x5223))
(assert (axiom_int_approximation x5224))
(assert (axiom_int_approximation x5227))
(assert (axiom_int_approximation x5228))
(assert (axiom_int_approximation x5230))
(assert (axiom_int_approximation x5233))
(assert (axiom_int_approximation x5235))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x5240))
(assert (axiom_int_approximation x5242))
(assert (axiom_int_approximation x5243))
(assert (axiom_int_approximation x5244))
(assert (axiom_int_approximation x5246))
(assert (axiom_int_approximation x5248))
(assert (axiom_int_approximation x5255))
(assert (axiom_int_approximation x5256))
(assert (axiom_int_approximation x5257))
(assert (axiom_int_approximation x5258))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x5260))
(assert (axiom_int_approximation x5262))
(assert (axiom_int_approximation x5264))
(assert (axiom_int_approximation x5265))
(assert (axiom_int_approximation x5267))
(assert (axiom_int_approximation x5268))
(assert (axiom_int_approximation x5269))
(assert (axiom_int_approximation x5270))
(assert (axiom_int_approximation x5271))
(assert (axiom_int_approximation x5272))
(assert (axiom_int_approximation x5273))
(assert (axiom_int_approximation x5275))
(assert (axiom_int_approximation x5276))
(assert (axiom_int_approximation x5277))
(assert (axiom_int_approximation x5278))
(assert (axiom_int_approximation x5280))
(assert (axiom_int_approximation x5281))
(assert (axiom_int_approximation x5282))
(assert (axiom_int_approximation x5283))
(assert (axiom_int_approximation x5285))
(assert (axiom_int_approximation x5287))
(assert (axiom_int_approximation x5288))
(assert (axiom_int_approximation x5289))
(assert (axiom_int_approximation x5290))
(assert (axiom_int_approximation x5294))
(assert (axiom_int_approximation x5296))
(assert (axiom_int_approximation x5298))
(assert (axiom_int_approximation x53))
(assert (axiom_int_approximation x5300))
(assert (axiom_int_approximation x5306))
(assert (axiom_int_approximation x5310))
(assert (axiom_int_approximation x5311))
(assert (axiom_int_approximation x5314))
(assert (axiom_int_approximation x5315))
(assert (axiom_int_approximation x5316))
(assert (axiom_int_approximation x5317))
(assert (axiom_int_approximation x5319))
(assert (axiom_int_approximation x5321))
(assert (axiom_int_approximation x5323))
(assert (axiom_int_approximation x5324))
(assert (axiom_int_approximation x5326))
(assert (axiom_int_approximation x5328))
(assert (axiom_int_approximation x5329))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x5330))
(assert (axiom_int_approximation x5331))
(assert (axiom_int_approximation x5332))
(assert (axiom_int_approximation x5333))
(assert (axiom_int_approximation x5338))
(assert (axiom_int_approximation x5340))
(assert (axiom_int_approximation x5343))
(assert (axiom_int_approximation x5344))
(assert (axiom_int_approximation x5347))
(assert (axiom_int_approximation x5348))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x5350))
(assert (axiom_int_approximation x5351))
(assert (axiom_int_approximation x5352))
(assert (axiom_int_approximation x5354))
(assert (axiom_int_approximation x5357))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x5365))
(assert (axiom_int_approximation x5367))
(assert (axiom_int_approximation x5374))
(assert (axiom_int_approximation x5375))
(assert (axiom_int_approximation x5378))
(assert (axiom_int_approximation x5380))
(assert (axiom_int_approximation x5384))
(assert (axiom_int_approximation x5386))
(assert (axiom_int_approximation x5387))
(assert (axiom_int_approximation x5390))
(assert (axiom_int_approximation x5391))
(assert (axiom_int_approximation x5392))
(assert (axiom_int_approximation x5393))
(assert (axiom_int_approximation x5394))
(assert (axiom_int_approximation x5395))
(assert (axiom_int_approximation x5399))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x554))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x57))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x628))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x651))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x721))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x755))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x760))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x788))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x803))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x822))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x827))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x85))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x851))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x859))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x866))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x880))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x886))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x890))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x909))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x913))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x935))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x950))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x952))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x959))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x970))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x972))
(assert (axiom_int_approximation x973))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x977))
(assert (axiom_int_approximation x978))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x996))
(assert (axiom_int_approximation x997))
(assert (axiom_int_approximation x998))
(assert (= (x588 x1315) (ite (= x1315 x4822) x3430 (x2959 x1315))))
(assert (x609 x1969))
(assert (x609 x3351))
(assert (= (x3939 x869) (ite (= x3351 x869) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4710 x869))))
(assert (x609 x5378))
(assert (x1139 x2915 x4148 x5204 x761))
(assert (x609 x2156))
(assert (= x4931 (or (and x1672 x4338) (and (not x3713) x1401))))
(assert (x609 x2894))
(assert (= (and x4435 x3931) x3357))
(assert (= (ite (= x2907 x5208) 0 (x1382 x5208)) (x4561 x5208)))
(assert (x609 x1115))
(assert (x609 x2536))
(assert (= x1812 (and x4199 (not x1499))))
(assert (= (x2155 x3708) (ite (= x3708 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x3708))))
(assert (= x2523 (=> (and (= x552 (x1960 (+ x118 x3731))) (= (< x552 x3731) x5396)) (and (=> (and (= x4244 1) (= x2309 x1743) (= 32 x2168) (not x5396)) x3034) (=> x5396 x2443)))))
(assert (= x2654 (and x4580 x1226)))
(assert (x3641 x263 x3516))
(assert (= x1367 (x4290 (x5032 x1367))))
(assert (x609 x2612))
(assert (= (x4727 x4517) 0))
(assert (=> (= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x4693) (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x656)) (= x656 x4693)))
(assert (x609 x734))
(assert (x609 x615))
(assert (= (x4751 x3104) (ite (= x3104 x3886) x3146 (x984 x3104))))
(assert (= (ite (= x2806 x1086) x351 (x3107 x2806)) (x3739 x2806)))
(assert (= (x2959 x4517) (ite (= x4517 x5071) x2253 (x3178 x4517))))
(assert (= (x3107 x1722) (ite (= x1722 x280) x2407 (x4184 x1722))))
(assert (x609 x701))
(assert (x609 x4317))
(assert (= (ite (and x4360 x2875 (not x1887) x4600 x4192 x4451) (x4618 x5351) (ite (and x2875 x4600 (not x4360) x4192 x4451) (x679 x5351) (ite (and x4600 x4451 (not x4192) x2875) (x1522 x5351) (ite (and x4451 x4600 (not x2875)) (x631 x5351) (x2091 x5351))))) (x4816 x5351)))
(assert (x609 x4111))
(assert (x609 x3893))
(assert (= (x4579 x1213) (ite (and x2185 x763) (ite (and x2185 x763 x1516) (x1281 x1213) (x1177 x1213)) (x1177 x1213))))
(assert (x609 x1301))
(assert (x609 x368))
(assert (= (ite (= x2536 x4832) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x4832)) (x4184 x4832)))
(assert (x609 x4381))
(assert (x609 x3704))
(assert (= (x1639 x970) (ite (and x2185 x763) (x594 x970) (x1571 x970))))
(assert (= (ite (and x4577 x3528) (x559 x1609) (ite (and x5210 x4432) (x2503 x1609) (x2755 x1609))) (x4202 x1609)))
(assert (= (and x2607 x843) x3547))
(assert (= (ite (= x1115 x4214) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x4214)) (x4651 x4214)))
(assert (= (x4755 9518847204935358166548570266051330015907116135037852959641967396525866745856) (x5032 9518847204935358166548570266051330015907116135037852959641967396525866745856)))
(assert (x609 x3526))
(assert (x609 x2063))
(assert (x609 x2969))
(assert (= (x529 x5176) (ite (and x1915 x4067) (x5335 x5176) (x3181 x5176))))
(assert (= (ite (and x4580 (not x1900) x1170 x2099 x898 x1226) (x289 x1583) (ite (and x1170 x4580 (not x2099) x1226 x898) (x3739 x1583) (ite (and x1226 x4580 (not x898) x1170) (x3107 x1583) (ite (and x1226 (not x1170) x4580) (x4184 x1583) (x4895 x1583))))) (x3532 x1583)))
(assert (= x553 (=> (= x657 (= x3823 274184521717934524641157099916833587206)) (and (=> (not x657) x3259) (=> (and (= (> x1493 x1230) x2370) (= x4738 (x4873 (x5032 274184521717934524641157099916833587206))) (= (or (> x636 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x636) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x636) true))) x1409) (= (x864 x2925) x1230) (not x3847) (= x342 (x4579 x5377)) (= (x4062 (- x342 x5019)) x1912) (= x1143 x1493) (<= x2762 1461501637330902918203684832716283019655932542975) (= x4424 (x4062 (- x1230 x5019))) (= x4045 274184521717934524641157099916833587240) (> x4738 0) (= x3243 x2762) (= (x2113 (x5032 x2762) (x4755 2) 0) x801) (= (x3120 x3050) x1129) (= (< x342 x1493) x1461) (= x1129 x1439) (<= x342 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3064 (x2113 (x5032 x2762) (x4755 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1230) (= (+ x1143 x1439) x4441) (>= x1129 0) (= x1848 274184521717934524641157099916833587240) (< (+ x1493 x1129) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x1409) (not x1461) x657 (not (= x2304 157198259)) (= 32 x4992) (= x230 1) (= x2984 (x2113 (x5032 x2762) (x4755 1) 0)) (= 100 x1894) (not (= 404098525 x2304)) (>= x1230 0) (= x1493 x5019) (= x2925 (x2113 (x5032 274184521717934524641157099916833587240) x801 0)) (= 599290589 x2304) (= x2686 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3099 x1894) (not (< x1894 4)) (= x636 (x4062 (- x1894 4))) (not x385) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x4547) (= x2762 x1047) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1129) (= x3780 x5019) (not x1674) (= x3050 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (<= 0 x342) (= 274184521717934524641157099916833587240 x3821) (not x2370) (not (= x2304 117300739)) (= x5377 (x2113 (x5032 x2762) (x4755 1) 0)) (= x2795 x4159) (= x2417 (x2113 (x5032 274184521717934524641157099916833587240) x3064 0)) (= x751 274184521717934524641157099916833587240) (= x385 (< x1230 x1493)) (= (> x5019 x342) x3847) (> 826074471 x2304) (= (>= (+ x1493 x1129) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1674)) x664)))))
(assert (x609 x2330))
(assert (= (ite (= x3807 x2095) x4939 (x2018 x2095)) (x3178 x2095)))
(assert (= (x3181 x5176) (ite (= x408 x5176) x703 (x1395 x5176))))
(assert (= (ite (= x2488 x3303) x1093 (x1849 x2488)) (x4221 x2488)))
(assert (x609 x5166))
(assert (x609 x1149))
(assert (x745 x5112))
(assert (x609 x2912))
(assert (= (=> (and (= x3999 x3920) (= (= x2152 x3920) x525)) (and (=> (not x525) x572) (=> x525 x3900))) x1052))
(assert (= (x1675 x788) (ite (and (not x1416) x2673 x792) (x2427 x788) (x3346 x788))))
(assert (x609 x1924))
(assert (= (ite (= x4944 x4833) 0 (x2646 x4833)) (x156 x4833)))
(assert (x609 x5221))
(assert (x609 x5365))
(assert (x609 x5273))
(assert (x745 x4655))
(assert (x609 x2095))
(assert (x609 x2587))
(assert (x609 x4763))
(assert (x609 x3581))
(assert (x609 x3027))
(assert (= (x4208 128) (ite (= x5283 128) x1386 (x1956 128))))
(assert (= (x3588 x5151) (ite (= x5151 x4745) x1390 (x1796 x5151))))
(assert (x609 x220))
(assert (= x23 (and x4597 (not x3219))))
(assert (= (ite (= x5121 x399) x3039 (x2195 x399)) (x382 x399)))
(assert (x609 x3031))
(assert (x609 x1046))
(assert (= (ite (and x4600 (not x4298) x4451) (x4816 x4594) (x1840 x4594)) (x2474 x4594)))
(assert (x745 x3074))
(assert (x609 x4370))
(assert (= (ite (= x4111 x3351) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4710 x4111)) (x3939 x4111)))
(assert (= (x4977 x3932) (ite (= x3932 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x3932))))
(assert (=> (> (+ 10000 1) x4363) (= (x4755 x4363) (x5032 x4363))))
(assert (x609 x217))
(assert (x609 x1914))
(assert (= 57896044618658097711785492504343953926418782139537452191302581570759080747168 (x4290 (x4755 57896044618658097711785492504343953926418782139537452191302581570759080747168))))
(assert (= (x493 x3775) 0))
(assert (= (x3618 x169) (ite (= x4767 x169) 0 (x3760 x169))))
(assert (= (x382 x2999) (ite (= x2999 x5121) x3039 (x2195 x2999))))
(assert (x609 x1146))
(assert (= (ite (and x2210 (not x3343) x809 x763 x4042 x2185) (x1910 x3584) (ite (and x2185 x4042 x809 (not x2210) x763) (x588 x3584) (ite (and x809 x2185 x763 (not x4042)) (x2959 x3584) (ite (and x763 (not x809) x2185) (x3178 x3584) (x4220 x3584))))) (x808 x3584)))
(assert (= (x3032 x541) (ite (= x1946 x541) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x541))))
(assert (x609 x575))
(assert (x609 x861))
(assert (x609 x3605))
(assert (x609 x5016))
(assert (= (and (not x3195) x2933) x706))
(assert (x609 x4918))
(assert (= (x4816 x2865) (ite (and x2875 x4600 x4451 (not x1887) x4360 x4192) (x4618 x2865) (ite (and x4600 x4192 x2875 x4451 (not x4360)) (x679 x2865) (ite (and x4600 x4451 x2875 (not x4192)) (x1522 x2865) (ite (and x4600 (not x2875) x4451) (x631 x2865) (x2091 x2865)))))))
(assert (= (ite (= x185 x3932) x3414 (x3007 x3932)) (x984 x3932)))
(assert (= (ite (= x4252 x3584) 0 (x5379 x3584)) (x1655 x3584)))
(assert (= x2045 (=> (= x3910 (< x2858 x4260)) (and (=> (and (= x2597 (x2113 (x5032 274184521717934524641157099916833587240) x825 0)) (not x3910) (= (x2113 (x5032 x3993) (x4755 2) 0) x825) (= x2736 1) (= x218 x1696) (= x2435 (x4062 (- x2858 x4260))) (= x1261 274184521717934524641157099916833587240)) x2310) (=> x3910 x4581)))))
(assert (x609 x4657))
(assert (= (and x3798 x3038) x4423))
(assert (x609 x4549))
(assert (x745 x4512))
(assert (x609 x3551))
(assert (x609 x4864))
(assert (= (ite (and x4451 x4600) (ite (and x4193 x4600 x4451) (x349 (x5032 x4735)) (x3349 (x5032 x4735))) (x3349 (x5032 x4735))) (x4584 (x5032 x4735))))
(assert (x609 x3674))
(assert (x609 x5271))
(assert (= (ite (= x3597 x211) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x3597)) (x4466 x3597)))
(assert (x609 x1939))
(assert (= (x2474 x3447) (ite (and x4451 (not x4298) x4600) (x4816 x3447) (x1840 x3447))))
(assert (x4289 x2677))
(assert (= (and x3744 x5083) x2838))
(assert (= (ite (= x3932 x4788) x1755 (x679 x3932)) (x4618 x3932)))
(assert (x745 x5081))
(assert (= (ite (= x2135 x2605) x5228 (x2041 x2135)) (x3982 x2135)))
(assert (x609 x2689))
(assert (= (ite (= x3839 x4745) x1390 (x1796 x3839)) (x3588 x3839)))
(assert (= (x3673 x2013) (ite (= x2013 x1255) x4340 (x1886 x2013))))
(assert (x609 x1569))
(assert (x609 x3592))
(assert (x609 x3860))
(assert (x5318 x474 x3485))
(assert (x609 x3935))
(assert (x609 x1172))
(assert (x609 x4769))
(assert (x609 x758))
(assert (x609 x620))
(assert (= (=> (= x3122 (> x1753 18446744073709551615)) (and (=> x3122 x5043) (=> (not x3122) x334))) x2262))
(assert (x609 x1034))
(assert (= (x2959 x2489) (ite (= x2489 x5071) x2253 (x3178 x2489))))
(assert (= (ite (= x736 x2085) x4615 (x786 x736)) (x443 x736)))
(assert (= (ite (= x4783 x1086) x351 (x3107 x4783)) (x3739 x4783)))
(assert (= (and x3846 (not x1294)) x437))
(assert (= (ite (= x2299 x3303) x1093 (x1849 x2299)) (x4221 x2299)))
(assert (x609 x3074))
(assert (x3829 x2922 x3252))
(assert (= (x3474 x4837) (ite (= x4837 x2603) x613 (x569 x4837))))
(assert (x609 x2285))
(assert (x609 x219))
(assert (= (x2463 x5208) (ite (and x4853 x1961 (not x4638)) (x3043 x5208) (x4962 x5208))))
(assert (=> (> (+ 10000 1) x3225) (= (x4755 x3225) (x5032 x3225))))
(assert (x3829 x3072 x2899))
(assert (= x907 (=> (and (= x4520 (x4873 (x5032 x2152))) (= x4950 (> x4520 0)) (= (x267 x4833) x2040)) (and (=> (not x4950) x3770) (=> x4950 x765)))))
(assert (= (ite (= x4967 x3553) x2175 (x3588 x4967)) (x889 x4967)))
(assert (= (ite (= x1661 x3295) x112 (x3589 x1661)) (x3635 x1661)))
(assert (= (x3032 x1609) (ite (= x1609 x1946) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x1609))))
(assert (= (ite (= (x4755 0) x3022) x4687 (x212 x3022)) (x42 x3022)))
(assert (x4289 x564))
(assert (x609 x487))
(assert (x609 x953))
(assert (= x4215 (and x3053 (not x1326))))
(assert (= (x3474 x2865) (ite (= x2865 x2603) x613 (x569 x2865))))
(assert (x609 x4040))
(assert (x79 x4689 x1054 x1606 x850))
(assert (= (ite (= x3865 x601) x4410 (x3776 x3865)) (x4804 x3865)))
(assert (x609 x520))
(assert (=> (< (- x4380 1) 10000) (= (x5032 x4380) (x4755 x4380))))
(assert (x609 x565))
(assert (x4289 x4951))
(assert (x609 x2270))
(assert (= (ite (= x4944 x2527) 0 (x2646 x2527)) (x156 x2527)))
(assert (x745 x4319))
(assert (= (ite (and x1170 x4580 x898 (not x1900) x2099 x1226) (x289 x1586) (ite (and x1170 x898 x4580 x1226 (not x2099)) (x3739 x1586) (ite (and x1170 x4580 (not x898) x1226) (x3107 x1586) (ite (and (not x1170) x4580 x1226) (x4184 x1586) (x4895 x1586))))) (x3532 x1586)))
(assert (= 0 (x4284 (- x1661 x2721))))
(assert (= (=> (and (= (x2679 x1315) x5158) (= x911 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2327)) (= x861 x5158) (not (or (> x4787 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4787) true) (< x4787 32)))) (= x2241 x1315) (not (= x3188 0)) (= x3794 (x1960 (+ x911 x2241))) (= x2327 (x1960 (+ x4787 31))) (= x3794 x3546)) x4241) x4888))
(assert (x609 x2324))
(assert (= (x4579 x94) (ite (and x763 x2185) (ite (and x2185 x1516 x763) (x1281 x94) (x1177 x94)) (x1177 x94))))
(assert (= (ite (and x4731 x3802 x1862 (not x1355) x3692 x2461) (x3307 x4642) (ite (and x3802 x3692 (not x2461) x1862 x4731) (x1678 x4642) (ite (and x3692 (not x4731) x3802 x1862) (x5006 x4642) (ite (and x1862 (not x3802) x3692) (x3939 x4642) (x16 x4642))))) (x425 x4642)))
(assert (x609 x4488))
(assert (= (ite (= x5271 x4944) 0 (x2646 x5271)) (x156 x5271)))
(assert (= x2776 (and (not x4112) x516)))
(assert (x609 x4166))
(assert (= (x3673 x1332) (ite (= x1255 x1332) x4340 (x1886 x1332))))
(assert (= (ite (= (x4755 0) x2401) x1325 (x3161 x2401)) (x1017 x2401)))
(assert (x609 x5224))
(assert (=> (< (- x3168 1) 10000) (= (x5032 x3168) (x4755 x3168))))
(assert (= (x5167 x3584) (ite (and (not x2405) x3292 x5103) (x3205 x3584) (x4651 x3584))))
(assert (= (ite (= (x4755 106) x1161) x2324 (x3508 (x4755 106))) (x1542 (x4755 106))))
(assert (= (ite (= x671 x1591) x1250 (x2617 x671)) (x3776 x671)))
(assert (= (x3724 x5225) (ite (= x5225 x781) x4654 (x3305 x5225))))
(assert (= (ite x1963 (ite x2987 (x2000 (x5032 x3187)) (x4584 (x5032 x3187))) (x1407 (x5032 x3187))) (x4623 (x5032 x3187))))
(assert (= (ite (= x2095 x4225) x4534 (x588 x2095)) (x1910 x2095)))
(assert (x609 x2541))
(assert (x609 x1921))
(assert (= (x290 x1609) (ite (and x2906 (not x1716) x2884) (x422 x1609) (x4977 x1609))))
(assert (x3829 x1629 x246))
(assert (= x637 (=> (and (= (x4873 (x5032 x3648)) x1037) (= x4687 (x1960 (+ x1744 1))) (= (= x1037 0) x3191) (= 274184521717934524641157099916833587240 x4230) (= x3499 x4057) (= (x1960 (+ 4 x3790)) x3499) (= x3648 (x5313 1461501637330902918203684832716283019655932542975 x5374))) (and (=> (and (= x1000 (> x38 0)) (or (and x1000 (> 4294967296 x3241) (= 1 x446)) (and (= x38 x446) (not x1000))) (not x3191)) x1644) (=> x3191 x5043)))))
(assert (= (ite (and x2884 x2906 (not x1716)) (x422 x169) (x4977 x169)) (x290 x169)))
(assert (x609 x5255))
(assert (= (x4221 128) (ite (= 128 x3303) x1093 (x1849 128))))
(assert (x609 x2674))
(assert (x609 x2879))
(assert (= (ite (= x5351 x3886) x3146 (x984 x5351)) (x4751 x5351)))
(assert (x609 x253))
(assert (x4289 x2897))
(assert (x609 x3114))
(assert (= (ite (= x1591 x3054) x1250 (x2617 x3054)) (x3776 x3054)))
(assert (= 18446744073709551616 (x4290 (x4755 18446744073709551616))))
(assert (=> (> (+ 10000 1) x33) (= (x4755 x33) (x5032 x33))))
(assert (x4289 x241))
(assert (= (x4561 x1618) (ite (= x2907 x1618) 0 (x1382 x1618))))
(assert (= (ite (= x4594 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x4594)) (x4977 x4594)))
(assert (= (ite (= x1618 x3553) x2175 (x3588 x1618)) (x889 x1618)))
(assert (x609 x37))
(assert (= (ite (= x3303 x2644) x1093 (x1849 x2644)) (x4221 x2644)))
(assert (x609 x330))
(assert (= (x3934 x4245) (ite (= x2867 x4245) x4439 (x2356 x4245))))
(assert (= (x4755 4294967295) (x5032 4294967295)))
(assert (= (ite (= x487 x4111) 0 (x2852 x4111)) (x550 x4111)))
(assert (= (ite (= (x4755 0) x1013) x2630 (x4349 x1013)) (x2707 x1013)))
(assert (= (x4618 x3775) (ite (= x3775 x4788) x1755 (x679 x3775))))
(assert (x609 x549))
(assert (x609 x2376))
(assert (x609 x2684))
(assert (x609 x3225))
(assert (= (ite (and x2906 (not x1716) x2884) (x422 x4330) (x4977 x4330)) (x290 x4330)))
(assert (x3829 x3279 x2473))
(assert (x609 x3708))
(assert (x745 x3273))
(assert (x609 x4471))
(assert (= (ite (and x3292 (not x2405) x5103) (x3205 x4783) (x4651 x4783)) (x5167 x4783)))
(assert (= (ite (= x3498 x399) x2754 (x42 x399)) (x2195 x399)))
(assert (= 904250603428552709895185118199468575982109441609966099573332780532423983104 (x4290 (x4755 904250603428552709895185118199468575982109441609966099573332780532423983104))))
(assert (= (x4579 x5377) (ite (and x2185 x763) (ite (and x2185 x1516 x763) (x1281 x5377) (x1177 x5377)) (x1177 x5377))))
(assert (x609 x4026))
(assert (= (ite (= x487 x5086) 0 (x2852 x5086)) (x550 x5086)))
(assert (= (x3618 x1883) (ite (= x4767 x1883) 0 (x3760 x1883))))
(assert (= (ite (and x4451 (not x1887) x4360 x4192 x2875 x4600) (x4618 x1148) (ite (and (not x4360) x4451 x2875 x4600 x4192) (x679 x1148) (ite (and x4600 x2875 (not x4192) x4451) (x1522 x1148) (ite (and x4600 x4451 (not x2875)) (x631 x1148) (x2091 x1148))))) (x4816 x1148)))
(assert (= (x5032 455944412) (x4755 455944412)))
(assert (= (ite (= x96 x3104) 274184521717934524641157099916833587240 (x456 x3104)) (x1340 x3104)))
(assert (= (x4290 (x4755 9518847204935358166548570266051330015907116135037852959641967396525866745856)) 9518847204935358166548570266051330015907116135037852959641967396525866745856))
(assert (= (and x1604 (not x2977)) x783))
(assert (x609 x3598))
(assert (x609 x570))
(assert (= (x1017 x3593) (ite (= (x4755 0) x3593) x1325 (x3161 x3593))))
(assert (= (ite x1963 (ite x2987 (x2000 (x5032 274184521717934524641157099916833587240)) (x4584 (x5032 274184521717934524641157099916833587240))) (x1407 (x5032 274184521717934524641157099916833587240))) (x4623 (x5032 274184521717934524641157099916833587240))))
(assert (= (ite (= x3049 x3778) x1806 (x4728 x3049)) (x3344 x3049)))
(assert (x609 x741))
(assert (= (ite (= x970 x4225) x4534 (x588 x970)) (x1910 x970)))
(assert (= (ite (= (x4755 0) x76) x2630 (x4349 x76)) (x2707 x76)))
(assert (= (x4221 x4543) (ite (= x4543 x3303) x1093 (x1849 x4543))))
(assert (= (x2707 x4772) (ite (= x4772 (x4755 0)) x2630 (x4349 x4772))))
(assert (x745 4294967295))
(assert (x609 x1546))
(assert (x609 x1270))
(assert (= x1403 (=> (= x2696 x3119) x3367)))
(assert (= (x1796 x4773) (ite (= x4773 x2429) x1282 (x2635 x4773))))
(assert (= (ite (and x763 x2185) (ite (and x763 x1516 x2185) (x1281 x2135) (x1177 x2135)) (x1177 x2135)) (x4579 x2135)))
(assert (x745 x1958))
(assert (= x669 (x4290 (x5032 x669))))
(assert (= (x4221 x1722) (ite (= x1722 x3303) x1093 (x1849 x1722))))
(assert (x609 x1864))
(assert (x609 x2614))
(assert (x609 x2752))
(assert (x609 x905))
(assert (x609 x721))
(assert (= (x290 x3477) (ite (and x2884 x2906 (not x1716)) (x422 x3477) (x4977 x3477))))
(assert (= (x1796 x3708) (ite (= x2429 x3708) x1282 (x2635 x3708))))
(assert (= 0 (x493 x1609)))
(assert (x609 x2284))
(assert (x609 x4709))
(assert (= (x4618 x4594) (ite (= x4594 x4788) x1755 (x679 x4594))))
(assert (= (ite (= x1255 x5271) x4340 (x1886 x5271)) (x3673 x5271)))
(assert (= (x4755 599290589) (x5032 599290589)))
(assert (x609 x4169))
(assert (x609 x431))
(assert (= (x679 x1148) (ite (= x1715 x1148) x4413 (x1522 x1148))))
(assert (x609 x574))
(assert (= (x4816 x4594) (ite (and x4192 (not x1887) x4451 x4360 x2875 x4600) (x4618 x4594) (ite (and x4600 x4451 x4192 x2875 (not x4360)) (x679 x4594) (ite (and x4451 x4600 x2875 (not x4192)) (x1522 x4594) (ite (and (not x2875) x4600 x4451) (x631 x4594) (x2091 x4594)))))))
(assert (= (x4651 x2750) (ite (= x2750 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x2750))))
(assert (x609 x1085))
(assert (= (ite (= x3778 x3597) x1806 (x4728 x3597)) (x3344 x3597)))
(assert (= (x889 x1537) (ite (= x1537 x3553) x2175 (x3588 x1537))))
(assert (x745 x4190))
(assert (x609 x3567))
(assert (x609 x4685))
(assert (x609 x4928))
(assert (x609 x2931))
(assert (= (ite (= x1722 x282) 0 (x4965 x1722)) (x1571 x1722)))
(assert (= (x1329 x5271) (ite (= x5271 x4012) 274184521717934524641157099916833587240 (x447 x5271))))
(assert (x609 x2306))
(assert (x609 x3899))
(assert (= (x4290 (x5032 x2278)) x2278))
(assert (=> (< (- x1149 1) 10000) (= (x4755 x1149) (x5032 x1149))))
(assert (= (ite (= x4214 x3303) x1093 (x1849 x4214)) (x4221 x4214)))
(assert (= (x1264 x4204) (ite (and x2185 x763) (ite (and x1516 x2185 x763) (x1814 x4204) (x1845 x4204)) (x1845 x4204))))
(assert (= (x1796 x1870) (ite (= x1870 x2429) x1282 (x2635 x1870))))
(assert (x4289 x1458))
(assert (= (x1466 x1722) (ite (= x1722 x1491) x2444 (x1339 x1722))))
(assert (= (ite (= x4832 x4822) x3430 (x2959 x4832)) (x588 x4832)))
(assert (x4289 x4303))
(assert (x609 x2419))
(assert (x3350 x4927 x134 x4922 x1999))
(assert (= (x2056 x2579) (ite x748 (ite x3421 (x831 x2579) (x5337 x2579)) (x4766 x2579))))
(assert (x3829 x4903 x3709))
(assert (= 0 (x3729 (x1960 (+ 96 x1002)))))
(assert (= (ite (= x487 x2046) 0 (x2852 x2046)) (x550 x2046)))
(assert (= x1932 x3228))
(assert (x609 x5062))
(assert (= (x4579 x5241) (ite (and x763 x2185) (ite (and x763 x1516 x2185) (x1281 x5241) (x1177 x5241)) (x1177 x5241))))
(assert (x609 x3371))
(assert (= (ite (= x1255 x4370) x4340 (x1886 x4370)) (x3673 x4370)))
(assert (= (x2707 x2564) (ite (= x2564 (x4755 0)) x2630 (x4349 x2564))))
(assert (= x3034 (=> (and (= x4244 x742) (= x4743 x2168)) x1233)))
(assert (= (x3673 x2560) (ite (= x2560 x1255) x4340 (x1886 x2560))))
(assert (= (x5032 115792089237316195423570985008687907853269984665640564039457584007913129639934) (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x609 x4734))
(assert (= (x4208 x2704) (ite (= x2704 x5283) x1386 (x1956 x2704))))
(assert (x609 x5300))
(assert (= (x2928 x1658) (ite (= x1658 x1610) x629 (x889 x1658))))
(assert (x609 x353))
(assert (x609 x3395))
(assert (= (x156 x3597) (ite (= x4944 x3597) 0 (x2646 x3597))))
(assert (= (or (and x2735 (not x1092)) x3955) x1420))
(assert (= x4014 (=> (and (= x665 (= (ite x1195 1 0) 0)) (= x2965 128) (= (x1960 (+ 128 x5310)) x4872) (= (x1960 (+ x3486 63)) x2330) (= (x1960 (+ x2284 31)) x2970) (= (< x4872 128) x3143) (= (or x3143 x2235) x1195) (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2970) x3486) (= x5310 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2330)) (= x2235 (> x4872 18446744073709551615))) (and (=> x665 x4282) (=> (not x665) x5043)))))
(assert (x609 x203))
(assert (x609 x2309))
(assert (= (x588 x3914) (ite (= x3914 x4822) x3430 (x2959 x3914))))
(assert (= (ite (and x90 x3318) (x1837 x4833) (x4561 x4833)) (x267 x4833)))
(assert (x609 x1217))
(assert (x609 x4949))
(assert (x609 x2849))
(assert (= (x4221 x1586) (ite (= x3303 x1586) x1093 (x1849 x1586))))
(assert (and (<= 10000 (x712 x613 x494 x1358 x949 x549 x3199 x1299 x789 x4100)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x712 x613 x494 x1358 x949 x549 x3199 x1299 x789 x4100))))
(assert (= (x4353 x788) (ite (and x1680 x879 x582 x2716 (not x2374) x4810) (x534 x788) (ite (and x2716 x4810 (not x879) x1680 x582) (x1225 x788) (ite (and (not x1680) x2716 x4810 x582) (x1853 x788) (ite (and x2716 x582 (not x4810)) (x4466 x788) (x1160 x788)))))))
(assert (= (x1542 x4996) (ite (= x1161 x4996) x2324 (x3508 x4996))))
(assert (x609 x4929))
(assert (x609 x3904))
(assert (= (x3596 x3448) (ite (= x3448 x4128) x3780 (x4036 x3448))))
(assert (x609 x2996))
(assert (x4289 x4368))
(assert (= (x3474 x1148) (ite (= x1148 x2603) x613 (x569 x1148))))
(assert (x609 x3876))
(assert (= (ite (= (x4755 0) x2403) x2630 (x4349 x2403)) (x2707 x2403)))
(assert (= (x267 x5151) (ite (and x90 x3318) (x1837 x5151) (x4561 x5151))))
(assert (=> (< (- x191 1) 10000) (= (x5032 x191) (x4755 x191))))
(assert (x609 x2534))
(assert (x609 x3696))
(assert (= (x3934 x3592) (ite (= x3592 x2867) x4439 (x2356 x3592))))
(assert (x609 x1151))
(assert (x609 x3296))
(assert (= x3892 (x4290 (x5032 x3892))))
(assert (x609 x1944))
(assert (x609 x2446))
(assert (x609 x806))
(assert (= (x221 x5151) (ite (= x1636 x5151) 274184521717934524641157099916833587240 (x2029 x5151))))
(assert (= (x3386 x5067) (ite (and x582 x2716 (not x472)) (x4353 x5067) (x1101 x5067))))
(assert (x609 x930))
(assert (= (x4290 (x4755 4294967296)) 4294967296))
(assert (= (x3157 x3708) (ite (and x1000 x4625 (not x3191)) (x2895 x3708) (x2155 x3708))))
(assert (= x4236 (=> (= x868 (= x3583 274184521717934524641157099916833587202)) (and (=> (not x868) x3922) (=> (and (= 1 x4700) (= (x4873 (x5032 274184521717934524641157099916833587202)) x5122) (not x3615) (not (> 4 x3455)) (< 0 x5122) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x2678) (= 274184521717934524641157099916833587240 x1710) (= x3042 (x4062 (- x3455 4))) (not (= x3805 826074471)) (= x5134 (x149 x2678)) (= 32 x4098) (= x3805 1889567281) (= (or (and (< x3042 32) (= (<= x3042 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3042)) x3615) (= x3455 36) (<= x5134 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x3805 826074471)) x868 (<= 0 x5134) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x64) (= x3455 x1576)) x3582)))))
(assert (x609 x2132))
(assert (= (x3934 x3436) (ite (= x3436 x2867) x4439 (x2356 x3436))))
(assert (x609 x2914))
(assert (= x5164 (=> (and (= x1092 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1471)) (= (x382 x399) x1471) (= (x4062 (- x3557 1)) x3039) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0) x399)) (and (=> x1092 x117) (=> (and (= x5029 (x1960 (+ x4640 274184521717934524641157099916833587240))) (not x1092) (= x4640 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3286)) (= x4974 (x1960 (+ 1 x1471))) (= (x3998 x4586) x3286) (= x2376 1) (= x4586 (x2113 (x5032 x852) (x4755 208) 0))) x2733)))))
(assert (= (x343 x2865) (ite (= x2865 x3339) 274184521717934524641157099916833587240 (x1125 x2865))))
(assert (x609 x4682))
(assert (x609 x4245))
(assert (x609 x4787))
(assert (x3829 x1286 x5109))
(assert (x4289 x814))
(assert (x609 x4027))
(assert (x5318 x5205 x4197))
(assert (= (ite (and x2185 x763) (x594 x3914) (x1571 x3914)) (x1639 x3914)))
(assert (x609 x3678))
(assert (x609 x96))
(assert (= (ite (= x4745 x3952) x1390 (x1796 x3952)) (x3588 x3952)))
(assert (x609 x4380))
(assert (= (ite (= x3118 (x4755 0)) x1325 (x3161 x3118)) (x1017 x3118)))
(assert (= (x3032 x3932) (ite (= x3932 x1946) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x3932))))
(assert (x609 x3575))
(assert (x609 x1129))
(assert (= x980 (x4290 (x5032 x980))))
(assert (x609 x742))
(assert (= (ite (= x743 x5283) x1386 (x1956 x743)) (x4208 x743)))
(assert (x609 x2489))
(assert (x609 x1167))
(assert (= (x3306 x736) (ite (= x736 x5165) x86 (x3835 x736))))
(assert (x609 x1905))
(assert (x609 x595))
(assert (= (ite (and x3318 x90) (ite (and (not x2093) x4082 x639) (x4474 x319) (x2524 x319)) (x2524 x319)) (x183 x319)))
(assert (= (x443 x2539) (ite (= x2085 x2539) x4615 (x786 x2539))))
(assert (= (ite (= x51 x4813) x5273 (x1702 x51)) (x5362 x51)))
(assert (= x5327 (and x4703 (not x3836))))
(assert (= (x382 x4772) (ite (= x4772 x5121) x3039 (x2195 x4772))))
(assert (= (ite (= x2603 x5086) x613 (x569 x5086)) (x3474 x5086)))
(assert (= (x479 x3942) (ite x2394 (ite x764 (x5286 x3942) (x864 x3942)) (ite (and x1932 x5003) (x4631 x3942) (x864 x3942)))))
(assert (= x4338 (and x3564 x2956)))
(assert (x609 x3101))
(assert (= (and x5322 x1126) x2919))
(assert (= (x3386 x5208) (ite (and (not x472) x582 x2716) (x4353 x5208) (x1101 x5208))))
(assert (x609 x1107))
(assert (x609 x5326))
(assert (x609 x2638))
(assert (x609 x1899))
(assert (x609 x88))
(assert (= (ite (= x4773 x2892) x239 (x4466 x4773)) (x1853 x4773)))
(assert (x609 x1977))
(assert (x745 x4258))
(assert (= (ite (= x185 x5351) x3414 (x3007 x5351)) (x984 x5351)))
(assert (x609 x4229))
(assert (x609 x4045))
(assert (x609 x342))
(assert (x609 x1228))
(assert (x609 x4132))
(assert (= (=> (= x5155 (< x5129 x2040)) (and (=> (and (= x61 x2696) (not x5155)) x3367) (=> x5155 x5043))) x926))
(assert (x609 x3602))
(assert (= (ite (= x3795 x2605) x5228 (x2041 x3795)) (x3982 x3795)))
(assert (= x1279 (x4290 (x5032 x1279))))
(assert (= (x550 x2865) (ite (= x487 x2865) 0 (x2852 x2865))))
(assert (x609 x4500))
(assert (x4276 x974 x1384))
(assert (= x4303 (x4290 (x5032 x4303))))
(assert (= x4331 (=> (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3476 (x5032 x5256))) x4342) (= (x68 (x5032 274184521717934524641157099916833587240)) x2632) (= x1972 (x3476 (x5032 x5256))) x4342 (= x89 (= 274184521717934524641157099916833587206 x5256))) (and (=> x89 x2146) (=> (not x89) x2498)))))
(assert (= (x290 x2397) (ite (and x2884 x2906 (not x1716)) (x422 x2397) (x4977 x2397))))
(assert (x609 x192))
(assert (x609 x4154))
(assert (= (ite (= x2046 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x2046)) (x4977 x2046)))
(assert (x745 x2626))
(assert (x609 x2134))
(assert (= x4321 (=> (and (= x1980 (= x600 0)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)) x430) (= x2239 (uninterp_mod (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1960 (+ 64 x4461)) x4967) (= x3377 (= x2163 0)) (= x1046 (x5313 255 x2294)) (= x600 (x5313 x2831 x959)) (= x4826 (x4233 (x4755 1))) (= x2294 (- (/ x4826 5192296858534827628530496329220096) (uninterp_frac x4826 5192296858534827628530496329220096))) (= x2831 (ite (not x3377) 1 0)) (= x959 (ite (> x2562 x430) 1 0))) (and (=> x1980 x63) (=> (not x1980) x5043)))))
(assert (= (x4221 x3749) (ite (= x3303 x3749) x1093 (x1849 x3749))))
(assert (= (and x1220 (not x2942)) x5133))
(assert (= (x267 x5067) (ite (and x3318 x90) (x1837 x5067) (x4561 x5067))))
(assert (x609 x4296))
(assert (x609 x4046))
(assert (= x4395 (x4290 (x5032 x4395))))
(assert (=> (< (- x4368 1) 10000) (= (x5032 x4368) (x4755 x4368))))
(assert (= 0 (x4727 x4245)))
(assert (= (ite (= x743 x4767) 0 (x3760 x743)) (x3618 x743)))
(assert (x609 x602))
(assert (x609 x30))
(assert (x609 x3432))
(assert (x609 x116))
(assert (= (ite (and x2185 x809 x2210 x4042 x763 (not x3343)) (x1910 x1583) (ite (and x809 x763 (not x2210) x4042 x2185) (x588 x1583) (ite (and x763 x809 (not x4042) x2185) (x2959 x1583) (ite (and x2185 x763 (not x809)) (x3178 x1583) (x4220 x1583))))) (x808 x1583)))
(assert (x609 x4707))
(assert (= (ite (= x3104 x4767) 0 (x3760 x3104)) (x3618 x3104)))
(assert (x745 x2893))
(assert (= (x4290 (x6 x1350 2)) (+ 2 (x4290 x1350))))
(assert (x3641 x1701 x1490))
(assert (x609 x3698))
(assert (= (x1675 x5151) (ite (and x792 x2673 (not x1416)) (x2427 x5151) (x3346 x5151))))
(assert (= (x2707 x4586) (ite (= x4586 (x4755 0)) x2630 (x4349 x4586))))
(assert (x609 x2159))
(assert (x609 x3749))
(assert (x609 x2328))
(assert (x609 x2172))
(assert (= (=> (and (= 274184521717934524641157099916833587240 x3432) (= x884 (= 0 x69)) (= (x4062 (- x1504 x721)) x3385) (= x1664 (x1960 (+ x721 4))) (= x4012 x1664) (= x2541 (x5313 1461501637330902918203684832716283019655932542975 x80)) (= (x1960 (+ 36 x721)) x1504) (= x69 (x4873 (x5032 x2541)))) (and (=> x884 x5043) (=> (not x884) x3216))) x4867))
(assert (x609 x4387))
(assert (x609 x1089))
(assert (= x5001 (or (and (not x3910) x706) x882)))
(assert (= (and (not x3401) x1605) x3535))
(assert (x609 x402))
(assert (= (x493 x1883) 0))
(assert (= (ite (= x3104 x2724) x1563 (x631 x3104)) (x1522 x3104)))
(assert (= x323 (=> (and (= 274184521717934524641157099916833587240 x3642) (= (x4062 (- x404 x4260)) x86) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x2675) (= (x4062 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4260)) x1438) (<= 0 x2024) (= x5165 (x2113 (x5032 x3993) (x4755 1) 0)) (= (x3306 x2675) x2024) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2024) (= x1907 (> x2024 x1438))) (and (=> (not x1907) x5072) (=> x1907 x4581)))))
(assert (= 0 (x493 x2672)))
(assert (= (ite (= x3498 x1591) x2754 (x42 x1591)) (x2195 x1591)))
(assert (= (x4727 x3914) 0))
(assert (x745 x2836))
(assert (x609 x3457))
(assert (x609 x1949))
(assert (= (x4618 x1883) (ite (= x4788 x1883) x1755 (x679 x1883))))
(assert (x745 x2656))
(assert (= (x1853 x4967) (ite (= x2892 x4967) x239 (x4466 x4967))))
(assert (= (ite (= x76 x601) x4410 (x3776 x76)) (x4804 x76)))
(assert (= (x4977 x743) (ite (= x3177 x743) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x743))))
(assert (= (x679 x4594) (ite (= x4594 x1715) x4413 (x1522 x4594))))
(assert (x609 x2393))
(assert (x609 x2204))
(assert (x745 x4158))
(assert (= (x3618 x2548) (ite (= x4767 x2548) 0 (x3760 x2548))))
(assert (x609 x4664))
(assert (= (x42 x5309) (ite (= x5309 (x4755 0)) x4687 (x212 x5309))))
(assert (= (ite x2394 (ite x764 (x4984 (x5032 x353)) (x1695 (x5032 x353))) (x689 (x5032 x353))) (x2044 (x5032 x353))))
(assert (= (x382 x4586) (ite (= x5121 x4586) x3039 (x2195 x4586))))
(assert (= x4241 (=> (and (= x3546 x3469) (= x3261 x4734) (= x2778 x3870) (= (+ x3488 x3261) x3870) (not (< x861 x2778)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4734 x3780)) (= x3780 x3488)) x1982)))
(assert (= (ite (= x2429 x2560) x1282 (x2635 x2560)) (x1796 x2560)))
(assert (=> (< (- x2412 1) 10000) (= (x5032 x2412) (x4755 x2412))))
(assert (x3829 x4309 x880))
(assert (x609 x3415))
(assert (x745 x4223))
(assert (x609 x1282))
(assert (= x299 (=> (and (= 274184521717934524641157099916833587240 x1380) (= (x4873 (x5032 x1146)) x4941) (= (x1960 (+ x2241 4)) x4571) (= x3082 (x4062 (- x4484 x2241))) (= x4484 (x1960 (+ 36 x2241))) (not (= x4941 0)) (= x1146 (x5313 1461501637330902918203684832716283019655932542975 x3074)) (= (= x1146 274184521717934524641157099916833587240) x4630) (= x4744 x4571)) (and (=> (and (= x1029 (x4873 (x5032 274184521717934524641157099916833587240))) (= x4196 1889567281) (not (< x4196 1166402363)) (= x762 50942633119752846454219349998365661925608737367104304655302372697894809501696) x4630 (= x26 36) (not x4717) (not (< x4196 1722255204)) (= (x4062 (- x26 4)) x4807) (= 1 x3188) (= x4717 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4807) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4807) true) (> 32 x4807)))) (not (= x4196 1845821197)) (= x4333 (x1542 x5008)) (> x1029 0) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0) x5008) (not (= x4196 1858285468)) (= x26 x3082) (= x4787 32) (not (< x26 4)) (= x2683 274184521717934524641157099916833587240) (not (= 1722255204 x4196)) (> 2311529814 x4196)) x4888) (=> (not x4630) x1816)))))
(assert (x609 x1222))
(assert (= (ite (= x4837 x4788) x1755 (x679 x4837)) (x4618 x4837)))
(assert (= (x3673 x5223) (ite (= x5223 x1255) x4340 (x1886 x5223))))
(assert (x609 x4506))
(assert (= (x4466 x4690) (ite (= x211 x4690) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x4690))))
(assert (= (x289 x3592) (ite (= x5386 x3592) x1036 (x3739 x3592))))
(assert (= (ite (= x1658 x4944) 0 (x2646 x1658)) (x156 x1658)))
(assert (= (uninterp_mod (* x4685 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3135 x4685 96)))
(assert (x609 x4780))
(assert (x609 x3332))
(assert (= (x42 x3054) (ite (= (x4755 0) x3054) x4687 (x212 x3054))))
(assert (= (x2041 x276) (ite x748 (ite x3421 (x2101 x276) (x3643 x276)) (x4555 x276))))
(assert (x609 x1032))
(assert (x609 x5078))
(assert (= x664 (=> (and (= x1760 0) (= x3581 x3281) (= (< (+ (x2290 (x5032 274184521717934524641157099916833587240)) x1760) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2606) (or (and (= x5285 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5235)) (= x5287 (x1960 (+ x4170 96))) (= x3581 x4120) (= x5235 (x1960 (+ 63 x4992))) (= x1583 x32) (= x4120 (x1960 (+ x5285 x32))) (not x693)) (and (= 96 x1583) x693 (= x32 x3581))) (not (= x230 0)) (or (and (< 0 x4979) (= (x3482 x2750) x4979) (= x4979 x651) (= (x1960 (+ 32 x1583)) x2750) (= (not x4652) x3290) x4143 (= x4652 (= 0 x4979)) (not (or (and (= (<= x2612 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2612 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2612))) (= x2612 (x3482 x1583)) (= (ite x3290 1 0) x651)) (not x4143)) (= x4143 (< 0 x4362)) (= (x1960 (+ x1760 (uninterp_mod (x2290 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1949) x2606 (= (= x4992 0) x693) (= (x3482 x1583) x4362) (= x1419 (- (x3055 (x5032 x3823)) x1760))) x3091)))
(assert (= (ite (= x331 x2539) x4904 (x4431 x2539)) (x786 x2539)))
(assert (x609 x1019))
(assert (= (x1225 x4967) (ite (= x332 x4967) x3571 (x1853 x4967))))
(assert (x609 x377))
(assert (= (x3589 x2696) (ite (= x2696 x4322) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3668 x2696))))
(assert (= (ite (= x3778 x1870) x1806 (x4728 x1870)) (x3344 x1870)))
(assert (=> (> (+ 10000 1) x2152) (= (x5032 x2152) (x4755 x2152))))
(assert (= (and x2654 (not x4838)) x3717))
(assert (x4276 x3365 x2212))
(assert (= (x3178 x3584) (ite (= x3584 x3807) x4939 (x2018 x3584))))
(assert (= (ite (and x4192 x4600 x2875 (not x1887) x4451 x4360) (x4618 x3447) (ite (and x2875 x4192 (not x4360) x4451 x4600) (x679 x3447) (ite (and x2875 x4600 (not x4192) x4451) (x1522 x3447) (ite (and (not x2875) x4451 x4600) (x631 x3447) (x2091 x3447))))) (x4816 x3447)))
(assert (x609 x2697))
(assert (x4289 x1446))
(assert (x609 x4378))
(assert (= (ite (and (not x2405) x3292 x5103) (x3205 x3057) (x4651 x3057)) (x5167 x3057)))
(assert (= (x5167 x2488) (ite (and x3292 (not x2405) x5103) (x3205 x2488) (x4651 x2488))))
(assert (x609 x4594))
(assert (= (ite (= x4486 x3104) x654 (x4297 x3104)) (x631 x3104)))
(assert (x609 x3001))
(assert (x609 x420))
(assert (x609 x502))
(assert (x609 x571))
(assert (x609 x3174))
(assert (x609 x4700))
(assert (= (ite (= (x4755 0) x1591) x4687 (x212 x1591)) (x42 x1591)))
(assert (= (ite (= x1842 x2588) x3533 (x3982 x1842)) (x1452 x1842)))
(assert (x609 x35))
(assert (= (or x4472 (and (not x678) x5327)) x3129))
(assert (= (x4290 (x5032 x216)) x216))
(assert (= (ite (= x84 x1255) x4340 (x1886 x84)) (x3673 x84)))
(assert (= (ite (= x1946 x1148) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x1148)) (x3032 x1148)))
(assert (x745 115792089237316195423570985007226406215939081747436879206741300988257197096960))
(assert (x609 x441))
(assert (= (x4561 x2226) (ite (= x2907 x2226) 0 (x1382 x2226))))
(assert (x609 x2246))
(assert (x609 x2762))
(assert (x4289 x549))
(assert (= (x631 x4111) (ite (= x4486 x4111) x654 (x4297 x4111))))
(assert (x609 x3452))
(assert (x4289 x2762))
(assert (x609 x3399))
(assert (x609 x1296))
(assert (= (ite (and x5003 x1932) (x3097 x1315) (x3596 x1315)) (x254 x1315)))
(assert (x609 x3153))
(assert (= (ite (= x4111 x3886) x3146 (x984 x4111)) (x4751 x4111)))
(assert (x745 x3048))
(assert (= x191 (x4290 (x5032 x191))))
(assert (= (x5032 115792089210356248756420345215482394403581256910207104449633294546465451933695) (x4755 115792089210356248756420345215482394403581256910207104449633294546465451933695)))
(assert (x745 x1473))
(assert (x609 x1719))
(assert (x609 x64))
(assert (= x3845 (and x5382 (not x4265))))
(assert (= (ite (= x3807 x3057) x4939 (x2018 x3057)) (x3178 x3057)))
(assert (= (x4561 x1870) (ite (= x2907 x1870) 0 (x1382 x1870))))
(assert (= (ite (= x3807 x4438) x4939 (x2018 x4438)) (x3178 x4438)))
(assert (x609 x4519))
(assert (x609 x15))
(assert (x609 x1831))
(assert (= (ite (= x1161 x601) x2324 (x3508 x601)) (x1542 x601)))
(assert (= (x3178 x1315) (ite (= x1315 x3807) x4939 (x2018 x1315))))
(assert (x609 x1938))
(assert (= (ite (= x1537 x1610) x629 (x889 x1537)) (x2928 x1537)))
(assert (= (x2474 x4642) (ite (and x4600 (not x4298) x4451) (x4816 x4642) (x1840 x4642))))
(assert (x609 x5021))
(assert (x609 x5))
(assert (x745 x4554))
(assert (x609 x753))
(assert (x609 x3255))
(assert (= (and x340 x291) x1955))
(assert (x609 x4446))
(assert (x609 x245))
(assert (x609 x199))
(assert (x609 x4845))
(assert (x3829 x4512 x4742))
(assert (x609 x2026))
(assert (x609 x3720))
(assert (x609 x4375))
(assert (= (ite (= x408 x4642) x703 (x1395 x4642)) (x3181 x4642)))
(assert (= (or (and x1955 (not x4827)) (and (not x291) x340) (and x1174 x4777)) x3803))
(assert (x609 x5193))
(assert (x609 x4044))
(assert (= x2005 (x4290 (x5032 x2005))))
(assert (x745 x4885))
(assert (= (x4221 x4517) (ite (= x4517 x3303) x1093 (x1849 x4517))))
(assert (x609 x4747))
(assert (x745 x602))
(assert (= (x3423 x1722) (ite (and x4580 (not x5307) x1226) (x3532 x1722) (x5334 x1722))))
(assert (=> (> (+ 10000 1) x3648) (= (x5032 x3648) (x4755 x3648))))
(assert (= 0 (x493 x3932)))
(assert (= x3657 (and x1647 (not x3967))))
(assert (x609 x573))
(assert (= (x1339 x3448) (ite (= x2291 x3448) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2608 x3448))))
(assert (x609 x1847))
(assert (x609 x5324))
(assert (x609 x1194))
(assert (= (=> (= (= x1829 0) x1156) (and (=> x1156 x5043) (=> (not x1156) x1124))) x1412))
(assert (x609 x2845))
(assert (x609 x3455))
(assert (= (ite (= x2603 x3932) x613 (x569 x3932)) (x3474 x3932)))
(assert (x609 x4008))
(assert (x609 x4015))
(assert (x745 x648))
(assert (x745 x2221))
(assert (x609 x3499))
(assert (= (x183 x3795) (ite (and x90 x3318) (ite (and (not x2093) x4082 x639) (x4474 x3795) (x2524 x3795)) (x2524 x3795))))
(assert (= x567 (and x3288 (not x3258))))
(assert (= (ite (= x1610 x1661) x629 (x889 x1661)) (x2928 x1661)))
(assert (x609 x1325))
(assert (= (ite (and x5103 (not x2405) x3292) (x3205 x2489) (x4651 x2489)) (x5167 x2489)))
(assert (= (ite (= x4225 x2644) x4534 (x588 x2644)) (x1910 x2644)))
(assert (x745 x139))
(assert (= (ite (= x5208 x2429) x1282 (x2635 x5208)) (x1796 x5208)))
(assert (= (x1542 x4586) (ite (= x1161 x4586) x2324 (x3508 x4586))))
(assert (= (ite (= x1115 x970) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x970)) (x4651 x970)))
(assert (x609 x412))
(assert (= 0 (x493 (x1960 (+ 32 x2672)))))
(assert (x609 x4227))
(assert (= (x4816 x1883) (ite (and x4360 x2875 x4600 (not x1887) x4192 x4451) (x4618 x1883) (ite (and x4600 (not x4360) x2875 x4451 x4192) (x679 x1883) (ite (and (not x4192) x2875 x4600 x4451) (x1522 x1883) (ite (and x4600 (not x2875) x4451) (x631 x1883) (x2091 x1883)))))))
(assert (= (x4208 x3447) (ite (= x5283 x3447) x1386 (x1956 x3447))))
(assert (x609 x1491))
(assert (x609 x383))
(assert (= (ite (= x970 x2867) x4439 (x2356 x970)) (x3934 x970)))
(assert (x609 x5087))
(assert (= (=> (and (= x3623 (> x269 0)) (= x269 (x4873 (x5032 x4395))) (= (x5313 1461501637330902918203684832716283019655932542975 x3074) x4395)) (and (=> x3623 x4791) (=> (and (= x1822 x2241) (not x3623) (= x4961 (x1695 (x5032 274184521717934524641157099916833587240))) (= x4734 x4961)) x4081))) x119))
(assert (x609 x1708))
(assert (x609 x3843))
(assert (x609 x365))
(assert (= (x4584 (x5032 x3187)) (ite (and x4451 x4600) (ite (and x4600 x4193 x4451) (x349 (x5032 x3187)) (x3349 (x5032 x3187))) (x3349 (x5032 x3187)))))
(assert (x609 x408))
(assert (x609 x108))
(assert (x609 x3666))
(assert (x609 x5081))
(assert (= (x534 x4773) (ite (= x806 x4773) x3630 (x1225 x4773))))
(assert (= (x559 x2046) (ite (and x338 (not x1973) x4856) (x1106 x2046) (x2086 x2046))))
(assert (x609 x1863))
(assert (x609 x2836))
(assert (= (and x3527 (not x3275)) x3554))
(assert (x609 x3326))
(assert (= x2643 (x4290 (x5032 x2643))))
(assert (= (ite (and x4600 x4451) (ite (and x4600 x4451 x4193) (x3501 x2678) (x4954 x2678)) (x4954 x2678)) (x149 x2678)))
(assert (x609 x4050))
(assert (x609 x47))
(assert (= (x4208 x5351) (ite (= x5351 x5283) x1386 (x1956 x5351))))
(assert (= (x3835 x2539) (ite x748 (ite x3421 (x3132 x2539) (x3614 x2539)) (x416 x2539))))
(assert (x609 x4687))
(assert (x745 x3605))
(assert (x2556 x2078 x298 x544 x1792))
(assert (x609 x225))
(assert (= (x984 x4642) (ite (= x185 x4642) x3414 (x3007 x4642))))
(assert (x609 x1536))
(assert (x609 x1467))
(assert (= (ite (= x1161 x3054) x2324 (x3508 x3054)) (x1542 x3054)))
(assert (x609 x1920))
(assert (= (x550 x4837) (ite (= x4837 x487) 0 (x2852 x4837))))
(assert (= (ite (= x4944 x2226) 0 (x2646 x2226)) (x156 x2226)))
(assert (x609 x4))
(assert (x609 x1772))
(assert (= (x4755 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x5032 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (ite (= x3553 x1661) x2175 (x3588 x1661)) (x889 x1661)))
(assert (= (ite (= x3303 x1556) x1093 (x1849 x1556)) (x4221 x1556)))
(assert (x609 x69))
(assert (x609 x148))
(assert (x3829 x4107 x3826))
(assert (x609 x255))
(assert (x745 x827))
(assert (= x2525 (or (and (not x1672) x4338) (and x3006 x783) (and x979 x4007) (and x516 x4112) (and x4082 x2093) (and x1614 (not x665)) (and x1326 x3053) (and x4853 x4638) (and x3047 x2857) (and x4597 x3219) (and x5274 x3078) (and x726 x2958) (and x1043 (not x3123)) (and x2080 x1683) (and x1147 (not x4688)) (and x5155 x3789) (and (not x3798) x3038) (and x5236 x5088) (and (not x1214) x296) (and x1670 (not x2729)) (and x5056 (not x608)) (and x1540 x3122) (and (not x5312) x2388) (and (not x2627) x3676) (and x4852 x3431) (and x1366 x4254) (and x3443 x250) (and x884 x3357) (and x5014 x3800) (and x1156 x5048) (and (not x2062) x2300) (and x2838 (not x2450)) (and x2848 x646) (and x1596 x2891) (and x3368 x1346) (and x8 (not x767)) (and x3381 x3948) (and x1341 x3906) (and x90 (not x3318)) (and x5342 x3548) (and x5085 x5070) (and x3947 x2708) (and (not x1818) x3803) (and (not x4740) x3878) (and x4096 (not x236)) (and x4625 x3191) (and x2391 (not x1980)) (and x1955 x4827) (and x4947 x5385) (and x1470 x3840) (and x60 x1620) (and x2074 x3897) (and x1607 x3380) (and x4423 (not x4681)) (and x397 x1119) (and (not x3564) x2956) (and x1317 x530) (and x2716 (not x582)) (and x433 x1084) (and (not x465) x1320) (and x23 x4460) (and x1801 x4215) (and x1064 x4599))))
(assert (= 0 (x4727 x3057)))
(assert (= (x267 x2560) (ite (and x90 x3318) (x1837 x2560) (x4561 x2560))))
(assert (=> (< (- x981 1) 10000) (= (x5032 x981) (x4755 x981))))
(assert (x609 x2447))
(assert (x609 x2682))
(assert (= (ite (= x1042 x4438) 274184521717934524641157099916833587240 (x5299 x4438)) (x1638 x4438)))
(assert (= x3888 (and (not x3636) x1756)))
(assert (= (x290 x2865) (ite (and x2884 (not x1716) x2906) (x422 x2865) (x4977 x2865))))
(assert (= (ite (= x2536 x2489) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x2489)) (x4184 x2489)))
(assert (= x764 (or (and x3717 x657) (and x4838 x2654) (and x1294 x3846))))
(assert (x609 x1664))
(assert (x609 x3856))
(assert (x3649 x4080 x4039 x3466 x2486))
(assert (x609 x3077))
(assert (= (ite (= x3932 x3339) 274184521717934524641157099916833587240 (x1125 x3932)) (x343 x3932)))
(assert (x609 x2601))
(assert (= (ite (= (x1960 (+ x53 32)) x1255) x4340 (x1886 (x1960 (+ x53 32)))) (x3673 (x1960 (+ 32 x53)))))
(assert (= (ite (= x2489 x4225) x4534 (x588 x2489)) (x1910 x2489)))
(assert (= 0 (x3729 x1870)))
(assert (= (or x2394 x1630) x874))
(assert (= x2300 (and x4096 x236)))
(assert (x609 x1908))
(assert (x609 x3779))
(assert (= (or (and (not x1517) x2772) x4601) x2185))
(assert (= (ite x4453 (ite x3665 (x3386 x788) (ite x2813 (x968 x788) (x1685 x788))) (x3386 x788)) (x3207 x788)))
(assert (x4289 x192))
(assert (x609 x4746))
(assert (x609 x1184))
(assert (= (x3632 x1722) (ite (= x1722 x2363) x396 (x2862 x1722))))
(assert (= (x2707 x5309) (ite (= x5309 (x4755 0)) x2630 (x4349 x5309))))
(assert (x609 x5077))
(assert (x609 x1548))
(assert (= 0 (x493 (x1960 (+ x2672 64)))))
(assert (x609 x3725))
(assert (x609 x1512))
(assert (x609 x4750))
(assert (= x691 (or (and x2753 (not x3251)) x3220)))
(assert (x609 x3148))
(assert (x609 x2574))
(assert (= (x1675 x2527) (ite (and x792 x2673 (not x1416)) (x2427 x2527) (x3346 x2527))))
(assert (= (x1452 x276) (ite (= x276 x2588) x3533 (x3982 x276))))
(assert (= x1205 (=> (and (= x3865 (x2113 (x5032 x3920) (x4755 209) 0)) (= (> 1 x4478) x1023) (= x4478 (x4804 x3865))) (and (=> x1023 x572) (=> (not x1023) x5297)))))
(assert (= (ite (= x5283 x1609) x1386 (x1956 x1609)) (x4208 x1609)))
(assert (x609 x2404))
(assert (x609 x2440))
(assert (= (ite (= x1618 x4944) 0 (x2646 x1618)) (x156 x1618)))
(assert (= (x154 (- x1870 x4253)) 0))
(assert (x745 x890))
(assert (= (ite (= x4280 x1161) x2324 (x3508 x4280)) (x1542 x4280)))
(assert (x4661 x2831 x959))
(assert (= (x4561 x2560) (ite (= x2907 x2560) 0 (x1382 x2560))))
(assert (= x3804 (and (not x1342) x361)))
(assert (= x4544 (=> (and (= x2920 (x5313 1461501637330902918203684832716283019655932542975 x3647)) (= x3798 (= x2920 x3647)) (= x80 x395)) (and (=> x3798 x4348) (=> (not x3798) x5043)))))
(assert (x609 x4663))
(assert (= (ite (and x2185 x763) (ite (and x1516 x763 x2185) (x1322 x3942) (x731 x3942)) (x731 x3942)) (x864 x3942)))
(assert (= (ite (and (not x2405) x5103 x3292) (x3205 x3436) (x4651 x3436)) (x5167 x3436)))
(assert (x745 x135))
(assert (x609 x3639))
(assert (x609 x2076))
(assert (x609 x752))
(assert (x609 x3194))
(assert (= (ite (= x5071 x3057) x2253 (x3178 x3057)) (x2959 x3057)))
(assert (x609 x3313))
(assert (x609 x4832))
(assert (= (ite (and x2185 x763) (ite (and x2185 x763 x1516) (x1700 (x5032 274184521717934524641157099916833587240)) (x4567 (x5032 274184521717934524641157099916833587240))) (x4567 (x5032 274184521717934524641157099916833587240))) (x1695 (x5032 274184521717934524641157099916833587240))))
(assert (= (ite (and x1862 (not x1352) x3692) (x425 x3932) (x3379 x3932)) (x4299 x3932)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639908 (x4290 (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639908))))
(assert (= x2762 (x4290 (x5032 x2762))))
(assert (= (and (not x1023) x1323) x4775))
(assert (= x1333 (=> (and (= false x2823) (= false x2364) (not (< x1422 1)) (= x1422 (x1535 (x4755 0)))) x1277)))
(assert (= (x3576 x835) (ite (= x835 x3865) x3793 (x4804 x835))))
(assert (= 826074471 (x4290 (x4755 826074471))))
(assert (x609 x1964))
(assert (x609 x4517))
(assert (x609 x2152))
(assert (= (ite (= x3775 x1715) x4413 (x1522 x3775)) (x679 x3775)))
(assert (x609 x3572))
(assert (= (or x1805 (and x1098 (not x4875))) x2813))
(assert (= (ite (= x311 x4813) x5273 (x1702 x311)) (x5362 x311)))
(assert (x609 x3839))
(assert (= (ite (= x5283 x2548) x1386 (x1956 x2548)) (x4208 x2548)))
(assert (x609 x5002))
(assert (x609 x3686))
(assert (= (x889 x4773) (ite (= x4773 x3553) x2175 (x3588 x4773))))
(assert (= (ite (and x792 x2651 x2673 x1391 x4469 (not x503)) (x2928 x4833) (ite (and x4469 x2673 x1391 (not x2651) x792) (x889 x4833) (ite (and x4469 (not x1391) x2673 x792) (x3588 x4833) (ite (and x792 (not x4469) x2673) (x1796 x4833) (x509 x4833))))) (x2427 x4833)))
(assert (x745 x4953))
(assert (= (x559 x4642) (ite (and x338 x4856 (not x1973)) (x1106 x4642) (x2086 x4642))))
(assert (= (x631 x2046) (ite (= x2046 x4486) x654 (x4297 x2046))))
(assert (=> (> (+ 10000 1) x360) (= (x5032 x360) (x4755 x360))))
(assert (x609 x5040))
(assert (x609 x2006))
(assert (x609 x1636))
(assert (x609 x2320))
(assert (x609 x1705))
(assert (x609 x4084))
(assert (= (x4561 x3839) (ite (= x3839 x2907) 0 (x1382 x3839))))
(assert (x745 x4107))
(assert (x609 x2154))
(assert (x609 x305))
(assert (x609 x5329))
(assert (= (=> (and (= x4681 (= x5278 x1286)) (= x4049 x4258) (= x5278 (x5313 1461501637330902918203684832716283019655932542975 x1286))) (and (=> (not x4681) x5043) (=> x4681 x2262))) x4348))
(assert (= (ite (= x1586 x4225) x4534 (x588 x1586)) (x1910 x1586)))
(assert (x609 x5285))
(assert (x609 x958))
(assert (x609 x1208))
(assert (x609 x2189))
(assert (x609 x2110))
(assert (=> (< (- x4310 1) 10000) (= (x5032 x4310) (x4755 x4310))))
(assert (x609 x1733))
(assert (x745 x4669))
(assert (= (x2707 x4280) (ite (= x4280 (x4755 0)) x2630 (x4349 x4280))))
(assert (x609 x4439))
(assert (x609 x3915))
(assert (= (x5032 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x4755 115792089210356248756420345214020892766250353992003419616917011526809519390720)))
(assert (= (x3344 x4690) (ite (= x4690 x3778) x1806 (x4728 x4690))))
(assert (x609 x3434))
(assert (= (x3181 x3932) (ite (= x408 x3932) x703 (x1395 x3932))))
(assert (x609 x2827))
(assert (= (ite (and (not x5359) x2185 x763) (x808 x2644) (x3946 x2644)) (x5124 x2644)))
(assert (x609 x3707))
(assert (x609 x1504))
(assert (= 0 (x493 x2548)))
(assert (= (ite (= x3177 x3477) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x3477)) (x4977 x3477)))
(assert (= 0 (x1579 (x712 x613 x494 x1358 x949 x549 x3199 x1299 x789 x4100))))
(assert (= (x4290 (x5032 x814)) x814))
(assert (x609 x859))
(assert (x4289 x1288))
(assert (=> (< (- x1262 1) 10000) (= (x5032 x1262) (x4755 x1262))))
(assert (= (=> (= 0 x2376) x2733) x117))
(assert (= (x3934 x1315) (ite (= x1315 x2867) x4439 (x2356 x1315))))
(assert (x609 x2465))
(assert (x609 x1713))
(assert (x3239 x4195 x1072))
(assert (=> (< (- x3690 1) 10000) (= (x4755 x3690) (x5032 x3690))))
(assert (x609 x2454))
(assert (= x2022 (=> (= x1342 (= x871 274184521717934524641157099916833587240)) (and (=> (not x1342) x3372) (=> (and x1342 (= (ite x1342 1 0) x662)) x5292)))))
(assert (= (x3218 x5271) (ite (= x5271 x2142) x3483 (x3635 x5271))))
(assert (x609 x1285))
(assert (= (x1675 x5271) (ite (and x792 x2673 (not x1416)) (x2427 x5271) (x3346 x5271))))
(assert (x609 x1748))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x4290 (x4755 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (x745 x3279))
(assert (= (x4221 (x1960 (+ x2299 96))) (ite (= x3303 (x1960 (+ x2299 96))) x1093 (x1849 (x1960 (+ 96 x2299))))))
(assert (= (x1695 (x5032 x5105)) (ite (and x763 x2185) (ite (and x2185 x1516 x763) (x1700 (x5032 x5105)) (x4567 (x5032 x5105))) (x4567 (x5032 x5105)))))
(assert (x609 x3240))
(assert (x609 x3963))
(assert (x609 x910))
(assert (x609 x1249))
(assert (x79 x1016 x66 x4884 x5018))
(assert (x745 x1062))
(assert (x609 x3156))
(assert (= x2657 (=> (and (= 0 x4955) (= x2829 x626)) x3165)))
(assert (= (ite (= x3553 x3952) x2175 (x3588 x3952)) (x889 x3952)))
(assert (x609 x1378))
(assert (= (ite (= x4225 x4783) x4534 (x588 x4783)) (x1910 x4783)))
(assert (x609 x327))
(assert (x609 x779))
(assert (= (x2707 x3669) (ite (= x3669 (x4755 0)) x2630 (x4349 x3669))))
(assert (x745 x1286))
(assert (= (=> (and (= x838 (x2113 (x5032 x852) (x4755 208) 0)) (= (x42 x838) x5112) (= x4752 (x5313 1461501637330902918203684832716283019655932542975 x5112)) (= (= x4752 0) x3258)) (and (=> (not x3258) x4301) (=> x3258 x117))) x2090))
(assert (= (ite (and x4451 x4600) (x4329 x3932) (x550 x3932)) (x3359 x3932)))
(assert (= (ite (= x2865 x1946) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x2865)) (x3032 x2865)))
(assert (= 0 (x4284 (- x4690 x2721))))
(assert (=> (= (x712 x613 x494 x1358 x949 x549 x3199 x1299 x789 x4100) (x712 x4439 x3269 x4686 x2846 x191 x1344 x2075 x3044 x4100)) (and (= x789 x3044) (= x3199 x1344) (= x1358 x4686) (= x1299 x2075) (= x949 x2846) (= x3269 x494) (= x4439 x613) (= x549 x191))))
(assert (= (ite (= x4486 x1883) x654 (x4297 x1883)) (x631 x1883)))
(assert (= (ite (= x2536 x970) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x970)) (x4184 x970)))
(assert (= x2973 (and x5069 (not x4969))))
(assert (= (ite (and x4451 x4600) (ite (and x4451 x4600 x4193) (x2164 x4797) (x3930 x4797)) (x3930 x4797)) (x1229 x4797)))
(assert (x609 x5394))
(assert (= (x1796 x4967) (ite (= x2429 x4967) x1282 (x2635 x4967))))
(assert (= (x1225 x5067) (ite (= x5067 x332) x3571 (x1853 x5067))))
(assert (= (ite (= x5271 x211) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x5271)) (x4466 x5271)))
(assert (= (x1542 x1350) (ite (= x1350 x1161) x2324 (x3508 x1350))))
(assert (= (x1655 x3914) (ite (= x4252 x3914) 0 (x5379 x3914))))
(assert (= (x4202 x3104) (ite (and x4577 x3528) (x559 x3104) (ite (and x4432 x5210) (x2503 x3104) (x2755 x3104)))))
(assert (= (ite (= x2560 x3295) x112 (x3589 x2560)) (x3635 x2560)))
(assert (x609 x5054))
(assert (x609 x4103))
(assert (x609 x5117))
(assert (= (x2195 x3022) (ite (= x3498 x3022) x2754 (x42 x3022))))
(assert (= (ite (= x2527 x2429) x1282 (x2635 x2527)) (x1796 x2527)))
(assert (x609 x111))
(assert (x745 x2173))
(assert (x609 x1519))
(assert (x609 x4732))
(assert (=> (> (+ 10000 1) x3823) (= (x5032 x3823) (x4755 x3823))))
(assert (x609 x4389))
(assert (x609 x5384))
(assert (= (ite (and x3318 x90) (ite (and (not x2093) x4082 x639) (x5215 (x5032 x353)) (x326 (x5032 x353))) (x326 (x5032 x353))) (x4718 (x5032 x353))))
(assert (=> (> (+ 10000 1) x2601) (= (x5032 x2601) (x4755 x2601))))
(assert (= 0 (x1579 (x712 x4439 x3269 x4686 x2846 x191 x1344 x2075 x3044 x4100))))
(assert (x745 x4132))
(assert (x609 x988))
(assert (x4289 x4747))
(assert (x4468 x4669 x4174 x5248 x2371))
(assert (= (x1655 x2488) (ite (= x2488 x4252) 0 (x5379 x2488))))
(assert (x609 x1443))
(assert (= (ite (= x4773 x4745) x1390 (x1796 x4773)) (x3588 x4773)))
(assert (= (ite (= x3303 x698) x1093 (x1849 x698)) (x4221 x698)))
(assert (x609 x4213))
(assert (= (ite (and (not x4298) x4600 x4451) (x4816 x5351) (x1840 x5351)) (x2474 x5351)))
(assert (= (x4466 x4967) (ite (= x211 x4967) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x4967))))
(assert (x609 x1550))
(assert (x4289 x561))
(assert (= (x3386 x3049) (ite (and x2716 (not x472) x582) (x4353 x3049) (x1101 x3049))))
(assert (= (x4755 274184521717934524641157099916833587206) (x5032 274184521717934524641157099916833587206)))
(assert (x609 x3522))
(assert (x609 x5264))
(assert (x4468 x3399 x3513 x2804 x4123))
(assert (x745 x5321))
(assert (= (ite (= x835 (x4755 0)) x4687 (x212 x835)) (x42 x835)))
(assert (x3829 x3371 x87))
(assert (= (x3007 x3932) (ite (= x1369 x3932) x4375 (x3032 x3932))))
(assert (x609 x3882))
(assert (= (x4674 x3942) (ite x748 (ite x3421 (x479 x3942) (x233 x3942)) (x5266 x3942))))
(assert (x609 x4108))
(assert (x609 x1808))
(assert (x609 x3263))
(assert (= (x290 x5351) (ite (and x2884 x2906 (not x1716)) (x422 x5351) (x4977 x5351))))
(assert (= (x4208 x5086) (ite (= x5086 x5283) x1386 (x1956 x5086))))
(assert (= (x1638 x2644) (ite (= x2644 x1042) 274184521717934524641157099916833587240 (x5299 x2644))))
(assert (x609 x2408))
(assert (= x5170 (and x735 (not x3570))))
(assert (x609 x4424))
(assert (x609 x4735))
(assert (x609 x3807))
(assert (= (ite (= x5173 x4788) x1755 (x679 x5173)) (x4618 x5173)))
(assert (x609 x3505))
(assert (= x401 (and x3535 x4088)))
(assert (x745 x1034))
(assert (x609 x2276))
(assert (x609 x3627))
(assert (= x3487 (=> (and (= x742 x1283) (= x4743 x271)) x1233)))
(assert (x609 x2865))
(assert (x609 x5023))
(assert (= (x534 x4967) (ite (= x4967 x806) x3630 (x1225 x4967))))
(assert (x609 x4355))
(assert (= x5236 (or x4409 x5001 x1420)))
(assert (x745 x4588))
(assert (x609 x3814))
(assert (= (ite (and x90 x3318) (ite (and x639 x4082 (not x2093)) (x3855 x2609) (x4851 x2609)) (x4851 x2609)) (x4431 x2609)))
(assert (= (x42 x4280) (ite (= x4280 (x4755 0)) x4687 (x212 x4280))))
(assert (= x3920 (x4290 (x5032 x3920))))
(assert (x609 x2778))
(assert (x609 x3985))
(assert (= (x1339 x3592) (ite (= x2291 x3592) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2608 x3592))))
(assert (= (x889 x5271) (ite (= x5271 x3553) x2175 (x3588 x5271))))
(assert (x3829 x1623 x2557))
(assert (x609 x1865))
(assert (x609 x3772))
(assert (= (ite (= x2644 x2291) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2608 x2644)) (x1339 x2644)))
(assert (= (x889 x3708) (ite (= x3553 x3708) x2175 (x3588 x3708))))
(assert (x609 x471))
(assert (x609 x5296))
(assert (= (ite (and x3292 x5103 (not x2405)) (x3205 x953) (x4651 x953)) (x5167 x953)))
(assert (x1139 x4865 x2807 x278 x1804))
(assert (x609 x703))
(assert (x609 x494))
(assert (x3641 x2500 x2640))
(assert (x745 x644))
(assert (x4289 x1047))
(assert (x609 x5176))
(assert (x3641 x3720 x4407))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2713) (= x2605 (x2113 (x5032 x1486) (x4755 1) 0)) (= x5228 (x4062 (- x2061 x3470))) (= x2135 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= (x4062 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3470)) x592) (= x15 274184521717934524641157099916833587240) (= x2713 (x3982 x2135)) (= x2835 (> x2713 x592)) (>= x2713 0)) (and (=> x2835 x1483) (=> (not x2835) x3362))) x62))
(assert (= (ite (= x4322 x5067) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3668 x5067)) (x3589 x5067)))
(assert (= x961 (x4290 (x5032 x961))))
(assert (= (x1853 x3597) (ite (= x2892 x3597) x239 (x4466 x3597))))
(assert (x609 x1770))
(assert (x609 x3186))
(assert (= (x42 x3498) (ite (= x3498 (x4755 0)) x4687 (x212 x3498))))
(assert (= (ite (= x1115 x1722) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x1722)) (x4651 x1722)))
(assert (x609 x683))
(assert (= (x493 x2214) 0))
(assert (= (x2396 x2644) (ite (= x2644 x4744) 274184521717934524641157099916833587240 (x5234 x2644))))
(assert (= (x4284 (- x2560 x2721)) 0))
(assert (x609 x4767))
(assert (= (=> (and (= (x1960 (+ x3985 x225)) x487) (= x225 x2704) (= (= x3970 0) x3716) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2889) (and (> 32 x2889) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2889) true)))) (= (x290 x2704) x3970) (not (= x5054 0)) (= x3985 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x251)) (= (x1960 (+ x2889 31)) x251)) (and (=> (and (not x3716) (= x4767 (x1960 (+ 164 x487))) (= x1544 (x1960 (+ 64 x455))) (= (x4873 (x5032 x3225)) x3293) (= x3225 (x5313 1461501637330902918203684832716283019655932542975 x4305)) (not (= 0 x2110)) (= (x1960 (+ 64 x3902)) x455) (= x2759 (x5313 1461501637330902918203684832716283019655932542975 x3892)) (= x486 (x1960 (+ 4 x487))) (= x3666 (x1960 (+ x268 64))) (= (x1960 (+ x3902 32)) x268) (= x1978 (< 0 x2110)) (= x3902 x486) (or (and x1978 x776 x3128 (= (<= x2316 (x1231 (x5032 274184521717934524641157099916833587240))) x3128) (= x4086 (x4047 (x5032 x3225))) (= (= (x1231 (x5032 x3225)) x4086) x776) (> 4294967296 x663) (= (x4047 (x5032 274184521717934524641157099916833587240)) x2316)) (not x1978)) (not (= x3293 0))) x1856) (=> x3716 x4531))) x5284))
(assert (x609 x2482))
(assert (= (x1542 x3669) (ite (= x3669 x1161) x2324 (x3508 x3669))))
(assert (x609 x694))
(assert (= (ite (and (not x2405) x3292 x5103) (x3205 x4214) (x4651 x4214)) (x5167 x4214)))
(assert (= x3887 (=> (and (= (x42 x4280) x273) (= (x2113 (x5032 x852) (x4755 208) 0) x4280) (= (x5313 1461501637330902918203684832716283019655932542975 x273) x871) (= (= 0 x871) x2148)) (and (=> x2148 x117) (=> (not x2148) x2022)))))
(assert (x609 x3320))
(assert (= (x4184 x2806) (ite (= x2536 x2806) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x2806))))
(assert (= (x3729 192) 0))
(assert (x609 x5045))
(assert (= (x3934 x4783) (ite (= x2867 x4783) x4439 (x2356 x4783))))
(assert (= (ite (and x4625 x1000 (not x3191)) (x2895 x1537) (x2155 x1537)) (x3157 x1537)))
(assert (= (ite (= x282 x4517) 0 (x4965 x4517)) (x1571 x4517)))
(assert (x609 x3954))
(assert (= (x4290 (x6 x1874 2)) (+ 2 (x4290 x1874))))
(assert (= (and x4246 (not x4063)) x1686))
(assert (x609 x2163))
(assert (= (and (not x89) x4001) x1647))
(assert (= (x1225 x3049) (ite (= x332 x3049) x3571 (x1853 x3049))))
(assert (= x2842 (and (not x2219) x2963)))
(assert (= (x3107 x4832) (ite (= x4832 x280) x2407 (x4184 x4832))))
(assert (x745 x330))
(assert (= (+ (x4290 x4491) 2) (x4290 (x6 x4491 2))))
(assert (= (x808 x3448) (ite (and x2185 (not x3343) x4042 x2210 x809 x763) (x1910 x3448) (ite (and (not x2210) x763 x2185 x4042 x809) (x588 x3448) (ite (and x2185 (not x4042) x809 x763) (x2959 x3448) (ite (and (not x809) x2185 x763) (x3178 x3448) (x4220 x3448)))))))
(assert (x609 x3994))
(assert (= (ite (and x2651 x792 x1391 x4469 (not x503) x2673) (x2928 x788) (ite (and x792 x1391 x4469 x2673 (not x2651)) (x889 x788) (ite (and (not x1391) x2673 x792 x4469) (x3588 x788) (ite (and x792 x2673 (not x4469)) (x1796 x788) (x509 x788))))) (x2427 x788)))
(assert (= (x631 x4330) (ite (= x4330 x4486) x654 (x4297 x4330))))
(assert (= (ite (= x1618 x1255) x4340 (x1886 x1618)) (x3673 x1618)))
(assert (= x605 (and x2919 (not x436))))
(assert (= (ite x2394 (ite x764 (x1298 x3795) (x4579 x3795)) (x4257 x3795)) (x1681 x3795)))
(assert (x609 x3680))
(assert (= (x3359 x2865) (ite (and x4600 x4451) (x4329 x2865) (x550 x2865))))
(assert (x609 x3334))
(assert (= (ite x2394 (ite x764 (x4984 (x5032 x4213)) (x1695 (x5032 x4213))) (x689 (x5032 x4213))) (x2044 (x5032 x4213))))
(assert (= (ite (= x2226 x3778) x1806 (x4728 x2226)) (x3344 x2226)))
(assert (x609 x3382))
(assert (x609 x1617))
(assert (x609 x1851))
(assert (x609 x2808))
(assert (= (ite (and (not x1355) x4731 x1862 x2461 x3692 x3802) (x3307 x3932) (ite (and (not x2461) x4731 x1862 x3692 x3802) (x1678 x3932) (ite (and x3802 x3692 (not x4731) x1862) (x5006 x3932) (ite (and (not x3802) x3692 x1862) (x3939 x3932) (x16 x3932))))) (x425 x3932)))
(assert (= 0 (x3729 x4773)))
(assert (x3829 x1928 x4390))
(assert (= (x1571 x2806) (ite (= x2806 x282) 0 (x4965 x2806))))
(assert (= (ite (= x4744 x970) 274184521717934524641157099916833587240 (x5234 x970)) (x2396 x970)))
(assert (= (ite (= x3447 x487) 0 (x2852 x3447)) (x550 x3447)))
(assert (x609 x711))
(assert (= (x4977 x5173) (ite (= x3177 x5173) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x5173))))
(assert (= (uninterp_mod (* x4305 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3135 x4305 96)))
(assert (x745 x758))
(assert (= 1845821197 (x4290 (x4755 1845821197))))
(assert (= (ite (= x1537 x1255) x4340 (x1886 x1537)) (x3673 x1537)))
(assert (x609 x1383))
(assert (x4289 x2034))
(assert (x609 x3999))
(assert (x609 x444))
(assert (x609 x1780))
(assert (= (x156 x4690) (ite (= x4944 x4690) 0 (x2646 x4690))))
(assert (x3239 x3996 x3226))
(assert (= (ite (= x4745 x5271) x1390 (x1796 x5271)) (x3588 x5271)))
(assert (= x5073 (and (not x1998) x4385)))
(assert (x609 x2456))
(assert (= (x2155 x2560) (ite (= x2560 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x2560))))
(assert (= (ite (and x2875 x4600 x4451 x4360 x4192 (not x1887)) (x4618 x3775) (ite (and x4192 (not x4360) x4600 x4451 x2875) (x679 x3775) (ite (and (not x4192) x4451 x4600 x2875) (x1522 x3775) (ite (and x4600 (not x2875) x4451) (x631 x3775) (x2091 x3775))))) (x4816 x3775)))
(assert (= (ite (and x2838 x2450 (not x3585)) (x2952 x5271) (x5249 x5271)) (x374 x5271)))
(assert (= (ite (and x90 x3318) (ite (and x4082 x639 (not x2093)) (x3855 x2539) (x4851 x2539)) (x4851 x2539)) (x4431 x2539)))
(assert (= (=> (and (= x3498 (x2113 (x5032 x852) (x4755 210) 0)) (= 0 x2998) (= (= x3544 0) x4648) (= x1976 (x2113 (x5032 x852) (x4755 208) 0)) (= (x5313 1461501637330902918203684832716283019655932542975 x1623) x3544) (= (x42 x3498) x1958) (= (x2195 x1976) x1623) (= x1212 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1958)) (= x1212 x2754)) (and (=> (not x4648) x488) (=> x4648 x117))) x4667))
(assert (x745 x826))
(assert (x609 x644))
(assert (x609 x648))
(assert (= (=> (= x4076 x2736) x4374) x2310))
(assert (= (x2463 x1661) (ite (and (not x4638) x4853 x1961) (x3043 x1661) (x4962 x1661))))
(assert (x4289 x1367))
(assert (= (and x370 (not x2980)) x2703))
(assert (= (x4755 1845821197) (x5032 1845821197)))
(assert (x609 x3825))
(assert (=> (< (- x1015 1) 10000) (= (x4755 x1015) (x5032 x1015))))
(assert (x609 x2500))
(assert (x609 x3052))
(assert (x609 x3872))
(assert (x609 x1369))
(assert (x609 x751))
(assert (= (x4208 x3775) (ite (= x5283 x3775) x1386 (x1956 x3775))))
(assert (= (x4290 (x4755 2335792882)) 2335792882))
(assert (= (ite (= x211 x1661) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x1661)) (x4466 x1661)))
(assert (x609 x2191))
(assert (= (ite (= x4111 x3339) 274184521717934524641157099916833587240 (x1125 x4111)) (x343 x4111)))
(assert (x609 x2040))
(assert (= (ite (and x792 x2673 (not x1416)) (x2427 x4690) (x3346 x4690)) (x1675 x4690)))
(assert (= (ite (= (x4755 0) x685) x2630 (x4349 x685)) (x2707 x685)))
(assert (x609 x3651))
(assert (= (+ (x4290 x1988) 2) (x4290 (x6 x1988 2))))
(assert (= (and x2703 (not x987)) x3603))
(assert (x745 x5002))
(assert (= x5072 (=> (and (= x2837 (> x2024 x205)) (= x205 (x1960 (+ x2024 x4260)))) (and (=> (not x2837) x4126) (=> x2837 x4581)))))
(assert (x609 x5275))
(assert (x609 x4916))
(assert (x609 x4455))
(assert (x609 x3105))
(assert (= (x4184 x1722) (ite (= x1722 x2536) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x1722))))
(assert (= x3053 (and (not x3191) x4625)))
(assert (= (ite (= x2750 x4225) x4534 (x588 x2750)) (x1910 x2750)))
(assert (x745 x5233))
(assert (x745 x1624))
(assert (= (and x1683 (not x2080)) x2074))
(assert (x609 x1306))
(assert (x609 x5380))
(assert (= (ite (and x2906 x2884 (not x1716)) (x422 x5176) (x4977 x5176)) (x290 x5176)))
(assert (x609 x4514))
(assert (= (x5167 x2095) (ite (and x5103 (not x2405) x3292) (x3205 x2095) (x4651 x2095))))
(assert (x609 x4743))
(assert (x3829 x3374 x967))
(assert (= (x3618 x4594) (ite (= x4767 x4594) 0 (x3760 x4594))))
(assert (= (=> (and (= (x2113 (x5032 x2034) (x4755 208) 0) x3960) (= x4463 (= 0 x1421)) (= (x3776 x3960) x4588) (= (x5313 1461501637330902918203684832716283019655932542975 x4588) x1421)) (and (=> (not x4463) x1292) (=> x4463 x572))) x2341))
(assert (x609 x1564))
(assert (x609 x852))
(assert (x609 x1313))
(assert (= (x4290 (x4755 115792089210356248756420345215482394403581256910207104449633294546465451933695)) 115792089210356248756420345215482394403581256910207104449633294546465451933695))
(assert (x609 x1623))
(assert (= (x289 x1722) (ite (= x5386 x1722) x1036 (x3739 x1722))))
(assert (= (x1675 x2560) (ite (and x2673 x792 (not x1416)) (x2427 x2560) (x3346 x2560))))
(assert (x3829 x3587 x945))
(assert (x609 x3046))
(assert (= (ite (and x3318 x90) (ite (and x639 (not x2093) x4082) (x3855 x2207) (x4851 x2207)) (x4851 x2207)) (x4431 x2207)))
(assert (x609 x2203))
(assert (=> (< (- x2570 1) 10000) (= (x4755 x2570) (x5032 x2570))))
(assert (= (and (not x5274) x3078) x296))
(assert (x609 x603))
(assert (x609 x4765))
(assert (= (x631 x5086) (ite (= x5086 x4486) x654 (x4297 x5086))))
(assert (= (ite x2394 (ite x764 (x5286 x513) (x864 x513)) (ite (and x5003 x1932) (x4631 x513) (x864 x513))) (x479 x513)))
(assert (x609 x2072))
(assert (= (ite (= x1537 x3778) x1806 (x4728 x1537)) (x3344 x1537)))
(assert (= (ite (= x3351 x2865) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4710 x2865)) (x3939 x2865)))
(assert (x609 x4232))
(assert (x609 x3506))
(assert (x609 x2818))
(assert (x609 x589))
(assert (x609 x4795))
(assert (x609 x1637))
(assert (x4289 x1257))
(assert (x745 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x2201 (and x5345 (not x3192))))
(assert (x609 x3926))
(assert (x609 x2036))
(assert (= (ite (= x2203 x3303) x1093 (x1849 x2203)) (x4221 x2203)))
(assert (= (=> (and (= (x1960 (+ (uninterp_mod (x200 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2546)) x3434) (= x2311 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x200 (x5032 274184521717934524641157099916833587240)) x2546))) (= (- (x4400 (x5032 x353)) x2546) x3670) (= x2546 0) (= x1997 x3240) x2311 (= x3300 x2057)) x44) x3345))
(assert (x609 x5277))
(assert (= (x5167 x1583) (ite (and x5103 x3292 (not x2405)) (x3205 x1583) (x4651 x1583))))
(assert (= x4335 (and x4969 x5069)))
(assert (= (ite (= x5071 x970) x2253 (x3178 x970)) (x2959 x970)))
(assert (x609 x1829))
(assert (= (x1655 x1583) (ite (= x4252 x1583) 0 (x5379 x1583))))
(assert (x3829 x4203 x2097))
(assert (= (x889 x4690) (ite (= x3553 x4690) x2175 (x3588 x4690))))
(assert (= x2105 (=> (= (= x1458 274184521717934524641157099916833587202) x2793) (and (=> (and (not x2126) (= x2306 (x4766 x4603)) (= x4713 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3394 (x2113 (x5032 x4705) (x4755 1) 0)) (< x4721 826074471) (= (> x3586 x3590) x2126) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x4041) (>= x2306 0) (= x2819 x3856) (= x3586 x180) (= x3743 (x2113 (x5032 x4705) (x4755 1) 0)) (< (+ x1773 x4402) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1773 x533) (= x1488 x589) x2793 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3590) (= x1424 x4705) (<= 0 x3590) (= x4476 1) (>= 1461501637330902918203684832716283019655932542975 x4705) (= x1909 (< x2306 x4402)) (not (= 157198259 x4721)) (= (x416 x3394) x3590) (= x924 (x2113 (x5032 x4705) (x4755 2) 0)) (= 274184521717934524641157099916833587240 x2006) (not x2882) (= x1065 (x2113 (x5032 x4705) (x4755 2) 0)) (= x2614 274184521717934524641157099916833587240) (= (x4062 (- x2819 4)) x5136) (= x778 x4705) (= (>= (+ x4402 x1773) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x579) (not x4191) (= 599290589 x4721) (not (< x2819 4)) (= x1773 (x4176 x4189)) (= 274184521717934524641157099916833587240 x4352) (not x579) (not x3402) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5136)) (> 96 x5136)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5136)) x4191) (= (x2113 (x5032 274184521717934524641157099916833587240) x1065 0) x4603) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x4189) (not (= x4721 117300739)) (= x2882 (< x3590 x4402)) (= (x4062 (- x3590 x3586)) x476) (= x5010 (x2113 (x5032 274184521717934524641157099916833587240) x924 0)) (= x3052 274184521717934524641157099916833587240) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1773) (= x2819 100) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2306) (= (x4062 (- x2306 x3586)) x4929) (= x4817 (+ x533 x3019)) (= x4402 x3019) (not x1909) (= x4165 (x4873 (x5032 274184521717934524641157099916833587202))) (= x4402 x3586) (<= 0 x1773) (= (> x4402 x2306) x3402) (not (= 404098525 x4721)) (< 0 x4165)) x1846) (=> (not x2793) x2345)))))
(assert (= (ite (= x185 x2046) x3414 (x3007 x2046)) (x984 x2046)))
(assert (x609 x2603))
(assert (x609 x2429))
(assert (x609 x2649))
(assert (= (x42 x3960) (ite (= (x4755 0) x3960) x4687 (x212 x3960))))
(assert (x609 x3417))
(assert (= (=> (and (= x1141 (x1487 (x5032 x4368))) (= (x2044 (x5032 274184521717934524641157099916833587240)) x466) (= (= 274184521717934524641157099916833587206 x4368) x2980) (= x1572 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1508)) (= x17 x3598) (= x1508 (x2044 (x5032 x4368))) (= (x2044 (x5032 274184521717934524641157099916833587240)) x3134) x1572 x888 (= (< (x1487 (x5032 x4368)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2004) x2004 (= (<= 0 x3134) x888)) (and (=> (not x2980) x4635) (=> (and (= x4916 (+ x1179 x1155)) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x2567) (= x3746 32) (= x5380 x1155) (= (x4062 (- x3877 4)) x5270) (= x3461 x4115) (not x1766) (= x1941 x3262) (<= 0 x2360) (= x1257 x4665) (not (= 1889567281 x4425)) (not (= 826074471 x4425)) (< (+ x1808 x5380) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x5380 x3461) (not x39) (= x4425 2835717307) (not (> 4 x3877)) (= x4706 (x2113 (x5032 x1257) (x4755 1) 0)) (= x4855 (x4062 (- x2360 x3461))) (= x2360 (x1681 x4829)) (= 274184521717934524641157099916833587240 x1823) x2980 (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x4569) (not (= 2514000705 x4425)) (= x1257 x5009) (= (x2113 (x5032 x1257) (x4755 1) 0) x991) (not (< x4425 826074471)) (>= 1461501637330902918203684832716283019655932542975 x1257) (not x3233) (= (or (> x5270 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5270) true) (< x5270 64))) x1766) (not x3465) (<= x1808 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3461 x2360) x39) (= 274184521717934524641157099916833587240 x2854) (= x3877 68) (= x1808 x1179) (= (>= (+ x1808 x5380) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3233) (= x17 x3877) (>= x1808 0) (= x1757 (x4873 (x5032 274184521717934524641157099916833587206))) (= x1808 (x2307 x4706)) (= x3465 (< x2360 x5380)) (< 0 x1757) (= 1 x3954) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2360) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x4829)) x3879))) x2960))
(assert (x609 x337))
(assert (= (ite (= x3498 (x4755 0)) x2630 (x4349 x3498)) (x2707 x3498)))
(assert (x745 x749))
(assert (x609 x2509))
(assert (x609 x2175))
(assert (= (ite (= x2397 x487) 0 (x2852 x2397)) (x550 x2397)))
(assert (x609 x3150))
(assert (x609 x1316))
(assert (=> (< (- x2677 1) 10000) (= (x4755 x2677) (x5032 x2677))))
(assert (= (ite (= x2527 x1636) 274184521717934524641157099916833587240 (x2029 x2527)) (x221 x2527)))
(assert (x609 x2598))
(assert (x3829 x3660 x4986))
(assert (= (x3729 224) 0))
(assert (x609 x2769))
(assert (= (ite (and x4625 x1000 (not x3191)) (x2895 x2560) (x2155 x2560)) (x3157 x2560)))
(assert (x745 x4443))
(assert (x609 x1722))
(assert (= (x4202 x2046) (ite (and x4577 x3528) (x559 x2046) (ite (and x4432 x5210) (x2503 x2046) (x2755 x2046)))))
(assert (= x4254 (and x1614 x665)))
(assert (= (x3314 x3592) (ite (and x4838 x2654) (x3423 x3592) (ite (and x657 x3717) (x1118 x3592) (x4134 x3592)))))
(assert (= (x2396 x1586) (ite (= x4744 x1586) 274184521717934524641157099916833587240 (x5234 x1586))))
(assert (x609 x2841))
(assert (= (ite (and x4042 x809 x2185 x2210 x763 (not x3343)) (x1910 x1722) (ite (and x4042 x763 (not x2210) x809 x2185) (x588 x1722) (ite (and (not x4042) x763 x809 x2185) (x2959 x1722) (ite (and x2185 (not x809) x763) (x3178 x1722) (x4220 x1722))))) (x808 x1722)))
(assert (= x3213 (=> (and (= x4615 (x1960 (+ x670 x5282))) (= x1506 (> x670 x4615))) (and (=> x1506 x2657) (=> (not x1506) x1454)))))
(assert (= (x1466 x2644) (ite (= x1491 x2644) x2444 (x1339 x2644))))
(assert (x609 x4690))
(assert (x609 x2900))
(assert (x609 x3884))
(assert (= (or (and (not x3591) x874) x3421) x748))
(assert (= (x529 x2865) (ite (and x4067 x1915) (x5335 x2865) (x3181 x2865))))
(assert (= (x3934 x3057) (ite (= x2867 x3057) x4439 (x2356 x3057))))
(assert (= (x3207 x5067) (ite x4453 (ite x3665 (x3386 x5067) (ite x2813 (x968 x5067) (x1685 x5067))) (x3386 x5067))))
(assert (x3829 x4305 x2038))
(assert (x609 x105))
(assert (x609 x3010))
(assert (x609 x1832))
(assert (x609 x4768))
(assert (x609 x4271))
(assert (x609 x4729))
(assert (x609 x2706))
(assert (= (ite (= x1369 x3104) x4375 (x3032 x3104)) (x3007 x3104)))
(assert (= (ite (= x4486 x5173) x654 (x4297 x5173)) (x631 x5173)))
(assert (=> (> (+ 10000 1) x2143) (= (x5032 x2143) (x4755 x2143))))
(assert (= (ite (= x4832 x3807) x4939 (x2018 x4832)) (x3178 x4832)))
(assert (x4289 x4705))
(assert (= (x1571 x4783) (ite (= x282 x4783) 0 (x4965 x4783))))
(assert (x609 x2238))
(assert (= (ite (= x4185 x1161) x2324 (x3508 x4185)) (x1542 x4185)))
(assert (x609 x2078))
(assert (= 0 (x3729 x3708)))
(assert (= (x4353 x5271) (ite (and x1680 x2716 x879 x4810 x582 (not x2374)) (x534 x5271) (ite (and x582 (not x879) x1680 x4810 x2716) (x1225 x5271) (ite (and (not x1680) x2716 x4810 x582) (x1853 x5271) (ite (and x2716 (not x4810) x582) (x4466 x5271) (x1160 x5271)))))))
(assert (x609 x1478))
(assert (= (x4353 x1870) (ite (and x2716 x1680 x582 x4810 (not x2374) x879) (x534 x1870) (ite (and (not x879) x1680 x4810 x582 x2716) (x1225 x1870) (ite (and x2716 x582 (not x1680) x4810) (x1853 x1870) (ite (and x582 x2716 (not x4810)) (x4466 x1870) (x1160 x1870)))))))
(assert (x3641 x5246 x1694))
(assert (x609 x264))
(assert (= (ite (and x5103 (not x2405) x3292) (x3205 x4832) (x4651 x4832)) (x5167 x4832)))
(assert (= (and (not x3035) x2343) x2042))
(assert (= (ite (and (not x5359) x2185 x763) (x808 x2806) (x3946 x2806)) (x5124 x2806)))
(assert (x745 x2327))
(assert (x609 x4198))
(assert (x609 x854))
(assert (x609 x3543))
(assert (x609 x4107))
(assert (= (and x1404 (not x5114)) x114))
(assert (x609 x4701))
(assert (= (x1655 x4783) (ite (= x4252 x4783) 0 (x5379 x4783))))
(assert (x609 x4891))
(assert (x745 x1041))
(assert (x609 x391))
(assert (x609 x750))
(assert (= 0 (x493 x4780)))
(assert (= (x42 x4536) (ite (= x4536 (x4755 0)) x4687 (x212 x4536))))
(assert (x609 x5184))
(assert (x745 x2258))
(assert (= (ite (= x282 x2488) 0 (x4965 x2488)) (x1571 x2488)))
(assert (= (x4221 x953) (ite (= x953 x3303) x1093 (x1849 x953))))
(assert (x609 x241))
(assert (x609 x1945))
(assert (x609 x3681))
(assert (x745 x1793))
(assert (x609 x5392))
(assert (x609 x2930))
(assert (= (ite (and x898 x1170 (not x1900) x1226 x2099 x4580) (x289 x2806) (ite (and x898 x1170 (not x2099) x1226 x4580) (x3739 x2806) (ite (and (not x898) x4580 x1170 x1226) (x3107 x2806) (ite (and x4580 (not x1170) x1226) (x4184 x2806) (x4895 x2806))))) (x3532 x2806)))
(assert (x609 x3642))
(assert (x609 x113))
(assert (= (x156 x5151) (ite (= x5151 x4944) 0 (x2646 x5151))))
(assert (x609 x1198))
(assert (x609 x3586))
(assert (= (=> (and (= (> 1 x3889) x3548) (= x3889 (x2183 (x4755 0)))) (and (=> x3548 x5043) (=> (and (= false x4325) (not x3548)) x470))) x2723))
(assert (= (x2427 x1661) (ite (and x2673 x1391 x4469 (not x503) x2651 x792) (x2928 x1661) (ite (and x4469 x2673 (not x2651) x792 x1391) (x889 x1661) (ite (and (not x1391) x2673 x4469 x792) (x3588 x1661) (ite (and x792 x2673 (not x4469)) (x1796 x1661) (x509 x1661)))))))
(assert (= (ite (= x1583 x2867) x4439 (x2356 x1583)) (x3934 x1583)))
(assert (x609 x970))
(assert (= (x2707 x3022) (ite (= x3022 (x4755 0)) x2630 (x4349 x3022))))
(assert (x609 x1544))
(assert (x609 x1074))
(assert (= (ite (= x1615 (x4755 0)) x1325 (x3161 x1615)) (x1017 x1615)))
(assert (= (x3032 x2046) (ite (= x1946 x2046) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x2046))))
(assert (x609 x1015))
(assert (= (ite (= x1609 x4486) x654 (x4297 x1609)) (x631 x1609)))
(assert (x609 x5294))
(assert (x609 x2119))
(assert (x609 x1894))
(assert (= (ite (= x3708 x1610) x629 (x889 x3708)) (x2928 x3708)))
(assert (= (x4561 x5151) (ite (= x2907 x5151) 0 (x1382 x5151))))
(assert (x609 x1635))
(assert (x609 x3283))
(assert (x609 x1422))
(assert (x609 x5156))
(assert (x609 x626))
(assert (= (ite (= x1583 x280) x2407 (x4184 x1583)) (x3107 x1583)))
(assert (x609 x4187))
(assert (x609 x3088))
(assert (x609 x2983))
(assert (= (and (not x3380) x1607) x3047))
(assert (= (x42 x671) (ite (= (x4755 0) x671) x4687 (x212 x671))))
(assert (x609 x3927))
(assert (x4289 x2143))
(assert (x609 x271))
(assert (= (x3314 x1583) (ite (and x4838 x2654) (x3423 x1583) (ite (and x657 x3717) (x1118 x1583) (x4134 x1583)))))
(assert (= (ite (= (x1960 (+ x2672 96)) x5283) x1386 (x1956 (x1960 (+ 96 x2672)))) (x4208 (x1960 (+ x2672 96)))))
(assert (= (x3178 x4245) (ite (= x4245 x3807) x4939 (x2018 x4245))))
(assert (= (x3474 x1609) (ite (= x1609 x2603) x613 (x569 x1609))))
(assert (x609 x982))
(assert (= (x1340 x5176) (ite (= x96 x5176) 274184521717934524641157099916833587240 (x456 x5176))))
(assert (x609 x115))
(assert (= (x1017 x3633) (ite (= (x4755 0) x3633) x1325 (x3161 x3633))))
(assert (x609 x2922))
(assert (= (x3344 x4773) (ite (= x3778 x4773) x1806 (x4728 x4773))))
(assert (= (x3729 x1658) 0))
(assert (x745 x273))
(assert (x609 x2426))
(assert (x609 x324))
(assert (x609 x1651))
(assert (x609 x5338))
(assert (x609 x4324))
(assert (x609 x2011))
(assert (= (x382 x3054) (ite (= x5121 x3054) x3039 (x2195 x3054))))
(assert (= (ite (= x2560 x1636) 274184521717934524641157099916833587240 (x2029 x2560)) (x221 x2560)))
(assert (x609 x4715))
(assert (x609 x1957))
(assert (= (x679 x2046) (ite (= x1715 x2046) x4413 (x1522 x2046))))
(assert (=> (> (+ 10000 1) x2785) (= (x5032 x2785) (x4755 x2785))))
(assert (= (and x4025 (not x4950)) x5360))
(assert (= 0 (x4727 x2750)))
(assert (x609 x394))
(assert (= (ite (= x3447 x4486) x654 (x4297 x3447)) (x631 x3447)))
(assert (= (x3474 x3775) (ite (= x2603 x3775) x613 (x569 x3775))))
(assert (=> (< (- x1446 1) 10000) (= (x5032 x1446) (x4755 x1446))))
(assert (x609 x886))
(assert (x609 x4019))
(assert (x609 x341))
(assert (x609 x2897))
(assert (x609 x3631))
(assert (x609 x1806))
(assert (x1139 x3605 x4915 x4890 x797))
(assert (= (x631 x3775) (ite (= x4486 x3775) x654 (x4297 x3775))))
(assert (= (ite (= x3339 x3104) 274184521717934524641157099916833587240 (x1125 x3104)) (x343 x3104)))
(assert (= (x254 x1722) (ite (and x5003 x1932) (x3097 x1722) (x3596 x1722))))
(assert (=> (> (+ 10000 1) x826) (= (x4755 x826) (x5032 x826))))
(assert (= (or x764 (and x1226 (not x4580))) x2394))
(assert (x609 x3723))
(assert (x609 x3690))
(assert (= (x4651 x4245) (ite (= x1115 x4245) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x4245))))
(assert (= (x3939 x5351) (ite (= x3351 x5351) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4710 x5351))))
(assert (= (x2427 x2527) (ite (and (not x503) x792 x2651 x1391 x4469 x2673) (x2928 x2527) (ite (and x4469 x1391 x792 x2673 (not x2651)) (x889 x2527) (ite (and (not x1391) x792 x2673 x4469) (x3588 x2527) (ite (and x792 (not x4469) x2673) (x1796 x2527) (x509 x2527)))))))
(assert (= 274184521717934524641157099916833587202 (x4290 (x4755 274184521717934524641157099916833587202))))
(assert (= (ite (= x4783 x5386) x1036 (x3739 x4783)) (x289 x4783)))
(assert (= (ite (and (not x5307) x4580 x1226) (x3532 x1583) (x5334 x1583)) (x3423 x1583)))
(assert (= x4356 (and (not x309) x819)))
(assert (x4289 x1149))
(assert (= (ite (and x4600 x4451 (not x4298)) (x4816 x1148) (x1840 x1148)) (x2474 x1148)))
(assert (x745 x1135))
(assert (x609 x1729))
(assert (x609 x4790))
(assert (= (ite (= x1583 x3807) x4939 (x2018 x1583)) (x3178 x1583)))
(assert (x609 x1273))
(assert (x745 x854))
(assert (= x523 (or x4453 (and x4138 (not x4473)))))
(assert (= (ite (= x482 x4813) x5273 (x1702 x482)) (x5362 x482)))
(assert (= (x4290 (x5032 x4114)) x4114))
(assert (= (ite (= x400 x1161) x2324 (x3508 x400)) (x1542 x400)))
(assert (x609 x5059))
(assert (x609 x2713))
(assert (x609 x260))
(assert (x609 x3425))
(assert (x609 x4822))
(assert (x609 x3445))
(assert (= (ite (and (not x3191) x4625 x1000) (x2895 x1870) (x2155 x1870)) (x3157 x1870)))
(assert (= (ite x2394 (ite x764 (x1298 x319) (x4579 x319)) (x4257 x319)) (x1681 x319)))
(assert (= (x4618 x4111) (ite (= x4788 x4111) x1755 (x679 x4111))))
(assert (= (ite (= x3448 x282) 0 (x4965 x3448)) (x1571 x3448)))
(assert (= (x1017 x311) (ite (= (x4755 0) x311) x1325 (x3161 x311))))
(assert (= (and (not x4479) x2439) x2312))
(assert (x609 x3745))
(assert (= x2484 (and x3530 x3623)))
(assert (x609 x2854))
(assert (x609 x2970))
(assert (=> (> (+ 10000 1) x561) (= (x4755 x561) (x5032 x561))))
(assert (= (x3588 x4967) (ite (= x4745 x4967) x1390 (x1796 x4967))))
(assert (x609 x2316))
(assert (= (ite (= x4745 x788) x1390 (x1796 x788)) (x3588 x788)))
(assert (x609 x1368))
(assert (=> (< (- x684 1) 10000) (= (x5032 x684) (x4755 x684))))
(assert (x609 x586))
(assert (=> (> (+ 10000 1) x3920) (= (x5032 x3920) (x4755 x3920))))
(assert (x609 x2672))
(assert (x609 x2294))
(assert (= (x889 x3597) (ite (= x3597 x3553) x2175 (x3588 x3597))))
(assert (= (x1522 x4111) (ite (= x4111 x2724) x1563 (x631 x4111))))
(assert (x3829 x4158 x3977))
(assert (x745 x1284))
(assert (= (ite (and x3497 x4563 x338 (not x3881) x4856 x4449) (x4751 x5351) (ite (and (not x4563) x338 x4449 x4856 x3497) (x984 x5351) (ite (and x4856 x4449 x338 (not x3497)) (x3007 x5351) (ite (and (not x4449) x338 x4856) (x3032 x5351) (x1224 x5351))))) (x1106 x5351)))
(assert (= (ite (= x4012 x4967) 274184521717934524641157099916833587240 (x447 x4967)) (x1329 x4967)))
(assert (x745 x3602))
(assert (= (x4727 x2203) 0))
(assert (= (ite (= x4252 x970) 0 (x5379 x970)) (x1655 x970)))
(assert (= (and (not x4677) x2842) x4703))
(assert (= (x5167 x1586) (ite (and x5103 (not x2405) x3292) (x3205 x1586) (x4651 x1586))))
(assert (= (x3729 x3952) 0))
(assert (x609 x320))
(assert (= (ite (= x3303 x3592) x1093 (x1849 x3592)) (x4221 x3592)))
(assert (x745 x2898))
(assert (= (ite (= x5121 x1161) x2324 (x3508 x5121)) (x1542 x5121)))
(assert (x609 x1197))
(assert (x609 x3270))
(assert (= (ite (= x1315 x4252) 0 (x5379 x1315)) (x1655 x1315)))
(assert (x745 x1533))
(assert (x609 x2988))
(assert (= x369 (and (not x587) x1202)))
(assert (x609 x1563))
(assert (x609 x4576))
(assert (= (x2707 x3358) (ite (= (x4755 0) x3358) x2630 (x4349 x3358))))
(assert (= x137 (=> (and (= x2593 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x890)) (= x2907 (x1960 (+ x3790 x2593))) (= x1801 (or (> x3241 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x3241) (= true (<= x3241 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x1960 (+ x3241 31)) x890)) (and (=> x1801 x5043) (=> (not x1801) x4900)))))
(assert (= (=> (and (= x4059 (x1960 (+ x4789 x3004))) (= (< x4059 x3004) x678)) (and (=> x678 x4612) (=> (and (= x1283 1) (= x271 32) (= x921 x1228) (not x678)) x3487))) x511))
(assert (= (x3178 x4517) (ite (= x3807 x4517) x4939 (x2018 x4517))))
(assert (x609 x4230))
(assert (x609 x1609))
(assert (x609 x5066))
(assert (= (ite (and x4810 x879 x582 x1680 (not x2374) x2716) (x534 x5067) (ite (and x1680 (not x879) x582 x2716 x4810) (x1225 x5067) (ite (and (not x1680) x582 x2716 x4810) (x1853 x5067) (ite (and x2716 (not x4810) x582) (x4466 x5067) (x1160 x5067))))) (x4353 x5067)))
(assert (x609 x915))
(assert (x4289 x4380))
(assert (= (ite (and x2673 x792 (not x1416)) (x2427 x4773) (x3346 x4773)) (x1675 x4773)))
(assert (x4289 x554))
(assert (x609 x446))
(assert (x609 x3524))
(assert (x609 x3577))
(assert (x609 x3601))
(assert (=> (< (- x3583 1) 10000) (= (x5032 x3583) (x4755 x3583))))
(assert (= (ite (= x4773 x2907) 0 (x1382 x4773)) (x4561 x4773)))
(assert (x4661 x5288 x573))
(assert (x609 x4128))
(assert (x609 x3262))
(assert (= (x588 x2095) (ite (= x2095 x4822) x3430 (x2959 x2095))))
(assert (x745 x3842))
(assert (= (ite (= x2130 (x4755 0)) x1325 (x3161 x2130)) (x1017 x2130)))
(assert (= (x154 (- x5271 x4253)) 0))
(assert (x609 x4686))
(assert (x609 x4017))
(assert (x609 x1760))
(assert (= (x4290 (x5032 x1525)) x1525))
(assert (= (ite (and x3318 x90) (x1837 x3049) (x4561 x3049)) (x267 x3049)))
(assert (x609 x1857))
(assert (= (x156 x1661) (ite (= x1661 x4944) 0 (x2646 x1661))))
(assert (x3641 x3048 x1432))
(assert (= (ite (and (not x4298) x4451 x4600) (x4816 x4111) (x1840 x4111)) (x2474 x4111)))
(assert (x609 x5009))
(assert (= (ite (= x5351 x4767) 0 (x3760 x5351)) (x3618 x5351)))
(assert (= (x831 x4182) (ite x2394 (ite x764 (x862 x4182) (x1562 x4182)) (ite (and x5003 x1932) (x4377 x4182) (x1562 x4182)))))
(assert (= (ite x748 (ite x3421 (x3132 x736) (x3614 x736)) (x416 x736)) (x3835 x736)))
(assert (= (x3474 x5351) (ite (= x5351 x2603) x613 (x569 x5351))))
(assert (x609 x5310))
(assert (x609 x1984))
(assert (x609 x2433))
(assert (=> (> (+ 10000 1) x192) (= (x5032 x192) (x4755 x192))))
(assert (x609 x3187))
(assert (= (x267 x4967) (ite (and x90 x3318) (x1837 x4967) (x4561 x4967))))
(assert (x609 x4478))
(assert (x609 x3279))
(assert (x609 x4511))
(assert (= 0 (x3729 160)))
(assert (x609 x2361))
(assert (x609 x2853))
(assert (x609 x5393))
(assert (x745 x959))
(assert (= (x1017 x3768) (ite (= x3768 (x4755 0)) x1325 (x3161 x3768))))
(assert (x609 x1901))
(assert (= (x493 x169) 0))
(assert (= (x1017 x482) (ite (= x482 (x4755 0)) x1325 (x3161 x482))))
(assert (= (x1225 x5271) (ite (= x332 x5271) x3571 (x1853 x5271))))
(assert (= (x3007 x5351) (ite (= x1369 x5351) x4375 (x3032 x5351))))
(assert (x609 x2688))
(assert (= (x4290 (x5032 x871)) x871))
(assert (= (x3729 x1661) 0))
(assert (x609 x3293))
(assert (x609 x3376))
(assert (= (x3007 x1609) (ite (= x1609 x1369) x4375 (x3032 x1609))))
(assert (x609 x4300))
(assert (= (x5032 2311529814) (x4755 2311529814)))
(assert (= (ite (= x3477 x4486) x654 (x4297 x3477)) (x631 x3477)))
(assert (x609 x3996))
(assert (x609 x2359))
(assert (x745 26959946667150639793205513449688727755433459589824289461447677706240))
(assert (= x4898 (=> (and (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x3795) (= (x4062 (- x3612 x463)) x4682) (= x1194 (x4062 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x463))) (= (x2113 (x5032 x1446) (x4755 1) 0) x4427) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3748) (= x3912 274184521717934524641157099916833587240) (= x3748 (x3305 x3795)) (= x3636 (< x1194 x3748)) (>= x3748 0)) (and (=> x3636 x1180) (=> (not x3636) x4194)))))
(assert (= (x1695 (x5032 x2412)) (ite (and x763 x2185) (ite (and x2185 x1516 x763) (x1700 (x5032 x2412)) (x4567 (x5032 x2412))) (x4567 (x5032 x2412)))))
(assert (= (ite (= x5283 (x1960 (+ x4780 96))) x1386 (x1956 (x1960 (+ 96 x4780)))) (x4208 (x1960 (+ x4780 96)))))
(assert (= 0 (x4727 (x1960 (+ x2299 96)))))
(assert (= (x3939 x4642) (ite (= x4642 x3351) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4710 x4642))))
(assert (x4289 x4516))
(assert (= (x5032 11430537079145650693387304458692941425836787954612963690241153482819318579200) (x4755 11430537079145650693387304458692941425836787954612963690241153482819318579200)))
(assert (x4276 x758 x1543))
(assert (= (x1522 x2046) (ite (= x2046 x2724) x1563 (x631 x2046))))
(assert (= (x3596 x1586) (ite (= x4128 x1586) x3780 (x4036 x1586))))
(assert (= (ite (and x4600 x4451 (not x4298)) (x4816 x4837) (x1840 x4837)) (x2474 x4837)))
(assert (= (x4208 (x1960 (+ x2672 32))) (ite (= (x1960 (+ 32 x2672)) x5283) x1386 (x1956 (x1960 (+ 32 x2672))))))
(assert (= (ite (= x2603 x3477) x613 (x569 x3477)) (x3474 x3477)))
(assert (x609 x4090))
(assert (x609 x4904))
(assert (x609 x1375))
(assert (x609 x4640))
(assert (x4468 x1679 x2035 x1293 x2767))
(assert (x3239 x2898 x4886))
(assert (x609 x2112))
(assert (= (ite (and x90 x3318) (ite (and x639 (not x2093) x4082) (x3855 x739) (x4851 x739)) (x4851 x739)) (x4431 x739)))
(assert (x609 x5288))
(assert (= (ite (= x5086 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x5086)) (x4977 x5086)))
(assert (= x72 (=> (and (= x2093 (= x317 0)) (= x317 (x4873 (x5032 x2412)))) (and (=> (and (or (not x639) (and (= x4502 (<= x2996 (x5215 (x5032 274184521717934524641157099916833587240)))) (= (x326 (x5032 x2412)) x4968) (< x997 4294967296) x4502 (= (x326 (x5032 274184521717934524641157099916833587240)) x2996) x1616 (= x1616 (= (x5215 (x5032 x2412)) x4968)) x639)) (not x2093) (= (< 0 x2121) x639)) x4621) (=> x2093 x5043)))))
(assert (= (x1542 x399) (ite (= x1161 x399) x2324 (x3508 x399))))
(assert (= (ite (= x2560 x2892) x239 (x4466 x2560)) (x1853 x2560)))
(assert (x609 x3983))
(assert (= (x2707 x399) (ite (= (x4755 0) x399) x2630 (x4349 x399))))
(assert (= (x4755 18446744073709551616) (x5032 18446744073709551616)))
(assert (x609 x3111))
(assert (= (x2928 x5208) (ite (= x5208 x1610) x629 (x889 x5208))))
(assert (x609 x4028))
(assert (= (x1796 x1658) (ite (= x1658 x2429) x1282 (x2635 x1658))))
(assert (= (ite (= x4438 x5071) x2253 (x3178 x4438)) (x2959 x4438)))
(assert (= x2848 (and x4853 (not x4638))))
(assert (= (x3314 x4783) (ite (and x4838 x2654) (x3423 x4783) (ite (and x657 x3717) (x1118 x4783) (x4134 x4783)))))
(assert (= (x3673 x3049) (ite (= x3049 x1255) x4340 (x1886 x3049))))
(assert (= x2772 (and x3292 (not x2405))))
(assert (x609 x1709))
(assert (= x2906 true))
(assert (= 0 (x3729 x1537)))
(assert (x609 x2297))
(assert (= x785 (=> (and (= (+ x4106 x4482) x5172) (= x3733 x4106) (= x4482 x703) (< (+ x3733 x703) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> x551 x2141)) (= x551 x5172) (= x2165 x869)) x1319)))
(assert (= (=> (and (= x347 100) (not (< x347 4)) (= x5004 x347) (not (= 117300739 x1550)) (= x1550 599290589) (> x4532 0) (= x1699 (x4062 (- x347 4))) (= x587 (or (> x1699 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1699 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1699) true)))) (= x1908 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 826074471 x1550) (not (= x1550 157198259)) (not (= 404098525 x1550)) (= x606 x3993) (= x4532 (x4873 (x5032 274184521717934524641157099916833587202))) (= x4260 x4711)) (and (=> x587 x4581) (=> (not x587) x675))) x3959))
(assert (= (ite (= x4788 x2397) x1755 (x679 x2397)) (x4618 x2397)))
(assert (x609 x2968))
(assert (= (x5032 1858285468) (x4755 1858285468)))
(assert (x609 x3273))
(assert (= (x1542 x1738) (ite (= x1161 x1738) x2324 (x3508 x1738))))
(assert (x609 x2476))
(assert (= (x1542 x3498) (ite (= x3498 x1161) x2324 (x3508 x3498))))
(assert (= (x5174 x1062 255) (- (/ x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968) (uninterp_frac x1062 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (= (x2707 x3909) (ite (= (x4755 0) x3909) x2630 (x4349 x3909))))
(assert (= (x1452 x319) (ite (= x319 x2588) x3533 (x3982 x319))))
(assert (= (ite (= x3303 x3057) x1093 (x1849 x3057)) (x4221 x3057)))
(assert (= x2911 (and x1088 (not x4565))))
(assert (x609 x3370))
(assert (= (and (not x1893) x2484) x189))
(assert (= (ite (and x1932 x5003) (x3097 x2644) (x3596 x2644)) (x254 x2644)))
(assert (x609 x1042))
(assert (= (x3306 x2207) (ite (= x2207 x5165) x86 (x3835 x2207))))
(assert (x609 x3100))
(assert (= (x1796 x5331) (ite (= x2429 x5331) x1282 (x2635 x5331))))
(assert (x745 x1396))
(assert (= (x4584 (x5032 274184521717934524641157099916833587240)) (ite (and x4600 x4451) (ite (and x4451 x4193 x4600) (x349 (x5032 274184521717934524641157099916833587240)) (x3349 (x5032 274184521717934524641157099916833587240))) (x3349 (x5032 274184521717934524641157099916833587240)))))
(assert (= (x5124 x1586) (ite (and x763 (not x5359) x2185) (x808 x1586) (x3946 x1586))))
(assert (x609 x1041))
(assert (x609 x1935))
(assert (= (ite (= x3865 (x4755 0)) x4687 (x212 x3865)) (x42 x3865)))
(assert (x609 x4669))
(assert (= (x4290 (x4755 599290589)) 599290589))
(assert (= (x3632 x3448) (ite (= x3448 x2363) x396 (x2862 x3448))))
(assert (= (x4962 x2560) (ite (= x2560 x3425) x2040 (x2418 x2560))))
(assert (= (ite (= x211 x4773) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x4773)) (x4466 x4773)))
(assert (x609 x1567))
(assert (= (x1229 x3117) (ite (and x4451 x4600) (ite (and x4600 x4193 x4451) (x2164 x3117) (x3930 x3117)) (x3930 x3117))))
(assert (=> (> (+ 10000 1) x438) (= (x5032 x438) (x4755 x438))))
(assert (x609 x2805))
(assert (x4289 x3074))
(assert (x609 x9))
(assert (= (x4290 (x4755 98474297345890754025501882143967591664980152141971839855651084132735363579904)) 98474297345890754025501882143967591664980152141971839855651084132735363579904))
(assert (= (x889 x5067) (ite (= x5067 x3553) x2175 (x3588 x5067))))
(assert (x609 x807))
(assert (x4289 x1519))
(assert (x4289 x3690))
(assert (x1139 x139 x5257 x4139 x272))
(assert (= (x2707 x1738) (ite (= x1738 (x4755 0)) x2630 (x4349 x1738))))
(assert (= (x4208 160) (ite (= x5283 160) x1386 (x1956 160))))
(assert (= 404098525 (x4290 (x4755 404098525))))
(assert (x609 x1367))
(assert (= (ite (= (x4755 0) x955) x2630 (x4349 x955)) (x2707 x955)))
(assert (x3641 x5078 x4622))
(assert (= (x3776 x3960) (ite (= x3960 x1591) x1250 (x2617 x3960))))
(assert (x609 x997))
(assert (= (ite (= x3592 x5071) x2253 (x3178 x3592)) (x2959 x3592)))
(assert (x609 x4102))
(assert (= (ite (= x282 x970) 0 (x4965 x970)) (x1571 x970)))
(assert (x745 x19))
(assert (= (ite (= x3057 x4252) 0 (x5379 x3057)) (x1655 x3057)))
(assert (x609 x1002))
(assert (= 0 (x4727 224)))
(assert (= x4363 (x4290 (x5032 x4363))))
(assert (x609 x3733))
(assert (= x1657 (x4290 (x5032 x1657))))
(assert (= (x2044 (x5032 x4889)) (ite x2394 (ite x764 (x4984 (x5032 x4889)) (x1695 (x5032 x4889))) (x689 (x5032 x4889)))))
(assert (= (x2155 x5151) (ite (= x5151 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x5151))))
(assert (= (ite (and x338 (not x1973) x4856) (x1106 x1609) (x2086 x1609)) (x559 x1609)))
(assert (x745 x1679))
(assert (= (+ (x4290 x3747) 2) (x4290 (x6 x3747 2))))
(assert (= (ite x2394 (ite x764 (x2058 x2609) (x1264 x2609)) (x3679 x2609)) (x515 x2609)))
(assert (x4276 x4497 x3682))
(assert (= (=> (and (= 0 x1305) (or (and (not x3917) (= x3448 x1748) (= x4040 (x1960 (+ 96 x3031)))) (and (= 96 x3448) x3917)) (= (= x3746 0) x3917) (not (= 0 x3954)) (= (x3896 x3448) x1810) (= (- (x4357 (x5032 x4368)) x1305) x244) (or (and (= x3534 x4328) (< 0 x4328) (= x3534 (ite x1162 1 0)) (= x4328 (x3896 x1586)) (= (x1960 (+ 32 x3448)) x1586) (not (or (> x3606 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x3606) (= true (<= x3606 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) x4564 (= x3606 (x3896 x3448)) (= (not x1248) x1162) (= x1248 (= 0 x4328))) (not x4564)) x1110 (= x4564 (< 0 x1810)) (= x1110 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1305 (x421 (x5032 274184521717934524641157099916833587240))))) (= x2328 (x1960 (+ (uninterp_mod (x421 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1305)))) x4373) x3879))
(assert (= (x2427 x4967) (ite (and x2673 x1391 x4469 x792 (not x503) x2651) (x2928 x4967) (ite (and x2673 x4469 x1391 (not x2651) x792) (x889 x4967) (ite (and x4469 x2673 x792 (not x1391)) (x3588 x4967) (ite (and (not x4469) x792 x2673) (x1796 x4967) (x509 x4967)))))))
(assert (x609 x1379))
(assert (= (x3729 x3839) 0))
(assert (= (ite (= x3914 x3303) x1093 (x1849 x3914)) (x4221 x3914)))
(assert (= (x2427 x2560) (ite (and (not x503) x4469 x1391 x2673 x2651 x792) (x2928 x2560) (ite (and x792 x1391 x2673 x4469 (not x2651)) (x889 x2560) (ite (and x4469 x792 (not x1391) x2673) (x3588 x2560) (ite (and x2673 (not x4469) x792) (x1796 x2560) (x509 x2560)))))))
(assert (= (x2707 x2934) (ite (= (x4755 0) x2934) x2630 (x4349 x2934))))
(assert (= (x4466 x1658) (ite (= x1658 x211) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x1658))))
(assert (x609 x1941))
(assert (x609 x279))
(assert (= (x4290 (x4755 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x609 x4833))
(assert (= (x1017 x2967) (ite (= x2967 (x4755 0)) x1325 (x3161 x2967))))
(assert (= (x1466 x1586) (ite (= x1586 x1491) x2444 (x1339 x1586))))
(assert (= x4242 (and x4913 (not x2288))))
(assert (= (ite (= x3932 x4486) x654 (x4297 x3932)) (x631 x3932)))
(assert (x609 x1488))
(assert (= (ite (= x5386 x2644) x1036 (x3739 x2644)) (x289 x2644)))
(assert (x609 x5220))
(assert (x609 x2244))
(assert (= x2629 (=> (and (= x2715 (x5362 x3593)) (= (< 0 x5131) x714) (= (x5362 (x4755 0)) x5240) (< 0 x2313) (= (x5313 1461501637330902918203684832716283019655932542975 x2715) x438) (= x5062 (x4062 (- x5240 1))) (not (> 1 x5240)) (= (x4873 (x5032 x438)) x5131) (= (x2113 (x5032 x5062) (x4755 208) 0) x3593) (= (x3359 x5086) x703) (not (= x438 0))) (and (=> x714 x358) (=> (not x714) x2712)))))
(assert (x609 x1588))
(assert (=> (< (- x1146 1) 10000) (= (x4755 x1146) (x5032 x1146))))
(assert (= (ite (= x3592 x4252) 0 (x5379 x3592)) (x1655 x3592)))
(assert (= (ite (and x90 x3318) (x1837 x3597) (x4561 x3597)) (x267 x3597)))
(assert (= (x808 x970) (ite (and x2210 x763 x4042 x809 x2185 (not x3343)) (x1910 x970) (ite (and x4042 x809 x2185 (not x2210) x763) (x588 x970) (ite (and x809 x2185 x763 (not x4042)) (x2959 x970) (ite (and x2185 x763 (not x809)) (x3178 x970) (x4220 x970)))))))
(assert (= (=> (and (= x4722 (x4062 (- x1057 x118))) (= (x3545 x2539) x3731) (>= x3731 0) (= x4820 (< x5221 x3731)) (<= x3731 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2539 (x2113 (x5032 x2677) (x4755 1) 0)) (= x5051 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= 274184521717934524641157099916833587240 x249) (= (x4062 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x118)) x5221)) (and (=> (not x4820) x2523) (=> x4820 x2443))) x201))
(assert (= x8 (or (and (not x2673) x792) (and x90 x3318))))
(assert (= (x4755 1461501637330902918203684832716283019655932542975) (x5032 1461501637330902918203684832716283019655932542975)))
(assert (x609 x2516))
(assert (= (ite (= (x4755 0) x400) x4687 (x212 x400)) (x42 x400)))
(assert (= (ite (and x763 x2185) (ite (and x2185 x1516 x763) (x1814 x2675) (x1845 x2675)) (x1845 x2675)) (x1264 x2675)))
(assert (x609 x1497))
(assert (= (ite (and x2185 x763) (ite (and x1516 x763 x2185) (x1814 x4602) (x1845 x4602)) (x1845 x4602)) (x1264 x4602)))
(assert (= (x5124 x4438) (ite (and x763 x2185 (not x5359)) (x808 x4438) (x3946 x4438))))
(assert (= (ite (= x5071 x3914) x2253 (x3178 x3914)) (x2959 x3914)))
(assert (= (x4290 (x5032 x5105)) x5105))
(assert (x609 x3769))
(assert (x609 x1873))
(assert (= (x3673 x4833) (ite (= x4833 x1255) x4340 (x1886 x4833))))
(assert (= (x3739 x3592) (ite (= x1086 x3592) x351 (x3107 x3592))))
(assert (x4289 x5062))
(assert (x609 x4305))
(assert (x609 x2481))
(assert (x609 x3247))
(assert (x3829 x2160 x306))
(assert (x609 x1501))
(assert (x609 x1347))
(assert (= (ite (= x2724 x3775) x1563 (x631 x3775)) (x1522 x3775)))
(assert (x609 x3990))
(assert (= (x3673 (x1960 (+ x1002 96))) (ite (= (x1960 (+ 96 x1002)) x1255) x4340 (x1886 (x1960 (+ x1002 96))))))
(assert (x609 x5173))
(assert (x609 x2915))
(assert (= x2553 (=> (and (= x973 x598) (= x3116 (= x598 x3186))) (and (=> x3116 x489) (=> (not x3116) x4612)))))
(assert (= (x4290 (x6 x5089 2)) (+ 2 (x4290 x5089))))
(assert (= (ite (= x1255 x1306) x4340 (x1886 x1306)) (x3673 x1306)))
(assert (= (x1340 x3775) (ite (= x3775 x96) 274184521717934524641157099916833587240 (x456 x3775))))
(assert (= (x4755 34167655436598589418538772692774877509225721125679165766806516059628562808832) (x5032 34167655436598589418538772692774877509225721125679165766806516059628562808832)))
(assert (= (x1695 (x5032 x353)) (ite (and x2185 x763) (ite (and x763 x2185 x1516) (x1700 (x5032 x353)) (x4567 (x5032 x353))) (x4567 (x5032 x353)))))
(assert (x609 x265))
(assert (= x4282 (=> (and (= x1366 (< x2218 x2432)) (= x2432 (x1960 (+ x2284 x4296)))) (and (=> x1366 x5043) (=> (not x1366) x155)))))
(assert (= (ite (= x1583 x4225) x4534 (x588 x1583)) (x1910 x1583)))
(assert (= (x4208 x5176) (ite (= x5176 x5283) x1386 (x1956 x5176))))
(assert (= (=> (and (= (= x1393 0) x3906) (= x1393 (x5313 1461501637330902918203684832716283019655932542975 x4213)) (= (x1960 (+ 32 x2907)) x2069) (= x4010 (x4062 (- x5391 1)))) (and (=> x3906 x5043) (=> (not x3906) x3409))) x475))
(assert (x609 x2034))
(assert (= (ite (and (not x2405) x3292 x5103) (x3205 x2644) (x4651 x2644)) (x5167 x2644)))
(assert (= (ite (= x1586 x2867) x4439 (x2356 x1586)) (x3934 x1586)))
(assert (= x4913 (and x2942 x1220)))
(assert (x4289 274184521717934524641157099916833587240))
(assert (x3829 x5191 x836))
(assert (x609 x2754))
(assert (x609 x1203))
(assert (x609 x2785))
(assert (x609 x4974))
(assert (x609 x4080))
(assert (= (ite (and x763 (not x5359) x2185) (x808 x3584) (x3946 x3584)) (x5124 x3584)))
(assert (x609 x4398))
(assert (x609 x600))
(assert (= (and x530 (not x1317)) x1614))
(assert (= (x4651 x953) (ite (= x1115 x953) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x953))))
(assert (= (ite (= x4944 x2560) 0 (x2646 x2560)) (x156 x2560)))
(assert (x609 x2570))
(assert (and (<= 10000 (x712 x1806 x2410 x3010 x3953 x1367 x2136 x2048 x2913 x4100)) (<= (x712 x1806 x2410 x3010 x3953 x1367 x2136 x2048 x2913 x4100) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (or x3129 x95) x3220))
(assert (x745 x1016))
(assert (= x1147 (and x1540 (not x3122))))
(assert (x609 x791))
(assert (= (x1542 x4186) (ite (= x1161 x4186) x2324 (x3508 x4186))))
(assert (=> (< (- x3084 1) 10000) (= (x5032 x3084) (x4755 x3084))))
(assert (x745 115792089210356248756420345215482394403581256910207104449633294546465451933695))
(assert (x609 x4179))
(assert (x609 x1315))
(assert (x609 x1967))
(assert (x609 x1473))
(assert (= (=> (= x3659 (= x3690 x4752)) (and (=> (not x3659) x117) (=> x3659 x4667))) x4301))
(assert (x1139 x905 x1450 x1541 x4708))
(assert (= (ite (= x2142 x1870) x3483 (x3635 x1870)) (x3218 x1870)))
(assert (= (x3344 x3708) (ite (= x3708 x3778) x1806 (x4728 x3708))))
(assert (= (x4755 274184521717934524641157099916833587202) (x5032 274184521717934524641157099916833587202)))
(assert (x609 x4807))
(assert (= (ite (= x1609 x1715) x4413 (x1522 x1609)) (x679 x1609)))
(assert (= (ite (= x5071 x3436) x2253 (x3178 x3436)) (x2959 x3436)))
(assert (= (x3007 x4642) (ite (= x1369 x4642) x4375 (x3032 x4642))))
(assert (x609 x856))
(assert (= (ite (= x3778 x788) x1806 (x4728 x788)) (x3344 x788)))
(assert (= (x559 x2865) (ite (and (not x1973) x338 x4856) (x1106 x2865) (x2086 x2865))))
(assert (= (x1910 x3436) (ite (= x4225 x3436) x4534 (x588 x3436))))
(assert (= (x4618 x3104) (ite (= x3104 x4788) x1755 (x679 x3104))))
(assert (x609 x841))
(assert (x609 x1230))
(assert (x609 x1344))
(assert (x609 x3794))
(assert (x609 x2873))
(assert (x609 x188))
(assert (= (=> (and (= x3591 (> x1666 0)) (= (x151 x4783) x4115) (= x1511 (x5313 1461501637330902918203684832716283019655932542975 x3074)) (= (x4873 (x5032 x1511)) x1666)) (and (=> (and (or (and (not x231) (= x2946 0)) (and (or (and (= 32 x2946) (not x1551)) (and (or (and (not x1552) (= 64 x2946)) (and (= x396 (x2862 x2644)) (= x2363 (x1960 (+ x3031 128))) (= (< 96 x3598) x307) x1552 (or (and (not x307) (= x2946 96)) (and (= 128 x2946) (= (x1960 (+ x3031 160)) x480) x307 (= (< 128 x3598) x2636) (= x1196 (x3632 x1722)) (not x2636) (= (x1960 (+ 128 x3469)) x1722))) (= x2644 (x1960 (+ x3469 96))))) (= x3592 (x1960 (+ x3469 64))) (= (< 64 x3598) x1552) (= (x1960 (+ 96 x3031)) x571) x1551 (= x1831 (x1466 x3592)))) x231 (= x2444 (x1339 x970)) (= x2806 x970) (= (< 32 x3598) x1551) (= x1491 x1748))) (= (x4062 (- x3031 x3469)) x1709) (= x2291 (x1960 (+ x2070 96))) (= x3628 0) x3297 (= (x1960 (+ x3469 32)) x2806) (= x4368 (x5313 1461501637330902918203684832716283019655932542975 x3074)) (= x3598 (x1339 x3469)) (= (< x3598 x2946) x5195) (= x231 (> x3598 0)) (= (< 0 x760) x3297) (= x2238 (x1960 (+ x3206 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= x5009 (x5313 1461501637330902918203684832716283019655932542975 x2897)) (= (x1960 (+ 128 x2070)) x1748) (= (x1960 (+ 100 x3469)) x3031) (= x4494 x2070) (= (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x4319) x3206) (or (not x5195) (and x5195 (= (x1960 (+ x1748 x3598)) x3876))) (= (x1960 (+ 36 x3469)) x2070) (= x1207 (x4062 (- x1709 32))) (= (x4873 (x5032 x4368)) x760) (= x1780 (x1960 (+ 32 x4494))) (= (x1459 x2806) x4319) x3591) x2960) (=> (and (not x3591) (= x4558 (x2044 (x5032 274184521717934524641157099916833587240))) (= x2067 (= x81 0)) (< 0 x41) (= (x2044 (x5032 x4889)) x1309) (not (> x4115 x4558)) (= (x5313 1461501637330902918203684832716283019655932542975 x2897) x4889) (or (and (= (- (x2044 (x5032 274184521717934524641157099916833587240)) x4115) x4525) x3016 (= x4175 (- (x4917 (x5032 x4889)) x4187)) (or (not x3511) (and (= (x3755 (x5032 x4889)) x2638) (= (<= x2633 (x2508 (x5032 274184521717934524641157099916833587240))) x4405) x3511 (< x840 4294967296) (= (= (x2508 (x5032 x4889)) x2638) x1652) x4405 (= (x3755 (x5032 274184521717934524641157099916833587240)) x2633) x1652)) (= x3511 (< 0 x2119)) (= (x1960 (+ x4115 (uninterp_mod (x4940 (x5032 x4889)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5343) (= x840 x81) x4794 (= x4794 (< (+ x4187 (x2985 (x5032 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1960 (+ (uninterp_mod (x2985 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4187)) x958) (= x2119 x41) (= x4187 (ite (= 0 x2119) x4115 0)) x3552 (= x3552 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x4940 (x5032 x4889)) x4115)))) (and (= 0 x41) (= x81 0) (not x3016))) (= (x2044 (x5032 274184521717934524641157099916833587240)) x2706) (= (and (< (+ x1309 x4115) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x4115 x2706)) x3016)) x4373))) x1982))
(assert (x609 x4534))
(assert (x609 x1839))
(assert (x609 x4059))
(assert (x609 x3470))
(assert (= (ite (= (x4755 0) x31) x1325 (x3161 x31)) (x1017 x31)))
(assert (x609 x1916))
(assert (= (x5032 26959946667150639794667015087019630673637144422540572481103610249216) (x4755 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x745 x3111))
(assert (= (ite (and x3497 x4563 x4449 (not x3881) x4856 x338) (x4751 x2865) (ite (and x338 (not x4563) x4856 x3497 x4449) (x984 x2865) (ite (and x338 x4856 (not x3497) x4449) (x3007 x2865) (ite (and x4856 x338 (not x4449)) (x3032 x2865) (x1224 x2865))))) (x1106 x2865)))
(assert (x609 x3081))
(assert (x4289 x3168))
(assert (= (=> (and (= (x5313 1461501637330902918203684832716283019655932542975 x3660) x3370) (= x1131 (x4062 (- x1235 x2616))) (= (x4873 (x5032 x3370)) x956) (= (= x3370 274184521717934524641157099916833587240) x5149) (not (= 0 x956)) (= 274184521717934524641157099916833587240 x1777) (= (x1960 (+ x2616 4)) x2016) (= x2016 x3339) (= x1235 (x1960 (+ 36 x2616)))) (and (=> (and (> x1691 0) (= x1131 x1053) (not x715) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0) x3768) (< x1368 2311529814) (not (= 1722255204 x1368)) (not (> 1166402363 x1368)) (= x715 (or (and (= (<= x5059 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x5059 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5059))) (not (= x1368 1858285468)) (= x1095 1) (= x1691 (x4873 (x5032 274184521717934524641157099916833587240))) (= x4759 274184521717934524641157099916833587240) (not (< x1368 1722255204)) (not (< x1053 4)) (= x5059 (x4062 (- x1053 4))) x5149 (= x1053 36) (= 1889567281 x1368) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3745) (not (= x1368 1845821197)) (= (x5362 x3768) x3737) (= x4021 32)) x174) (=> (not x5149) x468))) x2161))
(assert (= (ite (= x1610 x4833) x629 (x889 x4833)) (x2928 x4833)))
(assert (= (=> (= x3316 (> x463 x3612)) (and (=> x3316 x1180) (=> (not x3316) x4898))) x3495))
(assert (= (x3178 x1722) (ite (= x1722 x3807) x4939 (x2018 x1722))))
(assert (x609 x1309))
(assert (x745 x2970))
(assert (x745 x4309))
(assert (x609 x4619))
(assert (x4289 x360))
(assert (= (x4651 x3448) (ite (= x3448 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x3448))))
(assert (x609 x3323))
(assert (= x1226 (and x2355 (not x5135))))
(assert (x609 x1305))
(assert (x609 x1380))
(assert (= (x2707 x3960) (ite (= x3960 (x4755 0)) x2630 (x4349 x3960))))
(assert (= (x1796 x5271) (ite (= x5271 x2429) x1282 (x2635 x5271))))
(assert (= (x515 x5162) (ite x2394 (ite x764 (x2058 x5162) (x1264 x5162)) (x3679 x5162))))
(assert (= (x588 x2489) (ite (= x2489 x4822) x3430 (x2959 x2489))))
(assert (= (x4579 x3050) (ite (and x2185 x763) (ite (and x1516 x2185 x763) (x1281 x3050) (x1177 x3050)) (x1177 x3050))))
(assert (x609 x4309))
(assert (x609 x827))
(assert (x609 x98))
(assert (= (x631 x4642) (ite (= x4642 x4486) x654 (x4297 x4642))))
(assert (x609 x2024))
(assert (= (x4290 (x5032 x2358)) x2358))
(assert (x609 x163))
(assert (= (x5032 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x4755 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= (x1638 x2806) (ite (= x1042 x2806) 274184521717934524641157099916833587240 (x5299 x2806))))
(assert (= (x2707 x5121) (ite (= (x4755 0) x5121) x2630 (x4349 x5121))))
(assert (x609 x1131))
(assert (x609 x2745))
(assert (x609 x3533))
(assert (= (x3588 x2226) (ite (= x2226 x4745) x1390 (x1796 x2226))))
(assert (x609 x3620))
(assert (x609 x2136))
(assert (= (=> (= x1672 (< 0 x227)) (and (=> (not x1672) x5043) (=> x1672 x1061))) x1245))
(assert (x609 x2013))
(assert (x609 x941))
(assert (x4276 x2821 x4882))
(assert (= x2543 (x4290 (x5032 x2543))))
(assert (x4276 x2159 x4262))
(assert (= x4031 (and x714 x2903)))
(assert (x609 x1807))
(assert (= (ite (= x3177 x4837) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x4837)) (x4977 x4837)))
(assert (= (ite (and x4600 x4451) (x4329 x2397) (x550 x2397)) (x3359 x2397)))
(assert (= x3288 (and x2840 x292)))
(assert (x609 x3104))
(assert (x609 x5015))
(assert (= (x1542 x2400) (ite (= x1161 x2400) x2324 (x3508 x2400))))
(assert (= (and x4001 x89) x2439))
(assert (x609 x3414))
(assert (x609 x2641))
(assert (x609 x2030))
(assert (x745 x5288))
(assert (= x5056 (and (not x2708) x3947)))
(assert (= (+ (x4290 x3966) 2) (x4290 (x6 x3966 2))))
(assert (x609 x4363))
(assert (x609 x3735))
(assert (x609 x4072))
(assert (x609 x762))
(assert (x3641 x1747 x4487))
(assert (x609 x1759))
(assert (= (x1542 x3358) (ite (= x1161 x3358) x2324 (x3508 x3358))))
(assert (= (x3413 x1661) (ite (= x1661 x1917) x2499 (x3218 x1661))))
(assert (x609 x4756))
(assert (x609 x194))
(assert (x609 x5287))
(assert (x609 x4748))
(assert (x609 x4412))
(assert (= (x2474 x3104) (ite (and x4600 x4451 (not x4298)) (x4816 x3104) (x1840 x3104))))
(assert (x609 x2846))
(assert (= (x1329 x5208) (ite (= x4012 x5208) 274184521717934524641157099916833587240 (x447 x5208))))
(assert (x745 x265))
(assert (x609 x3667))
(assert (x745 x4003))
(assert (x609 x4626))
(assert (x609 x3119))
(assert (x609 x4771))
(assert (x609 x4773))
(assert (= (or (and x4630 x1447) (and x2229 x2923) (and x5253 x5339)) x372))
(assert (= (ite (and x90 x3318) (ite (and (not x2093) x4082 x639) (x5215 (x5032 x5256)) (x326 (x5032 x5256))) (x326 (x5032 x5256))) (x4718 (x5032 x5256))))
(assert (x609 x1813))
(assert (x609 x3277))
(assert (= (ite (= x5309 x1161) x2324 (x3508 x5309)) (x1542 x5309)))
(assert (= (ite (= x5271 x1917) x2499 (x3218 x5271)) (x3413 x5271)))
(assert (x609 x3889))
(assert (= (ite (= x3049 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x3049)) (x2155 x3049)))
(assert (x79 x5235 x2251 x3347 x5276))
(assert (= (ite (and x4625 x1000 (not x3191)) (x2895 x2527) (x2155 x2527)) (x3157 x2527)))
(assert (= (+ 2 (x4290 x4392)) (x4290 (x6 x4392 2))))
(assert (= (x1225 x4773) (ite (= x332 x4773) x3571 (x1853 x4773))))
(assert (x609 x1966))
(assert (= (ite (= x3914 x3807) x4939 (x2018 x3914)) (x3178 x3914)))
(assert (x5318 x1271 x2240))
(assert (x609 x749))
(assert (x609 x4382))
(assert (x609 x4206))
(assert (x609 x4283))
(assert (= (ite (= (x4755 0) x4536) x2630 (x4349 x4536)) (x2707 x4536)))
(assert (= (x4290 (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639680)) 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x609 x1105))
(assert (= (=> (= x433 (= x800 0)) (and (=> x433 x5043) (=> (not x433) x2732))) x1923))
(assert (= (ite (= x3740 (x4755 0)) x2630 (x4349 x3740)) (x2707 x3740)))
(assert (= (x1638 x4783) (ite (= x1042 x4783) 274184521717934524641157099916833587240 (x5299 x4783))))
(assert (= x1620 (and x2866 x2639)))
(assert (= (and x4473 x4138) x1220))
(assert (= (x3982 x5225) (ite (= x2605 x5225) x5228 (x2041 x5225))))
(assert (x609 x3282))
(assert (x609 x961))
(assert (x609 x5209))
(assert (= (x1329 x2560) (ite (= x2560 x4012) 274184521717934524641157099916833587240 (x447 x2560))))
(assert (= (x4431 x736) (ite (and x3318 x90) (ite (and x4082 x639 (not x2093)) (x3855 x736) (x4851 x736)) (x4851 x736))))
(assert (= (x3359 x1148) (ite (and x4600 x4451) (x4329 x1148) (x550 x1148))))
(assert (x609 x5185))
(assert (x609 x1930))
(assert (x609 x3758))
(assert (=> (< (- x961 1) 10000) (= (x5032 x961) (x4755 x961))))
(assert (x609 x4855))
(assert (= (ite (= x2527 x1610) x629 (x889 x2527)) (x2928 x2527)))
(assert (x609 x1511))
(assert (= (x2041 x94) (ite x748 (ite x3421 (x2101 x94) (x3643 x94)) (x4555 x94))))
(assert (x609 x1985))
(assert (= x1846 (=> (not (= x4476 0)) x3459)))
(assert (= 0 (x493 x3104)))
(assert (= (x2862 x1586) (ite (= x571 x1586) x1831 (x1466 x1586))))
(assert (= (x2707 x454) (ite (= (x4755 0) x454) x2630 (x4349 x454))))
(assert (= (x4290 (x5032 x2034)) x2034))
(assert (= (x1017 x4812) (ite (= x4812 (x4755 0)) x1325 (x3161 x4812))))
(assert (x609 x5280))
(assert (= (and x1862 x3692) x4578))
(assert (x609 x2938))
(assert (= (or x2298 (and (not x3897) x2074) (and (not x5155) x3789)) x3744))
(assert (= (x2041 x1842) (ite x748 (ite x3421 (x2101 x1842) (x3643 x1842)) (x4555 x1842))))
(assert (= (x4727 x4832) 0))
(assert (= (ite (= x4944 x3952) 0 (x2646 x3952)) (x156 x3952)))
(assert (=> (< (- x2278 1) 10000) (= (x5032 x2278) (x4755 x2278))))
(assert (x4289 x4172))
(assert (x3829 x2464 x4372))
(assert (x79 x2330 x2257 x773 x3400))
(assert (x609 x3622))
(assert (= (x2959 x1583) (ite (= x5071 x1583) x2253 (x3178 x1583))))
(assert (x609 x3587))
(assert (x609 x4881))
(assert (= (x2044 (x5032 x5105)) (ite x2394 (ite x764 (x4984 (x5032 x5105)) (x1695 (x5032 x5105))) (x689 (x5032 x5105)))))
(assert (x609 x1789))
(assert (= (ite (= x4813 x3523) x5273 (x1702 x3523)) (x5362 x3523)))
(assert (=> (= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x2883) (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x656)) (= x656 x2883)))
(assert (x609 x4465))
(assert (= (ite (= x601 x3498) x2754 (x42 x601)) (x2195 x601)))
(assert (x745 x2465))
(assert (= (x2427 x5067) (ite (and x792 x4469 x2651 x1391 x2673 (not x503)) (x2928 x5067) (ite (and x2673 x1391 (not x2651) x4469 x792) (x889 x5067) (ite (and x792 x2673 (not x1391) x4469) (x3588 x5067) (ite (and (not x4469) x792 x2673) (x1796 x5067) (x509 x5067)))))))
(assert (= (ite (= x5283 224) x1386 (x1956 224)) (x4208 224)))
(assert (=> (> (+ 10000 1) x216) (= (x4755 x216) (x5032 x216))))
(assert (x609 x2258))
(assert (x609 x4117))
(assert (= true x2469))
(assert (= (ite (and x5003 x1932) (x3097 x3592) (x3596 x3592)) (x254 x3592)))
(assert (= (x1542 x4536) (ite (= x1161 x4536) x2324 (x3508 x4536))))
(assert (x609 x407))
(assert (= (ite (and x792 x2673 (not x1416)) (x2427 x1870) (x3346 x1870)) (x1675 x1870)))
(assert (x609 x4835))
(assert (= 0 (x493 x5176)))
(assert (x609 x2887))
(assert (x609 x4057))
(assert (= (x864 x513) (ite (and x763 x2185) (ite (and x2185 x763 x1516) (x1322 x513) (x731 x513)) (x731 x513))))
(assert (= (ite (= x1537 x211) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x1537)) (x4466 x1537)))
(assert (x609 x4443))
(assert (= (x4290 (x5032 x561)) x561))
(assert (= (x4202 x4111) (ite (and x4577 x3528) (x559 x4111) (ite (and x5210 x4432) (x2503 x4111) (x2755 x4111)))))
(assert (= (x4804 x835) (ite (= x835 x601) x4410 (x3776 x835))))
(assert (= x3900 (=> (and (= x3496 274184521717934524641157099916833587240) (= (not (= 0 x3051)) x3859) (= x3051 (x5313 1461501637330902918203684832716283019655932542975 x1313)) (= x2034 x1402) (= 274184521717934524641157099916833587240 x3723) (= (x2113 (x5032 x2034) (x4755 208) 0) x4996) (= x1313 (x3776 x4996))) (and (=> (not x3859) x572) (=> x3859 x3706)))))
(assert (x609 x1859))
(assert (x609 x3736))
(assert (x609 x1029))
(assert (= x1219 (=> (and (= x441 x1636) (= 274184521717934524641157099916833587240 x4222) (= (x1960 (+ x61 4)) x441) (= (x4062 (- x5275 x61)) x1799) (= x288 (x4873 (x5032 x684))) (= x5275 (x1960 (+ x61 36))) (= (x5313 1461501637330902918203684832716283019655932542975 x80) x684) (= x4112 (= 0 x288))) (and (=> (not x4112) x3061) (=> x4112 x5043)))))
(assert (x609 x5046))
(assert (= (ite (and (not x5307) x1226 x4580) (x3532 x2806) (x5334 x2806)) (x3423 x2806)))
(assert (= (ite (= x4822 x2644) x3430 (x2959 x2644)) (x588 x2644)))
(assert (= (ite (and x4600 x4451) (x4329 x4111) (x550 x4111)) (x3359 x4111)))
(assert (x609 x5157))
(assert (x609 x919))
(assert (x609 x5328))
(assert (x4289 x172))
(assert (= (ite (= x4536 x3498) x2754 (x42 x4536)) (x2195 x4536)))
(assert (x609 x1286))
(assert (= (x679 x3104) (ite (= x1715 x3104) x4413 (x1522 x3104))))
(assert (= (ite (= x5331 x2907) 0 (x1382 x5331)) (x4561 x5331)))
(assert (x609 x1972))
(assert (= (ite (= x4594 x487) 0 (x2852 x4594)) (x550 x4594)))
(assert (x3829 x80 x4426))
(assert (x609 x5374))
(assert (=> (< (- x4172 1) 10000) (= (x5032 x4172) (x4755 x4172))))
(assert (x609 x3986))
(assert (x609 x32))
(assert (= (x4290 (x5032 x4951)) x4951))
(assert (x609 x2468))
(assert (= x1963 (or (and (not x4856) x338) x2987)))
(assert (= (x3157 x4833) (ite (and x4625 (not x3191) x1000) (x2895 x4833) (x2155 x4833))))
(assert (x609 x5265))
(assert (x609 x966))
(assert (x609 x4425))
(assert (= (ite (= x3592 x4128) x3780 (x4036 x3592)) (x3596 x3592)))
(assert (= (ite (= x4832 x4225) x4534 (x588 x4832)) (x1910 x4832)))
(assert (x609 x3303))
(assert (= (and x3528 (not x4577)) x4432))
(assert (x609 x669))
(assert (x3829 x2458 x1012))
(assert (= (ite (= (x4755 0) x4480) x1325 (x3161 x4480)) (x1017 x4480)))
(assert (x609 x1053))
(assert (= (x1638 x3592) (ite (= x3592 x1042) 274184521717934524641157099916833587240 (x5299 x3592))))
(assert (x609 x4337))
(assert (x745 x2938))
(assert (= x1349 (=> (= (= x3617 0) x397) (and (=> x397 x5043) (=> (not x397) x940)))))
(assert (= 0 (x493 x4594)))
(assert (x4289 x2543))
(assert (= (ite (= x5176 x3339) 274184521717934524641157099916833587240 (x1125 x5176)) (x343 x5176)))
(assert (x745 x305))
(assert (x609 x4258))
(assert (x609 x2580))
(assert (x79 x5081 x1025 x1523 x1451))
(assert (x609 x5131))
(assert (= (x2195 x4586) (ite (= x4586 x3498) x2754 (x42 x4586))))
(assert (= (x3618 x3447) (ite (= x3447 x4767) 0 (x3760 x3447))))
(assert (= (x4977 x4642) (ite (= x3177 x4642) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x4642))))
(assert (= (ite (= x4252 x2489) 0 (x5379 x2489)) (x1655 x2489)))
(assert (= (ite (= x3469 x2291) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2608 x3469)) (x1339 x3469)))
(assert (= (x4751 x3932) (ite (= x3886 x3932) x3146 (x984 x3932))))
(assert (= (x4353 x5208) (ite (and x4810 x2716 (not x2374) x1680 x582 x879) (x534 x5208) (ite (and x4810 x1680 (not x879) x2716 x582) (x1225 x5208) (ite (and (not x1680) x2716 x582 x4810) (x1853 x5208) (ite (and x2716 (not x4810) x582) (x4466 x5208) (x1160 x5208)))))))
(assert (x1139 x4655 x1529 x3089 x4004))
(assert (= (ite (and x582 x4810 x879 x1680 (not x2374) x2716) (x534 x4690) (ite (and x4810 x582 x1680 x2716 (not x879)) (x1225 x4690) (ite (and (not x1680) x4810 x2716 x582) (x1853 x4690) (ite (and x2716 (not x4810) x582) (x4466 x4690) (x1160 x4690))))) (x4353 x4690)))
(assert (x609 x4170))
(assert (x609 x4859))
(assert (= (ite (= x1148 x2724) x1563 (x631 x1148)) (x1522 x1148)))
(assert (= (or (and x1342 x361) (and x3804 x2512)) x292))
(assert (= (ite (and x2185 x763) (ite (and x2185 x1516 x763) (x1814 x736) (x1845 x736)) (x1845 x736)) (x1264 x736)))
(assert (x745 x2500))
(assert (= 0 (x4727 x698)))
(assert (= (x4290 (x4755 3155786881)) 3155786881))
(assert (= 0 (x4727 x4214)))
(assert (= (x374 x1870) (ite (and x2838 (not x3585) x2450) (x2952 x1870) (x5249 x1870))))
(assert (x609 x5203))
(assert (x609 x3775))
(assert (= (x4290 (x5032 x2152)) x2152))
(assert (= (x4208 x169) (ite (= x169 x5283) x1386 (x1956 x169))))
(assert (= (x3618 x2865) (ite (= x4767 x2865) 0 (x3760 x2865))))
(assert (= (x2155 x4690) (ite (= x4057 x4690) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x4690))))
(assert (x609 x729))
(assert (= x4067 (or (and x4031 (not x1192)) x908)))
(assert (x609 x661))
(assert (= (ite (and (not x3191) x4625 x1000) (x2895 x4773) (x2155 x4773)) (x3157 x4773)))
(assert (x609 x5057))
(assert (x609 x4798))
(assert (x609 x3748))
(assert (= (x3618 x4837) (ite (= x4767 x4837) 0 (x3760 x4837))))
(assert (x609 x1875))
(assert (= (ite (= x280 x3592) x2407 (x4184 x3592)) (x3107 x3592)))
(assert (= (ite (= 192 x3303) x1093 (x1849 192)) (x4221 192)))
(assert (x609 x2537))
(assert (= (x3344 x5271) (ite (= x5271 x3778) x1806 (x4728 x5271))))
(assert (x609 x5153))
(assert (= (=> (and (= x2942 (= x353 274184521717934524641157099916833587240)) x2385 (= (x1553 (x5032 x353)) x3194) (= x2385 (< (x1553 (x5032 x353)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1468 (x4718 (x5032 274184521717934524641157099916833587240)))) (and (=> x2942 x2277) (=> (not x2942) x1581))) x1334))
(assert (= (x3307 x4111) (ite (= x3506 x4111) x3404 (x1678 x4111))))
(assert (= (x4579 x4829) (ite (and x763 x2185) (ite (and x763 x2185 x1516) (x1281 x4829) (x1177 x4829)) (x1177 x4829))))
(assert (x609 x4231))
(assert (= (ite (= x4252 x3448) 0 (x5379 x3448)) (x1655 x3448)))
(assert (x2749 x1679 x4160 x3013 x4152))
(assert (= (ite (= x4996 (x4755 0)) x2630 (x4349 x4996)) (x2707 x4996)))
(assert (x609 x3300))
(assert (= 0 (x4284 (- x4967 x2721))))
(assert (x609 x3861))
(assert (= (x1639 x3584) (ite (and x2185 x763) (x594 x3584) (x1571 x3584))))
(assert (x609 x3206))
(assert (= (ite (= x5283 x2214) x1386 (x1956 x2214)) (x4208 x2214)))
(assert (= (x382 x3960) (ite (= x3960 x5121) x3039 (x2195 x3960))))
(assert (= x5308 (=> (and (= x4763 (x642 x3049)) (= x60 (or (> x4763 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x4763 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x4763))))) (and (=> x60 x5043) (=> (not x60) x3905)))))
(assert (= (ite (= x1583 x4822) x3430 (x2959 x1583)) (x588 x1583)))
(assert (x745 x4529))
(assert (= (ite (= x2095 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x2095)) (x4651 x2095)))
(assert (x609 x3185))
(assert (x609 x2710))
(assert (x609 x3294))
(assert (= x4601 (or (and x2793 x2434) (and x3570 x735) (and x2289 x5170))))
(assert (= (ite (= x4833 x2907) 0 (x1382 x4833)) (x4561 x4833)))
(assert (= x2424 (and x2286 x3083)))
(assert (= (x3982 x94) (ite (= x94 x2605) x5228 (x2041 x94))))
(assert (x609 x4340))
(assert (= (=> (and (= 0 x5023) (= x542 (- (x5095 (x5032 x4735)) x5023)) (or (and (= x795 (= x1188 0)) x2954 (= x1609 (x1960 (+ x3447 32))) (= (ite x59 1 0) x1651) (= x1188 (x4582 x1609)) (= x4803 (x4582 x3447)) (= (not x795) x59) (> x1188 0) (= x1651 x1188) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4803) (and (= (<= x4803 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x4803))))) (not x2954)) (= x2063 (x4582 x3447)) (= (x1960 (+ (uninterp_mod (x3453 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5023)) x933) (or (and (= x2428 x1857) x558 (= 96 x3447)) (and (= x5395 (x1960 (+ x1857 x4934))) (not x558) (= x4934 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1016)) (= (x1960 (+ x910 96)) x1496) (= x1016 (x1960 (+ 63 x461))) (= x3447 x1857) (= x2428 x5395))) (= x2596 x2428) (= (= x461 0) x558) x3200 (not (= 0 x3675)) (= (< (+ (x3453 (x5032 274184521717934524641157099916833587240)) x5023) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3200) (= x2954 (> x2063 0))) x1408) x2068))
(assert (x609 x1629))
(assert (x609 x1773))
(assert (x609 x1868))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x4290 (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639934))))
(assert (= (ite (= x2046 x4788) x1755 (x679 x2046)) (x4618 x2046)))
(assert (= (x1542 x4075) (ite (= x4075 x1161) x2324 (x3508 x4075))))
(assert (= (x4962 x1870) (ite (= x1870 x3425) x2040 (x2418 x1870))))
(assert (x609 x4188))
(assert (x609 x3742))
(assert (= (x3181 x2865) (ite (= x2865 x408) x703 (x1395 x2865))))
(assert (x609 x2652))
(assert (= x554 (x4290 (x5032 x554))))
(assert (x609 x258))
(assert (= (and x2772 x1517) x735))
(assert (= (ite (= x1255 x1658) x4340 (x1886 x1658)) (x3673 x1658)))
(assert (= (x631 x4594) (ite (= x4486 x4594) x654 (x4297 x4594))))
(assert (= (ite x2394 (ite x764 (x2058 x739) (x1264 x739)) (x3679 x739)) (x515 x739)))
(assert (= (ite (= x1946 x2397) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x2397)) (x3032 x2397)))
(assert (x609 x2618))
(assert (= (ite (= x4944 x5067) 0 (x2646 x5067)) (x156 x5067)))
(assert (x609 x2802))
(assert (x745 x1387))
(assert (= (x3007 x1883) (ite (= x1369 x1883) x4375 (x3032 x1883))))
(assert (x609 x1649))
(assert (=> (> (+ 10000 1) x4747) (= (x5032 x4747) (x4755 x4747))))
(assert (= (ite (= x4767 x4111) 0 (x3760 x4111)) (x3618 x4111)))
(assert (= (ite (and x4600 x4451) (x4329 x2046) (x550 x2046)) (x3359 x2046)))
(assert (x609 x4226))
(assert (x4276 x2656 x5065))
(assert (x609 x1508))
(assert (x745 x4203))
(assert (x609 x1474))
(assert (= x523 x2891))
(assert (= (ite (= x1078 x5283) x1386 (x1956 x1078)) (x4208 x1078)))
(assert (x609 x3241))
(assert (= x1307 (x4290 (x5032 x1307))))
(assert (x609 x4736))
(assert (= (x4727 160) 0))
(assert (x609 x2630))
(assert (x745 x3705))
(assert (= (=> (and (= x1356 (x1852 x1618)) (= x753 (x1960 (+ 36 x61))) (= (x1960 (+ 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3030)) x1798) (= 0 x4324) (= x1618 (x1960 (+ 32 x61))) (= x2021 274184521717934524641157099916833587240) (= x3030 (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x1356)) (= (x1960 (+ 132 x61)) x2827) (= x211 (x1960 (+ 128 x753))) (= x3577 x753) (= x944 (x1960 (+ x753 160))) (= (x4062 (- x4540 32)) x5012) (= x582 (> x1994 0)) (= (x5313 1461501637330902918203684832716283019655932542975 x80) x353) (= (x4062 (- x2827 x61)) x4540) (= 274184521717934524641157099916833587240 x3376) (= x3825 (x1960 (+ 32 x3577))) (= x1994 (x4873 (x5032 x353))) (= x1413 (x1960 (+ x3577 64)))) (and (=> (not x582) x5043) (=> (and (or (and (not x4810) (= x2573 0)) (and (= (x4466 x1537) x239) (= x944 x2892) (= x1680 (> x3472 32)) x4810 (= x1537 x1618) (or (and (= (< 64 x3472) x879) (= (x1853 x1658) x3571) (or (and (= 64 x2573) (not x879)) (and (= (x1960 (+ 128 x2827)) x806) (= (x1225 x3597) x3630) x879 (or (and (not x2019) (= x1117 (x534 x4773)) (= (x1960 (+ x61 128)) x4773) (= (x1960 (+ x2827 160)) x1855) (= x2019 (< 128 x3472)) (= 128 x2573) x2374) (and (not x2374) (= 96 x2573))) (= (< 96 x3472) x2374) (= (x1960 (+ 96 x61)) x3597))) (= (x1960 (+ 64 x61)) x1658) (= (x1960 (+ 96 x2827)) x332) x1680) (and (= 32 x2573) (not x1680))))) (or (and x472 (= (x1960 (+ x944 x3472)) x4399)) (not x472)) (= (> x3472 0) x4810) (= x472 (> x2573 x3472)) x582 (= (x4466 x61) x3472)) x539))) x1554))
(assert (= (=> (= (= x5256 274184521717934524641157099916833587202) x3967) (and (=> (not x3967) x2333) (=> x3967 x55))) x2498))
(assert (x609 x84))
(assert (= x826 (x4290 (x5032 x826))))
(assert (= (ite (= x2095 x5071) x2253 (x3178 x2095)) (x2959 x2095)))
(assert (= (x1796 x5151) (ite (= x5151 x2429) x1282 (x2635 x5151))))
(assert (= x2677 (x4290 (x5032 x2677))))
(assert (x609 x2781))
(assert (= (ite (= x4486 x1148) x654 (x4297 x1148)) (x631 x1148)))
(assert (= x2178 (=> (= x4677 (< x2983 x4789)) (and (=> x4677 x4612) (=> (not x4677) x2273)))))
(assert (= x470 (=> (= x3689 x4325) x1979)))
(assert (= (ite (= x2207 x331) x4904 (x4431 x2207)) (x786 x2207)))
(assert (x609 x5343))
(assert (x609 x316))
(assert (x609 x4196))
(assert (= (x3032 x4111) (ite (= x1946 x4111) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x4111))))
(assert (= (ite (and x809 x4042 (not x3343) x2210 x2185 x763) (x1910 x3436) (ite (and x809 x2185 (not x2210) x763 x4042) (x588 x3436) (ite (and x809 x763 (not x4042) x2185) (x2959 x3436) (ite (and x763 x2185 (not x809)) (x3178 x3436) (x4220 x3436))))) (x808 x3436)))
(assert (x609 x4705))
(assert (x609 x4093))
(assert (= x4101 (x4290 (x5032 x4101))))
(assert (x4289 x1486))
(assert (= (x3157 x4690) (ite (and x1000 x4625 (not x3191)) (x2895 x4690) (x2155 x4690))))
(assert (= (ite (= x3303 160) x1093 (x1849 160)) (x4221 160)))
(assert (=> (> (+ 10000 1) x4336) (= (x4755 x4336) (x5032 x4336))))
(assert (= (and x2450 x2838) x2753))
(assert (x609 x1057))
(assert (= (x1910 x953) (ite (= x953 x4225) x4534 (x588 x953))))
(assert (x609 x3246))
(assert (x609 x4069))
(assert (= (x4290 (x5032 x3823)) x3823))
(assert (= (ite (and x763 x2185) (x594 x1586) (x1571 x1586)) (x1639 x1586)))
(assert (= (ite (= x4653 x1161) x2324 (x3508 x4653)) (x1542 x4653)))
(assert (x745 x1222))
(assert (x609 x4006))
(assert (x609 x1009))
(assert (x609 x1824))
(assert (= (x4977 x1148) (ite (= x1148 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x1148))))
(assert (= (and x4852 (not x3431)) x3368))
(assert (= 117300739 (x4290 (x4755 117300739))))
(assert (= (x3207 x4690) (ite x4453 (ite x3665 (x3386 x4690) (ite x2813 (x968 x4690) (x1685 x4690))) (x3386 x4690))))
(assert (x609 x935))
(assert (= (ite (= x4659 x4111) x1939 (x5006 x4111)) (x1678 x4111)))
(assert (=> (< (- x4704 1) 10000) (= (x5032 x4704) (x4755 x4704))))
(assert (x609 x4739))
(assert (x745 x1512))
(assert (x609 x2274))
(assert (x609 x132))
(assert (= (x3835 x4602) (ite x748 (ite x3421 (x3132 x4602) (x3614 x4602)) (x416 x4602))))
(assert (= (x2707 x1067) (ite (= (x4755 0) x1067) x2630 (x4349 x1067))))
(assert (= (x831 x2579) (ite x2394 (ite x764 (x862 x2579) (x1562 x2579)) (ite (and x5003 x1932) (x4377 x2579) (x1562 x2579)))))
(assert (= (x984 x1609) (ite (= x185 x1609) x3414 (x3007 x1609))))
(assert (= (ite (= (x4755 0) x2031) x2630 (x4349 x2031)) (x2707 x2031)))
(assert (= (x493 x1148) 0))
(assert (= (x1542 x1114) (ite (= x1114 x1161) x2324 (x3508 x1114))))
(assert (x609 x427))
(assert (x609 x2604))
(assert (x609 x389))
(assert (= (ite (and x3318 x90) (ite (and (not x2093) x639 x4082) (x4474 x276) (x2524 x276)) (x2524 x276)) (x183 x276)))
(assert (= (ite (= x4788 x5351) x1755 (x679 x5351)) (x4618 x5351)))
(assert (x609 x704))
(assert (= (x3157 x5208) (ite (and (not x3191) x4625 x1000) (x2895 x5208) (x2155 x5208))))
(assert (= (ite (= x2603 x2548) x613 (x569 x2548)) (x3474 x2548)))
(assert (= 0 (x493 x5173)))
(assert (x609 x1750))
(assert (x609 x2656))
(assert (= (x1017 x2) (ite (= (x4755 0) x2) x1325 (x3161 x2))))
(assert (x3829 x854 x3112))
(assert (= (x2707 x835) (ite (= x835 (x4755 0)) x2630 (x4349 x835))))
(assert (= (x42 x601) (ite (= x601 (x4755 0)) x4687 (x212 x601))))
(assert (x609 x269))
(assert (= (ite (and x582 (not x2374) x1680 x879 x4810 x2716) (x534 x1661) (ite (and (not x879) x2716 x4810 x582 x1680) (x1225 x1661) (ite (and x4810 x2716 (not x1680) x582) (x1853 x1661) (ite (and (not x4810) x582 x2716) (x4466 x1661) (x1160 x1661))))) (x4353 x1661)))
(assert (x745 x2160))
(assert (= true x335))
(assert (= (ite x4453 (ite x3665 (x3386 x1661) (ite x2813 (x968 x1661) (x1685 x1661))) (x3386 x1661)) (x3207 x1661)))
(assert (x609 x719))
(assert (= (ite (= x2425 x3303) x1093 (x1849 x2425)) (x4221 x2425)))
(assert (= (x4290 (x5032 x4145)) x4145))
(assert (x1139 x5015 x2182 x1573 x1742))
(assert (x609 x5354))
(assert (x79 x341 x1885 x1173 x4971))
(assert (= (x2928 x2560) (ite (= x1610 x2560) x629 (x889 x2560))))
(assert (x3829 x2258 x1))
(assert (= (x4208 x2397) (ite (= x5283 x2397) x1386 (x1956 x2397))))
(assert (= x2932 (=> (= (= 0 x3779) x646) (and (=> x646 x5043) (=> (not x646) x3951)))))
(assert (x745 1461501637330902918203684832716283019655932542975))
(assert (x609 x3693))
(assert (= (ite (= x1315 x3303) x1093 (x1849 x1315)) (x4221 x1315)))
(assert (x609 x5142))
(assert (= (and x5253 (not x5339)) x2025))
(assert (x609 x682))
(assert (= x5069 (and x2607 (not x843))))
(assert (= (x631 x5351) (ite (= x5351 x4486) x654 (x4297 x5351))))
(assert (= (x1542 x1892) (ite (= x1161 x1892) x2324 (x3508 x1892))))
(assert (x745 x2292))
(assert (= (x1639 x2644) (ite (and x763 x2185) (x594 x2644) (x1571 x2644))))
(assert (x609 x3203))
(assert (x609 x4655))
(assert (x609 x1433))
(assert (x745 x5191))
(assert (x609 x1992))
(assert (= (x2707 x5008) (ite (= x5008 (x4755 0)) x2630 (x4349 x5008))))
(assert (x609 x442))
(assert (= x362 (=> (= x3222 (= x684 274184521717934524641157099916833587206)) (and (=> (not x3222) x2387) (=> (and (= x1405 1889567281) (= 36 x2132) (= x3984 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1501) true) (> 32 x1501)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1501))) (not (> 826074471 x1405)) (= (x4062 (- x2132 4)) x1501) (= x2132 x1799) (or (and (= x3617 1) (not x3984) (= x5354 32) (= 274184521717934524641157099916833587240 x2972) (= x94 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (>= x2213 0) (= x2213 (x183 x94)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2213)) (and (= x5354 x1937) (= 0 x3617) x3984)) (not (> 4 x2132)) (= x418 50942633119752846454219349998365661925608737367104304655302372697894809501696) x3222 (= x2705 (x4873 (x5032 274184521717934524641157099916833587206))) (> x2705 0) (not (= 826074471 x1405))) x1349)))))
(assert (= (and x2958 (not x726)) x3840))
(assert (x609 x2313))
(assert (x609 x1533))
(assert (x609 x4990))
(assert (x4276 x1624 x232))
(assert (x745 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x609 x2861))
(assert (= (ite (= x3932 x5283) x1386 (x1956 x3932)) (x4208 x3932)))
(assert (x745 x263))
(assert (= (ite (= x4744 x1722) 274184521717934524641157099916833587240 (x5234 x1722)) (x2396 x1722)))
(assert (= (ite (= x2750 x280) x2407 (x4184 x2750)) (x3107 x2750)))
(assert (x609 x2658))
(assert (x609 x280))
(assert (x3829 x3273 x1940))
(assert (x609 x2314))
(assert (= x1447 (and x3228 x4462)))
(assert (x609 x3444))
(assert (= (x4208 x99) (ite (= x99 x5283) x1386 (x1956 x99))))
(assert (= x700 (=> (and (= x1786 (x4606 x4438)) (= x1822 x4438) (not (= x3429 0)) (= x3519 x2241) (= x3519 (x1960 (+ x1822 x1807))) (= x4734 x1786) (= (x1960 (+ x2274 31)) x2642) (not (or (and (< x2274 32) (= true (<= x2274 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2274 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1807 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2642))) x4081)))
(assert (x609 x2444))
(assert (= (x559 x3104) (ite (and x338 x4856 (not x1973)) (x1106 x3104) (x2086 x3104))))
(assert (= (ite (= x5225 x2588) x3533 (x3982 x5225)) (x1452 x5225)))
(assert (x745 x5235))
(assert (= (ite (and x2716 x879 x582 (not x2374) x4810 x1680) (x534 x4967) (ite (and x4810 (not x879) x582 x2716 x1680) (x1225 x4967) (ite (and x4810 x582 x2716 (not x1680)) (x1853 x4967) (ite (and x2716 x582 (not x4810)) (x4466 x4967) (x1160 x4967))))) (x4353 x4967)))
(assert (x609 x733))
(assert (x609 x36))
(assert (x4276 x4003 x4209))
(assert (x609 x4010))
(assert (x609 x2428))
(assert (= (ite (= x4967 x1255) x4340 (x1886 x4967)) (x3673 x4967)))
(assert (x609 x2626))
(assert (x4289 x2152))
(assert (= (x267 x5271) (ite (and x3318 x90) (x1837 x5271) (x4561 x5271))))
(assert (= x4531 (=> (and (= x5324 (x1960 (+ x487 100))) (= x4229 (x1960 (+ x487 4))) (= (= 274184521717934524641157099916833587240 x4303) x1499) (= (x4062 (- x5324 x487)) x4598) (= x2603 (x1960 (+ 64 x203))) (= x1089 (x5313 1461501637330902918203684832716283019655932542975 x3892)) (= x2791 274184521717934524641157099916833587240) (= x4229 x203) (= x2886 (x4873 (x5032 x4303))) (not (= 0 x2886)) (= (x1960 (+ 32 x203)) x2676) (= (x5313 1461501637330902918203684832716283019655932542975 x4305) x4303)) (and (=> (not x1499) x4058) (=> (and (= x1983 x360) (= x1750 (x1017 x1615)) (= (x5313 1461501637330902918203684832716283019655932542975 x5357) x1203) (not x817) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2173) x3831) (= x4169 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x1017 x4812) x644) (= x2462 (x1650 x3633)) (= (x2113 (x5032 x4145) (x4755 208) 0) x4812) (= 274184521717934524641157099916833587240 x3621) (= (x5313 1461501637330902918203684832716283019655932542975 x1750) x4951) (> 2311529814 x4524) (= 100 x3651) (= (x2113 (x5032 x4145) (x4755 208) 0) x1615) (= (< x2462 1) x2540) (not x965) (= (x5313 1461501637330902918203684832716283019655932542975 x547) x3092) (= (x4893 x3118) x1242) (= x5142 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3602)) x1191 (= x2967 (x2113 (x5032 x4145) (x4755 208) 0)) (not x4394) (= x3831 x1176) (= x1191 (not (= x3092 0))) (= x3651 x4598) (= x547 (x1017 x2844)) (= x941 (x1960 (+ x1242 1))) (> 1166402363 x4524) (= 1 x2320) (= (x1960 (+ 274184521717934524641157099916833587240 x5142)) x1569) (= (> x1242 115792089237316195423570985008687907853269984665640564039457584007913129639934) x3580) (not (= x4524 511946350)) (= x3602 (x4091 x2967)) (= x4394 (= x1203 0)) (<= x360 1461501637330902918203684832716283019655932542975) (= x1157 (x4062 (- x3651 4))) (= x2986 x4145) (= (x2113 (x5032 x4145) (x4755 208) 0) x2844) (not (= x4524 455944412)) (= (x5313 1461501637330902918203684832716283019655932542975 x644) x4645) (= x4524 599290589) (not (> 4 x3651)) (= x2173 (x1017 x2)) (> x952 0) (= x3294 (x4873 (x5032 274184521717934524641157099916833587240))) (= x4645 x1983) (= x1089 x360) (not x3580) (= (x4062 (- x2462 1)) x4549) (= x2580 x4145) (not x2540) (= x3633 (x2113 (x5032 x360) (x4755 209) 0)) (= (x1650 x964) x5357) (= x2 (x2113 (x5032 x4145) (x4755 210) 0)) (= (= 0 x4645) x965) (or (and (= x952 (ite x1608 1 0)) x1608) (and (not x1608) (= x5356 (not (= 0 x3850))) (or (and (= x952 (ite x3278 1 0)) x3278) (and (= (x2113 (x5032 x4951) (x4755 211) 0) x1336) (not x3278) (= (x1017 x4384) x386) (= x952 x2076) (= x2076 (x5313 255 x386)) (= (x2113 (x5032 274184521717934524641157099916833587240) x1336 0) x4384))) (= x1977 (x5313 1461501637330902918203684832716283019655932542975 x2720)) (= x4953 (x1017 x2117)) (= (x1017 x31) x2720) (= x3278 (= 274184521717934524641157099916833587240 x1977)) (= x31 (x2113 (x5032 x4145) (x4755 210) 0)) x5356 (= (x5313 1461501637330902918203684832716283019655932542975 x4953) x3850) (= (x2113 (x5032 x4145) (x4755 208) 0) x2117))) (= (x2113 (x5032 x4145) (x4755 208) 0) x964) (> x3294 0) (= (or (> x1157 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x1157) (= true (<= x1157 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x817) (= x4695 274184521717934524641157099916833587240) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0) x3118) (= x1608 (= x4951 274184521717934524641157099916833587240)) (not x3607) (= x2433 0) (not (> 455944412 x4524)) x1499 (= x3607 (= 0 x4951))) x2855)))))
(assert (x609 x3737))
(assert (= (x2707 x10) (ite (= (x4755 0) x10) x2630 (x4349 x10))))
(assert (x609 x628))
(assert (x609 x1755))
(assert (x609 x1446))
(assert (x609 x3886))
(assert (=> (< (- x554 1) 10000) (= (x5032 x554) (x4755 x554))))
(assert (= (ite (= x1870 x332) x3571 (x1853 x1870)) (x1225 x1870)))
(assert (x609 x5348))
(assert (=> (< (- x3370 1) 10000) (= (x5032 x3370) (x4755 x3370))))
(assert (x609 x239))
(assert (x609 x227))
(assert (x745 x3686))
(assert (x4289 x3517))
(assert (= (x4651 x3584) (ite (= x3584 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x3584))))
(assert (= x3993 (x4290 (x5032 x3993))))
(assert (= x2956 (and (not x3443) x250)))
(assert (x3829 x2249 x4311))
(assert (= (ite (= x4438 x4822) x3430 (x2959 x4438)) (x588 x4438)))
(assert (x4468 x2626 x1595 x1008 x3822))
(assert (x609 x1069))
(assert (x745 x2399))
(assert (= (ite (= x4944 x3708) 0 (x2646 x3708)) (x156 x3708)))
(assert (x4289 x4704))
(assert (x609 x937))
(assert (x609 x3330))
(assert (= (x4208 x4111) (ite (= x4111 x5283) x1386 (x1956 x4111))))
(assert (x609 x1493))
(assert (x609 x1823))
(assert (= (ite (and (not x472) x2716 x582) (x4353 x1870) (x1101 x1870)) (x3386 x1870)))
(assert (= (ite (= x4420 (x4755 0)) x1325 (x3161 x4420)) (x1017 x4420)))
(assert (x609 x486))
(assert (x4276 x3988 x4016))
(assert (x609 x3080))
(assert (x609 x3553))
(assert (x609 x5208))
(assert (x609 x2118))
(assert (x609 x376))
(assert (= (x4284 (- x5067 x2721)) 0))
(assert (x2749 x3399 x3271 x5272 x556))
(assert (= x1274 (and x1021 x3559)))
(assert (x609 x314))
(assert (= (x5124 x3914) (ite (and x763 (not x5359) x2185) (x808 x3914) (x3946 x3914))))
(assert (= (x4208 x1148) (ite (= x5283 x1148) x1386 (x1956 x1148))))
(assert (x609 x4843))
(assert (x609 x2633))
(assert (x609 x5205))
(assert (x3829 x3828 x1774))
(assert (= (x1452 x3795) (ite (= x3795 x2588) x3533 (x3982 x3795))))
(assert (x609 x2173))
(assert (= (ite (= x2429 x3839) x1282 (x2635 x3839)) (x1796 x3839)))
(assert (= x4409 (or (and x4942 (not x4518)) x2690)))
(assert (x609 x2677))
(assert (= (x1675 x1537) (ite (and x792 (not x1416) x2673) (x2427 x1537) (x3346 x1537))))
(assert (= x4451 (or (and x4670 (not x3716)) x5063)))
(assert (x609 x1388))
(assert (x609 x4158))
(assert (= x1456 (=> (and (= (= x2677 x3186) x5322) (= x2677 x245)) (and (=> (not x5322) x2443) (=> x5322 x460)))))
(assert (= (=> (and (= (x2041 x5241) x2061) (<= x2061 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4271 x3470) (= (> x4711 x2061) x3035) (<= 0 x2061) (= x5241 (x2113 (x5032 x1486) (x4755 1) 0))) (and (=> x3035 x1483) (=> (not x3035) x4281))) x5389))
(assert (x609 x4524))
(assert (= (ite (= x4772 x1161) x2324 (x3508 x4772)) (x1542 x4772)))
(assert (= (x1639 x3448) (ite (and x2185 x763) (x594 x3448) (x1571 x3448))))
(assert (= (x5362 x2401) (ite (= x4813 x2401) x5273 (x1702 x2401))))
(assert (x609 x760))
(assert (=> (< (- x1458 1) 10000) (= (x4755 x1458) (x5032 x1458))))
(assert (= (x3314 x970) (ite (and x2654 x4838) (x3423 x970) (ite (and x3717 x657) (x1118 x970) (x4134 x970)))))
(assert (x609 x131))
(assert (= (x3474 x3447) (ite (= x3447 x2603) x613 (x569 x3447))))
(assert (= (ite (= x736 x331) x4904 (x4431 x736)) (x786 x736)))
(assert (x609 x2109))
(assert (= (=> (and (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1473) x4259) (= x1473 (x1960 (+ 31 x1467))) (= x4266 (x1960 (+ x4259 x721))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1467) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1467)) (< x1467 32))) x4460)) (and (=> x4460 x5043) (=> (and (= x721 x5151) (= x497 (x1209 x5151)) (= x4266 x4030) (not x4460) (= x4048 x497)) x4323))) x2248))
(assert (x609 x2552))
(assert (x609 x5161))
(assert (= (ite x2394 (ite x764 (x1298 x94) (x4579 x94)) (x4257 x94)) (x1681 x94)))
(assert (= x2342 (=> (and (= x5374 x5365) (= x2410 x2163) (= x3986 (x5313 1461501637330902918203684832716283019655932542975 x3273)) (= x1214 (= x3273 x3986)) (= x2562 x3010) (= x1806 x4711)) (and (=> (not x1214) x5043) (=> x1214 x4544)))))
(assert (= (x4716 x5271) (ite x3220 (ite x3129 (x2137 x5271) (x5237 x5271)) (x374 x5271))))
(assert (x4289 x4010))
(assert (= (ite (= x838 x1161) x2324 (x3508 x838)) (x1542 x838)))
(assert (= (x4221 x1583) (ite (= x3303 x1583) x1093 (x1849 x1583))))
(assert (x609 x5387))
(assert (x609 x3550))
(assert (= (ite (= x2867 x3914) x4439 (x2356 x3914)) (x3934 x3914)))
(assert (= (x4290 (x5032 x3187)) x3187))
(assert (x2556 x4080 x4523 x1215 x74))
(assert (x609 x3042))
(assert (= (ite (= x280 x970) x2407 (x4184 x970)) (x3107 x970)))
(assert (= (or (and x3141 x5163) (and x3164 x2776) (and x4825 x3222)) x1119))
(assert (x609 x653))
(assert (x3829 x5002 x1024))
(assert (x609 x2226))
(assert (x609 x1507))
(assert (x609 x4003))
(assert (x609 x1133))
(assert (= (x382 x671) (ite (= x671 x5121) x3039 (x2195 x671))))
(assert (x609 x3730))
(assert (= (x1681 x5225) (ite x2394 (ite x764 (x1298 x5225) (x4579 x5225)) (x4257 x5225))))
(assert (x609 x2529))
(assert (x609 x3127))
(assert (x609 x268))
(assert (x609 x2100))
(assert (= x2388 (and x4599 (not x1064))))
(assert (= (ite (= x1636 x4967) 274184521717934524641157099916833587240 (x2029 x4967)) (x221 x4967)))
(assert (= (x3314 x2806) (ite (and x2654 x4838) (x3423 x2806) (ite (and x3717 x657) (x1118 x2806) (x4134 x2806)))))
(assert (= (ite (= x3177 x5351) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x5351)) (x4977 x5351)))
(assert (= x4747 (x4290 (x5032 x4747))))
(assert (x609 x5119))
(assert (= (ite (and (not x503) x2651 x4469 x2673 x792 x1391) (x2928 x1658) (ite (and x1391 x4469 x792 x2673 (not x2651)) (x889 x1658) (ite (and x4469 x2673 x792 (not x1391)) (x3588 x1658) (ite (and x792 (not x4469) x2673) (x1796 x1658) (x509 x1658))))) (x2427 x1658)))
(assert (x609 x1797))
(assert (= (x2707 x3865) (ite (= x3865 (x4755 0)) x2630 (x4349 x3865))))
(assert (= (ite (= x5283 x5173) x1386 (x1956 x5173)) (x4208 x5173)))
(assert (= (ite (= x76 x1591) x1250 (x2617 x76)) (x3776 x76)))
(assert (x609 x1776))
(assert (x609 x3628))
(assert (x609 x2046))
(assert (= (ite (= x1369 x2865) x4375 (x3032 x2865)) (x3007 x2865)))
(assert (= (ite (= x5086 x4767) 0 (x3760 x5086)) (x3618 x5086)))
(assert (= 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x4290 (x4755 34167655436598589418538772692774877509225721125679165766806516059628562808832))))
(assert (x609 x4753))
(assert (=> (> (+ 10000 1) x1525) (= (x5032 x1525) (x4755 x1525))))
(assert (= (x3596 x2806) (ite (= x4128 x2806) x3780 (x4036 x2806))))
(assert (x609 x4788))
(assert (= (x4290 (x4755 2650021976)) 2650021976))
(assert (= (x4755 2835717307) (x5032 2835717307)))
(assert (x609 x3705))
(assert (x609 x1360))
(assert (x745 x1629))
(assert (x609 x1556))
(assert (= x1756 (and (not x3316) x3373)))
(assert (x609 x3281))
(assert (x3829 x1750 x469))
(assert (x609 x3912))
(assert (= x3955 (or (and x2949 x3547) (and x3288 x3258) (and x4648 x5005) (and x292 (not x2840)) (and x2286 (not x3083)) (and x2735 x1092) (and (not x2512) x3804) (and x411 x2148) (and x2424 (not x5132)) (and (not x3659) x567) (and x3702 x1990))))
(assert (x609 x1242))
(assert (x609 x3806))
(assert (x609 x2986))
(assert (x745 x4029))
(assert (= (x3729 x4370) 0))
(assert (= (x4290 (x5032 x852)) x852))
(assert (= x2347 (=> (and (= x1611 x2276) (> x3255 0) (not (= 157198259 x1167)) (= x2152 x1657) (> 826074471 x1167) (= x2040 x5282) (= 100 x2276) (not (= 404098525 x1167)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4509)) (< x4509 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4509)) x3401) (= x1049 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4509 (x4062 (- x2276 4))) (not (< x2276 4)) (= x1167 599290589) (= x3255 (x4873 (x5032 274184521717934524641157099916833587202))) (not (= x1167 117300739))) (and (=> (not x3401) x1476) (=> x3401 x2657)))))
(assert (x609 x2380))
(assert (= (ite (and x763 x2185) (ite (and x1516 x763 x2185) (x1871 x2579) (x1947 x2579)) (x1947 x2579)) (x1562 x2579)))
(assert (= (x2041 x2135) (ite x748 (ite x3421 (x2101 x2135) (x3643 x2135)) (x4555 x2135))))
(assert (= (x4977 x2548) (ite (= x2548 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x2548))))
(assert (= (=> (= (= 0 x446) x1326) (and (=> x1326 x5043) (=> (not x1326) x137))) x1644))
(assert (= (x1522 x5176) (ite (= x5176 x2724) x1563 (x631 x5176))))
(assert (x745 x2720))
(assert (= x3951 (=> (and (= (x5313 1461501637330902918203684832716283019655932542975 x80) x172) (= x4435 (< 0 x3058)) (= x3058 (x4873 (x5032 x172)))) (and (=> (and (= x4020 (x2272 (x5032 274184521717934524641157099916833587240))) (= x4020 x4048) (not x4435) (= x721 x4030)) x4323) (=> x4435 x4867)))))
(assert (= (ite (and (not x2405) x3292 x5103) (x3205 x970) (x4651 x970)) (x5167 x970)))
(assert (x609 x4515))
(assert (x745 x688))
(assert (= (and x4025 x4950) x1787))
(assert (x609 x613))
(assert (= (x889 x5208) (ite (= x5208 x3553) x2175 (x3588 x5208))))
(assert (x609 x652))
(assert (x745 x2642))
(assert (x609 x1338))
(assert (x609 x4562))
(assert (= x192 (x4290 (x5032 x192))))
(assert (x609 x3828))
(assert (x4289 x2652))
(assert (= (x3107 x3436) (ite (= x280 x3436) x2407 (x4184 x3436))))
(assert (x609 x2955))
(assert (x609 x373))
(assert (= (x5032 115792089237316195423570985008687907853269984665640564039457584007913129639908) (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639908)))
(assert (= (=> (and x336 (= x847 (x4584 (x5032 274184521717934524641157099916833587240))) (= (x4584 (x5032 x4735)) x3323) x3907 (= (< x3323 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3907) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5349 (x5032 x4735))) x445) x445 (= (= x4735 274184521717934524641157099916833587240) x4577) (= (x4584 (x5032 274184521717934524641157099916833587240)) x1935) (= x3426 (x5349 (x5032 x4735))) (= x336 (<= 0 x1935)) (= x405 x1100)) (and (=> (and (= (x2113 (x5032 x669) (x4755 208) 0) x406) (= (x5362 x406) x4132) (= x535 274184521717934524641157099916833587240) (not x2615) (not (= x2365 511946350)) (= x2200 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4207) (and (= (<= x4207 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4207 96)))) (= (x2113 (x5032 x669) (x4755 210) 0) x3891) (= 1 x3675) (= x2552 (x1253 x2130)) (= x4732 (x1960 (+ 1 x730))) (= (x5313 1461501637330902918203684832716283019655932542975 x3828) x729) (not x3816) (= (x5313 1461501637330902918203684832716283019655932542975 x4132) x2785) (= 100 x4093) (= x2278 x2710) (= (x4062 (- x4093 4)) x4207) (= x1914 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 455944412 x2365)) (= (x5362 x2401) x4158) (< 0 x30) (= x438 x2278) (= x4270 (< x5338 1)) (<= x2278 1461501637330902918203684832716283019655932542975) (= x3510 (x756 x311)) (= (x2113 (x5032 x2278) (x4755 209) 0) x555) (not (< x4093 4)) (= x912 x4217) (= (x5313 1461501637330902918203684832716283019655932542975 x3510) x1151) (= (x1960 (+ x3502 274184521717934524641157099916833587240)) x506) (= (x756 x555) x5338) (= (= 0 x2785) x4396) (> 1166402363 x2365) (not x2200) (= (= 0 x1151) x3816) (not x4270) (= (x5313 1461501637330902918203684832716283019655932542975 x4158) x2440) (= x912 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x305)) (= x719 x669) (= x730 (x3753 x3523)) (= x1100 x4093) (= (= 274184521717934524641157099916833587240 x2785) x610) (= x30 (x4873 (x5032 274184521717934524641157099916833587240))) (not (< x2365 455944412)) (= x2130 (x2113 (x5032 x669) (x4755 208) 0)) (= x2615 (= x2440 0)) x4577 (= 599290589 x2365) (= x305 (x5362 x3891)) (= x482 (x2113 (x5032 x669) (x4755 208) 0)) (= 0 x3861) (= x3341 (x4062 (- x5338 1))) (not x4396) (= 0 x461) (> 2311529814 x2365) (= x2710 x2440) (= x120 (not (= 0 x729))) (= x2401 (x2113 (x5032 x669) (x4755 208) 0)) (or (and (= (x5362 x4420) x2249) (= x2258 (x5362 x4480)) x531 (= (x2113 (x5032 x669) (x4755 208) 0) x4420) (not x610) (= (x2113 (x5032 x669) (x4755 210) 0) x4480) (= (x5313 1461501637330902918203684832716283019655932542975 x2249) x5244) (= x531 (not (= 0 x5244))) (= x1768 (= 274184521717934524641157099916833587240 x2817)) (= x2817 (x5313 1461501637330902918203684832716283019655932542975 x2258)) (or (and (= x478 (x2113 (x5032 274184521717934524641157099916833587240) x3969 0)) (not x1768) (= (x5362 x478) x2656) (= x3329 x1708) (= (x5313 255 x2656) x1708) (= x3969 (x2113 (x5032 x2785) (x4755 211) 0))) (and x1768 (= x3329 (ite x1768 1 0))))) (and (= x3329 (ite x610 1 0)) x610)) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2552) x3502) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0) x3523) x120 (= x311 (x2113 (x5032 x669) (x4755 208) 0)) (= x3827 (> x730 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (< 0 x3329) (not x3827) (= (x5362 x482) x3828) (= x669 x703) (= 274184521717934524641157099916833587240 x125)) x2068) (=> (not x4577) x2888))) x3335))
(assert (= (x3934 x2806) (ite (= x2806 x2867) x4439 (x2356 x2806))))
(assert (x609 x3287))
(assert (x609 x1448))
(assert (x609 x912))
(assert (= x5 (x4290 (x5032 x5))))
(assert (x3649 x2078 x1698 x2519 x366))
(assert (= (ite (= x4967 x4944) 0 (x2646 x4967)) (x156 x4967)))
(assert (= (ite (and x2654 x4838) (x3423 x1586) (ite (and x3717 x657) (x1118 x1586) (x4134 x1586))) (x3314 x1586)))
(assert (x609 x333))
(assert (= x2570 (x4290 (x5032 x2570))))
(assert (x609 x4021))
(assert (x609 x2920))
(assert (= (x550 x4642) (ite (= x487 x4642) 0 (x2852 x4642))))
(assert (= (=> (and (= x2168 x2786) (= x4244 0)) x3034) x2443))
(assert (x609 x1779))
(assert (= (ite (= x4111 x96) 274184521717934524641157099916833587240 (x456 x4111)) (x1340 x4111)))
(assert (x609 x2562))
(assert (x745 x4080))
(assert (x609 x688))
(assert (= (x4290 (x5032 x1486)) x1486))
(assert (= (x382 x400) (ite (= x400 x5121) x3039 (x2195 x400))))
(assert (x609 x4595))
(assert (= (=> (= x2431 (= 274184521717934524641157099916833587240 x2541)) (and (=> (and x2431 (not (> 4 x1719)) (not (> 1166402363 x1474)) (= x4694 (x4873 (x5032 274184521717934524641157099916833587240))) (= (x4062 (- x1719 4)) x490) (not (= x1474 1858285468)) (= x1719 36) (= x5146 (or (and (> 32 x490) (= true (<= x490 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x490 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x1474 2311529814) (= x1719 x3385) (not (= x1474 1845821197)) (< 0 x4694) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1443) (or (and (= 274184521717934524641157099916833587240 x4458) (not x5146) (= 32 x1467) (= 1 x1431) (= x3054 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0)) (= (x3776 x3054) x565)) (and (= x1467 x2408) x5146 (= 0 x1431))) (not (= x1474 1722255204)) (= 1889567281 x1474) (not (> 1722255204 x1474))) x4570) (=> (not x2431) x1221))) x3216))
(assert (x609 x2687))
(assert (x609 x1657))
(assert (x609 x2362))
(assert (x609 x894))
(assert (= (ite (= x4057 x1618) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x1618)) (x2155 x1618)))
(assert (x609 x866))
(assert (x609 x2070))
(assert (= (x1910 x3592) (ite (= x3592 x4225) x4534 (x588 x3592))))
(assert (x609 x4968))
(assert (x4289 x1279))
(assert (= (x4727 (x1960 (+ 32 x2299))) 0))
(assert (x609 x2214))
(assert (x609 x4776))
(assert (= (x156 x3049) (ite (= x3049 x4944) 0 (x2646 x3049))))
(assert (x4289 x1307))
(assert (x1139 x818 x3008 x1676 x1200))
(assert (= (ite x2394 (ite x764 (x2058 x4204) (x1264 x4204)) (x3679 x4204)) (x515 x4204)))
(assert (= (x3359 x4594) (ite (and x4600 x4451) (x4329 x4594) (x550 x4594))))
(assert (x609 x2631))
(assert (= (ite (= x3609 (x4755 0)) x2630 (x4349 x3609)) (x2707 x3609)))
(assert (x609 x1710))
(assert (x609 x2693))
(assert (= (x4290 (x5032 x4380)) x4380))
(assert (= x3090 (=> (and (= (x2113 (x5032 x1657) (x4755 1) 0) x739) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2421) (>= x2421 0) (= (< x2421 x2040) x186) (= x2421 (x4431 x739)) (= x3599 x5282)) (and (=> (not x186) x568) (=> x186 x2657)))))
(assert (= (x4618 x1148) (ite (= x1148 x4788) x1755 (x679 x1148))))
(assert (x609 x80))
(assert (= x4614 true))
(assert (=> (> (+ 10000 1) x1367) (= (x5032 x1367) (x4755 x1367))))
(assert (x609 x5154))
(assert (x609 x3617))
(assert (= (x382 x3669) (ite (= x3669 x5121) x3039 (x2195 x3669))))
(assert (x4289 x4310))
(assert (= (x1017 x51) (ite (= x51 (x4755 0)) x1325 (x3161 x51))))
(assert (= (x808 x2095) (ite (and x809 x763 x4042 (not x3343) x2210 x2185) (x1910 x2095) (ite (and x763 x2185 (not x2210) x809 x4042) (x588 x2095) (ite (and x2185 x763 x809 (not x4042)) (x2959 x2095) (ite (and x2185 x763 (not x809)) (x3178 x2095) (x4220 x2095)))))))
(assert (= (x4977 x3775) (ite (= x3775 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x3775))))
(assert (= (x3386 x788) (ite (and x2716 (not x472) x582) (x4353 x788) (x1101 x788))))
(assert (=> (= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x2883) (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x4693)) (= x2883 x4693)))
(assert (= (ite (and x2673 x2651 x1391 x4469 (not x503) x792) (x2928 x5271) (ite (and (not x2651) x4469 x792 x1391 x2673) (x889 x5271) (ite (and x4469 (not x1391) x2673 x792) (x3588 x5271) (ite (and x792 x2673 (not x4469)) (x1796 x5271) (x509 x5271))))) (x2427 x5271)))
(assert (x609 x4216))
(assert (= (x3673 x344) (ite (= x344 x1255) x4340 (x1886 x344))))
(assert (= (ite (= x4767 x5176) 0 (x3760 x5176)) (x3618 x5176)))
(assert (= (=> (and (= x2156 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x341)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x997) true) (< x997 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x997)) x2857) (= (x1960 (+ x997 31)) x341) (= (x1960 (+ x2156 x2069)) x3395)) (and (=> x2857 x5043) (=> (not x2857) x787))) x5052))
(assert (x609 x4629))
(assert (= (and (not x2857) x3047) x90))
(assert (x609 x1953))
(assert (x609 x2337))
(assert (x609 x3385))
(assert (= (x3729 x1618) 0))
(assert (= (x3113 x1586) (ite (and x2980 x370) (x2266 x1586) (x2127 x1586))))
(assert (x609 x4693))
(assert (x609 x3145))
(assert (= (=> (= x3380 (= 0 x2121)) (and (=> x3380 x5043) (=> (not x3380) x5052))) x4621))
(assert (= (ite (= x478 (x4755 0)) x1325 (x3161 x478)) (x1017 x478)))
(assert (x609 x660))
(assert (= (ite (= (x4755 0) x4384) x1325 (x3161 x4384)) (x1017 x4384)))
(assert (x609 x5321))
(assert (= (ite (= x2226 x2429) x1282 (x2635 x2226)) (x1796 x2226)))
(assert (x4289 x4363))
(assert (x609 x4484))
(assert (x609 x1958))
(assert (x609 x4448))
(assert (=> (< (- x4145 1) 10000) (= (x4755 x4145) (x5032 x4145))))
(assert (x745 x3174))
(assert (=> (> (+ 10000 1) x598) (= (x5032 x598) (x4755 x598))))
(assert (= (ite x2394 (ite x764 (x4984 (x5032 x2152)) (x1695 (x5032 x2152))) (x689 (x5032 x2152))) (x2044 (x5032 x2152))))
(assert (= (x5362 (x4755 0)) (ite (= (x4755 0) x4813) x5273 (x1702 (x4755 0)))))
(assert (= (x3344 x2527) (ite (= x2527 x3778) x1806 (x4728 x2527))))
(assert (= (=> (= x4498 (> x3470 x2061)) (and (=> (not x4498) x62) (=> x4498 x1483))) x4281))
(assert (x609 x3675))
(assert (x609 x3943))
(assert (= (x889 x1658) (ite (= x1658 x3553) x2175 (x3588 x1658))))
(assert (x609 x4386))
(assert (= (x550 x3932) (ite (= x487 x3932) 0 (x2852 x3932))))
(assert (x1139 x3286 x772 x1996 x4361))
(assert (= x5292 (=> (= (> x662 0) x2840) (and (=> x2840 x2090) (=> (not x2840) x117)))))
(assert (x609 x1361))
(assert (= (ite (= x5208 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x5208)) (x2155 x5208)))
(assert (= (ite (= x806 x2560) x3630 (x1225 x2560)) (x534 x2560)))
(assert (x609 x4934))
(assert (x609 x3341))
(assert (= (ite (= x2142 x2560) x3483 (x3635 x2560)) (x3218 x2560)))
(assert (x609 x67))
(assert (x745 x3797))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249216 (x4290 (x4755 26959946667150639794667015087019630673637144422540572481103610249216))))
(assert (= (=> (and (= x4662 (not (= 0 x188))) (= x3669 (x2113 (x5032 x2034) (x4755 208) 0)) (= x5392 (x3776 x3669)) (= (x5313 1461501637330902918203684832716283019655932542975 x5392) x188)) (and (=> (not x4662) x572) (=> (and (= (x5313 1461501637330902918203684832716283019655932542975 x2160) x4050) x4662 (= x4536 (x2113 (x5032 x2034) (x4755 210) 0)) (or (and (= x3843 x3763) (= (x3776 x671) x5119) (= (x2113 (x5032 274184521717934524641157099916833587240) x2184 0) x671) (not x2957) (= x2184 (x2113 (x5032 x4172) (x4755 211) 0)) (= (x5313 255 x5119) x3763)) (and x2957 (= x3843 (ite x2957 1 0)))) (= (= 274184521717934524641157099916833587240 x4050) x2957) (= x2160 (x3776 x4536))) x2227))) x1075))
(assert (= (x3474 x4111) (ite (= x2603 x4111) x613 (x569 x4111))))
(assert (= (x2707 (x4755 106)) (ite (= (x4755 0) (x4755 106)) x2630 (x4349 (x4755 106)))))
(assert (= (ite (= x3498 x3740) x2754 (x42 x3740)) (x2195 x3740)))
(assert (x609 x288))
(assert (x745 x2078))
(assert (= (x4208 x2672) (ite (= x5283 x2672) x1386 (x1956 x2672))))
(assert (= x5345 (and (not x243) x1812)))
(assert (x4289 x3610))
(assert (x609 x738))
(assert (= (ite (= x4594 x5283) x1386 (x1956 x4594)) (x4208 x4594)))
(assert (x609 x4585))
(assert (= (x1225 x4690) (ite (= x332 x4690) x3571 (x1853 x4690))))
(assert (= (x3032 x5176) (ite (= x1946 x5176) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x5176))))
(assert (= (=> (and (= x3472 x1611) (= x3062 (x4718 (x5032 274184521717934524641157099916833587240))) (= (and (< x1546 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x3062)) x4473) (= x1546 (x4718 (x5032 x353)))) (and (=> x4473 x1334) (=> (and (= x3240 0) (not x4473) (= 0 x2057)) x44))) x539))
(assert (= x4687 (x42 (x4755 0))))
(assert (= (ite (= x2644 x2536) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x2644)) (x4184 x2644)))
(assert (x609 x1486))
(assert (= (x1655 x1586) (ite (= x4252 x1586) 0 (x5379 x1586))))
(assert (= (ite (= x487 x3104) 0 (x2852 x3104)) (x550 x3104)))
(assert (x609 x2160))
(assert (= (x4816 x4642) (ite (and x4451 x4600 x4360 (not x1887) x2875 x4192) (x4618 x4642) (ite (and (not x4360) x2875 x4192 x4600 x4451) (x679 x4642) (ite (and (not x4192) x2875 x4600 x4451) (x1522 x4642) (ite (and x4451 x4600 (not x2875)) (x631 x4642) (x2091 x4642)))))))
(assert (x609 x5106))
(assert (= (x4208 x3158) (ite (= x5283 x3158) x1386 (x1956 x3158))))
(assert (= (x3934 x2095) (ite (= x2867 x2095) x4439 (x2356 x2095))))
(assert (x609 x1255))
(assert (= (x289 x3448) (ite (= x3448 x5386) x1036 (x3739 x3448))))
(assert (x609 x1140))
(assert (=> (> (+ 10000 1) x3660) (= (x4755 x3660) (x5032 x3660))))
(assert (= (ite (= x5283 x4780) x1386 (x1956 x4780)) (x4208 x4780)))
(assert (x609 x3621))
(assert (= (ite (= x2539 x4428) x205 (x3306 x2539)) (x1372 x2539)))
(assert (x745 x2914))
(assert (x609 x5093))
(assert (= (x2707 x1892) (ite (= x1892 (x4755 0)) x2630 (x4349 x1892))))
(assert (x609 x5026))
(assert (= x1320 (and x2391 x1980)))
(assert (= (ite (and x4625 x1000 (not x3191)) (x2895 x4967) (x2155 x4967)) (x3157 x4967)))
(assert (= (x1796 x3952) (ite (= x3952 x2429) x1282 (x2635 x3952))))
(assert (x609 x1363))
(assert (x609 x4163))
(assert (x5318 x135 x3714))
(assert (= (ite (= x3932 x96) 274184521717934524641157099916833587240 (x456 x3932)) (x1340 x3932)))
(assert (= (=> (and (= (< 0 x2731) x2673) (= x3874 x3424) (= (x5313 1461501637330902918203684832716283019655932542975 x4213) x3424) (= 0 x295) (= (x5313 1461501637330902918203684832716283019655932542975 x4213) x1525) (= (x2617 x1591) x2221) (= x4604 (x1960 (+ 1 x2981))) (= 0 x1539) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2221) x4341) (= x2731 (x4873 (x5032 x1525))) (= (x2113 (x5032 x4010) (x4755 208) 0) x1591) (= (x1960 (+ x4341 x3874)) x1250)) (and (=> (and (= x61 x2069) (not x2673) (= x3066 1)) x699) (=> (and (= (> x448 x1282) x1416) (= x144 (x5313 1461501637330902918203684832716283019655932542975 x4213)) (= x1282 (x2635 x2907)) (or (and (= (x1796 x5331) x1390) (or (and (= x448 32) (not x1391)) (and (= (x3588 x2226) x2175) (= x3553 (x1960 (+ 64 x2429))) x1391 (= x2651 (< 64 x1282)) (or (and (not x2651) (= x448 64)) (and (= x1610 (x1960 (+ 96 x2429))) (= x3952 (x1960 (+ 96 x2907))) (= (> x1282 96) x503) (= x629 (x889 x3952)) x2651 (or (and (= x448 128) (= (x1960 (+ 128 x2429)) x5046) x503 (= (> x1282 128) x5302) (not x5302) (= (x1960 (+ x2907 128)) x3839) (= x3095 (x2928 x3839))) (and (not x503) (= 96 x448))))) (= (x1960 (+ 64 x2907)) x2226))) (= x5331 x1953) (= (> x1282 32) x1391) x4469 (= x4745 x5393)) (and (not x4469) (= x448 0))) (or (not x1416) (and x1416 (= x680 (x1960 (+ x1282 x5393))))) (= (x5313 1461501637330902918203684832716283019655932542975 x4213) x2412) (= x4639 x1497) (= (x1960 (+ x2907 32)) x1953) (= x5393 (x1960 (+ 160 x4639))) (= (< 0 x1282) x4469) x2673 (= (x1960 (+ x2069 132)) x2429) (= (x1960 (+ x1011 64)) x5378) (= x1779 (x1960 (+ x1497 64))) (= (x1960 (+ x1497 32)) x1011) (= x4639 (x1960 (+ 36 x2907)))) x72))) x2583))
(assert (= x1288 (x4290 (x5032 x1288))))
(assert (= (x4561 x2527) (ite (= x2907 x2527) 0 (x1382 x2527))))
(assert (x745 x4927))
(assert (x609 x1307))
(assert (= (ite (= x1586 x2363) x396 (x2862 x1586)) (x3632 x1586)))
(assert (= (ite (= x2548 x2724) x1563 (x631 x2548)) (x1522 x2548)))
(assert (x609 x1283))
(assert (x745 x4305))
(assert (= (x5362 x478) (ite (= x4813 x478) x5273 (x1702 x478))))
(assert (= (ite (= x3778 x3839) x1806 (x4728 x3839)) (x3344 x3839)))
(assert (x609 x2730))
(assert (= x3406 (x4290 (x5032 x3406))))
(assert (= (x3618 x4330) (ite (= x4767 x4330) 0 (x3760 x4330))))
(assert (=> (> (+ 10000 1) x5159) (= (x4755 x5159) (x5032 x5159))))
(assert (x609 x2232))
(assert (x609 x3))
(assert (x609 x1494))
(assert (= (x4290 (x5032 x981)) x981))
(assert (x609 x4903))
(assert (x609 x3004))
(assert (= (x4751 x5176) (ite (= x3886 x5176) x3146 (x984 x5176))))
(assert (x609 x5228))
(assert (= (ite (= x5283 x3104) x1386 (x1956 x3104)) (x4208 x3104)))
(assert (x609 x3958))
(assert (= (x1853 x788) (ite (= x788 x2892) x239 (x4466 x788))))
(assert (x745 x2249))
(assert (x609 x2643))
(assert (x4289 x981))
(assert (x3641 x2297 x4302))
(assert (x4289 x5105))
(assert (x609 x1545))
(assert (x609 x871))
(assert (= (x4290 (x5032 x684)) x684))
(assert (= (x4816 x3104) (ite (and x4600 x4360 x2875 (not x1887) x4451 x4192) (x4618 x3104) (ite (and x4600 x4451 x4192 x2875 (not x4360)) (x679 x3104) (ite (and x2875 x4600 x4451 (not x4192)) (x1522 x3104) (ite (and x4451 (not x2875) x4600) (x631 x3104) (x2091 x3104)))))))
(assert (= (x2474 x2548) (ite (and x4600 (not x4298) x4451) (x4816 x2548) (x1840 x2548))))
(assert (x609 x3169))
(assert (= (ite (and x4580 (not x5307) x1226) (x3532 x3592) (x5334 x3592)) (x3423 x3592)))
(assert (x609 x3914))
(assert (= (ite (and x809 x2185 x4042 x2210 x763 (not x3343)) (x1910 x3592) (ite (and x2185 (not x2210) x809 x4042 x763) (x588 x3592) (ite (and x809 x2185 x763 (not x4042)) (x2959 x3592) (ite (and (not x809) x763 x2185) (x3178 x3592) (x4220 x3592))))) (x808 x3592)))
(assert (x609 x4695))
(assert (x745 x5246))
(assert (x609 x2305))
(assert (= (x3588 x1618) (ite (= x1618 x4745) x1390 (x1796 x1618))))
(assert (x5318 x2938 x1201))
(assert (x609 x3065))
(assert (x609 x4461))
(assert (= (ite (= x1255 (x1960 (+ 64 x53))) x4340 (x1886 (x1960 (+ x53 64)))) (x3673 (x1960 (+ x53 64)))))
(assert (= (x4290 (x6 x2176 2)) (+ 2 (x4290 x2176))))
(assert (= (ite (= (x1960 (+ 96 x53)) x1255) x4340 (x1886 (x1960 (+ 96 x53)))) (x3673 (x1960 (+ 96 x53)))))
(assert (x745 x3371))
(assert (=> (< (- x549 1) 10000) (= (x4755 x549) (x5032 x549))))
(assert (x609 x251))
(assert (x609 x467))
(assert (= (x1675 x5208) (ite (and (not x1416) x792 x2673) (x2427 x5208) (x3346 x5208))))
(assert (= (x4284 (- x1870 x2721)) 0))
(assert (x609 x5235))
(assert (= (ite (= x1586 x4822) x3430 (x2959 x1586)) (x588 x1586)))
(assert (= (ite (and (not x1716) x2884 x2906) (x422 x4594) (x4977 x4594)) (x290 x4594)))
(assert (= (x4208 x2649) (ite (= x5283 x2649) x1386 (x1956 x2649))))
(assert (x3829 x1313 x1259))
(assert (x609 x1761))
(assert (= (x3729 (x1960 (+ 32 x53))) 0))
(assert (x609 x4817))
(assert (x609 x3130))
(assert (x4289 x1511))
(assert (x745 x5392))
(assert (= x2701 (=> (and (= (x1960 (+ x3302 32)) x2687) (= x2872 274184521717934524641157099916833587240) (not (= x1360 0)) (= (= 274184521717934524641157099916833587240 x1458) x3570) (= x694 (x1960 (+ x282 100))) (= (x1960 (+ 64 x3302)) x2867) (= (x4062 (- x694 x282)) x3856) (= x2244 (x1960 (+ x282 4))) (= x1424 (x5313 1461501637330902918203684832716283019655932542975 x2897)) (= x3302 x2244) (= (x4873 (x5032 x1458)) x1360) (= (x5313 1461501637330902918203684832716283019655932542975 x1039) x1458)) (and (=> (and (= x983 (x1960 (+ 1 x3979))) (= (x1328 x955) x3979) (not x252) (> x859 0) (= (x2113 (x5032 x4310) (x4755 208) 0) x454) (= x3106 (x5313 1461501637330902918203684832716283019655932542975 x1928)) (= (x5313 1461501637330902918203684832716283019655932542975 x4393) x4227) (not (< x1133 455944412)) x3570 (= x537 (= x241 0)) (= x2419 x4327) (= x4068 x4310) (= (x2707 x454) x1928) (= x1478 (x1960 (+ x1398 274184521717934524641157099916833587240))) (not (= 511946350 x1133)) (= x2746 (x4873 (x5032 274184521717934524641157099916833587240))) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3848) x4626) (= x2592 (or (and (> 96 x2197) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2197))) (> x2197 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4530 (x4234 x1013)) (= (x2113 (x5032 x4310) (x4755 210) 0) x1272) (= 1 x4476) (= x2419 x980) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0) x955) (= x3137 (= x241 274184521717934524641157099916833587240)) (= x4309 (x2707 x3609)) (= 0 x578) (= (x2707 x1272) x3848) (not x537) (< x1133 2311529814) (= (x5313 1461501637330902918203684832716283019655932542975 x4309) x241) (= x3856 x5028) (= x180 x4310) (not x2592) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x4865) x1398) (= x2197 (x4062 (- x5028 4))) (= x793 (= x4227 0)) (= x252 (= 0 x4327)) x261 (= x1013 (x2113 (x5032 x980) (x4755 209) 0)) (> x2746 0) (= (x2113 (x5032 x4310) (x4755 208) 0) x3609) (>= 1461501637330902918203684832716283019655932542975 x980) (= x2783 274184521717934524641157099916833587240) (not x4573) (= (x2707 x146) x1284) (= x261 (not (= x3106 0))) (or (and (= x2279 (x2113 (x5032 x4310) (x4755 208) 0)) (= x18 (not (= x5066 0))) x18 (= x2465 (x2707 x2279)) (or (and (= (x2113 (x5032 274184521717934524641157099916833587240) x3257 0) x432) (= (x5313 255 x3705) x1832) (= (x2113 (x5032 x241) (x4755 211) 0) x3257) (= x859 x1832) (not x3809) (= (x2707 x432) x3705)) (and x3809 (= (ite x3809 1 0) x859))) (= (x5313 1461501637330902918203684832716283019655932542975 x398) x3785) (= (x5313 1461501637330902918203684832716283019655932542975 x2465) x5066) (= x3809 (= 274184521717934524641157099916833587240 x3785)) (= x398 (x2707 x3312)) (= x3312 (x2113 (x5032 x4310) (x4755 210) 0)) (not x3137)) (and x3137 (= x859 (ite x3137 1 0)))) (= x4865 (x1182 x10)) (= x4626 x510) (< x1133 1166402363) (= x4393 (x4234 x4869)) (= x1477 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3979)) (= x4573 (> 1 x4530)) (= x146 (x2113 (x5032 x4310) (x4755 208) 0)) (not x1477) (= (x2113 (x5032 x4310) (x4755 208) 0) x10) (= x3572 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1133 599290589) (= x1424 x980) (not x793) (= x4327 (x5313 1461501637330902918203684832716283019655932542975 x1284)) (= x2587 274184521717934524641157099916833587240) (= x5028 100) (not (= x1133 455944412)) (= (x2113 (x5032 x4310) (x4755 208) 0) x4869) (= (x4062 (- x4530 1)) x2447) (not (> 4 x5028))) x1846) (=> (not x3570) x4617)))))
(assert (x4289 x961))
(assert (x609 x238))
(assert (x609 x4529))
(assert (x609 x4645))
(assert (x3829 x2292 x3364))
(assert (x609 x1424))
(assert (= (ite (and x2185 x763) (ite (and x1516 x2185 x763) (x1700 (x5032 x2152)) (x4567 (x5032 x2152))) (x4567 (x5032 x2152))) (x1695 (x5032 x2152))))
(assert (x609 x3685))
(assert (= x1811 (and (not x186) x401)))
(assert (= (ite (and x2185 (not x5359) x763) (x808 x970) (x3946 x970)) (x5124 x970)))
(assert (= x1180 (=> (and (= x2805 x626) (= x471 0)) x1677)))
(assert (x4289 x1146))
(assert (x609 x4550))
(assert (= (ite (= x2488 x2867) x4439 (x2356 x2488)) (x3934 x2488)))
(assert (= (x631 x743) (ite (= x4486 x743) x654 (x4297 x743))))
(assert (= x4853 (or (and x5014 (not x3800)) (and x1787 (not x2106)))))
(assert (= (ite (= (x1960 (+ x2672 64)) x5283) x1386 (x1956 (x1960 (+ x2672 64)))) (x4208 (x1960 (+ 64 x2672)))))
(assert (x609 x5192))
(assert (x609 x3597))
(assert (= (x631 x2548) (ite (= x2548 x4486) x654 (x4297 x2548))))
(assert (x609 x3624))
(assert (= (x4290 (x4755 274184521717934524641157099916833587240)) 274184521717934524641157099916833587240))
(assert (= (x1655 x4832) (ite (= x4252 x4832) 0 (x5379 x4832))))
(assert (= x1683 (or (and (not x4460) x23) (and x3931 (not x4435)))))
(assert (= x3292 (or x2788 (and x2906 x1716))))
(assert (x609 x2143))
(assert (= (=> (= x2596 x869) x1319) x1408))
(assert (= (x1522 x4594) (ite (= x4594 x2724) x1563 (x631 x4594))))
(assert (x609 x4285))
(assert (= (x808 x3914) (ite (and x809 x4042 x2185 x763 (not x3343) x2210) (x1910 x3914) (ite (and x2185 (not x2210) x763 x809 x4042) (x588 x3914) (ite (and x2185 (not x4042) x763 x809) (x2959 x3914) (ite (and (not x809) x763 x2185) (x3178 x3914) (x4220 x3914)))))))
(assert (x609 x2795))
(assert (= (x2195 x4075) (ite (= x3498 x4075) x2754 (x42 x4075))))
(assert (x609 x3461))
(assert (x609 x1144))
(assert (= (x679 x4837) (ite (= x1715 x4837) x4413 (x1522 x4837))))
(assert (= (ite (= (x4755 0) x4869) x2630 (x4349 x4869)) (x2707 x4869)))
(assert (x4289 x353))
(assert (x4289 x826))
(assert (= (ite (= x2724 x3932) x1563 (x631 x3932)) (x1522 x3932)))
(assert (= (ite (and (not x5307) x1226 x4580) (x3532 x4783) (x5334 x4783)) (x3423 x4783)))
(assert (x2556 x442 x1134 x2015 x3687))
(assert (x609 x354))
(assert (= x2277 (=> (and (= x2940 x1611) (= x960 (x4873 (x5032 274184521717934524641157099916833587240))) (> 1166402363 x219) (= x4815 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2288 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4369) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4369)) (< x4369 96)))) (= x2040 x2034) (< x219 2311529814) (not (> 4 x2940)) (not (= 455944412 x219)) (not (= 511946350 x219)) (< 0 x960) (= 599290589 x219) (= x2152 x3920) (not (< x219 455944412)) (= x4369 (x4062 (- x2940 4))) (= x2940 100)) (and (=> (not x2288) x1052) (=> x2288 x572)))))
(assert (x609 x490))
(assert (= (x4727 x2489) 0))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x4290 (x4755 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= (and (not x77) x143) x1323))
(assert (x609 x418))
(assert (x609 x4936))
(assert (x609 x5029))
(assert (x609 x3021))
(assert (x609 x1104))
(assert (= (ite (= (x4755 0) x146) x2630 (x4349 x146)) (x2707 x146)))
(assert (= (x1638 x3448) (ite (= x3448 x1042) 274184521717934524641157099916833587240 (x5299 x3448))))
(assert (x609 x4252))
(assert (x609 x2711))
(assert (x609 x4399))
(assert (x609 x3648))
(assert (x609 x2975))
(assert (=> (> (+ 10000 1) x5256) (= (x5032 x5256) (x4755 x5256))))
(assert (= (x5362 x3593) (ite (= x4813 x3593) x5273 (x1702 x3593))))
(assert (= (x2707 x3312) (ite (= (x4755 0) x3312) x2630 (x4349 x3312))))
(assert (= (x4755 2335792882) (x5032 2335792882)))
(assert (x609 x3902))
(assert (= (x3776 x3865) (ite (= x1591 x3865) x1250 (x2617 x3865))))
(assert (= (x1542 x5008) (ite (= x1161 x5008) x2324 (x3508 x5008))))
(assert (x609 x2907))
(assert (x609 x3311))
(assert (x609 x4131))
(assert (= (x2463 x4967) (ite (and x4853 (not x4638) x1961) (x3043 x4967) (x4962 x4967))))
(assert (x3829 x398 x1377))
(assert (= 0 (x3729 (x1960 (+ x53 96)))))
(assert (x609 x3188))
(assert (= (ite (and x90 x3318) (x1837 x788) (x4561 x788)) (x267 x788)))
(assert (x609 x1442))
(assert (=> (< (- x1279 1) 10000) (= (x4755 x1279) (x5032 x1279))))
(assert (= (x4221 (x1960 (+ 96 x698))) (ite (= x3303 (x1960 (+ 96 x698))) x1093 (x1849 (x1960 (+ 96 x698))))))
(assert (= (x3588 x4833) (ite (= x4745 x4833) x1390 (x1796 x4833))))
(assert (= (ite (= x3839 x4944) 0 (x2646 x3839)) (x156 x3839)))
(assert (x609 x4874))
(assert (x609 x1580))
(assert (= (ite (= x1715 x5176) x4413 (x1522 x5176)) (x679 x5176)))
(assert (x609 x2395))
(assert (= (x1017 x4813) (ite (= x4813 (x4755 0)) x1325 (x3161 x4813))))
(assert (= (x382 x835) (ite (= x5121 x835) x3039 (x2195 x835))))
(assert (= (ite (= (x1960 (+ x4780 64)) x5283) x1386 (x1956 (x1960 (+ x4780 64)))) (x4208 (x1960 (+ x4780 64)))))
(assert (= (x2928 x3597) (ite (= x1610 x3597) x629 (x889 x3597))))
(assert (= (x1372 x2609) (ite (= x2609 x4428) x205 (x3306 x2609))))
(assert (x609 x53))
(assert (x609 x2390))
(assert (x609 x3956))
(assert (x4289 x598))
(assert (= (=> (and (= (x4062 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2040)) x5323) (= x2080 (> x2426 x5323))) (and (=> x2080 x5043) (=> (not x2080) x1090))) x4323))
(assert (= (x3589 x5208) (ite (= x4322 x5208) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3668 x5208))))
(assert (x609 x347))
(assert (= (x156 x788) (ite (= x4944 x788) 0 (x2646 x788))))
(assert (= (x4290 (x5032 x2601)) x2601))
(assert (= (ite x2394 (ite x764 (x2058 x2207) (x1264 x2207)) (x3679 x2207)) (x515 x2207)))
(assert (= (x679 x1883) (ite (= x1883 x1715) x4413 (x1522 x1883))))
(assert (x4289 x4395))
(assert (x609 x2696))
(assert (x3829 x547 x4444))
(assert (= (ite (= x4822 x2806) x3430 (x2959 x2806)) (x588 x2806)))
(assert (x609 x1055))
(assert (= (x4184 x1822) (ite (= x2536 x1822) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x1822))))
(assert (x609 x26))
(assert (x609 x2016))
(assert (x609 x2573))
(assert (x609 x3647))
(assert (x609 x4477))
(assert (= (ite (and x4625 x1000 (not x3191)) (x2895 x1661) (x2155 x1661)) (x3157 x1661)))
(assert (x609 x1086))
(assert (= (ite (= x3886 x1148) x3146 (x984 x1148)) (x4751 x1148)))
(assert (x609 x3805))
(assert (x1898 x88 x3640))
(assert (x609 x2259))
(assert (= (ite (= x2892 x5271) x239 (x4466 x5271)) (x1853 x5271)))
(assert (= (and x5360 x1258) x2716))
(assert (x609 x215))
(assert (x609 x2425))
(assert (= (ite (= x3839 x1255) x4340 (x1886 x3839)) (x3673 x3839)))
(assert (x609 x2803))
(assert (= 1858285468 (x4290 (x4755 1858285468))))
(assert (= (ite (= x1255 x3952) x4340 (x1886 x3952)) (x3673 x3952)))
(assert (x745 x5357))
(assert (x3829 x2893 x2995))
(assert (= (and x783 (not x3006)) x5048))
(assert (x609 x771))
(assert (x609 x2360))
(assert (= (x679 x2548) (ite (= x2548 x1715) x4413 (x1522 x2548))))
(assert (= (x2707 x4779) (ite (= (x4755 0) x4779) x2630 (x4349 x4779))))
(assert (= (ite (= (x4755 0) x175) x2630 (x4349 x175)) (x2707 x175)))
(assert (= (ite (and x4838 x2654) (x3423 x1722) (ite (and x657 x3717) (x1118 x1722) (x4134 x1722))) (x3314 x1722)))
(assert (= (x4466 x2560) (ite (= x211 x2560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x2560))))
(assert (= (x2041 x3795) (ite x748 (ite x3421 (x2101 x3795) (x3643 x3795)) (x4555 x3795))))
(assert (x609 x4665))
(assert (x609 x2103))
(assert (= (and x2312 x3116) x2963))
(assert (x609 x387))
(assert (x609 x1100))
(assert (= (x2195 x4996) (ite (= x3498 x4996) x2754 (x42 x4996))))
(assert (x745 x2688))
(assert (x609 x1070))
(assert (= (=> (and (= (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1733) (<= x2218 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2218) (<= x1733 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1733 x2218))) x4688) (= x1733 (x1960 (+ x1735 35))) (= (x1960 (+ 4 x1735)) x4130)) (and (=> x4688 x1343) (=> (not x4688) x5043))) x334))
(assert (= (x3729 (x1960 (+ x1002 64))) 0))
(assert (= (ite (= x4813 x406) x5273 (x1702 x406)) (x5362 x406)))
(assert (= (x156 x5208) (ite (= x5208 x4944) 0 (x2646 x5208))))
(assert (= x3770 (=> (and (= (> x2134 0) x1258) (= (x5313 1461501637330902918203684832716283019655932542975 x80) x102) (= (x4873 (x5032 x102)) x2134)) (and (=> (not x1258) x926) (=> x1258 x1554)))))
(assert (x609 x656))
(assert (x609 x458))
(assert (= (ite (= x4359 x3303) x1093 (x1849 x4359)) (x4221 x4359)))
(assert (= (x984 x3447) (ite (= x185 x3447) x3414 (x3007 x3447))))
(assert (=> (< (- x5 1) 10000) (= (x4755 x5) (x5032 x5))))
(assert (= (ite (and x2185 x763) (x594 x2489) (x1571 x2489)) (x1639 x2489)))
(assert (= (ite x2394 (ite x764 (x1298 x4706) (x4579 x4706)) (x4257 x4706)) (x1681 x4706)))
(assert (x609 x5278))
(assert (x609 x230))
(assert (x609 x4745))
(assert (x609 x2663))
(assert (= (ite (and x2622 x1389 x2450 (not x2194) x2838 x5025) (x3413 x1870) (ite (and x1389 x2838 (not x2622) x5025 x2450) (x3218 x1870) (ite (and x2838 (not x5025) x2450 x1389) (x3635 x1870) (ite (and x2838 x2450 (not x1389)) (x3589 x1870) (x3321 x1870))))) (x2952 x1870)))
(assert (x609 x3340))
(assert (x609 x840))
(assert (= x2559 true))
(assert (= (ite (and x2185 x809 x4042 x2210 (not x3343) x763) (x1910 x2644) (ite (and x809 x4042 x2185 (not x2210) x763) (x588 x2644) (ite (and x2185 x763 x809 (not x4042)) (x2959 x2644) (ite (and x2185 x763 (not x809)) (x3178 x2644) (x4220 x2644))))) (x808 x2644)))
(assert (= x618 (=> (and (= (x1960 (+ x2114 x1300)) x368) (= x2684 (x5313 1461501637330902918203684832716283019655932542975 x3374)) (= x1350 (x6 x2830 2)) (= x1951 (x1960 (+ x1227 x2361))) (= x1744 (x212 (x4755 0))) (= x1300 (uninterp_mod (* 26959946667150639794667015087019630673637144422540572481103610249216 x1359) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1960 (+ x253 x1301)) x701) (= x3504 (x5313 1461501637330902918203684832716283019655932542975 x3371)) (= x4850 x4392) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3111) x2849) (= x1361 (uninterp_mod (* 1461501637330902918203684832716283019655932542976 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x4080 (x2060 x1738)) (= x1988 (x6 x2722 2)) (= (x3957 x4272) x5211) (= (x2001 x5223) x3374) (= x105 (x1960 (+ x4263 x2849))) (= x2361 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3772)) (= x4748 (x5313 115792089237316195423570984636004990333889740523700931696805413995650331181055 x4080)) (= (x6 x4392 1) x2722) (= (x6 x4392 2) x2830) (= x3541 (x5313 18446744073709551615 x602)) (= x919 (x5313 1461501637330902918203684832716283019655932542975 x3842)) (= x135 (x2619 x4272)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1744) x3948) (= (x6 x1350 2) x1738) (= x2189 (x2001 x344)) (= (x2001 x682) x3048) (= (x3437 x1350) x3399) (= x1359 (x5313 4294967295 x1387)) (= (x2001 x4967) x2265) (= (= x2189 0) x3810) (= x602 (x2001 x4507)) (= (not x3810) x3268) (= x4691 (x1960 (+ x5347 x1361))) (= x3772 (x963 x4272)) (= x1387 (x2001 x1332)) (= x3111 (x3741 x1350)) (= x5347 (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x3399)) (= (x2001 x4461) x2741) (= (x6 x1988 2) x4272) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x818) x253) (= (x2001 x2013) x3371) (= x919 x4263) (= (x2001 x4833) x536) (= x818 (x1068 x1738)) (= (x2001 x1085) x3842) (= x2820 (uninterp_mod (* x3541 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3504 x1227) (= x1301 x2684) (= (x1960 (+ x4113 x2820)) x621) (= (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x5211) x4113) (= x4392 (x2113 (x5032 x2652) (x4755 2) 0)) (= x4872 x1306) (= (x5313 18446744073709551615 x3048) x2574) (= (x1960 (+ x4748 (uninterp_mod (ite x3268 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1555) (= x2114 (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x135)) (= x1066 (x2001 x1306)) (= x2652 (x2220 (x4755 0)))) (and (=> x3948 x5043) (=> (not x3948) x637)))))
(assert (= x5118 (=> (and (= (= x256 x5107) x4740) (= x256 (x5313 1461501637330902918203684832716283019655932542975 x950))) (and (=> (not x4740) x5043) (=> x4740 x1308)))))
(assert (x609 x690))
(assert (x609 x1498))
(assert (x609 x3565))
(assert (x609 x4889))
(assert (= (x1225 x5208) (ite (= x332 x5208) x3571 (x1853 x5208))))
(assert (x609 x3264))
(assert (x745 x5330))
(assert (x609 x1371))
(assert (= (x3835 x2675) (ite x748 (ite x3421 (x3132 x2675) (x3614 x2675)) (x416 x2675))))
(assert (x609 x1575))
(assert (x609 x1112))
(assert (x609 x4422))
(assert (x609 x3058))
(assert (= x2478 (and x4824 (not x868))))
(assert (x609 x3658))
(assert (x609 x473))
(assert (x609 x415))
(assert (= (x679 x4642) (ite (= x4642 x1715) x4413 (x1522 x4642))))
(assert (= (x4962 x5271) (ite (= x3425 x5271) x2040 (x2418 x5271))))
(assert (=> (> (+ 10000 1) x4010) (= (x5032 x4010) (x4755 x4010))))
(assert (= (ite (and x4449 x4563 x4856 x338 (not x3881) x3497) (x4751 x3932) (ite (and x4856 x3497 x4449 (not x4563) x338) (x984 x3932) (ite (and (not x3497) x338 x4856 x4449) (x3007 x3932) (ite (and x4856 x338 (not x4449)) (x3032 x3932) (x1224 x3932))))) (x1106 x3932)))
(assert (x609 x1262))
(assert (x609 x973))
(assert (= (x4284 (- x3049 x2721)) 0))
(assert (= (x4727 x953) 0))
(assert (= (ite (= (x4755 0) x4772) x4687 (x212 x4772)) (x42 x4772)))
(assert (= 0 (x4727 (x1960 (+ 64 x698)))))
(assert (x609 x666))
(assert (= (and x582 x2716) x4138))
(assert (= (x3181 x3104) (ite (= x3104 x408) x703 (x1395 x3104))))
(assert (= (ite (and (not x1416) x2673 x792) (x2427 x1618) (x3346 x1618)) (x1675 x1618)))
(assert (= (x1853 x5208) (ite (= x2892 x5208) x239 (x4466 x5208))))
(assert (= (and x932 (not x948)) x1126))
(assert (= (ite (= x1161 x1591) x2324 (x3508 x1591)) (x1542 x1591)))
(assert (x609 x5270))
(assert (x609 x938))
(assert (= (ite (= (x4755 0) x2999) x4687 (x212 x2999)) (x42 x2999)))
(assert (x3829 x273 x2283))
(assert (= (x4290 (x5032 x3370)) x3370))
(assert (= (x3588 x3708) (ite (= x3708 x4745) x1390 (x1796 x3708))))
(assert (x745 x251))
(assert (= (ite (= x2750 x4252) 0 (x5379 x2750)) (x1655 x2750)))
(assert (= (ite (= x5121 x3865) x3039 (x2195 x3865)) (x382 x3865)))
(assert (x745 x1830))
(assert (x609 x1854))
(assert (=> (< (- x1047 1) 10000) (= (x4755 x1047) (x5032 x1047))))
(assert (= (x4618 x2865) (ite (= x4788 x2865) x1755 (x679 x2865))))
(assert (x609 x4406))
(assert (x609 x1799))
(assert (= 0 (x550 x487)))
(assert (= (x1639 x3592) (ite (and x2185 x763) (x594 x3592) (x1571 x3592))))
(assert (= (ite (= x2536 x1583) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x1583)) (x4184 x1583)))
(assert (x4289 x4956))
(assert (x609 x3082))
(assert (x3829 x644 x1891))
(assert (x609 x172))
(assert (= (x550 x743) (ite (= x487 x743) 0 (x2852 x743))))
(assert (x609 x826))
(assert (= (x3305 x276) (ite (= x4427 x276) x4682 (x183 x276))))
(assert (x609 x2315))
(assert (x745 x3772))
(assert (= (ite (= x3448 x1491) x2444 (x1339 x3448)) (x1466 x3448)))
(assert (x609 x2981))
(assert (= (ite (and x5103 (not x2405) x3292) (x3205 x2750) (x4651 x2750)) (x5167 x2750)))
(assert (x609 x3677))
(assert (= x1149 (x4290 (x5032 x1149))))
(assert (= (x2862 x1722) (ite (= x571 x1722) x1831 (x1466 x1722))))
(assert (x609 x3571))
(assert (= (x3306 x2539) (ite (= x2539 x5165) x86 (x3835 x2539))))
(assert (x609 x2230))
(assert (= (=> (= x202 (= 274184521717934524641157099916833587202 x1279)) (and (=> (not x202) x335) (=> (and (= x4933 x612) x202 (= x532 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (> x750 0) (= x3223 (x2113 (x5032 x981) (x4755 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3491) (= x1926 (or (> x3663 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x3663) (= true (<= x3663 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x431) (= x2598 x1588) (not (= 1889567281 x365)) (= 68 x2598) (= x4448 1) (= x43 x3202) (= x21 (> x5298 x3491)) (not x1926) (= (>= (+ x4750 x5298) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2510) (= x4741 (> x4933 x3491)) (= x1362 x5298) (= x3663 (x4062 (- x2598 4))) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x4799) (not x21) (= 274184521717934524641157099916833587240 x2482) (= (x4062 (- x3491 x4933)) x327) (>= x4750 0) (< (+ x5298 x4750) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4750 (x1266 x3223)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4750) (= 2835717307 x365) (= x1099 x981) (= 32 x4216) (= x4709 x981) (= x4696 x4750) (not (< x2598 4)) (not (= 2514000705 x365)) (= 274184521717934524641157099916833587240 x420) (>= x3491 0) (= (+ x1362 x4696) x402) (= x5298 x4933) (not x4741) (not (> 826074471 x365)) (= (x2325 x4799) x3491) (= (x4873 (x5032 274184521717934524641157099916833587202)) x750) (not x2510) (<= x981 1461501637330902918203684832716283019655932542975) (not (= x365 826074471))) x1627))) x213))
(assert (= x2020 (or (and x1811 x5371) (and x3535 (not x4088)) (and x3401 x1605) (and x3654 x3025) (and x4583 x1506) (and x5092 x451) (and x186 x401) (and x1495 x737))))
(assert (= x4472 (or (and x4677 x2842) (and x2219 x2963) (and x678 x5327) (and x4703 x3836) (and x4479 x2439) (and x2312 (not x3116)))))
(assert (x609 x2644))
(assert (= (ite (= x1586 x1042) 274184521717934524641157099916833587240 (x5299 x1586)) (x1638 x1586)))
(assert (x4276 x3522 x2878))
(assert (x4289 x684))
(assert (=> (> (+ 10000 1) x4213) (= (x5032 x4213) (x4755 x4213))))
(assert (x609 x5391))
(assert (x4289 x216))
(assert (x1139 x2221 x4800 x3124 x1337))
(assert (x4289 x3648))
(assert (= (x42 x4075) (ite (= x4075 (x4755 0)) x4687 (x212 x4075))))
(assert (= (x1106 x1609) (ite (and x338 x4563 x4856 x3497 x4449 (not x3881)) (x4751 x1609) (ite (and x4449 x3497 (not x4563) x338 x4856) (x984 x1609) (ite (and (not x3497) x338 x4856 x4449) (x3007 x1609) (ite (and x338 (not x4449) x4856) (x3032 x1609) (x1224 x1609)))))))
(assert (= (ite x2394 (ite x764 (x1298 x1842) (x4579 x1842)) (x4257 x1842)) (x1681 x1842)))
(assert (x609 x4801))
(assert (=> (> (+ 10000 1) x4516) (= (x5032 x4516) (x4755 x4516))))
(assert (x609 x1883))
(assert (= (x3673 (x1960 (+ 32 x1002))) (ite (= (x1960 (+ 32 x1002)) x1255) x4340 (x1886 (x1960 (+ 32 x1002))))))
(assert (x609 x1622))
(assert (= (x5032 18446744073709551615) (x4755 18446744073709551615)))
(assert (x609 x986))
(assert (= (ite (= x5121 x601) x3039 (x2195 x601)) (x382 x601)))
(assert (x4468 x5211 x590 x526 x1345))
(assert (x609 x2704))
(assert (x3829 x1039 x4240))
(assert (= (x2707 x4075) (ite (= (x4755 0) x4075) x2630 (x4349 x4075))))
(assert (x609 x4457))
(assert (x745 x2294))
(assert (x609 x1437))
(assert (x609 x2260))
(assert (x609 x4114))
(assert (= (ite (= x1255 x2226) x4340 (x1886 x2226)) (x3673 x2226)))
(assert (= (x4290 (x5032 x4172)) x4172))
(assert (x609 x4762))
(assert (x609 x497))
(assert (= (x3359 x4837) (ite (and x4451 x4600) (x4329 x4837) (x550 x4837))))
(assert (x609 x985))
(assert (x609 x1103))
(assert (x609 x3890))
(assert (x609 x946))
(assert (x609 x921))
(assert (= (and (not x979) x4007) x2607))
(assert (= (x4290 (x5032 x4516)) x4516))
(assert (= (=> (= x4063 (= x4747 274184521717934524641157099916833587202)) (and (=> (and (not x713) (= (x4873 (x5032 274184521717934524641157099916833587202)) x842) (< 0 x842) (<= 0 x4508) (not (> 826074471 x178)) x4063 (= 1889567281 x178) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3834) (= x4508 (x1264 x5100)) (= x713 (or (and (= (<= x2845 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2845)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2845))) (= x2274 32) (= (x4062 (- x754 4)) x2845) (not (< x754 4)) (= x3429 1) (<= x4508 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x780 x754) (not (= 826074471 x178)) (= x5100 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= x754 36) (= 274184521717934524641157099916833587240 x1875)) x700) (=> (not x4063) x2377))) x1330))
(assert (= 0 (x493 x4111)))
(assert (= x2624 (=> (and (= x404 (x3835 x4602)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404) (= x992 (> x4711 x404)) (= x2188 x4260) (>= x404 0) (= (x2113 (x5032 x3993) (x4755 1) 0) x4602)) (and (=> x992 x4581) (=> (not x992) x1625)))))
(assert (= (or x4931 (and x5056 x608)) x5342))
(assert (x609 x2522))
(assert (= (x493 x4642) 0))
(assert (= (ite (= x4057 x4833) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x4833)) (x2155 x4833)))
(assert (x609 x3660))
(assert (= (ite (= x5283 x3331) x1386 (x1956 x3331)) (x4208 x3331)))
(assert (= (and x2042 (not x4498)) x2302))
(assert (x609 x950))
(assert (x1139 x305 x2863 x1745 x1357))
(assert (x745 x4403))
(assert (x609 x4098))
(assert (= (x4208 192) (ite (= 192 x5283) x1386 (x1956 192))))
(assert (x609 x3976))
(assert (x745 x341))
(assert (= (ite (= x4536 x1591) x1250 (x2617 x4536)) (x3776 x4536)))
(assert (x609 x3149))
(assert (= (x1910 x1315) (ite (= x4225 x1315) x4534 (x588 x1315))))
(assert (= (x4651 x3914) (ite (= x3914 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x3914))))
(assert (x609 x4778))
(assert (x609 x249))
(assert (= (ite (= x3960 x1161) x2324 (x3508 x3960)) (x1542 x3960)))
(assert (= (x3934 x4832) (ite (= x4832 x2867) x4439 (x2356 x4832))))
(assert (x609 x1785))
(assert (x609 x4759))
(assert (x609 x2831))
(assert (x609 x3940))
(assert (= (and (not x5217) x3655) x1098))
(assert (= (x3596 x1315) (ite (= x4128 x1315) x3780 (x4036 x1315))))
(assert (x609 x2114))
(assert (= (ite x2394 (ite x764 (x4984 (x5032 274184521717934524641157099916833587240)) (x1695 (x5032 274184521717934524641157099916833587240))) (x689 (x5032 274184521717934524641157099916833587240))) (x2044 (x5032 274184521717934524641157099916833587240))))
(assert (x609 x2179))
(assert (x609 x2407))
(assert (x609 x1658))
(assert (x609 x2108))
(assert (= (x1675 x3708) (ite (and x2673 x792 (not x1416)) (x2427 x3708) (x3346 x3708))))
(assert (= (ite (= x953 x282) 0 (x4965 x953)) (x1571 x953)))
(assert (= (x1339 x1722) (ite (= x1722 x2291) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2608 x1722))))
(assert (= (x3673 x4773) (ite (= x4773 x1255) x4340 (x1886 x4773))))
(assert (= (ite (= x2750 x2536) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x2750)) (x4184 x2750)))
(assert (x609 x3152))
(assert (x609 x2596))
(assert (x745 255))
(assert (= (ite (= x5121 x4075) x3039 (x2195 x4075)) (x382 x4075)))
(assert (= (x5032 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x4755 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (= x4067 x1021))
(assert (= (x2474 x2865) (ite (and (not x4298) x4451 x4600) (x4816 x2865) (x1840 x2865))))
(assert (x609 x1207))
(assert (= (ite (and x3318 x90) (ite (and (not x2093) x639 x4082) (x3855 x4105) (x4851 x4105)) (x4851 x4105)) (x4431 x4105)))
(assert (= (x529 x4111) (ite (and x4067 x1915) (x5335 x4111) (x3181 x4111))))
(assert (x609 x3009))
(assert (= (ite (= x3057 x282) 0 (x4965 x3057)) (x1571 x3057)))
(assert (= (x4221 x4783) (ite (= x3303 x4783) x1093 (x1849 x4783))))
(assert (= x340 (and (not x1174) x4777)))
(assert (= x4956 (x4290 (x5032 x4956))))
(assert (= (x4290 (x4755 115792089210356248756420345214020892766250353992003419616917011526809519390720)) 115792089210356248756420345214020892766250353992003419616917011526809519390720))
(assert (x745 x1899))
(assert (= (ite (and x1915 x4067) (x5335 x3932) (x3181 x3932)) (x529 x3932)))
(assert (= (x515 x2675) (ite x2394 (ite x764 (x2058 x2675) (x1264 x2675)) (x3679 x2675))))
(assert (x609 x1386))
(assert (= (ite (= x4517 x4225) x4534 (x588 x4517)) (x1910 x4517)))
(assert (= x1581 (=> (= x3796 (= 274184521717934524641157099916833587206 x353)) (and (=> x3796 x2138) (=> (not x3796) x3837)))))
(assert (x609 x4180))
(assert (= (ite (and (not x4638) x1961 x4853) (x3043 x2560) (x4962 x2560)) (x2463 x2560)))
(assert (= (ite (= x2892 x5067) x239 (x4466 x5067)) (x1853 x5067)))
(assert (x609 x4527))
(assert (x609 x2197))
(assert (x609 x2336))
(assert (x609 x519))
(assert (= x3230 (or (and x2484 x1893) (and x931 x189) (and x4246 x4063))))
(assert (= (x42 x838) (ite (= x838 (x4755 0)) x4687 (x212 x838))))
(assert (= x206 (=> (and (= x3561 (x5313 1461501637330902918203684832716283019655932542975 x5374)) (= (uninterp_mod (* x3462 x1046) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3680) (= x1064 (< x2476 x1701)) (= x4006 (x5313 18446744073709551615 x1830)) (= (x5313 1461501637330902918203684832716283019655932542975 x80) x4288) (= x1085 (x1960 (+ 64 x4833))) (= x2013 (x1960 (+ x1085 64))) (= (x5313 18446744073709551615 x1701) x3296) (= (x1960 (+ 64 x4967)) x682) (= (x4062 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4006)) x2476) (= x4507 (x1960 (+ x682 64))) (= (- (/ x3680 100) (uninterp_frac x3680 100)) x354) (= x1830 (x4233 (x4755 1)))) (and (=> (not x1064) x5336) (=> x1064 x5043)))))
(assert (= (ite (= x1715 x5086) x4413 (x1522 x5086)) (x679 x5086)))
(assert (= (x3532 x1722) (ite (and x1170 (not x1900) x898 x4580 x1226 x2099) (x289 x1722) (ite (and x4580 x898 (not x2099) x1170 x1226) (x3739 x1722) (ite (and x4580 x1226 (not x898) x1170) (x3107 x1722) (ite (and x4580 x1226 (not x1170)) (x4184 x1722) (x4895 x1722)))))))
(assert (= (x4202 x5176) (ite (and x4577 x3528) (x559 x5176) (ite (and x5210 x4432) (x2503 x5176) (x2755 x5176)))))
(assert (= (x4208 x2174) (ite (= x5283 x2174) x1386 (x1956 x2174))))
(assert (= (or x1861 (and (not x5396) x3041)) x95))
(assert (x609 x662))
(assert (= (x5006 x5176) (ite (= x5176 x3849) x653 (x3939 x5176))))
(assert (x609 x3756))
(assert (= (x3588 x3049) (ite (= x4745 x3049) x1390 (x1796 x3049))))
(assert (x609 x4953))
(assert (= (x290 x5086) (ite (and (not x1716) x2884 x2906) (x422 x5086) (x4977 x5086))))
(assert (= (x4561 x788) (ite (= x788 x2907) 0 (x1382 x788))))
(assert (= x792 (and (not x1346) x3368)))
(assert (x609 x4639))
(assert (= (ite (= x5067 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x5067)) (x2155 x5067)))
(assert (= (ite (and (not x503) x2673 x4469 x792 x2651 x1391) (x2928 x1537) (ite (and (not x2651) x2673 x1391 x792 x4469) (x889 x1537) (ite (and x792 x4469 x2673 (not x1391)) (x3588 x1537) (ite (and x2673 x792 (not x4469)) (x1796 x1537) (x509 x1537))))) (x2427 x1537)))
(assert (x609 x2293))
(assert (x609 x3291))
(assert (=> (< (- x5062 1) 10000) (= (x4755 x5062) (x5032 x5062))))
(assert (= (ite (= x4813 x4420) x5273 (x1702 x4420)) (x5362 x4420)))
(assert (x609 x5290))
(assert (x1139 x3848 x3529 x1952 x4921))
(assert (= (=> (and (= 2335792882 x5267) (>= x2303 0) (= x1172 (x1731 (x5032 274184521717934524641157099916833587202))) (= x2873 x4213) (= (x1731 (x5032 x4213)) x5394) (<= x2873 1461501637330902918203684832716283019655932542975) (= x294 x4213) x668 (= false x916) (= false x5017) (<= x2937 1461501637330902918203684832716283019655932542975) (<= 0 x1172) (<= 0 x597) (= (> (x4873 (x5032 274184521717934524641157099916833587202)) 0) x668) x4983 (= x5147 9) (= x4539 x1430) x2256 (= (= x294 x1430) x4983) x4821 (>= x2873 0) (= x2681 (= 0 x4213)) (<= 0 x2937) (= (< 0 x4213) x4043) (= (x1731 (x5032 274184521717934524641157099916833587240)) x597) (= (> x5129 x5394) x1716) (= x2256 (> (x4873 (x5032 274184521717934524641157099916833587206)) 0)) (> 1461501637330902918203684832716283019655932542976 x4213) (= x2937 x709) (>= 1461501637330902918203684832716283019655932542975 x4539) (= false x2761) (= x3792 true) (or x4043 x2681) (= (x1731 (x5032 274184521717934524641157099916833587206)) x2303) (= x4821 (> (x4873 (x5032 274184521717934524641157099916833587240)) 0)) (>= x4539 0)) (and (=> (and (= x2364 false) (= true x2823) x1716) x1277) (=> (and (< 291 x2218) (not x1716) (= (x4873 (x5032 274184521717934524641157099916833587240)) x2436) (= (x3161 (x4755 0)) x1813) (= x5191 (x20 x3331)) (= x949 x2964) (= x1286 x3892) (= (x4873 (x5032 x3406)) x2509) (= (x20 x99) x5246) (= x549 x435) (= x883 (x20 x2179)) (= (x5313 4294967295 x4195) x1730) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x504) (and (< x504 288) (= true (<= x504 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x303 (x1960 (+ x1911 x391))) (<= x4628 1461501637330902918203684832716283019655932542975) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1637 x3524)) (= x5316 (x1960 (+ x2046 64))) (= x3892 x3326) (= x3660 x4465) x4291 (= x318 x1637) (= (x6 x2176 2) x1152) (= (x3215 (x4755 1)) x384) (= x521 x2174) (= x3338 (x5313 18446744073709551615 x1701)) (= x494 x2709) (= (x2589 x3747) x4655) (= x613 x2986) (= (x5313 255 x758) x1759) (= x2884 (> x632 0)) (= (x1960 (+ x1993 x1327)) x3620) (= x3863 (x1960 (+ 52 x1448))) (= (x1960 (+ 64 x3272)) x1448) (= x1078 (x1960 (+ 64 x5086))) (= x1186 (x1960 (+ x4167 x3056))) (= x458 (x1960 (+ 35 x1753))) (= (x1960 (+ x2810 160)) x2649) (= (x20 x5086) x3750) (not (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1813)) (= (x1960 (+ (uninterp_mod (x2092 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5129)) x4596) (= x1865 (x1960 (+ x4065 60))) (<= 0 x4628) (= x1835 0) (= (x1960 (+ x4666 x3444)) x5213) (= (- (/ x4337 18446744073709551616) (uninterp_frac x4337 18446744073709551616)) x4195) (= x3463 (x6 x5089 1)) (= (x2800 x1152) x1679) (= (x5313 115792089237316195423570984636004990333889740523700931696805413995650331181055 x2078) x5222) (= (uninterp_mod (* x2348 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2250) (= (x20 x5316) x5078) (= (uninterp_mod (* 1461501637330902918203684832716283019655932542976 x258) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4666) (= (> x521 18446744073709551615) x957) (not (= 0 x2509)) (= x3348 x5089) (= (x5313 1461501637330902918203684832716283019655932542975 x5191) x4103) (= (x5313 1461501637330902918203684832716283019655932542975 x2464) x4406) (= x4861 (x1960 (+ x3901 160))) (= (- (/ x384 5192296858534827628530496329220096) (uninterp_frac x384 5192296858534827628530496329220096)) x758) (= (x1960 (+ x4307 64)) x4065) (= x2378 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5321)) (= x2367 (= x883 0)) (= (x1960 (+ x2378 (uninterp_mod (ite x5251 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2682) (= x2179 (x1960 (+ x1433 64))) (<= x4305 1461501637330902918203684832716283019655932542975) (= x139 (x2379 x283)) (= (x3215 x676) x5321) (= x1247 (x2113 (x5032 x549) x1975 0)) (= (x5313 18446744073709551615 x3720) x3524) (>= x624 0) (= (x1960 (+ x2649 64)) x2046) (= x258 (x5313 18446744073709551615 x5246)) (= x3272 (x1960 (+ 64 x4046))) (= x3196 (x5313 4294967295 x3996)) (= x5129 x223) (= x1358 x3505) (= x1378 (x5313 255 x4562)) (= x263 (+ x318 x2049)) (not (> 4 x2218)) (= (* x494 x1358) x2647) (= x504 (x4062 (- x2218 4))) (= (x1960 (+ x2890 64)) x179) (= x3851 (x1960 (+ x4017 x3452))) (= (x1960 (+ 52 x1858)) x5283) (= (- (/ x3170 100) (uninterp_frac x3170 100)) x4836) (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2887) x3769) (= x573 (ite (> x1358 x2674) 1 0)) (= (x1960 (+ x1813 1)) x1325) (= x2834 (x4062 (- x4387 32))) (<= x3660 1461501637330902918203684832716283019655932542975) (= x2979 (x2113 (x5032 x3660) (x4755 4) 0)) (= (x20 x2649) x1820) (= (x5313 x5288 x573) x1785) (= x4107 (x20 x1078)) (= x3720 (x3215 (x4755 1))) (= (= x70 65) x2881) (= (x4062 (- x5283 x2529)) x4387) (= x2810 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x330)) (= (x1960 (+ 40 x179)) x1858) (= x4576 x949) (= true x5251) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x4655) x3056) (>= 1461501637330902918203684832716283019655932542975 x3892) (= 2335792882 x3761) (= (x3215 (x4755 1)) x4337) (= (- (x1731 (x5032 x4213)) x5129) x2301) (= x3170 (* x2250 x1759)) (= 0 x2187) (= (x2113 (x5032 x3892) (x4755 3) 0) x1975) (= x330 (x1960 (+ 63 x3769))) (= (ite (not x4243) 1 0) x5288) (= x4103 x942) (= x2674 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348))) (= x1621 (x1960 (+ 36 x1753))) (= x3086 (x5313 1461501637330902918203684832716283019655932542975 x4903)) (<= x624 1461501637330902918203684832716283019655932542975) (= x3747 (x6 x3966 2)) (= x4628 x4845) (= x901 (< x521 128)) (= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x4693) x3935) (not (> x5202 18446744073709551615)) (= (x5313 18446744073709551615 x5078) x462) (= x521 (x1960 (+ 128 x2810))) (= x4632 (x4062 (- x1865 x5283))) (= (x1960 (+ 64 x521)) x5086) (= x1299 (x3135 x3660 96)) (= (x4208 128) x70) (= x3101 (x3215 (x4755 106))) (= (x5313 1461501637330902918203684832716283019655932542975 x4107) x4782) (= (x2087 x3747) x2626) (= x3901 (x2423 x3627)) (= x47 0) (= (x5160 x1152) x5205) (= x4085 (x1960 (+ x3901 x1621))) (= (x1960 (+ 64 x99)) x3331) (= x3406 (x5313 1461501637330902918203684832716283019655932542975 x4305)) (= x1375 x3892) (= x2176 (x6 x3463 2)) (= x1785 0) (= (x1960 (+ 384 x521)) x4046) (= x3273 x4305) (not (= x3761 2311529814)) (= x2078 (x2010 x283)) (= x2647 x2974) (not (> x3901 18446744073709551615)) (= x283 (x6 x3747 2)) (= (not x2367) x1669) (= x2890 (x1960 (+ 64 x1817))) (= x1433 (x1960 (+ 64 x3624))) (= x4406 x3326) (= x3996 (x20 x1433)) (= (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x2626) x3452) (= (x2113 (x5032 x3892) (x4755 3) 0) x1138) (= 128 x2513) (< 0 x1378) (= x1701 x1637) (= (or x957 x901) x3397) (= x1753 x5202) (or (and (= (x4208 128) x352) (= x1528 (= x352 64)) (or (and (not (< 115792089237316195423570985008687907853269984665640564039457584007913129639908 x2669)) (= (x4208 160) x2232) (= x2693 x2516) (= x584 x2464) (= x2669 (x5174 x88 255)) x1528 (= x830 (> x985 57896044618658097711785492504343953926418782139537452191302581570759080747168)) (or (and (= x65 (ite (not x1712) (not (= (x5313 255 x1922) 28)) (not x1712))) (= (= 27 x1442) x1712) (= (x5313 255 x1922) x1442) (or (and x65 (= 0 x584) (= x1865 x4918) (= 4 x2693)) (and (= (x5313 255 x1922) x1772) (not x65) (= x4015 (x434 (x1960 (+ x2672 64)))) (= (x28 x67 x3725 x4015 x1645) x2492) (= x2672 (x1960 (+ 64 x2008))) (= 128 x524) (= (x1960 (+ x1863 64)) x951) (= x562 (x5313 1461501637330902918203684832716283019655932542975 x1899)) (= x67 (x434 x2672)) (= x2672 x3658) (= (x1960 (+ x2672 64)) x2734) (= (x4062 (- x2672 32)) x4239) (= x3250 (= 0 x562)) (= x2214 (x4062 (- x2672 32))) (= (x845 x2214) x1899) (= x1645 (x434 (x1960 (+ 96 x2672)))) (<= x2492 1461501637330902918203684832716283019655932542975) (= x3725 (x434 (x1960 (+ x2672 32)))) (= (x1960 (+ 64 x1865)) x1863) (or (and (= 0 x584) (= x2672 x4918) x3250 (= x2693 1)) (and (= x1899 x584) (not x3250) (= x2693 0) (= x2672 x4918))))) (not x830)) (and (= 3 x2693) (= x584 0) (= x1865 x4918) x830)) (= x4918 x225) (= x1922 (x1960 (+ 27 x2669))) (= (x4208 192) x88) (= x985 (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 x88))) (and (= x225 x1865) (not x1528) (= 2 x2516) (= 0 x2464))) (not x2881)) (and (= x225 x5106) (or (and (= x1865 x5106) (= x4840 3) x5341 (= 0 x1703)) (and (not x5341) (or (and (= x4840 4) x2373 (= 0 x1703) (= x1865 x5106)) (and (<= x5280 1461501637330902918203684832716283019655932542975) (= x1646 (x4858 (x1960 (+ x4780 96)))) (= x1794 (x5313 1461501637330902918203684832716283019655932542975 x2914)) (= (x4062 (- x4780 32)) x5116) (= x711 (x4858 (x1960 (+ 32 x4780)))) (or (and (= x4780 x5106) (= x1703 x2914) (= 0 x4840) (not x2594)) (and (= x4840 1) (= x4780 x5106) x2594 (= 0 x1703))) (= (x1960 (+ x4780 64)) x5040) (not x2373) (= x4398 (x1960 (+ x5333 64))) (= (x28 x512 x711 x2230 x1646) x5280) (= x2914 (x3070 x3158)) (= (x4062 (- x4780 32)) x3158) (= x2618 x4780) (= (= 0 x1794) x2594) (= x2230 (x4858 (x1960 (+ x4780 64)))) (= 128 x2843) (= (x1960 (+ 64 x2008)) x4780) (= x512 (x4858 x4780)) (= x5333 (x1960 (+ 64 x1865))))) (= x2373 (ite (not x4553) (not (= x620 28)) (not x4553))) (= x4553 (= 27 x620)))) (= (x5174 x851 248) x3988) (= x2516 x4840) (= (x5313 255 x3988) x620) (= (x4208 192) x3958) x2881 (= x4147 (x4208 160)) (= x2464 x1703) (= (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x3958) x5341) (= (x4208 224) x851))) (= x99 (x1960 (+ x5316 64))) (= x3457 274184521717934524641157099916833587240) (> 3155786881 x3761) (= x3624 (x1960 (+ x1078 64))) (= x3627 (x1960 (+ 4 x1753))) (= x4213 x624) (= (x5313 255 x974) x1835) (= x2516 0) (= x4017 (uninterp_mod (* 1461501637330902918203684832716283019655932542976 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1960 (+ 4 x225)) x4355) (not (> 2311529814 x3761)) (= (x1960 (+ x942 x2988)) x5329) (= (= x494 0) x4243) (= (x1960 (+ x3863 40)) x4307) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x688) x1911) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x494 x1358)) (= (x3135 x3892 96) x789) (< (* x1759 x2250) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x712 x613 x494 x1358 x949 x549 x3199 x1299 x789 x4100) x4693) (= (uninterp_mod (* 26959946667150639794667015087019630673637144422540572481103610249216 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1327) (= x915 x613) (= x4782 x4167) (= (x2113 (x5032 x2570) (x4755 2) 0) x5089) (= x3524 x2049) (= (x3135 x4305 96) x3199) (= (x4062 (- x4632 32)) x1386) (not (< x4576 x1637)) (= x2348 x494) (= (x1960 (+ 64 x2529)) x1817) (= (x20 x2174) x4729) (= x2988 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x139)) (>= x2112 0) (= (x1960 (+ x5283 60)) x2008) (= (x1960 (+ 480 x2810)) x2529) (= (x766 (x4755 0)) x2570) (= x4305 x2404) (= x2887 (x1960 (+ 31 x3901))) (= x4845 x266) (= x3660 x3647) (= (x6 x5089 2) x3966) (= x3444 (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x1679)) (= x4291 (< (+ x5129 (x2092 (x5032 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x279 (x1960 (+ 64 x4307))) (= x1819 (x20 x2046)) (= (x5313 255 x3101) x47) (= x3177 x4355) (= (x5313 18446744073709551615 x263) x3784) (= (x3215 x1247) x974) (= x3086 x391) (not (< x2218 x4085)) (<= x2112 1461501637330902918203684832716283019655932542975) (= x676 (x2113 (x5032 x549) x1138 0)) (= (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x5205) x1993) (or (and x2884 (> 4294967296 x2889) (= x5054 1)) (and (= x632 x5054) (not x2884))) (= x4903 (x20 x3624)) (= x2187 (ite x3397 1 0)) (> x2436 0) (= true (<= x2218 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x458) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2218)) (and (> x2218 x458) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x458) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2218)))) (= x4562 (x3215 x2979)) (> 2650021976 x3761) (= (x1960 (+ (uninterp_mod (ite x1669 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5222)) x2380) (= x688 (x1492 x1152))) x5284))) x3852))
(assert (x609 x4981))
(assert (x609 x1527))
(assert (= (and x2106 x1787) x516))
(assert (= (=> (and (= (> x3470 x704) x2768) (= x3942 (x2113 (x5032 274184521717934524641157099916833587240) x3520 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x704) (= (x2113 (x5032 x1486) (x4755 2) 0) x3520) (= 274184521717934524641157099916833587240 x1944) (= 274184521717934524641157099916833587240 x841) (>= x704 0) (= (x4674 x3942) x704) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x2588)) (and (=> x2768 x1483) (=> (not x2768) x5130))) x1426))
(assert (x609 x3873))
(assert (x4276 x3686 x5350))
(assert (x609 x1599))
(assert (x609 x4249))
(assert (x3829 x1793 x4828))
(assert (x609 x5268))
(assert (= (x3776 x4772) (ite (= x1591 x4772) x1250 (x2617 x4772))))
(assert (x609 x5333))
(assert (= (x1681 x5241) (ite x2394 (ite x764 (x1298 x5241) (x4579 x5241)) (x4257 x5241))))
(assert (x609 x1471))
(assert (x745 x4389))
(assert (x609 x2809))
(assert (x4276 x2294 x4541))
(assert (= (=> (and (= x5271 (x1960 (+ x1870 32))) (= x227 (x4501 x5271)) (= x3179 (= 0 x227)) (= (not x3179) x3903) (= x3564 (= (ite x3903 1 0) x227))) (and (=> (not x3564) x5043) (=> x3564 x1245))) x1033))
(assert (x609 x2883))
(assert (x609 x3732))
(assert (x609 x636))
(assert (x609 x1648))
(assert (x609 x814))
(assert (x609 x2436))
(assert (x609 x1460))
(assert (= x4911 (and x3357 (not x884))))
(assert (x745 x2943))
(assert (= (=> (and (= x5083 (> x4936 0)) (= (x4873 (x5032 x1519)) x4936) (= x1519 (x5313 1461501637330902918203684832716283019655932542975 x80)) (= (x2961 x4967) x1136)) (and (=> x5083 x1942) (=> (not x5083) x3014))) x3367))
(assert (= x3610 (x4290 (x5032 x3610))))
(assert (= x4791 (=> (and (= 274184521717934524641157099916833587240 x1239) (= (= 274184521717934524641157099916833587240 x4747) x1893) (= x4747 (x5313 1461501637330902918203684832716283019655932542975 x3074)) (= x260 (x1960 (+ x1822 36))) (= x3756 x1042) (not (= 0 x3558)) (= x3558 (x4873 (x5032 x4747))) (= (x4062 (- x260 x1822)) x780) (= (x1960 (+ x1822 4)) x3756)) (and (=> (and (not (= 1845821197 x1112)) (not (= 1722255204 x1112)) (not (> 1722255204 x1112)) (= x2274 32) (= 274184521717934524641157099916833587240 x113) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0) x3909) (= 1889567281 x1112) (not (= 1858285468 x1112)) (not (< x1112 1166402363)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1285) x1893 (= (x1542 x3909) x2902) (< 0 x4980) (= x2517 x780) (not x2577) (= 1 x3429) (not (< x2517 4)) (= (or (and (< x4238 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4238))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4238)) x2577) (< x1112 2311529814) (= (x4062 (- x2517 4)) x4238) (= (x4873 (x5032 274184521717934524641157099916833587240)) x4980) (= x2517 36)) x700) (=> (not x1893) x697)))))
(assert (x609 x949))
(assert (x609 x3396))
(assert (= (x1655 x4245) (ite (= x4245 x4252) 0 (x5379 x4245))))
(assert (= (x493 x2704) 0))
(assert (x609 x2543))
(assert (= (ite (and x763 x2185) (ite (and x2185 x1516 x763) (x1700 (x5032 x2543)) (x4567 (x5032 x2543))) (x4567 (x5032 x2543))) (x1695 (x5032 x2543))))
(assert (= x4453 (or x2813 x939 x3665)))
(assert (= (ite (= x1618 x1610) x629 (x889 x1618)) (x2928 x1618)))
(assert (x609 x1917))
(assert (= x5130 (=> (= (> x3470 x704) x4518) (and (=> (and (= x1527 x1354) (= (x2113 (x5032 x1486) (x4755 2) 0) x5239) (= x4664 274184521717934524641157099916833587240) (= 1 x3762) (not x4518) (= (x2113 (x5032 274184521717934524641157099916833587240) x5239 0) x1440) (= x2621 (x4062 (- x704 x3470)))) x896) (=> x4518 x1483)))))
(assert (x609 x1431))
(assert (= x3582 (=> (and (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4098)) (< x4098 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4098))) (not (= 0 x4700)) (= x103 (x1960 (+ x3644 x541))) (= x4381 (x3684 x4330)) (= x3644 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5081)) (= x4381 x3733) (= x4330 x541) (= (x1960 (+ x4098 31)) x5081) (= x103 x2616)) x3017)))
(assert (x609 x2533))
(assert (x609 x3462))
(assert (x79 x5036 x2007 x5311 x1244))
(assert (= x2712 (=> (and (= (< 0 x3080) x4856) (= (x5313 1461501637330902918203684832716283019655932542975 x3660) x4704) (= x3080 (x4873 (x5032 x4704)))) (and (=> (and (not x4856) (not (> x703 x223)) (= x2596 x541)) x1408) (=> (and (or (and (or (and (= 32 x2930) (not x3497)) (and (or (and (= x3881 (> x405 96)) (= (x984 x1883) x3146) (= x1883 (x1960 (+ 96 x541))) (= x3886 (x1960 (+ x910 128))) x4563 (or (and (= 128 x2930) x3881 (= x677 (> x405 128)) (= x4315 (x1960 (+ x910 160))) (= (x1960 (+ x541 128)) x1148) (not x677) (= x5080 (x4751 x1148))) (and (= 96 x2930) (not x3881)))) (and (= x2930 64) (not x4563))) (= (x1960 (+ x910 96)) x185) (= x2397 (x1960 (+ 64 x541))) (= (x3007 x2397) x3414) x3497 (= (> x405 64) x4563))) (= x1369 x1857) (= x4375 (x3032 x4837)) x4449 (= x3497 (> x405 32)) (= x4837 x4594)) (and (not x4449) (= x2930 0))) (= (x1960 (+ 32 x4970)) x9) (= x1217 0) (= (> x2738 0) x3446) (= (x1960 (+ x541 132)) x910) (= x2738 (x4873 (x5032 x4735))) (= (x4062 (- x910 x541)) x337) (= x734 274184521717934524641157099916833587240) (= x2938 (x4559 x4594)) (or (and x1973 (= (x1960 (+ x1857 x405)) x661)) (not x1973)) (= (x1960 (+ x4607 128)) x1946) x4856 (= (x1960 (+ 36 x541)) x4607) (= (x1960 (+ x4607 160)) x1857) (= x4607 x4970) (= (< x405 x2930) x1973) (= x373 (x1960 (+ x4970 64))) (= x4449 (< 0 x405)) (= x4735 (x5313 1461501637330902918203684832716283019655932542975 x3660)) (= (x4062 (- x337 32)) x2032) (= (x3032 x541) x405) x3446 (= x3693 (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x2938)) (= x4594 (x1960 (+ 32 x541))) (= 274184521717934524641157099916833587240 x5255) (= (x1960 (+ x3693 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x1648)) x3335)))))
(assert (= (x3673 x5331) (ite (= x1255 x5331) x4340 (x1886 x5331))))
(assert (= 115792089237316195423570984636004990333889740523700931696805413995650331181055 (x4290 (x4755 115792089237316195423570984636004990333889740523700931696805413995650331181055))))
(assert (x609 x344))
(assert (x609 x218))
(assert (x609 x5347))
(assert (x79 x330 x4365 x2665 x2777))
(assert (= (+ (x4290 x4392) 1) (x4290 (x6 x4392 1))))
(assert (= (x2427 x4690) (ite (and x4469 x792 x1391 x2673 x2651 (not x503)) (x2928 x4690) (ite (and x1391 (not x2651) x4469 x792 x2673) (x889 x4690) (ite (and x2673 x792 x4469 (not x1391)) (x3588 x4690) (ite (and x792 (not x4469) x2673) (x1796 x4690) (x509 x4690)))))))
(assert (x1139 x688 x2280 x5344 x1943))
(assert (x609 x944))
(assert (x609 x1036))
(assert (= (ite (= (x4755 0) x2999) x2630 (x4349 x2999)) (x2707 x2999)))
(assert (x609 x1692))
(assert (x609 x1612))
(assert (x609 x5222))
(assert (x609 x3952))
(assert (= (uninterp_mod (* x3892 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3135 x3892 96)))
(assert (= (x2195 x3054) (ite (= x3498 x3054) x2754 (x42 x3054))))
(assert (x609 x1464))
(assert (x609 x5262))
(assert (x609 x4177))
(assert (x609 x4024))
(assert (= (x4561 x3952) (ite (= x2907 x3952) 0 (x1382 x3952))))
(assert (x609 x4894))
(assert (=> (< (- x2541 1) 10000) (= (x4755 x2541) (x5032 x2541))))
(assert (= (x4651 x1586) (ite (= x1115 x1586) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x1586))))
(assert (= (ite (= x2548 x4788) x1755 (x679 x2548)) (x4618 x2548)))
(assert (= (ite (= x970 x1042) 274184521717934524641157099916833587240 (x5299 x970)) (x1638 x970)))
(assert (= x2143 (x4290 (x5032 x2143))))
(assert (x609 x3159))
(assert (= (x550 x1148) (ite (= x487 x1148) 0 (x2852 x1148))))
(assert (= (x4755 4294967296) (x5032 4294967296)))
(assert (= (ite (= x1661 x2142) x3483 (x3635 x1661)) (x3218 x1661)))
(assert (x609 x3785))
(assert (x609 x5202))
(assert (= (x559 x5351) (ite (and (not x1973) x4856 x338) (x1106 x5351) (x2086 x5351))))
(assert (x609 x2616))
(assert (x745 115792089210356248756420345214020892766250353992003419616917011526809519390720))
(assert (x609 x3468))
(assert (x609 x3146))
(assert (x4289 x5))
(assert (x609 x128))
(assert (x609 x4933))
(assert (= x3372 (=> (and (= (not (= 0 x2108)) x2512) (= x5002 (x42 x1892)) (= x2108 (x5313 1461501637330902918203684832716283019655932542975 x5002)) (= x1892 (x2113 (x5032 x852) (x4755 208) 0))) (and (=> (not x2512) x117) (=> (and (= x4629 (x42 x4185)) (= x4185 (x2113 (x5032 x852) (x4755 210) 0)) (= x994 (= 274184521717934524641157099916833587240 x3718)) x2512 (= (x5313 1461501637330902918203684832716283019655932542975 x4629) x3718) (or (and x994 (= x662 (ite x994 1 0))) (and (= (x42 x2564) x749) (not x994) (= (x2113 (x5032 274184521717934524641157099916833587240) x3036 0) x2564) (= x1824 (x5313 255 x749)) (= x662 x1824) (= (x2113 (x5032 x871) (x4755 211) 0) x3036)))) x5292)))))
(assert (= x1202 (and x2973 x142)))
(assert (= (ite x2394 (ite x764 (x4984 (x5032 x2412)) (x1695 (x5032 x2412))) (x689 (x5032 x2412))) (x2044 (x5032 x2412))))
(assert (= (ite (and x763 x2185) (ite (and x763 x1516 x2185) (x1281 x3795) (x1177 x3795)) (x1177 x3795)) (x4579 x3795)))
(assert (= (x3739 x970) (ite (= x1086 x970) x351 (x3107 x970))))
(assert (x745 x5374))
(assert (= (- (/ x851 452312848583266388373324160190187140051835877600158453279131187530910662656) (uninterp_frac x851 452312848583266388373324160190187140051835877600158453279131187530910662656)) (x5174 x851 248)))
(assert (= (ite (= x3775 x408) x703 (x1395 x3775)) (x3181 x3775)))
(assert (= (x2056 x4182) (ite x748 (ite x3421 (x831 x4182) (x5337 x4182)) (x4766 x4182))))
(assert (= (ite (and x4600 x4451) (ite (and x4451 x4600 x4193) (x349 (x5032 x438)) (x3349 (x5032 x438))) (x3349 (x5032 x438))) (x4584 (x5032 x438))))
(assert (= (and x356 (not x1031)) x3373))
(assert (= (ite (= x3778 x5331) x1806 (x4728 x5331)) (x3344 x5331)))
(assert (= (x4202 x5351) (ite (and x4577 x3528) (x559 x5351) (ite (and x5210 x4432) (x2503 x5351) (x2755 x5351)))))
(assert (x609 x2435))
(assert (x609 x2169))
(assert (x609 x4333))
(assert (x609 x3067))
(assert (x609 x3920))
(assert (= (=> (and (not (< x2533 4)) (= x1136 x4789) (not (< x4760 826074471)) (not (= 2514000705 x4760)) (not (= x4760 1889567281)) (= 68 x2533) (not (= 826074471 x4760)) (= x2533 x2454) (= x121 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x4479 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5390) (and (> 64 x5390) (= true (<= x5390 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x3515 (x4873 (x5032 274184521717934524641157099916833587206))) (< 0 x3515) (= 2835717307 x4760) (= x3186 x598) (= (x4062 (- x2533 4)) x5390)) (and (=> x4479 x4612) (=> (not x4479) x2553))) x2146))
(assert (= (ite x2394 (ite x764 (x4984 (x5032 x5256)) (x1695 (x5032 x5256))) (x689 (x5032 x5256))) (x2044 (x5032 x5256))))
(assert (= (x1542 x2564) (ite (= x1161 x2564) x2324 (x3508 x2564))))
(assert (= (ite (= x1161 x3022) x2324 (x3508 x3022)) (x1542 x3022)))
(assert (= (ite (= x5386 x970) x1036 (x3739 x970)) (x289 x970)))
(assert (= (x4755 109576784812748834340197573905731726730118698833493337707389013487240318287872) (x5032 109576784812748834340197573905731726730118698833493337707389013487240318287872)))
(assert (= (ite (= x970 x2291) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2608 x970)) (x1339 x970)))
(assert (x609 x3683))
(assert (x4289 x2412))
(assert (= 0 (x4284 (- x5271 x2721))))
(assert (x745 x2715))
(assert (= x3878 (and x1818 x3803)))
(assert (= (ite (= x2603 x4330) x613 (x569 x4330)) (x3474 x4330)))
(assert (x745 x2096))
(assert (x4289 x2278))
(assert (= (ite (= x1661 x4322) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3668 x1661)) (x3589 x1661)))
(assert (= 0 (x493 x3158)))
(assert (x609 x3941))
(assert (= (x2463 x5151) (ite (and x4853 x1961 (not x4638)) (x3043 x5151) (x4962 x5151))))
(assert (= x3710 (and x4911 (not x2431))))
(assert (x4289 274184521717934524641157099916833587206))
(assert (= (ite (and x4469 x2673 x2651 x792 (not x503) x1391) (x2928 x3708) (ite (and x2673 x792 x1391 (not x2651) x4469) (x889 x3708) (ite (and x2673 (not x1391) x4469 x792) (x3588 x3708) (ite (and (not x4469) x792 x2673) (x1796 x3708) (x509 x3708))))) (x2427 x3708)))
(assert (= (x4727 x4359) 0))
(assert (= (x5032 26959946667150639794667015087019630673637144422540572481103610249215) (x4755 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x745 x386))
(assert (x609 x4656))
(assert (x609 x4133))
(assert (= (x42 x5121) (ite (= (x4755 0) x5121) x4687 (x212 x5121))))
(assert (x609 x484))
(assert (x745 x2887))
(assert (x609 x2560))
(assert (x609 x1688))
(assert (x609 x2008))
(assert (x609 x1496))
(assert (= (ite (= x5165 x739) x86 (x3835 x739)) (x3306 x739)))
(assert (x3641 x5233 x3069))
(assert (=> (< (- x3406 1) 10000) (= (x5032 x3406) (x4755 x3406))))
(assert (x609 x1457))
(assert (x609 x598))
(assert (= x4078 (=> (= x142 (= x2358 274184521717934524641157099916833587202)) (and (=> (not x142) x4343) (=> x142 x3959)))))
(assert (x609 x1093))
(assert (x609 x3037))
(assert (= x2723 x1061))
(assert (x609 x2089))
(assert (x609 x4239))
(assert (= (x3596 x4783) (ite (= x4128 x4783) x3780 (x4036 x4783))))
(assert (x609 x2490))
(assert (x745 x398))
(assert (=> (> (+ 10000 1) x5185) (= (x5032 x5185) (x4755 x5185))))
(assert (x1139 x1512 x2471 x4287 x3908))
(assert (x609 x1318))
(assert (x609 x1430))
(assert (x609 x3831))
(assert (x609 x1661))
(assert (x609 x302))
(assert (= (x5167 x4517) (ite (and (not x2405) x5103 x3292) (x3205 x4517) (x4651 x4517))))
(assert (= (x3939 x3932) (ite (= x3932 x3351) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4710 x3932))))
(assert (= (ite (= x5067 x1610) x629 (x889 x5067)) (x2928 x5067)))
(assert (x4289 x3719))
(assert (x745 x80))
(assert (= (ite (= x4330 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x4330)) (x4977 x4330)))
(assert (= (x3596 x970) (ite (= x4128 x970) x3780 (x4036 x970))))
(assert (= (=> (= (= 274184521717934524641157099916833587240 x684) x3164) (and (=> (not x3164) x362) (=> (and (not (< x3130 1722255204)) (not (= x3130 1845821197)) (not (< x3130 1166402363)) (> 2311529814 x3130) (= 36 x5184) (not (= 1722255204 x3130)) (> x3320 0) (= 1889567281 x3130) (= x1799 x5184) (= (x4062 (- x5184 4)) x2841) (not (< x5184 4)) (= x3672 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2841) true) (> 32 x2841)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2841))) (or (and (= 0 x3617) x3672 (= x1937 x5354)) (and (= (x3776 x3740) x866) (= x3740 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0)) (= x2270 274184521717934524641157099916833587240) (= x5354 32) (= 1 x3617) (not x3672))) x3164 (= x389 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= x3130 1858285468)) (= x3320 (x4873 (x5032 274184521717934524641157099916833587240)))) x1349))) x3061))
(assert (= (x2928 x4773) (ite (= x1610 x4773) x629 (x889 x4773))))
(assert (x609 x1848))
(assert (x609 x3280))
(assert (= (x3178 x3448) (ite (= x3448 x3807) x4939 (x2018 x3448))))
(assert (x609 x4615))
(assert (x79 x4880 x2066 x1530 x14))
(assert (x609 x2141))
(assert (= 1 (x1579 (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x4693))))
(assert (x609 x5258))
(assert (= (x1329 x1661) (ite (= x1661 x4012) 274184521717934524641157099916833587240 (x447 x1661))))
(assert (= (ite (= x3177 x1883) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x1883)) (x4977 x1883)))
(assert (x745 x2897))
(assert (= (x1571 x4832) (ite (= x282 x4832) 0 (x4965 x4832))))
(assert (x609 x1793))
(assert (x609 x3199))
(assert (=> (> (+ 10000 1) x2543) (= (x5032 x2543) (x4755 x2543))))
(assert (= x824 (=> (and (= (x2113 (x5032 x1446) (x4755 1) 0) x1842) (<= 0 x3612) (= (> x2040 x3612) x1031) (= x3612 (x183 x1842)) (= x463 x3691) (<= x3612 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (not x1031) x3495) (=> x1031 x1180)))))
(assert (x3829 x3647 x1122))
(assert (x609 x4632))
(assert (x609 x4115))
(assert (= (ite (and x3292 x5103 (not x2405)) (x3205 x3914) (x4651 x3914)) (x5167 x3914)))
(assert (= x4374 (=> (= (= x4076 0) x5088) (and (=> x5088 x5043) (=> (not x5088) x1124)))))
(assert (= (x4290 (x5032 x4368)) x4368))
(assert (x609 x510))
(assert (= x3492 (or (and (not x3559) x1021) x3782)))
(assert (x609 x1555))
(assert (x609 x2759))
(assert (x609 x4279))
(assert (= (ite (= x2046 x408) x703 (x1395 x2046)) (x3181 x2046)))
(assert (= x4581 (=> (= 0 x2736) x2310)))
(assert (= (ite (= x1161 (x4755 0)) x2324 (x3508 (x4755 0))) (x1542 (x4755 0))))
(assert (= (x2707 x1161) (ite (= (x4755 0) x1161) x2630 (x4349 x1161))))
(assert (x609 x4048))
(assert (x4289 x4336))
(assert (= (ite (and x4451 x4360 x2875 x4192 x4600 (not x1887)) (x4618 x1609) (ite (and x4451 x4192 x2875 (not x4360) x4600) (x679 x1609) (ite (and x4600 x4451 (not x4192) x2875) (x1522 x1609) (ite (and x4600 x4451 (not x2875)) (x631 x1609) (x2091 x1609))))) (x4816 x1609)))
(assert (= x1043 (and x1670 x2729)))
(assert (x609 x983))
(assert (x609 x4110))
(assert (= (x493 224) 0))
(assert (x609 x4224))
(assert (x609 x435))
(assert (x609 x1798))
(assert (= (x5174 x1656 255) (- (/ x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968) (uninterp_frac x1656 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x609 x1212))
(assert (= x3991 (and (not x2793) x2434)))
(assert (= x568 (=> (= x5371 (> x5282 x2421)) (and (=> x5371 x2657) (=> (not x5371) x4371)))))
(assert (= (and x2302 (not x2835)) x1088))
(assert (= (uninterp_mod (* x2495 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3135 x2495 96)))
(assert (= (and (not x3906) x1341) x4852))
(assert (= (x3835 x2207) (ite x748 (ite x3421 (x3132 x2207) (x3614 x2207)) (x416 x2207))))
(assert (x609 x3973))
(assert (= (x3729 x5151) 0))
(assert (x609 x4403))
(assert (x609 x1558))
(assert (= (ite (= (x4755 0) x4586) x4687 (x212 x4586)) (x42 x4586)))
(assert (= (ite (= x3295 x5271) x112 (x3589 x5271)) (x3635 x5271)))
(assert (= (=> (and (= (> x690 0) x1862) (= x612 (x1267 x2046)) (= (x4873 (x5032 x3719)) x690) (= x3719 (x5313 1461501637330902918203684832716283019655932542975 x3660))) (and (=> (and (= (x5313 1461501637330902918203684832716283019655932542975 x3892) x1099) (= x3639 (x1960 (+ x3678 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= (x1960 (+ x869 36)) x892) (= (x3939 x869) x4776) (= (x1960 (+ x892 128)) x2877) (= (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x1041) x3678) (or (and x3802 (= (< 32 x4776) x4731) (= x2865 x3104) (or (and (not x4731) (= 32 x1924)) (and (or (and (= (x1960 (+ 96 x869)) x5176) x2461 (= (> x4776 96) x1355) (= x3506 (x1960 (+ 128 x4457))) (= x3404 (x1678 x5176)) (or (and (not x1355) (= x1924 96)) (and (= x1924 128) (= (< 128 x4776) x3764) (not x3764) (= (x1960 (+ x4457 160)) x520) x1355 (= (x3307 x4111) x4090) (= x4111 (x1960 (+ 128 x869)))))) (and (not x2461) (= 64 x1924))) (= (x1960 (+ 96 x4457)) x4659) (= (x1960 (+ 64 x869)) x5351) (= x2461 (> x4776 64)) x4731 (= x1939 (x5006 x5351)))) (= x3849 x2877) (= x653 (x3939 x2865))) (and (not x3802) (= 0 x1924))) x2192 (= (x4062 (- x4457 x869)) x727) (= (x1960 (+ x892 96)) x3351) (= x3104 (x1960 (+ x869 32))) (= (x1960 (+ 100 x869)) x4457) (= x1352 (< x4776 x1924)) x1862 (= (< 0 x4776) x3802) (or (not x1352) (and (= x2414 (x1960 (+ x4776 x2877))) x1352)) (= x1116 (x4873 (x5032 x1279))) (= x1279 (x5313 1461501637330902918203684832716283019655932542975 x3660)) (= (x4062 (- x727 32)) x5348) (= x2192 (> x1116 0)) (= x2375 0) (= (x1960 (+ x1050 32)) x2233) (= (x4647 x3104) x1041) (= x1050 x892)) x4521) (=> (and (not x1862) (= (x4623 (x5032 274184521717934524641157099916833587240)) x394) (< 0 x1854) (or (and (= x2059 0) (not x1547) (= 0 x1854)) (and (or (not x821) (and (= (x5397 (x5032 274184521717934524641157099916833587240)) x3071) (= x2205 (= (x4643 (x5032 x3187)) x1825)) x821 x3866 (= x1825 (x5397 (x5032 x3187))) x2205 (= (>= (x4643 (x5032 274184521717934524641157099916833587240)) x3071) x3866) (< x4475 4294967296))) (= (- (x4623 (x5032 274184521717934524641157099916833587240)) x612) x4437) (= x5031 (x1960 (+ x612 (uninterp_mod (x4960 (x5032 x3187)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x5104 (= (- (x1971 (x5032 x3187)) x1009) x1113) x2051 (= x2861 x1854) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x4814 (x5032 274184521717934524641157099916833587240)) x1009)) x2051) (= (ite (= 0 x2861) x612 0) x1009) (= x5104 (< (+ (x4960 (x5032 x3187)) x612) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x2861 0) x821) x1547 (= x2059 x4475))) (= (x4623 (x5032 x3187)) x575) (not (> x612 x1165)) (= (x4623 (x5032 274184521717934524641157099916833587240)) x1165) (= x4997 (= x2059 0)) (= x3187 (x5313 1461501637330902918203684832716283019655932542975 x3892)) (= (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x612 x575)) (>= x394 x612)) x1547)) x1333))) x1319))
(assert (x609 x2683))
(assert (x745 115792089237316195423570984636004990333889740523700931696805413995650331181055))
(assert (x609 x4964))
(assert (= (x2396 x3592) (ite (= x4744 x3592) 274184521717934524641157099916833587240 (x5234 x3592))))
(assert (= (=> (and (= (x3776 (x4755 0)) x5022) (= (> 1 x5022) x726)) (and (=> x726 x5043) (=> (not x726) x4237))) x1026))
(assert (= (ite (= x4012 x1870) 274184521717934524641157099916833587240 (x447 x1870)) (x1329 x1870)))
(assert (x609 x4539))
(assert (x609 x176))
(assert (x609 x4509))
(assert (x4289 x2570))
(assert (x609 x1663))
(assert (= (x3474 x3104) (ite (= x3104 x2603) x613 (x569 x3104))))
(assert (x609 x2168))
(assert (x745 x974))
(assert (x609 x4486))
(assert (= 2514000705 (x4290 (x4755 2514000705))))
(assert (x609 x1045))
(assert (x609 x5233))
(assert (= x4109 (=> (and (= (> x4213 0) x4345) (or x27 x4345) (= (x1632 (x5032 x4213)) x2982) (< x4213 1461501637330902918203684832716283019655932542976) (not x1236) (not x3579) (= (< x2982 x5129) x1929) (= x27 (= x4213 0))) (and (=> (and x1929 (= true x3689)) x1979) (=> (and (= x3884 x4725) (= x435 x1367) (= x1735 x1753) (= x4725 x266) (= (<= x2218 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) x5370 (= x2964 x3953) (<= 0 x3884) (= x1775 (- (x1632 (x5032 x4213)) x5129)) (>= 1461501637330902918203684832716283019655932542975 x3884) (= (x1960 (+ x5129 (uninterp_mod (x101 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x899) (= x3273 x5374) (< 291 x2218) (>= x4990 0) (= x4656 x4213) (= x4258 x1286) (<= x4656 1461501637330902918203684832716283019655932542975) (= x915 x1806) (= x3505 x3010) (>= x4656 0) (= x2348 x2410) (= x80 x3647) (= (< (+ x5129 (x101 (x5032 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5370) (>= 1461501637330902918203684832716283019655932542975 x4990) (not x1929)) x5189)))))
(assert (x745 x3720))
(assert (= (x4290 (x6 x4178 2)) (+ 2 (x4290 x4178))))
(assert (x609 x592))
(assert (x609 x780))
(assert (x609 x818))
(assert (= (ite (and (not x3191) x1000 x4625) (x2895 x3952) (x2155 x3952)) (x3157 x3952)))
(assert (x609 x1099))
(assert (= (x1372 x739) (ite (= x4428 x739) x205 (x3306 x739))))
(assert (x609 x3339))
(assert (x609 x2750))
(assert (= x2511 (=> (and (= (= x1486 x606) x2822) (= x1486 x2398)) (and (=> (not x2822) x1483) (=> x2822 x5389)))))
(assert (= (ite (and x898 x2099 x1226 x1170 (not x1900) x4580) (x289 x4783) (ite (and x4580 x898 x1226 (not x2099) x1170) (x3739 x4783) (ite (and x1226 (not x898) x1170 x4580) (x3107 x4783) (ite (and x1226 x4580 (not x1170)) (x4184 x4783) (x4895 x4783))))) (x3532 x4783)))
(assert (= (ite (= x5283 x5316) x1386 (x1956 x5316)) (x4208 x5316)))
(assert (x4289 x1525))
(assert (= (ite (and x3591 (not x5195) x874) (x3002 x1586) (x2162 x1586)) (x1193 x1586)))
(assert (= (x1910 x3448) (ite (= x3448 x4225) x4534 (x588 x3448))))
(assert (x609 x658))
(assert (= (ite (= x685 x1161) x2324 (x3508 x685)) (x1542 x685)))
(assert (x609 x2265))
(assert (= (ite (= x4788 x4330) x1755 (x679 x4330)) (x4618 x4330)))
(assert (= (ite x4453 (ite x3665 (x3386 x4967) (ite x2813 (x968 x4967) (x1685 x4967))) (x3386 x4967)) (x3207 x4967)))
(assert (x609 x759))
(assert (= (x2195 x3865) (ite (= x3498 x3865) x2754 (x42 x3865))))
(assert (= (x3178 x2489) (ite (= x3807 x2489) x4939 (x2018 x2489))))
(assert (= (x3178 x2750) (ite (= x3807 x2750) x4939 (x2018 x2750))))
(assert (x609 x1621))
(assert (x4289 x438))
(assert (= (x3135 x2315 96) (uninterp_mod (* 79228162514264337593543950336 x2315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x609 x4782))
(assert (x609 x5004))
(assert (x745 x4689))
(assert (= (ite (= (x4755 0) x400) x2630 (x4349 x400)) (x2707 x400)))
(assert (= x2227 (=> (= (> x3843 0) x4313) (and (=> (not x4313) x572) (=> x4313 x2341)))))
(assert (= x4336 (x4290 (x5032 x4336))))
(assert (= (and x1214 x296) x3038))
(assert (x609 x654))
(assert (x609 x554))
(assert (= (ite (and x1932 x5003) (x3097 x1586) (x3596 x1586)) (x254 x1586)))
(assert (= (ite (= x5071 x1586) x2253 (x3178 x1586)) (x2959 x1586)))
(assert (x609 x865))
(assert (x609 x4659))
(assert (x609 x3851))
(assert (x609 x1399))
(assert (= (ite (and x2185 x763) (ite (and x763 x2185 x1516) (x1871 x3703) (x1947 x3703)) (x1947 x3703)) (x1562 x3703)))
(assert (x609 x1715))
(assert (x609 x5386))
(assert (= (ite (= x2724 x169) x1563 (x631 x169)) (x1522 x169)))
(assert (= (x2155 x2527) (ite (= x4057 x2527) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x2527))))
(assert (= (ite (= x3177 x1609) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x1609)) (x4977 x1609)))
(assert (= (x2959 x4832) (ite (= x5071 x4832) x2253 (x3178 x4832))))
(assert (x4823 x1464 x2789 x4489 x133))
(assert (= (and x3251 x2753) x4001))
(assert (= (ite (= x1722 x5071) x2253 (x3178 x1722)) (x2959 x1722)))
(assert (x609 x1117))
(assert (= (x3739 x3448) (ite (= x3448 x1086) x351 (x3107 x3448))))
(assert (= x2788 (or (and x3692 (not x1862)) x3319)))
(assert (= (ite (= x2724 x1609) x1563 (x631 x1609)) (x1522 x1609)))
(assert (= (x4290 (x4755 5192296858534827628530496329220096)) 5192296858534827628530496329220096))
(assert (x609 x3092))
(assert (= (x2155 x3839) (ite (= x4057 x3839) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x3839))))
(assert (= x2690 (or (and x4846 x4335) (and x2042 x4498) (and x4565 x1088) (and x2936 (not x2822)) (and x2911 x2768) (and x2302 x2835) (and x3035 x2343) (and x4942 x4518))))
(assert (x609 x5134))
(assert (x609 x3719))
(assert (x609 x3541))
(assert (and (<= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x4693) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x4693) 10000)))
(assert (x609 x2488))
(assert (x609 x3404))
(assert (x609 x1538))
(assert (= (x4290 (x4755 1889567281)) 1889567281))
(assert (x609 x1931))
(assert (= (x534 x4690) (ite (= x806 x4690) x3630 (x1225 x4690))))
(assert (= (x1796 x3049) (ite (= x2429 x3049) x1282 (x2635 x3049))))
(assert (= (and x2424 x5132) x411))
(assert (x3829 x3842 x2563))
(assert (x609 x216))
(assert (x745 x4843))
(assert (= (x2155 x3597) (ite (= x4057 x3597) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x3597))))
(assert (x609 x1288))
(assert (x79 x3169 x2098 x1252 x284))
(assert (= (ite (= x1086 x2750) x351 (x3107 x2750)) (x3739 x2750)))
(assert (x609 x1994))
(assert (x609 x4225))
(assert (= (x4221 224) (ite (= 224 x3303) x1093 (x1849 224))))
(assert (= (ite (and x4600 (not x4298) x4451) (x4816 x3775) (x1840 x3775)) (x2474 x3775)))
(assert (= (ite (= x5165 x2609) x86 (x3835 x2609)) (x3306 x2609)))
(assert (x609 x828))
(assert (x609 x4172))
(assert (x609 x969))
(assert (x745 x3510))
(assert (x609 x1946))
(assert (= x3459 (=> (and (= (x5313 1461501637330902918203684832716283019655932542975 x4843) x988) (= (x5313 1461501637330902918203684832716283019655932542975 x826) x3084) (= x554 (x4062 (- x439 1))) (= (x1097 (x4755 0)) x439) (not (> 1 x439)) (= (x1097 x3574) x4843) (= (< 0 x2357) x763) (= x3950 0) (= (x5313 1461501637330902918203684832716283019655932542975 x826) x3727) (= (x4873 (x5032 x1015)) x2357) (= (x1097 x5212) x217) (not (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x217)) (not (= x5203 0)) (= x3727 x3445) (= (x2113 (x5032 x3084) (x4755 209) 0) x5212) (not x5183) (= x3858 0) (= x3574 (x2113 (x5032 x554) (x4755 208) 0)) (= x2324 (x1960 (+ x3445 x1249))) (= (x5313 1461501637330902918203684832716283019655932542975 x826) x1015) (= x3155 (x1960 (+ 1 x217))) (= x1399 0) (= x652 (x1960 (+ x282 32))) (= (not (= 0 x988)) x5183) (= (x5313 1461501637330902918203684832716283019655932542975 x826) x5203) (or (and (= x4515 x1822) (= (x5313 1461501637330902918203684832716283019655932542975 x826) x2601) (or (and (= x2623 0) (not x809)) (and (= x2253 (x3178 x4245)) (= (> x4939 32) x4042) x809 (= x2752 x4245) (or (and (not x4042) (= 32 x2623)) (and (= x2210 (> x4939 64)) (= x4822 (x1960 (+ x3807 64))) x4042 (= (x2959 x3057) x3430) (= (x1960 (+ x282 64)) x3057) (or (and (= 64 x2623) (not x2210)) (and (= (x1960 (+ x3807 96)) x4225) (= x3343 (> x4939 96)) (= x4534 (x588 x2488)) (or (and (not x724) (= x1827 (x1960 (+ x3807 128))) (= (x1910 x4517) x3667) (= (< 128 x4939) x724) x3343 (= x4517 (x1960 (+ x282 128))) (= 128 x2623)) (and (not x3343) (= x2623 96))) (= (x1960 (+ 96 x282)) x2488) x2210)))) (= x5117 x5071))) (or (and (= x2945 (>= (x1700 (x5032 274184521717934524641157099916833587240)) x1457)) x393 (< x316 4294967296) x2945 x1516 (= (x4567 (x5032 x2601)) x4136) (= (= (x1700 (x5032 x2601)) x4136) x393) (= (x4567 (x5032 274184521717934524641157099916833587240)) x1457)) (not x1516)) (= (x2018 x282) x4939) (= (x4873 (x5032 x2601)) x771) (= x5359 (< x4939 x2623)) (= (< 0 x3390) x1516) (= x809 (> x4939 0)) (= x652 x2095) x763 (= (x594 x2095) x741) (= x4515 (x1960 (+ x652 x1938))) (= x5117 (x1960 (+ x5328 160))) (= (x1960 (+ x282 32)) x2752) (not (= 0 x3390)) (not (= x771 0)) (= x5328 x972) (= (x1960 (+ x4391 64)) x3688) (= x1938 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3169)) (= x4391 (x1960 (+ x972 32))) (= x5220 (ite x5141 1 0)) (= x741 x2811) (= (x1960 (+ x972 64)) x5157) (= x3807 (x1960 (+ x652 132))) (or (and (= (x1960 (+ x5117 x4939)) x1593) x5359) (not x5359)) (= x5141 (= 9518847204935358166548570266051330015907116135037852959641967396525866745856 x741)) (= x3169 (x1960 (+ 31 x316))) (= x3873 (x5313 1461501637330902918203684832716283019655932542975 x826)) (not (or (and (> 32 x316) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x316))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x316))) (= (x5313 115792089210356248756420345214020892766250353992003419616917011526809519390720 x741) x2811) (= x5328 (x1960 (+ x282 36)))) (and (not x763) (= x652 x1822) (= 1 x5220))) (= (x3508 x1161) x1512) (= (x2113 (x5032 x554) (x4755 208) 0) x1161) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1512) x1249)) x3811)))
(assert (x609 x2073))
(assert (= (x4290 (x5032 x5256)) x5256))
(assert (= (x1329 x4690) (ite (= x4690 x4012) 274184521717934524641157099916833587240 (x447 x4690))))
(assert (x609 x614))
(assert (= 0 (x3729 x2226)))
(assert (x609 x4654))
(assert (= (x4184 x4783) (ite (= x2536 x4783) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x4783))))
(assert (= (=> (and (< x4188 2650021976) (= x5274 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3021) (and (= true (<= x3021 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 288 x3021)))) (= x3021 (x4062 (- x2218 4))) (= 2335792882 x4188) (= x3963 (x4873 (x5032 274184521717934524641157099916833587240))) (> x3963 0) (not (> 4 x2218)) (> 3155786881 x4188) (not (= 2311529814 x4188)) (not (> 2311529814 x4188))) (and (=> (not x5274) x2342) (=> x5274 x5043))) x5189))
(assert (= x3648 (x4290 (x5032 x3648))))
(assert (= (x5362 x3768) (ite (= x3768 x4813) x5273 (x1702 x3768))))
(assert (= (x3532 x2644) (ite (and (not x1900) x1170 x1226 x4580 x898 x2099) (x289 x2644) (ite (and x898 x1226 x1170 x4580 (not x2099)) (x3739 x2644) (ite (and x4580 x1226 (not x898) x1170) (x3107 x2644) (ite (and x1226 x4580 (not x1170)) (x4184 x2644) (x4895 x2644)))))))
(assert (= (x4290 (x5032 x3517)) x3517))
(assert (x609 x160))
(assert (x609 x135))
(assert (= x4786 (=> (and (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x781) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1597) (= (x2113 (x5032 x1446) (x4755 2) 0) x1006) (= 274184521717934524641157099916833587240 x2169) (>= x1597 0) (= 274184521717934524641157099916833587240 x4537) (= (x1312 x513) x1597) (= (x2113 (x5032 274184521717934524641157099916833587240) x1006 0) x513) (= x5217 (> x463 x1597))) (and (=> x5217 x1180) (=> (not x5217) x4495)))))
(assert (=> (< (- x2034 1) 10000) (= (x4755 x2034) (x5032 x2034))))
(assert (x745 x3212))
(assert (= (ite (= x5208 x806) x3630 (x1225 x5208)) (x534 x5208)))
(assert (x609 x4901))
(assert (= (x4290 (x5032 x4889)) x4889))
(assert (x609 x1665))
(assert (x609 x3062))
(assert (x609 x346))
(assert (= x5253 (and (not x2923) x2229)))
(assert (x609 x4907))
(assert (= x925 true))
(assert (= (ite (= (x1960 (+ 32 x2299)) x3303) x1093 (x1849 (x1960 (+ 32 x2299)))) (x4221 (x1960 (+ 32 x2299)))))
(assert (= (x4290 (x4755 1722255204)) 1722255204))
(assert (= (ite (= x4822 x1722) x3430 (x2959 x1722)) (x588 x1722)))
(assert (= (ite (= x1610 x788) x629 (x889 x788)) (x2928 x788)))
(assert (= (ite (= x2907 x3597) 0 (x1382 x3597)) (x4561 x3597)))
(assert (= (x534 x5067) (ite (= x806 x5067) x3630 (x1225 x5067))))
(assert (x609 x3171))
(assert (x609 x3190))
(assert (x609 x3099))
(assert (= (x2707 x5212) (ite (= (x4755 0) x5212) x2630 (x4349 x5212))))
(assert (x609 x3638))
(assert (= (ite (= x2724 x5173) x1563 (x631 x5173)) (x1522 x5173)))
(assert (= (x4208 x2179) (ite (= x2179 x5283) x1386 (x1956 x2179))))
(assert (x609 x897))
(assert (= x3583 (x4290 (x5032 x3583))))
(assert (= (x550 x2548) (ite (= x2548 x487) 0 (x2852 x2548))))
(assert (= (ite (= (x4755 0) x671) x2630 (x4349 x671)) (x2707 x671)))
(assert (x609 x1974))
(assert (x609 x1035))
(assert (= (ite (= x3177 x3447) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x3447)) (x4977 x3447)))
(assert (x609 x2239))
(assert (= (x5032 1722255204) (x4755 1722255204)))
(assert (x609 x2974))
(assert (x609 x4613))
(assert (= (ite (and x2074 (not x3897)) (x2272 (x5032 x5105)) (ite x2298 (ite x4453 (x378 (x5032 x5105)) (x4718 (x5032 x5105))) (x4718 (x5032 x5105)))) (x68 (x5032 x5105))))
(assert (x745 x3647))
(assert (x609 x4671))
(assert (= (ite (and x2185 (not x5359) x763) (x808 x1583) (x3946 x1583)) (x5124 x1583)))
(assert (= x1257 (x4290 (x5032 x1257))))
(assert (= (ite (= x1086 x2644) x351 (x3107 x2644)) (x3739 x2644)))
(assert (= (ite (= x1715 x2397) x4413 (x1522 x2397)) (x679 x2397)))
(assert (x609 x396))
(assert (= (x3307 x3932) (ite (= x3506 x3932) x3404 (x1678 x3932))))
(assert (x609 x2061))
(assert (=> (< (- x102 1) 10000) (= (x4755 x102) (x5032 x102))))
(assert (= x3811 (=> (and (not (< x2604 1)) (= (< 0 x4366) x5135) (= x1047 (x5313 1461501637330902918203684832716283019655932542975 x2688)) (= x4366 (x4873 (x5032 x1047))) (= x3780 (x1639 x3584)) (< 0 x5220) (not (= x1047 0)) (= (x4062 (- x2604 1)) x4336) (= (x1542 (x4755 0)) x2604) (= (x1542 x2934) x2688) (= x2934 (x2113 (x5032 x4336) (x4755 208) 0))) (and (=> x5135 x119) (=> (not x5135) x2322)))))
(assert (x609 x1396))
(assert (=> (< (- x2652 1) 10000) (= (x4755 x2652) (x5032 x2652))))
(assert (= (and x3381 (not x3948)) x4625))
(assert (= (x3618 x1148) (ite (= x4767 x1148) 0 (x3760 x1148))))
(assert (= (ite (= x5151 x1255) x4340 (x1886 x5151)) (x3673 x5151)))
(assert (=> (< (- x1288 1) 10000) (= (x4755 x1288) (x5032 x1288))))
(assert (x609 x1597))
(assert (= (x3178 x2488) (ite (= x3807 x2488) x4939 (x2018 x2488))))
(assert (= (x254 x2806) (ite (and x1932 x5003) (x3097 x2806) (x3596 x2806))))
(assert (= 2835717307 (x4290 (x4755 2835717307))))
(assert (= 0 (x3729 x5271)))
(assert (= (x5032 2514000705) (x4755 2514000705)))
(assert (x609 x1434))
(assert (= (ite (= x1976 (x4755 0)) x2630 (x4349 x1976)) (x2707 x1976)))
(assert (x609 x4458))
(assert (= (x4755 3155786881) (x5032 3155786881)))
(assert (x609 x2913))
(assert (= (ite (= x1618 x3778) x1806 (x4728 x1618)) (x3344 x1618)))
(assert (x3829 x4393 x3479))
(assert (x745 x1313))
(assert (= x4025 (and x3840 (not x1470))))
(assert (= (ite (= x4111 x408) x703 (x1395 x4111)) (x3181 x4111)))
(assert (x609 x998))
(assert (x609 x430))
(assert (x609 x1679))
(assert (= (=> (= x2947 (= 274184521717934524641157099916833587206 x3583)) (and (=> (not x2947) x4236) (=> (and (not (< x1316 4)) (= x3291 (x4062 (- x1316 4))) (not (< x1104 826074471)) (= x5137 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (not (= 826074471 x1104)) x2947 (= 36 x1316) (not x5373) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3730) (= x1104 1889567281) (= x5373 (or (> x3291 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3291 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3291 32)))) (<= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x4700) (= x4098 32) (>= x5123 0) (> x5332 0) (= x71 274184521717934524641157099916833587240) (= (x4873 (x5032 274184521717934524641157099916833587206)) x5332) (= x5123 (x1229 x5137)) (= x1576 x1316)) x3582))) x1981))
(assert (x609 x3671))
(assert (x609 x1037))
(assert (x609 x3342))
(assert (x745 x1271))
(assert (= (x3673 x4690) (ite (= x1255 x4690) x4340 (x1886 x4690))))
(assert (x609 x3536))
(assert (= (x1484 x3932) (ite (and x617 x4578) (x1453 x3932) (x1038 x3932))))
(assert (x3829 x2465 x839))
(assert (x609 x2621))
(assert (x4289 x5256))
(assert (x609 x71))
(assert (= x4617 (=> (= x2289 (= 274184521717934524641157099916833587206 x1458)) (and (=> (not x2289) x2105) (=> (and (= (< x904 x1289) x1102) (= x1289 x4926) (= x5110 (x2113 (x5032 274184521717934524641157099916833587240) x4038 0)) (= x3856 x4397) (not (> 4 x4397)) (not x993) (not (= x2918 404098525)) (not x1102) (<= 0 x904) (= x2036 (x4062 (- x4397 4))) (= x4397 100) (not (= x2918 117300739)) (= (x4993 x2269) x3983) (= x4038 (x2113 (x5032 x2143) (x4755 2) 0)) (= x1296 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 274184521717934524641157099916833587240 x3139) (= x4801 x1289) x2289 (= x2143 x1424) (= (> x1289 x904) x3471) (= x3594 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= (x4062 (- x904 x4801)) x894) (= (x2113 (x5032 274184521717934524641157099916833587240) x4726 0) x3595) (= (x2113 (x5032 x2143) (x4755 1) 0) x1335) (not x4218) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4200) (< (+ x1289 x3983) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2918 599290589) (= 274184521717934524641157099916833587240 x4283) (= (x4555 x3309) x4200) (= x4726 (x2113 (x5032 x2143) (x4755 2) 0)) (= x993 (< x4200 x4801)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3983) (= x130 x2143) (= x966 (x4062 (- x4200 x4801))) (not x3471) (> x3260 0) (> 826074471 x2918) (not x270) (<= 0 x3983) (= 1 x4476) (= x2969 274184521717934524641157099916833587240) (= 274184521717934524641157099916833587240 x56) (= x270 (or (and (= true (<= x2036 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2036 96)) (> x2036 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x904 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x238 x3282) (= x4801 x180) (= (x5266 x5110) x904) (= (+ x4926 x4879) x3369) (= (x2113 (x5032 x2143) (x4755 1) 0) x3309) (<= x2143 1461501637330902918203684832716283019655932542975) (= x2269 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= x3248 (< x4200 x1289)) (not x3248) (= x4879 x3983) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3983 x1289)) x4218) (= x3260 (x4873 (x5032 274184521717934524641157099916833587206))) (not (= x2918 157198259)) (<= 0 x4200)) x1846)))))
(assert (x609 x195))
(assert (= (x1655 x2095) (ite (= x4252 x2095) 0 (x5379 x2095))))
(assert (x609 x41))
(assert (x609 x3469))
(assert (x609 x2642))
(assert (= (ite (= x3553 x4833) x2175 (x3588 x4833)) (x889 x4833)))
(assert (x609 x2348))
(assert (x609 x5323))
(assert (= (ite (and x4067 x1915) (x5335 x3775) (x3181 x3775)) (x529 x3775)))
(assert (= (ite (= x4185 (x4755 0)) x2630 (x4349 x4185)) (x2707 x4185)))
(assert (=> (< (- x4951 1) 10000) (= (x5032 x4951) (x4755 x4951))))
(assert (x609 x3430))
(assert (= (x808 x4832) (ite (and (not x3343) x4042 x809 x2210 x763 x2185) (x1910 x4832) (ite (and (not x2210) x4042 x763 x809 x2185) (x588 x4832) (ite (and (not x4042) x2185 x763 x809) (x2959 x4832) (ite (and x2185 x763 (not x809)) (x3178 x4832) (x4220 x4832)))))))
(assert (x609 x1925))
(assert (= (x221 x5067) (ite (= x5067 x1636) 274184521717934524641157099916833587240 (x2029 x5067))))
(assert (= (ite (= x5121 x4996) x3039 (x2195 x4996)) (x382 x4996)))
(assert (x609 x102))
(assert (= (ite (= x4745 x5067) x1390 (x1796 x5067)) (x3588 x5067)))
(assert (x609 x2953))
(assert (not x3852))
(assert (= x3074 (x4290 (x5032 x3074))))
(assert (x745 372682917519380244141939632342652170012262798458880))
(assert (x609 x3950))
(assert (x609 x778))
(assert (= (x254 x3448) (ite (and x1932 x5003) (x3097 x3448) (x3596 x3448))))
(assert (= (ite (= x4744 x3448) 274184521717934524641157099916833587240 (x5234 x3448)) (x2396 x3448)))
(assert (x609 x4533))
(assert (x609 x3361))
(assert (x609 x1586))
(assert (x3641 x602 x1171))
(assert (x745 x3286))
(assert (= (x3207 x1870) (ite x4453 (ite x3665 (x3386 x1870) (ite x2813 (x968 x1870) (x1685 x1870))) (x3386 x1870))))
(assert (x609 x1821))
(assert (x745 x4393))
(assert (x609 x5091))
(assert (x609 x4847))
(assert (x609 x70))
(assert (x609 x4358))
(assert (= (=> (= x3275 (= x3370 274184521717934524641157099916833587202)) (and (=> (not x3275) x2559) (=> (and (= x452 (x4873 (x5032 274184521717934524641157099916833587202))) (> x452 0) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1460)) (> 32 x1460)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1460)) x2828) (= (x4062 (- x4701 4)) x1460) (= 1 x1095) (= (x4849 x1642) x2545) (= x2931 274184521717934524641157099916833587240) (= x638 1889567281) (<= x2545 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4701 36) (= x4021 32) (not (= 826074471 x638)) (not (> 826074471 x638)) (not x2828) x3275 (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x5262) (not (> 4 x4701)) (= x1642 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (>= x2545 0) (= x1131 x4701)) x174))) x3480))
(assert (= (ite (and x90 x3318) (x1837 x1537) (x4561 x1537)) (x267 x1537)))
(assert (= (ite (= x1715 x5173) x4413 (x1522 x5173)) (x679 x5173)))
(assert (= (ite (= x2644 x571) x1831 (x1466 x2644)) (x2862 x2644)))
(assert (= (x4208 x1433) (ite (= x1433 x5283) x1386 (x1956 x1433))))
(assert (x609 x3168))
(assert (= (x1571 x1583) (ite (= x282 x1583) 0 (x4965 x1583))))
(assert (= x853 (=> (= x4183 (= x4172 274184521717934524641157099916833587240)) (and (=> (and x4183 (= x3843 (ite x4183 1 0))) x2227) (=> (not x4183) x1075)))))
(assert (x609 x878))
(assert (x609 x4967))
(assert (x609 x2892))
(assert (= (=> (and (= (x3673 128) x5294) (= x291 (= 64 x5294))) (and (=> x291 x2756) (=> (and (= x1198 2) (not x291) (= 0 x950) (= x2975 x3790)) x873))) x2699))
(assert (x609 x501))
(assert (x4468 x2943 x805 x4910 x902))
(assert (x609 x524))
(assert (= (ite (= x1715 x169) x4413 (x1522 x169)) (x679 x169)))
(assert (x609 x4190))
(assert (x609 x2737))
(assert (= (x5032 98474297345890754025501882143967591664980152141971839855651084132735363579904) (x4755 98474297345890754025501882143967591664980152141971839855651084132735363579904)))
(assert (x609 x2406))
(assert (= (x1910 x3914) (ite (= x4225 x3914) x4534 (x588 x3914))))
(assert (x609 x2623))
(assert (= (x2707 (x4755 1)) (ite (= (x4755 1) (x4755 0)) x2630 (x4349 (x4755 1)))))
(assert (= (x1225 x1661) (ite (= x332 x1661) x3571 (x1853 x1661))))
(assert (= (ite (and (not x4298) x4600 x4451) (x4816 x2397) (x1840 x2397)) (x2474 x2397)))
(assert (x745 x4981))
(assert (x609 x2221))
(assert (x609 x911))
(assert (x4289 x3892))
(assert (= (x3729 x3597) 0))
(assert (x609 x535))
(assert (x609 x4076))
(assert (= (ite (and (not x1887) x2875 x4192 x4600 x4360 x4451) (x4618 x4330) (ite (and x2875 x4600 x4192 (not x4360) x4451) (x679 x4330) (ite (and x2875 x4600 x4451 (not x4192)) (x1522 x4330) (ite (and x4600 x4451 (not x2875)) (x631 x4330) (x2091 x4330))))) (x4816 x4330)))
(assert (= (and x4825 (not x3222)) x3141))
(assert (= (=> (and (= x4316 (x4211 x4182)) (= x4182 (x2113 (x5032 274184521717934524641157099916833587240) x3537 0)) (= 274184521717934524641157099916833587240 x2314) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x2085) (= (> x5282 x4316) x5092) (= 274184521717934524641157099916833587240 x1383) (<= x4316 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3537 (x2113 (x5032 x1657) (x4755 2) 0)) (>= x4316 0)) (and (=> x5092 x2657) (=> (not x5092) x4770))) x1454))
(assert (x609 x1263))
(assert (= (x2474 x4330) (ite (and x4451 (not x4298) x4600) (x4816 x4330) (x1840 x4330))))
(assert (x609 x2783))
(assert (= (x4290 (x5032 x3719)) x3719))
(assert (x609 x698))
(assert (= (and (not x5085) x5070) x1341))
(assert (=> (< (- x871 1) 10000) (= (x4755 x871) (x5032 x871))))
(assert (= (x1340 x2046) (ite (= x2046 x96) 274184521717934524641157099916833587240 (x456 x2046))))
(assert (= (ite (= x4642 x96) 274184521717934524641157099916833587240 (x456 x4642)) (x1340 x4642)))
(assert (= (ite (= x4653 (x4755 0)) x2630 (x4349 x4653)) (x2707 x4653)))
(assert (x609 x978))
(assert (x609 x1398))
(assert (= (x156 x4773) (ite (= x4773 x4944) 0 (x2646 x4773))))
(assert (x1139 x4981 x3715 x1633 x312))
(assert (= (x4751 x1609) (ite (= x1609 x3886) x3146 (x984 x1609))))
(assert (= 0 (x4727 x2806)))
(assert (= (x4221 x4883) (ite (= x4883 x3303) x1093 (x1849 x4883))))
(assert (x609 x2738))
(assert (=> (< (- x4956 1) 10000) (= (x4755 x4956) (x5032 x4956))))
(assert (x609 x3272))
(assert (x609 x130))
(assert (x609 x4094))
(assert (= 0 (x4727 x1586)))
(assert (x609 x1858))
(assert (x609 x439))
(assert (x609 x4223))
(assert (= 0 (x493 (x1960 (+ x2672 96)))))
(assert (x609 x4402))
(assert (x609 x2142))
(assert (x609 x4395))
(assert (x609 x2890))
(assert (x609 x1850))
(assert (= (x493 x3447) 0))
(assert (x4289 x4213))
(assert (x609 x1300))
(assert (= x1458 (x4290 (x5032 x1458))))
(assert (= x1927 (=> (and (not (= 0 x1959)) (= x1510 (x4873 (x5032 x192))) (= x192 (x5313 1461501637330902918203684832716283019655932542975 x3074)) (= (< 0 x1510) x4462)) (and (=> (and (= (x689 (x5032 274184521717934524641157099916833587240)) x3238) (not x4462) (= x3238 x861) (= x3546 x2241)) x4241) (=> x4462 x299)))))
(assert (= (x4962 x4690) (ite (= x3425 x4690) x2040 (x2418 x4690))))
(assert (x609 x179))
(assert (x609 x4318))
(assert (x745 x3072))
(assert (x609 x4144))
(assert (= (ite (= x2603 x1883) x613 (x569 x1883)) (x3474 x1883)))
(assert (= (x984 x2865) (ite (= x2865 x185) x3414 (x3007 x2865))))
(assert (= (x4755 157198259) (x5032 157198259)))
(assert (= (or (and x202 x2028) (and x617 x4578)) x3319))
(assert (= (ite (= x4783 x4822) x3430 (x2959 x4783)) (x588 x4783)))
(assert (= (ite (and x4451 x4600) (x4329 x4642) (x550 x4642)) (x3359 x4642)))
(assert (x3829 x4629 x5317))
(assert (= (ite (= x3740 (x4755 0)) x4687 (x212 x3740)) (x42 x3740)))
(assert (= (ite (and (not x5359) x763 x2185) (x808 x3448) (x3946 x3448)) (x5124 x3448)))
(assert (= x1677 (=> (and (= x471 x1997) (= x2805 x3300)) x3345)))
(assert (= (ite (= x1610 x3049) x629 (x889 x3049)) (x2928 x3049)))
(assert (= (x4290 (x5032 x4735)) x4735))
(assert (= (x4751 x2046) (ite (= x2046 x3886) x3146 (x984 x2046))))
(assert (x609 x4598))
(assert (x609 x564))
(assert (= (and (not x397) x1119) x5014))
(assert (= (ite (and x2654 x4838) (x3423 x3448) (ite (and x3717 x657) (x1118 x3448) (x4134 x3448))) (x3314 x3448)))
(assert (x609 x2455))
(assert (x609 x4844))
(assert (x609 x2889))
(assert (x609 x4785))
(assert (x609 x112))
(assert (= (=> (and (= (> 1 x3557) x1990) (= x3557 (x2195 x5121)) (= (x2113 (x5032 x3690) (x4755 209) 0) x5121)) (and (=> (not x1990) x5164) (=> x1990 x117))) x488))
(assert (x609 x5306))
(assert (x609 x463))
(assert (= (ite (= x2605 x319) x5228 (x2041 x319)) (x3982 x319)))
(assert (x609 x956))
(assert (= x3528 (and x4856 x338)))
(assert (x609 x4070))
(assert (x609 x904))
(assert (x609 x1830))
(assert (= x3168 (x4290 (x5032 x3168))))
(assert (x609 x2517))
(assert (= (=> (and (= (= x1446 x2152) x2685) (= x1446 x3968)) (and (=> (not x2685) x1180) (=> x2685 x824))) x5058))
(assert (x609 x481))
(assert (x609 x4205))
(assert (= (x3982 x276) (ite (= x2605 x276) x5228 (x2041 x276))))
(assert (x609 x2965))
(assert (= 1 (x1579 (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x2883))))
(assert (= 274184521717934524641157099916833587202 (x4290 (x5032 274184521717934524641157099916833587202))))
(assert (x745 x547))
(assert (x609 x4368))
(assert (= x5336 (=> (and (= (- (/ x5161 18446744073709551616) (uninterp_frac x5161 18446744073709551616)) x2898) (= (x4233 (x4755 1)) x5161) (= x344 (x1960 (+ x1332 64))) (= (< 0 x3342) x5312) (= (x1960 (+ x2013 64)) x1332) (= (x1960 (+ x1701 x4006)) x1747) (= (x5313 1461501637330902918203684832716283019655932542975 x80) x1149) (= (x2113 (x5032 x1149) (x4755 4) 0) x3358) (= (x1960 (+ 64 x4507)) x5223) (= x4497 (x4233 x3358)) (= x37 (x5313 18446744073709551615 x1747)) (= x3342 (x5313 255 x4497)) (= x1957 (x5313 4294967295 x2898)) (= x1850 (x5313 1461501637330902918203684832716283019655932542975 x4258))) (and (=> (not x5312) x5043) (=> x5312 x2128)))))
(assert (= (ite (= x2489 x280) x2407 (x4184 x2489)) (x3107 x2489)))
(assert (x609 x903))
(assert (x609 x3797))
(assert (x609 x3433))
(assert (= (ite (= x2907 x3049) 0 (x1382 x3049)) (x4561 x3049)))
(assert (= (ite (= x4690 x2907) 0 (x1382 x4690)) (x4561 x4690)))
(assert (x609 x4214))
(assert (= (x1910 x4438) (ite (= x4225 x4438) x4534 (x588 x4438))))
(assert (= (x3413 x1870) (ite (= x1870 x1917) x2499 (x3218 x1870))))
(assert (x609 x2731))
(assert (x609 x2213))
(assert (= (=> (and (= x5306 x118) (= (> x1136 x1057) x436) (= x736 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1057) (= (x2565 x736) x1057) (>= x1057 0) (= x4613 274184521717934524641157099916833587240)) (and (=> (not x436) x2859) (=> x436 x2443))) x460))
(assert (= 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x4290 (x4755 109576784812748834340197573905731726730118698833493337707389013487240318287872))))
(assert (x609 x1724))
(assert (x609 x1094))
(assert (x609 x1646))
(assert (= (x3135 x3074 96) (uninterp_mod (* 79228162514264337593543950336 x3074) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x4579 x3435) (ite (and x2185 x763) (ite (and x763 x1516 x2185) (x1281 x3435) (x1177 x3435)) (x1177 x3435))))
(assert (x609 x663))
(assert (= (=> (and (= x1076 (= x4216 0)) (= x417 (> x1564 0)) (or (and (= (x1960 (+ 96 x4457)) x1770) (not x1076) (= x2877 x4642)) (and (= 96 x4642) x1076)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4446 (x5108 (x5032 274184521717934524641157099916833587240)))) x3285) x3285 (= (x4923 x4642) x1564) (= 0 x4446) (not (= x4448 0)) (= (- (x4304 (x5032 x1279)) x4446) x2145) (or (not x417) (and (= x1001 (x4923 x4642)) (= (x1960 (+ 32 x4642)) x3932) (= x4347 (not x2794)) (> x812 0) (= (ite x4347 1 0) x1548) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1001) (and (= (<= x1001 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1001 32)))) (= x1548 x812) (= (x4923 x3932) x812) (= x2794 (= 0 x812)) x417))) x1333) x1627))
(assert (= (ite (= x1586 x2291) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2608 x1586)) (x1339 x1586)))
(assert (x609 x480))
(assert (= (x1678 x5176) (ite (= x4659 x5176) x1939 (x5006 x5176))))
(assert (= (and (not x4401) x605) x1441))
(assert (x609 x2459))
(assert (x609 x4085))
(assert (= (ite (= x282 x3914) 0 (x4965 x3914)) (x1571 x3914)))
(assert (= x932 (and x3967 x1647)))
(assert (x609 x4244))
(assert (= (x2959 x2488) (ite (= x5071 x2488) x2253 (x3178 x2488))))
(assert (= (ite (and x2185 x763) (ite (and x763 x1516 x2185) (x1814 x3000) (x1845 x3000)) (x1845 x3000)) (x1264 x3000)))
(assert (x609 x360))
(assert (= (ite (= x4783 x3807) x4939 (x2018 x4783)) (x3178 x4783)))
(assert (x609 x895))
(assert (= (ite (and x2185 x763) (ite (and x1516 x2185 x763) (x1281 x5225) (x1177 x5225)) (x1177 x5225)) (x4579 x5225)))
(assert (= 0 (x4727 x2644)))
(assert (x609 x4689))
(assert (x609 x282))
(assert (= (ite (= (x4755 0) x3574) x2630 (x4349 x3574)) (x2707 x3574)))
(assert (x609 x2937))
(assert (x3829 x5112 x1723))
(assert (= (x515 x4105) (ite x2394 (ite x764 (x2058 x4105) (x1264 x4105)) (x3679 x4105))))
(assert (= (x5032 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (=> (and (= x2989 274184521717934524641157099916833587240) (= x5016 (x1960 (+ 4 x541))) (= x3391 (= 274184521717934524641157099916833587240 x3583)) (= x96 x5016) (not (= x2334 0)) (= x1576 (x4062 (- x3973 x541))) (= x2334 (x4873 (x5032 x3583))) (= (x1960 (+ x541 36)) x3973) (= (x5313 1461501637330902918203684832716283019655932542975 x3660) x3583)) (and (=> (and (not x1727) (= x2695 x1576) (= x4098 32) (< x3929 2311529814) (= x2695 36) (= x3929 1889567281) (not (< x2695 4)) (= x2129 (x4873 (x5032 274184521717934524641157099916833587240))) (< 0 x2129) (= 1 x4700) (= (x4062 (- x2695 4)) x1048) (not (< x3929 1166402363)) (= x1265 274184521717934524641157099916833587240) (= x51 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0)) (= x856 (x5362 x51)) (not (= 1858285468 x3929)) (not (= 1845821197 x3929)) (not (= x3929 1722255204)) (= x4488 50942633119752846454219349998365661925608737367104304655302372697894809501696) x3391 (not (< x3929 1722255204)) (= (or (> x1048 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1048) (= true (<= x1048 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1727)) x3582) (=> (not x3391) x1981))) x505))
(assert (= (x4561 x4967) (ite (= x2907 x4967) 0 (x1382 x4967))))
(assert (= x3922 true))
(assert (= 0 (x3729 x788)))
(assert (= (x5167 x4438) (ite (and x3292 (not x2405) x5103) (x3205 x4438) (x4651 x4438))))
(assert (= (x3776 x3740) (ite (= x3740 x1591) x1250 (x2617 x3740))))
(assert (x1139 x4529 x1385 x3198 x803))
(assert (x609 x2224))
(assert (= 1461501637330902918203684832716283019655932542976 (x4290 (x4755 1461501637330902918203684832716283019655932542976))))
(assert (= (and x1147 x4688) x530))
(assert (= (ite (= x3425 x4967) x2040 (x2418 x4967)) (x4962 x4967)))
(assert (x609 x4322))
(assert (= (and (not x5371) x1811) x1495))
(assert (= 0 (x3729 (x1960 (+ 32 x1002)))))
(assert (= (x4561 x3708) (ite (= x2907 x3708) 0 (x1382 x3708))))
(assert (x609 x2870))
(assert (x745 x4213))
(assert (x609 x5390))
(assert (= (x1655 x3436) (ite (= x4252 x3436) 0 (x5379 x3436))))
(assert (x609 x5129))
(assert (x609 x3098))
(assert (x609 x5340))
(assert (x609 x4989))
(assert (= x155 (=> (and (= (x5313 255 x4003) x98) (= (x4233 (x4755 106)) x4003) (= (x1960 (+ x2284 160)) x3940) (= x236 (= x98 0))) (and (=> (not x236) x5043) (=> x236 x3102)))))
(assert (= (ite (= x3177 x4111) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x4111)) (x4977 x4111)))
(assert (x4289 x3084))
(assert (= x4096 (and (not x1366) x4254)))
(assert (= 0 (x4727 x2095)))
(assert (x609 x2399))
(assert (= (ite (and x90 x3318) (ite (and (not x2093) x639 x4082) (x5215 (x5032 x2152)) (x326 (x5032 x2152))) (x326 (x5032 x2152))) (x4718 (x5032 x2152))))
(assert (x609 x3429))
(assert (x609 x4450))
(assert (= (x679 x4330) (ite (= x1715 x4330) x4413 (x1522 x4330))))
(assert (= (x1522 x3477) (ite (= x2724 x3477) x1563 (x631 x3477))))
(assert (x609 x2982))
(assert (= x3871 (=> (and (= x1997 x1130) (= x3300 x4094)) x3345)))
(assert (x4276 x1922 x599))
(assert (= (x4977 x2704) (ite (= x2704 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x2704))))
(assert (x745 x4562))
(assert (= (x679 x4111) (ite (= x4111 x1715) x4413 (x1522 x4111))))
(assert (x609 x294))
(assert (x2749 x4669 x2815 x4286 x1406))
(assert (x609 x3765))
(assert (x609 x1455))
(assert (x609 x2637))
(assert (= (x1796 x4690) (ite (= x2429 x4690) x1282 (x2635 x4690))))
(assert (x609 x1959))
(assert (= (x5124 x1315) (ite (and (not x5359) x763 x2185) (x808 x1315) (x3946 x1315))))
(assert (= (ite (= x1870 x1636) 274184521717934524641157099916833587240 (x2029 x1870)) (x221 x1870)))
(assert (= (x5167 x1315) (ite (and x5103 x3292 (not x2405)) (x3205 x1315) (x4651 x1315))))
(assert (= (x1542 x175) (ite (= x175 x1161) x2324 (x3508 x175))))
(assert (x609 x185))
(assert (= (x3576 (x4755 0)) (ite (= x3865 (x4755 0)) x3793 (x4804 (x4755 0)))))
(assert (= (x889 x788) (ite (= x3553 x788) x2175 (x3588 x788))))
(assert (x609 x4101))
(assert (= x1221 (=> (= (= x2541 274184521717934524641157099916833587206) x2978) (and (=> (not x2978) x1449) (=> (and (= (x4062 (- x3024 4)) x3330) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3781) (= 1889567281 x4723) (= x3024 x3385) x2978 (> x1649 0) (not (< x4723 826074471)) (or (and (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x319) (not x2381) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3265) (= x1431 1) (= x3265 (x560 x319)) (= x1467 32) (= x383 274184521717934524641157099916833587240) (>= x3265 0)) (and (= 0 x1431) (= x2408 x1467) x2381)) (not (> 4 x3024)) (not (= x4723 826074471)) (= (x4873 (x5032 274184521717934524641157099916833587206)) x1649) (= 36 x3024) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3330) (and (> 32 x3330) (= true (<= x3330 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x2381)) x4570)))))
(assert (x609 x2872))
(assert (= (ite (= x788 x211) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x788)) (x4466 x788)))
(assert (= x2958 (and x8 x767)))
(assert (= (or (and (not x2866) x2639) (and x1043 x3123)) x2298))
(assert (= (and x792 x2673) x4082))
(assert (= (x4755 826074471) (x5032 826074471)))
(assert (= (ite (= x1946 x4837) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x4837)) (x3032 x4837)))
(assert (= (and x1754 (not x3391)) x2180))
(assert (= (x2155 x84) (ite (= x84 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x84))))
(assert (= (and x870 (not x2837)) x2933))
(assert (= (and (not x768) x3336) x1836))
(assert (= x361 (and x411 (not x2148))))
(assert (x609 x4475))
(assert (= (x3588 x4690) (ite (= x4745 x4690) x1390 (x1796 x4690))))
(assert (= (ite (= x4944 x1870) 0 (x2646 x1870)) (x156 x1870)))
(assert (x79 x827 x2507 x5206 x5219))
(assert (= (or (and x1836 x4183) (and x4662 x2748)) x2199))
(assert (= x360 (x4290 (x5032 x360))))
(assert (x609 x5151))
(assert (= 0 (x4727 x3592)))
(assert (x609 x2397))
(assert (x609 x2153))
(assert (x745 x2458))
(assert (x609 x4393))
(assert (x609 x2410))
(assert (x609 x1997))
(assert (x609 x3196))
(assert (= (x3135 x1039 96) (uninterp_mod (* 79228162514264337593543950336 x1039) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x609 x2485))
(assert (x3829 x4403 x5352))
(assert (x609 x621))
(assert (x609 x180))
(assert (= (x1264 x2609) (ite (and x763 x2185) (ite (and x763 x1516 x2185) (x1814 x2609) (x1845 x2609)) (x1845 x2609))))
(assert (= (x3729 x1306) 0))
(assert (x609 x1479))
(assert (x745 x5078))
(assert (= x1805 (or (and x893 x3888) (and x3373 x3316) (and x1098 x4875) (and x5217 x3655) (and x4385 x1998) (and x3636 x1756) (and x1031 x356) (and (not x2685) x5073))))
(assert (x609 x566))
(assert (x609 x4147))
(assert (x609 x2292))
(assert (= (x4290 (x4755 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x609 x2165))
(assert (= (x4651 x2644) (ite (= x1115 x2644) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x2644))))
(assert (= (x1681 x276) (ite x2394 (ite x764 (x1298 x276) (x4579 x276)) (x4257 x276))))
(assert (x609 x3243))
(assert (= (x4290 (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x3259 (=> (= x1294 (= x3823 274184521717934524641157099916833587202)) (and (=> (and (= x3578 (x2113 (x5032 x961) (x4755 2) 0)) (not x1815) (= 274184521717934524641157099916833587240 x4027) (not x4757) (= (x477 x2917) x2490) x1294 (not x2833) (not (= 157198259 x3156)) (= x1507 16156842317565293874272834530371880720966471053262404558597773956279093428224) (<= 0 x3363) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2490) (<= x961 1461501637330902918203684832716283019655932542975) (= x508 x5077) (>= x4881 0) (not (= x3156 117300739)) (< 0 x1455) (= x1314 (x2113 (x5032 x961) (x4755 1) 0)) (= x3780 x5077) (= (x4062 (- x2118 4)) x4429) (= x998 274184521717934524641157099916833587240) (= x3190 274184521717934524641157099916833587240) (= (x4062 (- x4881 x5077)) x3189) (= x2490 x4684) (= x961 x1047) (not x1585) (= x4992 32) (= (x4873 (x5032 274184521717934524641157099916833587202)) x1455) (= (> x5077 x3363) x2833) (<= x4881 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x3156 404098525)) (= (x4062 (- x3363 x5077)) x35) (= x508 x686) (= (x2113 (x5032 x961) (x4755 1) 0) x162) (= x4546 x769) (= (x2113 (x5032 x961) (x4755 2) 0) x3854) (not x5320) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3363) (= 100 x2118) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x2917) (not (> 4 x2118)) (= x4757 (> x508 x4881)) (< x3156 826074471) (= x5320 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4429) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4429)) (> 96 x4429)))) (= x3363 (x1264 x1314)) (= x3156 599290589) (= x961 x2285) (= x4881 (x1562 x3703)) (= x2118 x3099) (= (x2113 (x5032 274184521717934524641157099916833587240) x3854 0) x3703) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x3353) (= (x2113 (x5032 274184521717934524641157099916833587240) x3578 0) x3328) (= 274184521717934524641157099916833587240 x5111) (= (> x508 x4881) x2874) (>= x2490 0) (= (> x508 x3363) x1585) (= (>= (+ x2490 x508) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1815) (not x2874) (= 1 x230) (= x2123 (+ x4684 x686)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x508 x2490))) x664) (=> (not x1294) x2469)))))
(assert (= (=> (= x4265 (= 274184521717934524641157099916833587202 x4735)) (and (=> (not x4265) x4692) (=> (and (not x392) (>= 1461501637330902918203684832716283019655932542975 x33) (= (x2113 (x5032 274184521717934524641157099916833587240) x4591 0) x147) (not x1933) (= x4891 274184521717934524641157099916833587240) (= (>= (+ x4609 x4526) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x392) (= (x2113 (x5032 x33) (x4755 2) 0) x4591) (= 599290589 x481) (= x4609 (x3964 x4074)) (= x1100 x3) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x36) (= x5209 x4526) (= x5209 x703) (= x3949 (x1659 x147)) (= (> x4526 x3949) x1534) (= x895 (x4873 (x5032 274184521717934524641157099916833587202))) (= x2445 (x2113 (x5032 x33) (x4755 1) 0)) (= x2802 (x4062 (- x3 4))) (= x829 x4609) (< 0 x895) (= x461 32) (= x438 x33) (not x1711) (= (+ x5068 x829) x4110) x4265 (not (= 117300739 x481)) (< x481 826074471) (= 274184521717934524641157099916833587240 x4907) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1103) (= x33 x3875) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4609 x4526)) (= x4557 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= 100 x3) (= x1711 (< x36 x4526)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4609) (not (< x3 4)) (= x4382 (x4062 (- x36 x5209))) (= x1505 x3758) (= x2047 (or (> x2802 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2802)) (< x2802 96)))) (not x1348) (= x36 (x149 x649)) (= x1776 274184521717934524641157099916833587240) (= x4526 x5068) (= x2658 (x4062 (- x3949 x5209))) (not (= x481 404098525)) (not x2047) (= (x2113 (x5032 x33) (x4755 1) 0) x649) (<= x3949 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3675 1) (= x1758 274184521717934524641157099916833587240) (<= 0 x36) (not (= x481 157198259)) (not x1534) (= (> x5209 x36) x1348) (= x4074 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= x1933 (< x3949 x4526)) (<= 0 x3949) (>= x4609 0)) x2068))) x962))
(assert (x609 x3988))
(assert (= (ite (and x2884 (not x1716) x2906) (x422 x2548) (x4977 x2548)) (x290 x2548)))
(assert (= (ite (= x4225 x1722) x4534 (x588 x1722)) (x1910 x1722)))
(assert (= (ite (and (not x3191) x4625 x1000) (x2895 x2226) (x2155 x2226)) (x3157 x2226)))
(assert (x609 x4924))
(assert (x609 x1402))
(assert (= (ite (= x3807 x970) x4939 (x2018 x970)) (x3178 x970)))
(assert (=> (> (+ 10000 1) x4705) (= (x5032 x4705) (x4755 x4705))))
(assert (= (ite (= x1661 x2907) 0 (x1382 x1661)) (x4561 x1661)))
(assert (x609 x5298))
(assert (x609 x5158))
(assert (= (x42 x3669) (ite (= x3669 (x4755 0)) x4687 (x212 x3669))))
(assert (x79 x890 x184 x1732 x5319))
(assert (x745 x2464))
(assert (x609 x1188))
(assert (= (ite (= x4057 x2226) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x2226)) (x2155 x2226)))
(assert (= (ite (= x3303 x2779) x1093 (x1849 x2779)) (x4221 x2779)))
(assert (x4276 x1135 x548))
(assert (x609 x2718))
(assert (x745 x4847))
(assert (= (ite (= x1661 x3425) x2040 (x2418 x1661)) (x4962 x1661)))
(assert (x609 x789))
(assert (= (x3386 x5271) (ite (and x2716 (not x472) x582) (x4353 x5271) (x1101 x5271))))
(assert (=> (> (+ 10000 1) x2358) (= (x5032 x2358) (x4755 x2358))))
(assert (x609 x5267))
(assert (x609 x2705))
(assert (x609 x4049))
(assert (= (x3589 x2560) (ite (= x4322 x2560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3668 x2560))))
(assert (= (ite (= x1892 (x4755 0)) x4687 (x212 x1892)) (x42 x1892)))
(assert (= (ite (and x4580 x1170 x898 (not x1900) x1226 x2099) (x289 x2750) (ite (and x4580 x1170 x1226 x898 (not x2099)) (x3739 x2750) (ite (and (not x898) x1170 x1226 x4580) (x3107 x2750) (ite (and (not x1170) x4580 x1226) (x4184 x2750) (x4895 x2750))))) (x3532 x2750)))
(assert (x609 x3842))
(assert (= (x2707 (x4755 0)) x2630))
(assert (x609 x5112))
(assert (= x2333 true))
(assert (= 0 (x493 x4837)))
(assert (x3829 x2688 x1902))
(assert (= (ite (= x5151 x4012) 274184521717934524641157099916833587240 (x447 x5151)) (x1329 x5151)))
(assert (= (x4221 x970) (ite (= x970 x3303) x1093 (x1849 x970))))
(assert (= (ite (= x2095 x282) 0 (x4965 x2095)) (x1571 x2095)))
(assert (= x4199 (and x4670 x3716)))
(assert (= (x3107 x3448) (ite (= x280 x3448) x2407 (x4184 x3448))))
(assert (= (ite (and x763 x2185) (x594 x2806) (x1571 x2806)) (x1639 x2806)))
(assert (x4289 x4114))
(assert (x609 x4476))
(assert (x609 x3517))
(assert (= (x3386 x4967) (ite (and (not x472) x582 x2716) (x4353 x4967) (x1101 x4967))))
(assert (x609 x414))
(assert (x609 x934))
(assert (= (ite (and x4449 x4856 (not x3881) x338 x3497 x4563) (x4751 x5176) (ite (and x3497 x338 (not x4563) x4856 x4449) (x984 x5176) (ite (and x4856 x338 x4449 (not x3497)) (x3007 x5176) (ite (and (not x4449) x4856 x338) (x3032 x5176) (x1224 x5176))))) (x1106 x5176)))
(assert (x609 x211))
(assert (x609 x82))
(assert (= (x3178 x3436) (ite (= x3807 x3436) x4939 (x2018 x3436))))
(assert (= (ite (= (x4755 0) x76) x4687 (x212 x76)) (x42 x76)))
(assert (= (x1639 x4783) (ite (and x2185 x763) (x594 x4783) (x1571 x4783))))
(assert (= (x3007 x2046) (ite (= x2046 x1369) x4375 (x3032 x2046))))
(assert (x609 x2763))
(assert (= true x2377))
(assert (x609 x909))
(assert (= (ite (and x763 x2185) (ite (and x763 x1516 x2185) (x1281 x1842) (x1177 x1842)) (x1177 x1842)) (x4579 x1842)))
(assert (= (x4290 (x4755 157198259)) 157198259))
(assert (x609 x577))
(assert (= x2541 (x4290 (x5032 x2541))))
(assert (= (ite (and x4600 x4451) (x4329 x5176) (x550 x5176)) (x3359 x5176)))
(assert (x609 x2198))
(assert (=> (> (+ 10000 1) x1519) (= (x5032 x1519) (x4755 x1519))))
(assert (x609 x2886))
(assert (= (x4727 x3749) 0))
(assert (= (ite (and x3318 x90) (ite (and x4082 x639 (not x2093)) (x5215 (x5032 x5105)) (x326 (x5032 x5105))) (x326 (x5032 x5105))) (x4718 (x5032 x5105))))
(assert (= (ite (= x2750 x2867) x4439 (x2356 x2750)) (x3934 x2750)))
(assert (= (ite (= x5271 x1610) x629 (x889 x5271)) (x2928 x5271)))
(assert (x609 x606))
(assert (x609 x85))
(assert (x609 x951))
(assert (= (x631 x5176) (ite (= x4486 x5176) x654 (x4297 x5176))))
(assert (x609 x960))
(assert (= (x2474 x5176) (ite (and (not x4298) x4600 x4451) (x4816 x5176) (x1840 x5176))))
(assert (x609 x1001))
(assert (x609 x5227))
(assert (x745 x3828))
(assert (= (x1695 (x5032 x4889)) (ite (and x2185 x763) (ite (and x763 x2185 x1516) (x1700 (x5032 x4889)) (x4567 (x5032 x4889))) (x4567 (x5032 x4889)))))
(assert (= (=> (and (= 0 x1283) (= x271 x2786)) x3487) x4612))
(assert (x609 x883))
(assert (x609 x740))
(assert (x609 x3877))
(assert (= x774 (=> (= (= x1146 274184521717934524641157099916833587202) x5339) (and (=> (not x5339) x3868) (=> (and (= 1889567281 x1967) (= 274184521717934524641157099916833587240 x1318) (= x3899 36) (= 1 x3188) (> x577 0) (= (x4873 (x5032 274184521717934524641157099916833587202)) x577) x5339 (= x3000 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (not (> 826074471 x1967)) (= x3899 x3082) (not x2531) (<= x1992 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x1967)) (= x4787 32) (not (> 4 x3899)) (= (x4062 (- x3899 4)) x4660) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4901) (= (or (and (< x4660 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4660) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4660)) x2531) (<= 0 x1992) (= (x3679 x3000) x1992)) x4888)))))
(assert (x609 x2736))
(assert (x609 x5116))
(assert (x609 x597))
(assert (x609 x2291))
(assert (x609 x1157))
(assert (= x5297 (=> (and (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0) x76) (= x655 (> x595 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (= x595 (x3576 x76)) (= x3793 (x4062 (- x4478 1)))) (and (=> x655 x572) (=> (and (= x4131 (x1960 (+ 274184521717934524641157099916833587240 x935))) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3605) x935) (= (x2113 (x5032 x2034) (x4755 208) 0) x835) (not x655) (= 1 x1130) (= x3605 (x881 x835)) (= 0 x4094) (= (x1960 (+ x595 1)) x1140)) x3871)))))
(assert (x609 x3310))
(assert (= (ite (and x809 x763 x2210 x4042 (not x3343) x2185) (x1910 x2750) (ite (and x2185 (not x2210) x809 x763 x4042) (x588 x2750) (ite (and x763 x809 x2185 (not x4042)) (x2959 x2750) (ite (and (not x809) x763 x2185) (x3178 x2750) (x4220 x2750))))) (x808 x2750)))
(assert (x745 x1656))
(assert (= (ite (= x5121 x4536) x3039 (x2195 x4536)) (x382 x4536)))
(assert (x609 x2819))
(assert (x609 x1993))
(assert (x609 x4872))
(assert (x609 x3060))
(assert (x609 x670))
(assert (x609 x3799))
(assert (= (ite (= x2750 x282) 0 (x4965 x2750)) (x1571 x2750)))
(assert (x609 x3369))
(assert (= (ite (= x2750 x5386) x1036 (x3739 x2750)) (x289 x2750)))
(assert (= (ite (and x763 x2185) (ite (and x763 x2185 x1516) (x1700 (x5032 x1047)) (x4567 (x5032 x1047))) (x4567 (x5032 x1047))) (x1695 (x5032 x1047))))
(assert (x1139 x19 x1502 x234 x3913))
(assert (x609 x4588))
(assert (=> (> (+ 10000 1) x2005) (= (x5032 x2005) (x4755 x2005))))
(assert (= (x267 x1658) (ite (and x90 x3318) (x1837 x1658) (x4561 x1658))))
(assert (= (ite (and x4600 x4451) (ite (and x4193 x4600 x4451) (x349 (x5032 x1279)) (x3349 (x5032 x1279))) (x3349 (x5032 x1279))) (x4584 (x5032 x1279))))
(assert (= (x984 x4111) (ite (= x4111 x185) x3414 (x3007 x4111))))
(assert (x609 x3584))
(assert (= (x4962 x5208) (ite (= x5208 x3425) x2040 (x2418 x5208))))
(assert (x745 x3660))
(assert (x3641 x3212 x517))
(assert (= (x4299 x4642) (ite (and x3692 (not x1352) x1862) (x425 x4642) (x3379 x4642))))
(assert (= (x382 x1591) (ite (= x5121 x1591) x3039 (x2195 x1591))))
(assert (x745 x905))
(assert (x609 x1696))
(assert (= (x889 x5151) (ite (= x3553 x5151) x2175 (x3588 x5151))))
(assert (= (ite (= x1658 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x1658)) (x2155 x1658)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4290 (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (ite (= x1722 x4128) x3780 (x4036 x1722)) (x3596 x1722)))
(assert (= x1087 (and (not x3796) x5133)))
(assert (x609 x2829))
(assert (=> (< (- x4019 1) 10000) (= (x4755 x4019) (x5032 x4019))))
(assert (x609 x858))
(assert (x4661 x1851 x2096))
(assert (= (x3673 x3708) (ite (= x1255 x3708) x4340 (x1886 x3708))))
(assert (x609 x4540))
(assert (= x63 (=> (and (= (= x3462 0) x4589) (= x4885 (ite (not x4589) 1 0)) (= x4256 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3462))) (= x465 (= 0 x2109)) (= (ite (< x4256 x1046) 1 0) x1363) (= x3462 (uninterp_mod (* x3010 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2109 (x5313 x4885 x1363))) (and (=> x465 x206) (=> (not x465) x5043)))))
(assert (= (x290 x743) (ite (and x2906 x2884 (not x1716)) (x422 x743) (x4977 x743))))
(assert (x609 x3949))
(assert (= 0 (x4727 x2488)))
(assert (= (ite (= x1255 x4507) x4340 (x1886 x4507)) (x3673 x4507)))
(assert (x609 x2121))
(assert (= (x1639 x4438) (ite (and x2185 x763) (x594 x4438) (x1571 x4438))))
(assert (x609 x3363))
(assert (x609 x2821))
(assert (= (ite (and x2185 x763) (ite (and x2185 x763 x1516) (x1814 x4105) (x1845 x4105)) (x1845 x4105)) (x1264 x4105)))
(assert (= (x1796 x1618) (ite (= x1618 x2429) x1282 (x2635 x1618))))
(assert (= x2125 (=> (= (> x5138 0) x608) (and (=> x608 x2723) (=> (not x608) x5043)))))
(assert (x609 x3424))
(assert (x609 x3256))
(assert (= (ite (= x1086 x1583) x351 (x3107 x1583)) (x3739 x1583)))
(assert (x609 x727))
(assert (x609 x4397))
(assert (x609 x3788))
(assert (= (ite (and x2906 (not x1716) x2884) (x422 x3932) (x4977 x3932)) (x290 x3932)))
(assert (x609 x3483))
(assert (x609 x5079))
(assert (x609 x730))
(assert (= (=> (and (= 599290589 x5091) (= x5004 x3622) (not (= x5091 455944412)) (= x4711 x852) (> 1166402363 x5091) (not (> 455944412 x5091)) (< x5091 2311529814) (= x2949 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4736) true) (< x4736 96)) (> x4736 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 4 x3622)) (= 100 x3622) (= x4736 (x4062 (- x3622 4))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x148) (= x3690 x606) (< 0 x4753) (not (= 511946350 x5091)) (= (x4873 (x5032 274184521717934524641157099916833587240)) x4753)) (and (=> (not x2949) x4819) (=> x2949 x117))) x2332))
(assert (x609 x1482))
(assert (= (ite (= x1115 x4832) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x4832)) (x4651 x4832)))
(assert (= x356 (and x2685 x5073)))
(assert (= (and x2388 x5312) x3676))
(assert (x609 x2304))
(assert (= (x4561 x5271) (ite (= x5271 x2907) 0 (x1382 x5271))))
(assert (x2749 x2943 x4510 x2190 x794))
(assert (x609 x1537))
(assert (=> (< (- x3074 1) 10000) (= (x4755 x3074) (x5032 x3074))))
(assert (x609 x2734))
(assert (= (ite (= x2806 x5386) x1036 (x3739 x2806)) (x289 x2806)))
(assert (= (ite (= x4517 x4252) 0 (x5379 x4517)) (x1655 x4517)))
(assert (x609 x869))
(assert (=> (< (- x669 1) 10000) (= (x4755 x669) (x5032 x669))))
(assert (= (ite (and x2185 x763) (ite (and x2185 x763 x1516) (x1814 x739) (x1845 x739)) (x1845 x739)) (x1264 x739)))
(assert (x745 x1363))
(assert (= (ite (and (not x3191) x1000 x4625) (x2895 x3839) (x2155 x3839)) (x3157 x3839)))
(assert (= (ite (= (x4755 0) x2564) x4687 (x212 x2564)) (x42 x2564)))
(assert (= (x4755 274184521717934524641157099916833587240) (x5032 274184521717934524641157099916833587240)))
(assert (= (- (/ x3027 452312848583266388373324160190187140051835877600158453279131187530910662656) (uninterp_frac x3027 452312848583266388373324160190187140051835877600158453279131187530910662656)) (x5174 x3027 248)))
(assert (x609 x4760))
(assert (= (ite (= x3447 x2724) x1563 (x631 x3447)) (x1522 x3447)))
(assert (x609 x395))
(assert (= (x3673 x1085) (ite (= x1085 x1255) x4340 (x1886 x1085))))
(assert (= (ite (= x4745 x1870) x1390 (x1796 x1870)) (x3588 x1870)))
(assert (x3829 x950 x2581))
(assert (x609 x2032))
(assert (x4289 x852))
(assert (x609 x1186))
(assert (x609 x3086))
(assert (x4289 x444))
(assert (x609 x2129))
(assert (x609 x5200))
(assert (= (ite (= x5165 x2675) x86 (x3835 x2675)) (x3306 x2675)))
(assert (= (ite (= x2046 x4767) 0 (x3760 x2046)) (x3618 x2046)))
(assert (= (x3776 x3669) (ite (= x3669 x1591) x1250 (x2617 x3669))))
(assert (= (x559 x5176) (ite (and (not x1973) x4856 x338) (x1106 x5176) (x2086 x5176))))
(assert (x609 x3833))
(assert (x609 x4263))
(assert (x609 x4837))
(assert (= x4692 true))
(assert (= (ite (and (not x1973) x4856 x338) (x1106 x3932) (x2086 x3932)) (x559 x3932)))
(assert (x1139 x2481 x57 x3961 x410))
(assert (x609 x1525))
(assert (= (ite (and x4067 x1915) (x5335 x3104) (x3181 x3104)) (x529 x3104)))
(assert (= (ite x2394 (ite x764 (x4984 (x5032 x2543)) (x1695 (x5032 x2543))) (x689 (x5032 x2543))) (x2044 (x5032 x2543))))
(assert (= x819 (and x3710 (not x2978))))
(assert (x609 x1239))
(assert (x609 x223))
(assert (= (x5032 404098525) (x4755 404098525)))
(assert (= (ite (= x964 (x4755 0)) x1325 (x3161 x964)) (x1017 x964)))
(assert (= (=> (= (= x4303 274184521717934524641157099916833587206) x243) (and (=> (and (= x2986 x4671) (= (x2113 (x5032 274184521717934524641157099916833587240) x3662 0) x157) (= x3662 (x2113 (x5032 x4019) (x4755 2) 0)) (= (x4555 x4326) x3893) (= x2103 (x1254 x4946)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3893) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2103) (= (x4062 (- x3893 x4671)) x3020) (not (< x3882 4)) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x4946) x243 (= x1246 599290589) (= x4019 x1089) (= x1821 x2065) (= (x2113 (x5032 x4019) (x4755 2) 0) x2111) (= 274184521717934524641157099916833587240 x707) (= x2671 (> x1821 x4675)) (= (>= (+ x1821 x2103) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2326) (= (x2113 (x5032 x4019) (x4755 1) 0) x557) (not (= 157198259 x1246)) (not (= x1246 117300739)) (= 274184521717934524641157099916833587240 x1724) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1821 x2103)) (<= 0 x2103) (= x4928 x4019) (= x660 x2346) (<= 0 x3893) (= x740 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x5266 x157) x4675) (not x2576) (> x917 0) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x3701) (= (x2113 (x5032 274184521717934524641157099916833587240) x2111 0) x3389) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4675) (not x2671) (= 274184521717934524641157099916833587240 x190) (= x4671 x1821) (= 274184521717934524641157099916833587240 x5125) (= (x4062 (- x3882 4)) x616) (= x2103 x2177) (= (< x3893 x4671) x1082) (not x379) (not x1082) (>= 1461501637330902918203684832716283019655932542975 x4019) (= x2780 (+ x2065 x2177)) (not x1524) (= x4326 (x2113 (x5032 x4019) (x4755 1) 0)) (< x1246 826074471) (= x3882 100) (= (x4062 (- x4675 x4671)) x3332) (= (or (> x616 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x616) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x616)))) x2576) (>= x4675 0) (= x917 (x4873 (x5032 274184521717934524641157099916833587206))) (= x4598 x3882) (= x1524 (> x1821 x4675)) (= x2320 1) (not x2326) (= x379 (< x3893 x1821)) (not (= 404098525 x1246))) x2855) (=> (not x243) x3503))) x4058))
(assert (= (x1675 x4833) (ite (and x792 x2673 (not x1416)) (x2427 x4833) (x3346 x4833))))
(assert (x609 x2352))
(assert (x609 x4956))
(assert (x3829 x648 x1687))
(assert (x609 x2462))
(assert (x609 x4222))
(assert (= (=> (and (= (x1960 (+ x1070 64)) x615) (= x2543 (x5313 1461501637330902918203684832716283019655932542975 x5374)) (= (x1960 (+ x2907 164)) x4944) (= (x1960 (+ x2907 4)) x1663) (= (x4873 (x5032 x2543)) x3280) (= (= 0 x3280) x3006) (= (x5313 1461501637330902918203684832716283019655932542975 x4258) x1184) (= (x1960 (+ x1713 64)) x1096) (= (x1960 (+ 64 x1096)) x3060) (= x1663 x1713) (= x1070 (x1960 (+ 32 x1713)))) (and (=> (and (or (and (< x3088 4294967296) (= x1111 (>= (x1423 (x5032 274184521717934524641157099916833587240)) x1434)) x4978 x1111 (= x1434 (x3475 (x5032 274184521717934524641157099916833587240))) x4906 (= x132 (x3475 (x5032 x2543))) (= x4978 (= x132 (x1423 (x5032 x2543))))) (not x4906)) (not x3006) (= (> x1829 0) x4906)) x1412) (=> x3006 x5043))) x4417))
(assert (= (x2195 (x4755 0)) (ite (= x3498 (x4755 0)) x2754 (x42 (x4755 0)))))
(assert (= 0 (x3729 (x1960 (+ 64 x53)))))
(assert (x609 x1701))
(assert (= (x3729 x5331) 0))
(assert (x609 x4783))
(assert (x609 x4675))
(assert (x609 x3044))
(assert (x609 x4352))
(assert (x609 x3953))
(assert (x609 x43))
(assert (x745 x1922))
(assert (x745 x3996))
(assert (x609 x3260))
(assert (x609 x3561))
(assert (x609 x508))
(assert (= (ite (and x2673 x792 (not x1416)) (x2427 x1658) (x3346 x1658)) (x1675 x1658)))
(assert (= x5185 (x4290 (x5032 x5185))))
(assert (x3649 x442 x2383 x3489 x3975))
(assert (= x1540 (and x4423 x4681)))
(assert (= (=> (and (= (= x2057 0) x2515) (or (and x2515 (= 96 x3049) (= x944 x3119)) (and (= (x1960 (+ x2057 63)) x3174) (= x944 x3049) (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3174) x333) (= x2721 (x1960 (+ x2827 96))) (= x115 x3119) (not x2515) (= (x1960 (+ x333 x944)) x115)))) x1521) x44))
(assert (= (=> (and (= (x5313 1461501637330902918203684832716283019655932542975 x4213) x3860) (= x3860 x1475) (not x1081) (= x1081 (not (= 0 x3550))) (or (and (not x4600) (= 1 x2313) (= x3619 x541)) (and (= (x5313 1461501637330902918203684832716283019655932542975 x4213) x4108) (= x4298 (< x654 x1864)) (= x3619 x2548) (= (x5313 1461501637330902918203684832716283019655932542975 x4213) x2005) (= (= 9518847204935358166548570266051330015907116135037852959641967396525866745856 x4927) x4408) (= x5260 (x1960 (+ 36 x487))) (= x654 (x4297 x487)) (= x4762 (x1960 (+ 32 x487))) (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x827) x1263) (not (= 0 x813)) x4600 (not (or (and (> 32 x2826) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2826))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2826))) (= (x1960 (+ x4657 64)) x3247) (= (x1960 (+ x5260 160)) x491) (= x4486 (x1960 (+ 132 x3619))) (= x2875 (> x654 0)) (= x4193 (> x813 0)) (= (x1960 (+ x2826 31)) x827) (= x2313 (ite x4408 1 0)) (= x4927 x4455) (= x3976 (x1960 (+ x3105 64))) (not (= x3340 0)) (= x1567 x541) (or (and x1559 (= (x3349 (x5032 274184521717934524641157099916833587240)) x2921) (< x2826 4294967296) x4193 (= (<= x2921 (x349 (x5032 274184521717934524641157099916833587240))) x1559) (= (= x2485 (x349 (x5032 x2005))) x2139) x2139 (= (x3349 (x5032 x2005)) x2485)) (not x4193)) (or (and x4298 (= x934 (x1960 (+ x491 x654)))) (not x4298)) (= x4927 (x4329 x2548)) (= x5260 x4657) (or (and (= x1563 (x631 x743)) x2875 (= x2724 x491) (= x4192 (> x654 32)) (= x743 x4762) (or (and (= x3477 (x1960 (+ x487 64))) (= (> x654 64) x4360) x4192 (or (and (not x4360) (= 64 x1864)) (and (= (x1960 (+ x487 96)) x169) (= (> x654 96) x1887) (or (and (= (x1960 (+ x4486 128)) x467) (= x3011 (x4618 x5173)) (not x5304) (= 128 x1864) x1887 (= (> x654 128) x5304) (= (x1960 (+ x487 128)) x5173)) (and (not x1887) (= 96 x1864))) (= x1755 (x679 x169)) (= x4788 (x1960 (+ x4486 96))) x4360)) (= (x1522 x3477) x4413) (= (x1960 (+ x4486 64)) x1715)) (and (= x1864 32) (not x4192)))) (and (not x2875) (= 0 x1864))) (= x1567 (x1960 (+ x3619 x1263))) (= (x5313 115792089210356248756420345214020892766250353992003419616917011526809519390720 x4927) x4455) (= (x4873 (x5032 x2005)) x3340) (= x3105 (x1960 (+ 32 x4657))))) (= (x2366 x5039) x1890) (= (x2366 (x4755 0)) x4719) (= x3619 (x1960 (+ 32 x487))) (not (> 1 x4719)) (= x5273 (x1960 (+ x3987 x1475))) (= x3256 0) (= x3872 (x1960 (+ x1890 1))) (= (x2113 (x5032 x4516) (x4755 208) 0) x990) (not (= x607 0)) (= (x5313 1461501637330902918203684832716283019655932542975 x4213) x4956) (= (x2113 (x5032 x4114) (x4755 209) 0) x5039) (= (x5313 1461501637330902918203684832716283019655932542975 x4213) x607) (= x3067 0) (= (x5313 1461501637330902918203684832716283019655932542975 x1793) x3550) (= x5015 (x1702 x4813)) (= (x2366 x990) x1793) (= x4114 (x5313 1461501637330902918203684832716283019655932542975 x4213)) (= x3987 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x5015)) (= x4516 (x4062 (- x4719 1))) (= (x4873 (x5032 x4956)) x3412) (not (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1890)) (= (x2113 (x5032 x4516) (x4755 208) 0) x4813) (= x4600 (< 0 x3412)) (= 0 x4610)) x2629) x1856))
(assert (x609 x3762))
(assert (= (ite (and x1915 x4067) (x5335 x4642) (x3181 x4642)) (x529 x4642)))
(assert (= x2128 (=> (and (= (x2113 (x5032 x4380) (x4755 3) 0) x1518) (= (= x4795 0) x2627) (= x4795 (x5313 255 x2821)) (= (x5313 1461501637330902918203684832716283019655932542975 x4258) x4380) (= (x4233 x811) x2821) (= x811 (x2113 (x5032 x1367) x1518 0))) (and (=> (not x2627) x5043) (=> x2627 x522)))))
(assert (x609 x86))
(assert (= (and x1192 x4031) x1754))
(assert (= (ite (= x1115 x2488) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x2488)) (x4651 x2488)))
(assert (x609 x325))
(assert (x609 x304))
(assert (x609 x607))
(assert (= (x1675 x1661) (ite (and (not x1416) x2673 x792) (x2427 x1661) (x3346 x1661))))
(assert (x609 x4885))
(assert (x609 x4932))
(assert (= (x4290 (x5032 x33)) x33))
(assert (= (x4718 (x5032 274184521717934524641157099916833587240)) (ite (and x3318 x90) (ite (and (not x2093) x639 x4082) (x5215 (x5032 274184521717934524641157099916833587240)) (x326 (x5032 274184521717934524641157099916833587240))) (x326 (x5032 274184521717934524641157099916833587240)))))
(assert (x609 x1050))
(assert (= (and x3591 x874) x370))
(assert (= (ite (= x3849 x4642) x653 (x3939 x4642)) (x5006 x4642)))
(assert (x609 x5211))
(assert (= (x493 (x1960 (+ x4780 32))) 0))
(assert (x609 x3761))
(assert (= (ite (= x4745 x1537) x1390 (x1796 x1537)) (x3588 x1537)))
(assert (= (ite (= x4996 x1591) x1250 (x2617 x4996)) (x3776 x4996)))
(assert (x1139 x2552 x1714 x50 x5399))
(assert (= (ite (and x582 (not x472) x2716) (x4353 x2560) (x1101 x2560)) (x3386 x2560)))
(assert (x609 x2225))
(assert (x3829 x4213 x4023))
(assert (= x1204 (=> (and (not (= x1498 0)) (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4689) x2198) (= x282 (x1960 (+ x2198 x2992))) (= x2900 (x5167 x4214)) (= (x1960 (+ 31 x5375)) x4689) (= (= 0 x2900) x1517) (= x4214 x2992) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5375) true) (< x5375 32)) (> x5375 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and (not (= 0 x2550)) (= x1692 (x1960 (+ x822 64))) (or (not x2728) (and (= (= x2072 (x3817 (x5032 x3610))) x4808) (> 4294967296 x4118) (= x2455 (x2904 (x5032 274184521717934524641157099916833587240))) x4808 x3600 (= (x2904 (x5032 x3610)) x2072) (= x3600 (>= (x3817 (x5032 274184521717934524641157099916833587240)) x2455)) x2728)) (= x822 (x1960 (+ x3384 64))) (not x1517) (= (x5313 1461501637330902918203684832716283019655932542975 x2897) x3771) (= (x1960 (+ 164 x282)) x4252) (= x3610 (x5313 1461501637330902918203684832716283019655932542975 x1039)) (not (= x1916 0)) (= (< 0 x1916) x2728) (= x128 x3384) (= x5087 (x1960 (+ 32 x3384))) (= x128 (x1960 (+ 4 x282))) (= x240 (x1960 (+ 64 x5087))) (= (x4873 (x5032 x3610)) x2550)) x3459) (=> x1517 x2701)))))
(assert (= (x5032 2650021976) (x4755 2650021976)))
(assert (= x4770 (=> (= x3025 (> x5282 x4316)) (and (=> x3025 x2657) (=> (and (= 1 x4955) (not x3025) (= (x4062 (- x4316 x5282)) x4418) (= x131 x501) (= 32 x2829) (= 274184521717934524641157099916833587240 x473)) x3165)))))
(assert (= 0 (x4284 (- x788 x2721))))
(assert (= x2698 (and x1274 (not x5149))))
(assert (x609 x2550))
(assert (x609 x892))
(assert (= (=> (and (= x3941 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4029)) (= (x1960 (+ x61 x3941)) x2534) (= (x1960 (+ x5354 31)) x4029) (= x3800 (or (> x5354 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x5354 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5354)))))) (and (=> (and (not x3800) (= x2426 x1859) (= x1859 (x1275 x2527)) (= x61 x2527) (= x2534 x721)) x1767) (=> x3800 x5043))) x940))
(assert (= (or x3230 (and x3530 (not x3623))) x1932))
(assert (= (=> (and (= x826 x5314) x1044 (= (< 0 x826) x4560) (not x2823) (<= x4483 1461501637330902918203684832716283019655932542975) (not x2364) (or x4560 x2518) (= x4483 x826) (= x1208 x1388) (<= x1208 1461501637330902918203684832716283019655932542975) (= (x1731 (x5032 x826)) x574) (<= 0 x1208) (= x1995 x2823) (= x1044 (not (= x4500 x5314))) (= (not x1995) x7) (= x4500 x4213) (= (> x570 x574) x2405) (= x2518 (= x826 0)) (< x826 1461501637330902918203684832716283019655932542976) (<= 0 x4483)) (and (=> (and (= x3579 true) (= x1236 false) x2405) x4109) (=> (and (not (= 2311529814 x5230)) (= x4835 (x5313 18446744073709551615 x5233)) (= (x1960 (+ x2425 64)) x4771) (= (x2530 x1556) x3145) (= (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4880) x878) (= x2496 x5290) (= x903 x160) (= x265 (x2530 x2808)) (= (= x1789 65) x790) (= x3408 (x1960 (+ x2259 40))) (= x4634 x4859) (not (< 18446744073709551615 x1536)) (= x5053 x2897) (= (x2113 (x5032 x2897) (x4755 3) 0) x4702) (= x4224 (x1960 (+ 128 x4663))) (= x4178 x4033) (= x4157 (x5313 4294967295 x4389)) (= (x1960 (+ x4663 160)) x2779) x1004 (not (or (> x1599 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 288 x1599) (= (<= x1599 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x2532 (x4755 0)) x5185) (= x938 x3806) (= x4190 (x3215 x2323)) (= x4839 (x1960 (+ x4133 x1575))) (= (x2994 x527) x4529) (= (- (/ x5093 5192296858534827628530496329220096) (uninterp_frac x5093 5192296858534827628530496329220096)) x2159) (= x4224 x4359) (= x4317 (x1960 (+ x3152 x4634))) (= x4761 (x5313 255 x1135)) (= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x656) x4070) (= x832 (- (x1731 (x5032 x826)) x570)) (= (x1960 (+ 64 x2769)) x2765) (= x3018 (x4062 (- x4806 32))) (= x5154 (uninterp_mod (* 1461501637330902918203684832716283019655932542976 x1839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1945 (ite x936 1 0)) (= x3992 (x1960 (+ 40 x5200))) (= x4548 (x5313 18446744073709551615 x2297)) (= x5200 (x1960 (+ 64 x2765))) (= x1905 x4756) (= x5103 (> x4206 0)) (not (> x3994 x1931)) (= x3162 (* x3269 x4686)) (= x971 0) (= x2011 (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x4669)) (= (x496 x527) x4443) (or (and (= x1498 x4206) (not x5103)) (and (> 4294967296 x5375) (= 1 x1498) x5103)) (= (x3135 x3074 96) x2075) (= (x1960 (+ x108 (uninterp_mod (ite x3728 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2247) (= (ite (< x3159 x4686) 1 0) x1533) (= x1396 (x2530 x4883)) (= x938 (x5313 1461501637330902918203684832716283019655932542975 x2458)) (= x1464 (x3215 x2438)) (= x4783 (x1960 (+ 64 x2779))) (> 3155786881 x5230) (= (x1960 (+ x4883 64)) x1556) (= (x1960 (+ x3992 52)) x3303) (= x656 (x712 x4439 x3269 x4686 x2846 x191 x1344 x2075 x3044 x4100)) (or (and (= x3904 (x4221 192)) x790 (= x320 (x4221 160)) (= (x5174 x3027 248) x3686) (or (and x3783 (= x3171 x2537) (= 3 x2243) (= 0 x5300)) (and (= x1790 (ite (not x2909) (not (= x302 28)) (not x2909))) (= x2909 (= 27 x302)) (not x3783) (or (and (= x2537 x3171) (= x5300 0) (= 4 x2243) x1790) (and (= (x1960 (+ 64 x2191)) x2299) (= x2689 (x5313 1461501637330902918203684832716283019655932542975 x4403)) (= x3685 (x1960 (+ x2537 64))) (= x4754 (x4062 (- x2299 32))) (= (x2700 (x1960 (+ x2299 32))) x1930) (= x2203 (x4062 (- x2299 32))) (= 128 x116) (= (= x2689 0) x4811) (= x2299 x3150) (= x1394 (x2700 (x1960 (+ x2299 64)))) (<= x4527 1461501637330902918203684832716283019655932542975) (= x1338 (x2700 (x1960 (+ 96 x2299)))) (not x1790) (= (x2700 x2299) x3526) (= x4403 (x3650 x2203)) (= (x1960 (+ 64 x3685)) x2955) (= x4527 (x28 x3526 x1930 x1394 x1338)) (or (and (= x3171 x2299) (= x2243 0) (= x4403 x5300) (not x4811)) (and (= x5300 0) (= x3171 x2299) x4811 (= 1 x2243))) (= x4231 (x1960 (+ x2299 64))))))) (= (x4221 224) x3027) (= x302 (x5313 255 x3686)) (= x971 x2243) (= x2992 x3171) (= x5300 x2458) (= x3783 (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x3904))) (and (not x790) (= x4275 (x4221 128)) (or (and (= x1624 (x1960 (+ 27 x4679))) (= (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1656) x3799) (or (and (= x161 (x5313 255 x1624)) (= (ite (not x4668) (not (= 28 (x5313 255 x1624))) (not x4668)) x5231) (= x4668 (= x161 27)) (or (and (= x3100 4) (= x2477 0) (= x3788 x2537) x5231) (and (= (x4062 (- x698 32)) x3749) (= x698 (x1960 (+ x2191 64))) (= x3387 (x4162 (x1960 (+ x698 64)))) (= 128 x2818) (= x45 (x4162 (x1960 (+ 96 x698)))) (= (x4162 (x1960 (+ 32 x698))) x1558) (= x3943 (x5313 255 x1624)) (= (x1960 (+ x195 64)) x4261) (= x3277 (x1960 (+ 64 x698))) (or (and (= x3100 1) (= 0 x2477) (= x698 x3788) x1752) (and (= x3100 0) (not x1752) (= x2477 x4203) (= x698 x3788))) (= (x28 x4450 x1558 x3387 x45) x4177) (= (= 0 x2641) x1752) (= (x4162 x698) x4450) (= x3283 x698) (= x195 (x1960 (+ 64 x2537))) (>= 1461501637330902918203684832716283019655932542975 x4177) (= x5265 (x4062 (- x698 32))) (= x2641 (x5313 1461501637330902918203684832716283019655932542975 x4203)) (= (x3160 x3749) x4203) (not x5231))) (not x2003)) (and (= x3788 x2537) x2003 (= x2477 0) (= 3 x3100))) (= x971 x3100) (= (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x3799) x2003) (= x2992 x3788) (not (> x4679 115792089237316195423570985008687907853269984665640564039457584007913129639908)) (= (x5174 x1656 255) x4679) (= x2477 x2458) x2158 (= (x4221 160) x325) (= (x4221 192) x1656)) (and (= x2458 0) (= 2 x971) (= x2992 x2537) (not x2158))) (= (= 64 x4275) x2158))) (= x4178 (x2113 (x5032 x5185) (x4755 2) 0)) (= (x2113 (x5032 x191) x3759 0) x2323) (= x3567 (x1960 (+ x160 35))) (= x4318 x4439) (= (x1960 (+ x4663 480)) x4585) (= x2915 (x4870 x5238)) (= x936 (or x2868 x846)) (= x4663 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4223)) (= (x1960 (+ x4783 64)) x2425) (= x415 (x5313 255 x2159)) (= x442 (x2572 x3722)) (= x4989 (uninterp_mod (* 1461501637330902918203684832716283019655932542976 x4285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< (* x4686 x3269) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x4221 128) x1789) (< x5230 2650021976) (= x1093 (x4062 (- x2260 32))) (= x4835 x5242) (= (x4873 (x5032 274184521717934524641157099916833587240)) x4896) (= (x4379 x5238) x4669) (= (+ x849 x5242) x2297) (= (x1960 (+ x1950 1)) x2630) (= (x2530 x4783) x4232) (= x628 (x1960 (+ x1536 x2089))) (> x5268 291) (= x3540 x191) (= (* x415 x4416) x4124) (= x2260 (x4062 (- x2537 x3303))) (= x1222 (ite (not x3757) 1 0)) (= x4883 (x1960 (+ 64 x2808))) (= x683 (- (/ x4124 100) (uninterp_frac x4124 100))) (<= x2496 1461501637330902918203684832716283019655932542975) (= x3696 (x1960 (+ (uninterp_mod (ite x1601 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4477))) (= 0 x1945) (= (x2530 x82) x4198) (= (x1960 (+ x3735 x2745)) x1622) (= (x3215 (x4755 1)) x5233) (= 0 x220) (= true (<= x5268 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x1039 x3683) (= (x3215 x3542) x1135) (= 2335792882 x5230) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x3410 (x5032 274184521717934524641157099916833587240)) x570)) x1004) (= x1874 (x6 x4178 1)) (= x3212 (x2530 x2425)) (= x4999 274184521717934524641157099916833587240) (= x2459 x3735) (= (= 0 x996) x5381) (= x2537 (x1960 (+ 60 x4909))) (= x4894 x3269) (= (x1960 (+ 36 x160)) x2089) (= x4285 (x5313 18446744073709551615 x3212)) (= x2769 (x1960 (+ 64 x4585))) (= (x2530 x2779) x4707) (= (x6 x3862 2) x5238) (>= x2496 0) (= x2438 (x2113 (x5032 x191) x4702 0)) (>= 1461501637330902918203684832716283019655932542975 x1039) (>= 1461501637330902918203684832716283019655932542975 x3074) (= x3994 x849) (< 0 x4896) (= (x1960 (+ x878 63)) x4223) (= (= x3269 0) x3757) (= x4806 (x4062 (- x3303 x4585))) (>= 1461501637330902918203684832716283019655932542975 x2897) (= x3270 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x4529)) (= (x1960 (+ 384 x4224)) x3310) (= x197 128) (= x4686 x1729) (= x3162 x3154) (< 0 x4761) (= x3468 (x1960 (+ x3270 x4756))) (= (> x4224 18446744073709551615) x2868) (= x3269 x4844) (= x180 x4439) (= x1931 x2846) (= x2808 (x1960 (+ x3584 64))) (= (x4062 (- x5268 4)) x1599) (= (x6 x1874 2) x4491) (= (x1960 (+ 64 x4771)) x82) (= x4477 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1464)) (= x1905 (x5313 1461501637330902918203684832716283019655932542975 x1396)) (= (x5313 115792089210356248756420345215482394403581256910207104449633294546465451933695 x2943) x2950) (not x2405) (not (> 2311529814 x5230)) (= (x2530 x3584) x4219) (not (= x1094 0)) (= (x5313 1461501637330902918203684832716283019655932542975 x4198) x2459) (= x3127 (x2530 x4359)) (= (x5313 x1222 x1533) x1379) (= (x1960 (+ 64 x4224)) x3584) (= x3478 x1039) (= x3152 (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2915)) (= x111 x1115) (= x1094 (x4873 (x5032 x5159))) (= x1379 0) (= x3806 x2897) (= x3322 x826) (= (x1960 (+ 64 x1556)) x4543) (not (< 18446744073709551615 x903)) (= (x1960 (+ 64 x3408)) x4909) (= x1839 (x5313 18446744073709551615 x2500)) (= (x3853 x304) x1536) (= x3736 0) (= (x1960 (+ 4 x2992)) x111) (= (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x4443) x1575) (= x4249 (x1960 (+ 64 x3310))) (= x930 (x1960 (+ (uninterp_mod (x3410 (x5032 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x570))) (= (x5313 115792089237316195423570984636004990333889740523700931696805413995650331181055 x442) x108) (= (x1960 (+ 52 x2451)) x2259) (= (x5313 255 x4190) x220) (>= 1461501637330902918203684832716283019655932542975 x2390) (= x1344 (x3135 x1039 96)) (= x3994 x4554) (= (x687 x527) x2943) (= x5290 x2912) (= (- (/ x5243 18446744073709551616) (uninterp_frac x5243 18446744073709551616)) x4389) (= x4416 (uninterp_mod (* x1729 x4844) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1232 x570) (= x19 (x4781 x3722)) (= (x1960 (+ x4989 x2011)) x3149) (< (+ x3994 x4835) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3433 (x1960 (+ x2950 x5154))) (not (< x5268 x628)) (= x5093 (x3215 (x4755 1))) (= (x1960 (+ x3303 60)) x2191) (= (x1960 (+ 64 x3408)) x4166) (>= x2390 0) (= (x5313 255 x1034) x3736) (<= x3322 1461501637330902918203684832716283019655932542975) (not (> x1950 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (= (x2113 (x5032 x2897) (x4755 3) 0) x3759) (= (not x5381) x3728) (= x846 (< x4224 128)) (= x4133 (uninterp_mod (* x1121 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< (* x415 x4416) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3074 x3398) (not (< x5268 4)) (= x345 x2897) (= x3722 (x6 x5238 2)) (= (x1960 (+ x1536 160)) x969) (= (x5313 1461501637330902918203684832716283019655932542975 x265) x4859) (= x1121 (x5313 4294967295 x3145)) (= x5159 (x5313 1461501637330902918203684832716283019655932542975 x1039)) (= x1601 true) (= x1545 x3074) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x19) x2745) (= x4880 (x1960 (+ x1536 31))) (= x1950 (x4349 (x4755 0))) (<= 0 x3322) (= (x2530 x4543) x996) (= x909 x2846) (= (x1960 (+ x160 4)) x304) (= (x1960 (+ x4249 64)) x2451) (= x527 (x6 x4491 2)) (= (x3215 (x4755 1)) x5243) (= (x6 x4178 2) x3862) (= x3044 (x3135 x2897 96)) (= x3098 (x5313 18446744073709551615 x4554)) (= (x2113 (x5032 x3074) (x4755 4) 0) x3542) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)) x3159) (= (x3215 (x4755 106)) x1034) (= x2500 (x2530 x4771)) (or (and (< x3567 x5268) (= (<= x3567 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5268))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5268) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3567)))) x1204))) x1277))
(assert (= (ite (= x1591 x400) x1250 (x2617 x400)) (x3776 x400)))
(assert (= (ite (= x5071 x2644) x2253 (x3178 x2644)) (x2959 x2644)))
(assert (= (x2195 x3669) (ite (= x3669 x3498) x2754 (x42 x3669))))
(assert (x609 x3158))
(assert (= (and x4313 x2199) x3626))
(assert (x609 x122))
(assert (x609 x3857))
(assert (= (ite (= x5071 x953) x2253 (x3178 x953)) (x2959 x953)))
(assert (x3829 x2715 x1185))
(assert (x609 x2464))
(assert (x609 x684))
(assert (= 0 (x3729 x2527)))
(assert (x609 x4546))
(assert (= (ite (= x4690 x1636) 274184521717934524641157099916833587240 (x2029 x4690)) (x221 x4690)))
(assert (= (x4579 x319) (ite (and x2185 x763) (ite (and x763 x1516 x2185) (x1281 x319) (x1177 x319)) (x1177 x319))))
(assert (=> (> (+ 10000 1) x3517) (= (x5032 x3517) (x4755 x3517))))
(assert (= true x5042))
(assert (x609 x954))
(assert (x3350 x2836 x153 x633 x3995))
(assert (= (x4751 x3447) (ite (= x3447 x3886) x3146 (x984 x3447))))
(assert (x609 x205))
(assert (x609 x3020))
(assert (= (x3157 x5331) (ite (and (not x3191) x1000 x4625) (x2895 x5331) (x2155 x5331))))
(assert (x609 x4336))
(assert (x609 x1135))
(assert (x609 x2346))
(assert (x609 x3024))
(assert (= (x889 x3839) (ite (= x3553 x3839) x2175 (x3588 x3839))))
(assert (x609 x256))
(assert (= (ite (= x3448 x3303) x1093 (x1849 x3448)) (x4221 x3448)))
(assert (= (x3776 x601) (ite (= x601 x1591) x1250 (x2617 x601))))
(assert (x609 x1121))
(assert (= (x2928 x1870) (ite (= x1610 x1870) x629 (x889 x1870))))
(assert (= (=> (= x3762 x4076) x4374) x896))
(assert (x609 x4679))
(assert (x609 x5395))
(assert (x609 x4861))
(assert (= x2487 (=> (and (= x3443 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x828) (and (= (<= x828 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x828 32)))) (= x828 (x4501 x1870))) (and (=> x3443 x5043) (=> (not x3443) x1033)))))
(assert (x609 x3711))
(assert (= (=> (and (= x3797 (x4233 x2403)) (= (x1960 (+ x1019 64)) x2359) (= x2495 (x5313 1461501637330902918203684832716283019655932542975 x80)) (= x2870 (x1960 (+ 60 x1255))) (= x457 (x1960 (+ x1635 64))) (= x1270 (x1960 (+ 52 x1689))) (= (x5313 1461501637330902918203684832716283019655932542975 x4258) x4685) (= x3224 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3797)) (= x791 (x1960 (+ x2359 64))) (= x1689 (x1960 (+ x457 64))) (= (x712 x1806 x2410 x3010 x3953 x1367 x2136 x2048 x2913 x4100) x2883) (= (= x1353 65) x1174) (= (x5313 1461501637330902918203684832716283019655932542975 x5374) x2315) (= x4769 (x1960 (+ (uninterp_mod (ite x5372 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3224))) (= x4149 (x1960 (+ x2293 64))) (= (x4062 (- x168 32)) x4340) (= (x3135 x2495 96) x2048) (= (x5313 1461501637330902918203684832716283019655932542975 x4258) x5107) (= (x3673 128) x1353) (= (x4062 (- x1255 x1019)) x2814) (= (x1960 (+ x1612 52)) x1255) (= (x1960 (+ 384 x4872)) x1635) (= x2027 (x1960 (+ x2293 64))) (= x2293 (x1960 (+ x1270 40))) (= (x1960 (+ 40 x407)) x1612) (= x226 (x4062 (- x2814 32))) (= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x2883) x4566) (= (x1960 (+ 64 x791)) x407) (= (x2113 (x5032 x1367) x348 0) x2403) (= x348 (x2113 (x5032 x3517) (x4755 3) 0)) (= x2975 (x1960 (+ 60 x2027))) (= (x5313 1461501637330902918203684832716283019655932542975 x4258) x3517) (= x2913 (x3135 x4685 96)) (= (x4062 (- x2975 x1255)) x168) (= x5372 true) (= x2136 (x3135 x2315 96))) (and (=> (and (= (x5313 255 x3613) x3707) x1174 (= x4433 (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x3890)) (= x1198 x977) (= x3790 x5277) (= x3890 (x3673 192)) (= x2354 (x3673 160)) (or (and x4433 (= 3 x977) (= 0 x2711) (= x5277 x2975)) (and (= x4248 (ite (not x5113) (not (= 28 x3707)) (not x5113))) (or (and (= (x1960 (+ x2975 64)) x3417) (= x865 (x2193 (x1960 (+ 96 x53)))) (= x122 (x4062 (- x53 32))) (= (x1960 (+ 64 x2870)) x53) (= x3287 (x2193 x53)) (= (x28 x3287 x4765 x3003 x865) x4550) (= x4930 (= 0 x4471)) (= (x2193 (x1960 (+ x53 64))) x3003) (not x4248) (= (x4062 (- x53 32)) x2468) (= (x5313 1461501637330902918203684832716283019655932542975 x4847) x4471) (= x4847 (x4678 x2468)) (= (x2193 (x1960 (+ 32 x53))) x4765) (= x53 x1925) (= 128 x2727) (= x4279 (x1960 (+ 64 x3417))) (or (and (not x4930) (= x5277 x53) (= x4847 x2711) (= x977 0)) (and x4930 (= 0 x2711) (= x977 1) (= x5277 x53))) (= (x1960 (+ x53 64)) x2415) (>= 1461501637330902918203684832716283019655932542975 x4550)) (and (= 0 x2711) (= x977 4) (= x5277 x2975) x4248)) (= (= 27 x3707) x5113) (not x4433))) (= x950 x2711) (= x4412 (x3673 224)) (= (x5174 x4412 248) x3613)) x873) (=> (not x1174) x2699))) x522))
(assert (= x882 (or (and x870 x2837) (and x992 x1020) (and x369 (not x2252)) (and x587 x1202) (and x1907 x114) (and x3910 x706) (and x2933 x3195) (and x5114 x1404))))
(assert (x609 x2669))
(assert (x3641 x1830 x5281))
(assert (x609 x3030))
(assert (= (ite (= x185 x1148) x3414 (x3007 x1148)) (x984 x1148)))
(assert (= (ite (and (not x1716) x2884 x2906) (x422 x2046) (x4977 x2046)) (x290 x2046)))
(assert (x609 x5022))
(assert (x609 x1078))
(assert (x609 x2814))
(assert (= 18446744073709551615 (x4290 (x4755 18446744073709551615))))
(assert (= (or x2020 (and x3654 (not x3025))) x939))
(assert (x609 x1137))
(assert (= (=> (= x3762 0) x896) x1483))
(assert (x609 x2780))
(assert (x609 x3477))
(assert (x609 x1890))
(assert (x609 x56))
(assert (x609 x4200))
(assert (= (ite (and (not x1716) x2884 x2906) (x422 x3447) (x4977 x3447)) (x290 x3447)))
(assert (= (ite (= x5176 x3351) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4710 x5176)) (x3939 x5176)))
(assert (x609 x1539))
(assert (x609 x1934))
(assert (= (x3207 x2560) (ite x4453 (ite x3665 (x3386 x2560) (ite x2813 (x968 x2560) (x1685 x2560))) (x3386 x2560))))
(assert (x609 x3214))
(assert (= (and (not x433) x1084) x1401))
(assert (= (x3673 x2527) (ite (= x2527 x1255) x4340 (x1886 x2527))))
(assert (= (ite (and x2185 (not x5359) x763) (x808 x4832) (x3946 x4832)) (x5124 x4832)))
(assert (= (x1542 x2403) (ite (= x1161 x2403) x2324 (x3508 x2403))))
(assert (x745 x573))
(assert (x609 x541))
(assert (= (=> (and (= x3099 x4117) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3895 (x5032 x3823))) x1260) x2628 x145 (= x2628 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2204)) (= (= 274184521717934524641157099916833587240 x3823) x4838) x1260 (= (<= 0 x2610) x145) (= (x3895 (x5032 x3823)) x3565) (= x2204 (x1695 (x5032 x3823))) (= x2610 (x1695 (x5032 274184521717934524641157099916833587240))) (= (x1695 (x5032 274184521717934524641157099916833587240)) x672)) (and (=> (not x4838) x553) (=> (and (= (> x1705 115792089237316195423570985008687907853269984665640564039457584007913129639934) x4834) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x905) x2100) (not x1948) (= x1868 x4069) (= (x4873 (x5032 274184521717934524641157099916833587240)) x427) x4636 (= x4422 599290589) (= (x1542 x2400) x3587) (= (x4062 (- x752 1)) x4514) x4838 (= x1074 x3168) (= x230 1) (not x914) (= (x1542 x49) x4981) (= (x2113 (x5032 x3168) (x4755 209) 0) x4779) (= 274184521717934524641157099916833587240 x614) (not (< x954 4)) (= x3833 0) (= 100 x954) (= x564 x860) (= x2771 (= x5 274184521717934524641157099916833587240)) (= x1948 (< x752 1)) (= x2031 (x2113 (x5032 x564) (x4755 208) 0)) (= x954 x3099) (or (and x2771 (= (ite x2771 1 0) x1107)) (and (not x2771) x4037 (= (= 274184521717934524641157099916833587240 x2631) x3500) (= x2885 (x2113 (x5032 x564) (x4755 210) 0)) (= (x1542 x175) x2292) (= x4037 (not (= x158 0))) (= x2893 (x1542 x2885)) (= x175 (x2113 (x5032 x564) (x4755 208) 0)) (= x2631 (x5313 1461501637330902918203684832716283019655932542975 x2893)) (= x158 (x5313 1461501637330902918203684832716283019655932542975 x2292)) (or (and (= (x2113 (x5032 274184521717934524641157099916833587240) x3266 0) x1067) (= x3266 (x2113 (x5032 x5) (x4755 211) 0)) (= x3365 (x1542 x1067)) (= x3081 (x5313 255 x3365)) (not x3500) (= x3081 x1107)) (and x3500 (= (ite x3500 1 0) x1107))))) (not (= 511946350 x4422)) (> x427 0) (= (x4062 (- x954 4)) x2446) (= (x2113 (x5032 x564) (x4755 208) 0) x1114) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2763) (= x648 (x1542 x4653)) (not x3813) (not (= 455944412 x4422)) (= (x5313 1461501637330902918203684832716283019655932542975 x648) x4358) (= x3575 (x1960 (+ 274184521717934524641157099916833587240 x2100))) (= (x2113 (x5032 x564) (x4755 208) 0) x2400) (= (x2113 (x5032 x564) (x4755 210) 0) x49) (= 274184521717934524641157099916833587240 x2773) (not x4925) (= x752 (x816 x4779)) (= x1074 x4358) (= x4992 0) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x4981) x1868) (= x3484 (= x4358 0)) (= (= 0 x5) x914) (< 0 x1107) (= x564 x3780) (= (x5313 1461501637330902918203684832716283019655932542975 x3072) x2073) (> 1166402363 x4422) (= (x5313 1461501637330902918203684832716283019655932542975 x3279) x5) (not (< x4422 455944412)) (= x3072 (x816 x2031)) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 209) 0) x4186) (= (x2113 (x5032 x564) (x4755 208) 0) x4653) (= (not (= x235 0)) x4636) (= (= 0 x2073) x3813) (<= x3168 1461501637330902918203684832716283019655932542975) (= x905 (x3518 x685)) (not x3484) (not x4834) (= x4925 (or (> x2446 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x2446) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2446))))) (< x4422 2311529814) (= (x4434 x4186) x1705) (= x3279 (x1542 x1114)) (= (x1960 (+ x1705 1)) x194) (= x235 (x5313 1461501637330902918203684832716283019655932542975 x3587)) (= (x2113 (x5032 x564) (x4755 208) 0) x685) (= x3168 x1047)) x664))) x5148))
(assert (x609 x5260))
(assert (x609 x404))
(assert (x609 x4970))
(assert (x609 x5216))
(assert (x609 x5080))
(assert (= x3102 (=> (and (= x2062 (= 0 x4854)) (= (x1960 (+ x4872 64)) x4833) (= x4461 (x1960 (+ x5310 160))) (= x2096 (ite (> x2562 x5326) 1 0)) (= x4854 (x5313 x1851 x2096)) (= x1019 (x1960 (+ x5310 480))) (= x5326 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410))) (= x1851 (ite (not x3936) 1 0)) (= x3936 (= 0 x2163))) (and (=> (not x2062) x5043) (=> x2062 x4321)))))
(assert (= (x1542 x835) (ite (= x1161 x835) x2324 (x3508 x835))))
(assert (x609 x2363))
(assert (x609 x5105))
(assert (= (x3007 x3447) (ite (= x3447 x1369) x4375 (x3032 x3447))))
(assert (x609 x452))
(assert (=> (> (+ 10000 1) x1657) (= (x5032 x1657) (x4755 x1657))))
(assert (x4289 x3660))
(assert (= (x3314 x2644) (ite (and x2654 x4838) (x3423 x2644) (ite (and x3717 x657) (x1118 x2644) (x4134 x2644)))))
(assert (x609 x1271))
(assert (= (ite (= x1883 x487) 0 (x2852 x1883)) (x550 x1883)))
(assert (x4289 x871))
(assert (x609 x1951))
(assert (x609 x2610))
(assert (x609 x317))
(assert (= (x4804 x2999) (ite (= x601 x2999) x4410 (x3776 x2999))))
(assert (= x3381 (and (not x5385) x4947)))
(assert (= x250 (and x3713 x1401)))
(assert (= x3695 (=> (and (= x2981 (x4724 x3022)) (= x3022 (x2113 (x5032 x216) (x4755 209) 0)) (= x216 (x5313 1461501637330902918203684832716283019655932542975 x4213)) (= x324 0) (= (> x2981 115792089237316195423570985008687907853269984665640564039457584007913129639934) x1346)) (and (=> (not x1346) x2583) (=> x1346 x5043)))))
(assert (x609 x5256))
(assert (= (ite (and x4451 x4600) (x4329 x3775) (x550 x3775)) (x3359 x3775)))
(assert (x609 x3048))
(assert (= (x1655 x2644) (ite (= x2644 x4252) 0 (x5379 x2644))))
(assert (= (x3107 x1586) (ite (= x1586 x280) x2407 (x4184 x1586))))
(assert (= x438 (x4290 (x5032 x438))))
(assert (= (ite (= x1255 128) x4340 (x1886 128)) (x3673 128)))
(assert (x609 x61))
(assert (= (x4290 (x5032 x2785)) x2785))
(assert (= (and (not x1258) x5360) x3789))
(assert (= (ite (= x3303 x4771) x1093 (x1849 x4771)) (x4221 x4771)))
(assert (= (x4977 x2865) (ite (= x2865 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x2865))))
(assert (= (x4290 (x5032 x3225)) x3225))
(assert (x609 x2972))
(assert (x609 x3106))
(assert (x609 x3472))
(assert (x609 x3139))
(assert (x609 x5283))
(assert (= (ite (and x3528 x4577) (x559 x3447) (ite (and x4432 x5210) (x2503 x3447) (x2755 x3447))) (x4202 x3447)))
(assert (= (and x247 x4034) x143))
(assert (x609 x2860))
(assert (= (ite (and x1932 x5003) (x3097 x4783) (x3596 x4783)) (x254 x4783)))
(assert (= (x2707 x2279) (ite (= x2279 (x4755 0)) x2630 (x4349 x2279))))
(assert (= (ite (and (not x503) x2673 x1391 x2651 x4469 x792) (x2928 x5151) (ite (and x1391 x4469 x2673 (not x2651) x792) (x889 x5151) (ite (and (not x1391) x2673 x4469 x792) (x3588 x5151) (ite (and x792 (not x4469) x2673) (x1796 x5151) (x509 x5151))))) (x2427 x5151)))
(assert (= 0 (x4727 (x1960 (+ x2299 64)))))
(assert (= (=> (= x3469 x3281) x1982) x3091))
(assert (= (ite (= x4272 (x4755 0)) x2630 (x4349 x4272)) (x2707 x4272)))
(assert (x609 x2303))
(assert (= (x4221 x4245) (ite (= x4245 x3303) x1093 (x1849 x4245))))
(assert (= (x4290 (x5032 x2652)) x2652))
(assert (x609 x4754))
(assert (= (=> (and (= x3361 x4619) (= (= 0 x3396) x4638) (= (x4873 (x5032 x2152)) x3396) (= x4619 (x1960 (+ x721 4))) (= x2037 (x5313 1461501637330902918203684832716283019655932542975 x80)) (= (x1960 (+ 32 x3361)) x3425)) (and (=> (and (or (and (= (<= x3334 (x746 (x5032 274184521717934524641157099916833587240))) x1771) x1961 (= (x4718 (x5032 274184521717934524641157099916833587240)) x3334) (= (x4718 (x5032 x2152)) x3313) (= (= (x746 (x5032 x2152)) x3313) x611) x611 (< x2287 4294967296) x1771) (not x1961)) (not x4638) (= (< 0 x3779) x1961)) x2932) (=> x4638 x5043))) x1767))
(assert (= (x1542 x2031) (ite (= x2031 x1161) x2324 (x3508 x2031))))
(assert (x609 x842))
(assert (= (ite (and x763 x2185) (x594 x1583) (x1571 x1583)) (x1639 x1583)))
(assert (= (ite (= x3425 x5151) x2040 (x2418 x5151)) (x4962 x5151)))
(assert (x609 x3154))
(assert (= (x515 x2539) (ite x2394 (ite x764 (x2058 x2539) (x1264 x2539)) (x3679 x2539))))
(assert (= (ite (and x763 x2185 (not x5359)) (x808 x953) (x3946 x953)) (x5124 x953)))
(assert (= (ite (= x3778 x1658) x1806 (x4728 x1658)) (x3344 x1658)))
(assert (x609 x1730))
(assert (x609 x4303))
(assert (= x3409 (=> (and (= (x2113 (x5032 x4010) (x4755 208) 0) x4075) (= x3431 (not (= x2860 0))) (= (x4724 x4075) x1629) (= (x5313 1461501637330902918203684832716283019655932542975 x1629) x2860)) (and (=> (not x3431) x3695) (=> x3431 x5043)))))
(assert (= (x2195 x2999) (ite (= x3498 x2999) x2754 (x42 x2999))))
(assert (x609 x1600))
(assert (= x4019 (x4290 (x5032 x4019))))
(assert (=> (> (+ 10000 1) x1257) (= (x4755 x1257) (x5032 x1257))))
(assert (x609 x4569))
(assert (= (x4290 (x4755 115792089237316195423570985007226406215939081747436879206741300988257197096960)) 115792089237316195423570985007226406215939081747436879206741300988257197096960))
(assert (= (ite (= x2644 x280) x2407 (x4184 x2644)) (x3107 x2644)))
(assert (= (=> (and (= (x1960 (+ x3748 x463)) x4654) (= (< x4654 x3748) x893)) (and (=> (not x893) x4786) (=> x893 x1180))) x4194))
(assert (= (x4284 (- x5208 x2721)) 0))
(assert (x609 x2140))
(assert (x609 x4391))
(assert (= x1308 (=> (= (> x1701 x3953) x5385) (and (=> x5385 x5043) (=> (not x5385) x618)))))
(assert (x609 x2686))
(assert (= (uninterp_mod (* 79228162514264337593543950336 x3660) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3135 x3660 96)))
(assert (= x4246 (and x189 (not x931))))
(assert (= (x4727 (x1960 (+ 32 x698))) 0))
(assert (= (=> (and (= x2106 (> x2663 0)) (= (x4873 (x5032 x1307)) x2663) (= (x5313 1461501637330902918203684832716283019655932542975 x80) x1307)) (and (=> (and (= x1268 x2426) (= x61 x721) (= (x4718 (x5032 274184521717934524641157099916833587240)) x1268) (not x2106)) x1767) (=> x2106 x1219))) x765))
(assert (x609 x3780))
(assert (= (ite (and (not x1716) x2884 x2906) (x422 x4642) (x4977 x4642)) (x290 x4642)))
(assert (= (ite (= x4813 x2130) x5273 (x1702 x2130)) (x5362 x2130)))
(assert (x3829 x3510 x364))
(assert (x745 x5211))
(assert (= (x4353 x2560) (ite (and (not x2374) x1680 x582 x2716 x879 x4810) (x534 x2560) (ite (and x4810 x1680 (not x879) x2716 x582) (x1225 x2560) (ite (and x2716 (not x1680) x582 x4810) (x1853 x2560) (ite (and x582 x2716 (not x4810)) (x4466 x2560) (x1160 x2560)))))))
(assert (x79 x1473 x1970 x5140 x315))
(assert (x609 x3892))
(assert (x609 x2378))
(assert (= (ite (= x5351 x3339) 274184521717934524641157099916833587240 (x1125 x5351)) (x343 x5351)))
(assert (= (x1579 (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x656)) 1))
(assert (= (=> (and (= x4827 (> x3674 115792089237316195423570985008687907853269984665640564039457584007913129639908)) (= x4511 (x3673 160)) (= (x5313 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1062) x2803) (= x3674 (x5174 x1062 255)) (= x1062 (x3673 192))) (and (=> (and (or (and (not x2215) (= (ite (not x4440) (not (= 28 (x5313 255 x3522))) (not x4440)) x2317) (= x4440 (= 27 x5026)) (= (x5313 255 x3522) x5026) (or (and (= x4102 0) (= x2975 x5101) (= x3203 4) x2317) (and (>= 1461501637330902918203684832716283019655932542975 x1877) (= x3742 (x1960 (+ x1002 64))) (= (x4062 (- x1002 32)) x2223) (= x2879 (x4935 (x1960 (+ x1002 32)))) (= 128 x4344) (= (x1960 (+ 64 x2718)) x412) (= x3151 (x4935 (x1960 (+ x1002 96)))) (= (x4062 (- x1002 32)) x4370) (= (x28 x1371 x2879 x886 x3151) x1877) (= x2718 (x1960 (+ 64 x2975))) (not x2317) (= x1371 (x4935 x1002)) (= x3473 (= x858 0)) (= x1002 x4587) (= (x5313 1461501637330902918203684832716283019655932542975 x5330) x858) (= (x4935 (x1960 (+ x1002 64))) x886) (= (x1587 x4370) x5330) (= (x1960 (+ 64 x2870)) x1002) (or (and (not x3473) (= x5101 x1002) (= x4102 x5330) (= x3203 0)) (and (= 1 x3203) x3473 (= x1002 x5101) (= x4102 0))) (= (x5313 255 x3522) x2336)))) (and (= 3 x3203) (= x5101 x2975) (= x4102 0) x2215)) (= x4102 x950) (not x4827) (= (x1960 (+ 27 x3674)) x3522) (= x2215 (> x2803 57896044618658097711785492504343953926418782139537452191302581570759080747168)) (= x3203 x1198) (= x3790 x5101)) x873) (=> x4827 x5043))) x2756))
(assert (= (x4208 x2865) (ite (= x5283 x2865) x1386 (x1956 x2865))))
(assert (= (ite (= x3584 x4822) x3430 (x2959 x3584)) (x588 x3584)))
(assert (x609 x2799))
(assert (x609 x3374))
(assert (x609 x4840))
(assert (x609 x971))
(assert (= (ite (= x4813 x555) x5273 (x1702 x555)) (x5362 x555)))
(assert (x609 x2765))
(assert (and (>= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x2883) 10000) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x2883))))
(assert (x609 x5159))
(assert (x609 x4260))
(assert (x609 x3329))
(assert (x609 x4157))
(assert (= (x3618 x2397) (ite (= x4767 x2397) 0 (x3760 x2397))))
(assert (x609 x3599))
(assert (= (x3344 x5151) (ite (= x5151 x3778) x1806 (x4728 x5151))))
(assert (= (x3157 x5271) (ite (and (not x3191) x4625 x1000) (x2895 x5271) (x2155 x5271))))
(assert (= x1325 (x1017 (x4755 0))))
(assert (= (x5032 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x4755 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x609 x3286))
(assert (x609 x2365))
(assert (= (ite (and x2185 x763 (not x5359)) (x808 x4783) (x3946 x4783)) (x5124 x4783)))
(assert (x609 x4159))
(assert (=> (< (- x4303 1) 10000) (= (x4755 x4303) (x5032 x4303))))
(assert (x3829 x2897 x5315))
(assert (x609 x3515))
(assert (= (x3673 x1661) (ite (= x1255 x1661) x4340 (x1886 x1661))))
(assert (x609 x4596))
(assert (= (x4208 x4837) (ite (= x4837 x5283) x1386 (x1956 x4837))))
(assert (x609 x1405))
(assert (x609 x1039))
(assert (= (=> (and (= x5079 x3690) (= x3083 (= x3690 x606))) (and (=> x3083 x107) (=> (not x3083) x117))) x4819))
(assert (= (x679 x5351) (ite (= x1715 x5351) x4413 (x1522 x5351))))
(assert (x609 x4120))
(assert (x3829 x3074 x2634))
(assert (= (x2155 x1870) (ite (= x1870 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x1870))))
(assert (x745 x818))
(assert (= (x3178 x1586) (ite (= x1586 x3807) x4939 (x2018 x1586))))
(assert (= (x493 x3477) 0))
(assert (x609 x4604))
(assert (x609 x4628))
(assert (= (x3181 x5351) (ite (= x408 x5351) x703 (x1395 x5351))))
(assert (x609 x2319))
(assert (= (ite (= x2644 x4128) x3780 (x4036 x2644)) (x3596 x2644)))
(assert (=> (< (- x980 1) 10000) (= (x4755 x980) (x5032 x980))))
(assert (x745 x3613))
(assert (= (x864 x2925) (ite (and x2185 x763) (ite (and x763 x2185 x1516) (x1322 x2925) (x731 x2925)) (x731 x2925))))
(assert (= x338 (and x2903 (not x714))))
(assert (x609 x2123))
(assert (= (ite (= x2885 (x4755 0)) x2630 (x4349 x2885)) (x2707 x2885)))
(assert (x609 x3778))
(assert (x609 x5243))
(assert (x609 x2202))
(assert (x609 x504))
(assert (= (x4208 x3624) (ite (= x5283 x3624) x1386 (x1956 x3624))))
(assert (x609 x2241))
(assert (x609 x2593))
(assert (= x2733 (=> (= x2376 x4076) x4374)))
(assert (x609 x5111))
(assert (x609 x4941))
(assert (= (ite (= x2397 x2724) x1563 (x631 x2397)) (x1522 x2397)))
(assert (= (x4221 (x1960 (+ x698 32))) (ite (= (x1960 (+ x698 32)) x3303) x1093 (x1849 (x1960 (+ 32 x698))))))
(assert (= (ite (and x3528 x4577) (x559 x3932) (ite (and x5210 x4432) (x2503 x3932) (x2755 x3932))) (x4202 x3932)))
(assert (x745 x5015))
(assert (x609 x4607))
(assert (= x3017 (=> (and (= x2362 (x4873 (x5032 x438))) (= x5021 (x1960 (+ 4 x2616))) (= x1974 (x5313 1461501637330902918203684832716283019655932542975 x3660)) (or (and (= (x4584 (x5032 274184521717934524641157099916833587240)) x3415) (= (<= x3415 (x4268 (x5032 274184521717934524641157099916833587240))) x293) (= (x4584 (x5032 x438)) x2224) x4505 (= x4505 (= x2224 (x4268 (x5032 x438)))) x1915 x293 (> 4294967296 x3045)) (not x1915)) (= x1915 (> x1985 0)) (not (= 0 x2362)) (= x5021 x5057) (= x408 (x1960 (+ 32 x5057)))) x3403)))
(assert (x609 x3322))
(assert (x609 x4537))
(assert (= (x5167 x2806) (ite (and (not x2405) x5103 x3292) (x3205 x2806) (x4651 x2806))))
(assert (x745 x1464))
(assert (x745 x1750))
(assert (x609 x4516))
(assert (x609 x1794))
(assert (x609 x2867))
(assert (= (ite (= x5208 x3295) x112 (x3589 x5208)) (x3635 x5208)))
(assert (= (ite (= x4822 x3448) x3430 (x2959 x3448)) (x588 x3448)))
(assert (= (x68 (x5032 274184521717934524641157099916833587240)) (ite (and (not x3897) x2074) (x2272 (x5032 274184521717934524641157099916833587240)) (ite x2298 (ite x4453 (x378 (x5032 274184521717934524641157099916833587240)) (x4718 (x5032 274184521717934524641157099916833587240))) (x4718 (x5032 274184521717934524641157099916833587240))))))
(assert (= x4385 (and x5133 x3796)))
(assert (x609 x4951))
(assert (x609 x2187))
(assert (x609 x1332))
(assert (= (ite (= x3952 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x3952)) (x2155 x3952)))
(assert (x609 x235))
(assert (x609 x977))
(assert (= (x4466 x1870) (ite (= x211 x1870) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x1870))))
(assert (x609 x3880))
(assert (= (ite (and x2185 x763) (x594 x4832) (x1571 x4832)) (x1639 x4832)))
(assert (= x2387 (=> (= x5163 (= 274184521717934524641157099916833587202 x684)) (and (=> (not x5163) x4614) (=> (and (or (and (= x4105 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= 1 x3617) (= 274184521717934524641157099916833587240 x2697) (<= x5296 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5296 0) (= x5296 (x4431 x4105)) (= 32 x5354) (not x784)) (and (= x5354 x1937) x784 (= x3617 0))) (= (x4873 (x5032 274184521717934524641157099916833587202)) x4764) (= x3765 (x4062 (- x4179 4))) (= x784 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3765) (and (> 32 x3765) (= (<= x3765 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) x5163 (= 1889567281 x1838) (> x4764 0) (not (= x1838 826074471)) (= 36 x4179) (= x4179 x1799) (not (< x4179 4)) (not (> 826074471 x1838)) (= x3264 50942633119752846454219349998365661925608737367104304655302372697894809501696)) x1349)))))
(assert (= x1605 (and x1087 x4774)))
(assert (x609 x1783))
(assert (x4289 x2785))
(assert (x609 x295))
(assert (x609 x974))
(assert (= (ite (= x743 x2603) x613 (x569 x743)) (x3474 x743)))
(assert (x609 x1387))
(assert (= (ite (and x582 (not x472) x2716) (x4353 x1661) (x1101 x1661)) (x3386 x1661)))
(assert (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x712 x4439 x3269 x4686 x2846 x191 x1344 x2075 x3044 x4100)) (>= (x712 x4439 x3269 x4686 x2846 x191 x1344 x2075 x3044 x4100) 10000)))
(assert (x609 x1757))
(assert (x609 x812))
(assert (= (x3588 x1658) (ite (= x1658 x4745) x1390 (x1796 x1658))))
(assert (x609 x4383))
(assert (= (ite (= x3054 (x4755 0)) x2630 (x4349 x3054)) (x2707 x3054)))
(assert (= (=> (and (>= x670 0) (= (x2113 (x5032 x1657) (x4755 1) 0) x331) (= x4904 (x4062 (- x2421 x5282))) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x2207) (= (x4062 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5282)) x986) (= x5340 274184521717934524641157099916833587240) (= (x786 x2207) x670) (= (> x670 x986) x737) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x670)) (and (=> x737 x2657) (=> (not x737) x3213))) x4371))
(assert (x609 x4520))
(assert (x609 x4259))
(assert (= (ite (= x2095 x3303) x1093 (x1849 x2095)) (x4221 x2095)))
(assert (x609 x4410))
(assert (x609 x1950))
(assert (= (x493 (x1960 (+ 64 x4780))) 0))
(assert (x609 x3011))
(assert (= (x4290 (x5032 x4010)) x4010))
(assert (= (ite (= x4427 x3795) x4682 (x183 x3795)) (x3305 x3795)))
(assert (x609 x3066))
(assert (=> (< (- x4114 1) 10000) (= (x5032 x4114) (x4755 x4114))))
(assert (= (x4290 (x5032 x1446)) x1446))
(assert (= (ite (and x1170 x2099 x898 x4580 x1226 (not x1900)) (x289 x970) (ite (and (not x2099) x898 x1170 x1226 x4580) (x3739 x970) (ite (and (not x898) x1226 x1170 x4580) (x3107 x970) (ite (and x1226 (not x1170) x4580) (x4184 x970) (x4895 x970))))) (x3532 x970)))
(assert (x609 x4362))
(assert (= (ite (= x4486 x4837) x654 (x4297 x4837)) (x631 x4837)))
(assert (= (x889 x2560) (ite (= x2560 x3553) x2175 (x3588 x2560))))
(assert (x609 x5331))
(assert (x609 x273))
(assert (= (ite (and x3318 x90) (x1837 x2527) (x4561 x2527)) (x267 x2527)))
(assert (x5318 x1041 x2719))
(assert (= (x4208 x1883) (ite (= x5283 x1883) x1386 (x1956 x1883))))
(assert (x609 x5053))
(assert (= (ite (and x4451 x4600) (ite (and x4193 x4451 x4600) (x3501 x1642) (x4954 x1642)) (x4954 x1642)) (x149 x1642)))
(assert (= (x4290 (x5032 x172)) x172))
(assert (= (ite (= x1609 x487) 0 (x2852 x1609)) (x550 x1609)))
(assert (= (x3934 x3448) (ite (= x3448 x2867) x4439 (x2356 x3448))))
(assert (= (and (not x5163) x3141) x2666))
(assert (x4276 x749 x34))
(assert (x609 x3095))
(assert (x609 x4571))
(assert (=> (> (+ 10000 1) x2762) (= (x4755 x2762) (x5032 x2762))))
(assert (x609 x3406))
(assert (x1898 x1656 x4784))
(assert (x609 x4609))
(assert (= (x42 x4185) (ite (= (x4755 0) x4185) x4687 (x212 x4185))))
(assert (= (x3344 x4833) (ite (= x3778 x4833) x1806 (x4728 x4833))))
(assert (x609 x5136))
(assert (= x3905 (=> (and (= x788 (x1960 (+ x3049 32))) (= (= (ite x2650 1 0) x5139) x2729) (= (not x2275) x2650) (= x5139 (x642 x788)) (= (= 0 x5139) x2275)) (and (=> (not x2729) x5043) (=> x2729 x5128)))))
(assert (= (x4651 x4438) (ite (= x1115 x4438) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x4438))))
(assert (x609 x2495))
(assert (= (x2427 x1870) (ite (and x1391 x2651 x792 (not x503) x4469 x2673) (x2928 x1870) (ite (and x792 (not x2651) x4469 x1391 x2673) (x889 x1870) (ite (and x4469 (not x1391) x792 x2673) (x3588 x1870) (ite (and x792 (not x4469) x2673) (x1796 x1870) (x509 x1870)))))))
(assert (x745 x3374))
(assert (x609 x1689))
(assert (= (ite (= x2397 x4486) x654 (x4297 x2397)) (x631 x2397)))
(assert (= 4294967295 (x4290 (x4755 4294967295))))
(assert (x609 x4136))
(assert (x609 x1353))
(assert (x609 x4694))
(assert (= (ite (= x4252 x2806) 0 (x5379 x2806)) (x1655 x2806)))
(assert (= (x4184 x3436) (ite (= x3436 x2536) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x3436))))
(assert (= (ite (and x4600 x4451) (x4329 x1883) (x550 x1883)) (x3359 x1883)))
(assert (= (x1106 x4111) (ite (and (not x3881) x4449 x4563 x3497 x4856 x338) (x4751 x4111) (ite (and x4856 x338 (not x4563) x4449 x3497) (x984 x4111) (ite (and x4856 (not x3497) x4449 x338) (x3007 x4111) (ite (and x4856 (not x4449) x338) (x3032 x4111) (x1224 x4111)))))))
(assert (x609 x4939))
(assert (= (x4618 x4642) (ite (= x4642 x4788) x1755 (x679 x4642))))
(assert (= (ite (and (not x4298) x4600 x4451) (x4816 x2046) (x1840 x2046)) (x2474 x2046)))
(assert (x609 x2893))
(assert (= (x4290 (x5032 x241)) x241))
(assert (x745 x5119))
(assert (x609 x1922))
(assert (x609 x2746))
(assert (= (x1229 x5137) (ite (and x4600 x4451) (ite (and x4451 x4193 x4600) (x2164 x5137) (x3930 x5137)) (x3930 x5137))))
(assert (x609 x2943))
(assert (= (x550 x3775) (ite (= x487 x3775) 0 (x2852 x3775))))
(assert (x609 x521))
(assert (= (ite (= x1610 x4967) x629 (x889 x4967)) (x2928 x4967)))
(assert (x609 x2223))
(assert (= 0 (x4727 x3448)))
(assert (x609 x4961))
(assert (= (x4755 57896044618658097711785492504343953926418782139537452191302581570759080747168) (x5032 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (= (ite (and x763 x2185) (ite (and x763 x2185 x1516) (x1814 x2207) (x1845 x2207)) (x1845 x2207)) (x1264 x2207)))
(assert (x609 x310))
(assert (x609 x2287))
(assert (x609 x4572))
(assert (= (ite (and x4580 x1226 (not x5307)) (x3532 x2644) (x5334 x2644)) (x3423 x2644)))
(assert (x609 x3583))
(assert (x609 x1626))
(assert (x609 x4413))
(assert (= (x808 x4783) (ite (and x2185 (not x3343) x763 x2210 x4042 x809) (x1910 x4783) (ite (and (not x2210) x763 x2185 x809 x4042) (x588 x4783) (ite (and x763 (not x4042) x2185 x809) (x2959 x4783) (ite (and x2185 (not x809) x763) (x3178 x4783) (x4220 x4783)))))))
(assert (x609 x121))
(assert (= (ite (= x5208 x1255) x4340 (x1886 x5208)) (x3673 x5208)))
(assert (= (ite (= x1255 x4461) x4340 (x1886 x4461)) (x3673 x4461)))
(assert (x609 x5123))
(assert (= (x1106 x2046) (ite (and x3497 x338 x4449 x4563 (not x3881) x4856) (x4751 x2046) (ite (and x338 x3497 x4856 (not x4563) x4449) (x984 x2046) (ite (and x4449 (not x3497) x4856 x338) (x3007 x2046) (ite (and (not x4449) x4856 x338) (x3032 x2046) (x1224 x2046)))))))
(assert (x609 x4554))
(assert (x745 18446744073709551615))
(assert (= (x5167 x3592) (ite (and x5103 x3292 (not x2405)) (x3205 x3592) (x4651 x3592))))
(assert (=> (= (x712 x1806 x2410 x3010 x3953 x1367 x2136 x2048 x2913 x4100) (x712 x613 x494 x1358 x949 x549 x3199 x1299 x789 x4100)) (and (= x549 x1367) (= x3199 x2136) (= x949 x3953) (= x3010 x1358) (= x2410 x494) (= x789 x2913) (= x613 x1806) (= x2048 x1299))))
(assert (x609 x933))
(assert (x609 x2027))
(assert (x609 x4429))
(assert (x609 x1758))
(assert (= (x2707 x838) (ite (= (x4755 0) x838) x2630 (x4349 x838))))
(assert (x609 x3496))
(assert (= (ite (and x2884 (not x1716) x2906) (x422 x3775) (x4977 x3775)) (x290 x3775)))
(assert (= (x3934 x4438) (ite (= x2867 x4438) x4439 (x2356 x4438))))
(assert (x609 x2448))
(assert (= (ite (and x3318 x90) (x1837 x1661) (x4561 x1661)) (x267 x1661)))
(assert (x609 x980))
(assert (x609 x3003))
(assert (x609 x4319))
(assert (= (ite (= x487 x5351) 0 (x2852 x5351)) (x550 x5351)))
(assert (= (ite (= x3775 x3339) 274184521717934524641157099916833587240 (x1125 x3775)) (x343 x3775)))
(assert (x609 x4118))
(assert (= (x4977 x2397) (ite (= x3177 x2397) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x2397))))
(assert (= (x1017 x2844) (ite (= x2844 (x4755 0)) x1325 (x3161 x2844))))
(assert (x3829 x4843 x2662))
(assert (x79 x2887 x2234 x4151 x1472))
(assert (= 0 (x3729 x1002)))
(assert (x4289 x3370))
(assert (x609 x4219))
(assert (x609 x4100))
(assert (= (x2463 x5271) (ite (and x1961 x4853 (not x4638)) (x3043 x5271) (x4962 x5271))))
(assert (x609 x822))
(assert (= (x4651 x4783) (ite (= x1115 x4783) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x4783))))
(assert (= true x1577))
(assert (= (x3618 x5173) (ite (= x4767 x5173) 0 (x3760 x5173))))
(assert (x609 x1666))
(assert (x609 x3929))
(assert (= (or (and (not x5088) x5236) (and x5048 (not x1156))) x5070))
(assert (= (ite (and (not x4638) x4853 x1961) (x3043 x5067) (x4962 x5067)) (x2463 x5067)))
(assert (x4289 x5159))
(assert (= (x3032 x3104) (ite (= x3104 x1946) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x3104))))
(assert (x609 x612))
(assert (x609 x2069))
(assert (= (ite (= x4772 x3498) x2754 (x42 x4772)) (x2195 x4772)))
(assert (x609 x4418))
(assert (= x3702 (and (not x4648) x5005)))
(assert (= (ite (= x806 x788) x3630 (x1225 x788)) (x534 x788)))
(assert (= (ite (= x3177 x3104) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x3104)) (x4977 x3104)))
(assert (x609 x474))
(assert (= (ite (and x4600 x4451) (ite (and x4451 x4193 x4600) (x2164 x927) (x3930 x927)) (x3930 x927)) (x1229 x927)))
(assert (x609 x942))
(assert (= 0 (x3729 x5067)))
(assert (= (ite (= x1715 x2865) x4413 (x1522 x2865)) (x679 x2865)))
(assert (= (ite (and (not x4298) x4600 x4451) (x4816 x1609) (x1840 x1609)) (x2474 x1609)))
(assert (x4289 x1657))
(assert (= (x1372 x736) (ite (= x4428 x736) x205 (x3306 x736))))
(assert (= x3084 (x4290 (x5032 x3084))))
(assert (x609 x19))
(assert (= (x2427 x3597) (ite (and x792 (not x503) x4469 x2673 x2651 x1391) (x2928 x3597) (ite (and x2673 (not x2651) x1391 x792 x4469) (x889 x3597) (ite (and x2673 (not x1391) x792 x4469) (x3588 x3597) (ite (and (not x4469) x792 x2673) (x1796 x3597) (x509 x3597)))))))
(assert (= (x3673 x682) (ite (= x1255 x682) x4340 (x1886 x682))))
(assert (x609 x1299))
(assert (x609 x616))
(assert (= (x1853 x1661) (ite (= x1661 x2892) x239 (x4466 x1661))))
(assert (= (x2707 x4186) (ite (= x4186 (x4755 0)) x2630 (x4349 x4186))))
(assert (= x873 (=> (= x1818 (= 0 x1198)) (and (=> (and (= x1187 (= x1198 1)) (not x1818) (or x1187 (and (= (= x1198 2) x3442) (not x1187) (or x3442 (and (= x3531 (= 3 x1198)) (not x3442)))))) x5043) (=> x1818 x5118)))))
(assert (x609 x1257))
(assert (= (x3618 x3775) (ite (= x4767 x3775) 0 (x3760 x3775))))
(assert (= (x5167 x1722) (ite (and x5103 (not x2405) x3292) (x3205 x1722) (x4651 x1722))))
(assert (= (ite x748 (ite x3421 (x3132 x739) (x3614 x739)) (x416 x739)) (x3835 x739)))
(assert (= (x4221 x82) (ite (= x82 x3303) x1093 (x1849 x82))))
(assert (x609 x651))
(assert (= (x4651 x2806) (ite (= x2806 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x2806))))
(assert (= (x4618 x1609) (ite (= x1609 x4788) x1755 (x679 x1609))))
(assert (x609 x5147))
(assert (x609 x851))
(assert (x4276 x5119 x867))
(assert (x609 x3901))
(assert (x609 x281))
(assert (= 0 (x4727 192)))
(assert (x4289 x33))
(assert (= x489 (=> (and (<= 0 x2983) (= x4789 x2242) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x5225) (= x2983 (x5198 x5225)) (= (< x2983 x1136) x2219) (= x376 274184521717934524641157099916833587240) (<= x2983 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> x2219 x4612) (=> (not x2219) x2178)))))
(assert (x3829 x5392 x3458))
(assert (x609 x4068))
(assert (=> (< (- x3892 1) 10000) (= (x5032 x3892) (x4755 x3892))))
(assert (= (ite (= x3553 x1870) x2175 (x3588 x1870)) (x889 x1870)))
(assert (x609 x3072))
(assert (x609 x2964))
(assert (x609 x1699))
(assert (= (x588 x4517) (ite (= x4517 x4822) x3430 (x2959 x4517))))
(assert (= (x1340 x2865) (ite (= x96 x2865) 274184521717934524641157099916833587240 (x456 x2865))))
(assert (= (ite (and x3318 x90) (x1837 x4773) (x4561 x4773)) (x267 x4773)))
(assert (x609 x5357))
(assert (x609 x2327))
(assert (x609 x4744))
(assert (= (x1484 x4642) (ite (and x4578 x617) (x1453 x4642) (x1038 x4642))))
(assert (= (ite (= x4783 x4744) 274184521717934524641157099916833587240 (x5234 x4783)) (x2396 x4783)))
(assert (= (x4290 (x5032 x5062)) x5062))
(assert (= (ite (= x3104 x185) x3414 (x3007 x3104)) (x984 x3104)))
(assert (= x4704 (x4290 (x5032 x4704))))
(assert (x609 x375))
(assert (x609 x4012))
(assert (= (ite (and x2185 x763 (not x5359)) (x808 x2095) (x3946 x2095)) (x5124 x2095)))
(assert (= (x4208 x4330) (ite (= x5283 x4330) x1386 (x1956 x4330))))
(assert (x609 x4065))
(assert (= (x3359 x5086) (ite (and x4600 x4451) (x4329 x5086) (x550 x5086))))
(assert (= (ite (= x953 x4822) x3430 (x2959 x953)) (x588 x953)))
(assert (x79 x2327 x4351 x123 x5199))
(assert (= (x183 x1842) (ite (and x3318 x90) (ite (and (not x2093) x4082 x639) (x4474 x1842) (x2524 x1842)) (x2524 x1842))))
(assert (= (ite (= x788 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x788)) (x2155 x788)))
(assert (x609 x1928))
(assert (= (x3589 x5271) (ite (= x5271 x4322) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3668 x5271))))
(assert (x609 x3426))
(assert (x745 x474))
(assert (x609 x3993))
(assert (=> (= (x712 x4439 x3269 x4686 x2846 x191 x1344 x2075 x3044 x4100) (x712 x1806 x2410 x3010 x3953 x1367 x2136 x2048 x2913 x4100)) (and (= x4439 x1806) (= x3953 x2846) (= x2048 x2075) (= x1367 x191) (= x3010 x4686) (= x1344 x2136) (= x3044 x2913) (= x3269 x2410))))
(assert (x609 x2898))
(assert (= (ite (= x811 x1161) x2324 (x3508 x811)) (x1542 x811)))
(assert (x609 x3644))
(assert (x609 x3265))
(assert (= (and (not x2093) x4082) x1607))
(assert (= (x550 x5173) (ite (= x5173 x487) 0 (x2852 x5173))))
(assert (x4276 x3101 x2340))
(assert (x609 x1136))
(assert (= x3655 (and (not x893) x3888)))
(assert (x609 x4307))
(assert (x4289 x4889))
(assert (x609 x4165))
(assert (x609 x3436))
(assert (= (and (not x2289) x5170) x2434))
(assert (x609 x3056))
(assert (x609 x1165))
(assert (x79 x251 x4277 x140 x514))
(assert (x609 x3850))
(assert (x609 x1475))
(assert (x609 x578))
(assert (= (ite (and x2185 x763) (x594 x1722) (x1571 x1722)) (x1639 x1722)))
(assert (x4276 x3705 x1365))
(assert (= (ite (and x4600 x4451) (x4329 x3447) (x550 x3447)) (x3359 x3447)))
(assert (x609 x3302))
(assert (x609 x455))
(assert (= (=> (and (= (x4873 (x5032 x561)) x4140) (not (= x1985 0)) (= x561 (x5313 1461501637330902918203684832716283019655932542975 x3660)) (= (< 0 x4140) x3559)) (and (=> x3559 x2161) (=> (and (not x3559) (= (x1407 (x5032 274184521717934524641157099916833587240)) x2522) (= x2141 x2522) (= x2165 x2616)) x785))) x3403))
(assert (= (x290 x2704) (ite (and x2884 x2906 (not x1716)) (x422 x2704) (x4977 x2704))))
(assert (= (x3306 x4105) (ite (= x4105 x5165) x86 (x3835 x4105))))
(assert (= (x1017 x3523) (ite (= (x4755 0) x3523) x1325 (x3161 x3523))))
(assert (= (ite (= x3932 x3849) x653 (x3939 x3932)) (x5006 x3932)))
(assert (= (x3344 x3952) (ite (= x3952 x3778) x1806 (x4728 x3952))))
(assert (x609 x5071))
(assert (= (x4221 (x1960 (+ x2299 64))) (ite (= x3303 (x1960 (+ 64 x2299))) x1093 (x1849 (x1960 (+ x2299 64))))))
(assert (= (x2041 x319) (ite x748 (ite x3421 (x2101 x319) (x3643 x319)) (x4555 x319))))
(assert (= (=> (not (= x2320 0)) x1856) x2855))
(assert (x4289 x3993))
(assert (x3829 x4258 x5096))
(assert (= (x2707 x1272) (ite (= (x4755 0) x1272) x2630 (x4349 x1272))))
(assert (x609 x4149))
(assert (x609 x4991))
(assert (x609 x4507))
(assert (= (x2928 x4690) (ite (= x4690 x1610) x629 (x889 x4690))))
(assert (= (ite (= x2588 x94) x3533 (x3982 x94)) (x1452 x94)))
(assert (= (x2195 x400) (ite (= x3498 x400) x2754 (x42 x400))))
(assert (= (ite (and x4563 x4449 (not x3881) x3497 x338 x4856) (x4751 x3447) (ite (and x3497 x4449 (not x4563) x338 x4856) (x984 x3447) (ite (and x4856 x4449 (not x3497) x338) (x3007 x3447) (ite (and x338 (not x4449) x4856) (x3032 x3447) (x1224 x3447))))) (x1106 x3447)))
(assert (and (>= (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x656) 10000) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1190 11430537079145650693387304458692941425836787954612963690241153482819318579200 x656))))
(assert (x609 x1011))
(assert (x745 x4880))
(assert (x609 x187))
(assert (x745 x1701))
(assert (= x572 (=> (and (= x4094 x626) (= 0 x1130)) x3871)))
(assert (= (x3673 x1870) (ite (= x1255 x1870) x4340 (x1886 x1870))))
(assert (= 0 (x493 x2397)))
(assert (= (=> (and (= x1069 (x5313 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5036)) (not (= x1095 0)) (= x2616 x3775) (= x4028 (x1960 (+ x1069 x2616))) (= x4300 x2141) (= x4028 x2165) (not (or (> x4021 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4021 32) (= (<= x4021 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x4300 (x4538 x3775)) (= x5036 (x1960 (+ x4021 31)))) x785) x174))
(assert (= 0 (x3729 x84)))
(assert (x3829 x5330 x429))
(assert (= (ite x748 (ite x3421 (x3132 x2609) (x3614 x2609)) (x416 x2609)) (x3835 x2609)))
(assert (x609 x3057))
(assert (= (=> (= (< 0 x3066) x767) (and (=> (not x767) x5043) (=> x767 x1026))) x699))
(assert (= (ite (= (x4755 0) x399) x4687 (x212 x399)) (x42 x399)))
(assert (= (ite (and x2185 x763) (ite (and x1516 x763 x2185) (x1281 x4706) (x1177 x4706)) (x1177 x4706)) (x4579 x4706)))
(assert (=> (< (- x2643 1) 10000) (= (x4755 x2643) (x5032 x2643))))
(assert (= x1589 (or (and x2405 x3292) x748)))
(assert (x609 x3932))
(assert (= (ite (= x5121 x3022) x3039 (x2195 x3022)) (x382 x3022)))
(assert (x3829 x3892 x1749))
(assert (x609 x4761))
(assert (= (and x2911 (not x2768)) x4942))
(assert (= (ite (= x1583 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x1583)) (x4651 x1583)))
(assert (= (ite (= x4813 x4480) x5273 (x1702 x4480)) (x5362 x4480)))
(assert (= (x4221 x3436) (ite (= x3303 x3436) x1093 (x1849 x3436))))
(assert (x609 x3630))
(assert (= (x4290 (x4755 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (x609 x4164))
(assert (x4661 x4885 x1363))
(assert (x745 x4865))
(assert (x609 x2902))
(assert (x609 x2824))
(assert (x609 x4927))
(assert (= (ite (= x5283 x4642) x1386 (x1956 x4642)) (x4208 x4642)))
(assert (x609 x4320))
(assert (= (x4290 (x5032 x4310)) x4310))
(assert (x609 x1820))
(assert (= (ite (and (not x3343) x809 x2185 x2210 x4042 x763) (x1910 x2489) (ite (and x4042 x2185 x763 x809 (not x2210)) (x588 x2489) (ite (and (not x4042) x763 x2185 x809) (x2959 x2489) (ite (and x2185 x763 (not x809)) (x3178 x2489) (x4220 x2489))))) (x808 x2489)))
(assert (=> (< (- x564 1) 10000) (= (x4755 x564) (x5032 x564))))
(assert (x609 x2432))
(assert (= x1476 (=> (and (= x1657 x281) (= (= x2152 x1657) x4088)) (and (=> (not x4088) x2657) (=> x4088 x3090)))))
(assert (x609 x2695))
(assert (x745 x3145))
(assert (= (ite (= x282 x3436) 0 (x4965 x3436)) (x1571 x3436)))
(assert (x609 x1610))
(assert (x609 x2075))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x4290 (x4755 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= x1861 (or (and x5396 x3041) (and x436 x2919) (and (not x5322) x1126) (and x1441 x4820) (and x605 x4401) (and x932 x948))))
(assert (= (=> (and (= x4991 (x68 (x5032 274184521717934524641157099916833587240))) (= (and (>= x4991 0) (< x1873 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3251) (= (x68 (x5032 x5256)) x1873) (= x2454 x1032)) (and (=> x3251 x4331) (=> (and (= x1966 0) (not x3251) (= 0 x800)) x2538))) x3274))
(assert (x609 x1235))
(assert (x609 x1817))
(assert (= (ite (= x2489 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x2489)) (x4651 x2489)))
(assert (= (ite (and x3318 x90) (x1837 x4690) (x4561 x4690)) (x267 x4690)))
(assert (x3829 x1899 x3234))
(assert (x609 x3224))
(assert (= (or (and x4265 x5382) (and x3528 x4577) (and x5210 x4432)) x2987))
(assert (= true x3980))
(assert (x609 x4839))
(assert (= (=> (= (= x2358 274184521717934524641157099916833587240) x843) (and (=> (not x843) x3646) (=> x843 x2332))) x4367))
(assert (= (x1542 x1067) (ite (= x1067 x1161) x2324 (x3508 x1067))))
(assert (= (ite (= x3498 x671) x2754 (x42 x671)) (x2195 x671)))
(assert (x609 x3387))
(assert (= (ite (= x5351 x3849) x653 (x3939 x5351)) (x5006 x5351)))
(assert (= (ite x4453 (ite x3665 (x3386 x3049) (ite x2813 (x968 x3049) (x1685 x3049))) (x3386 x3049)) (x3207 x3049)))
(assert (x609 x972))
(assert (= (x3618 x3932) (ite (= x3932 x4767) 0 (x3760 x3932))))
(assert (= (x4353 x3049) (ite (and x2716 x1680 x4810 (not x2374) x582 x879) (x534 x3049) (ite (and x1680 x2716 (not x879) x582 x4810) (x1225 x3049) (ite (and x4810 (not x1680) x2716 x582) (x1853 x3049) (ite (and x582 x2716 (not x4810)) (x4466 x3049) (x1160 x3049)))))))
(assert (= (x4466 x3049) (ite (= x211 x3049) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x3049))))
(assert (x609 x1148))
(assert (x609 x3663))
(assert (= x4900 (=> (and (= x84 x3790) (= (= x310 0) x2977) (= (x3157 x84) x310)) (and (=> x2977 x2590) (=> (not x2977) x4417)))))
(assert (= (x493 x2865) 0))
(assert (x745 x2481))
(assert (x609 x4494))
(assert (= (x3673 x53) (ite (= x53 x1255) x4340 (x1886 x53))))
(assert (= (ite (and x4625 x1000 (not x3191)) (x2895 x3049) (x2155 x3049)) (x3157 x3049)))
(assert (= true x2345))
(assert (= (ite (= x1537 x2907) 0 (x1382 x1537)) (x4561 x1537)))
(assert (= (ite x748 (ite x3421 (x2101 x5225) (x3643 x5225)) (x4555 x5225)) (x2041 x5225)))
(assert (x609 x118))
(assert (x1139 x1958 x1843 x1163 x2526))
(assert (= (ite (and x4360 (not x1887) x2875 x4451 x4600 x4192) (x4618 x3932) (ite (and x4600 (not x4360) x4451 x4192 x2875) (x679 x3932) (ite (and x4451 x4600 x2875 (not x4192)) (x1522 x3932) (ite (and x4451 x4600 (not x2875)) (x631 x3932) (x2091 x3932))))) (x4816 x3932)))
(assert (= (x1542 x76) (ite (= x76 x1161) x2324 (x3508 x76))))
(assert (x3829 x265 x3131))
(assert (x609 x4865))
(assert (= (ite (= x3584 x282) 0 (x4965 x3584)) (x1571 x3584)))
(assert (x609 x4203))
(assert (x609 x226))
(assert (x609 x800))
(assert (= (and x1589 (not x1929)) x3078))
(assert (x609 x2358))
(assert (x745 x1356))
(assert (= (ite (= x5351 x2724) x1563 (x631 x5351)) (x1522 x5351)))
(assert (x609 x4854))
(assert (= (ite (and x763 x2185) (x594 x3436) (x1571 x3436)) (x1639 x3436)))
(assert (= (x4202 x4642) (ite (and x3528 x4577) (x559 x4642) (ite (and x5210 x4432) (x2503 x4642) (x2755 x4642)))))
(assert (= (ite (= x990 (x4755 0)) x1325 (x3161 x990)) (x1017 x990)))
(assert (= (x343 x2046) (ite (= x2046 x3339) 274184521717934524641157099916833587240 (x1125 x2046))))
(assert (= (=> (= (= x4368 274184521717934524641157099916833587202) x987) (and (=> (and (>= x2026 0) (= 274184521717934524641157099916833587240 x3543) (= x17 x4127) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2637) (= x3732 x2395) (>= 1461501637330902918203684832716283019655932542975 x444) (= (> x3732 x2637) x2211) (= x3037 (+ x1697 x913)) (> x2737 0) (not (< x4127 4)) (= x2395 x913) (= (x4171 x5162) x2026) (= (x2113 (x5032 x444) (x4755 1) 0) x3945) (not (= 1889567281 x900)) (= x4204 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2026) (= x2039 (>= (+ x2026 x2395) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x85 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 2835717307 x900) (= x3211 (> x2395 x2637)) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x4802) (= x3954 1) (= x1494 x176) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2026 x2395)) (not (= x900 2514000705)) (= x4506 (x4062 (- x2637 x3732))) (not (< x900 826074471)) (not x2039) (= 32 x3746) (not x3244) (not x3211) (= (x2113 (x5032 x444) (x4755 1) 0) x5162) (= x759 274184521717934524641157099916833587240) (= x3732 x4115) (= x2225 x444) (= x2737 (x4873 (x5032 274184521717934524641157099916833587202))) (= x2026 x1697) (not x2211) (not (= 826074471 x900)) (= x444 x5009) (<= 0 x2637) (= x4127 68) (= x2637 (x515 x4204)) (= (x4062 (- x4127 4)) x733) x987 (= (or (and (> 64 x733) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733)) x3244)) x3879) (=> (not x987) x925))) x4635))
(assert (= (x2707 x601) (ite (= (x4755 0) x601) x2630 (x4349 x601))))
(assert (= (ite (= x4245 x282) 0 (x4965 x4245)) (x1571 x4245)))
(assert (x609 x2791))
(assert (x609 x3754))
(assert (x609 x2721))
(assert (x609 x2779))
(assert (= (ite (= x3807 x2644) x4939 (x2018 x2644)) (x3178 x2644)))
(assert (= x3868 true))
(assert (= x4201 (and (not x4774) x1087)))
(assert true)
(assert (= (ite (= x2603 x169) x613 (x569 x169)) (x3474 x169)))
(assert (x609 x5122))
(assert (= 2311529814 (x4290 (x4755 2311529814))))
(assert (x609 x632))
(assert (x609 x476))
(assert (= (ite x4453 (ite x3665 (x3386 x5271) (ite x2813 (x968 x5271) (x1685 x5271))) (x3386 x5271)) (x3207 x5271)))
(assert (x609 x3875))
(assert (= (ite (and (not x5359) x2185 x763) (x808 x3436) (x3946 x3436)) (x5124 x3436)))
(assert (x609 x1196))
(assert (x609 x1141))
(assert (= (x4816 x5176) (ite (and x4451 x4600 x2875 x4360 x4192 (not x1887)) (x4618 x5176) (ite (and x4600 (not x4360) x4192 x2875 x4451) (x679 x5176) (ite (and (not x4192) x2875 x4451 x4600) (x1522 x5176) (ite (and x4600 (not x2875) x4451) (x631 x5176) (x2091 x5176)))))))
(assert (= x102 (x4290 (x5032 x102))))
(assert (x609 x3557))
(assert (= (ite (= x5071 x4783) x2253 (x3178 x4783)) (x2959 x4783)))
(assert (= (+ 1 (x4290 x4178)) (x4290 (x6 x4178 1))))
(assert (x3829 x2399 x2318))
(assert (= (ite (and x763 x2185) (x594 x1315) (x1571 x1315)) (x1639 x1315)))
(assert (x609 x3534))
(assert (= (ite (= x2468 x1255) x4340 (x1886 x2468)) (x3673 x2468)))
(assert (x609 x2496))
(assert (x3829 x4132 x4592))
(assert (= (x149 x649) (ite (and x4451 x4600) (ite (and x4600 x4451 x4193) (x3501 x649) (x4954 x649)) (x4954 x649))))
(assert (x745 x4195))
(assert (= 0 (x493 x2174)))
(assert (= x451 (and (not x1506) x4583)))
(assert (x609 x1438))
(assert (x4289 x4101))
(assert (=> (> (+ 10000 1) x5105) (= (x5032 x5105) (x4755 x5105))))
(assert (= (x4221 x2806) (ite (= x3303 x2806) x1093 (x1849 x2806))))
(assert (x609 x4979))
(assert (x609 x405))
(assert (x609 x2720))
(assert (= (x3157 x5151) (ite (and x1000 x4625 (not x3191)) (x2895 x5151) (x2155 x5151))))
(assert (= (x1229 x52) (ite (and x4451 x4600) (ite (and x4600 x4193 x4451) (x2164 x52) (x3930 x52)) (x3930 x52))))
(assert (x609 x38))
(assert (x609 x2786))
(assert (x609 x1838))
(assert (x609 x3540))
(assert (= (ite (= x2560 x4745) x1390 (x1796 x2560)) (x3588 x2560)))
(assert (x609 x4660))
(assert (x609 x3018))
(assert (x609 x1510))
(assert (x609 x3398))
(assert (= (x4623 (x5032 x1279)) (ite x1963 (ite x2987 (x2000 (x5032 x1279)) (x4584 (x5032 x1279))) (x1407 (x5032 x1279)))))
(assert (x609 x3610))
(assert (x609 x2940))
(assert (= (and (not x1907) x114) x870))
(assert (x4289 x669))
(assert (x609 x3491))
(assert (x609 x240))
(assert (= (ite (= x2046 x5283) x1386 (x1956 x2046)) (x4208 x2046)))
(assert (= (x2707 x1350) (ite (= (x4755 0) x1350) x2630 (x4349 x1350))))
(assert (=> (< (- x1511 1) 10000) (= (x5032 x1511) (x4755 x1511))))
(assert (x4289 x2005))
(assert (x609 x1354))
(assert (x609 x438))
(assert (= (x559 x4111) (ite (and x4856 x338 (not x1973)) (x1106 x4111) (x2086 x4111))))
(assert (x609 x2414))
(assert (= (x1340 x4330) (ite (= x96 x4330) 274184521717934524641157099916833587240 (x456 x4330))))
(assert (= (x2463 x4690) (ite (and x4853 x1961 (not x4638)) (x3043 x4690) (x4962 x4690))))
(assert (x609 x4764))
(assert (x609 x1356))
(assert (= x2185 x2355))
(assert (x609 x4566))
(assert (x609 x1822))
(assert (= (x5167 x3448) (ite (and x3292 (not x2405) x5103) (x3205 x3448) (x4651 x3448))))
(assert (x609 x2398))
(assert (= (ite (= x406 (x4755 0)) x1325 (x3161 x406)) (x1017 x406)))
(assert (=> (< (- x2897 1) 10000) (= (x4755 x2897) (x5032 x2897))))
(assert (x745 x3365))
(assert (x609 x5332))
(assert (= (ite (= x1161 x2999) x2324 (x3508 x2999)) (x1542 x2999)))
(assert (= (x529 x2046) (ite (and x4067 x1915) (x5335 x2046) (x3181 x2046))))
(assert (x609 x1747))
(assert (x745 x2915))
(assert (= 1166402363 (x4290 (x4755 1166402363))))
(assert (= (x4561 x2907) 0))
(assert (= x4343 true))
(assert (= (x1655 x1722) (ite (= x4252 x1722) 0 (x5379 x1722))))
(assert (x609 x1358))
(assert (= (x4651 x3057) (ite (= x3057 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x3057))))
(assert (= (ite (and x1000 (not x3191) x4625) (x2895 x84) (x2155 x84)) (x3157 x84)))
(assert (x3829 x1284 x755))
(assert (x609 x2858))
(assert (x745 x1851))
(assert (x609 x3390))
(assert (x609 x917))
(assert (= (x5006 x4111) (ite (= x3849 x4111) x653 (x3939 x4111))))
(assert (= (x1264 x5100) (ite (and x763 x2185) (ite (and x1516 x763 x2185) (x1814 x5100) (x1845 x5100)) (x1845 x5100))))
(assert (= x3665 (or x4294 (and x4775 (not x655)))))
(assert (x609 x900))
(assert (x609 x1250))
(assert (x609 x1393))
(assert (= (x3474 x5176) (ite (= x2603 x5176) x613 (x569 x5176))))
(assert (x609 x4642))
(assert (= (x4962 x5067) (ite (= x3425 x5067) x2040 (x2418 x5067))))
(assert (= (x1675 x4967) (ite (and x2673 (not x1416) x792) (x2427 x4967) (x3346 x4967))))
(assert (= (ite (= x4813 x3891) x5273 (x1702 x3891)) (x5362 x3891)))
(assert (x609 x2527))
(assert (x745 x4198))
(assert (= (x4184 x3448) (ite (= x3448 x2536) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x3448))))
(assert (= (x631 x169) (ite (= x4486 x169) x654 (x4297 x169))))
(assert (x609 x1176))
(assert (x609 x5139))
(assert (x609 x2242))
(assert (x609 x303))
(assert (x609 x3612))
(assert (x609 x4723))
(assert (x745 x2552))
(assert (= (ite (= x2644 x282) 0 (x4965 x2644)) (x1571 x2644)))
(assert (x609 x2005))
(assert (= (x4290 (x5032 x1015)) x1015))
(assert (= (or (and x3710 x2978) (and x4911 x2431) (and x819 x309)) x4597))
(assert (= (ite (= x953 x4252) 0 (x5379 x953)) (x1655 x953)))
(assert (x609 x1691))
(assert (= (=> (= x931 (= x4747 274184521717934524641157099916833587206)) (and (=> (and (not x3538) (<= 0 x2824) (= x566 274184521717934524641157099916833587240) (not (= x658 826074471)) (= x2824 (x4579 x3435)) (= x780 x4932) (= x4932 36) (not (< x658 826074471)) x931 (= x3538 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2172)) (< x2172 32)) (> x2172 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2153) (= x2730 (x4873 (x5032 274184521717934524641157099916833587206))) (= x2274 32) (> x2730 0) (not (< x4932 4)) (<= x2824 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3429 1) (= x658 1889567281) (= x3435 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= x2172 (x4062 (- x4932 4)))) x700) (=> (not x931) x1330))) x697))
(assert (x609 x2817))
(assert (x609 x1877))
(assert (x609 x171))
(assert (= (ite (and x4600 x4451) (ite (and x4193 x4451 x4600) (x3501 x3223) (x4954 x3223)) (x4954 x3223)) (x149 x3223)))
(assert (= (ite x748 (ite x3421 (x2101 x5241) (x3643 x5241)) (x4555 x5241)) (x2041 x5241)))
(assert (x609 x4310))
(assert (= (=> (and (= x1626 (x5313 1461501637330902918203684832716283019655932542975 x2922)) (= x1479 x4410) (= x2999 (x2113 (x5032 x2034) (x4755 208) 0)) (= (x5313 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2481) x1479) (= (x2113 (x5032 x2034) (x4755 210) 0) x601) (= 0 x1921) (= (x4804 x2999) x2922) (= x77 (= 0 x1626)) (= x2481 (x3776 x601))) (and (=> x77 x572) (=> (not x77) x1205))) x4504))
(assert (= (x2155 x4773) (ite (= x4773 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x4773))))
(assert (x609 x4113))
(assert (x609 x3688))
(assert (= (ite (= x1161 (x4755 1)) x2324 (x3508 (x4755 1))) (x1542 (x4755 1))))
(assert (= (x4290 (x5032 x4705)) x4705))
(assert (= x3014 (=> (and (= x5105 (x5313 1461501637330902918203684832716283019655932542975 x4258)) (= (< x3536 x1136) x2708) (= (x68 (x5032 274184521717934524641157099916833587240)) x3536)) (and (=> x2708 x5043) (=> (and (or (and (not x5076) (= 0 x5138) (= 0 x2448)) (and x3197 (= x3671 (ite (= x779 0) x1136 0)) (= (- (x5050 (x5032 x5105)) x3671) x4863) (= x4180 (x1960 (+ (uninterp_mod (x4712 (x5032 x5105)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1136))) (= x5138 x779) (= x2448 x4768) (= x3197 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x4712 (x5032 x5105)) x1136))) x5076 x2997 (= x2997 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3671 (x2409 (x5032 274184521717934524641157099916833587240))))) (= (< 0 x779) x1166) (or (not x1166) (and (= (x619 (x5032 x5105)) x2894) x2582 x1183 x1166 (= (<= x4949 (x1206 (x5032 274184521717934524641157099916833587240))) x2582) (> 4294967296 x4768) (= x1183 (= (x1206 (x5032 x5105)) x2894)) (= x4949 (x619 (x5032 274184521717934524641157099916833587240))))) (= (- (x68 (x5032 274184521717934524641157099916833587240)) x1136) x3393))) (not x2708) (= (= x2448 0) x1763) (= (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1136 x807)) (<= x1136 x3311)) x5076) (= x807 (x68 (x5032 x5105))) (= (x68 (x5032 274184521717934524641157099916833587240)) x3311)) x2125)))))
(assert (x609 x2513))
(assert (x4661 x1222 x1533))
(assert (x745 x2922))
(assert (x609 x3784))
(assert (x79 x4223 x3392 x887 x1568))
(assert (x609 x3726))
(assert (x609 x4207))
(assert (x609 x769))
(assert (x609 x2037))
(assert (x609 x1227))
(assert (x3239 x4389 x1435))
(assert (=> (< (- x241 1) 10000) (= (x4755 x241) (x5032 x241))))
(assert (x609 x860))
(assert (x609 x4587))
(assert (x609 x1246))
(assert (x609 x2021))
(assert (x609 x2990))
(assert (= (=> (and (not (> 4 x5166)) (= x1998 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1901) (and (= true (<= x1901 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1901 96)))) (= x2494 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x5166) (= x463 x2040) (= x3046 (x4873 (x5032 274184521717934524641157099916833587206))) (= x1901 (x4062 (- x5166 4))) (not (= 117300739 x1783)) (not (= 404098525 x1783)) (= x1611 x5166) (= x1446 x2152) (> x3046 0) (not (= 157198259 x1783)) (> 826074471 x1783) (= 599290589 x1783)) (and (=> x1998 x1180) (=> (not x1998) x5058))) x2138))
(assert (= (x3724 x276) (ite (= x781 x276) x4654 (x3305 x276))))
(assert (= (ite (= x806 x1870) x3630 (x1225 x1870)) (x534 x1870)))
(assert (= (x1264 x2539) (ite (and x2185 x763) (ite (and x2185 x1516 x763) (x1814 x2539) (x1845 x2539)) (x1845 x2539))))
(assert (= (x4184 x1586) (ite (= x1586 x2536) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x1586))))
(assert (= (ite (= x3303 x4832) x1093 (x1849 x4832)) (x4221 x4832)))
(assert (= x1630 (or (and x3228 (not x4462)) x372)))
(assert (= (x631 x2865) (ite (= x4486 x2865) x654 (x4297 x2865))))
(assert (= (=> (= (= x3920 x1421) x4034) (and (=> (not x4034) x572) (=> x4034 x4504))) x1292))
(assert (= x691 x1084))
(assert (x609 x506))
(assert (= (x3776 (x4755 0)) (ite (= (x4755 0) x1591) x1250 (x2617 (x4755 0)))))
(assert (x609 x2057))
(assert (x609 x813))
(assert (x609 x178))
(assert (x745 x950))
(assert (x609 x3691))
(assert (= (ite (= x3584 x4225) x4534 (x588 x3584)) (x1910 x3584)))
(assert (= (and x567 x3659) x5005))
(assert (= (x5032 115792089237316195423570984636004990333889740523700931696805413995650331181055) (x4755 115792089237316195423570984636004990333889740523700931696805413995650331181055)))
(assert (= (x3532 x3592) (ite (and x1226 x898 x2099 x4580 x1170 (not x1900)) (x289 x3592) (ite (and x4580 x898 x1226 x1170 (not x2099)) (x3739 x3592) (ite (and x1170 x1226 (not x898) x4580) (x3107 x3592) (ite (and x4580 x1226 (not x1170)) (x4184 x3592) (x4895 x3592)))))))
(assert (x609 x1268))
(assert (= (x5174 x4412 248) (- (/ x4412 452312848583266388373324160190187140051835877600158453279131187530910662656) (uninterp_frac x4412 452312848583266388373324160190187140051835877600158453279131187530910662656))))
(assert (x609 x3384))
(assert (= (and x2062 x2300) x2391))
(assert (= (ite (= x3932 x4659) x1939 (x5006 x3932)) (x1678 x3932)))
(assert (= x1124 (=> (and (= x5391 (x4724 (x4755 0))) (= (< x5391 1) x5085)) (and (=> x5085 x5043) (=> (not x5085) x475)))))
(assert (x609 x1855))
(assert (= (x4466 x5208) (ite (= x211 x5208) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x5208))))
(assert (= (x4755 904250603428552709895185118199468575982109441609966099573332780532423983104) (x5032 904250603428552709895185118199468575982109441609966099573332780532423983104)))
(assert (x609 x3821))
(assert (= (x4727 x3436) 0))
(assert (= (ite (and x5025 x2450 (not x2194) x2622 x2838 x1389) (x3413 x5271) (ite (and x5025 x2838 x2450 (not x2622) x1389) (x3218 x5271) (ite (and x2838 (not x5025) x1389 x2450) (x3635 x5271) (ite (and x2838 x2450 (not x1389)) (x3589 x5271) (x3321 x5271))))) (x2952 x5271)))
(assert (x609 x4738))
(assert (x609 x3295))
(assert (x2749 x2626 x3317 x3494 x928))
(assert (=> (< (- x444 1) 10000) (= (x4755 x444) (x5032 x444))))
(assert (= x353 (x4290 (x5032 x353))))
(assert (= (ite (and x1551 x231 x874 x3591 x1552 (not x307)) (x3632 x1586) (ite (and x3591 x1551 x231 (not x1552) x874) (x2862 x1586) (ite (and x3591 (not x1551) x231 x874) (x1466 x1586) (ite (and x3591 (not x231) x874) (x1339 x1586) (x166 x1586))))) (x3002 x1586)))
(assert (= (x1542 x3740) (ite (= x1161 x3740) x2324 (x3508 x3740))))
(assert (= 0 (x4727 x1722)))
(assert (= (ite (= x1870 x4322) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3668 x1870)) (x3589 x1870)))
(assert (= (x221 x5208) (ite (= x1636 x5208) 274184521717934524641157099916833587240 (x2029 x5208))))
(assert (x609 x638))
(assert (= (ite (and (not x3897) x2074) (x2272 (x5032 x5256)) (ite x2298 (ite x4453 (x378 (x5032 x5256)) (x4718 (x5032 x5256))) (x4718 (x5032 x5256)))) (x68 (x5032 x5256))))
(assert (x609 x4238))
(assert (=> (> (+ 10000 1) x3993) (= (x5032 x3993) (x4755 x3993))))
(assert (x609 x2492))
(assert (= x1343 (=> (and (= x2284 (x2423 x4130)) (= x4296 (x1960 (+ x1735 36))) (= x1317 (< 18446744073709551615 x2284))) (and (=> x1317 x5043) (=> (not x1317) x4014)))))
(assert (= (x3386 x4690) (ite (and x2716 x582 (not x472)) (x4353 x4690) (x1101 x4690))))
(assert (= (ite (and x4563 x4856 (not x3881) x3497 x338 x4449) (x4751 x4642) (ite (and (not x4563) x3497 x338 x4856 x4449) (x984 x4642) (ite (and x4449 x4856 (not x3497) x338) (x3007 x4642) (ite (and x338 x4856 (not x4449)) (x3032 x4642) (x1224 x4642))))) (x1106 x4642)))
(assert (= (x4290 (x6 x2722 2)) (+ (x4290 x2722) 2)))
(assert (= (ite (= x835 x3498) x2754 (x42 x835)) (x2195 x835)))
(assert (= (ite (and x2185 (not x5359) x763) (x808 x2489) (x3946 x2489)) (x5124 x2489)))
(assert (x609 x2233))
(assert (= (x529 x5351) (ite (and x4067 x1915) (x5335 x5351) (x3181 x5351))))
(assert (= (ite (= x5331 x4944) 0 (x2646 x5331)) (x156 x5331)))
(assert (x5318 x4443 x222))
(assert (x609 x4130))
(assert (x609 x2676))
(assert (= (ite (= x4967 x3778) x1806 (x4728 x4967)) (x3344 x4967)))
(assert (x609 x4020))
(assert (x609 x2998))
(assert (= x444 (x4290 (x5032 x444))))
(assert (x609 x709))
(assert (x609 x5067))
(assert (x609 x3045))
(assert (= (ite (= x2429 x3597) x1282 (x2635 x3597)) (x1796 x3597)))
(assert (= 0 (x3729 x3049)))
(assert (x609 x2188))
(assert (= (ite (= x2400 (x4755 0)) x2630 (x4349 x2400)) (x2707 x2400)))
(assert (x609 x1261))
(assert (x745 x2159))
(assert (= (x221 x5271) (ite (= x5271 x1636) 274184521717934524641157099916833587240 (x2029 x5271))))
(assert (x609 x4253))
(assert (=> (> (+ 10000 1) x4889) (= (x5032 x4889) (x4755 x4889))))
(assert (x609 x561))
(assert (x609 x5031))
(assert (= (x3474 x4642) (ite (= x2603 x4642) x613 (x569 x4642))))
(assert (x1139 x2173 x4611 x2812 x5061))
(assert (= (x550 x3477) (ite (= x3477 x487) 0 (x2852 x3477))))
(assert (= (x5032 1461501637330902918203684832716283019655932542976) (x4755 1461501637330902918203684832716283019655932542976)))
(assert (x609 x3727))
(assert (x609 x1327))
(assert (x3829 x4588 x1469))
(assert (x609 x5230))
(assert (x4289 x4019))
(assert (x609 x5375))
(assert (x609 x4666))
(assert (x609 x1116))
(assert (x609 x3613))
(assert (x745 x1623))
(assert (= (x290 x4837) (ite (and x2884 (not x1716) x2906) (x422 x4837) (x4977 x4837))))
(assert (x609 x584))
(assert (= (x1264 x5162) (ite (and x2185 x763) (ite (and x2185 x763 x1516) (x1814 x5162) (x1845 x5162)) (x1845 x5162))))
(assert (x609 x4029))
(assert (x3829 x4953 x1718))
(assert (= x4213 (x4290 (x5032 x4213))))
(assert (= (ite (= x5208 x3778) x1806 (x4728 x5208)) (x3344 x5208)))
(assert (x609 x4880))
(assert (x3350 x741 x5269 x5060 x2993))
(assert (x609 x3721))
(assert (= (x1562 x4182) (ite (and x763 x2185) (ite (and x2185 x763 x1516) (x1871 x4182) (x1947 x4182)) (x1947 x4182))))
(assert (= (x290 x1148) (ite (and x2884 (not x1716) x2906) (x422 x1148) (x4977 x1148))))
(assert (= (ite (and (not x4298) x4451 x4600) (x4816 x1883) (x1840 x1883)) (x2474 x1883)))
(assert (= (ite (= x4837 x2724) x1563 (x631 x4837)) (x1522 x4837)))
(assert (x79 x3174 x1881 x876 x1903))
(assert (= (x3107 x2806) (ite (= x2806 x280) x2407 (x4184 x2806))))
(assert (x609 x4883))
(assert (= x2897 (x4290 (x5032 x2897))))
(assert (x609 x1265))
(assert (x4823 x3797 x1142 x4966 x3568))
(assert (= x2936 (and x4335 (not x4846))))
(assert (= (=> (= x4774 (= 274184521717934524641157099916833587202 x353)) (and (=> x4774 x2347) (=> (not x4774) x1577))) x3837))
(assert (= (x1522 x5086) (ite (= x5086 x2724) x1563 (x631 x5086))))
(assert (= (x1542 x1976) (ite (= x1161 x1976) x2324 (x3508 x1976))))
(assert (x609 x4955))
(assert (x609 x2096))
(assert (= (ite (= x1591 x2999) x1250 (x2617 x2999)) (x3776 x2999)))
(assert (= x2903 x4451))
(assert (x745 x5205))
(assert (x4289 274184521717934524641157099916833587202))
(assert (x609 x2059))
(assert (= (ite (= x2892 x3049) x239 (x4466 x3049)) (x1853 x3049)))
(assert (= (x1678 x4642) (ite (= x4642 x4659) x1939 (x5006 x4642))))
(assert (= (x4290 (x6 x3463 2)) (+ 2 (x4290 x3463))))
(assert (x609 x2992))
(assert (= (ite (= x2429 x1537) x1282 (x2635 x1537)) (x1796 x1537)))
(assert (= (ite (and x4600 x4451) (x4329 x1609) (x550 x1609)) (x3359 x1609)))
(assert (x609 x4122))
(assert (x609 x3611))
(assert (x609 x4369))
(assert (= x3654 (and x451 (not x5092))))
(assert (= (x4651 x4517) (ite (= x4517 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x4517))))
(assert (x1139 x3111 x2714 x1631 x1888))
(assert (x609 x2806))
(assert (= (ite (= x487 x5176) 0 (x2852 x5176)) (x550 x5176)))
(assert (x609 x4992))
(assert (= (x4202 x2865) (ite (and x3528 x4577) (x559 x2865) (ite (and x5210 x4432) (x2503 x2865) (x2755 x2865)))))
(assert (x609 x129))
(assert (= (ite (and x1226 (not x5307) x4580) (x3532 x1586) (x5334 x1586)) (x3423 x1586)))
(assert (x609 x4217))
(assert (x745 x3892))
(assert (x745 x4903))
(assert (= x675 (=> (and (= x3993 x4715) (= x2252 (= x606 x3993))) (and (=> x2252 x2624) (=> (not x2252) x4581)))))
(assert (x609 x3365))
(assert (x745 x5036))
(assert (x609 x2243))
(assert (x609 x3619))
(assert (= (ite (= x2527 x3553) x2175 (x3588 x2527)) (x889 x2527)))
(assert (= (ite (and x763 x2185) (ite (and x2185 x763 x1516) (x1281 x276) (x1177 x276)) (x1177 x276)) (x4579 x276)))
(assert (x609 x384))
(assert (= (x808 x2806) (ite (and x4042 x2210 x763 (not x3343) x809 x2185) (x1910 x2806) (ite (and x809 x2185 x4042 (not x2210) x763) (x588 x2806) (ite (and x763 x2185 (not x4042) x809) (x2959 x2806) (ite (and x763 x2185 (not x809)) (x3178 x2806) (x4220 x2806)))))))
(assert (x609 x386))
(assert (= x107 (=> (and (= x5309 (x2113 (x5032 x852) (x4755 208) 0)) (= x586 x852) (= x502 (x5313 1461501637330902918203684832716283019655932542975 x854)) (= x854 (x42 x5309)) (= x2799 274184521717934524641157099916833587240) (= x5132 (not (= x502 0))) (= 274184521717934524641157099916833587240 x3001)) (and (=> (not x5132) x117) (=> x5132 x3887)))))
(assert (x4276 x4190 x2271))
(assert (= (ite (= x1715 x3447) x4413 (x1522 x3447)) (x679 x3447)))
(assert (= (x534 x1661) (ite (= x1661 x806) x3630 (x1225 x1661))))
(assert (= (ite (= x1115 x3436) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x3436)) (x4651 x3436)))
(assert (x609 x1284))
(assert (= (x1372 x4105) (ite (= x4428 x4105) x205 (x3306 x4105))))
(assert (= (x2474 x3932) (ite (and x4451 (not x4298) x4600) (x4816 x3932) (x1840 x3932))))
(assert (= (x3588 x3597) (ite (= x3597 x4745) x1390 (x1796 x3597))))
(assert (= (x4727 (x1960 (+ x698 96))) 0))
(assert (x609 x4316))
(assert (= (and x5135 x2355) x3530))
(assert (= (and x3717 (not x657)) x3846))
(assert (= (ite (and x4600 x4451) (ite (and x4451 x4193 x4600) (x3501 x4074) (x4954 x4074)) (x4954 x4074)) (x149 x4074)))
(assert (x609 x58))
(assert (= (x3007 x5176) (ite (= x1369 x5176) x4375 (x3032 x5176))))
(assert (= x1425 (and x525 x4242)))
(assert (x609 x3504))
(assert (x609 x33))
(assert (x609 x4288))
(assert (x609 x4999))
(assert (x609 x2946))
(assert (x609 x1421))
(assert (= x3336 (and x1425 x3859)))
(assert (x4289 x3187))
(assert (= 0 (x493 192)))
(assert (x745 x442))
(assert (= (ite (and x763 x2210 x2185 x809 x4042 (not x3343)) (x1910 x4438) (ite (and x2185 x809 x4042 (not x2210) x763) (x588 x4438) (ite (and x2185 x763 x809 (not x4042)) (x2959 x4438) (ite (and x763 x2185 (not x809)) (x3178 x4438) (x4220 x4438))))) (x808 x4438)))
(assert (= 0 (x493 x5351)))
(assert (= x5063 (or (and x3192 x5345) (and x243 x1812) (and x4199 x1499))))
(assert (= (x3729 x4690) 0))
(assert (= (ite (and x763 (not x5359) x2185) (x808 x2750) (x3946 x2750)) (x5124 x2750)))
(assert (x609 x2048))
(assert (= (x4755 1166402363) (x5032 1166402363)))
(assert (= (ite (and x4451 x4360 x2875 x4600 x4192 (not x1887)) (x4618 x5086) (ite (and x2875 x4192 x4600 x4451 (not x4360)) (x679 x5086) (ite (and x2875 x4600 x4451 (not x4192)) (x1522 x5086) (ite (and x4600 (not x2875) x4451) (x631 x5086) (x2091 x5086))))) (x4816 x5086)))
(assert (= (x4651 x1315) (ite (= x1315 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x1315))))
(assert (= (x550 x169) (ite (= x487 x169) 0 (x2852 x169))))
(assert (= x4237 (=> (and (= x4772 (x2113 (x5032 x1262) (x4755 208) 0)) (= (x4062 (- x5022 1)) x1262) (= (x3776 x4772) x4512) (= (= x2152 0) x1470) (= x2152 (x5313 1461501637330902918203684832716283019655932542975 x4512))) (and (=> x1470 x5043) (=> (not x1470) x907)))))
(assert (= (ite (and x2875 x4600 x4451 (not x1887) x4360 x4192) (x4618 x2046) (ite (and x4451 x2875 (not x4360) x4192 x4600) (x679 x2046) (ite (and x4600 x4451 (not x4192) x2875) (x1522 x2046) (ite (and x4600 x4451 (not x2875)) (x631 x2046) (x2091 x2046))))) (x4816 x2046)))
(assert (x609 x4483))
(assert (x745 x3101))
(assert (x1898 x1062 x3015))
(assert (x4289 x102))
(assert (= (x3178 x2806) (ite (= x2806 x3807) x4939 (x2018 x2806))))
(assert (x609 x2253))
(assert (x745 x2821))
(assert (= (ite (and x2654 x4838) (x3423 x2750) (ite (and x3717 x657) (x1118 x2750) (x4134 x2750))) (x3314 x2750)))
(assert (= x2028 (and x4578 (not x617))))
(assert (= (ite (= x1883 x185) x3414 (x3007 x1883)) (x984 x1883)))
(assert (= 274184521717934524641157099916833587240 (x4290 (x5032 274184521717934524641157099916833587240))))
(assert (= (and (not x60) x1620) x1670))
(assert (x4289 x191))
(assert (=> (< (- x1486 1) 10000) (= (x5032 x1486) (x4755 x1486))))
(assert (= (+ (x4290 x5238) 2) (x4290 (x6 x5238 2))))
(assert (= (ite (= x2536 x3592) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x3592)) (x4184 x3592)))
(assert (= (ite (and x4600 (not x4298) x4451) (x4816 x5086) (x1840 x5086)) (x2474 x5086)))
(assert (=> (< (- x3187 1) 10000) (= (x4755 x3187) (x5032 x3187))))
(assert (= (x2862 x3448) (ite (= x3448 x571) x1831 (x1466 x3448))))
(assert (x3829 x2914 x3573))
(assert (= (x3729 x2560) 0))
(assert (x609 x788))
(assert (x4289 x3823))
(assert (= (ite (and x2185 x809 x763 (not x3343) x2210 x4042) (x1910 x953) (ite (and x4042 x763 (not x2210) x809 x2185) (x588 x953) (ite (and (not x4042) x2185 x809 x763) (x2959 x953) (ite (and x763 x2185 (not x809)) (x3178 x953) (x4220 x953))))) (x808 x953)))
(assert (x609 x168))
(assert (= (x4290 (x5032 x5159)) x5159))
(assert (= x3362 (=> (and (= x3533 (x1960 (+ x3470 x2713))) (= x4565 (> x2713 x3533))) (and (=> (not x4565) x1426) (=> x4565 x1483)))))
(assert (= x4583 (and x1495 (not x737))))
(assert (x609 x345))
(assert (x5318 x1356 x2770))
(assert (x745 x741))
(assert (x609 x3734))
(assert (x609 x4416))
(assert (x609 x996))
(assert (x609 x2727))
(assert (= (ite (= x1315 x282) 0 (x4965 x1315)) (x1571 x1315)))
(assert (x4289 x2358))
(assert (x745 x3988))
(assert (= (ite (and x2185 x763) (ite (and x763 x1516 x2185) (x1700 (x5032 x4368)) (x4567 (x5032 x4368))) (x4567 (x5032 x4368))) (x1695 (x5032 x4368))))
(assert (x609 x4275))
(assert (= (x4674 x513) (ite x748 (ite x3421 (x479 x513) (x233 x513)) (x5266 x513))))
(assert (= (ite (= x5176 x3177) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x5176)) (x4977 x5176)))
(assert (= (ite (= x5225 x4427) x4682 (x183 x5225)) (x3305 x5225)))
(assert (= (or x1963 x3492) x3692))
(assert (x609 x2741))
(assert (= 0 (x4727 x4438)))
(assert (= (x4221 x2750) (ite (= x3303 x2750) x1093 (x1849 x2750))))
(assert (x609 x2724))
(assert (x609 x103))
(assert (= (x289 x4832) (ite (= x4832 x5386) x1036 (x3739 x4832))))
(assert (x609 x5246))
(assert (x745 x3522))
(assert (x609 x4815))
(assert (= (and (not x2947) x2180) x4824))
(assert (= x4521 (=> (and (= (x4623 (x5032 274184521717934524641157099916833587240)) x519) (= x4776 x1588) (= (x4623 (x5032 x1279)) x4739) x708 (= (x12 (x5032 x1279)) x4) (= x4055 (<= 0 x519)) (= x708 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x12 (x5032 x1279)))) x4055 (= (x4623 (x5032 274184521717934524641157099916833587240)) x4150) (= x617 (= 274184521717934524641157099916833587206 x1279)) (= x1381 (< x4739 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1381) (and (=> (and (= (+ x2591 x1243) x387) x617 (= x4144 68) (= x3814 2835717307) (= (x4873 (x5032 274184521717934524641157099916833587206)) x4798) (= x1035 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x4499) (= (>= (+ x171 x377) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1860) (= x1797 x612) (= x4572 x3734) (not (= x3814 1889567281)) (not (= 826074471 x3814)) (= x377 x1797) (= x1243 x377) (= (x2222 x927) x171) (= x1566 (> x377 x3009)) (>= 1461501637330902918203684832716283019655932542975 x4101) (= (x775 x4481) x3009) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x377 x171)) (= (x4062 (- x3009 x1797)) x4122) (= x3698 274184521717934524641157099916833587240) (= (< x3009 x1797) x5398) (= x4216 32) (= x4101 x4778) (= x4144 x1588) (= x593 274184521717934524641157099916833587240) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x4481) (= x2591 x171) (>= x171 0) (< 0 x4798) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x171) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3009) (= x4101 x1099) (not (= x3814 2514000705)) (not x1860) (not x1566) (not (> 826074471 x3814)) (>= x3009 0) (not x5398) (= x2483 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3677) (and (< x3677 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3677) true)))) (= x4448 1) (= x927 (x2113 (x5032 x4101) (x4755 1) 0)) (not (> 4 x4144)) (= x3677 (x4062 (- x4144 4))) (not x2483)) x1627) (=> (not x617) x213)))))
(assert (x609 x4327))
(assert (= (ite (= x3891 (x4755 0)) x1325 (x3161 x3891)) (x1017 x3891)))
(assert (x609 x5223))
(assert (x609 x3750))
(assert (x609 x4330))
(assert (x609 x5086))
(assert (= (ite (and x338 (not x1973) x4856) (x1106 x3447) (x2086 x3447)) (x559 x3447)))
(assert (= x1262 (x4290 (x5032 x1262))))
(assert (= (ite (= x2885 x1161) x2324 (x3508 x2885)) (x1542 x2885)))
(assert (= (ite (= x2934 x1161) x2324 (x3508 x2934)) (x1542 x2934)))
(assert (= (ite (= x3477 x4767) 0 (x3760 x3477)) (x3618 x3477)))
(assert (x609 x3992))
(assert (x609 x2820))
(assert (= (ite (= x282 x1586) 0 (x4965 x1586)) (x1571 x1586)))
(assert (x4289 x4735))
(assert (= (=> (= x4969 (= x2358 274184521717934524641157099916833587206)) (and (=> (not x4969) x4078) (=> x4969 x5279))) x3646))
(assert (x609 x1458))
(assert (x609 x4719))
(assert (x609 x4548))
(assert (x609 x2709))
(assert (= (x1579 (x712 x1806 x2410 x3010 x3953 x1367 x2136 x2048 x2913 x4100)) 0))
(assert (= (x2155 x5331) (ite (= x5331 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x5331))))
(assert (x609 x3731))
(assert (= (ite (= x1255 (x1960 (+ x1002 64))) x4340 (x1886 (x1960 (+ 64 x1002)))) (x3673 (x1960 (+ 64 x1002)))))
(assert (= (ite (= x1870 x2892) x239 (x4466 x1870)) (x1853 x1870)))
(assert (= (ite (and x1226 (not x5307) x4580) (x3532 x3448) (x5334 x3448)) (x3423 x3448)))
(assert (= (ite (= (x4755 0) x4996) x4687 (x212 x4996)) (x42 x4996)))
(assert (= (x1542 x671) (ite (= x1161 x671) x2324 (x3508 x671))))
(assert (= 11430537079145650693387304458692941425836787954612963690241153482819318579200 (x4290 (x4755 11430537079145650693387304458692941425836787954612963690241153482819318579200))))
(assert (= (ite (= x1883 x1946) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x1883)) (x3032 x1883)))
(assert (x609 x3746))
(assert (= (x4618 x5086) (ite (= x5086 x4788) x1755 (x679 x5086))))
(assert (=> (> (+ 10000 1) x814) (= (x4755 x814) (x5032 x814))))
(assert (x609 x3519))
(assert (= (ite (= (x4755 0) x1976) x4687 (x212 x1976)) (x42 x1976)))
(assert (= (=> (and (= x4580 (> x3441 0)) (= (x4873 (x5032 x1288)) x3441) (= x1288 (x5313 1461501637330902918203684832716283019655932542975 x3074))) (and (=> (and (= x4024 (x1960 (+ 64 x5045))) (= x2659 (> x1688 0)) (= x2352 274184521717934524641157099916833587240) (= x3914 (x1960 (+ x1822 32))) (= x2536 (x1960 (+ x1347 128))) (= (x1960 (+ x1822 132)) x4170) (= (x5313 1461501637330902918203684832716283019655932542975 x3074) x3823) (= (x546 x3914) x474) (or (and (= x3704 (x1960 (+ x32 x4117))) x5307) (not x5307)) (= x1170 (< 0 x4117)) (= (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x474) x255) x2659 (= x3077 0) (= (x1960 (+ 36 x1822)) x1347) (= x4226 (x1960 (+ x255 16156842317565293874272834530371880720966471053262404558597773956279093428224))) (= (x4062 (- x4170 x1822)) x1144) (= 274184521717934524641157099916833587240 x2809) (= x1984 (x1960 (+ 32 x5045))) (or (and (not x1170) (= 0 x5264)) (and (= x898 (> x4117 32)) (= x3914 x953) (= (x4184 x953) x2407) x1170 (= x280 x32) (or (and (not x898) (= x5264 32)) (and (= (x1960 (+ x1822 64)) x3436) (= (x3107 x3436) x351) x898 (= (x1960 (+ 96 x4170)) x1086) (or (and (= 64 x5264) (not x2099)) (and (= x2489 (x1960 (+ 96 x1822))) (= (< 96 x4117) x1900) (or (and (not x1900) (= 96 x5264)) (and (= 128 x5264) (= (x1960 (+ 160 x4170)) x580) x1900 (not x500) (= (< 128 x4117) x500) (= x4832 (x1960 (+ 128 x1822))) (= (x289 x4832) x4084))) x2099 (= (x1960 (+ 128 x4170)) x5386) (= (x3739 x2489) x1036))) (= x2099 (< 64 x4117)))))) (= x32 (x1960 (+ 160 x1347))) (= x1347 x5045) (= (x4873 (x5032 x3823)) x1688) (= (x4062 (- x1144 32)) x3956) x4580 (= x5307 (< x4117 x5264)) (= x4117 (x4184 x1822))) x5148) (=> (and (not (< x1232 x3780)) (not x4580) (= x3281 x1822)) x3091))) x2322))
(assert (= (x4755 1889567281) (x5032 1889567281)))
(assert (x1139 x3602 x1594 x3337 x2115))
(assert (= (and x3878 x4740) x4947))
(assert (= (ite (= x3592 x282) 0 (x4965 x3592)) (x1571 x3592)))
(assert (x4823 x5321 x4092 x224 x645))
(assert (x745 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x609 x4806))
(assert (x609 x1593))
(assert (x609 x462))
(assert (= (ite (= x5071 x3448) x2253 (x3178 x3448)) (x2959 x3448)))
(assert (= (or (and x2901 x2698) (and x5149 x1274) (and x3275 x3527)) x3782))
(assert (x745 x2330))
(assert (x4289 x3920))
(assert (= (x4816 x2397) (ite (and x2875 x4600 (not x1887) x4451 x4360 x4192) (x4618 x2397) (ite (and x4600 x4451 x4192 (not x4360) x2875) (x679 x2397) (ite (and x4600 x4451 x2875 (not x4192)) (x1522 x2397) (ite (and (not x2875) x4451 x4600) (x631 x2397) (x2091 x2397)))))))
(assert (x609 x536))
(assert (x609 x2357))
(assert (= (x1542 x49) (ite (= x1161 x49) x2324 (x3508 x49))))
(assert (x609 x5036))
(assert (= (x984 x5176) (ite (= x5176 x185) x3414 (x3007 x5176))))
(assert (= (x3588 x5208) (ite (= x5208 x4745) x1390 (x1796 x5208))))
(assert (= (x4290 (x5032 x2412)) x2412))
(assert (= (ite (and x4600 x4451) (x4329 x4330) (x550 x4330)) (x3359 x4330)))
(assert (= (x4221 (x1960 (+ 64 x698))) (ite (= x3303 (x1960 (+ x698 64))) x1093 (x1849 (x1960 (+ 64 x698))))))
(assert (x4289 x5185))
(assert (= (ite (= x3303 x3584) x1093 (x1849 x3584)) (x4221 x3584)))
(assert (x609 x624))
(assert (= (and x3547 (not x2949)) x2286))
(assert (= (ite (= x5121 (x4755 0)) x3039 (x2195 (x4755 0))) (x382 (x4755 0))))
(assert (x609 x5240))
(assert (x609 x1703))
(assert (= (x3157 x1658) (ite (and (not x3191) x4625 x1000) (x2895 x1658) (x2155 x1658))))
(assert (= x4825 (and x2776 (not x3164))))
(assert (x609 x5351))
(assert (x609 x4836))
(assert (x4289 x1262))
(assert (= (ite (= x4767 x4642) 0 (x3760 x4642)) (x3618 x4642)))
(assert (= (x493 x743) 0))
(assert (x609 x5314))
(assert (x609 x754))
(assert (= (x2195 x3960) (ite (= x3498 x3960) x2754 (x42 x3960))))
(assert (x609 x5019))
(assert (= x564 (x4290 (x5032 x564))))
(assert (x609 x562))
(assert (= (x4221 x2489) (ite (= x2489 x3303) x1093 (x1849 x2489))))
(assert (= (ite (= x806 x5271) x3630 (x1225 x5271)) (x534 x5271)))
(assert (x609 x552))
(assert (= (=> (and (= 2835717307 x1105) (not (= 1889567281 x1105)) (= 68 x264) (not (> 826074471 x1105)) (= (x4062 (- x264 4)) x163) (= x948 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x163)) (< x163 64)) (> x163 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2261 (x4873 (x5032 274184521717934524641157099916833587202))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2154) (not (< x264 4)) (= x1136 x118) (= x3186 x2677) (not (= 2514000705 x1105)) (< 0 x2261) (not (= 826074471 x1105)) (= x2454 x264)) (and (=> x948 x2443) (=> (not x948) x1456))) x55))
(assert (=> (> (+ 10000 1) x3719) (= (x4755 x3719) (x5032 x3719))))
(assert (= (x1542 x4779) (ite (= x1161 x4779) x2324 (x3508 x4779))))
(assert (= (x588 x2488) (ite (= x2488 x4822) x3430 (x2959 x2488))))
(assert (= (ite (= x1883 x2724) x1563 (x631 x1883)) (x1522 x1883)))
(assert (= x2590 (=> (and (= x2358 (x5313 1461501637330902918203684832716283019655932542975 x5374)) (= x4964 (x4873 (x5032 x2358))) (= (x1960 (+ x3180 64)) x3778) (= x5384 274184521717934524641157099916833587240) (= x979 (= x4964 0)) (= (x1960 (+ x2907 100)) x1847) (= (x1960 (+ x3180 32)) x2030) (= x1803 x3180) (= (x1960 (+ x2907 4)) x1803) (= (x4062 (- x1847 x2907)) x5004) (= (x5313 1461501637330902918203684832716283019655932542975 x4258) x606)) (and (=> x979 x5043) (=> (not x979) x4367)))))
(assert (= x3503 (=> (= x3192 (= x4303 274184521717934524641157099916833587202)) (and (=> (not x3192) x5042) (=> (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3990 x3214)) (= 274184521717934524641157099916833587240 x3721) (>= x3880 0) (= x5193 x3990) (not x3962) (not (= x5367 157198259)) (= 274184521717934524641157099916833587240 x4332) (= x1867 (x2113 (x5032 274184521717934524641157099916833587240) x2470 0)) (= x4908 x3990) (= x2470 (x2113 (x5032 x2643) (x4755 2) 0)) (= x1482 100) (not x1003) (= x1045 (x4062 (- x4519 x5193))) (<= x3880 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3990 x3880) x3962) (= x5055 (x2113 (x5032 x2643) (x4755 1) 0)) (= x1003 (or (> x5224 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x5224) (= (<= x5224 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x2140 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2751 (x2113 (x5032 274184521717934524641157099916833587240) x2131 0)) (= x1089 x2643) (= 1 x2320) (= x2643 x3148) (= x4154 x1137) (< 0 x1580) (= x3773 (> x3990 x3880)) (<= x3214 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x943) (< x5367 826074471) (= (x5214 x943) x3214) (not (= 117300739 x5367)) (= (x416 x5055) x4519) (not x3773) (= (< x4519 x3990) x3911) (= 274184521717934524641157099916833587240 x5192) (= (x2113 (x5032 x2643) (x4755 2) 0) x2131) (<= 0 x4519) (not x3242) (= x5325 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= (x4873 (x5032 274184521717934524641157099916833587202)) x1580) (not (< x1482 4)) (<= x4519 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5367 599290589) (<= x2643 1461501637330902918203684832716283019655932542975) (>= x3214 0) (= x48 (< x4519 x5193)) x3192 (= (x4062 (- x1482 4)) x5224) (= x1482 x4598) (= x946 (x4062 (- x3880 x5193))) (not x3911) (= x2986 x5193) (= (>= (+ x3990 x3214) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3242) (= x1538 274184521717934524641157099916833587240) (= x3033 x3214) (not x48) (not (= 404098525 x5367)) (= (+ x4908 x3033) x3915) (= (x4766 x1867) x3880) (= (x2113 (x5032 x2643) (x4755 1) 0) x1073)) x2855)))))
(assert (= (ite x2394 (ite x764 (x2058 x736) (x1264 x736)) (x3679 x736)) (x515 x736)))
(assert (= (ite (= x4744 x1315) 274184521717934524641157099916833587240 (x5234 x1315)) (x2396 x1315)))
(assert (= (x4290 (x4755 455944412)) 455944412))
(assert (= (x3934 x3584) (ite (= x2867 x3584) x4439 (x2356 x3584))))
(assert (= (x3157 x3597) (ite (and (not x3191) x1000 x4625) (x2895 x3597) (x2155 x3597))))
(assert (x609 x551))
(assert (x609 x3338))
(assert (x3829 x2720 x3068))
(assert (= (x4977 x169) (ite (= x3177 x169) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x363 x169))))
(assert (x4289 x3225))
(assert (x609 x1130))
(assert (x745 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x609 x1803))
(assert (x609 x4610))
(assert (x609 x547))
(assert (x609 x4344))
(assert (x4276 x1034 x329))
(assert (= (x289 x1583) (ite (= x5386 x1583) x1036 (x3739 x1583))))
(assert (x609 x3544))
(assert (x609 x4722))
(assert (= (x3673 192) (ite (= 192 x1255) x4340 (x1886 192))))
(assert (x609 x3863))
(assert (x609 x3051))
(assert (x609 x2261))
(assert (= (x1264 x1314) (ite (and x2185 x763) (ite (and x2185 x763 x1516) (x1814 x1314) (x1845 x1314)) (x1845 x1314))))
(assert (x609 x4497))
(assert (= (ite (= x3436 x4822) x3430 (x2959 x3436)) (x588 x3436)))
(assert (x609 x3874))
(assert (= x2343 (and x2822 x2936)))
(assert (x609 x3510))
(assert (= (x588 x2750) (ite (= x2750 x4822) x3430 (x2959 x2750))))
(assert (x609 x1656))
(assert (= x2735 (and x3702 (not x1990))))
(assert (= (x1675 x5067) (ite (and x2673 x792 (not x1416)) (x2427 x5067) (x3346 x5067))))
(assert (= (ite (= x1161 x3909) x2324 (x3508 x3909)) (x1542 x3909)))
(assert (x609 x351))
(assert (x609 x4512))
(assert (x3239 x3145 x622))
(assert (= (ite (= x3778 x1661) x1806 (x4728 x1661)) (x3344 x1661)))
(assert (x609 x1505))
(assert (x609 x3848))
(assert (= (x4290 (x6 x3862 2)) (+ (x4290 x3862) 2)))
(assert (x609 x4980))
(assert (= (x3002 x3448) (ite (and x1551 x3591 x874 x231 x1552 (not x307)) (x3632 x3448) (ite (and x3591 (not x1552) x1551 x874 x231) (x2862 x3448) (ite (and x3591 x874 x231 (not x1551)) (x1466 x3448) (ite (and (not x231) x874 x3591) (x1339 x3448) (x166 x3448)))))))
(assert (= (ite (= (x4755 0) x5039) x1325 (x3161 x5039)) (x1017 x5039)))
(assert (= (ite (and (not x1416) x792 x2673) (x2427 x3597) (x3346 x3597)) (x1675 x3597)))
(assert (= (x5032 115792089237316195423570985007226406215939081747436879206741300988257197096960) (x4755 115792089237316195423570985007226406215939081747436879206741300988257197096960)))
(assert (x745 x1747))
(assert (x609 x2334))
(assert (= (and x1604 x2977) x4007))
(assert (x609 x1394))
(assert (x609 x457))
(assert (x609 x5107))
(assert (= (=> (and (= x3713 (> x4000 0)) (= (x4501 x1870) x4000)) (and (=> x3713 x2487) (=> (not x3713) x1061))) x2732))
(assert (x609 x3408))
(assert (= (=> (and (= (not x2929) x1640) (= x1640 x4698) (= x3689 x2929)) x4698) x1979))
(assert (= (x4816 x4837) (ite (and x2875 x4192 x4451 x4360 (not x1887) x4600) (x4618 x4837) (ite (and x4451 x4600 (not x4360) x4192 x2875) (x679 x4837) (ite (and x4451 x2875 (not x4192) x4600) (x1522 x4837) (ite (and (not x2875) x4451 x4600) (x631 x4837) (x2091 x4837)))))))
(assert (= (x3207 x5208) (ite x4453 (ite x3665 (x3386 x5208) (ite x2813 (x968 x5208) (x1685 x5208))) (x3386 x5208))))
(assert (= (x3178 x3592) (ite (= x3807 x3592) x4939 (x2018 x3592))))
(assert (= (ite (and x2673 (not x503) x1391 x4469 x792 x2651) (x2928 x5208) (ite (and x4469 x1391 (not x2651) x792 x2673) (x889 x5208) (ite (and x792 x4469 x2673 (not x1391)) (x3588 x5208) (ite (and x792 (not x4469) x2673) (x1796 x5208) (x509 x5208))))) (x2427 x5208)))
(assert (= x1404 (and x1020 (not x992))))
(assert (x609 x263))
(assert (x3641 x4554 x3514))
(assert (=> (< (- x4735 1) 10000) (= (x5032 x4735) (x4755 x4735))))
(assert (= (or (and x987 x2703) (and x2980 x370)) x3421))
(assert (= (ite (= x1722 x1086) x351 (x3107 x1722)) (x3739 x1722)))
(assert (x4289 x2601))
(assert (= (ite (= x4783 x280) x2407 (x4184 x4783)) (x3107 x4783)))
(assert (= x1233 (=> (and (= x800 x742) (= 0 x603) (= (- (x97 (x5032 x5256)) x603) x4061) x2792 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x603 (x5247 (x5032 274184521717934524641157099916833587240)))) x2792) (= x4743 x1966)) x2538)))
(assert (= (=> (= (< x404 x4260) x5114) (and (=> (not x5114) x323) (=> x5114 x4581))) x1625))
(assert (x609 x2451))
(assert (x609 x1753))
(assert (= (x289 x1586) (ite (= x1586 x5386) x1036 (x3739 x1586))))
(assert (= (ite (and x2884 x2906 (not x1716)) (x422 x4111) (x4977 x4111)) (x290 x4111)))
(assert (x609 x4691))
(assert (= (ite (and x2185 x763 (not x5359)) (x808 x1722) (x3946 x1722)) (x5124 x1722)))
(assert (x609 x4359))
(assert (= (x3729 x2468) 0))
(assert (= 0 (x493 x4330)))
(assert (= (x3576 x76) (ite (= x3865 x76) x3793 (x4804 x76))))
(assert (= (x4290 (x6 x2830 2)) (+ (x4290 x2830) 2)))
(assert (x609 x3979))
(assert (x609 x5028))
(assert (= x1146 (x4290 (x5032 x1146))))
(assert (=> (> (+ 10000 1) x1307) (= (x5032 x1307) (x4755 x1307))))
(assert (x609 x4803))
(assert (= (x3673 x3597) (ite (= x3597 x1255) x4340 (x1886 x3597))))
(assert (x609 x4909))
(assert (x745 x1039))
(assert (x609 x1047))
(assert (x609 x3448))
(assert (x609 x1576))
(assert (= (x1639 x953) (ite (and x763 x2185) (x594 x953) (x1571 x953))))
(assert (x609 x3441))
(assert (x609 x5330))
(assert (= (x2155 x1661) (ite (= x1661 x4057) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x1661))))
(assert (x609 x5101))
(assert (x609 x4826))
(assert (x609 x99))
(assert (x609 x4634))
(assert (x609 x3084))
(assert (x609 x1611))
(assert (x745 x88))
(assert (= (x1340 x5351) (ite (= x96 x5351) 274184521717934524641157099916833587240 (x456 x5351))))
(assert (x609 x5316))
(assert (= (x1542 x4272) (ite (= x4272 x1161) x2324 (x3508 x4272))))
(assert (x609 x3202))
(assert (= (ite (= x2907 x1658) 0 (x1382 x1658)) (x4561 x1658)))
(assert (= (ite (= x4252 x4438) 0 (x5379 x4438)) (x1655 x4438)))
(assert (= (ite (= x1842 x2605) x5228 (x2041 x1842)) (x3982 x1842)))
(assert (x609 x144))
(assert (x609 x1095))
(assert (x609 x2826))
(assert (= (x4755 5192296858534827628530496329220096) (x5032 5192296858534827628530496329220096)))
(assert (x609 x17))
(assert (= (and (not x202) x2028) x1132))
(assert (= (ite (= x1369 x1148) x4375 (x3032 x1148)) (x3007 x1148)))
(assert (x609 x2415))
(assert (= (x3588 x1661) (ite (= x1661 x4745) x1390 (x1796 x1661))))
(assert (x609 x3412))
(assert (x745 x3848))
(assert (x609 x1583))
(assert (x609 x5125))
(assert (= (x1638 x1722) (ite (= x1042 x1722) 274184521717934524641157099916833587240 (x5299 x1722))))
(assert (x609 x2773))
(assert (= (x3618 x1609) (ite (= x4767 x1609) 0 (x3760 x1609))))
(assert (x609 x4558))
(assert (x609 x461))
(assert (= (x1681 x2135) (ite x2394 (ite x764 (x1298 x2135) (x4579 x2135)) (x4257 x2135))))
(assert (x609 x1520))
(assert (= (ite (and x4600 x4451) (ite (and x4600 x4193 x4451) (x2164 x4481) (x3930 x4481)) (x3930 x4481)) (x1229 x4481)))
(assert (= (ite (= x5071 x2806) x2253 (x3178 x2806)) (x2959 x2806)))
(assert (= (ite (and x3318 x90) (x1837 x5208) (x4561 x5208)) (x267 x5208)))
(assert (= (ite (= x3865 x1161) x2324 (x3508 x3865)) (x1542 x3865)))
(assert (x609 x1777))
(assert (= (ite (= x1946 x3447) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x3447)) (x3032 x3447)))
(assert (=> (< (- x4395 1) 10000) (= (x4755 x4395) (x5032 x4395))))
(assert (x609 x1096))
(assert (= 511946350 (x4290 (x4755 511946350))))
(assert (x609 x448))
(assert (x609 x5213))
(assert (x4289 x3583))
(assert (= (ite (= x4744 x2806) 274184521717934524641157099916833587240 (x5234 x2806)) (x2396 x2806)))
(assert (x3829 x5357 x3937))
(assert (= (x3673 224) (ite (= 224 x1255) x4340 (x1886 224))))
(assert (= (ite (and (not x5307) x4580 x1226) (x3532 x970) (x5334 x970)) (x3423 x970)))
(assert (= (x3739 x1586) (ite (= x1086 x1586) x351 (x3107 x1586))))
(assert (= (ite (= x332 x3597) x3571 (x1853 x3597)) (x1225 x3597)))
(assert (= x5043 (=> (= x4325 true) x470)))
(assert (= (x221 x1661) (ite (= x1636 x1661) 274184521717934524641157099916833587240 (x2029 x1661))))
(assert (= (ite (= x5283 (x1960 (+ 32 x4780))) x1386 (x1956 (x1960 (+ x4780 32)))) (x4208 (x1960 (+ x4780 32)))))
(assert (= (- (/ x88 57896044618658097711785492504343953926634992332820282019728792003956564819968) (uninterp_frac x88 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (x5174 x88 255)))
(assert (= (x2707 x811) (ite (= (x4755 0) x811) x2630 (x4349 x811))))
(assert (x609 x2218))
(assert (= 0 (x4727 x970)))
(assert (x609 x680))
(assert (x609 x1279))
(assert (x609 x1912))
(assert (= (x534 x3049) (ite (= x3049 x806) x3630 (x1225 x3049))))
(assert (= x598 (x4290 (x5032 x598))))
(assert (x4289 x1015))
(assert (= (=> (and (= x3638 (x4873 (x5032 x5256))) (= (x1960 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1665)) x1437) (= x3601 (x1960 (+ x3711 32))) (= (x1960 (+ x2696 36)) x58) (= x4320 (x4062 (- x4874 32))) (= x1665 (x5313 26959946667150639794667015087019630673637144422540572481103610249215 x1271)) (= 0 x3926) (= (x5313 1461501637330902918203684832716283019655932542975 x80) x5256) (= x3186 (x5313 1461501637330902918203684832716283019655932542975 x4258)) (= (x1960 (+ 100 x2696)) x4790) (= (x3661 x4690) x1271) (= x4919 (x1960 (+ 128 x58))) (= (x4062 (- x4790 x2696)) x4874) (= (< 0 x3638) x2450) (= x4690 (x1960 (+ 32 x2696))) (= x3711 x58) (= x4322 (x1960 (+ x58 96)))) (and (=> (and (or (not x3585) (and (= x187 (x1960 (+ x4919 x1032))) x3585)) x2450 (= (x3589 x2696) x1032) (= x3585 (> x129 x1032)) (= (> x1032 0) x1389) (or (and (or (and (= (x1960 (+ x2696 64)) x5208) (or (and (= x129 64) (not x2622)) (and (= (x1960 (+ 96 x2696)) x2560) x2622 (= (> x1032 96) x2194) (= x2499 (x3218 x2560)) (or (and (not x2194) (= 96 x129)) (and (= (x1960 (+ 160 x4790)) x3185) (not x1989) x2194 (= x1989 (< 128 x1032)) (= x129 128) (= (x1960 (+ x2696 128)) x1661) (= (x3413 x1661) x897))) (= x1917 (x1960 (+ 128 x4790))))) (= x3483 (x3635 x5208)) (= x2142 (x1960 (+ x4790 96))) x5025 (= (> x1032 64) x2622)) (and (not x5025) (= 32 x129))) (= x4690 x5067) (= x3295 x4919) (= x112 (x3589 x5067)) x1389 (= (< 32 x1032) x5025)) (and (not x1389) (= x129 0)))) x3274) (=> (not x2450) x5043))) x1942))
(assert (= (x2155 x4967) (ite (= x4057 x4967) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x4967))))
(assert (= (ite (= x2207 x4428) x205 (x3306 x2207)) (x1372 x2207)))
(assert (= (=> (= x1596 (= 0 x3240)) (and (=> x1596 x5043) (=> (not x1596) x5226))) x1521))
(assert (x609 x2950))
(assert (= (x4751 x4642) (ite (= x4642 x3886) x3146 (x984 x4642))))
(assert (x609 x3177))
(assert (= (x889 x3049) (ite (= x3049 x3553) x2175 (x3588 x3049))))
(assert (x609 x1819))
(assert (= x4053 (or (and (not x3548) x5342) x2525)))
(assert (x609 x4711))
(assert (= (x2959 x3584) (ite (= x5071 x3584) x2253 (x3178 x3584))))
(assert (= (x2928 x5151) (ite (= x5151 x1610) x629 (x889 x5151))))
(assert (= (x3135 x2897 96) (uninterp_mod (* 79228162514264337593543950336 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x609 x1016))
(assert (x609 x1744))
(assert (= (x4755 117300739) (x5032 117300739)))
(assert (x609 x2877))
(assert (x609 x3793))
(assert (= (=> (= x5210 (= x4735 274184521717934524641157099916833587206)) (and (=> (not x5210) x962) (=> (and (<= x2305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1964 274184521717934524641157099916833587240) (not (= x1934 117300739)) (= x4415 (< x2781 x4864)) (= 32 x461) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5216) (< 0 x3263) (< (+ x4864 x5216) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x2781) (not (= 157198259 x1934)) (= (< x2305 x4864) x4267) (< x1934 826074471) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2781) (= x2781 (x1229 x52)) (not x4267) (= (x4062 (- x2305 x414)) x4044) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3065) (not x4485) x5210 (= x1954 (or (and (< x2853 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2853))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2853))) (= 599290589 x1934) (= x4864 x414) (= x3675 1) (= x4864 x2740) (<= 0 x2305) (= x3246 x814) (= x982 (x4062 (- x2781 x414))) (= (> x414 x2781) x5303) (= (x2493 x4797) x5216) (not x1429) (= (x4354 x4454) x2305) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x596) (= (x2113 (x5032 x814) (x4755 2) 0) x4251) (= (x2113 (x5032 274184521717934524641157099916833587240) x4251 0) x4454) (= 100 x3383) (= x3263 (x4873 (x5032 274184521717934524641157099916833587206))) (= x5216 x3140) (= (+ x2740 x3140) x2990) (= 274184521717934524641157099916833587240 x4163) (not (= x1934 404098525)) (= x4485 (> x4864 x2305)) (= x313 274184521717934524641157099916833587240) (= x4008 x1197) (= x2246 274184521717934524641157099916833587240) (not x5303) (<= x814 1461501637330902918203684832716283019655932542975) (= x4797 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= x4730 (x2113 (x5032 x814) (x4755 1) 0)) (= x703 x414) (= (x4062 (- x3383 4)) x2853) (<= 0 x5216) (= x1429 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4864 x5216))) (not x1954) (not (< x3383 4)) (= x438 x814) (not x4415) (= x52 (x2113 (x5032 x814) (x4755 1) 0)) (= x1100 x3383)) x2068))) x2888))
(assert (x609 x2918))
(assert (= (ite (= x4438 x282) 0 (x4965 x4438)) (x1571 x4438)))
(assert (= (=> (and (= (x3776 x400) x2399) (= x4172 (x5313 1461501637330902918203684832716283019655932542975 x2399)) (= (x2113 (x5032 x2034) (x4755 208) 0) x400) (= (= x4172 0) x768)) (and (=> x768 x572) (=> (not x768) x853))) x3706))
(assert (x609 x2174))
(assert (= (and x1836 (not x4183)) x2748))
(assert (= 0 (x3729 x5208)))
(assert (x609 x3558))
(assert (x745 x3587))
(assert (= (ite (= x432 (x4755 0)) x2630 (x4349 x432)) (x2707 x432)))
(assert (x609 x4328))
(assert (= (and x369 x2252) x1020))
(assert (= (ite (= x1369 x4111) x4375 (x3032 x4111)) (x3007 x4111)))
(assert (= (ite (= x3592 x1115) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3625 x3592)) (x4651 x3592)))
(assert (= (ite (= x4057 x1537) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x1537)) (x2155 x1537)))
(assert (x609 x1359))
(assert (= (ite (and x4600 x4451) (x4329 x5351) (x550 x5351)) (x3359 x5351)))
(assert (=> (< (- x353 1) 10000) (= (x4755 x353) (x5032 x353))))
(assert (= (x2155 x5271) (ite (= x4057 x5271) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x929 x5271))))
(assert (x3829 x4847 x1123))
(assert (x609 x1743))
(assert (x609 x1289))
(assert (= (x1910 x2806) (ite (= x4225 x2806) x4534 (x588 x2806))))
(assert (x3239 x1387 x2216))
(assert (x609 x3486))
(assert (x609 x3970))
(assert (= (x4618 x5176) (ite (= x4788 x5176) x1755 (x679 x5176))))
(assert (x609 x4256))
(assert (= (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x5032 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x4804 (x4755 0)) (ite (= (x4755 0) x601) x4410 (x3776 (x4755 0)))))
(assert (= (x1853 x4690) (ite (= x2892 x4690) x239 (x4466 x4690))))
(assert (= x1090 (=> (and (= x5153 (x1960 (+ x2426 x2040))) (= x3897 (> x5153 x4048))) (and (=> x3897 x5043) (=> (and (not x3897) (= x2696 x4030)) x3367)))))
(assert (x79 x2970 x2766 x3428 x3997))
(assert (x609 x1048))
(assert (x609 x580))
(assert (x609 x3606))
(assert (x609 x2546))
(assert (= (x3673 x1002) (ite (= x1255 x1002) x4340 (x1886 x1002))))
(assert (= x1047 (x4290 (x5032 x1047))))
(assert (= (x1639 x2750) (ite (and x2185 x763) (x594 x2750) (x1571 x2750))))
(assert (x609 x3049))
(assert (x609 x3331))
(assert (x609 x2299))
(assert (= 0 (x493 (x1960 (+ 96 x4780)))))
(assert (= (and (not x4463) x3626) x247))
(assert (= (ite (and x2185 x763) (ite (and x763 x2185 x1516) (x1700 (x5032 x5256)) (x4567 (x5032 x5256))) (x4567 (x5032 x5256))) (x1695 (x5032 x5256))))
(assert (x609 x4195))
(assert (= (ite (and x792 (not x503) x1391 x2651 x2673 x4469) (x2928 x1618) (ite (and x2673 x4469 x792 (not x2651) x1391) (x889 x1618) (ite (and x792 (not x1391) x2673 x4469) (x3588 x1618) (ite (and (not x4469) x2673 x792) (x1796 x1618) (x509 x1618))))) (x2427 x1618)))
(assert (= (x290 x1883) (ite (and (not x1716) x2906 x2884) (x422 x1883) (x4977 x1883))))
(assert (= (x3423 x2750) (ite (and (not x5307) x1226 x4580) (x3532 x2750) (x5334 x2750))))
(assert (= (x4727 x1583) 0))
(assert (x609 x1624))
(assert (x609 x5244))
(assert (x745 x2831))
(assert (= (ite (= x3303 x4438) x1093 (x1849 x4438)) (x4221 x4438)))
(assert (= (x4751 x2865) (ite (= x3886 x2865) x3146 (x984 x2865))))
(assert (= (=> (= x4875 (< x1597 x463)) (and (=> (and (= x471 1) (= x2805 32) (= 274184521717934524641157099916833587240 x4533) (= x937 (x4062 (- x1597 x463))) (not x4875) (= x3927 x2968)) x1677) (=> x4875 x1180))) x4495))
(assert (x609 x45))
(assert (= (ite (= x1086 x2489) x351 (x3107 x2489)) (x3739 x2489)))
(assert (x609 x890))
(assert (x745 x2297))
(assert (x3829 x4198 x1872))
(assert (x609 x3790))
(assert (= (ite (and (not x3191) x1000 x4625) (x2895 x1618) (x2155 x1618)) (x3157 x1618)))
(assert (= x1511 (x4290 (x5032 x1511))))
(assert (x609 x3071))
(assert (x2749 x5211 x659 x1436 x1080))
(assert (= (x4290 (x5032 x3660)) x3660))
(assert (= (x254 x970) (ite (and x5003 x1932) (x3097 x970) (x3596 x970))))
(assert (x609 x4725))
(assert (x609 x4896))
(assert (= (ite (= x487 x4330) 0 (x2852 x4330)) (x550 x4330)))
(assert (x609 x1810))
(assert (=> (> (+ 10000 1) x3610) (= (x5032 x3610) (x4755 x3610))))
(assert (= (x588 x970) (ite (= x970 x4822) x3430 (x2959 x970))))
(assert (= (x1193 x3448) (ite (and x874 (not x5195) x3591) (x3002 x3448) (x2162 x3448))))
(assert (= (x3532 x3448) (ite (and (not x1900) x4580 x1226 x1170 x898 x2099) (x289 x3448) (ite (and x1170 (not x2099) x898 x1226 x4580) (x3739 x3448) (ite (and (not x898) x1170 x1226 x4580) (x3107 x3448) (ite (and x1226 x4580 (not x1170)) (x4184 x3448) (x4895 x3448)))))))
(assert (= 274184521717934524641157099916833587206 (x4290 (x5032 274184521717934524641157099916833587206))))
(assert (= (x2195 x1976) (ite (= x1976 x3498) x2754 (x42 x1976))))
(assert (x609 x3546))
(assert (x609 x3781))
(assert (= (ite (= x3740 x5121) x3039 (x2195 x3740)) (x382 x3740)))
(assert (= (ite (= x5067 x2429) x1282 (x2635 x5067)) (x1796 x5067)))
(assert (x609 x81))
(assert (= (ite (= x4822 x3592) x3430 (x2959 x3592)) (x588 x3592)))
(assert (= (=> (= (> x118 x1057) x4401) (and (=> (not x4401) x201) (=> x4401 x2443))) x2859))
(assert (= (x1264 x2917) (ite (and x2185 x763) (ite (and x1516 x2185 x763) (x1814 x2917) (x1845 x2917)) (x1845 x2917))))
(assert (= (x3729 x53) 0))
(assert (= (x4466 x61) (ite (= x211 x61) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x61))))
(assert (x609 x3478))
(assert (= 0 (x4727 x2299)))
(assert (x609 x629))
(assert (= x4670 (and (not x1716) x2906)))
(assert (x609 x2249))
(assert (x609 x4532))
(assert (x609 x2375))
(assert (x4276 x386 x1310))
(assert (= (x3178 x953) (ite (= x3807 x953) x4939 (x2018 x953))))
(assert (x745 x4497))
(assert (= x2273 (=> (and (= x3836 (< x4386 x3004)) (= x2456 (x4062 (- x2983 x4789))) (= (x2113 (x5032 x598) (x4755 1) 0) x276) (= (x2017 x276) x3004) (= x3451 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (>= x3004 0) (<= x3004 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4062 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4789)) x4386) (= x1600 274184521717934524641157099916833587240)) (and (=> x3836 x4612) (=> (not x3836) x511)))))
(assert (x745 x1928))
(assert (= (x382 x76) (ite (= x5121 x76) x3039 (x2195 x76))))
(assert (x609 x4919))
(assert (= (ite (= x3506 x4642) x3404 (x1678 x4642)) (x3307 x4642)))
(assert (x609 x398))
(assert (= (x1522 x4642) (ite (= x2724 x4642) x1563 (x631 x4642))))
(assert (= (=> (= (< 0 x5139) x3123) (and (=> (not x3123) x5043) (=> x3123 x1403))) x5128))
(assert (x609 x3968))
(assert (x609 x4944))
(assert (x609 x1735))
(assert (= (x4184 x953) (ite (= x2536 x953) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x4995 x953))))
(assert (x609 x5191))
(assert (x609 x2421))
(assert (x609 x3771))
(assert (x609 x332))
(assert (x609 x191))
(assert (= (x1675 x3049) (ite (and x2673 x792 (not x1416)) (x2427 x3049) (x3346 x3049))))
(assert (= (=> (= x2923 (= 274184521717934524641157099916833587206 x1146)) (and (=> (not x2923) x774) (=> (and (= (x4873 (x5032 274184521717934524641157099916833587206)) x375) x2923 (= x3188 1) (not (> 826074471 x4072)) (= x3082 x1969) (= 274184521717934524641157099916833587240 x4378) (> x375 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1617) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x1213) (not (= 826074471 x4072)) (= (x4062 (- x1969 4)) x5227) (= x4072 1889567281) (= (x4257 x1213) x1617) (not (< x1969 4)) (= 32 x4787) (not x419) (<= 0 x1617) (= x3754 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (or (and (= (<= x5227 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x5227 32)) (> x5227 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x419) (= 36 x1969)) x4888))) x1816))
(assert (x609 x4167))
(assert (= (ite (and x763 x2185) (ite (and x763 x1516 x2185) (x1700 (x5032 x3823)) (x4567 (x5032 x3823))) (x4567 (x5032 x3823))) (x1695 (x5032 x3823))))
(assert (x609 x266))
(assert (x609 x5138))
(assert (x4276 x4562 x1364))
(assert (= (ite (and x4600 x4192 x4360 (not x1887) x2875 x4451) (x4618 x4111) (ite (and x4600 x4192 x2875 (not x4360) x4451) (x679 x4111) (ite (and (not x4192) x4600 x4451 x2875) (x1522 x4111) (ite (and (not x2875) x4451 x4600) (x631 x4111) (x2091 x4111))))) (x4816 x4111)))
(assert (x609 x190))
(assert (x609 x1786))
(assert (= (x1638 x1315) (ite (= x1042 x1315) 274184521717934524641157099916833587240 (x5299 x1315))))
(assert (x745 x3169))
(assert (= x3931 (and x2848 (not x646))))
(assert (= (ite x2394 (ite x764 (x4984 (x5032 x4368)) (x1695 (x5032 x4368))) (x689 (x5032 x4368))) (x2044 (x5032 x4368))))
(assert (= (x4716 x1870) (ite x3220 (ite x3129 (x2137 x1870) (x5237 x1870)) (x374 x1870))))
(assert (= x2229 (and (not x4630) x1447)))
(assert (= (ite (= x2489 x282) 0 (x4965 x2489)) (x1571 x2489)))
(assert (= (x3934 x2644) (ite (= x2644 x2867) x4439 (x2356 x2644))))
(assert (x609 x2843))
(assert (= (x156 x1537) (ite (= x1537 x4944) 0 (x2646 x1537))))
(assert (=> (> (+ 10000 1) x172) (= (x5032 x172) (x4755 x172))))
(assert (= (x343 x4642) (ite (= x3339 x4642) 274184521717934524641157099916833587240 (x1125 x4642))))
(assert (= (or (and x4463 x3626) (and (not x3859) x1425) (and x77 x143) (and x2288 x4913) (and x2199 (not x4313)) (and x4775 x655) (and x247 (not x4034)) (and x1023 x1323) (and (not x525) x4242) (and x3336 x768) (and x2748 (not x4662))) x4294))
(assert (x609 x4543))
(assert (= (ite (and x90 x3318) (ite (and x4082 x639 (not x2093)) (x4474 x5225) (x2524 x5225)) (x2524 x5225)) (x183 x5225)))
(assert (= (x1106 x3104) (ite (and x4856 (not x3881) x3497 x4449 x4563 x338) (x4751 x3104) (ite (and (not x4563) x4449 x3497 x338 x4856) (x984 x3104) (ite (and x4449 x338 (not x3497) x4856) (x3007 x3104) (ite (and x338 (not x4449) x4856) (x3032 x3104) (x1224 x3104)))))))
(assert (= (x3776 x835) (ite (= x835 x1591) x1250 (x2617 x835))))
(assert (= (ite (and (not x3343) x4042 x763 x2210 x2185 x809) (x1910 x1315) (ite (and x809 x2185 (not x2210) x4042 x763) (x588 x1315) (ite (and (not x4042) x2185 x809 x763) (x2959 x1315) (ite (and (not x809) x2185 x763) (x3178 x1315) (x4220 x1315))))) (x808 x1315)))
(assert (x609 x197))
(assert (= x4126 (=> (and (= x3195 (< x2858 x4260)) (= x2579 (x2113 (x5032 274184521717934524641157099916833587240) x2268 0)) (= x346 274184521717934524641157099916833587240) (= x2268 (x2113 (x5032 x3993) (x4755 2) 0)) (= x4428 (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0)) (= x199 274184521717934524641157099916833587240) (>= x2858 0) (= x2858 (x2056 x2579)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2858)) (and (=> x3195 x4581) (=> (not x3195) x2045)))))
(assert (= (ite (and (not x1716) x2906 x2884) (x422 x3104) (x4977 x3104)) (x290 x3104)))
(assert (x609 x4530))
(assert (x609 x2989))
(assert (x609 x3212))
(assert (= x2639 (and (not x1596) x2891)))
(assert (x609 x707))
(assert (x609 x5282))
(assert (x609 x2834))
(assert (x609 x4261))
(assert (x609 x4086))
(assert (= (x3934 x953) (ite (= x953 x2867) x4439 (x2356 x953))))
(assert (x609 x1618))
(assert (x609 x952))
(assert (x5318 x4319 x1022))
(assert (= x4570 (=> (= (= 0 x1431) x3219) (and (=> (not x3219) x2248) (=> x3219 x5043)))))
(assert (x609 x2810))
(assert (x609 x4140))
(assert (x609 x2811))
(assert (x609 x5012))
(assert (x609 x4752))
(assert (= x4081 (=> (and (= x3631 x3382) (or (not x5003) (and x4314 (= (x1695 (x5032 274184521717934524641157099916833587240)) x978) (= (<= x978 (x4247 (x5032 274184521717934524641157099916833587240))) x4314) (= (= (x4247 (x5032 x1047)) x484) x3439) x3439 x5003 (> 4294967296 x5156) (= (x1695 (x5032 x1047)) x484))) (= (x1960 (+ x3382 32)) x4128) (= x5003 (< 0 x1959)) (= (x1960 (+ 4 x2241)) x3631) (not (= 0 x1273)) (= (x4873 (x5032 x1047)) x1273) (= x3857 (x5313 1461501637330902918203684832716283019655932542975 x3074))) x1927)))
(assert (=> (> (+ 10000 1) x4101) (= (x4755 x4101) (x5032 x4101))))
(assert (= (=> (and (not (= 117300739 x738)) (< 0 x2406) (< x738 826074471) (= x5004 x215) (= x1520 (x4062 (- x215 4))) (= x215 100) (= x4846 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1520) true) (> 96 x1520)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1520))) (= x2406 (x4873 (x5032 274184521717934524641157099916833587206))) (= x738 599290589) (= x4711 x3470) (= x606 x1486) (not (= 404098525 x738)) (not (< x215 4)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4595) (not (= 157198259 x738))) (and (=> (not x4846) x2511) (=> x4846 x1483))) x5279))
(assert (= (ite x2394 (ite x764 (x1298 x4829) (x4579 x4829)) (x4257 x4829)) (x1681 x4829)))
(assert (x609 x4508))
(assert (= (x3835 x4105) (ite x748 (ite x3421 (x3132 x4105) (x3614 x4105)) (x416 x4105))))
(assert (= (ite (and x3292 x5103 (not x2405)) (x3205 x4245) (x4651 x4245)) (x5167 x4245)))
(assert (x609 x4332))
(assert (x1139 x3772 x1557 x2150 x1181))
(assert (= x22 (and (not x142) x2973)))
(assert (= (x1329 x5067) (ite (= x5067 x4012) 274184521717934524641157099916833587240 (x447 x5067))))
(assert (x609 x3502))
(assert (= (x183 x94) (ite (and x3318 x90) (ite (and x4082 (not x2093) x639) (x4474 x94) (x2524 x94)) (x2524 x94))))
(assert (x609 x2250))
(assert (= (x2707 x1114) (ite (= (x4755 0) x1114) x2630 (x4349 x1114))))
(assert (x609 x3590))
(assert (= (ite (= x3295 x1870) x112 (x3589 x1870)) (x3635 x1870)))
(assert (x609 x4127))
(assert (= 0 (x4727 x1315)))
(assert (x609 x3039))
(assert (= (x3344 x5067) (ite (= x5067 x3778) x1806 (x4728 x5067))))
(assert (x609 x2458))
(assert (= (x3934 x1722) (ite (= x1722 x2867) x4439 (x2356 x1722))))
(assert (x609 x5367))
(assert (x609 x3151))
(assert (= (x4290 (x6 x5089 1)) (+ 1 (x4290 x5089))))
(assert (= (ite (and x763 x2185) (ite (and x2185 x1516 x763) (x1700 (x5032 x4213)) (x4567 (x5032 x4213))) (x4567 (x5032 x4213))) (x1695 (x5032 x4213))))
(assert (x609 x1062))
(assert (x609 x512))
(assert (= (ite (= x1946 x4642) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x4642)) (x3032 x4642)))
(assert (= (ite x2394 (ite x764 (x2058 x4602) (x1264 x4602)) (x3679 x4602)) (x515 x4602)))
(assert (x609 x1390))
(assert (x609 x1825))
(assert (= (ite (= x2867 x4517) x4439 (x2356 x4517)) (x3934 x4517)))
(assert (x609 x3155))
(assert (= x3041 (and x1441 (not x4820))))
(assert (= (ite (= x3303 x2808) x1093 (x1849 x2808)) (x4221 x2808)))
(assert (x609 x2354))
(assert (= (x4466 x5067) (ite (= x211 x5067) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2505 x5067))))
(assert (= (ite (= x2750 x5071) x2253 (x3178 x2750)) (x2959 x2750)))
(assert (= x2538 (=> (and (= (= x1966 0) x4866) (or (and x4866 (= x1870 96)) (and (= x1870 x4919) (= x4253 (x1960 (+ 96 x4790))) (not x4866)))) x1923)))
(assert (x745 x4629))
(assert (x609 x4341))
(assert (= (ite (= x3498 x5121) x2754 (x42 x5121)) (x2195 x5121)))
(assert (= (or (and x1589 x1929) x4053) x1373))
(assert (x609 x4789))
(assert (= (x5124 x3592) (ite (and x763 (not x5359) x2185) (x808 x3592) (x3946 x3592))))
(assert (= (x4561 x5067) (ite (= x2907 x5067) 0 (x1382 x5067))))
(assert (= (ite (= x1315 x5071) x2253 (x3178 x1315)) (x2959 x1315)))
(assert (x609 x3858))
(assert (x609 x981))
(assert (x4289 x2643))
(assert (= x787 (=> (and (= x2069 x3708) (= x2337 (x5313 115792089210356248756420345214020892766250353992003419616917011526809519390720 x2836)) (= x3318 (= x2337 x2836)) (= x2836 (x1837 x3708))) (and (=> (not x3318) x5043) (=> (and (= x3066 (ite x1800 1 0)) (= (x5313 115792089210356248756420345214020892766250353992003419616917011526809519390720 x2836) x1761) (= x3395 x61) (= x1800 (= 9518847204935358166548570266051330015907116135037852959641967396525866745856 x1761)) x3318) x699)))))
(assert (x609 x1232))
(assert (= (x267 x1618) (ite (and x3318 x90) (x1837 x1618) (x4561 x1618))))
(assert (x609 x3447))
(assert (x609 x3383))
(assert (x609 x2494))
(assert (= (ite (= (x4755 0) x49) x2630 (x4349 x49)) (x2707 x49)))
(assert (x609 x1413))
(assert (x609 x161))
(assert (x609 x4366))
(assert (x609 x4438))
(assert (x609 x1835))
(assert (= x1519 (x4290 (x5032 x1519))))
(assert (=> (< (- x852 1) 10000) (= (x5032 x852) (x4755 x852))))
(assert (x609 x4441))
(assert (= (ite (= x2603 x4594) x613 (x569 x4594)) (x3474 x4594)))
(assert (= (ite (= x2429 x788) x1282 (x2635 x788)) (x1796 x788)))
(assert (= x3527 (and (not x2901) x2698)))
(assert (x609 x4713))
(assert (x609 x1983))
(assert (x609 x1049))
(assert (= (x493 160) 0))
(assert (= (x1796 x4833) (ite (= x2429 x4833) x1282 (x2635 x4833))))
(assert (x609 x2715))
(assert (x609 x313))
(assert (x609 x491))
(assert (x609 x2412))
(assert (x79 x4029 x1311 x1844 x181))
(assert (x609 x3849))
(assert (= x3690 (x4290 (x5032 x3690))))
(assert (x609 x4266))
(assert (x609 x2548))
(assert (x609 x3269))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4290 (x4755 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (x609 x3763))
(assert (= (ite (and x4625 (not x3191) x1000) (x2895 x5067) (x2155 x5067)) (x3157 x5067)))
(assert (x4289 x2541))
(assert (x609 x2278))
(assert (= (x3157 x788) (ite (and x4625 (not x3191) x1000) (x2895 x788) (x2155 x788))))
(assert (x4289 x980))
(assert (= (ite (and x1391 x4469 (not x503) x792 x2673 x2651) (x2928 x4773) (ite (and x4469 x792 x2673 (not x2651) x1391) (x889 x4773) (ite (and x4469 x792 x2673 (not x1391)) (x3588 x4773) (ite (and x2673 x792 (not x4469)) (x1796 x4773) (x509 x4773))))) (x2427 x4773)))
(assert (= (x679 x3932) (ite (= x3932 x1715) x4413 (x1522 x3932))))
(assert (= (x3934 x2489) (ite (= x2867 x2489) x4439 (x2356 x2489))))
(assert (x609 x3134))
(assert (x609 x158))
(assert (x609 x2499))
(assert (= (x4290 (x5032 x549)) x549))
(assert (x609 x3180))
(assert (x609 x352))
(assert (= (x3739 x4832) (ite (= x4832 x1086) x351 (x3107 x4832))))
(assert (= (ite (and x2980 x370) (x2266 x3448) (x2127 x3448)) (x3113 x3448)))
(assert (x609 x125))
(assert (x609 x959))
(assert (= (=> (and (= x4955 x1997) (= x2829 x3300)) x3345) x3165))
(assert (= (x2427 x3049) (ite (and x2651 x2673 (not x503) x4469 x1391 x792) (x2928 x3049) (ite (and x2673 (not x2651) x1391 x792 x4469) (x889 x3049) (ite (and (not x1391) x4469 x792 x2673) (x3588 x3049) (ite (and (not x4469) x792 x2673) (x1796 x3049) (x509 x3049)))))))
(assert (x609 x3238))
(assert (= (and x465 x1320) x4599))
(assert (= (=> (and (= (x4873 (x5032 x4363)) x5258) (= (< 0 x5258) x1192) (= (x5313 1461501637330902918203684832716283019655932542975 x3660) x4363)) (and (=> x1192 x505) (=> (and (= x541 x2616) (= x4205 (x4584 (x5032 274184521717934524641157099916833587240))) (= x3733 x4205) (not x1192)) x3017))) x358))
(assert (= (or (and x4824 x868) (and x2180 x2947) (and x1754 x3391)) x908))
(assert (= (x149 x4799) (ite (and x4600 x4451) (ite (and x4193 x4600 x4451) (x3501 x4799) (x4954 x4799)) (x4954 x4799))))
(assert (= x3947 (and x3744 (not x5083))))
(assert (= (x808 x1586) (ite (and x2210 x809 x2185 x4042 x763 (not x3343)) (x1910 x1586) (ite (and x763 x2185 (not x2210) x4042 x809) (x588 x1586) (ite (and x809 (not x4042) x2185 x763) (x2959 x1586) (ite (and x763 x2185 (not x809)) (x3178 x1586) (x4220 x1586)))))))
(assert (x609 x4721))
(assert (= (ite (= x4330 x2724) x1563 (x631 x4330)) (x1522 x4330)))
(assert (x609 x286))
(assert (= (ite (= (x4755 0) x2117) x1325 (x3161 x2117)) (x1017 x2117)))
(assert (= (ite (= x1661 x2429) x1282 (x2635 x1661)) (x1796 x1661)))
(assert (x609 x743))
(assert (= (x3673 x5067) (ite (= x1255 x5067) x4340 (x1886 x5067))))
(assert (= x1449 (=> (= (= x2541 274184521717934524641157099916833587202) x309) (and (=> (not x309) x3980) (=> (and (not (> 4 x3114)) (= x4164 (x4062 (- x3114 4))) (not (= x5387 826074471)) (= x5387 1889567281) (or (and (= 1 x1431) (= x3681 (x3525 x2609)) (>= x3681 0) (not x4994) (<= x3681 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x1467) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x2609) (= x2393 274184521717934524641157099916833587240)) (and (= x1467 x2408) (= x1431 0) x4994)) (= x4994 (or (and (< x4164 32) (= true (<= x4164 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4164))) (not (< x5387 826074471)) (= x3114 36) x309 (< 0 x3726) (= x3114 x3385) (= (x4873 (x5032 274184521717934524641157099916833587202)) x3726) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x314)) x4570)))))
(assert (x609 x3718))
(assert (x745 x3399))
(assert (x79 x2642 x2442 x4181 x2501))
(assert (= (x1571 x282) 0))
(assert (x609 x4000))
(assert (= (x1853 x1658) (ite (= x2892 x1658) x239 (x4466 x1658))))
(assert (= (ite (and (not x4638) x1961 x4853) (x3043 x1870) (x4962 x1870)) (x2463 x1870)))
(assert (= (=> (and (= x2866 (< 0 x4026)) (= (x642 x3049) x4026)) (and (=> x2866 x5308) (=> (not x2866) x1403))) x5226))
(assert (= (x3032 x5351) (ite (= x5351 x1946) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3298 x5351))))
(assert (x609 x2477))
(assert (x609 x593))
(assert (= (x3673 x788) (ite (= x1255 x788) x4340 (x1886 x788))))
(assert (= (x3588 x2527) (ite (= x4745 x2527) x1390 (x1796 x2527))))
(assert (x609 x4704))
(assert (x4289 x3406))
(assert (x609 x1937))
(assert (x609 x1827))
(assert (= (ite (= x2397 x1369) x4375 (x3032 x2397)) (x3007 x2397)))
(assert (x4289 x4145))
(assert (= (ite (and x4451 x4360 x2875 x4600 x4192 (not x1887)) (x4618 x2548) (ite (and x4451 (not x4360) x4600 x2875 x4192) (x679 x2548) (ite (and (not x4192) x2875 x4451 x4600) (x1522 x2548) (ite (and (not x2875) x4451 x4600) (x631 x2548) (x2091 x2548))))) (x4816 x2548)))
(assert (x609 x3987))
(assert (= (x3474 x5173) (ite (= x5173 x2603) x613 (x569 x5173))))
(assert (= (x1466 x3592) (ite (= x3592 x1491) x2444 (x1339 x3592))))
(assert (= x5382 (and x4432 (not x5210))))
(assert (= (x290 x5173) (ite (and (not x1716) x2906 x2884) (x422 x5173) (x4977 x5173))))
(assert (x609 x3834))
(assert (x609 x4315))
(assert (= (x1017 x555) (ite (= (x4755 0) x555) x1325 (x3161 x555))))
(assert (x609 x899))
(assert (= (x1522 x2865) (ite (= x2865 x2724) x1563 (x631 x2865))))
(assert (= (ite (= x2397 x2603) x613 (x569 x2397)) (x3474 x2397)))
(assert (= (x2195 x76) (ite (= x3498 x76) x2754 (x42 x76))))
(assert (= (ite (and x4600 x4451) (x4329 x3104) (x550 x3104)) (x3359 x3104)))
(assert (= (x3474 x2046) (ite (= x2046 x2603) x613 (x569 x2046))))
(assert (x609 x1870))
(assert (x3829 x826 x4083))
(assert (x609 x1645))
(assert (x609 x1066))
(assert (x609 x4145))
(assert (x609 x169))
(assert (= (x4755 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x5032 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (x609 x3823))
(assert (= (x4290 (x4755 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (= (x3344 x2560) (ite (= x2560 x3778) x1806 (x4728 x2560))))
(assert (x609 x4030))
(assert (= (x1225 x2560) (ite (= x2560 x332) x3571 (x1853 x2560))))
(assert (x609 x139))
(assert (x609 x2921))
(assert (x3829 x5374 x3653))
(assert (= (x2928 x3839) (ite (= x3839 x1610) x629 (x889 x3839))))
(assert (x609 x4526))
(assert (= (ite (= x5283 x3477) x1386 (x1956 x3477)) (x4208 x3477)))
(assert (x609 x3189))
(assert (x609 x2545))
(assert (x609 x2247))
(assert (x609 x1911))
(assert (= (ite (= x1255 160) x4340 (x1886 160)) (x3673 160)))
(assert (= (x4755 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x5032 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x4276 x3613 x5289))
(assert (= (x4618 x3447) (ite (= x3447 x4788) x1755 (x679 x3447))))
(assert (x3829 x1396 x3808))
(assert (= (and x2627 x3676) x4777))
(assert (= (ite (and x3318 x90) (x1837 x1870) (x4561 x1870)) (x267 x1870)))
(assert (= (x4755 511946350) (x5032 511946350)))
(assert (= x468 (=> (= (= 274184521717934524641157099916833587206 x3370) x2901) (and (=> (not x2901) x3480) (=> (and (<= 0 x4383) (= 1889567281 x3153) (= (or (and (> 32 x2319) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2319))) (> x2319 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2948) (= x286 36) (not (< x3153 826074471)) (not x2948) x2901 (= x3551 (x4873 (x5032 274184521717934524641157099916833587206))) (= (x2113 (x5032 274184521717934524641157099916833587240) (x4755 1) 0) x3117) (= (x4062 (- x286 4)) x2319) (not (> 4 x286)) (<= x4383 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1095) (= 32 x4021) (= x4383 (x4902 x3117)) (not (= x3153 826074471)) (= x4746 274184521717934524641157099916833587240) (> x3551 0) (= x4785 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x286 x1131)) x174)))))
(assert (= x1604 (and (not x1801) x4215)))
(assert (= (=> (and (= (x2344 (x4755 0)) x1055) (= false x1236) (not (< x1055 1)) (= false x3579)) x4109) x4373))
(assert (= (ite (= x788 x332) x3571 (x1853 x788)) (x1225 x788)))
(assert (= (ite (= x1591 (x4755 0)) x2630 (x4349 x1591)) (x2707 x1591)))
(check-sat)
