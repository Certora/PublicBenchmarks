(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x813 0)) (((x856 (x1169 Real)) (x797 (x309 x813) (x843 Real)) (x441 (x1085 x813) (x284 x813) (x1096 Real)))))
(declare-fun x331 () Real)
(declare-fun x1064 () x813)
(declare-fun x83 (x813) Real)
(declare-fun x157 (x813) Real)
(declare-fun x1052 () x813)
(declare-fun x989 () Bool)
(declare-fun x479 () Bool)
(declare-fun x1264 () x813)
(declare-fun x1267 () Bool)
(declare-fun x782 () x813)
(declare-fun x1263 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x1022 () Real)
(declare-fun x1176 () Real)
(declare-fun x33 () Bool)
(declare-fun x696 () Real)
(declare-fun x1216 () Bool)
(declare-fun x1339 () x813)
(declare-fun x1112 () x813)
(declare-fun x663 () Real)
(declare-fun x448 () x813)
(declare-fun x776 () Real)
(declare-fun x26 () Real)
(declare-fun x14 () Real)
(declare-fun x963 () Bool)
(declare-fun x799 () Real)
(declare-fun x208 () Real)
(declare-fun x140 () Real)
(declare-fun x1172 () Bool)
(declare-fun x867 () Real)
(declare-fun x809 () Real)
(declare-fun x1175 () Real)
(declare-fun x66 () Real)
(declare-fun x1032 () Real)
(declare-fun x1168 () Bool)
(declare-fun x848 () Bool)
(declare-fun x229 () x813)
(declare-fun x269 () Real)
(declare-fun x899 () Real)
(declare-fun x1273 () Real)
(declare-fun x832 () x813)
(declare-fun x1205 () Bool)
(declare-fun x837 () Bool)
(declare-fun x871 () Real)
(declare-fun x626 () Real)
(declare-fun x332 () Bool)
(declare-fun x187 () Bool)
(declare-fun x929 () Real)
(declare-fun x861 () Bool)
(declare-fun x137 () Real)
(declare-fun x764 () Real)
(declare-fun x1028 () Real)
(declare-fun x217 () Bool)
(declare-fun x765 () Bool)
(declare-fun x685 () Real)
(declare-fun x842 () Real)
(declare-fun x1127 () Bool)
(declare-fun x449 () Bool)
(declare-fun x905 () Real)
(declare-fun x226 () Bool)
(declare-fun x922 () Bool)
(declare-fun x388 () x813)
(declare-fun x770 () Bool)
(declare-fun x294 () Bool)
(declare-fun x1317 () Real)
(declare-fun x1292 () Real)
(declare-fun x711 () Bool)
(declare-fun x1002 () Real)
(declare-fun x444 () Bool)
(declare-fun x699 () Real)
(declare-fun x991 () Real)
(declare-fun x670 () Real)
(declare-fun x1323 () Real)
(declare-fun x1012 () Bool)
(declare-fun x1095 () Real)
(declare-fun x616 () Real)
(declare-fun x841 () Real)
(declare-fun x420 () Real)
(declare-fun x1239 () Real)
(declare-fun x795 () Real)
(declare-fun x1041 () Real)
(declare-fun x41 () x813)
(declare-fun x168 () Bool)
(declare-fun x482 () Real)
(declare-fun x162 () Real)
(declare-fun x942 () Bool)
(declare-fun x232 () Real)
(declare-fun x1102 () Bool)
(declare-fun x1164 () x813)
(declare-fun x27 () Bool)
(declare-fun x1010 () x813)
(declare-fun x393 () Bool)
(declare-fun x1144 () x813)
(declare-fun x392 () Real)
(declare-fun x734 (Real) Real)
(declare-fun x1278 () Bool)
(declare-fun x891 () Real)
(declare-fun x136 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x534 () x813)
(declare-fun x1288 () Bool)
(declare-fun x938 () Bool)
(declare-fun x496 () Real)
(declare-fun x485 (Real) Real)
(declare-fun x687 () Real)
(declare-fun x306 () Real)
(declare-fun x282 () Bool)
(declare-fun x1087 () Real)
(declare-fun x214 () Real)
(declare-fun x778 () Real)
(declare-fun x588 () Bool)
(declare-fun x806 () Bool)
(declare-fun x1345 () Real)
(declare-fun x1016 () Real)
(declare-fun x822 () Bool)
(declare-fun x213 () x813)
(declare-fun x749 () Real)
(declare-fun x834 () Real)
(declare-fun x265 () Real)
(declare-fun x784 () Real)
(declare-fun x1082 () Real)
(declare-fun x940 () Real)
(declare-fun x577 () Real)
(declare-fun x1171 () Real)
(declare-fun x511 () Bool)
(declare-fun x1290 () Real)
(declare-fun x1116 (Real) Real)
(declare-fun x965 () Real)
(declare-fun x836 () Bool)
(declare-fun x402 () Real)
(declare-fun x1196 () Real)
(declare-fun x913 () x813)
(declare-fun x1039 () Bool)
(declare-fun x1134 () Real)
(declare-fun x411 () Real)
(declare-fun x707 () x813)
(declare-fun x777 () Real)
(declare-fun x292 () Bool)
(declare-fun x1113 () Real)
(declare-fun x266 () Real)
(declare-fun x975 () Real)
(declare-fun x1146 () Real)
(declare-fun x533 () Bool)
(declare-fun x379 (Real) Real)
(declare-fun x209 () Real)
(declare-fun x380 () Real)
(declare-fun x780 () Real)
(declare-fun x244 () Real)
(declare-fun x872 () x813)
(declare-fun x758 () Real)
(declare-fun x1310 () Bool)
(declare-fun x500 () Bool)
(declare-fun x58 () Real)
(declare-fun x1150 () Bool)
(declare-fun x400 () Real)
(declare-fun x382 () Bool)
(declare-fun x1251 () x813)
(declare-fun x1128 () Real)
(declare-fun x491 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x353 () Real)
(declare-fun x665 () Real)
(declare-fun x556 () Real)
(declare-fun x133 () Real)
(declare-fun x706 () Real)
(declare-fun x183 () Bool)
(declare-fun x1214 () Real)
(declare-fun x1328 () x813)
(declare-fun x404 () Bool)
(declare-fun x1110 () Real)
(declare-fun x1282 () Real)
(declare-fun x394 () Real)
(declare-fun x1042 () Bool)
(declare-fun x1035 () Real)
(declare-fun x661 () Bool)
(declare-fun x80 () x813)
(declare-fun x271 () Real)
(declare-fun x859 () Real)
(declare-fun x881 () Bool)
(declare-fun x688 () Bool)
(declare-fun x502 () Real)
(declare-fun x368 () Real)
(declare-fun x751 () Real)
(declare-fun x840 () x813)
(declare-fun x1048 () Real)
(declare-fun x474 () Bool)
(declare-fun x372 () x813)
(declare-fun x1076 () x813)
(declare-fun x753 () Real)
(declare-fun x445 () x813)
(declare-fun x490 () Real)
(declare-fun x296 () x813)
(declare-fun x116 () Real)
(declare-fun x72 () Real)
(declare-fun x1209 () Real)
(declare-fun x700 () Real)
(declare-fun x701 () Real)
(declare-fun x386 (Real) Real)
(declare-fun x1115 () Bool)
(declare-fun x926 () Real)
(declare-fun x1330 () Bool)
(declare-fun x501 () Bool)
(declare-fun x248 () Real)
(declare-fun x1316 () Real)
(declare-fun x1221 () Real)
(declare-fun x535 () Real)
(declare-fun x737 () Bool)
(declare-fun x335 () Real)
(declare-fun x732 () x813)
(declare-fun x1148 () Real)
(declare-fun x554 () Bool)
(declare-fun x910 () Real)
(declare-fun x878 () Real)
(declare-fun x1228 (x813) Real)
(declare-fun x1341 () x813)
(declare-fun x495 () Real)
(declare-fun x877 () x813)
(declare-fun x602 () x813)
(declare-fun x941 () Real)
(declare-fun x548 () x813)
(declare-fun x793 () x813)
(declare-fun x590 () Real)
(declare-fun x724 () Real)
(declare-fun x882 () Real)
(declare-fun x659 () Real)
(declare-fun x1074 () Real)
(declare-fun x743 () Bool)
(declare-fun x733 () Bool)
(declare-fun x900 () Bool)
(declare-fun x1185 () x813)
(declare-fun x1297 () Real)
(declare-fun x1208 () Bool)
(declare-fun x489 () Real)
(declare-fun x1260 () Real)
(declare-fun x1207 () Bool)
(declare-fun x171 () Real)
(declare-fun x853 () Real)
(declare-fun x255 () Bool)
(declare-fun x451 () Bool)
(declare-fun x760 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x478 () x813)
(declare-fun x21 () Real)
(declare-fun x403 () x813)
(declare-fun x453 (x813) Real)
(declare-fun x816 () Bool)
(declare-fun x1161 () Real)
(declare-fun x424 () Bool)
(declare-fun x932 () Bool)
(declare-fun x611 () Real)
(declare-fun x1212 () Real)
(declare-fun x158 () Bool)
(declare-fun x132 () Real)
(declare-fun x11 () Real)
(declare-fun x230 () Real)
(declare-fun x773 () Bool)
(declare-fun x576 () Bool)
(declare-fun x1197 () Real)
(declare-fun x1141 () Real)
(declare-fun x621 () x813)
(declare-fun x1286 () Real)
(declare-fun x568 () Real)
(declare-fun x811 () Real)
(declare-fun x549 () Real)
(declare-fun x383 () Real)
(declare-fun x1187 () Real)
(declare-fun x1181 () Real)
(declare-fun x944 () Real)
(declare-fun x37 () x813)
(declare-fun x310 () Real)
(declare-fun x558 () Real)
(declare-fun x890 (x813) Real)
(declare-fun x277 () Real)
(declare-fun x951 () Real)
(declare-fun x573 () Real)
(declare-fun x373 () Real)
(declare-fun x19 () x813)
(declare-fun x614 () Real)
(declare-fun x582 () Real)
(declare-fun x359 () Real)
(declare-fun x514 () Bool)
(declare-fun x464 () Bool)
(declare-fun x146 () Bool)
(declare-fun x523 () Bool)
(declare-fun x895 () Real)
(declare-fun x771 () Bool)
(declare-fun x579 () x813)
(declare-fun x246 () Real)
(declare-fun x154 () Bool)
(declare-fun x258 () Real)
(declare-fun x259 () Bool)
(declare-fun x827 () Bool)
(declare-fun x1061 () Real)
(declare-fun x1253 () Real)
(declare-fun x825 () Bool)
(declare-fun x516 () x813)
(declare-fun x139 () x813)
(declare-fun x179 () Real)
(declare-fun x1055 () Bool)
(declare-fun x798 () Real)
(declare-fun x721 () Real)
(declare-fun x757 (x813) Real)
(declare-fun x499 () Real)
(declare-fun x833 () Real)
(declare-fun x493 () Bool)
(declare-fun x57 () x813)
(declare-fun x747 () Real)
(declare-fun x212 () Real)
(declare-fun x1254 () x813)
(declare-fun x1255 () Bool)
(declare-fun x1302 () Real)
(declare-fun x427 () Bool)
(declare-fun x1226 () x813)
(declare-fun x32 () Real)
(declare-fun x349 () Real)
(declare-fun x40 () Real)
(declare-fun x728 () x813)
(declare-fun x1017 () x813)
(declare-fun x705 () x813)
(declare-fun x507 () Bool)
(declare-fun x181 () x813)
(declare-fun x1025 () Real)
(declare-fun x923 () x813)
(declare-fun x726 () Real)
(declare-fun x1249 () Real)
(declare-fun x1319 (x813) Real)
(declare-fun x405 () Bool)
(declare-fun x717 () Bool)
(declare-fun x818 () Real)
(declare-fun x1070 () Real)
(declare-fun x593 () Real)
(declare-fun x1009 () Real)
(declare-fun x1000 () Real)
(declare-fun x617 () Bool)
(declare-fun x681 () Real)
(declare-fun x1020 () Real)
(declare-fun x1242 () x813)
(declare-fun x1024 () x813)
(declare-fun x1340 () Real)
(declare-fun x112 () Real)
(declare-fun x61 () x813)
(declare-fun x20 () Real)
(declare-fun x652 () Real)
(declare-fun x95 () Real)
(declare-fun x562 () x813)
(declare-fun x1097 () Real)
(declare-fun x97 () x813)
(declare-fun x1054 () Real)
(declare-fun x904 () Real)
(declare-fun x528 () Bool)
(declare-fun x245 () Real)
(declare-fun x1248 () Real)
(declare-fun x1206 () x813)
(declare-fun x188 () Real)
(declare-fun x830 () Bool)
(declare-fun x279 () x813)
(declare-fun x149 (x813) Real)
(declare-fun x768 () Real)
(declare-fun x654 () x813)
(declare-fun x767 () Bool)
(declare-fun x847 (x813) Real)
(declare-fun x839 () Real)
(declare-fun x228 () Real)
(declare-fun x1235 () Real)
(declare-fun x39 () Bool)
(declare-fun x31 () Bool)
(declare-fun x1307 (x813) Real)
(declare-fun x1029 () Real)
(declare-fun x1165 () Bool)
(declare-fun x945 () x813)
(declare-fun x452 () Bool)
(declare-fun x703 () Real)
(declare-fun x1217 () Real)
(declare-fun x601 () Bool)
(declare-fun x67 () Real)
(declare-fun x454 () x813)
(declare-fun x999 () Real)
(declare-fun x465 () x813)
(declare-fun x17 () Real)
(declare-fun x93 () x813)
(declare-fun x796 () Real)
(declare-fun x1060 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x164 () Real)
(declare-fun x190 () Bool)
(declare-fun x1152 () x813)
(declare-fun x422 () Bool)
(declare-fun x343 () x813)
(declare-fun x358 () Real)
(declare-fun x200 () x813)
(declare-fun x648 () Bool)
(declare-fun x101 () Real)
(declare-fun x931 () Real)
(declare-fun x360 () Real)
(declare-fun x713 () Real)
(declare-fun x708 () x813)
(declare-fun x1132 () Real)
(declare-fun x1036 () Real)
(declare-fun x960 () x813)
(declare-fun x678 () Real)
(declare-fun x107 () Bool)
(declare-fun x645 (Real) Real)
(declare-fun x800 () Bool)
(declare-fun x1245 () Real)
(declare-fun x247 () Bool)
(declare-fun x964 () x813)
(declare-fun x273 () Real)
(declare-fun x1149 () x813)
(declare-fun x571 () Real)
(declare-fun x969 () Real)
(declare-fun x86 () Real)
(declare-fun x1247 () Real)
(declare-fun x302 () Bool)
(declare-fun x267 () Real)
(declare-fun x1308 () Bool)
(declare-fun x855 () Real)
(declare-fun x550 () Real)
(declare-fun x651 () Real)
(declare-fun x487 () Real)
(declare-fun x921 () Real)
(declare-fun x1120 () Bool)
(declare-fun x498 () Real)
(declare-fun x638 () Bool)
(declare-fun x977 () Real)
(declare-fun x962 () Real)
(declare-fun x1277 () Real)
(declare-fun x1140 () Real)
(declare-fun x10 () Real)
(declare-fun x475 () x813)
(declare-fun x370 () Real)
(declare-fun x74 () Bool)
(declare-fun x1346 () Real)
(declare-fun x997 () Bool)
(declare-fun x311 () Real)
(declare-fun x442 () Bool)
(declare-fun x636 () Real)
(declare-fun x1114 () Real)
(declare-fun x702 () Bool)
(declare-fun x152 () Real)
(declare-fun x1098 () Real)
(declare-fun x251 () Real)
(declare-fun x1026 () x813)
(declare-fun x1296 () Real)
(declare-fun x455 () Real)
(declare-fun x781 () Bool)
(declare-fun x594 () Bool)
(declare-fun x789 () Real)
(declare-fun x233 () Bool)
(declare-fun x540 () Bool)
(declare-fun x417 () Real)
(declare-fun x88 () Real)
(declare-fun x1312 () Bool)
(declare-fun x1198 (Real) Real)
(declare-fun x467 () Bool)
(declare-fun x1200 () Real)
(declare-fun x122 () Real)
(declare-fun x783 () Bool)
(declare-fun x1329 () Real)
(declare-fun x1111 () Real)
(declare-fun x934 () Bool)
(declare-fun x128 () Bool)
(declare-fun x1083 () Real)
(declare-fun x759 () Bool)
(declare-fun x178 () Bool)
(declare-fun x911 () Real)
(declare-fun x916 () Real)
(declare-fun x1084 () Real)
(declare-fun x1265 () Real)
(declare-fun x35 () Real)
(declare-fun x918 () x813)
(declare-fun x1101 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x1183 () Real)
(declare-fun x506 () Bool)
(declare-fun x476 () Real)
(declare-fun x299 () x813)
(declare-fun x1091 () Real)
(declare-fun x1252 () Real)
(declare-fun x125 () Bool)
(declare-fun x763 (x813) Real)
(declare-fun x118 () Real)
(declare-fun x76 () Bool)
(declare-fun x242 () x813)
(declare-fun x553 () Real)
(declare-fun x339 () Bool)
(declare-fun x1094 () Real)
(declare-fun x892 () Real)
(declare-fun x982 () Real)
(declare-fun x735 () Real)
(declare-fun x44 () Real)
(declare-fun x1154 () Real)
(declare-fun x1218 () x813)
(declare-fun x860 () Bool)
(declare-fun x398 () x813)
(declare-fun x24 () Real)
(declare-fun x1334 () x813)
(declare-fun x307 () Real)
(declare-fun x600 () Bool)
(declare-fun x618 () Bool)
(declare-fun x285 () Real)
(declare-fun x249 () Real)
(declare-fun x262 () Real)
(declare-fun x650 () Real)
(declare-fun x559 () Bool)
(declare-fun x937 () Real)
(declare-fun x1237 () Real)
(declare-fun x630 () Real)
(declare-fun x254 () Real)
(declare-fun x1092 () Bool)
(declare-fun x518 (Real Real) Real)
(declare-fun x237 () Bool)
(declare-fun x957 () Real)
(declare-fun x629 () Bool)
(declare-fun x12 () x813)
(declare-fun x668 () x813)
(declare-fun x543 () Bool)
(declare-fun x695 () Real)
(declare-fun x89 () Bool)
(declare-fun x924 () Bool)
(declare-fun x1347 () x813)
(declare-fun x1270 () Real)
(declare-fun x1086 () Real)
(declare-fun x1336 () Real)
(declare-fun x185 () Bool)
(declare-fun x505 (Real) Real)
(declare-fun x849 () Real)
(declare-fun x148 () Real)
(declare-fun x421 () x813)
(declare-fun x865 () Real)
(declare-fun x530 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x526 (Real) Real)
(declare-fun x317 () Real)
(declare-fun x415 () x813)
(declare-fun x414 () Real)
(declare-fun x897 () x813)
(declare-fun x115 () Real)
(declare-fun x1145 () Bool)
(declare-fun x605 () Real)
(declare-fun x460 () x813)
(declare-fun x303 () Real)
(declare-fun x396 () x813)
(declare-fun x741 () x813)
(declare-fun x983 () Real)
(declare-fun x712 () Real)
(declare-fun x794 () Real)
(declare-fun x430 () Real)
(declare-fun x1019 () Bool)
(declare-fun x570 () Real)
(declare-fun x943 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x150 () Bool)
(declare-fun x578 () Real)
(declare-fun x1109 () Real)
(declare-fun x1351 () Real)
(declare-fun x936 () x813)
(declare-fun x463 () Real)
(declare-fun x722 () Bool)
(declare-fun x774 () Real)
(declare-fun x521 () Real)
(declare-fun x264 (Real) Real)
(declare-fun x680 () Real)
(declare-fun x429 () Bool)
(declare-fun x1006 () x813)
(declare-fun x1348 () Real)
(declare-fun x862 () x813)
(declare-fun x718 () Real)
(declare-fun x174 () Real)
(declare-fun x887 () x813)
(declare-fun x319 () Real)
(declare-fun x786 () Real)
(declare-fun x298 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x1204 () Real)
(declare-fun x1186 () Bool)
(declare-fun x819 () Bool)
(declare-fun x327 () Real)
(declare-fun x494 () Real)
(declare-fun x322 () Real)
(declare-fun x275 () Real)
(declare-fun x1241 () Real)
(declare-fun x1215 () Real)
(declare-fun x207 () Real)
(declare-fun x731 () Bool)
(declare-fun x551 () Bool)
(declare-fun x656 () Real)
(declare-fun x643 () Real)
(declare-fun x858 () Real)
(declare-fun x716 () Real)
(declare-fun x563 () Real)
(declare-fun x664 () Real)
(declare-fun x48 () Bool)
(declare-fun x13 () Bool)
(declare-fun x216 () x813)
(declare-fun x473 () Real)
(declare-fun x356 () Real)
(declare-fun x384 () Real)
(declare-fun x698 () Bool)
(declare-fun x377 () x813)
(declare-fun x1117 () Real)
(declare-fun x211 () Real)
(declare-fun x1192 () Real)
(declare-fun x134 () x813)
(declare-fun x320 (x813) Real)
(declare-fun x50 () Real)
(declare-fun x613 () Real)
(declare-fun x1069 () Bool)
(declare-fun x483 () x813)
(declare-fun x5 () Bool)
(declare-fun x321 () Real)
(declare-fun x145 () Real)
(declare-fun x196 () Real)
(declare-fun x1188 () Bool)
(declare-fun x1299 () Real)
(declare-fun x565 () Real)
(declare-fun x124 () Bool)
(declare-fun x418 () Real)
(declare-fun x1158 () Bool)
(declare-fun x1275 () Real)
(declare-fun x180 () Bool)
(declare-fun x260 () Real)
(declare-fun x1073 () Real)
(declare-fun x993 () Bool)
(declare-fun x893 () x813)
(declare-fun x120 () Real)
(declare-fun x1229 () Bool)
(declare-fun x225 () Bool)
(declare-fun x105 (Real) Real)
(declare-fun x812 () x813)
(declare-fun x694 (Real) Real)
(declare-fun x378 () Real)
(declare-fun x419 () Real)
(declare-fun x1342 () Real)
(declare-fun x18 () Real)
(declare-fun x1315 () Real)
(declare-fun x976 (Real) Real)
(declare-fun x361 () Real)
(declare-fun x978 () x813)
(declare-fun x70 () Real)
(declare-fun x788 () Real)
(declare-fun x1182 () Bool)
(declare-fun x439 () Real)
(declare-fun x673 (x813) Real)
(declare-fun x990 () Bool)
(declare-fun x586 () Bool)
(declare-fun x138 () Bool)
(declare-fun x538 () Real)
(declare-fun x1047 () Real)
(declare-fun x557 () Real)
(declare-fun x1179 () x813)
(declare-fun x1272 () Real)
(declare-fun x820 () Real)
(declare-fun x1156 (Real) Real)
(declare-fun x596 () Bool)
(declare-fun x313 (Real) Real)
(declare-fun x524 () x813)
(declare-fun x436 () Real)
(declare-fun x1279 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x542 () Real)
(declare-fun x1075 () Bool)
(declare-fun x915 () x813)
(declare-fun x580 () Bool)
(declare-fun x1289 () Real)
(declare-fun x1178 () Real)
(declare-fun x1332 () x813)
(declare-fun x907 () Real)
(declare-fun x1100 () Real)
(declare-fun x785 (Real) Real)
(declare-fun x804 () Real)
(declare-fun x864 () x813)
(declare-fun x889 () Real)
(declare-fun x879 () Real)
(declare-fun x219 () Real)
(declare-fun x221 () x813)
(declare-fun x304 () Real)
(declare-fun x791 () x813)
(declare-fun x29 () Real)
(declare-fun x928 () Real)
(declare-fun x160 () Real)
(declare-fun x1157 () x813)
(declare-fun x1153 () Real)
(declare-fun x468 (x813) Real)
(declare-fun x575 () Real)
(declare-fun x1147 () Real)
(declare-fun x646 () Real)
(declare-fun x1238 () Bool)
(declare-fun x218 () Real)
(declare-fun x779 () Real)
(declare-fun x352 () Bool)
(declare-fun x224 () Real)
(declare-fun x884 () Bool)
(declare-fun x1034 () Real)
(declare-fun x745 () Real)
(declare-fun x597 () Bool)
(declare-fun x1023 () Real)
(declare-fun x484 () Real)
(declare-fun x59 () Real)
(declare-fun x1240 () Real)
(declare-fun x845 () Real)
(declare-fun x1053 () x813)
(declare-fun x7 () x813)
(declare-fun x78 () Real)
(declare-fun x715 () Bool)
(declare-fun x766 () Real)
(declare-fun x151 () x813)
(declare-fun x729 () Bool)
(declare-fun x639 () Bool)
(declare-fun x103 (x813) Real)
(declare-fun x462 () Real)
(declare-fun x471 (Real) Real)
(declare-fun x903 () Real)
(declare-fun x155 () Real)
(declare-fun x375 () Bool)
(declare-fun x569 () Real)
(declare-fun x740 () Real)
(declare-fun x425 () Real)
(declare-fun x1160 () Bool)
(declare-fun x529 () Real)
(declare-fun x584 () Real)
(declare-fun x536 () Real)
(declare-fun x111 () Bool)
(declare-fun x1326 () x813)
(declare-fun x1202 () Real)
(declare-fun x297 () Real)
(declare-fun x992 () Bool)
(declare-fun x666 () Real)
(declare-fun x1133 () Real)
(declare-fun x624 () Bool)
(declare-fun x433 () Bool)
(declare-fun x1159 () Real)
(declare-fun x1338 () Real)
(declare-fun x1136 () Real)
(declare-fun x1184 () x813)
(declare-fun x135 () Real)
(declare-fun x603 () Real)
(declare-fun x635 () Real)
(declare-fun x1191 () Real)
(declare-fun x492 () Real)
(declare-fun x170 () x813)
(declare-fun x362 () Real)
(declare-fun x634 (Real) x813)
(declare-fun x268 () x813)
(declare-fun x835 () Real)
(declare-fun x381 () Real)
(declare-fun x191 () x813)
(declare-fun x64 () Bool)
(declare-fun x1291 () Real)
(declare-fun x1227 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x84 () x813)
(declare-fun x564 () Real)
(declare-fun x1008 () x813)
(declare-fun x329 () Real)
(declare-fun x1005 () Bool)
(declare-fun x980 () Real)
(declare-fun x323 () Bool)
(declare-fun x206 () Real)
(declare-fun x466 () Bool)
(declare-fun x1079 () x813)
(declare-fun x660 () Real)
(declare-fun x503 () x813)
(declare-fun x1031 () Real)
(declare-fun x671 () Bool)
(declare-fun x560 () Bool)
(declare-fun x693 () Bool)
(declare-fun x281 () Bool)
(declare-fun x28 () x813)
(declare-fun x1199 () x813)
(declare-fun x644 () Real)
(declare-fun x691 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x792 () Bool)
(declare-fun x769 () Real)
(declare-fun x676 () Real)
(declare-fun x1343 () Real)
(declare-fun x1327 () Bool)
(declare-fun x1276 () x813)
(declare-fun x995 () Real)
(declare-fun x821 () Real)
(declare-fun x129 () Real)
(declare-fun x886 () Bool)
(declare-fun x435 () Real)
(declare-fun x437 () Bool)
(declare-fun x42 () Real)
(declare-fun x46 () x813)
(declare-fun x744 () Real)
(declare-fun x1318 (x813) Real)
(declare-fun x283 () Bool)
(declare-fun x77 () Bool)
(declare-fun x338 () Real)
(declare-fun x202 () Bool)
(declare-fun x106 () Bool)
(declare-fun x589 () Real)
(declare-fun x967 () Real)
(declare-fun x986 () Real)
(declare-fun x954 () Real)
(declare-fun x369 () x813)
(declare-fun x689 () Bool)
(declare-fun x512 () Real)
(declare-fun x450 () Bool)
(declare-fun x312 () Real)
(declare-fun x1030 () Real)
(declare-fun x508 () Real)
(declare-fun x236 (x813) Real)
(declare-fun x210 () Real)
(declare-fun x1088 () Real)
(declare-fun x1223 () Real)
(declare-fun x998 (x813) Real)
(declare-fun x51 () Real)
(declare-fun x1118 () Real)
(declare-fun x1262 () Real)
(declare-fun x692 () Real)
(declare-fun x52 () Real)
(declare-fun x719 () Bool)
(declare-fun x710 () x813)
(declare-fun x186 () Bool)
(declare-fun x953 () Real)
(declare-fun x952 () Real)
(declare-fun x36 () x813)
(declare-fun x609 () Real)
(declare-fun x1322 () Real)
(declare-fun x114 () Real)
(declare-fun x939 () Bool)
(declare-fun x407 () Real)
(declare-fun x1256 () Bool)
(declare-fun x376 () Bool)
(declare-fun x958 () Real)
(declare-fun x823 () Real)
(declare-fun x1037 () Real)
(declare-fun x876 () x813)
(declare-fun x1040 () Real)
(declare-fun x87 () Real)
(declare-fun x457 (Real) Real)
(declare-fun x102 () Real)
(declare-fun x22 () Real)
(declare-fun x1311 () Real)
(declare-fun x177 () Real)
(declare-fun x410 () Real)
(declare-fun x85 () Real)
(declare-fun x1232 () Real)
(declare-fun x772 (x813) Real)
(declare-fun x583 () Real)
(declare-fun x1125 () x813)
(declare-fun x223 () Real)
(declare-fun x293 () x813)
(declare-fun x1001 () Real)
(declare-fun x672 () Real)
(declare-fun x610 () Bool)
(declare-fun x127 () Real)
(declare-fun x746 () Real)
(declare-fun x189 () x813)
(declare-fun x288 () Bool)
(declare-fun x775 () Real)
(declare-fun x637 () Real)
(declare-fun x350 () Real)
(declare-fun x3 () Real)
(declare-fun x755 () Real)
(declare-fun x979 () Bool)
(declare-fun x866 () x813)
(declare-fun x428 () Real)
(declare-fun x831 () Real)
(declare-fun x1045 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x163 () Real)
(declare-fun x537 () Bool)
(declare-fun x431 () Real)
(declare-fun x287 () Real)
(declare-fun x1124 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x477 () Bool)
(declare-fun x955 () x813)
(declare-fun x519 () Real)
(declare-fun x326 () Bool)
(declare-fun x709 () Real)
(declare-fun x857 () Bool)
(declare-fun x123 () Real)
(declare-fun x234 () Real)
(declare-fun x63 () Real)
(declare-fun x880 () x813)
(declare-fun x342 () Real)
(declare-fun x68 () Real)
(declare-fun x956 () Real)
(declare-fun x510 () Bool)
(declare-fun x1230 () Real)
(declare-fun x4 () Real)
(declare-fun x987 () Real)
(declare-fun x291 () Bool)
(declare-fun x34 (Real) Real)
(declare-fun x443 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x647 () Real)
(declare-fun x720 () x813)
(declare-fun x1121 () x813)
(declare-fun x1236 () Bool)
(declare-fun x566 () Real)
(declare-fun x159 () Real)
(declare-fun x1057 () Bool)
(declare-fun x595 () Real)
(declare-fun x874 () Real)
(declare-fun x674 () Real)
(declare-fun x599 () x813)
(declare-fun x82 () Real)
(declare-fun x974 () x813)
(declare-fun x1349 () Real)
(declare-fun x632 () x813)
(declare-fun x169 () Real)
(declare-fun x220 () Real)
(declare-fun x801 () Bool)
(declare-fun x480 () Bool)
(declare-fun x308 () Real)
(declare-fun x1068 () Real)
(declare-fun x166 () Real)
(declare-fun x950 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x1313 () Real)
(declare-fun x314 () Real)
(declare-fun x642 () Real)
(declare-fun x1280 () Real)
(declare-fun x838 () Real)
(declare-fun x92 () Bool)
(declare-fun x413 () x813)
(declare-fun x345 () Bool)
(declare-fun x547 () Real)
(declare-fun x873 () Real)
(declare-fun x883 () Bool)
(declare-fun x625 () Real)
(declare-fun x994 () Real)
(declare-fun x970 () x813)
(declare-fun x389 () x813)
(declare-fun x761 () Real)
(declare-fun x235 () Bool)
(declare-fun x631 () Real)
(declare-fun x488 () Real)
(declare-fun x385 () Real)
(declare-fun x1138 () x813)
(declare-fun x1038 () Real)
(declare-fun x1195 () Real)
(declare-fun x686 () Real)
(declare-fun x1177 () Bool)
(declare-fun x412 () Real)
(declare-fun x513 () Real)
(declare-fun x1285 () Real)
(declare-fun x1135 (Real) Real)
(declare-fun x619 () x813)
(declare-fun x984 () x813)
(declare-fun x458 () x813)
(declare-fun x927 () Real)
(declare-fun x316 () Real)
(declare-fun x829 () Real)
(declare-fun x1 () Real)
(declare-fun x1106 () Real)
(declare-fun x581 () Bool)
(declare-fun x1077 () Real)
(declare-fun x194 () Bool)
(declare-fun x270 () Real)
(declare-fun x456 () Real)
(declare-fun x75 () Real)
(declare-fun x481 () Real)
(declare-fun x1066 () Real)
(declare-fun x131 () Real)
(declare-fun x948 () x813)
(declare-fun x121 () Real)
(declare-fun x935 () Bool)
(declare-fun x790 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x391 () Bool)
(declare-fun x395 () Real)
(declare-fun x817 () x813)
(declare-fun x1013 () Bool)
(declare-fun x355 () Real)
(declare-fun x622 () Real)
(declare-fun x199 () Real)
(declare-fun x598 () Real)
(declare-fun x727 () Real)
(declare-fun x539 () x813)
(declare-fun x615 () Bool)
(declare-fun x1058 () Real)
(declare-fun x328 () x813)
(declare-fun x173 () x813)
(declare-fun x426 () x813)
(declare-fun x1173 () Real)
(declare-fun x1107 (Real) Real)
(declare-fun x469 () Bool)
(declare-fun x1071 () x813)
(declare-fun x8 () Bool)
(declare-fun x100 () Bool)
(declare-fun x1104 () x813)
(declare-fun x912 () Real)
(declare-fun x546 () Bool)
(declare-fun x222 () Real)
(declare-fun x459 (x813) Real)
(declare-fun x142 () x813)
(declare-fun x239 () x813)
(declare-fun x592 () Real)
(declare-fun x1072 () x813)
(declare-fun x69 () Real)
(declare-fun x750 () Real)
(declare-fun x1309 () x813)
(declare-fun x192 () Real)
(declare-fun x1293 () Real)
(declare-fun x885 () Bool)
(declare-fun x231 () Real)
(declare-fun x141 () Bool)
(declare-fun x60 () Real)
(declare-fun x1268 () Real)
(declare-fun x1170 () Real)
(declare-fun x253 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x930 () x813)
(declare-fun x261 () Real)
(declare-fun x446 () Real)
(declare-fun x679 () Bool)
(declare-fun x807 () Bool)
(declare-fun x657 () Real)
(declare-fun x276 () Bool)
(declare-fun x909 () Bool)
(declare-fun x250 () Real)
(declare-fun x203 () x813)
(declare-fun x201 (x813) Real)
(declare-fun x754 () Real)
(declare-fun x9 () Real)
(declare-fun x572 () x813)
(declare-fun x215 () Real)
(declare-fun x1051 () Real)
(declare-fun x56 () Real)
(declare-fun x628 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x108 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x697 () Real)
(declare-fun x585 (Real) Real)
(declare-fun x423 (Real) Real)
(declare-fun x972 () Real)
(declare-fun x318 () Real)
(declare-fun x204 () Bool)
(declare-fun x1203 () Real)
(declare-fun x90 () x813)
(declare-fun x300 () Real)
(declare-fun x888 () Real)
(declare-fun x810 () Real)
(declare-fun x53 () Real)
(declare-fun x1167 () Real)
(declare-fun x742 () Real)
(declare-fun x730 () Bool)
(declare-fun x315 () x813)
(declare-fun x985 () Real)
(declare-fun x669 () Bool)
(declare-fun x675 () Real)
(declare-fun x902 () x813)
(declare-fun x966 () Real)
(declare-fun x45 () x813)
(declare-fun x55 () Real)
(declare-fun x541 () Bool)
(declare-fun x756 () Real)
(declare-fun x567 () Real)
(declare-fun x1295 () Real)
(declare-fun x1119 () x813)
(declare-fun x416 () Bool)
(declare-fun x336 () Real)
(declare-fun x351 () Real)
(declare-fun x397 () Real)
(declare-fun x399 () Real)
(declare-fun x870 () Real)
(declare-fun x545 () Real)
(declare-fun x337 () Real)
(declare-fun x96 () Real)
(declare-fun x1287 () Real)
(declare-fun x988 () Real)
(declare-fun x1018 () Bool)
(declare-fun x130 () Real)
(declare-fun x662 () Real)
(declare-fun x301 () Real)
(declare-fun x1305 () x813)
(declare-fun x1015 () x813)
(declare-fun x1078 () Bool)
(declare-fun x184 () Real)
(declare-fun x875 () x813)
(declare-fun x1007 () Bool)
(declare-fun x1337 () Real)
(declare-fun x16 () Real)
(declare-fun x973 () x813)
(declare-fun x1303 () Real)
(declare-fun x933 () Real)
(declare-fun x1044 () Real)
(declare-fun x79 () Real)
(declare-fun x113 () Real)
(declare-fun x947 () Real)
(declare-fun x640 () Real)
(declare-fun x919 () Real)
(declare-fun x341 () Real)
(declare-fun x1123 (x813) Real)
(declare-fun x682 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x949 () Real)
(declare-fun x802 (Real) Real)
(declare-fun x863 () Real)
(declare-fun x846 () Real)
(declare-fun x906 () Real)
(declare-fun x1131 () Real)
(declare-fun x367 () Real)
(declare-fun x156 () Real)
(declare-fun x961 () Real)
(declare-fun x330 () x813)
(declare-fun x946 () Real)
(declare-fun x447 () Real)
(declare-fun x606 () Real)
(declare-fun x2 () x813)
(declare-fun x172 () Bool)
(declare-fun x257 () Real)
(declare-fun x1129 () Real)
(declare-fun x62 () Real)
(declare-fun x1139 () x813)
(declare-fun x532 () Bool)
(declare-fun x1250 () Real)
(declare-fun x347 () Bool)
(declare-fun x81 () Real)
(declare-fun x623 () x813)
(declare-fun x677 () Bool)
(declare-fun x366 () Real)
(declare-fun x401 () Real)
(declare-fun x787 () Bool)
(declare-fun x1314 (Real Real) Real)
(declare-fun x109 () Bool)
(declare-fun x604 () x813)
(declare-fun x1321 () Real)
(declare-fun x1294 () Real)
(declare-fun x714 () Real)
(declare-fun x1225 () Bool)
(declare-fun x38 () Real)
(declare-fun x408 () x813)
(declare-fun x1335 () Real)
(declare-fun x240 () Real)
(declare-fun x959 () Bool)
(declare-fun x1103 () Real)
(declare-fun x971 () Bool)
(declare-fun x591 () Bool)
(declare-fun x1155 () Real)
(declare-fun x1126 () Bool)
(declare-fun x290 () Real)
(declare-fun x1220 () x813)
(declare-fun x461 () Bool)
(declare-fun x71 () x813)
(declare-fun x1201 () Real)
(declare-fun x704 () Real)
(declare-fun x73 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x409 () Real)
(declare-fun x658 () Real)
(declare-fun x65 () Real)
(declare-fun x348 () Real)
(declare-fun x363 () x813)
(declare-fun x844 () x813)
(declare-fun x110 () Bool)
(declare-fun x289 () x813)
(declare-fun x1062 () x813)
(declare-fun x182 () Real)
(declare-fun x736 () Real)
(declare-fun x387 () Real)
(declare-fun x167 () Bool)
(declare-fun x504 () Real)
(declare-fun x525 () Bool)
(declare-fun x655 () Real)
(declare-fun x49 () Bool)
(declare-fun x925 () Bool)
(declare-fun x515 () Real)
(declare-fun x497 () Bool)
(declare-fun x896 () Bool)
(declare-fun x256 () x813)
(declare-fun x1067 () Real)
(declare-fun x432 () Real)
(declare-fun x6 () Real)
(declare-fun x486 () x813)
(declare-fun x683 () Bool)
(declare-fun x850 () x813)
(declare-fun x470 () x813)
(declare-fun x406 () Real)
(declare-fun x1258 () Bool)
(declare-fun x552 () Real)
(declare-fun x914 () Real)
(declare-fun x633 () x813)
(declare-fun x344 () Real)
(declare-fun x1105 () Real)
(declare-fun x325 () Bool)
(declare-fun x805 () Real)
(declare-fun x917 () Real)
(declare-fun x920 () Real)
(declare-fun x517 () Real)
(declare-fun x641 () Real)
(declare-fun x99 () Real)
(declare-fun x869 () Real)
(declare-fun x153 () Real)
(declare-fun x346 () Bool)
(declare-fun x126 () Real)
(declare-fun x814 () Real)
(declare-fun x520 (Real) Real)
(declare-fun x25 () Bool)
(declare-fun x1065 () Real)
(declare-fun x1266 () Real)
(declare-fun x723 () Real)
(declare-fun x1301 () Real)
(declare-fun x667 () x813)
(declare-fun x263 () x813)
(declare-fun x175 () Real)
(declare-fun x365 () x813)
(declare-fun x826 () Real)
(declare-fun x854 () Real)
(declare-fun x280 () Real)
(declare-fun x252 (Real) Real)
(declare-fun x981 () x813)
(declare-fun x574 () Real)
(define-fun x1027 ((x813 x813) (x278 Real)) x813 (ite ((_ is x797) x813) (x797 (x309 x813) (+ (x843 x813) x278)) (ite ((_ is x441) x813) (x441 (x1085 x813) (x284 x813) (+ (x1096 x813) x278)) (x856 (+ (x1169 x813) x278)))))
(define-fun x1081 ((x1143 Real)) Real (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143) (<= 0 x1143)) x1143 (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x286 ((x1143 Real)) Real (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1143) (> 0 x1143)) (+ x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1143))
(define-fun x803 ((x1283 Real)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1283) (>= x1283 0)))
(define-fun x1190 ((x1283 Real)) Bool (and (= (x1314 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1283) x1283) (= x1283 (x1314 x1283 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x15 ((x1283 Real)) Bool (and (= 0 (x1314 0 x1283)) (= (x1314 x1283 0) 0)))
(define-fun x434 ((x1283 Real)) Bool (= x1283 (x1314 x1283 x1283)))
(define-fun x334 ((x1283 Real)) Bool (and (x434 x1283) (x1190 x1283) (x15 x1283)))
(define-fun x272 ((x1283 Real)) Bool (= (x1314 1461501637330902918203684832716283019655932542975 (x1314 1461501637330902918203684832716283019655932542975 x1283)) (x1314 1461501637330902918203684832716283019655932542975 x1283)))
(define-fun x1244 ((x1283 Real)) Bool (=> (and (<= 0 x1283) (> 1461501637330902918203684832716283019655932542976 x1283)) (= (x1314 1461501637330902918203684832716283019655932542975 x1283) x1283)))
(define-fun x472 ((x1283 Real)) Bool (=> (= x1283 (x1314 1461501637330902918203684832716283019655932542975 x1283)) (and (>= x1283 0) (> 1461501637330902918203684832716283019655932542976 x1283))))
(define-fun x587 ((x1283 Real)) Bool (=> (and (< x1283 2923003274661805836407369665432566039311865085952) (>= x1283 1461501637330902918203684832716283019655932542976)) (= (- x1283 1461501637330902918203684832716283019655932542976) (x1314 1461501637330902918203684832716283019655932542975 x1283))))
(define-fun x390 ((x1283 Real) (x374 Real)) Bool (and (>= x374 0) (= x1283 (+ (* x374 1461501637330902918203684832716283019655932542976) (x1314 1461501637330902918203684832716283019655932542975 x1283)))))
(define-fun x1219 ((x1283 Real) (x295 Real)) Bool (and (x390 x1283 x295) (x587 x1283) (x472 x1283) (x272 x1283) (x1244 x1283)))
(define-fun x1014 ((x1283 Real) (x374 Real)) Bool (= (x1314 x1283 x374) (x1314 x374 x1283)))
(define-fun x1222 ((x1283 Real) (x374 Real)) Bool (and (<= 0 (x1314 x1283 x374)) (=> (<= 0 x374) (<= (x1314 x1283 x374) x374)) (=> (>= x1283 0) (<= (x1314 x1283 x374) x1283))))
(define-fun x739 ((x1283 Real) (x374 Real)) Bool (and (x1014 x1283 x374) (x1222 x1283 x374)))
(define-fun x54 ((x1283 Real) (x295 Real)) Bool (and (x739 x1283 1461501637330902918203684832716283019655932542975) (x1219 x1283 x295)))
(define-fun x1259 ((x1283 Real)) Bool (= (x1314 26959946667150639794667015087019630673637144422540572481103610249215 (x1314 26959946667150639794667015087019630673637144422540572481103610249215 x1283)) (x1314 26959946667150639794667015087019630673637144422540572481103610249215 x1283)))
(define-fun x607 ((x1283 Real)) Bool (=> (and (>= x1283 0) (< x1283 26959946667150639794667015087019630673637144422540572481103610249216)) (= x1283 (x1314 26959946667150639794667015087019630673637144422540572481103610249215 x1283))))
(define-fun x1122 ((x1283 Real)) Bool (=> (= (x1314 26959946667150639794667015087019630673637144422540572481103610249215 x1283) x1283) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x1283) (>= x1283 0))))
(define-fun x612 ((x1283 Real)) Bool (=> (and (< x1283 53919893334301279589334030174039261347274288845081144962207220498432) (>= x1283 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x1314 26959946667150639794667015087019630673637144422540572481103610249215 x1283) (- x1283 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x627 ((x1283 Real) (x374 Real)) Bool (and (>= x374 0) (= x1283 (+ (x1314 26959946667150639794667015087019630673637144422540572481103610249215 x1283) (* x374 26959946667150639794667015087019630673637144422540572481103610249216)))))
(define-fun x561 ((x1283 Real) (x295 Real)) Bool (and (x627 x1283 x295) (x607 x1283) (x1259 x1283) (x612 x1283) (x1122 x1283)))
(define-fun x195 ((x1283 Real) (x295 Real)) Bool (and (x739 x1283 26959946667150639794667015087019630673637144422540572481103610249215) (x561 x1283 x295)))
(define-fun x908 ((x1283 Real)) Bool (= (x1314 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1314 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1283)) (x1314 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1283)))
(define-fun x165 ((x1283 Real)) Bool (=> (and (< x1283 32) (<= 0 x1283)) (= (x1314 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1283) 0)))
(define-fun x1162 ((x1283 Real) (x374 Real) (x1213 Real) (x23 Real)) Bool (and (>= x1213 0) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1213) (= x1283 (+ x374 (* x1213 32) (* x23 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= 0 x23) (> 1 x23) (< x374 32) (= (* x1213 32) (x1314 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1283)) (<= 0 x374)))
(define-fun x205 ((x1283 Real) (x274 Real) (x117 Real) (x47 Real)) Bool (and (x165 x1283) (x908 x1283) (x1162 x1283 x274 x117 x47)))
(define-fun x894 ((x1283 Real) (x274 Real) (x117 Real) (x47 Real)) Bool (and (x739 x1283 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x205 x1283 x274 x117 x47)))
(define-fun x354 ((x43 Real)) Real (x1135 x43))
(define-fun x98 ((x43 Real)) Real (ite (= 128 x43) x232 (x457 x43)))
(define-fun x898 ((x43 Real)) Real (ite (and (>= x43 160) (> (+ 160 x175) x43)) (x1135 (+ x392 (- x43 160))) (x98 x43)))
(define-fun x1166 ((x43 Real)) Real (ite (= x43 x156) 0 (x898 x43)))
(define-fun x808 ((x43 Real)) Real (ite (and (>= x43 x740) (> (+ x740 x206) x43)) (x1135 (+ (- x43 x740) x712)) (x585 x43)))
(define-fun x144 ((x43 x813)) Real (ite (= x181 x43) x699 (x468 x43)))
(define-fun x901 ((x43 Real)) Real (ite (= x212 x43) x208 (x386 x43)))
(define-fun x752 ((x43 Real)) Real (ite (= x1047 x43) x230 (x901 x43)))
(define-fun x1189 ((x43 x813)) Real (ite (= x213 x43) x428 (x847 x43)))
(define-fun x371 ((x43 x813)) Real (ite (= x1138 x43) x699 (x468 x43)))
(define-fun x1298 ((x43 x813)) Real (ite (= x539 x43) x699 (x468 x43)))
(define-fun x1033 ((x43 Real)) Real (ite (and x617 (not x943) x1060) (x386 x43) (x752 x43)))
(define-fun x1352 ((x43 Real)) Real (ite (= x839 x43) x1195 (x1033 x43)))
(define-fun x824 ((x43 x813)) Real (ite (= x1062 x43) x1031 (x320 x43)))
(define-fun x119 ((x43 x813)) Real (ite (= x1341 x43) x699 (x453 x43)))
(define-fun x1234 ((x43 x813)) Real (ite (= x43 x470) x699 (x453 x43)))
(define-fun x193 ((x43 x813)) Real (ite (= x43 x1125) x1074 (x998 x43)))
(define-fun x996 ((x43 Real)) Real (ite (= x43 x210) x115 (x802 x43)))
(define-fun x440 ((x43 x813)) Real (ite (= x43 x876) x699 (x757 x43)))
(define-fun x1180 ((x43 Real)) Real (ite (= x494 x43) x977 (x520 x43)))
(define-fun x243 ((x43 Real)) Real (ite (= x43 x1095) x336 (x1180 x43)))
(define-fun x176 ((x43 x813)) Real (ite (= x57 x43) x699 (x757 x43)))
(define-fun x198 ((x43 x813)) Real (ite (= x43 x61) x795 (x1318 x43)))
(define-fun x531 ((x43 x813)) Real (ite (= x43 x448) x699 (x757 x43)))
(define-fun x305 ((x43 x813)) Real (ite (and (not x943) (not x226) (not x909) (not x1194) x617) (x198 x43) (x1318 x43)))
(define-fun x738 ((x43 Real)) Real (ite (and (not x226) x617 (not x909) (not x1194) (not x943)) (x243 x43) (ite (and (not x226) (not x943) x909 x617 (not x1194)) (x243 x43) (x520 x43))))
(define-fun x1269 ((x43 Real)) Real (ite (= x637 x43) x118 (x738 x43)))
(define-fun x227 ((x43 x813)) Real (ite (= x978 x43) x699 (x763 x43)))
(define-fun x340 ((x43 x813)) Real (ite (= x43 x862) x670 (x772 x43)))
(define-fun x147 ((x43 x813)) Real (ite (= x621 x43) x699 (x763 x43)))
(define-fun x1151 ((x43 x813)) Real (ite (and (not x1194) (not x943) x617 (not x848)) (x340 x43) (x772 x43)))
(define-fun x544 ((x43 x813)) Real (ite (= x43 x1015) x1159 (x1228 x43)))
(define-fun x1050 ((x43 Real)) Real (ite (= x831 x43) x1268 (x1156 x43)))
(define-fun x1137 ((x43 x813)) Real (ite (and x1194 (not x943) x617) (x763 x43) (ite (and x943 x617) (x453 x43) (ite (and x617 (not x1194) (not x943) (not x848)) (x147 x43) (x227 x43)))))
(define-fun x1344 ((x43 x813)) Real (ite (and (not x943) x617 x1194) (x757 x43) (ite (and x617 x943) (x468 x43) (ite (and (not x226) (not x909) (not x1194) (not x943) x617) (x531 x43) (ite (and (not x1194) x909 x617 (not x943) (not x226)) (x176 x43) (x440 x43))))))
(define-fun x104 ((x43 x813)) Real (ite (and x617 x1194 (not x943)) (x772 x43) (ite (and x943 x617) (x320 x43) (x1151 x43))))
(define-fun x357 ((x43 x813)) Real (ite (and (not x943) x1194 x617) (x1318 x43) (ite (and x617 x943) (x847 x43) (x305 x43))))
(define-fun x30 ((x43 x813)) Real (ite (and (not x943) x617 x1194) (x459 x43) (ite (and x617 x943) (x1123 x43) (ite (and (not x1274) (not x168) x1145 (not x1194) (not x943) x617) (x1228 x43) (ite (and (not x1145) (not x1194) (not x1274) x617 (not x943)) (x459 x43) (ite (and x617 (not x943) x1274 (not x1194)) (x459 x43) (x544 x43)))))))
(define-fun x1246 ((x43 Real)) Real (ite (and (not x943) x1194 x617) (x520 x43) (ite (and x617 x943) (x386 x43) (ite (and x1145 x617 (not x1274) (not x1194) (not x168) (not x943)) (x1156 x43) (ite (and (not x1194) (not x943) (not x1145) x617 (not x1274)) (x526 x43) (ite (and x1274 (not x943) x617 (not x1194)) (x526 x43) (x1050 x43)))))))
(define-fun x1325 ((x43 Real)) Real (ite (= x565 x43) x314 (x1246 x43)))
(define-fun x1163 ((x43 Real)) Real (ite (= x43 x130) x1028 (x1325 x43)))
(define-fun x1331 ((x43 Real)) Real (ite (= x43 x557) x1322 (x1163 x43)))
(define-fun x1049 ((x43 Real)) Real (ite (= x43 x383) x52 (x1331 x43)))
(define-fun x1324 ((x43 Real)) Real (ite (= x43 x613) 32 (x1049 x43)))
(define-fun x143 ((x43 Real)) Real (ite (= x746 x43) x66 (x505 x43)))
(define-fun x91 ((x43 Real)) Real (ite (= x43 x55) 0 (x379 x43)))
(define-fun x1284 ((x43 Real)) Real (ite (= 0 x43) 1 (x471 x43)))
(define-fun x690 ((x43 Real)) Real (ite (= x43 0) 1 (x471 x43)))
(define-fun x197 ((x43 Real)) Real (ite (and x900 x1279) (x1284 x43) (x690 x43)))
(define-fun x1046 ((x43 Real)) Real (ite (= x43 x664) x22 (x734 x43)))
(define-fun x438 ((x43 Real)) Real (ite (= x664 x43) x614 (x734 x43)))
(define-fun x684 ((x43 Real)) Real (ite (= x43 x664) x1200 (x976 x43)))
(define-fun x815 ((x43 Real)) Real (ite (and (> (+ x1200 x1202) x43) (<= x1202 x43)) (x197 (+ (- x43 x1202) 0)) (x684 x43)))
(define-fun x527 ((x43 Real)) Real (ite (and (not x600) x1304) (x815 x43) (x976 x43)))
(define-fun x555 ((x43 Real)) Real (ite (= x43 x727) x753 (x527 x43)))
(define-fun x364 ((x43 Real)) Real (ite (= x535 x43) x940 (x555 x43)))
(define-fun x1099 ((x43 Real)) Real (ite (= x43 x488) x995 (x364 x43)))
(define-fun x851 ((x43 Real)) Real (ite (= x417 x43) x849 (x1099 x43)))
(define-fun x94 ((x43 Real)) Real (ite (= x43 x1148) 32 (x851 x43)))
(define-fun x1004 ((x43 Real)) Real (ite (= x43 x1134) x248 (x252 x43)))
(define-fun x762 ((x43 Real)) Real (ite (= x43 x768) 0 (x1107 x43)))
(define-fun x1142 ((x43 x813)) Real (ite (= (x634 274184521717934524641157099916833587206) x43) x583 (x673 x43)))
(define-fun x522 ((x43 x813)) Real (ite (= (x634 x126) x43) x266 (x1142 x43)))
(define-fun x725 ((x43 x813)) Real (ite (= (x634 x126) x43) x1247 (x522 x43)))
(define-fun x1261 ((x43 x813)) Real (ite (= x43 (x634 274184521717934524641157099916833587206)) x519 (x725 x43)))
(define-fun x608 ((x43 x813)) Real (ite (= (x634 274184521717934524641157099916833587206) x43) x952 (x1261 x43)))
(define-fun x852 ((x43 x813)) Real (ite (= (x634 x81) x43) x319 (x608 x43)))
(define-fun x1080 ((x43 x813)) Real (ite (= x872 x43) x655 (x157 x43)))
(define-fun x241 ((x43 x813)) Real (ite (= x43 x84) x774 (x1080 x43)))
(define-fun x1320 ((x43 x813)) Real (ite (and x1279 x900) (x241 x43) (x157 x43)))
(define-fun x1306 ((x43 x813)) Real (ite (= x1017 x43) x789 (x1320 x43)))
(define-fun x1056 ((x43 Real)) Real (ite (= x43 0) 1 (x785 x43)))
(define-fun x868 ((x43 Real)) Real (ite (= x1183 x43) x163 (x1116 x43)))
(define-fun x649 ((x43 x813)) Real (ite (= x365 x43) x32 (x83 x43)))
(define-fun x333 ((x43 x813)) Real (ite (= x43 x633) x301 (x649 x43)))
(define-fun x1211 ((x43 x813)) Real (ite (and x900 x1279) (x83 x43) (x333 x43)))
(define-fun x620 ((x43 x813)) Real (ite (= x43 x1006) x1016 (x1211 x43)))
(define-fun x509 ((x43 Real)) Real (ite (= 0 x43) 1 (x785 x43)))
(define-fun x1350 ((x43 Real)) Real (ite (= x43 x1183) x51 (x1116 x43)))
(define-fun x653 ((x43 Real)) Real (ite (and x1078 x13) (x1056 x43) (x509 x43)))
(define-fun x748 ((x43 x813)) Real (ite (= x43 (x634 x81)) x926 (x852 x43)))
(define-fun x968 ((x43 Real)) Real (ite (= x43 x1183) x481 (x264 x43)))
(define-fun x324 ((x43 Real)) Real (ite (and (<= x570 x43) (< x43 (+ x570 x481))) (x653 (+ 0 (- x43 x570))) (x968 x43)))
(define-fun x161 ((x43 Real)) Real (ite (and x1255 x100) (x264 x43) (x324 x43)))
(define-fun x1333 ((x1283 Real)) Bool (=> (and (not (= x1283 87118632)) (not (= x1283 69947311)) (not (= x1283 2514000705)) (not (= x1283 2061678023)) (not (= 649617121 x1283)) (not (= x1283 274184521717934524641157099916833587218)) (not (= 2258409472 x1283)) (not (= x1283 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1283)) (not (= x1283 2960351575)) (not (= 468353030 x1283)) (not (= 759532456 x1283)) (not (= x1283 1000000000000000000)) (> x1283 10000) (not (= 274184521717934524641157099916833587214 x1283)) (not (= 2293535753 x1283)) (not (= x1283 604800)) (not (= x1283 2211524764)) (not (= 2764855426 x1283)) (not (= x1283 142201243)) (not (= x1283 2532887486)) (not (= 2690754053 x1283)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1283)) (not (= 1889567281 x1283)) (not (= 274184521717934524641157099916833587206 x1283)) (not (= 911411945 x1283)) (not (= x1283 2743102681)) (not (= x1283 115792089237316195423570985008687907853269984665640564039457)) (not (= 2868243304 x1283)) (not (= x1283 1968616202)) (not (= x1283 1986467848)) (not (= 2835717307 x1283)) (not (= x1283 2418364589)) (not (= 2512682246 x1283)) (not (= x1283 2798343961)) (not (= x1283 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= 1461501637330902918203684832716283019655932542975 x1283)) (not (= x1283 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 826074471 x1283)) (not (= 635128645 x1283)) (not (= x1283 18446744073709551615)) (not (= 2939843472 x1283))) (not ((_ is x856) (x634 x1283)))))
(assert (axiom_frac_bound (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x558 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x232 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1129 x1235 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1167 x1301 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1235 x1129 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1301 x1167 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1345 x589 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x164 x184 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x184 x164 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x184 x199 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x199 x184 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x232 32 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x589 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x267 1000000000000000000 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x764 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x589 x234 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x764 x387 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x889 x1299 (uninterp_frac (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x558 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x232 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1129 x1235 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1167 x1301 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1235 x1129 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1301 x1167 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1345 x589 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x164 x184 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x184 x164 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x184 x199 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x199 x184 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x232 32 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x589 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x267 1000000000000000000 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x764 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x589 x234 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x764 x387 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x889 x1299 (uninterp_frac (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x558 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x232 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1129 x1235 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1167 x1301 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1235 x1129 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1301 x1167 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1345 x589 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x164 x184 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x184 x164 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x184 x199 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x199 x184 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x232 32 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x589 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x267 1000000000000000000 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x764 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x589 x234 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x764 x387 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x889 x1299 (uninterp_frac (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x558 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x232 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1129 x1235 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1167 x1301 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1235 x1129 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1301 x1167 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1345 x589 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x164 x184 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x184 x164 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x184 x199 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x199 x184 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x232 32 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234 x589 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x267 1000000000000000000 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387 x764 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x589 x234 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x764 x387 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x889 x1299 (uninterp_frac (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1110 1000000000000000000))
(assert (axiom_frac_zero x1110 1000000000000000000 1000000000000000000 x558 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 32 x232 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x1129 x1235 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x1167 x1301 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x1235 x1129 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x1301 x1167 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x1345 x589 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x164 x184 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x184 x164 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x184 x199 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x199 x184 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x232 32 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x234 x589 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x267 1000000000000000000 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x387 x764 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x589 x234 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x764 x387 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_zero x1110 1000000000000000000 x889 x1299 (uninterp_frac x1110 1000000000000000000)))
(assert (axiom_frac_bound x1173 1000000000000000000))
(assert (axiom_frac_zero x1173 1000000000000000000 1000000000000000000 x558 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 32 x232 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x1129 x1235 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x1167 x1301 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x1235 x1129 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x1301 x1167 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x1345 x589 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x164 x184 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x184 x164 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x184 x199 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x199 x184 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x232 32 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x234 x589 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x267 1000000000000000000 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x387 x764 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x589 x234 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x764 x387 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_zero x1173 1000000000000000000 x889 x1299 (uninterp_frac x1173 1000000000000000000)))
(assert (axiom_frac_bound x344 1000000000000000000))
(assert (axiom_frac_zero x344 1000000000000000000 1000000000000000000 x558 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 32 x232 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x1129 x1235 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x1167 x1301 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x1235 x1129 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x1301 x1167 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x1345 x589 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x164 x184 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x184 x164 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x184 x199 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x199 x184 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x232 32 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x234 x589 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x267 1000000000000000000 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x387 x764 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x589 x234 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x764 x387 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_zero x344 1000000000000000000 x889 x1299 (uninterp_frac x344 1000000000000000000)))
(assert (axiom_frac_bound x349 x348))
(assert (axiom_frac_zero x349 x348 1000000000000000000 x558 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 32 x232 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x1129 x1235 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x1167 x1301 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x1235 x1129 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x1301 x1167 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x1345 x589 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x164 x184 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x184 x164 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x184 x199 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x199 x184 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x232 32 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x234 x589 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x267 1000000000000000000 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x387 x764 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x589 x234 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x764 x387 (uninterp_frac x349 x348)))
(assert (axiom_frac_zero x349 x348 x889 x1299 (uninterp_frac x349 x348)))
(assert (axiom_frac_bound x536 x775))
(assert (axiom_frac_zero x536 x775 1000000000000000000 x558 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 32 x232 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x1129 x1235 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x1167 x1301 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x1235 x1129 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x1301 x1167 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x1345 x589 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x164 x184 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x184 x164 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x184 x199 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x199 x184 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x232 32 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x234 x589 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x267 1000000000000000000 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x387 x764 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x589 x234 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x764 x387 (uninterp_frac x536 x775)))
(assert (axiom_frac_zero x536 x775 x889 x1299 (uninterp_frac x536 x775)))
(assert (axiom_frac_bound x855 1000000000000000000))
(assert (axiom_frac_zero x855 1000000000000000000 1000000000000000000 x558 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 32 x232 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x1129 x1235 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x1167 x1301 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x1235 x1129 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x1301 x1167 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x1345 x589 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x164 x184 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x184 x164 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x184 x199 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x199 x184 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x232 32 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x234 x589 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x267 1000000000000000000 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x387 x764 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x589 x234 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x764 x387 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_frac_zero x855 1000000000000000000 x889 x1299 (uninterp_frac x855 1000000000000000000)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x1000))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1023))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1041))
(assert (axiom_int_approximation x1044))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x1051))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1084))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1095))
(assert (axiom_int_approximation x1097))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x1109))
(assert (axiom_int_approximation x1110))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1133))
(assert (axiom_int_approximation x1134))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1147))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1154))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1175))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1181))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1195))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1197))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1235))
(assert (axiom_int_approximation x1237))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1247))
(assert (axiom_int_approximation x1248))
(assert (axiom_int_approximation x1249))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1253))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1262))
(assert (axiom_int_approximation x1265))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x127))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1273))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1277))
(assert (axiom_int_approximation x1280))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1286))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1295))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1313))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1316))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1321))
(assert (axiom_int_approximation x1322))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1335))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1342))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1346))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1351))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x210))
(assert (axiom_int_approximation x211))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x262))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x321))
(assert (axiom_int_approximation x322))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x348))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x40))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x482))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x499))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x53))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x567))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x605))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x62))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x631))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x641))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x65))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x651))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x699))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x721))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x736))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x747))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x755))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x768))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x788))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x810))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x820))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x85))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x859))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x870))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x874))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x907))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x926))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x940))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x952))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x965))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x972))
(assert (axiom_int_approximation x975))
(assert (axiom_int_approximation x977))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x987))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x991))
(assert (axiom_int_approximation x994))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x999))
(assert (=> (> (+ 10000 1) x1030) (= (x634 x1030) (x856 x1030))))
(assert (= (x379 x417) (ite (and x1102 x302 x124 x347 (not x688) x715) (x505 x417) (ite (and x715 (not x1102) x302 x124 x347) (x645 x417) (ite (and (not x715) x347 x302 x124) (x1198 x417) (ite (and x124 (not x302) x347) (x105 x417) (x143 x417)))))))
(assert (= x140 (x149 (x634 x140))))
(assert (=> (> (+ 10000 1) x920) (= (x856 x920) (x634 x920))))
(assert (= (ite (= x1237 x70) x155 (x1352 x1237)) (x694 x1237)))
(assert (= x731 (=> (and (<= x584 1461501637330902918203684832716283019655932542975) (> 2293535753 x675) (= x2 (x441 (x634 x584) x984 0)) (>= x666 0) (= x666 x1084) (= (x236 (x634 274184521717934524641157099916833587206)) x86) (= x666 (x453 x2)) (= x675 2258409472) (not (< x675 911411945)) (<= x666 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2061678023 x675)) (not (> 1968616202 x675)) (= x984 (x441 (x634 x351) (x856 6) 0)) (not (= 2211524764 x675)) (not (= x675 1968616202)) (> x86 0) (not (= 1986467848 x675))) (=> (and (= x1084 x504) (= x306 x1061) (= x605 x1077) (= x496 x367)) x185))))
(assert (x803 x428))
(assert (= (ite (and x617 x881 (not x943)) (x320 x862) (x824 x862)) (x772 x862)))
(assert (x803 x1134))
(assert (= (x149 (x634 x384)) x384))
(assert (= (x105 x182) (ite (= x1048 x182) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x182))))
(assert (x803 x68))
(assert (x1333 x659))
(assert (=> (< (- x1241 1) 10000) (= (x856 x1241) (x634 x1241))))
(assert (=> (> (+ 10000 1) x899) (= (x856 x899) (x634 x899))))
(assert (= (x149 (x634 x331)) x331))
(assert (x803 x192))
(assert (= x836 x924))
(assert (= (ite (and x1279 x900) (x1046 x431) (x438 x431)) (x976 x431)))
(assert (= (x457 x1303) 0))
(assert (= (ite (= x70 x210) x155 (x1352 x210)) (x694 x210)))
(assert (x803 x1140))
(assert (x803 x768))
(assert (x1333 x327))
(assert (x803 x261))
(assert (= 2532887486 (x149 (x856 2532887486))))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x149 (x856 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (x803 x1133))
(assert (x803 x1268))
(assert (= x395 (x149 (x634 x395))))
(assert (x803 x1316))
(assert (= x1285 (x149 (x634 x1285))))
(assert (x803 x519))
(assert (x803 x821))
(assert (= (ite (= x383 x1038) x799 (x694 x383)) (x802 x383)))
(assert (=> (< (- x659 1) 10000) (= (x634 x659) (x856 x659))))
(assert (= (x645 x417) (ite (= x1058 x417) x784 (x1198 x417))))
(assert (x803 x492))
(assert (= (ite (= x1041 x456) x232 (x1166 x1041)) (x585 x1041)))
(assert (x803 x498))
(assert (= (x105 x1237) (ite (= x1048 x1237) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x1237))))
(assert (x803 x931))
(assert (= (x423 x152) (ite (= x152 x196) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x94 x152))))
(assert (x803 x980))
(assert (= (ite (= x999 x1275) x833 (x645 x1275)) (x505 x1275)))
(assert (= (x149 (x634 x410)) x410))
(assert (= 0 (x457 x231)))
(assert (= (ite (= x378 x70) x155 (x1352 x378)) (x694 x378)))
(assert (= (x634 1461501637330902918203684832716283019655932542975) (x856 1461501637330902918203684832716283019655932542975)))
(assert (= (x645 x1303) (ite (= x1058 x1303) x784 (x1198 x1303))))
(assert (x803 x789))
(assert (x803 x22))
(assert (= (ite (= x999 x417) x833 (x645 x417)) (x505 x417)))
(assert (x803 x735))
(assert (= x1054 (x149 (x634 x1054))))
(assert (= (ite (and x617 x298) (x585 x831) (x808 x831)) (x386 x831)))
(assert (x1333 x1086))
(assert (x803 x1280))
(assert (= (x149 (x634 x1253)) x1253))
(assert (= (=> (and (= (= x481 0) x1255) (= x546 (< 2 x232)) (= (x161 x1303) x944) x375 (not (= x809 0)) (not x546) (or (and (= (ite x194 1 0) x9) (= x538 (x161 x1303)) (= (x1081 (+ 32 x1303)) x1275) (= (x161 x1275) x1203) (= x1203 x9) (= x771 (= x1203 0)) x393 (< 0 x1203) (not (or (> x538 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x538) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x538) true)))) (= x194 (not x771))) (not x393)) (= x926 (x852 (x634 x81))) (= x393 (> x944 0)) (or (and (= (x1081 (+ 96 x1148)) x570) (= x1303 x1183) (not x1255)) (and x1255 (= 96 x1303))) (= x375 (< (x748 (x634 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x733) x467))
(assert (= x541 x507))
(assert (x803 x1065))
(assert (x334 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x803 x116))
(assert (x1333 x593))
(assert (=> (< (- x742 1) 10000) (= (x856 x742) (x634 x742))))
(assert (=> (> (+ 10000 1) x399) (= (x634 x399) (x856 x399))))
(assert (= (x645 x1275) (ite (= x1275 x1058) x784 (x1198 x1275))))
(assert (x803 x1094))
(assert (= x713 (x149 (x634 x713))))
(assert (= (x585 x456) x232))
(assert (x803 x598))
(assert (x803 x188))
(assert (=> (< (- x709 1) 10000) (= (x856 x709) (x634 x709))))
(assert (x803 x658))
(assert (= (x802 x658) (ite (= x658 x1038) x799 (x694 x658))))
(assert (x803 x1))
(assert (=> (> (+ 10000 1) x571) (= (x856 x571) (x634 x571))))
(assert (x803 x277))
(assert (x803 x566))
(assert (=> (< (- x564 1) 10000) (= (x856 x564) (x634 x564))))
(assert (x1333 x592))
(assert (= (x149 (x634 x957)) x957))
(assert (x803 x304))
(assert (x803 x829))
(assert (= (x149 (x634 x892)) x892))
(assert (x803 x1273))
(assert (x1333 x513))
(assert (= (ite (= x417 x928) x1111 (x526 x417)) (x1156 x417)))
(assert (=> (> (+ 10000 1) x929) (= (x634 x929) (x856 x929))))
(assert (= x111 x73))
(assert (= (x694 x182) (ite (= x182 x70) x155 (x1352 x182))))
(assert (= (x149 (x634 x966)) x966))
(assert (= x207 (x149 (x634 x207))))
(assert (x803 x536))
(assert (=> (> (+ 10000 1) x101) (= (x856 x101) (x634 x101))))
(assert (x803 x865))
(assert (= (x772 x1112) (ite (and x881 (not x943) x617) (x320 x1112) (x824 x1112))))
(assert (= x1310 (=> (and (= x337 x1000) (= (>= x755 x1000) x437) (= x1229 x437)) x1229)))
(assert (x803 x726))
(assert (= (ite (= x1041 x112) x735 (x1269 x1041)) (x526 x1041)))
(assert (x803 x834))
(assert (x1333 x56))
(assert (x334 x123))
(assert (x1333 x605))
(assert (x1333 274184521717934524641157099916833587206))
(assert (= (x149 (x856 2939843472)) 2939843472))
(assert (x803 x336))
(assert (=> (> (+ 10000 1) x1253) (= (x634 x1253) (x856 x1253))))
(assert (= 2061678023 (x149 (x856 2061678023))))
(assert (= (and (not x900) x1279) x730))
(assert (x1333 x432))
(assert (=> (< (- x350 1) 10000) (= (x856 x350) (x634 x350))))
(assert (x803 x59))
(assert (= (x149 (x634 x1086)) x1086))
(assert (= (ite (= x112 x182) x735 (x1269 x182)) (x526 x182)))
(assert (x803 x1044))
(assert (x803 x606))
(assert (= (x386 x1275) (ite (and x617 x298) (x585 x1275) (x808 x1275))))
(assert (x803 x761))
(assert (x803 x1285))
(assert (= (x694 x70) x155))
(assert (= (ite (= x456 x1114) x232 (x1166 x1114)) (x585 x1114)))
(assert (x803 x1047))
(assert (= (ite (= x1117 x1303) x1209 (x105 x1303)) (x1198 x1303)))
(assert (= (x386 x658) (ite (and x617 x298) (x585 x658) (x808 x658))))
(assert (= (x526 x928) (ite (= x928 x112) x735 (x1269 x928))))
(assert (= (x423 x219) (ite (= x219 x196) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x94 x219))))
(assert (= (ite (= x999 x231) x833 (x645 x231)) (x505 x231)))
(assert (x803 x99))
(assert (x334 x148))
(assert (= (x105 x231) (ite (= x1048 x231) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x231))))
(assert (=> (< (- x56 1) 10000) (= (x856 x56) (x634 x56))))
(assert (=> (> (+ 10000 1) x1329) (= (x856 x1329) (x634 x1329))))
(assert (x803 x1202))
(assert (=> (< (- x584 1) 10000) (= (x634 x584) (x856 x584))))
(assert (= x899 (x149 (x634 x899))))
(assert (= (x149 (x634 x1250)) x1250))
(assert (x803 x1132))
(assert (=> (< (- x810 1) 10000) (= (x856 x810) (x634 x810))))
(assert (x803 x86))
(assert (x803 x521))
(assert (x803 x891))
(assert (= (or (and (not x124) x347) (and (not x1281) x1019) x100) x1327))
(assert (x803 x630))
(assert (x803 x874))
(assert (=> (> (+ 10000 1) x484) (= (x856 x484) (x634 x484))))
(assert (x803 x1232))
(assert (=> (< (- x635 1) 10000) (= (x634 x635) (x856 x635))))
(assert (= (ite (= x456 x1303) x232 (x1166 x1303)) (x585 x1303)))
(assert (x803 x1038))
(assert (= 0 (x457 x928)))
(assert (= (x149 (x856 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x803 x1217))
(assert (=> (> (+ 10000 1) x745) (= (x634 x745) (x856 x745))))
(assert (= (ite (= x231 x196) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x94 x231)) (x423 x231)))
(assert (= (ite (= x411 x1275) x1240 (x485 x1275)) (x252 x1275)))
(assert (= (x526 x231) (ite (= x231 x112) x735 (x1269 x231))))
(assert (x803 x1175))
(assert (x1333 x126))
(assert (= 69947311 (x149 (x856 69947311))))
(assert (x803 x24))
(assert (x803 x455))
(assert (= (x520 x431) (ite (and (not x1225) (not x281) (not x943) x617 x1090) (x802 x431) (ite (and (not x281) x617 (not x943) (not x1090)) (x694 x431) (ite (and (not x943) x617 x281) (x694 x431) (x996 x431))))))
(assert (= (x1198 x1041) (ite (= x1041 x1117) x1209 (x105 x1041))))
(assert (= (ite (= x1332 x1053) x1178 (x1123 x1053)) (x998 x1053)))
(assert (=> (> (+ 10000 1) x1061) (= (x634 x1061) (x856 x1061))))
(assert (x803 x929))
(assert (= (x149 (x856 604800)) 604800))
(assert (= (ite (= x831 x1038) x799 (x694 x831)) (x802 x831)))
(assert (= (ite (= x999 x431) x833 (x645 x431)) (x505 x431)))
(assert (=> (< (- x171 1) 10000) (= (x634 x171) (x856 x171))))
(assert (x803 x635))
(assert (= (x149 (x634 x1316)) x1316))
(assert (x803 x1252))
(assert (x1333 x665))
(assert (= (x585 x231) (ite (= x231 x456) x232 (x1166 x231))))
(assert (x803 x1282))
(assert (x803 x776))
(assert (= (x1156 x383) (ite (= x383 x928) x1111 (x526 x383))))
(assert (=> (< (- x270 1) 10000) (= (x634 x270) (x856 x270))))
(assert (= 0 (x457 x616)))
(assert (x803 x1291))
(assert (x803 x1061))
(assert (x1333 x490))
(assert (x1333 x304))
(assert (= (x634 2514000705) (x856 2514000705)))
(assert (x803 x892))
(assert (x803 x1153))
(assert (x1333 x101))
(assert (= (x976 x456) (ite (and x1279 x900) (x1046 x456) (x438 x456))))
(assert (x803 x1200))
(assert (=> (< (- x549 1) 10000) (= (x856 x549) (x634 x549))))
(assert (x1333 x81))
(assert (= (ite (= x1117 x616) x1209 (x105 x616)) (x1198 x616)))
(assert (x803 x308))
(assert (x803 x664))
(assert (x803 x839))
(assert (x803 x1054))
(assert (= x571 (x149 (x634 x571))))
(assert (x803 x853))
(assert (= (ite (and x298 x617) (x585 x1041) (x808 x1041)) (x386 x1041)))
(assert (= x780 (x149 (x634 x780))))
(assert (x803 x79))
(assert (= x35 (x149 (x634 x35))))
(assert (x803 x155))
(assert (= (x149 (x856 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x803 x1136))
(assert (= (x526 x112) x735))
(assert (= (ite (and (not x943) (not x1225) x617 (not x281) x1090) (x802 x794) (ite (and (not x943) x617 (not x1090) (not x281)) (x694 x794) (ite (and x617 (not x943) x281) (x694 x794) (x996 x794)))) (x520 x794)))
(assert (x54 x114 x394))
(assert (x803 x303))
(assert (x803 x636))
(assert (=> (< (- x304 1) 10000) (= (x634 x304) (x856 x304))))
(assert (x1333 x870))
(assert (= x982 (x149 (x634 x982))))
(assert (= (ite (= x456 x831) x232 (x1166 x831)) (x585 x831)))
(assert (x803 x223))
(assert (x803 x745))
(assert (= (x149 (x856 2211524764)) 2211524764))
(assert (x803 x40))
(assert (= (x734 x1275) (ite (and x347 x124 (not x594)) (x379 x1275) (x91 x1275))))
(assert (x803 x742))
(assert (x803 x1087))
(assert (=> (> (+ 10000 1) x1140) (= (x856 x1140) (x634 x1140))))
(assert (x803 x713))
(assert (x1333 x1061))
(assert (x1333 x1285))
(assert (x803 x1128))
(assert (= x56 (x149 (x634 x56))))
(assert (= 2418364589 (x149 (x856 2418364589))))
(assert (= (x520 x1275) (ite (and (not x281) x1090 (not x1225) (not x943) x617) (x802 x1275) (ite (and x617 (not x1090) (not x943) (not x281)) (x694 x1275) (ite (and (not x943) x617 x281) (x694 x1275) (x996 x1275))))))
(assert (= x560 x493))
(assert (= (x856 2835717307) (x634 2835717307)))
(assert (x803 x513))
(assert (= (x856 2690754053) (x634 2690754053)))
(assert (= x280 (x149 (x634 x280))))
(assert (= (ite (= x456 x658) x232 (x1166 x658)) (x585 x658)))
(assert (x334 x1217))
(assert (x803 x482))
(assert (x803 x1109))
(assert (= (x149 (x1027 x458 1)) (+ 1 (x149 x458))))
(assert (x803 x331))
(assert (x803 x1299))
(assert (= (ite (= x658 x1117) x1209 (x105 x658)) (x1198 x658)))
(assert (= (x149 (x634 x1329)) x1329))
(assert (= (x856 274184521717934524641157099916833587214) (x634 274184521717934524641157099916833587214)))
(assert (= (x856 274184521717934524641157099916833587206) (x634 274184521717934524641157099916833587206)))
(assert (= (x526 x1303) (ite (= x112 x1303) x735 (x1269 x1303))))
(assert (x803 x659))
(assert (= (x149 (x634 x929)) x929))
(assert (x803 x317))
(assert (x803 x977))
(assert (x334 x271))
(assert (= (x149 (x1027 x864 1)) (+ 1 (x149 x864))))
(assert (x803 x490))
(assert (x1333 x244))
(assert (= (ite (= x573 x1275) x779 (x34 x1275)) (x485 x1275)))
(assert (x803 x905))
(assert (=> (> (+ 10000 1) x954) (= (x634 x954) (x856 x954))))
(assert (= (ite (= x70 x928) x155 (x1352 x928)) (x694 x928)))
(assert (= (x485 x152) (ite (= x152 x573) x779 (x34 x152))))
(assert (= (ite (= x928 x616) x1111 (x526 x616)) (x1156 x616)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x149 (x856 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x803 x833))
(assert (x1333 x127))
(assert (x54 x148 x1311))
(assert (x803 x287))
(assert (= (x379 x1041) (ite (and x1102 x124 x302 x347 x715 (not x688)) (x505 x1041) (ite (and x715 x347 x124 x302 (not x1102)) (x645 x1041) (ite (and x302 x124 (not x715) x347) (x1198 x1041) (ite (and x347 (not x302) x124) (x105 x1041) (x143 x1041)))))))
(assert (x803 x51))
(assert (= (x34 x152) (ite (= x152 x626) x1282 (x423 x152))))
(assert (= (x149 (x634 x549)) x549))
(assert (= (x149 (x634 x351)) x351))
(assert (= (ite (= x70 x1114) x155 (x1352 x1114)) (x694 x1114)))
(assert (x803 x512))
(assert (= (x634 2258409472) (x856 2258409472)))
(assert (x803 x676))
(assert (= (x772 x604) (ite (and (not x943) x617 x881) (x320 x604) (x824 x604))))
(assert (= (x526 x383) (ite (= x112 x383) x735 (x1269 x383))))
(assert (x803 x567))
(assert (= (x526 x658) (ite (= x112 x658) x735 (x1269 x658))))
(assert (= x300 (x149 (x634 x300))))
(assert (x803 x849))
(assert (= (ite (= x378 x112) x735 (x1269 x378)) (x526 x378)))
(assert (x803 x209))
(assert (= (x457 192) 0))
(assert (=> (< (- x496 1) 10000) (= (x856 x496) (x634 x496))))
(assert (=> (> (+ 10000 1) x780) (= (x634 x780) (x856 x780))))
(assert (= (x105 x417) (ite (= x1048 x417) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x417))))
(assert (= (ite (and x1279 x900) (x1046 x1275) (x438 x1275)) (x976 x1275)))
(assert (x803 x148))
(assert (= x870 (x149 (x634 x870))))
(assert (x803 x644))
(assert (= (x520 x1114) (ite (and x1090 x617 (not x943) (not x281) (not x1225)) (x802 x1114) (ite (and (not x943) (not x281) (not x1090) x617) (x694 x1114) (ite (and (not x943) x617 x281) (x694 x1114) (x996 x1114))))))
(assert (x803 x1077))
(assert (= (x694 x431) (ite (= x431 x70) x155 (x1352 x431))))
(assert (x1333 x42))
(assert (= (ite (= x112 x431) x735 (x1269 x431)) (x526 x431)))
(assert (= (x457 x1114) 0))
(assert (x803 x969))
(assert (x803 x916))
(assert (x803 x118))
(assert (x803 x1235))
(assert (x803 x62))
(assert (= (x386 x1237) (ite (and x298 x617) (x585 x1237) (x808 x1237))))
(assert (= x346 x617))
(assert (= (ite (= x1041 x1048) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x1041)) (x105 x1041)))
(assert (=> (< (- x140 1) 10000) (= (x634 x140) (x856 x140))))
(assert (=> (> (+ 10000 1) x1153) (= (x856 x1153) (x634 x1153))))
(assert (x803 x439))
(assert (x195 x179 x129))
(assert (= (x645 x1041) (ite (= x1058 x1041) x784 (x1198 x1041))))
(assert (x803 x1335))
(assert (x803 x1155))
(assert (= (x457 x831) 0))
(assert (x803 x407))
(assert (=> (> (+ 10000 1) x192) (= (x856 x192) (x634 x192))))
(assert (x803 x944))
(assert (x1333 x958))
(assert (= (x149 (x634 x1061)) x1061))
(assert (= (x149 (x856 87118632)) 87118632))
(assert (x803 x159))
(assert (x803 x72))
(assert (x803 x20))
(assert (x803 x16))
(assert (x1333 274184521717934524641157099916833587218))
(assert (= x225 (=> (and (>= 1461501637330902918203684832716283019655932542975 x919) (= x277 (x673 (x634 274184521717934524641157099916833587218))) (= x990 false) (<= 0 x412) (>= 1461501637330902918203684832716283019655932542975 x262) x1243 (>= x919 0) (>= x6 0) (>= x306 0) (<= x306 1461501637330902918203684832716283019655932542975) (= x6 (x673 (x634 274184521717934524641157099916833587214))) (= x584 x306) x533 (= x351 x367) x543 (<= 0 x1037) (= x1131 x262) (<= 0 x277) (= x404 false) (= 2939843472 x931) (= x1037 (x673 (x634 274184521717934524641157099916833587206))) (= (> (x236 (x634 274184521717934524641157099916833587214)) 0) x1243) (>= x262 0) (= false x8) (= x543 (< 0 (x236 (x634 274184521717934524641157099916833587206)))) (= x391 false) (= (> (x236 (x634 274184521717934524641157099916833587218)) 0) x533) (>= x1077 0) (>= 1461501637330902918203684832716283019655932542975 x412) (= x919 x17) (= x1175 5) (<= x1077 1461501637330902918203684832716283019655932542975)) x731)))
(assert (= (x149 (x634 x821)) x821))
(assert (x1333 x1241))
(assert (x803 x657))
(assert (= (ite (and (not x943) (not x281) x1090 x617 (not x1225)) (x802 x456) (ite (and (not x943) (not x281) (not x1090) x617) (x694 x456) (ite (and x617 (not x943) x281) (x694 x456) (x996 x456)))) (x520 x456)))
(assert (x803 x66))
(assert (x803 x947))
(assert (=> (> (+ 10000 1) x521) (= (x856 x521) (x634 x521))))
(assert (= (x149 (x856 2764855426)) 2764855426))
(assert (x803 x957))
(assert (x1333 x218))
(assert (x803 x1009))
(assert (x803 x538))
(assert (x803 x716))
(assert (x1333 x303))
(assert (x803 x1277))
(assert (= x171 (x149 (x634 x171))))
(assert (x1333 x564))
(assert (x803 x166))
(assert (= (=> (and (= x242 (x441 (x634 x1051) (x856 4) 0)) (not (= 2293535753 x63)) (= 2532887486 x63) (= (x441 (x634 x1154) x242 0) x534) (> 2960351575 x63) (= x151 (x441 (x634 x331) x602 0)) (<= x1154 1461501637330902918203684832716283019655932542975) (= x602 (x441 (x634 x1128) x534 0)) (>= 1461501637330902918203684832716283019655932542975 x331) (not (= 2512682246 x63)) (= x370 (x1123 x151)) (= x1066 x370) (>= 1461501637330902918203684832716283019655932542975 x1128) (>= x370 0) (not (= x63 2418364589)) (not (< x63 2293535753)) (< x63 2690754053) (= (x236 (x634 274184521717934524641157099916833587206)) x78) (< 0 x78) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x370)) (=> (and (= x1066 x174) (= x35 x367) (= x120 x306) (= (and x247 x530) x1039) (= x247 (<= x174 x1034)) (= x1077 x553)) x971)) x886))
(assert (= x1280 (x149 (x634 x1280))))
(assert (x334 x159))
(assert (x803 x788))
(assert (= (x149 (x634 x126)) x126))
(assert (= (x105 x219) (ite (= x219 x1048) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x219))))
(assert (= (x802 x378) (ite (= x1038 x378) x799 (x694 x378))))
(assert (= x492 (x149 (x634 x492))))
(assert (= (x585 x616) (ite (= x456 x616) x232 (x1166 x616))))
(assert (x803 x593))
(assert (x1333 x951))
(assert (x803 x329))
(assert (=> (> (+ 10000 1) x1109) (= (x634 x1109) (x856 x1109))))
(assert (x803 x706))
(assert (x1333 x905))
(assert (= (x634 649617121) (x856 649617121)))
(assert (x803 x504))
(assert (= (ite (= x1041 x928) x1111 (x526 x1041)) (x1156 x1041)))
(assert (=> (> (+ 10000 1) x308) (= (x856 x308) (x634 x308))))
(assert (x1333 x584))
(assert (= (x149 (x634 x495)) x495))
(assert (x334 x769))
(assert (x803 x271))
(assert (x1333 x1128))
(assert (= (x423 x1303) (ite (= x196 x1303) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x94 x1303))))
(assert (=> (> (+ 10000 1) x290) (= (x634 x290) (x856 x290))))
(assert (= (ite (= x417 x112) x735 (x1269 x417)) (x526 x417)))
(assert (= x325 (=> (and (= x519 (x725 (x634 274184521717934524641157099916833587206))) (= (= 0 x1200) x600) (or (and x600 (= x1041 96) (= x488 x664)) (and (= (x1081 (+ 96 x613)) x1202) (= x488 x72) (= (x1314 115792089237316195423570985008687907853269984665640564039457584007913129639904 x820) x1323) (not x600) (= (x1081 (+ 63 x1200)) x820) (= x1041 x664) (= (x1081 (+ x1323 x664)) x72))) (= x1247 (x522 (x634 x126))) (= x183 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x725 (x634 274184521717934524641157099916833587206)))) (not (= x487 0)) (or (and (= (ite x282 1 0) x121) (= x828 (= x160 0)) (= (not x828) x282) (< 0 x160) (= x1237 (x1081 (+ 32 x1041))) (= (x527 x1237) x160) (= (x527 x1041) x68) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x68)) (< x68 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x68))) x1011 (= x160 x121)) (not x1011)) (= x222 (x527 x1041)) (= x1011 (> x222 0)) x183) x450)))
(assert (= (ite (= x378 x1048) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x378)) (x105 x378)))
(assert (= (ite (= x219 x1117) x1209 (x105 x219)) (x1198 x219)))
(assert (x803 x535))
(assert (x1333 x929))
(assert (x803 x941))
(assert (= (x757 x1254) (ite (and x1060 x617 (not x943)) (x144 x1254) (ite (and x5 x617 (not x1060) (not x943)) (x1298 x1254) (x371 x1254)))))
(assert (x803 x96))
(assert (= (x634 2061678023) (x856 2061678023)))
(assert (x1333 x395))
(assert (x803 x410))
(assert (= (ite (= x1038 x1275) x799 (x694 x1275)) (x802 x1275)))
(assert (=> (> (+ 10000 1) x35) (= (x634 x35) (x856 x35))))
(assert (x803 x1171))
(assert (x803 x1020))
(assert (= (=> (and (= x983 (x236 (x634 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x42) (= 2743102681 x131) (not (< x131 2690754053)) (<= x660 1461501637330902918203684832716283019655932542975) (<= x1001 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x983) (= x1001 x986) (< x131 2960351575) (= (x357 x1326) x1001) (= (x441 (x634 x659) (x856 3) 0) x1026) (not (= x131 2690754053)) (not (> 2293535753 x131)) (= (x441 (x634 x660) x1242 0) x1326) (= (x441 (x634 x42) x1026 0) x1242) (<= 0 x1001)) (=> (and (= x986 x116) (= x306 x140) (= x233 (>= x1272 x116)) (= x367 x1032)) x433)) x559))
(assert (x1333 x871))
(assert (x803 x88))
(assert (= (x1156 x231) (ite (= x928 x231) x1111 (x526 x231))))
(assert (x803 x270))
(assert (= (ite (= x456 x210) x232 (x1166 x210)) (x585 x210)))
(assert (= 0 (x457 x431)))
(assert (= (x149 (x634 x1032)) x1032))
(assert (x803 x1214))
(assert (x803 x78))
(assert (x803 x1073))
(assert (x803 x481))
(assert (=> (> (+ 10000 1) x1232) (= (x634 x1232) (x856 x1232))))
(assert (= x270 (x149 (x634 x270))))
(assert (= x217 (=> (= x154 (= x126 274184521717934524641157099916833587214)) (and (=> (and (> x603 0) (= x1022 (x83 x289)) (not (= x1196 649617121)) (not (= 826074471 x1196)) (= x1230 x1346) (= x314 x821) (<= x1230 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x1346 x878) x301) (= x1200 32) (>= x1230 0) (= x460 (x441 (x634 x821) (x856 1) 0)) (= x289 (x441 (x634 274184521717934524641157099916833587206) (x856 1) 0)) (= x633 (x441 (x634 x821) (x856 1) 0)) (= x487 1) (not (< x1196 649617121)) (not (< x209 4)) (= x1337 x878) (= x723 x209) (= x656 (x286 (- x209 4))) (= x1312 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1337 x1230))) (not (= 2514000705 x1196)) (= x365 (x441 (x634 274184521717934524641157099916833587206) (x856 1) 0)) (not (= 1889567281 x1196)) (= x1105 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x491 (> x1337 x1022)) (= x692 274184521717934524641157099916833587206) (>= 1461501637330902918203684832716283019655932542975 x821) (= x1028 x317) (= x317 x1337) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1022) x154 (= (> x317 x1022) x1300) (not x1174) (= x1196 2835717307) (= 68 x209) (= x614 x177) (<= 0 x1022) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1337 x1230)) (= x821 x228) (not x1312) (= x1174 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x656) (and (> 64 x656) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x656) true)))) (not x1300) (= 274184521717934524641157099916833587206 x863) (= (x649 x460) x1230) (= (x286 (- x1022 x317)) x32) (not x491) (= (x236 (x634 274184521717934524641157099916833587214)) x603)) x325) (=> (not x154) x76)))))
(assert (x803 x362))
(assert (= (x694 x658) (ite (= x70 x658) x155 (x1352 x658))))
(assert (x803 x556))
(assert (x803 x550))
(assert (= (x149 (x634 x484)) x484))
(assert (x803 x1313))
(assert (x1333 x635))
(assert (x1333 x270))
(assert (= (=> (and (not (= x1215 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x140) (= x1121 (x441 (x634 x1032) (x856 5) 0)) (not (> 2293535753 x1215)) (= (x236 (x634 274184521717934524641157099916833587206)) x969) (not (= 2764855426 x1215)) (not (< x1215 2690754053)) (<= 0 x567) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x567) (= (x441 (x634 x140) x1121 0) x604) (not (= 2743102681 x1215)) (= x567 x215) (= x567 (x104 x604)) (= 2798343961 x1215) (< 0 x969) (< x1215 2960351575)) (=> (and (= x1077 x312) (= x419 x215) (= x367 x642) (= x412 x300) (= x306 x492)) x352)) x433))
(assert (x803 x1248))
(assert (= x1128 (x149 (x634 x1128))))
(assert (x1333 x552))
(assert (x803 x484))
(assert (=> (> (+ 10000 1) x605) (= (x634 x605) (x856 x605))))
(assert (= (x149 (x634 x513)) x513))
(assert (x803 x269))
(assert (= (x149 (x634 x353)) x353))
(assert (x334 x258))
(assert (x803 x359))
(assert (x803 x42))
(assert (= (x149 (x634 x329)) x329))
(assert (x803 x311))
(assert (=> (> (+ 10000 1) x592) (= (x634 x592) (x856 x592))))
(assert (x1333 x135))
(assert (x803 x956))
(assert (= x647 (x149 (x634 x647))))
(assert (x803 x823))
(assert (=> (< (- x495 1) 10000) (= (x856 x495) (x634 x495))))
(assert (x1333 x492))
(assert (= x50 (x149 (x634 x50))))
(assert (= (ite (= x231 x1038) x799 (x694 x231)) (x802 x231)))
(assert (x334 x153))
(assert (= (x856 26959946667150639794667015087019630673637144422540572481103610249215) (x634 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x803 x1001))
(assert (x803 x1114))
(assert (x803 x169))
(assert (= (x694 x383) (ite (= x70 x383) x155 (x1352 x383))))
(assert (x334 x114))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x81) x444) (and (=> (not x444) x1012) (=> (and (= x566 (x1211 x840)) (not (= x62 649617121)) (= (x441 (x634 274184521717934524641157099916833587206) (x856 1) 0) x840) x444 (= 274184521717934524641157099916833587206 x380) (= x911 x414) (= x132 274184521717934524641157099916833587206) (= x51 x462) (< 0 x311) (not x464) (not (< x62 649617121)) (= x414 x1270) (= 2835717307 x62) (= 32 x481) (< (+ x736 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 2514000705 x62)) (= (x441 (x634 x892) (x856 1) 0) x955) (>= x566 0) (= (x236 (x634 274184521717934524641157099916833587214)) x311) (= x753 x892) (= x940 x1270) (= x1016 (x286 (- x566 x1270))) (= x246 x736) (= x736 (x620 x955)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1221) (>= x736 0) (= x761 (+ x246 x911)) (= (< x566 x1270) x442) (= (x441 (x634 274184521717934524641157099916833587206) (x856 1) 0) x1006) (= x892 x818) (<= x892 1461501637330902918203684832716283019655932542975) (not x422) (not x442) (= 1 x809) (= x622 x687) (= x611 (x286 (- x687 4))) (not (= x62 826074471)) (= 68 x687) (<= x736 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1889567281 x62)) (not (> 4 x687)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x566) (not x1308) (= (or (and (= (<= x611 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x611)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x611)) x1308) (= x464 (>= (+ x736 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< x566 x414) x422)) x467))) x25))
(assert (= (x485 x219) (ite (= x573 x219) x779 (x34 x219))))
(assert (= 0 (x457 x219)))
(assert (= (and x1019 x1281) x1078))
(assert (= (x520 x1303) (ite (and (not x1225) x1090 (not x943) x617 (not x281)) (x802 x1303) (ite (and (not x281) x617 (not x1090) (not x943)) (x694 x1303) (ite (and x617 x281 (not x943)) (x694 x1303) (x996 x1303))))))
(assert (x803 x381))
(assert (=> (> (+ 10000 1) x351) (= (x856 x351) (x634 x351))))
(assert (x803 x951))
(assert (x1333 x750))
(assert (x803 x547))
(assert (= (x802 x1041) (ite (= x1041 x1038) x799 (x694 x1041))))
(assert (x803 x858))
(assert (= (x457 x152) 0))
(assert (=> (> (+ 10000 1) x385) (= (x634 x385) (x856 x385))))
(assert (= (=> (and (not (= 2743102681 x895)) (not (= 2764855426 x895)) (<= x1118 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1280 1461501637330902918203684832716283019655932542975) (not (> 2293535753 x895)) (= (x236 (x634 274184521717934524641157099916833587206)) x1133) (= x1118 x640) (= (x441 (x634 x1294) (x856 5) 0) x948) (> 2960351575 x895) (>= x1118 0) (= x667 (x441 (x634 x1280) x948 0)) (> x1133 0) (not (= x895 2690754053)) (not (> 2690754053 x895)) (= 2798343961 x895) (= (x320 x667) x1118)) (=> (and (= x331 x412) (= x640 x1034) (= x1128 x1077) (= x367 x1051) (= x306 x1154)) x886)) x702))
(assert (x803 x1303))
(assert (x803 x784))
(assert (x803 x831))
(assert (= (x149 (x634 x1155)) x1155))
(assert (x803 x52))
(assert (x803 x3))
(assert (=> (> (+ 10000 1) x1113) (= (x634 x1113) (x856 x1113))))
(assert (= x532 (=> (and (> x58 0) (= x58 (x236 (x634 274184521717934524641157099916833587206))) (<= 0 x65) (>= 1461501637330902918203684832716283019655932542975 x951) (= (x30 x1053) x65) (= (x441 (x634 x1086) x293 0) x964) (not (> 2293535753 x373)) (not (= 2293535753 x373)) (> 2960351575 x373) (= 2532887486 x373) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x65) (not (= x373 2418364589)) (= (x441 (x634 x1316) x221 0) x293) (= x1053 (x441 (x634 x951) x964 0)) (= x337 x65) (< x373 2690754053) (>= 1461501637330902918203684832716283019655932542975 x1086) (not (= x373 2512682246)) (= x221 (x441 (x634 x957) (x856 4) 0)) (>= 1461501637330902918203684832716283019655932542975 x1316)) x1310)))
(assert (x803 x495))
(assert (= (ite (and x617 (not x281) (not x943) (not x1225) x1090) (x802 x658) (ite (and (not x281) (not x1090) (not x943) x617) (x694 x658) (ite (and x617 x281 (not x943)) (x694 x658) (x996 x658)))) (x520 x658)))
(assert (x1333 x50))
(assert (= x1115 x661))
(assert (=> (< (- x81 1) 10000) (= (x634 x81) (x856 x81))))
(assert (x803 x769))
(assert (= 2868243304 (x149 (x856 2868243304))))
(assert (x803 x1066))
(assert (x803 x1028))
(assert (= (x386 x794) (ite (and x298 x617) (x585 x794) (x808 x794))))
(assert (= (x634 142201243) (x856 142201243)))
(assert (= x1020 (x149 (x634 x1020))))
(assert (x803 x811))
(assert (= (x772 x923) (ite (and (not x943) x881 x617) (x320 x923) (x824 x923))))
(assert (= x73 x1327))
(assert (= (x694 x219) (ite (= x70 x219) x155 (x1352 x219))))
(assert (x803 x575))
(assert (= (x386 x456) (ite (and x298 x617) (x585 x456) (x808 x456))))
(assert (x803 x75))
(assert (x1333 x1154))
(assert (= (ite (and x298 x617) (x585 x383) (x808 x383)) (x386 x383)))
(assert (x803 x652))
(assert (x803 x196))
(assert (x803 x112))
(assert (x334 x179))
(assert (= (ite (and x124 (not x594) x347) (x379 x152) (x91 x152)) (x734 x152)))
(assert (= (ite (and x617 x1060 (not x943)) (x847 x389) (ite (and x617 (not x943) (not x1060) x5) (x847 x389) (x1189 x389))) (x1318 x389)))
(assert (x803 x1181))
(assert (= (x634 1968616202) (x856 1968616202)))
(assert (= (ite (= x413 x1332) x1178 (x1123 x413)) (x998 x413)))
(assert (= (ite (and (not x594) x124 x347) (x379 x1237) (x91 x1237)) (x734 x1237)))
(assert (= (x1198 x431) (ite (= x431 x1117) x1209 (x105 x431))))
(assert (= (ite (and x1102 x302 x124 x347 x715 (not x688)) (x505 x1237) (ite (and x715 (not x1102) x302 x124 x347) (x645 x1237) (ite (and (not x715) x347 x124 x302) (x1198 x1237) (ite (and x347 x124 (not x302)) (x105 x1237) (x143 x1237))))) (x379 x1237)))
(assert (= (x645 x152) (ite (= x152 x1058) x784 (x1198 x152))))
(assert (=> (< (- x1020 1) 10000) (= (x634 x1020) (x856 x1020))))
(assert (x803 x361))
(assert (x803 x758))
(assert (x803 x665))
(assert (x803 x1159))
(assert (x803 x1270))
(assert (=> (< (- x1285 1) 10000) (= (x634 x1285) (x856 x1285))))
(assert (= x801 (=> (and (> x401 0) (= x401 (x236 (x634 274184521717934524641157099916833587206))) (<= 0 x269) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x269) (= x269 (x357 x1220)) (= 2743102681 x1146) (not (< x1146 2293535753)) (= x269 x776) (= (x441 (x634 x663) x1010 0) x619) (not (= 2690754053 x1146)) (= (x441 (x634 x303) x619 0) x1220) (< x1146 2960351575) (not (> 2690754053 x1146)) (= (x441 (x634 x495) (x856 3) 0) x1010) (<= x303 1461501637330902918203684832716283019655932542975) (<= x663 1461501637330902918203684832716283019655932542975)) (=> (and (= x1316 x306) (= x1086 x1077) (= x412 x951) (= x755 x776) (= x367 x957)) x532))))
(assert (= (x856 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x634 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x803 x447))
(assert (= (ite (= x231 x1117) x1209 (x105 x231)) (x1198 x231)))
(assert (x803 x611))
(assert (= (ite (and (not x1225) x1090 x617 (not x943) (not x281)) (x802 x831) (ite (and (not x281) (not x943) x617 (not x1090)) (x694 x831) (ite (and (not x943) x281 x617) (x694 x831) (x996 x831)))) (x520 x831)))
(assert (x803 x115))
(assert (= (x379 x182) (ite (and x302 x124 x715 x1102 x347 (not x688)) (x505 x182) (ite (and (not x1102) x124 x302 x347 x715) (x645 x182) (ite (and x124 x347 (not x715) x302) (x1198 x182) (ite (and (not x302) x347 x124) (x105 x182) (x143 x182)))))))
(assert (= 1889567281 (x149 (x856 1889567281))))
(assert (= (x526 x1114) (ite (= x1114 x112) x735 (x1269 x1114))))
(assert (x803 x114))
(assert (x1333 x1023))
(assert (= (x645 x456) (ite (= x456 x1058) x784 (x1198 x456))))
(assert (x1333 x780))
(assert (x803 x254))
(assert (x803 x1249))
(assert (= (x149 (x634 x218)) x218))
(assert (x803 x660))
(assert (=> (> (+ 10000 1) x903) (= (x634 x903) (x856 x903))))
(assert (x803 x655))
(assert (= (x149 (x634 x312)) x312))
(assert (x803 x1029))
(assert (= (x386 x1303) (ite (and x298 x617) (x585 x1303) (x808 x1303))))
(assert (x739 x578 x805))
(assert (x803 x1297))
(assert (x803 x174))
(assert (x803 x65))
(assert (= (x634 69947311) (x856 69947311)))
(assert (x803 x656))
(assert (= x1161 (x149 (x634 x1161))))
(assert (x803 x975))
(assert (= (x1156 x182) (ite (= x182 x928) x1111 (x526 x182))))
(assert (x803 x818))
(assert (x803 x260))
(assert (x1333 x1140))
(assert (= (=> (and (= x479 (or (not x540) x1165)) (= x1073 x1223) (= (and x323 x233) x1165) (= (<= x1073 x419) x323)) (and x479 (=> (and (= x1077 x303) (= x663 x306) (= x366 2939843472) (= true x1092) (= x145 87118632) (= x495 x367)) x801))) x1172))
(assert (= (x520 x378) (ite (and x1090 (not x281) (not x943) x617 (not x1225)) (x802 x378) (ite (and x617 (not x1090) (not x281) (not x943)) (x694 x378) (ite (and x617 (not x943) x281) (x694 x378) (x996 x378))))))
(assert (= 1986467848 (x149 (x856 1986467848))))
(assert (=> (< (- x1091 1) 10000) (= (x634 x1091) (x856 x1091))))
(assert (= (x149 (x856 2293535753)) 2293535753))
(assert (=> (< (- x937 1) 10000) (= (x634 x937) (x856 x937))))
(assert (x803 x220))
(assert (x334 1461501637330902918203684832716283019655932542975))
(assert (x803 x986))
(assert (= x1012 true))
(assert (= (ite (= x70 x839) x155 (x1352 x839)) (x694 x839)))
(assert (= (ite (= x1048 x152) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x152)) (x105 x152)))
(assert (x803 x1131))
(assert (x1333 x663))
(assert (x803 x113))
(assert (x803 x841))
(assert (x803 x321))
(assert (= (ite (= x1114 x1038) x799 (x694 x1114)) (x802 x1114)))
(assert (x803 x577))
(assert (= (x734 x417) (ite (and x124 (not x594) x347) (x379 x417) (x91 x417))))
(assert (=> (> (+ 10000 1) x358) (= (x856 x358) (x634 x358))))
(assert (= (ite (= x70 x231) x155 (x1352 x231)) (x694 x231)))
(assert (x803 x755))
(assert (x803 x316))
(assert (x1333 x549))
(assert (=> (> (+ 10000 1) x395) (= (x856 x395) (x634 x395))))
(assert (= (x149 (x1027 x1164 1)) (+ 1 (x149 x1164))))
(assert (x803 x435))
(assert (x803 x1215))
(assert (x1333 x312))
(assert (= (ite (= x1038 x417) x799 (x694 x417)) (x802 x417)))
(assert (= (x149 (x856 2835717307)) 2835717307))
(assert (= (x457 x1237) 0))
(assert (= x628 x836))
(assert (x803 x353))
(assert (= x1186 (=> (= (> x232 0) x124) (and (=> (and (<= x126 1461501637330902918203684832716283019655932542975) (or (and (or (and (= (x1081 (+ x613 96)) x1058) (= x784 (x1198 x616)) (= (> x11 64) x1102) (= (x1081 (+ x557 64)) x616) (or (and x1102 (= (> x11 96) x688) (= x794 (x1081 (+ x557 96))) (= (x1081 (+ 128 x613)) x999) (or (and x688 (= x658 (x1081 (+ 128 x557))) (= x746 (x1081 (+ 160 x613))) (= 128 x695) (= (x505 x658) x66) (= x345 (< 128 x11)) (not x345)) (and (= x695 96) (not x688))) (= (x645 x794) x833)) (and (= x695 64) (not x1102))) x715) (and (= x695 32) (not x715))) (= x1117 x664) x302 (= (< 32 x11) x715) (= (x105 x378) x1209) (= x383 x378)) (and (= x695 0) (not x302))) (= (x1081 (+ x557 32)) x383) (= (x1081 (+ x557 36)) x565) x124 (= x1048 (x1081 (+ x565 96))) x934 (= x314 (x1314 1461501637330902918203684832716283019655932542975 x123)) (= x361 x392) (= (< 0 x644) x934) (= x302 (< 0 x11)) (= (x1081 (+ 128 x565)) x664) (= x644 (x236 (x634 x126))) (= x52 (x1081 (+ x24 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= x613 (x1081 (+ 100 x557))) (= x1028 (x1246 x1114)) (= (x1246 x456) x44) (= (< x11 x695) x594) (= x1322 (x286 (- x254 32))) (or (not x594) (and (= x55 (x1081 (+ x664 x11))) x594)) (= (x1081 (+ x439 160)) x1114) (> x232 0) (= x179 (x1331 x383)) (= 0 x250) (= x24 (x1314 26959946667150639794667015087019630673637144422540572481103610249215 x179)) (= (x286 (- x613 x557)) x254) (= (x1081 (+ 68 x557)) x130) (= (x1135 x361) x126) (< 0 x44) (= (x105 x557) x11)) x514) (=> (not x124) x733)))))
(assert (= 274184521717934524641157099916833587214 (x149 (x856 274184521717934524641157099916833587214))))
(assert (=> (< (- x322 1) 10000) (= (x634 x322) (x856 x322))))
(assert (=> (< (- x489 1) 10000) (= (x634 x489) (x856 x489))))
(assert (= x490 (x149 (x634 x490))))
(assert (= x1236 x1238))
(assert (x803 x1287))
(assert (= (ite (= x1038 x616) x799 (x694 x616)) (x802 x616)))
(assert (= (x149 (x634 x742)) x742))
(assert (x803 x245))
(assert (=> (> (+ 10000 1) x870) (= (x856 x870) (x634 x870))))
(assert (x803 x414))
(assert (x1333 x1094))
(assert (x803 x699))
(assert (x803 x1209))
(assert (x1333 x385))
(assert (x803 x1041))
(assert (x803 x736))
(assert (= (x459 x524) (ite (and (not x943) x1090 (not x1225) x617 (not x281)) (x998 x524) (ite (and (not x1090) (not x943) (not x281) x617) (x1123 x524) (ite (and x617 (not x943) x281) (x1123 x524) (x193 x524))))))
(assert (= x1030 (x149 (x634 x1030))))
(assert (x803 x879))
(assert (=> (> (+ 10000 1) x410) (= (x856 x410) (x634 x410))))
(assert (x803 x1286))
(assert (x1333 x1051))
(assert (= x580 x1238))
(assert (x803 x1343))
(assert (x803 x1329))
(assert (=> (< (- x490 1) 10000) (= (x856 x490) (x634 x490))))
(assert (x803 x248))
(assert (x1333 x571))
(assert (= (x149 (x634 x985)) x985))
(assert (= (x1318 x256) (ite (and x1060 x617 (not x943)) (x847 x256) (ite (and x5 (not x943) (not x1060) x617) (x847 x256) (x1189 x256)))))
(assert (x803 x462))
(assert (x803 x419))
(assert (=> (< (- x1321 1) 10000) (= (x634 x1321) (x856 x1321))))
(assert (x803 x257))
(assert (x803 x234))
(assert (= (x149 (x634 x303)) x303))
(assert (x803 x549))
(assert (x54 x258 x701))
(assert (= (ite (= x1332 x1125) x1178 (x1123 x1125)) (x998 x1125)))
(assert (x803 x350))
(assert (x803 x517))
(assert (= (x634 115792089237316195423570985008687907853269984665640564039457) (x856 115792089237316195423570985008687907853269984665640564039457)))
(assert (x1333 x322))
(assert (= (ite (= x1303 x70) x155 (x1352 x1303)) (x694 x1303)))
(assert (= (x34 x219) (ite (= x626 x219) x1282 (x423 x219))))
(assert (= x399 (x149 (x634 x399))))
(assert (x803 x1204))
(assert (x1333 x937))
(assert (x803 x127))
(assert (= (ite (and x347 x124 (not x594)) (x379 x456) (x91 x456)) (x734 x456)))
(assert (x1333 x342))
(assert (= x997 (=> (and (= (x236 (x634 274184521717934524641157099916833587206)) x1036) (= 2532887486 x888) (>= 1461501637330902918203684832716283019655932542975 x1094) (= x853 (x1123 x19)) (= x1024 (x441 (x634 x1161) x1008 0)) (not (> 2293535753 x888)) (= x19 (x441 (x634 x956) x486 0)) (>= 1461501637330902918203684832716283019655932542975 x956) (not (= x888 2418364589)) (= x853 x245) (<= 0 x853) (not (= 2512682246 x888)) (= (x441 (x634 x192) (x856 4) 0) x1008) (not (= x888 2293535753)) (< x888 2960351575) (< x888 2690754053) (= (x441 (x634 x1094) x1024 0) x486) (< 0 x1036) (<= x853 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1161 1461501637330902918203684832716283019655932542975)) (=> (and (>= x1315 0) (= (x286 (- x712 4)) x716) (= x392 (x1081 (+ 36 x676))) (= (uninterp_mod (* 32 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x175) (= x456 (x1081 (+ x949 160))) (not (= 2690754053 x1141)) (= x232 (x1135 x1249)) (not (< x758 1)) (or (and (= (x1081 (+ 160 x439)) x740) (= x206 (uninterp_mod (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x298)) x298) (<= 0 x829) (= x657 x676) (< x1141 2960351575) (= 128 x508) (= x949 (uninterp_mod (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x716) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x716) true) (< x716 160)))) (> x712 163) (= x646 x271) (>= 1461501637330902918203684832716283019655932542975 x271) (= x905 x606) (= (x1081 (+ x676 35)) x211) (= x819 (and x525 x1039)) (= x699 x38) (= (= 0 x232) x298) (= x285 x1131) (= x245 x967) (< 0 x946) (= x75 (x1081 (+ x987 x392))) (= x563 (x1081 (+ x175 32))) (= (< 0 x397) x884) (= (x286 (- x758 1)) x397) (= x123 x756) (or (and (= x557 x212) x943) (and (not (> x914 x1315)) (>= x1195 0) (= x377 (x1027 x1164 1)) (= (x890 x1144) x764) (= (x441 (x634 x1091) x299 0) x403) (>= x786 0) (not (> x914 x1315)) (<= x1315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x558 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x552) (= x408 (x441 (x634 x101) x1179 0)) (= (x201 x377) x155) (= x299 (x441 (x634 x905) (x856 6) 0)) (= (x1319 x1164) x1195) (>= x1315 0) (= x896 (> x650 x786)) (= x1060 (= 0 x764)) (= x871 (x1314 1461501637330902918203684832716283019655932542975 x123)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x786) (= (x441 (x634 x905) (x856 5) 0) x1104) (= (x694 x70) x650) (= (x1081 (+ x905 1)) x133) (= x558 (x1318 x256)) (= x70 (x1081 (+ x839 32))) (= (x441 (x634 x549) x1104 0) x1112) (not x943) (<= 0 x1315) (= x1252 (x1314 1461501637330902918203684832716283019655932542975 x271)) (not (= x914 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and (= x816 (= 0 x786)) x896 (or (and (= x788 604800) (= x1301 x1) (= x1 (ite (< x355 604800) x355 604800)) (not (> x786 x636)) (not x816) (= (x286 (- x636 x786)) x355)) (and (not (< x636 x947)) (= (x694 x839) x947) (= x1301 x356) x816 (= (x286 (- x636 x947)) x356))) (or (and (= x699 x636) (not x1182)) (and (= x636 x575) x1182 (= (x694 x70) x575))) (= x1182 (> x699 x265)) (= x265 (x694 x70))) (and (= x1301 0) (not x896))) (or (and (or (and (= 0 x387) (not x792)) (and x792 (= (= x577 0) x1130) (or (and (= x542 x699) (not x1227)) (and x1227 (= x409 (x752 x1047)) (= x542 x409))) (= (x752 x1047) x1192) (= x1227 (< x1192 x699)) (or (and (not x1130) (not (> x577 x542)) (= x249 (ite (> 604800 x994) x994 604800)) (= x387 x249) (= (x286 (- x542 x577)) x994) (= 604800 x842)) (and (not (< x542 x706)) (= x463 (x286 (- x542 x706))) (= x463 x387) x1130 (= x706 (x752 x212)))))) (= x490 (x1314 1461501637330902918203684832716283019655932542975 x123)) (= x960 (x441 (x634 x905) (x856 7) 0)) (or (and (= x1335 x839) (= x974 (x441 (x634 x905) (x856 7) 0)) (= (x441 (x634 x304) x445 0) x539) (= x304 (x1314 1461501637330902918203684832716283019655932542975 x123)) x5 (= x113 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x445 (x441 (x634 x113) x974 0))) (and (= x1153 (x1314 1461501637330902918203684832716283019655932542975 x271)) (not x5) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x764 x387)) (= x1002 x873) (= x1002 (* x387 x764)) (= x710 (x441 (x634 x67) x398 0)) (= x398 (x441 (x634 x905) (x856 3) 0)) (= (x1314 1461501637330902918203684832716283019655932542975 x123) x308) (= (x441 (x634 x1153) x1157 0) x503) (< (+ x873 x927) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x476 x873) (= x870 (x1314 1461501637330902918203684832716283019655932542975 x123)) (= x428 (+ x476 x1187)) (= x927 (x847 x213)) (<= x927 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x441 (x634 x870) x710 0) x213) (= x67 (x1314 1461501637330902918203684832716283019655932542975 x271)) (>= x927 0) (= x1335 x839) (= (x441 (x634 x308) x503 0) x1138) (= x1187 x927) (= x1157 (x441 (x634 x905) (x856 7) 0)))) (= (x468 x1119) x577) (= (x441 (x634 x490) x880 0) x1119) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x230) (= x1335 (x1081 (+ 64 x212))) (= x1047 (x1081 (+ 32 x212))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x577) (<= 0 x577) (<= 0 x230) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x1250) (= x208 (x1319 x970)) (= x5 (= x387 0)) (= (x201 x832) x230) (= (x752 x1047) x220) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x208) (= x792 (< x577 x220)) (<= 0 x208) (= x832 (x1027 x970 1)) (not x1060) (= (x441 (x634 x1250) x960 0) x880) (= x970 (x441 (x634 x905) (x856 1) 0))) (and (= (x441 (x634 x652) x173 0) x181) (= x875 (x441 (x634 x905) (x856 7) 0)) x1060 (= x745 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x173 (x441 (x634 x745) x875 0)) (= x212 x839) (= (x1314 1461501637330902918203684832716283019655932542975 x123) x652))) (= x1044 (x1314 1461501637330902918203684832716283019655932542975 x123)) (= x1179 (x441 (x634 x905) (x856 9) 0)) (<= 0 x155) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1167) (= (x441 (x634 x905) (x856 3) 0) x1064) (or (and (= x536 (uninterp_mod (* 1000000000000000000 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x1098) (= (x1314 x578 x805) x1098) (= x1090 (> x232 0)) (< 0 x775) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x164) (<= 0 x164) (= (x441 (x634 x665) x1071 0) x1334) (= x966 (x1314 1461501637330902918203684832716283019655932542975 x123)) (>= x223 0) (= x59 (x1314 1461501637330902918203684832716283019655932542975 x123)) (>= x547 0) (= (x694 x1038) x1248) (= (+ x1342 x1296) x799) (= (x441 (x634 x905) (x856 4) 0) x705) x1090 (= x1225 (< 1 x232)) (= (x1135 x14) x322) (= (* x164 x184) x855) (= x548 (x441 (x634 x905) (x856 4) 0)) (> x232 0) (or (and (= x954 (x1314 1461501637330902918203684832716283019655932542975 x123)) (<= x199 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x188 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x846 x558)) (< (* x199 x184) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x804 (x802 x210)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x804 x381)) (= (* x184 x199) x1110) x1225 (= (x441 (x634 x1232) x90 0) x36) (= (x1081 (+ x439 192)) x210) (<= x709 1461501637330902918203684832716283019655932542975) (= (x103 x421) x199) (>= x199 0) (= (x1135 x686) x350) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x1232) (>= x188 0) (= (x441 (x634 x647) x1139 0) x421) (= x592 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x846 (x998 x1125)) (= x134 (x441 (x634 x244) x388 0)) (= (x441 (x634 x709) x812 0) x1125) (= x200 (x441 (x634 x905) (x856 11) 0)) (= (x441 (x634 x592) x732 0) x388) (> x232 1) (< 1 x232) (<= x647 1461501637330902918203684832716283019655932542975) (= x647 (x1135 x686)) (= x318 (x802 x456)) (= (x998 x268) x188) (>= x846 0) (= x558 x582) (= x244 (x1314 1461501637330902918203684832716283019655932542975 x123)) (= x1074 (+ x582 x826)) (= x240 x804) (= (x441 (x634 x489) x200 0) x1139) (<= x846 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x381 x1197) (= x381 (- (/ x1110 1000000000000000000) (uninterp_frac x1110 1000000000000000000))) (>= 1461501637330902918203684832716283019655932542975 x350) (< 1 x318) (= x709 (x1135 x686)) (= (x441 (x634 x954) x36 0) x812) (= x826 x846) (not x1205) (= x115 (+ x1197 x240)) (= x1205 (> x232 2)) (= (x441 (x634 x905) (x856 4) 0) x732) (= x268 (x441 (x634 x350) x134 0)) (< 1 x232) (= x686 (x1081 (+ x1249 64))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x188) (= x90 (x441 (x634 x905) (x856 4) 0)) (= x489 (x1314 1461501637330902918203684832716283019655932542975 x271))) (not x1225)) (<= x777 1461501637330902918203684832716283019655932542975) (> x232 0) (= (x441 (x634 x777) x1334 0) x1052) (= x162 x558) (= x512 (x694 x456)) (= (x103 x1052) x164) (= x1296 x556) (= x97 (x441 (x634 x1170) x707 0)) (= x392 x14) (= x547 0) (= x1038 (x1081 (+ x439 160))) (= x777 (x1135 x14)) (= (x441 (x634 x966) x483 0) x707) (= (- (/ x855 1000000000000000000) (uninterp_frac x855 1000000000000000000)) x556) (= (x1123 x1332) x223) (= x1332 (x441 (x634 x322) x1185 0)) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x447) (<= x322 1461501637330902918203684832716283019655932542975) (> x512 0) (= x483 (x441 (x634 x447) x548 0)) (= x1071 (x441 (x634 x905) (x856 11) 0)) (<= x1170 1461501637330902918203684832716283019655932542975) (= (x1123 x97) x547) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x920) (= x887 (x441 (x634 x920) x705 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x556 x1248)) (= (x441 (x634 x59) x887 0) x1185) (< 0 x232) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x223 x558)) (= x665 (x1314 1461501637330902918203684832716283019655932542975 x271)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x547) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x184 x164)) (= x223 x651) (= x1248 x1342) (= (+ x651 x162) x1178) (<= x223 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1170 (x1135 x14))) (not x1090)) (= x578 1) (not x281) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x558) 1 0) x805) (= (- (/ x536 x775) (uninterp_frac x536 x775)) x184)) x281) (= x918 (x441 (x634 x1252) x897 0)) (or (and (= x494 x557) x1194) (and (= (x441 (x634 x899) x315 0) x170) (= x267 (x305 x389)) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x316) (= x735 (x201 x45)) (= x46 (x441 (x634 x1030) x1152 0)) (<= 0 x1315) (<= x735 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x267 0) (= x118 (x1319 x864)) (= x814 (x763 x945)) (= x1020 (x1314 1461501637330902918203684832716283019655932542975 x271)) (or (and (= (x1314 1461501637330902918203684832716283019655932542975 x271) x1329) (= x1276 (x441 (x634 x133) (x856 6) 0)) (= (x441 (x634 x1329) x1276 0) x978) x848) (and (= x29 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x823 (x772 x862)) (= x82 x823) (= x12 (x441 (x634 x133) (x856 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x823) (= x882 x630) (not x848) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x630 x823)) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x358) (= (x441 (x634 x29) x12 0) x621) (= (x441 (x634 x358) x850 0) x862) (= x850 (x441 (x634 x133) (x856 5) 0)) (>= x823 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1235 x1129)) (= x630 x60) (= (+ x60 x82) x670) (= (* x1129 x1235) x882))) (not (< x1315 x133)) (= (x441 (x634 x517) x37 0) x945) (or (and (= x169 (x526 x112)) (or (and (= x1068 604800) (= x368 (x286 (- x1201 x814))) (not (> x814 x1201)) (not x860) (= x625 x1129) (= (ite (< x368 604800) x368 604800) x625)) (and (= x1129 x704) (= x916 (x526 x637)) x860 (= (x286 (- x1201 x916)) x704) (not (> x916 x1201)))) x551 (or (and (= x1201 x699) (not x382)) (and (= x307 x1201) (= x307 (x526 x112)) x382)) (= x860 (= 0 x814)) (= x382 (> x699 x169))) (and (not x551) (= x1129 0))) (or x1274 (and (= x159 (ite (< 115792089237316195423570985008687907853269984665640564039457 x267) 1 0)) (= (> x232 0) x1145) (= (- (/ x349 x348) (uninterp_frac x349 x348)) x589) (> x348 0) (= x769 1) (not x1274) (= (uninterp_mod (* x267 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x349) (or (and (= (x1081 (+ x439 160)) x928) (= (x1135 x838) x1113) (= x218 (x1135 x838)) (>= 1461501637330902918203684832716283019655932542975 x218) (= (+ x446 x502) x1111) (= 0 x40) (= x1076 (x441 (x634 x593) x877 0)) (< (* x234 x589) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x529) (>= x40 0) (<= 0 x529) (> x232 0) (= x384 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x1226 (x441 (x634 x133) (x856 11) 0)) (= x991 x502) (= x251 x267) (< (+ x1171 x991) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x526 x456) x1204) (= x168 (< 1 x232)) (= (x103 x1076) x234) (= (x526 x928) x1171) (<= x593 1461501637330902918203684832716283019655932542975) x1145 (< 0 x232) (= x838 x392) (= (x1314 1461501637330902918203684832716283019655932542975 x123) x280) (< (+ x267 x529) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x446 x1171) (= x747 (+ x251 x962)) (= (x441 (x634 x1113) x203 0) x413) (= x524 (x441 (x634 x218) x7 0)) (= x399 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= (x441 (x634 x290) x229 0) x191) (<= x1113 1461501637330902918203684832716283019655932542975) (= (x441 (x634 x1181) x516 0) x203) (= x344 (* x589 x234)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x40) (= x962 x529) (= (x441 (x634 x133) (x856 4) 0) x229) (= (x1314 1461501637330902918203684832716283019655932542975 x123) x1181) (or (and (= x1345 (x103 x93)) (<= x635 1461501637330902918203684832716283019655932542975) (= (x441 (x634 x982) x1072 0) x93) (< (* x1345 x589) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1072 (x441 (x634 x50) x239 0)) (= x1173 (* x1345 x589)) (= (x441 (x634 x133) (x856 11) 0) x239) (= (x1081 (+ x439 192)) x831) (= (x441 (x634 x985) x216 0) x263) (= x985 (x1314 1461501637330902918203684832716283019655932542975 x271)) x168 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x811 x869)) (= x482 x721) (= x482 (x1228 x1015)) (= (x441 (x634 x635) x363 0) x1015) (= x50 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x811 x1289) (> x674 1) (<= 0 x402) (= x869 x21) (= (+ x1289 x21) x1268) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x402) (= (x441 (x634 x631) x263 0) x363) (<= 0 x482) (= (x1314 1461501637330902918203684832716283019655932542975 x123) x513) (>= 1461501637330902918203684832716283019655932542975 x982) (= x766 (x1081 (+ x1249 64))) (= x632 (x441 (x634 x513) x343 0)) (= (> x232 2) x1256) (<= 0 x1345) (= x343 (x441 (x634 x713) x330 0)) (< 1 x232) (< (+ x267 x482) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x811 (x1156 x831)) (= x1159 (+ x751 x721)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x482) (< 1 x232) (= (x441 (x634 x133) (x856 4) 0) x216) (< 1 x232) (= (x1156 x456) x674) (= x713 (x1314 1461501637330902918203684832716283019655932542975 x271)) (not x1256) (= x982 (x1135 x766)) (<= x1345 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (- (/ x1173 1000000000000000000) (uninterp_frac x1173 1000000000000000000)) x869) (= x782 (x441 (x634 x353) x632 0)) (= x330 (x441 (x634 x133) (x856 4) 0)) (= (x1228 x782) x402) (= x635 (x1135 x766)) (= x353 (x1135 x766)) (= x402 0) (= (x1314 1461501637330902918203684832716283019655932542975 x123) x631) (= x267 x751) (>= 1461501637330902918203684832716283019655932542975 x353)) (not x168)) (= x529 (x459 x413)) (= x579 (x441 (x634 x133) (x856 4) 0)) (= x991 (- (/ x344 1000000000000000000) (uninterp_frac x344 1000000000000000000))) (<= x234 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x441 (x634 x384) x579 0) x516) (= x290 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x593 (x1135 x838)) (= x40 (x459 x524)) (= (x441 (x634 x399) x1226 0) x877) (< 0 x1204) (> x232 0) (<= 0 x234) (= x7 (x441 (x634 x280) x191 0))) (not x1145)) (= 0 x1097) (= (x1314 x769 x159) x1097))) (not (= x133 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x864 (x441 (x634 x133) (x856 1) 0)) (<= x267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x430 (x1314 1461501637330902918203684832716283019655932542975 x123)) (> x406 x473) (= (x1314 1461501637330902918203684832716283019655932542975 x123) x1030) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x207) (= x696 (x1081 (+ 64 x637))) (<= 0 x348) (>= x1235 0) (not (> x133 x1315)) (not x1194) (= x45 (x1027 x864 1)) (= x720 (x441 (x634 x133) (x856 3) 0)) (= x348 (x1151 x923)) (= x406 (x1081 (+ x905 2))) (= (x1307 x170) x1235) (>= x814 0) (= x889 (x890 x46)) (= x899 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x112 (x1081 (+ 32 x637))) (= x557 x696) (= x1287 (x526 x112)) (= x1079 (x441 (x634 x133) (x856 9) 0)) (= x848 (= x1129 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1315) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1315) (= (x441 (x634 x133) (x856 6) 0) x37) (= x226 (= 0 x889)) (= (x441 (x634 x133) (x856 10) 0) x315) (or (and (>= x977 0) (<= x336 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x87 (x1314 1461501637330902918203684832716283019655932542975 x123)) (= (x757 x1305) x724) (= x461 (< x724 x1286)) (= (x1081 (+ x839 96)) x1095) (= (x201 x1184) x336) (= (x1081 (+ 128 x839)) x703) (= x623 (x441 (x634 x133) (x856 7) 0)) (not x226) (>= x724 0) (>= x336 0) (or (and (or (and (= x778 (x243 x1095)) x1158 (= x362 x778)) (and (= x699 x362) (not x1158))) (= x624 (= x724 0)) (= x69 (x243 x1095)) (or (and (= (x243 x494) x904) (= x1299 x697) x624 (not (< x362 x904)) (= (x286 (- x362 x904)) x697)) (and (= x1299 x867) (= x1295 604800) (not (< x362 x724)) (= (x286 (- x362 x724)) x455) (not x624) (= (ite (< x455 604800) x455 604800) x867))) (= x1158 (< x69 x699)) x461) (and (= x1299 0) (not x461))) (= x1305 (x441 (x634 x87) x915 0)) (or (and (= x609 x435) (= (x441 (x634 x564) x1264 0) x1251) (= (x1318 x61) x891) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x564) (= (x441 (x634 x56) x426 0) x448) (= x435 x1290) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x891) (= x61 (x441 (x634 x1321) x1251 0)) (= (* x889 x1299) x1290) (= x1264 (x441 (x634 x133) (x856 3) 0)) (= x426 (x441 (x634 x1109) x1218 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x435 x891)) (< (* x889 x1299) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x56 (x1314 1461501637330902918203684832716283019655932542975 x123)) (not x909) (= x1321 (x1314 1461501637330902918203684832716283019655932542975 x123)) (<= 0 x891) (= (+ x798 x609) x795) (= x1109 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x703 x637) (= x798 x891) (= (x441 (x634 x133) (x856 7) 0) x1218)) (and (= x80 (x441 (x634 x1241) x913 0)) x909 (= (x441 (x634 x903) x80 0) x57) (= (x441 (x634 x133) (x856 7) 0) x913) (= x1241 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= (x1314 1461501637330902918203684832716283019655932542975 x123) x903) (= x637 x703))) (= x458 (x441 (x634 x133) (x856 1) 0)) (<= x977 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1027 x458 1) x1184) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x395) (= x909 (= x1299 0)) (= (x441 (x634 x395) x623 0) x915) (<= x724 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x977 (x1319 x458)) (= (x243 x1095) x1286)) (and (= x708 (x441 (x634 x484) x41 0)) (= x637 x494) (= x484 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x171 (x1314 1461501637330902918203684832716283019655932542975 x123)) (= x876 (x441 (x634 x171) x708 0)) (= (x441 (x634 x133) (x856 7) 0) x41) x226)) (<= x889 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x517 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x654 (x441 (x634 x1020) x720 0)) (= x1152 (x441 (x634 x207) x1079 0)) (= (> x1287 x814) x551) (<= 0 x118) (<= x1235 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x389 (x441 (x634 x430) x654 0)) (<= x814 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x735 0) (= x1274 (= 0 x267)) (= x923 (x441 (x634 x316) x936 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x118) (<= 0 x889) (<= 0 x1315) (= x936 (x441 (x634 x133) (x856 5) 0)))) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x549) (<= x1315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1167) (>= x775 0) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x1091) (= x1194 (< x85 x133)) (>= x558 0) (= x101 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= (= 0 x558) x281) (<= 0 x764) (= x494 (x1081 (+ x839 64))) (= x897 (x441 (x634 x905) (x856 10) 0)) (= x775 (x772 x1112)) (<= x764 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x256 (x441 (x634 x1044) x973 0)) (= x786 (x453 x403)) (= (= x1301 0) x881) (or (and (= (x441 (x634 x1239) x189 0) x470) (= (x441 (x634 x905) (x856 6) 0) x189) x881 (= (x1314 1461501637330902918203684832716283019655932542975 x271) x1239)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1301 x1167)) (= (x441 (x634 x905) (x856 5) 0) x28) (= x1341 (x441 (x634 x1253) x369 0)) (= x879 (x320 x1062)) (= (x441 (x634 x750) x28 0) x1062) (= x369 (x441 (x634 x905) (x856 6) 0)) (= x598 x1262) (= x18 x879) (= x750 (x1314 1461501637330902918203684832716283019655932542975 x271)) (= x1262 (* x1167 x1301)) (not x881) (= x598 x275) (= (x1314 1461501637330902918203684832716283019655932542975 x271) x1253) (< (+ x879 x598) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x879 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x879) (= (+ x18 x275) x1031))) (= (x441 (x634 x905) (x856 1) 0) x1164) (<= x1195 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x441 (x634 x552) x1064 0) x973) (= (x1307 x918) x1167) (<= x775 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x155) (= (x441 (x634 x871) x408 0) x1144))) (not (> 2293535753 x1141)) (= (x236 (x634 274184521717934524641157099916833587206)) x946) (> x1315 x85) (= x439 (x1081 (+ 32 x949))) (>= x285 0) (or (not x884) (and (or (not x158) (and (= (x1314 1461501637330902918203684832716283019655932542975 x114) x1029) (not (= x1029 x122)) x158 (= x854 (x1166 128)) (< 0 x854) (= x148 (x1166 192)) (= (> x758 2) x424) (or (not x424) (and (= x258 (x1166 160)) (= x963 (< 3 x758)) (= (x1166 128) x568) (= (x1166 224) x1217) x424 (not x963) (= x972 (x1314 1461501637330902918203684832716283019655932542975 x1217)) (= x4 (x1314 1461501637330902918203684832716283019655932542975 x258)) (> x1302 0) (not (= x972 x4)) (< 2 x568) (= (x1166 128) x1302))) (= x1348 (x1166 128)) (= (x1314 1461501637330902918203684832716283019655932542975 x148) x122) (= (x1166 160) x114) (< 1 x1348))) (not (> 1 x758)) (= (x286 (- x758 1)) x102) (not (> x102 1)) (= x158 (> x758 1)) x884)) x819 (not (> x905 x85)) (= x845 x841) (not (< 18446744073709551615 x232)) (>= 1461501637330902918203684832716283019655932542975 x845) (not (= x1141 2764855426)) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712) true) (= x271 x1343) (not (> 2690754053 x1141)) (<= 0 x845) (not (= x1141 2743102681)) (= x905 x914) (= 2939843472 x1141) (= x407 x123) (= (x1081 (+ x175 160)) x156) (not (= x1141 2798343961)) (= x943 (> x905 x85)) (= x85 x473) (= x85 x545) (= 0 x714) (not (> x75 x712)) (<= x829 1461501637330902918203684832716283019655932542975) (or (and (> x211 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712)) (and (< x211 x712) (= (<= x712 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x211)))) (= (<= x967 x88) x525) (= x859 x841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1315) (not (= x1141 2868243304)) (= x1249 (x1081 (+ 4 x676))) (<= x123 1461501637330902918203684832716283019655932542975) (<= x285 1461501637330902918203684832716283019655932542975) (not (< x712 4)) (= (x1081 (+ x456 x563)) x212) (= x987 (uninterp_mod (* x232 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x758 (x1166 128)) (not (> x657 18446744073709551615)) (= x341 x714)) x1186))))
(assert (x803 x310))
(assert (x334 x578))
(assert (= (x149 (x634 x244)) x244))
(assert (x803 x395))
(assert (x803 x910))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x149 (x856 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x803 x1192))
(assert (x803 x265))
(assert (x803 x417))
(assert (= (ite (and x1090 (not x281) x617 (not x1225) (not x943)) (x802 x616) (ite (and (not x1090) x617 (not x943) (not x281)) (x694 x616) (ite (and x281 x617 (not x943)) (x694 x616) (x996 x616)))) (x520 x616)))
(assert (x803 x1253))
(assert (x803 x920))
(assert (x803 x863))
(assert (x803 x231))
(assert (= (ite (= x1303 x928) x1111 (x526 x1303)) (x1156 x1303)))
(assert (x803 x988))
(assert (x803 x1195))
(assert (x1333 x966))
(assert (= (x149 (x634 x1153)) x1153))
(assert (x803 x1230))
(assert (=> (< (- x1250 1) 10000) (= (x634 x1250) (x856 x1250))))
(assert (= x450 (=> (= x1281 (< 1 x232)) (and (=> (not x1281) x733) (=> (and (> x232 1) (= (x1081 (+ x439 192)) x431) (= x940 (x527 x431)) (= x639 (> x749 x3)) (= x535 (x1081 (+ 68 x488))) (= (x1314 1461501637330902918203684832716283019655932542975 x123) x753) (<= x81 1461501637330902918203684832716283019655932542975) (= (x423 x488) x3) x1281 (= x1148 (x1081 (+ 100 x488))) (= x1340 (x286 (- x1148 x488))) (= (x1081 (+ x727 96)) x196) (= (x1081 (+ x590 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x849) (< 1 x1083) (= x417 (x1081 (+ x488 32))) (= (> x1009 0) x187) (or (and (= x749 0) (not x291)) (and (= x626 x1183) (= x125 (> x3 32)) (= x417 x182) x291 (= x1282 (x423 x182)) (or (and (= x749 32) (not x125)) (and (or (and (= x749 64) (not x150)) (and (= x411 (x1081 (+ x1148 128))) (= x1240 (x485 x219)) x150 (= (x1081 (+ x488 96)) x219) (= (< 96 x3) x979) (or (and (= x1134 (x1081 (+ 160 x1148))) (= x248 (x252 x152)) (= x152 (x1081 (+ 128 x488))) (= 128 x749) (not x172) x979 (= (< 128 x3) x172)) (and (= 96 x749) (not x979))))) (= (x34 x231) x779) (= (x1081 (+ 96 x1148)) x573) x125 (= x231 (x1081 (+ 64 x488))) (= (> x3 64) x150))))) (= x641 0) (= (x1081 (+ x1249 64)) x1336) x187 (= (x1314 26959946667150639794667015087019630673637144422540572481103610249215 x153) x590) (= (x1099 x417) x153) (= (x236 (x634 x81)) x1009) (= x1183 (x1081 (+ 128 x727))) (= x995 (x286 (- x1340 32))) (= x81 (x1135 x1336)) (= x1083 (x527 x456)) (or (not x639) (and (= x768 (x1081 (+ x1183 x3))) x639)) (= (x1081 (+ 36 x488)) x727) (= x291 (< 0 x3))) x288)))))
(assert (=> (> (+ 10000 1) x985) (= (x856 x985) (x634 x985))))
(assert (x803 x341))
(assert (x803 x846))
(assert (x803 x1040))
(assert (= (x149 (x634 x447)) x447))
(assert (= (x459 x1053) (ite (and x1090 x617 (not x1225) (not x281) (not x943)) (x998 x1053) (ite (and x617 (not x281) (not x1090) (not x943)) (x1123 x1053) (ite (and (not x943) x617 x281) (x1123 x1053) (x193 x1053))))))
(assert (x803 x904))
(assert (x1333 x1232))
(assert (x803 x764))
(assert (x1333 x353))
(assert (= (x802 x794) (ite (= x794 x1038) x799 (x694 x794))))
(assert (= (x149 (x634 x1051)) x1051))
(assert (x54 x123 x335))
(assert (= (x459 x139) (ite (and x1090 (not x281) (not x1225) (not x943) x617) (x998 x139) (ite (and x617 (not x943) (not x281) (not x1090)) (x1123 x139) (ite (and x281 x617 (not x943)) (x1123 x139) (x193 x139))))))
(assert (x803 x1294))
(assert (x803 x646))
(assert (= (x1156 x431) (ite (= x431 x928) x1111 (x526 x431))))
(assert (= (x149 (x634 x553)) x553))
(assert (x803 x1315))
(assert (= (ite (= x152 x112) x735 (x1269 x152)) (x526 x152)))
(assert (= (x1156 x658) (ite (= x658 x928) x1111 (x526 x658))))
(assert (= (x856 1000000000000000000) (x634 1000000000000000000)))
(assert (x803 x9))
(assert (=> (< (- x135 1) 10000) (= (x856 x135) (x634 x135))))
(assert (= (x634 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x856 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (ite (= x794 x1048) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x794)) (x105 x794)))
(assert (x1333 x113))
(assert (= (x856 1986467848) (x634 1986467848)))
(assert (= (ite (and x617 (not x281) x1090 (not x943) (not x1225)) (x802 x417) (ite (and (not x281) (not x943) (not x1090) x617) (x694 x417) (ite (and x281 (not x943) x617) (x694 x417) (x996 x417)))) (x520 x417)))
(assert (= x133 (x149 (x634 x133))))
(assert (=> (< (- x1294 1) 10000) (= (x634 x1294) (x856 x1294))))
(assert (= (ite (= x219 x999) x833 (x645 x219)) (x505 x219)))
(assert (= (x149 (x634 x660)) x660))
(assert (x803 x378))
(assert (=> (< (- x1023 1) 10000) (= (x634 x1023) (x856 x1023))))
(assert (x803 x810))
(assert (= x507 x661))
(assert (x1333 x430))
(assert (x803 x387))
(assert (x803 x1212))
(assert (= 274184521717934524641157099916833587206 (x149 (x634 274184521717934524641157099916833587206))))
(assert (= (ite (= x1114 x928) x1111 (x526 x1114)) (x1156 x1114)))
(assert (x803 x366))
(assert (x803 x1295))
(assert (x1333 x140))
(assert (= (x149 (x634 x1109)) x1109))
(assert (x1333 x1181))
(assert (x803 x29))
(assert (= (x457 x658) 0))
(assert (x803 x557))
(assert (x1333 x1153))
(assert (=> (< (- x384 1) 10000) (= (x634 x384) (x856 x384))))
(assert (x803 x126))
(assert (x803 x1170))
(assert (= (x149 (x634 x631)) x631))
(assert (x803 x300))
(assert (x803 x1272))
(assert (x803 x1141))
(assert (=> (< (- x300 1) 10000) (= (x856 x300) (x634 x300))))
(assert (x803 x1221))
(assert (x803 x473))
(assert (=> (> (+ 10000 1) x1170) (= (x856 x1170) (x634 x1170))))
(assert (= (x585 x152) (ite (= x456 x152) x232 (x1166 x152))))
(assert (x803 x1097))
(assert (= (x1198 x417) (ite (= x417 x1117) x1209 (x105 x417))))
(assert (x803 x456))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x149 (x856 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (=> (< (- x665 1) 10000) (= (x856 x665) (x634 x665))))
(assert (= (x149 (x634 x937)) x937))
(assert (x803 x674))
(assert (x803 x1117))
(assert (x803 x640))
(assert (x1333 x171))
(assert (= (ite (= x928 x456) x1111 (x526 x456)) (x1156 x456)))
(assert (x803 x899))
(assert (x803 x775))
(assert (=> (< (- x821 1) 10000) (= (x856 x821) (x634 x821))))
(assert (=> (< (- x892 1) 10000) (= (x856 x892) (x634 x892))))
(assert (x803 x327))
(assert (= (=> (and (= (x441 (x634 x1155) x893 0) x142) (= (x104 x142) x569) (not (= x1100 2743102681)) (not (= 2690754053 x1100)) (= x672 (x236 (x634 274184521717934524641157099916833587206))) (= (x441 (x634 x521) (x856 5) 0) x893) (not (> 2293535753 x1100)) (= x1100 2798343961) (= x569 x941) (> x672 0) (not (= x1100 2764855426)) (< x1100 2960351575) (<= x1155 1461501637330902918203684832716283019655932542975) (not (< x1100 2690754053)) (<= 0 x569) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x569)) (=> (and (= x941 x1272) (= x659 x367) (= x42 x306) (= x1077 x660)) x559)) x993))
(assert (= (x149 (x634 x652)) x652))
(assert (= (ite (= x1237 x928) x1111 (x526 x1237)) (x1156 x1237)))
(assert (= (ite (= x112 x1237) x735 (x1269 x1237)) (x526 x1237)))
(assert (x803 x553))
(assert (= (=> (and x586 (= x586 (< (x1142 (x634 x126)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< x261 115792089237316195423570985008687907853269984665640564039457584007913129639936) x510) (= x11 x723) (= x1063 (>= x257 0)) (= (x673 (x634 274184521717934524641157099916833587206)) x583) x1063 x510 (= x900 (= x126 274184521717934524641157099916833587218)) (= x257 (x673 (x634 274184521717934524641157099916833587206))) (= (x673 (x634 x126)) x261) (= (x1142 (x634 x126)) x266)) (and (=> (and (= (x286 (- x1273 x865)) x655) (= x1330 (> x865 x1273)) (= x16 68) (= (x441 (x634 x20) (x856 1) 0) x84) (not x581) (= x774 (+ x917 x1266)) (= x16 x723) (> x1040 0) (= x988 274184521717934524641157099916833587206) (= x581 (< x1273 x980)) (not (= 826074471 x287)) (not (< x16 4)) (= 1 x487) x900 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1273) (= x321 274184521717934524641157099916833587206) (not (> 649617121 x287)) (= x790 (or (and (= (<= x595 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x595 64)) (> x595 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x865 x1028) (= 2835717307 x287) (not x1263) (= x418 x20) (= (x441 (x634 274184521717934524641157099916833587206) (x856 1) 0) x872) (= x917 x1132) (not (= x287 2514000705)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1132) (>= 1461501637330902918203684832716283019655932542975 x20) (= x1040 (x236 (x634 274184521717934524641157099916833587218))) (= (x441 (x634 x20) (x856 1) 0) x1347) (not x1330) (< (+ x1132 x980) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 1889567281 x287)) (= x99 x22) (= (x441 (x634 274184521717934524641157099916833587206) (x856 1) 0) x328) (= x980 x865) (not (= x287 649617121)) (>= x1132 0) (= x1263 (>= (+ x1132 x980) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1080 x1347) x1132) (= x961 76450787359836037641860180984291677749980919077056822294353438043884394381312) (<= 0 x1273) (= x1273 (x157 x328)) (= 32 x1200) (= x980 x1266) (not x790) (= x314 x20) (= (x286 (- x16 4)) x595)) x325) (=> (not x900) x217))) x514))
(assert (= (ite (and x617 x298) (x585 x431) (x808 x431)) (x386 x431)))
(assert (=> (> (+ 10000 1) x1280) (= (x856 x1280) (x634 x1280))))
(assert (=> (< (- x593 1) 10000) (= (x634 x593) (x856 x593))))
(assert (x1333 x1030))
(assert (= (x520 x1237) (ite (and x617 (not x943) x1090 (not x281) (not x1225)) (x802 x1237) (ite (and (not x943) (not x1090) x617 (not x281)) (x694 x1237) (ite (and (not x943) x281 x617) (x694 x1237) (x996 x1237))))))
(assert (= (ite (and (not x281) x1090 x617 (not x1225) (not x943)) (x802 x219) (ite (and (not x281) x617 (not x1090) (not x943)) (x694 x219) (ite (and x281 x617 (not x943)) (x694 x219) (x996 x219)))) (x520 x219)))
(assert (x803 x1302))
(assert (= (x149 (x856 2690754053)) 2690754053))
(assert (x803 x1034))
(assert (x1333 x399))
(assert (x803 x1070))
(assert (=> (< (- x777 1) 10000) (= (x634 x777) (x856 x777))))
(assert (= 0 (x457 224)))
(assert (x1333 x954))
(assert (= (x634 635128645) (x856 635128645)))
(assert (x803 x779))
(assert (x803 x1340))
(assert (x803 x262))
(assert (x803 x208))
(assert (x803 x430))
(assert (x334 x805))
(assert (x803 x412))
(assert (= (x1198 x1237) (ite (= x1117 x1237) x1209 (x105 x1237))))
(assert (x803 x1337))
(assert (x803 x1239))
(assert (=> (< (- x331 1) 10000) (= (x634 x331) (x856 x331))))
(assert (x803 x1022))
(assert (= (x149 (x634 x1094)) x1094))
(assert (x803 x590))
(assert (= 635128645 (x149 (x856 635128645))))
(assert (x803 x613))
(assert (= x1108 x178))
(assert (= x347 x617))
(assert (x803 x1191))
(assert (= (ite (= x1117 x456) x1209 (x105 x456)) (x1198 x456)))
(assert (=> (> (+ 10000 1) x303) (= (x856 x303) (x634 x303))))
(assert (= (x856 87118632) (x634 87118632)))
(assert (x803 x987))
(assert (= (x763 x945) (ite (and x617 x881 (not x943)) (x1234 x945) (x119 x945))))
(assert (= x304 (x149 (x634 x304))))
(assert (x803 x786))
(assert (x803 x230))
(assert (x803 x605))
(assert (= (=> (and (= (x441 (x634 x553) x572 0) x844) (> x1214 0) (not (= x680 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x553) (< x680 2960351575) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x214) (not (< x680 2690754053)) (= (x441 (x634 x120) x415 0) x572) (= x214 x79) (not (< x680 2293535753)) (= (x847 x844) x214) (= x415 (x441 (x634 x35) (x856 3) 0)) (>= x214 0) (= (x236 (x634 274184521717934524641157099916833587206)) x1214) (<= x120 1461501637330902918203684832716283019655932542975) (= 2743102681 x680)) (=> (and (= x956 x412) (= x192 x367) (= x1077 x1094) (= x306 x1161) (= x79 x88)) x997)) x971))
(assert (x803 x184))
(assert (x803 x778))
(assert (= (x457 x417) 0))
(assert (= (ite (= x1038 x1237) x799 (x694 x1237)) (x802 x1237)))
(assert (= (ite (= x182 x1058) x784 (x1198 x182)) (x645 x182)))
(assert (=> (< (- x207 1) 10000) (= (x634 x207) (x856 x207))))
(assert (= (ite (and x715 x347 x124 (not x688) x302 x1102) (x505 x1275) (ite (and x302 x347 x124 (not x1102) x715) (x645 x1275) (ite (and x124 (not x715) x347 x302) (x1198 x1275) (ite (and x124 (not x302) x347) (x105 x1275) (x143 x1275))))) (x379 x1275)))
(assert (= 649617121 (x149 (x856 649617121))))
(assert (x1333 x777))
(assert (= x1181 (x149 (x634 x1181))))
(assert (= (ite (and (not x943) x1060 x617) (x847 x1326) (ite (and (not x1060) (not x943) x617 x5) (x847 x1326) (x1189 x1326))) (x1318 x1326)))
(assert (x803 x754))
(assert (=> (< (- x327 1) 10000) (= (x856 x327) (x634 x327))))
(assert (x803 x949))
(assert (x803 x1167))
(assert (= x178 x560))
(assert (x803 x680))
(assert (=> (< (- x1086 1) 10000) (= (x634 x1086) (x856 x1086))))
(assert (x803 x1322))
(assert (=> (> (+ 10000 1) x871) (= (x856 x871) (x634 x871))))
(assert (= (x379 x1303) (ite (and (not x688) x715 x1102 x347 x124 x302) (x505 x1303) (ite (and x715 x347 (not x1102) x302 x124) (x645 x1303) (ite (and x302 x347 (not x715) x124) (x1198 x1303) (ite (and (not x302) x347 x124) (x105 x1303) (x143 x1303)))))))
(assert (= (x149 (x634 x605)) x605))
(assert (x803 x696))
(assert (x803 x219))
(assert (x803 x1196))
(assert (x803 x87))
(assert (= (x998 x268) (ite (= x1332 x268) x1178 (x1123 x268))))
(assert (x803 x650))
(assert (= (x1198 x794) (ite (= x1117 x794) x1209 (x105 x794))))
(assert (x803 x384))
(assert (x803 x175))
(assert (= true x76))
(assert (x803 x280))
(assert (=> (< (- x316 1) 10000) (= (x856 x316) (x634 x316))))
(assert (x803 x867))
(assert (= x592 (x149 (x634 x592))))
(assert (x803 x750))
(assert (= (x856 2743102681) (x634 2743102681)))
(assert (= (x149 (x856 2514000705)) 2514000705))
(assert (= (x526 x219) (ite (= x112 x219) x735 (x1269 x219))))
(assert (x803 x985))
(assert (x803 x122))
(assert (=> (> (+ 10000 1) x1128) (= (x856 x1128) (x634 x1128))))
(assert (x803 x746))
(assert (= (x856 468353030) (x634 468353030)))
(assert (= x1321 (x149 (x634 x1321))))
(assert (=> (> (+ 10000 1) x50) (= (x634 x50) (x856 x50))))
(assert (x803 x927))
(assert (x803 x584))
(assert (x803 x756))
(assert (= (x105 x557) (ite (= x1048 x557) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x557))))
(assert (x1333 x1091))
(assert (x803 x814))
(assert (x803 x565))
(assert (= (and x124 x347) x1279))
(assert (= (x856 2798343961) (x634 2798343961)))
(assert (x803 x937))
(assert (= x358 (x149 (x634 x358))))
(assert (= x1124 x615))
(assert (x803 x35))
(assert (x1333 x1032))
(assert (x1333 x985))
(assert (= (=> (and (<= x359 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 69947311 x1082) (< x1082 911411945) (= x599 (x441 (x634 x432) (x856 10) 0)) (>= x359 0) (= (x236 (x634 274184521717934524641157099916833587206)) x166) (= x1065 x359) (= x359 (x1307 x478)) (< x1082 2293535753) (= (x441 (x634 x1285) x599 0) x478) (<= x1285 1461501637330902918203684832716283019655932542975) (< x1082 468353030) (< 0 x166)) (=> (and (= x1077 x127) (= x1065 x835) (= x306 x929) (= x270 x367)) x429)) x711))
(assert (x803 x835))
(assert (= (x976 x152) (ite (and x1279 x900) (x1046 x152) (x438 x152))))
(assert (x803 x545))
(assert (x803 x889))
(assert (= (x1156 x152) (ite (= x152 x928) x1111 (x526 x152))))
(assert (x1333 x631))
(assert (x803 x1025))
(assert (=> (> (+ 10000 1) x553) (= (x856 x553) (x634 x553))))
(assert (= (ite (= x456 x1048) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x456)) (x105 x456)))
(assert (= (x634 2868243304) (x856 2868243304)))
(assert (x1333 x351))
(assert (= (ite (= x456 x1038) x799 (x694 x456)) (x802 x456)))
(assert (=> (< (- x430 1) 10000) (= (x634 x430) (x856 x430))))
(assert (x803 x1074))
(assert (x803 x290))
(assert (x1333 x59))
(assert (x803 x1068))
(assert (= (x634 2764855426) (x856 2764855426)))
(assert (= x432 (x149 (x634 x432))))
(assert (x803 x703))
(assert (x803 x967))
(assert (x1333 x899))
(assert (x1333 x745))
(assert (x803 x218))
(assert (x1333 x484))
(assert (= (x149 (x856 759532456)) 759532456))
(assert (= x871 (x149 (x634 x871))))
(assert (= x332 x1124))
(assert (x803 x1245))
(assert (x1333 x496))
(assert (x803 x780))
(assert (=> (< (- x957 1) 10000) (= (x856 x957) (x634 x957))))
(assert (x1333 x316))
(assert (x1333 x1070))
(assert (=> (> (+ 10000 1) x312) (= (x856 x312) (x634 x312))))
(assert (= (ite (= x1058 x219) x784 (x1198 x219)) (x645 x219)))
(assert (=> (< (- x1054 1) 10000) (= (x634 x1054) (x856 x1054))))
(assert (= (x149 (x634 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= (x585 x417) (ite (= x417 x456) x232 (x1166 x417))))
(assert (= (x149 (x634 x1241)) x1241))
(assert (x803 x250))
(assert (= (ite (= x196 x1275) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x94 x1275)) (x423 x1275)))
(assert (x803 x487))
(assert (= (x34 x231) (ite (= x231 x626) x1282 (x423 x231))))
(assert (x803 x228))
(assert (= (x526 x456) (ite (= x456 x112) x735 (x1269 x456))))
(assert (x1333 x642))
(assert (= (x856 759532456) (x634 759532456)))
(assert (= (x379 x152) (ite (and x347 x1102 x715 x124 x302 (not x688)) (x505 x152) (ite (and x302 x715 x124 x347 (not x1102)) (x645 x152) (ite (and x347 (not x715) x302 x124) (x1198 x152) (ite (and x124 (not x302) x347) (x105 x152) (x143 x152)))))))
(assert (x803 x820))
(assert (= 142201243 (x149 (x856 142201243))))
(assert (= 911411945 (x149 (x856 911411945))))
(assert (x803 x718))
(assert (x803 x11))
(assert (x1333 x1113))
(assert (= x1154 (x149 (x634 x1154))))
(assert (x1333 x892))
(assert (x803 x1036))
(assert (x803 x401))
(assert (x803 x163))
(assert (x803 x921))
(assert (= (x734 x1041) (ite (and x124 x347 (not x594)) (x379 x1041) (x91 x1041))))
(assert (x803 x273))
(assert (x803 x32))
(assert (=> (< (- x432 1) 10000) (= (x634 x432) (x856 x432))))
(assert (= x59 (x149 (x634 x59))))
(assert (x1333 x1250))
(assert (= (ite (= x182 x196) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x94 x182)) (x423 x182)))
(assert (=> (< (- x1161 1) 10000) (= (x856 x1161) (x634 x1161))))
(assert (= 18446744073709551615 (x149 (x856 18446744073709551615))))
(assert (x803 x399))
(assert (= (ite (and x298 x617) (x585 x1114) (x808 x1114)) (x386 x1114)))
(assert (x803 x1113))
(assert (x803 x569))
(assert (= (ite (= x456 x431) x232 (x1166 x431)) (x585 x431)))
(assert (x803 x1032))
(assert (= (x149 (x856 2960351575)) 2960351575))
(assert (= (ite (and x298 x617) (x585 x1038) (x808 x1038)) (x386 x1038)))
(assert (= (x526 x831) (ite (= x831 x112) x735 (x1269 x831))))
(assert (x803 x1095))
(assert (= x1113 (x149 (x634 x1113))))
(assert (x803 x954))
(assert (x1333 x87))
(assert (x803 x67))
(assert (x1333 x133))
(assert (= (x763 x396) (ite (and (not x943) x881 x617) (x1234 x396) (x119 x396))))
(assert (= x920 (x149 (x634 x920))))
(assert (x803 x946))
(assert (= x1140 (x149 (x634 x1140))))
(assert (x803 x356))
(assert (x1333 x1044))
(assert (x803 x53))
(assert (= x316 (x149 (x634 x316))))
(assert (x803 x1146))
(assert (x803 x156))
(assert (=> (< (- x652 1) 10000) (= (x634 x652) (x856 x652))))
(assert (x803 x508))
(assert (= (=> (and (< x550 2960351575) (<= x385 1461501637330902918203684832716283019655932542975) (> x436 0) (= x53 x796) (= x296 (x441 (x634 x385) x71 0)) (= (x847 x866) x53) (<= 0 x53) (>= 1461501637330902918203684832716283019655932542975 x342) (<= x53 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x866 (x441 (x634 x342) x296 0)) (= x71 (x441 (x634 x1140) (x856 3) 0)) (not (< x550 2293535753)) (not (= 2690754053 x550)) (= x436 (x236 (x634 274184521717934524641157099916833587206))) (not (< x550 2690754053)) (= 2743102681 x550)) (=> (and (= x1285 x306) (= (>= x1103 x260) x629) (= x432 x367) (= x796 x260)) x711)) x427))
(assert (= (x149 (x634 x1170)) x1170))
(assert (=> (< (- x329 1) 10000) (= (x856 x329) (x634 x329))))
(assert (= (x526 x616) (ite (= x616 x112) x735 (x1269 x616))))
(assert (x803 x318))
(assert (x1333 x192))
(assert (= (x998 x524) (ite (= x524 x1332) x1178 (x1123 x524))))
(assert (x803 x199))
(assert (x1333 x810))
(assert (x803 x132))
(assert (= (x976 x1303) (ite (and x1279 x900) (x1046 x1303) (x438 x1303))))
(assert (= (ite (= x1275 x1117) x1209 (x105 x1275)) (x1198 x1275)))
(assert (x1333 274184521717934524641157099916833587214))
(assert (x803 x1048))
(assert (x803 x258))
(assert (= (x520 x152) (ite (and (not x281) (not x943) (not x1225) x1090 x617) (x802 x152) (ite (and x617 (not x943) (not x1090) (not x281)) (x694 x152) (ite (and (not x943) x617 x281) (x694 x152) (x996 x152))))))
(assert (=> (< (- x750 1) 10000) (= (x856 x750) (x634 x750))))
(assert (x803 x796))
(assert (= (ite (= x1275 x70) x155 (x1352 x1275)) (x694 x1275)))
(assert (= x327 (x149 (x634 x327))))
(assert (= x682 (=> (and (<= x1292 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1344 x1254) x1292) (< 0 x643) (>= 1461501637330902918203684832716283019655932542975 x780) (not (= 635128645 x1025)) (< x1025 911411945) (< x1025 2293535753) (<= 0 x1292) (= x643 (x236 (x634 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x1054) (= 759532456 x1025) (not (= x1025 468353030)) (= (x441 (x634 x1054) x728 0) x1254) (= (x441 (x634 x742) (x856 7) 0) x1339) (= x1292 x400) (= (x441 (x634 x780) x1339 0) x728) (not (> 468353030 x1025))) (=> (and (= x540 (>= x718 x700)) (= x306 x1155) (= x700 x400) (= x521 x367)) x993))))
(assert (x803 x1103))
(assert (x1333 x489))
(assert (x1333 x1054))
(assert (= x580 x1057))
(assert (x894 x820 x297 x1317 x1351))
(assert (=> (< (- x1155 1) 10000) (= (x856 x1155) (x634 x1155))))
(assert (= 0 (x457 x794)))
(assert (= (ite (= x1038 x456) x232 (x1166 x1038)) (x585 x1038)))
(assert (x803 x312))
(assert (= (x149 (x634 x810)) x810))
(assert (x803 x637))
(assert (x803 x571))
(assert (x1333 x742))
(assert (x803 x749))
(assert (x803 x85))
(assert (= x1023 (x149 (x634 x1023))))
(assert (x803 x869))
(assert (x803 x406))
(assert (=> (> (+ 10000 1) x552) (= (x634 x552) (x856 x552))))
(assert (x803 x306))
(assert (=> (< (- x513 1) 10000) (= (x856 x513) (x634 x513))))
(assert (x803 x171))
(assert (x803 x687))
(assert (= x1057 x615))
(assert (= (x802 x1303) (ite (= x1038 x1303) x799 (x694 x1303))))
(assert (= x29 (x149 (x634 x29))))
(assert (=> (> (+ 10000 1) x958) (= (x856 x958) (x634 x958))))
(assert (= x342 (x149 (x634 x342))))
(assert (x1333 x517))
(assert (x803 x102))
(assert (x1333 x1316))
(assert (= (ite (and (not x1225) (not x281) (not x943) x1090 x617) (x802 x928) (ite (and (not x1090) x617 (not x281) (not x943)) (x694 x928) (ite (and x281 x617 (not x943)) (x694 x928) (x996 x928)))) (x520 x928)))
(assert (x803 x663))
(assert (= x1304 (or (and x900 x1279) (and x154 x730))))
(assert (x803 x1129))
(assert (x803 x436))
(assert (x803 x626))
(assert (=> (< (- x126 1) 10000) (= (x856 x126) (x634 x126))))
(assert (x803 x120))
(assert (= (x634 2418364589) (x856 2418364589)))
(assert (x1333 x29))
(assert (x1333 x120))
(assert (x803 x685))
(assert (x803 x17))
(assert (x803 x1178))
(assert (x803 x1105))
(assert (x803 x809))
(assert (= (x149 (x634 x956)) x956))
(assert (= (x998 x139) (ite (= x139 x1332) x1178 (x1123 x139))))
(assert (x803 x643))
(assert (=> (> (+ 10000 1) x1252) (= (x634 x1252) (x856 x1252))))
(assert (= (x856 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x634 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (ite (= x413 x139) x747 (x459 x139)) (x1228 x139)))
(assert (= 0 (x457 x378)))
(assert (x803 x496))
(assert (= (x457 x182) 0))
(assert (x803 x697))
(assert (x803 x56))
(assert (= (x386 x378) (ite (and x617 x298) (x585 x378) (x808 x378))))
(assert (= (x149 (x634 x430)) x430))
(assert (x803 x232))
(assert (=> (< (- x631 1) 10000) (= (x856 x631) (x634 x631))))
(assert (= (ite (= x999 x1303) x833 (x645 x1303)) (x505 x1303)))
(assert (= (x772 x142) (ite (and x881 x617 (not x943)) (x320 x142) (x824 x142))))
(assert (x1333 x1321))
(assert (x803 x1082))
(assert (= 2798343961 (x149 (x856 2798343961))))
(assert (= x135 (x149 (x634 x135))))
(assert (= x709 (x149 (x634 x709))))
(assert (x1333 x1253))
(assert (= (and (not x13) x1078) x1126))
(assert (x803 x777))
(assert (x803 x351))
(assert (x803 x740))
(assert (= (x149 (x634 x290)) x290))
(assert (x803 x563))
(assert (=> (< (- x663 1) 10000) (= (x856 x663) (x634 x663))))
(assert (= (ite (and x1090 (not x943) (not x281) x617 (not x1225)) (x802 x182) (ite (and x617 (not x1090) (not x943) (not x281)) (x694 x182) (ite (and (not x943) x281 x617) (x694 x182) (x996 x182)))) (x520 x182)))
(assert (= (or (and x13 x1078) (and x1126 x444)) x100))
(assert (x1333 x709))
(assert (= (ite (= x1275 x1048) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x1275)) (x105 x1275)))
(assert (x803 x1088))
(assert (x1333 x290))
(assert (= (x694 x1038) (ite (= x70 x1038) x155 (x1352 x1038))))
(assert (= x106 x924))
(assert (= (ite (= x1303 x411) x1240 (x485 x1303)) (x252 x1303)))
(assert (=> (< (- x1239 1) 10000) (= (x856 x1239) (x634 x1239))))
(assert (= x642 (x149 (x634 x642))))
(assert (= 2512682246 (x149 (x856 2512682246))))
(assert (= x67 (x149 (x634 x67))))
(assert (= 274184521717934524641157099916833587206 (x149 (x856 274184521717934524641157099916833587206))))
(assert (= (ite (= x152 x1117) x1209 (x105 x152)) (x1198 x152)))
(assert (= (ite (= x417 x70) x155 (x1352 x417)) (x694 x417)))
(assert (x803 x214))
(assert (= x350 (x149 (x634 x350))))
(assert (= (ite (and (not x979) x125 x150 x1019 x1281 x291) (x252 x1275) (ite (and (not x150) x125 x291 x1019 x1281) (x485 x1275) (ite (and x1281 x291 x1019 (not x125)) (x34 x1275) (ite (and x1019 (not x291) x1281) (x423 x1275) (x1004 x1275))))) (x1107 x1275)))
(assert (= (ite (and x617 (not x281) (not x943) (not x1225) x1090) (x802 x231) (ite (and x617 (not x943) (not x281) (not x1090)) (x694 x231) (ite (and x617 x281 (not x943)) (x694 x231) (x996 x231)))) (x520 x231)))
(assert (= (=> (and (= x622 x3) x74 (= x952 (x1261 (x634 274184521717934524641157099916833587206))) (= x319 (x608 (x634 x81))) (= x825 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874)) (= (= x81 274184521717934524641157099916833587218) x13) x1150 (= x874 (x1261 (x634 x81))) (= (<= 0 x10) x1150) (= x10 (x1261 (x634 274184521717934524641157099916833587206))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x608 (x634 x81))) x74) x825) (and (=> (and (= x1291 (x1320 x1206)) x13 (< (+ x515 x685) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x1313 0) (= (x441 (x634 x1070) (x856 1) 0) x372) (= x95 274184521717934524641157099916833587206) (= x224 x163) (= (x1306 x372) x515) (not (= 826074471 x907)) (= 2835717307 x907) (not x255) (>= 1461501637330902918203684832716283019655932542975 x1070) (not (> 4 x338)) (<= 0 x515) (<= x1291 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x255 (or (> x1297 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1297) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1297))))) (= 274184521717934524641157099916833587206 x96) (not (= 1889567281 x907)) (= x1106 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x907 649617121)) (= x992 (>= (+ x515 x685) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= x907 2514000705)) (= x1017 (x441 (x634 274184521717934524641157099916833587206) (x856 1) 0)) (<= 0 x1291) (= x618 (< x1291 x420)) (= 1 x809) (= x1297 (x286 (- x338 4))) (= x1070 x753) (= x338 68) (<= x515 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x441 (x634 274184521717934524641157099916833587206) (x856 1) 0) x1206) (= x443 (> x685 x1291)) (not x618) (= x1338 x685) (= x515 x1349) (not (= 649617121 x907)) (= x420 x940) (= x834 (+ x1349 x1338)) (not x992) (= x481 32) (= x1313 (x236 (x634 274184521717934524641157099916833587218))) (= x338 x622) (= x685 x420) (not x443) (= x789 (x286 (- x1291 x420))) (= x1070 x26)) x467) (=> (not x13) x25))) x288))
(assert (= (x149 (x634 x81)) x81))
(assert (= (x505 x1041) (ite (= x999 x1041) x833 (x645 x1041))))
(assert (= 1000000000000000000 (x149 (x856 1000000000000000000))))
(assert (= x521 (x149 (x634 x521))))
(assert (x803 x342))
(assert (= (=> (and (<= 0 x1176) (= x906 (x236 (x634 274184521717934524641157099916833587206))) (not (= x1277 2061678023)) (= 2258409472 x1277) (= (x441 (x634 x571) (x856 6) 0) x1309) (= x1176 x1191) (not (= 2211524764 x1277)) (not (> 1968616202 x1277)) (not (= 1968616202 x1277)) (< 0 x906) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1176) (not (> 911411945 x1277)) (< x1277 2293535753) (= (x441 (x634 x329) x1309 0) x396) (not (= x1277 1986467848)) (= x1176 (x1137 x396)) (<= x329 1461501637330902918203684832716283019655932542975)) (=> (and (= x1054 x1077) (= x780 x306) (= x1191 x718) (= x742 x367)) x682)) x451))
(assert (x1333 x447))
(assert (= (x457 x1038) 0))
(assert (x1333 x1170))
(assert (= (x149 (x634 x584)) x584))
(assert (x803 x774))
(assert (x803 x494))
(assert (=> (< (- x1032 1) 10000) (= (x634 x1032) (x856 x1032))))
(assert (= (x149 (x856 2743102681)) 2743102681))
(assert (=> (< (- x218 1) 10000) (= (x634 x218) (x856 x218))))
(assert (x803 x940))
(assert (not x225))
(assert (x803 x1147))
(assert (x803 x210))
(assert (= (ite (= x219 x1038) x799 (x694 x219)) (x802 x219)))
(assert (= (ite (= x1303 x1048) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x1303)) (x105 x1303)))
(assert (x1333 x67))
(assert (= x954 (x149 (x634 x954))))
(assert (x803 x1241))
(assert (x803 x666))
(assert (= (ite (and x302 x715 x347 x1102 (not x688) x124) (x505 x431) (ite (and x347 x302 x124 x715 (not x1102)) (x645 x431) (ite (and (not x715) x124 x347 x302) (x1198 x431) (ite (and (not x302) x124 x347) (x105 x431) (x143 x431))))) (x379 x431)))
(assert (x803 x267))
(assert (= (x694 x616) (ite (= x616 x70) x155 (x1352 x616))))
(assert (=> (> (+ 10000 1) x905) (= (x634 x905) (x856 x905))))
(assert (x803 x631))
(assert (= (x634 911411945) (x856 911411945)))
(assert (x803 x177))
(assert (x1333 x280))
(assert (= 2258409472 (x149 (x856 2258409472))))
(assert (=> (> (+ 10000 1) x59) (= (x634 x59) (x856 x59))))
(assert (x803 x564))
(assert (= (x976 x1237) (ite (and x1279 x900) (x1046 x1237) (x438 x1237))))
(assert (= (ite (and x617 x298) (x585 x182) (x808 x182)) (x386 x182)))
(assert (x803 x123))
(assert (= (=> (and (not (= 69947311 x975)) (= (x441 (x634 x127) x668 0) x562) (= x975 142201243) (= x921 (x890 x562)) (< x975 2293535753) (> 468353030 x975) (= x574 (x236 (x634 274184521717934524641157099916833587206))) (not (= 87118632 x975)) (= x921 x1088) (>= 1461501637330902918203684832716283019655932542975 x929) (> x574 0) (> 911411945 x975) (= (x441 (x634 x270) (x856 9) 0) x902) (<= x127 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x921) (>= x921 0) (= x668 (x441 (x634 x929) x902 0))) (=> (and (= x937 x1077) (= x1023 x306) (= x885 (>= x835 x1136)) (= x367 x958) (= (and x629 x885) x1101) (= x1136 x1088)) x202)) x429))
(assert (x1333 x495))
(assert (= (x386 x417) (ite (and x617 x298) (x585 x417) (x808 x417))))
(assert (=> (> (+ 10000 1) x1070) (= (x856 x1070) (x634 x1070))))
(assert (x803 x724))
(assert (x1333 x350))
(assert (= (ite (= x1058 x1237) x784 (x1198 x1237)) (x645 x1237)))
(assert (x803 x625))
(assert (x803 x367))
(assert (= x665 (x149 (x634 x665))))
(assert (= 0 (x457 x383)))
(assert (= (ite (= x182 x456) x232 (x1166 x182)) (x585 x182)))
(assert (x803 x953))
(assert (= x593 (x149 (x634 x593))))
(assert (x803 x301))
(assert (x803 x1336))
(assert (= (x1318 x61) (ite (and x617 (not x943) x1060) (x847 x61) (ite (and x5 (not x943) (not x1060) x617) (x847 x61) (x1189 x61)))))
(assert (x803 x69))
(assert (= (ite (= x413 x782) x747 (x459 x782)) (x1228 x782)))
(assert (= (ite (and x298 x617) (x585 x231) (x808 x231)) (x386 x231)))
(assert (= (x149 (x634 x1091)) x1091))
(assert (= (ite (= x928 x794) x1111 (x526 x794)) (x1156 x794)))
(assert (= (ite (= x456 x70) x155 (x1352 x456)) (x694 x456)))
(assert (=> (< (- x447 1) 10000) (= (x856 x447) (x634 x447))))
(assert (= (ite (= x431 x1058) x784 (x1198 x431)) (x645 x431)))
(assert (x803 x1240))
(assert (=> (< (- x87 1) 10000) (= (x634 x87) (x856 x87))))
(assert (= x202 (=> (and (<= x1023 1461501637330902918203684832716283019655932542975) (= x137 (x236 (x634 274184521717934524641157099916833587206))) (> 468353030 x1147) (< 0 x137) (not (= 69947311 x1147)) (>= 1461501637330902918203684832716283019655932542975 x937) (= (x890 x793) x1067) (= x793 (x441 (x634 x937) x279 0)) (= x1147 142201243) (< x1147 2293535753) (= x475 (x441 (x634 x958) (x856 9) 0)) (< x1147 911411945) (not (= x1147 87118632)) (= (x441 (x634 x1023) x475 0) x279) (= x1212 x1067) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1067) (<= 0 x1067)) (=> (and (= x1212 x965) (= x1294 x367) (= (and x932 x1101) x530) (= x932 (> x965 0)) (= x1280 x306) (= x1245 0)) x702))))
(assert (= (x459 x413) (ite (and (not x281) x1090 x617 (not x1225) (not x943)) (x998 x413) (ite (and (not x1090) (not x943) (not x281) x617) (x1123 x413) (ite (and (not x943) x617 x281) (x1123 x413) (x193 x413))))))
(assert (x1333 x1155))
(assert (x803 x1083))
(assert (=> (> (+ 10000 1) x660) (= (x634 x660) (x856 x660))))
(assert (x1333 x521))
(assert (x1333 x35))
(assert (= (x379 x456) (ite (and x715 x302 (not x688) x124 x347 x1102) (x505 x456) (ite (and x347 (not x1102) x715 x302 x124) (x645 x456) (ite (and x347 (not x715) x124 x302) (x1198 x456) (ite (and (not x302) x347 x124) (x105 x456) (x143 x456)))))))
(assert (x803 x558))
(assert (= (ite (and x900 x1279) (x1046 x219) (x438 x219)) (x976 x219)))
(assert (= (x34 x1303) (ite (= x626 x1303) x1282 (x423 x1303))))
(assert (x1333 x713))
(assert (x803 x799))
(assert (x803 x805))
(assert (x803 x888))
(assert (x803 x4))
(assert (=> (< (- x517 1) 10000) (= (x856 x517) (x634 x517))))
(assert (x803 x616))
(assert (x803 x907))
(assert (x1333 x1252))
(assert (= (x585 x383) (ite (= x456 x383) x232 (x1166 x383))))
(assert (= (x457 160) 0))
(assert (= (ite (and x298 x617) (x585 x616) (x808 x616)) (x386 x616)))
(assert (x803 x211))
(assert (x803 x1203))
(assert (= (x457 x1275) 0))
(assert (x803 x358))
(assert (x803 x919))
(assert (x803 x153))
(assert (=> (> (+ 10000 1) x113) (= (x634 x113) (x856 x113))))
(assert (x803 x322))
(assert (= (ite (and x1060 x617 (not x943)) (x144 x1305) (ite (and x617 (not x943) x5 (not x1060)) (x1298 x1305) (x371 x1305))) (x757 x1305)))
(assert (x803 x727))
(assert (x803 x1161))
(assert (=> (< (- x133 1) 10000) (= (x856 x133) (x634 x133))))
(assert (x803 x1030))
(assert (x803 x747))
(assert (x334 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x334 x820))
(assert (x803 x135))
(assert (x1333 x207))
(assert (x803 x207))
(assert (= (ite (= x488 x196) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x94 x488)) (x423 x488)))
(assert (=> (< (- x1044 1) 10000) (= (x634 x1044) (x856 x1044))))
(assert (x803 x642))
(assert (= (ite (and (not x943) x617 (not x281) (not x1225) x1090) (x998 x1015) (ite (and x617 (not x1090) (not x281) (not x943)) (x1123 x1015) (ite (and x281 (not x943) x617) (x1123 x1015) (x193 x1015)))) (x459 x1015)))
(assert (x803 x1051))
(assert (= x1070 (x149 (x634 x1070))))
(assert (= (x585 x378) (ite (= x378 x456) x232 (x1166 x378))))
(assert (= (x634 1889567281) (x856 1889567281)))
(assert (x803 x160))
(assert (x803 x63))
(assert (x1333 x982))
(assert (x803 x670))
(assert (= (ite (= x1275 x928) x1111 (x526 x1275)) (x1156 x1275)))
(assert (x803 x432))
(assert (= (ite (= x456 x1275) x232 (x1166 x1275)) (x585 x1275)))
(assert (x803 x695))
(assert (= (x149 (x634 x1044)) x1044))
(assert (= (x149 (x634 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x803 x570))
(assert (x803 x140))
(assert (= (x149 (x634 x903)) x903))
(assert (= x541 x332))
(assert (x803 x714))
(assert (x1333 x1161))
(assert (x803 x212))
(assert (x803 x595))
(assert (= x1045 (=> (and (not (= 2211524764 x360)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x953) (> 2293535753 x360) (not (= x360 2061678023)) (not (< x360 911411945)) (not (= 1968616202 x360)) (= (x236 (x634 274184521717934524641157099916833587206)) x678) (>= 1461501637330902918203684832716283019655932542975 x135) (= (x453 x465) x953) (<= 0 x953) (= x981 (x441 (x634 x810) (x856 6) 0)) (= x465 (x441 (x634 x135) x981 0)) (not (> 1968616202 x360)) (= x953 x1087) (= x360 2258409472) (< 0 x678) (not (= x360 1986467848))) (=> (and (= 0 x1293) (= x306 x410) (= x498 x1087) (= (not (= 0 x498)) x497) x497 (= x367 x327)) x827))))
(assert (= (x998 x782) (ite (= x1332 x782) x1178 (x1123 x782))))
(assert (x803 x647))
(assert (x803 x411))
(assert (= (ite (and (not x281) x617 (not x1225) x1090 (not x943)) (x802 x383) (ite (and (not x281) x617 (not x943) (not x1090)) (x694 x383) (ite (and (not x943) x281 x617) (x694 x383) (x996 x383)))) (x520 x383)))
(assert (=> (> (+ 10000 1) x244) (= (x856 x244) (x634 x244))))
(assert (x803 x121))
(assert (x803 x26))
(assert (= (=> (and (> 2960351575 x933) (>= 1461501637330902918203684832716283019655932542975 x492) (= x681 x1223) (= (x30 x139) x681) (= x933 2532887486) (= x454 (x441 (x634 x492) x741 0)) (not (= 2418364589 x933)) (= x741 (x441 (x634 x642) (x856 4) 0)) (>= 1461501637330902918203684832716283019655932542975 x300) (< 0 x310) (<= 0 x681) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x681) (not (= 2512682246 x933)) (not (= 2293535753 x933)) (< x933 2690754053) (= x310 (x236 (x634 274184521717934524641157099916833587206))) (= (x441 (x634 x300) x1199 0) x139) (not (< x933 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x312) (= (x441 (x634 x312) x454 0) x1199)) x1172) x352))
(assert (x803 x574))
(assert (x803 x1148))
(assert (x803 x995))
(assert (= (x149 (x634 x663)) x663))
(assert (x803 x370))
(assert (= (x976 x231) (ite (and x1279 x900) (x1046 x231) (x438 x231))))
(assert (x803 x766))
(assert (x803 x337))
(assert (x54 x271 x912))
(assert (= (x1116 x1303) (ite (and (not x639) x1019 x1281) (x1107 x1303) (x762 x1303))))
(assert (x803 x965))
(assert (x803 x215))
(assert (x803 x222))
(assert (x803 x1023))
(assert (= x185 (=> (and (= (x441 (x634 x496) (x856 7) 0) x1328) (= x425 x1265) (= (x468 x817) x1265) (<= x605 1461501637330902918203684832716283019655932542975) (not (= x499 468353030)) (< x499 911411945) (= (x441 (x634 x605) x930 0) x817) (<= x1265 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1061 1461501637330902918203684832716283019655932542975) (= x499 759532456) (= x930 (x441 (x634 x1061) x1328 0)) (not (> 468353030 x499)) (>= x1265 0) (not (= x499 635128645)) (> 2293535753 x499) (> x273 0) (= x273 (x236 (x634 274184521717934524641157099916833587206)))) (=> (and x238 (= x306 x135) (= x367 x810) (= (<= x504 x744) x238) (= x425 x744)) x1045))))
(assert (= 0 (x457 x210)))
(assert (= (x149 (x634 x113)) x113))
(assert (=> (> (+ 10000 1) x42) (= (x856 x42) (x634 x42))))
(assert (x803 x933))
(assert (= (x149 (x634 x552)) x552))
(assert (x803 x928))
(assert (x803 x994))
(assert (x803 x675))
(assert (x803 x692))
(assert (x1333 x956))
(assert (= x322 (x149 (x634 x322))))
(assert (= (x34 x1275) (ite (= x626 x1275) x1282 (x423 x1275))))
(assert (= (ite (and x617 x298) (x585 x219) (x808 x219)) (x386 x219)))
(assert (x1333 x1109))
(assert (= (x634 604800) (x856 604800)))
(assert (= (x149 (x634 x87)) x87))
(assert (= (x1116 x1275) (ite (and (not x639) x1281 x1019) (x1107 x1275) (x762 x1275))))
(assert (= (x505 x182) (ite (= x182 x999) x833 (x645 x182))))
(assert (x1333 x821))
(assert (= (x505 x658) (ite (= x658 x999) x833 (x645 x658))))
(assert (x803 x1154))
(assert (= (ite (and (not x943) (not x281) x617 (not x1225) x1090) (x998 x782) (ite (and x617 (not x943) (not x1090) (not x281)) (x1123 x782) (ite (and x617 x281 (not x943)) (x1123 x782) (x193 x782)))) (x459 x782)))
(assert (= true x1115))
(assert (x803 x338))
(assert (= (x505 x1237) (ite (= x999 x1237) x833 (x645 x1237))))
(assert (= (x734 x182) (ite (and x124 x347 (not x594)) (x379 x182) (x91 x182))))
(assert (x803 x1106))
(assert (= (x856 2211524764) (x634 2211524764)))
(assert (x803 x578))
(assert (x803 x10))
(assert (x803 x314))
(assert (x1333 x300))
(assert (x803 x373))
(assert (= (ite (= x152 x411) x1240 (x485 x152)) (x252 x152)))
(assert (= x101 (x149 (x634 x101))))
(assert (=> (< (- x647 1) 10000) (= (x634 x647) (x856 x647))))
(assert (x1333 x1280))
(assert (= x42 (x149 (x634 x42))))
(assert (x803 x58))
(assert (x803 x1031))
(assert (x803 x402))
(assert (= (ite (= x231 x1058) x784 (x1198 x231)) (x645 x231)))
(assert (x803 x589))
(assert (x803 x360))
(assert (x803 x1058))
(assert (x803 x592))
(assert (x803 x678))
(assert (x1333 x384))
(assert (= (x149 (x634 x951)) x951))
(assert (= x635 (x149 (x634 x635))))
(assert (x803 x991))
(assert (x803 x906))
(assert (= (x856 826074471) (x634 826074471)))
(assert (x803 x383))
(assert (= (ite (= x794 x70) x155 (x1352 x794)) (x694 x794)))
(assert (= x192 (x149 (x634 x192))))
(assert (x803 x672))
(assert (x803 x425))
(assert (= (x1318 x1220) (ite (and x617 x1060 (not x943)) (x847 x1220) (ite (and (not x1060) (not x943) x617 x5) (x847 x1220) (x1189 x1220)))))
(assert (x803 x14))
(assert (x803 x6))
(assert (x803 x515))
(assert (x803 x622))
(assert (= (x1156 x219) (ite (= x928 x219) x1111 (x526 x219))))
(assert (x803 x641))
(assert (=> (> (+ 10000 1) x67) (= (x634 x67) (x856 x67))))
(assert (= x628 x1108))
(assert (=> (> (+ 10000 1) x982) (= (x634 x982) (x856 x982))))
(assert (x803 x712))
(assert (x803 x603))
(assert (x803 x686))
(assert (x803 x131))
(assert (= (x149 (x634 x958)) x958))
(assert (x803 x385))
(assert (= (x856 274184521717934524641157099916833587218) (x634 274184521717934524641157099916833587218)))
(assert (= (x802 x182) (ite (= x182 x1038) x799 (x694 x182))))
(assert (x1333 x652))
(assert (x803 x81))
(assert (= x777 (x149 (x634 x777))))
(assert (x803 x542))
(assert (= (x505 x152) (ite (= x999 x152) x833 (x645 x152))))
(assert (= (ite (and x900 x1279) (x1046 x182) (x438 x182)) (x976 x182)))
(assert (= (x149 (x634 x127)) x127))
(assert (x803 x307))
(assert (=> (< (- x956 1) 10000) (= (x856 x956) (x634 x956))))
(assert (x803 x914))
(assert (=> (> (+ 10000 1) x1316) (= (x856 x1316) (x634 x1316))))
(assert (x803 x1265))
(assert (= (x149 (x856 468353030)) 468353030))
(assert (x1333 x308))
(assert (=> (< (- x342 1) 10000) (= (x634 x342) (x856 x342))))
(assert (x803 x152))
(assert (x803 x573))
(assert (x803 x552))
(assert (x803 x182))
(assert (x803 x420))
(assert (x803 x1348))
(assert (x803 x489))
(assert (=> (> (+ 10000 1) x966) (= (x634 x966) (x856 x966))))
(assert (x803 x101))
(assert (x803 x972))
(assert (= (x976 x1041) (ite (and x900 x1279) (x1046 x1041) (x438 x1041))))
(assert (= (ite (= x112 x637) x735 (x1269 x637)) (x526 x637)))
(assert (x803 x1091))
(assert (x803 x1086))
(assert (=> (< (- x713 1) 10000) (= (x634 x713) (x856 x713))))
(assert (x803 x794))
(assert (= (ite (and x617 x298) (x585 x210) (x808 x210)) (x386 x210)))
(assert (= (x1198 x182) (ite (= x182 x1117) x1209 (x105 x182))))
(assert (x803 x1250))
(assert (= x733 (=> (and (= x367 x571) (= x329 x306)) x451)))
(assert (=> (> (+ 10000 1) x20) (= (x634 x20) (x856 x20))))
(assert (= (x379 x231) (ite (and x302 x1102 x715 (not x688) x124 x347) (x505 x231) (ite (and x302 x715 x347 (not x1102) x124) (x645 x231) (ite (and x302 x347 x124 (not x715)) (x1198 x231) (ite (and x124 x347 (not x302)) (x105 x231) (x143 x231)))))))
(assert (x803 x392))
(assert (x803 x838))
(assert (x803 x723))
(assert (= (x734 x231) (ite (and (not x594) x124 x347) (x379 x231) (x91 x231))))
(assert (= (x802 x210) (ite (= x1038 x210) x799 (x694 x210))))
(assert true)
(assert (=> (< (- x951 1) 10000) (= (x856 x951) (x634 x951))))
(assert (x803 x709))
(assert (= (ite (= x1038 x431) x799 (x694 x431)) (x802 x431)))
(assert (x803 x499))
(assert (= 274184521717934524641157099916833587218 (x149 (x856 274184521717934524641157099916833587218))))
(assert (= (x694 x1041) (ite (= x70 x1041) x155 (x1352 x1041))))
(assert (x803 x842))
(assert (x803 x463))
(assert (x803 x355))
(assert (x1333 x331))
(assert (= (x264 x1303) (ite (and x1078 x13) (x868 x1303) (x1350 x1303))))
(assert (=> (> (+ 10000 1) x1094) (= (x634 x1094) (x856 x1094))))
(assert (x803 x1183))
(assert (x803 x859))
(assert (x803 x1293))
(assert (= (x634 2960351575) (x856 2960351575)))
(assert (= (x856 2293535753) (x634 2293535753)))
(assert (= (x634 2532887486) (x856 2532887486)))
(assert (=> (< (- x120 1) 10000) (= (x634 x120) (x856 x120))))
(assert (x803 x700))
(assert (x803 x400))
(assert (x803 x795))
(assert (= x111 x106))
(assert (= (x1107 x1303) (ite (and x125 (not x979) x150 x1019 x1281 x291) (x252 x1303) (ite (and x125 x1019 x1281 (not x150) x291) (x485 x1303) (ite (and (not x125) x291 x1281 x1019) (x34 x1303) (ite (and x1019 x1281 (not x291)) (x423 x1303) (x1004 x1303)))))))
(assert (= (ite (= x616 x1048) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x616)) (x105 x616)))
(assert (x803 x55))
(assert (= (x485 x1303) (ite (= x573 x1303) x779 (x34 x1303))))
(assert (x803 x966))
(assert (x803 x137))
(assert (= (x734 x1303) (ite (and x124 (not x594) x347) (x379 x1303) (x91 x1303))))
(assert (x803 x753))
(assert (x803 x1098))
(assert (= (x634 2512682246) (x856 2512682246)))
(assert (= (x856 18446744073709551615) (x634 18446744073709551615)))
(assert (= (ite (= x219 x456) x232 (x1166 x219)) (x585 x219)))
(assert (x1333 x647))
(assert (= (ite (= x1058 x658) x784 (x1198 x658)) (x645 x658)))
(assert (x803 x1323))
(assert (x1333 x660))
(assert (x803 x903))
(assert (x803 x1111))
(assert (= (ite (= x1048 x658) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x658)) (x105 x658)))
(assert (x803 x1275))
(assert (= (x149 (x634 x517)) x517))
(assert (x803 x164))
(assert (x803 x1321))
(assert (x1333 x1239))
(assert (x803 x958))
(assert (x803 x1067))
(assert (x803 x133))
(assert (= (ite (= x1015 x1332) x1178 (x1123 x1015)) (x998 x1015)))
(assert (=> (< (- x353 1) 10000) (= (x634 x353) (x856 x353))))
(assert (= x905 (x149 (x634 x905))))
(assert (= x745 (x149 (x634 x745))))
(assert (x1333 x957))
(assert (x803 x266))
(assert (= (ite (= x1038 x152) x799 (x694 x152)) (x802 x152)))
(assert (=> (< (- x642 1) 10000) (= (x634 x642) (x856 x642))))
(assert (= (+ (x149 x970) 1) (x149 (x1027 x970 1))))
(assert (=> (> (+ 10000 1) x280) (= (x856 x280) (x634 x280))))
(assert (x1333 x20))
(assert (= x1294 (x149 (x634 x1294))))
(assert (x803 x1301))
(assert (= (x526 x794) (ite (= x112 x794) x735 (x1269 x794))))
(assert (= x827 (=> (and (= (x441 (x634 x410) x791 0) x1149) (not (> 2293535753 x910)) (= (x236 (x634 274184521717934524641157099916833587206)) x754) (= x726 (x320 x1149)) (not (= 2764855426 x910)) (not (= 2743102681 x910)) (<= x726 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x410 1461501637330902918203684832716283019655932542975) (not (< x910 2690754053)) (= x910 2798343961) (= x1260 x726) (<= 0 x726) (= (x441 (x634 x327) (x856 5) 0) x791) (> x754 0) (not (= x910 2690754053)) (> 2960351575 x910)) (=> (and (= x306 x385) (= x1103 x1260) (= x342 x1077) (= x1140 x367)) x427))))
(assert (= (x1228 x1015) (ite (= x413 x1015) x747 (x459 x1015))))
(assert (x803 x895))
(assert (= x554 (and (not x154) x730)))
(assert (= x496 (x149 (x634 x496))))
(assert (x1333 x920))
(assert (= (x149 (x634 x564)) x564))
(assert (x803 x249))
(assert (= (ite (and x617 x298) (x585 x152) (x808 x152)) (x386 x152)))
(assert (x803 x961))
(assert (x803 x871))
(assert (x803 x1237))
(assert (=> (< (- x127 1) 10000) (= (x634 x127) (x856 x127))))
(assert (= (x149 (x856 1968616202)) 1968616202))
(assert (x803 x130))
(assert (x803 x983))
(assert (x1333 x1020))
(assert (x803 x418))
(assert (x1333 x1294))
(assert (x803 x845))
(assert (= (x149 (x634 x385)) x385))
(assert (=> (> (+ 10000 1) x1154) (= (x856 x1154) (x634 x1154))))
(assert (=> (> (+ 10000 1) x492) (= (x634 x492) (x856 x492))))
(assert (= (ite (and x1078 x13) (x868 x1275) (x1350 x1275)) (x264 x1275)))
(assert (x803 x1292))
(assert (= x346 x1236))
(assert (x1333 x553))
(assert (x803 x704))
(assert (=> (> (+ 10000 1) x1181) (= (x856 x1181) (x634 x1181))))
(assert (x803 x681))
(assert (= (x1228 x1053) (ite (= x1053 x413) x747 (x459 x1053))))
(assert (x803 x145))
(assert (x803 x44))
(assert (x803 x870))
(assert (= (x976 x417) (ite (and x1279 x900) (x1046 x417) (x438 x417))))
(assert (x803 x397))
(assert (= (ite (= x928 x831) x1111 (x526 x831)) (x1156 x831)))
(assert (x803 x50))
(assert (x803 x614))
(assert (x803 x1016))
(assert (x803 x285))
(assert (= (x734 x431) (ite (and x347 (not x594) x124) (x379 x431) (x91 x431))))
(assert (x803 x529))
(assert (x803 x873))
(assert (= (x149 (x634 x1239)) x1239))
(assert (= (ite (= x831 x70) x155 (x1352 x831)) (x694 x831)))
(assert (x803 x319))
(assert (x803 x999))
(assert (= 826074471 (x149 (x856 826074471))))
(assert (= (x149 (x634 x659)) x659))
(assert (x803 x1176))
(assert (x54 x1217 x1035))
(assert (x803 x1223))
(assert (x1333 x329))
(assert (= (ite (and (not x943) x1090 (not x281) x617 (not x1225)) (x802 x1041) (ite (and x617 (not x943) (not x281) (not x1090)) (x694 x1041) (ite (and (not x943) x617 x281) (x694 x1041) (x996 x1041)))) (x520 x1041)))
(assert (x803 x179))
(assert (x739 x769 x159))
(assert (= x120 (x149 (x634 x120))))
(assert (= 0 (x457 x1041)))
(assert (x803 x1118))
(assert (x803 x854))
(assert (x803 x1084))
(assert (x1333 x410))
(assert (x1333 x903))
(assert (x803 x38))
(assert (x803 x380))
(assert (x803 x70))
(assert (= (ite (and x617 x298) (x585 x928) (x808 x928)) (x386 x928)))
(assert (x1333 x358))
(assert (x803 x224))
(assert (=> (> (+ 10000 1) x29) (= (x856 x29) (x634 x29))))
(assert (= (x379 x219) (ite (and x1102 x302 x715 x347 (not x688) x124) (x505 x219) (ite (and x302 x715 (not x1102) x347 x124) (x645 x219) (ite (and (not x715) x347 x302 x124) (x1198 x219) (ite (and x347 (not x302) x124) (x105 x219) (x143 x219)))))))
(assert (= x1232 (x149 (x634 x1232))))
(assert (= (ite (= x70 x152) x155 (x1352 x152)) (x694 x152)))
(assert (x803 x368))
(assert (= x489 (x149 (x634 x489))))
(assert (x803 x568))
(assert (= x1019 x1304))
(assert (x803 x95))
(assert (x803 x1260))
(assert (x195 x153 x662))
(assert (x803 x488))
(assert (= 1461501637330902918203684832716283019655932542975 (x149 (x856 1461501637330902918203684832716283019655932542975))))
(assert (= (x585 x794) (ite (= x794 x456) x232 (x1166 x794))))
(assert (x803 x804))
(assert (x803 x349))
(assert (= (ite (= x112 x1275) x735 (x1269 x1275)) (x526 x1275)))
(assert (= (ite (= x928 x456) x232 (x1166 x928)) (x585 x928)))
(assert (= (ite (= x928 x1038) x799 (x694 x928)) (x802 x928)))
(assert (= (x1156 x378) (ite (= x928 x378) x1111 (x526 x378))))
(assert (=> (> (+ 10000 1) x1051) (= (x856 x1051) (x634 x1051))))
(assert (x803 x1000))
(assert (= (x149 (x634 x1252)) x1252))
(assert (x803 x1100))
(assert (x803 x744))
(assert (= (x856 2939843472) (x634 2939843472)))
(assert (x803 x1201))
(assert (= x308 (x149 (x634 x308))))
(assert (x803 x982))
(assert (= x20 (x149 (x634 x20))))
(assert (= (x505 x456) (ite (= x456 x999) x833 (x645 x456))))
(assert (= (ite (= x1058 x794) x784 (x1198 x794)) (x645 x794)))
(assert (= (x149 (x634 x750)) x750))
(assert (x803 x1345))
(assert (x803 x1037))
(assert (x803 x348))
(assert (x803 x244))
(assert (x803 x206))
(assert (= (x734 x219) (ite (and (not x594) x347 x124) (x379 x219) (x91 x219))))
(assert (x803 x431))
(assert (x803 x409))
(assert (x1333 x1329))
(assert (= (x585 x1237) (ite (= x456 x1237) x232 (x1166 x1237))))
(assert (= (and (not x444) x1126) x1288))
(assert (= (ite (= x431 x1048) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1324 x431)) (x105 x431)))
(assert (= (x634 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x856 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(check-sat)
