(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x2327 0)) (((x1886 (x2677 x2327) (x2253 Real)) (x4101 (x1285 x2327) (x3487 x2327) (x51 Real)) (x4822 (x2112 Real)))))
(declare-fun x2662 () Real)
(declare-fun x1274 () Bool)
(declare-fun x4597 () Real)
(declare-fun x982 () Real)
(declare-fun x3626 () Bool)
(declare-fun x4411 () x2327)
(declare-fun x2801 () Real)
(declare-fun x186 () Bool)
(declare-fun x2284 () Real)
(declare-fun x2372 () Real)
(declare-fun x2027 () Bool)
(declare-fun x1484 () x2327)
(declare-fun x2676 () x2327)
(declare-fun x209 () Bool)
(declare-fun x3008 () Real)
(declare-fun x4030 () x2327)
(declare-fun x2103 () Bool)
(declare-fun x4266 () Bool)
(declare-fun x2456 () Bool)
(declare-fun x3521 () Real)
(declare-fun x1300 () Real)
(declare-fun x2644 () Real)
(declare-fun x2607 () Real)
(declare-fun x1407 () Real)
(declare-fun x4622 (Real) Real)
(declare-fun x2838 () Real)
(declare-fun x1116 () Real)
(declare-fun x3614 (Real) Real)
(declare-fun x3257 () Real)
(declare-fun x896 () Real)
(declare-fun x4727 () Real)
(declare-fun x4481 () Bool)
(declare-fun x351 () Real)
(declare-fun x2668 () Bool)
(declare-fun x4868 () Real)
(declare-fun x4883 () Bool)
(declare-fun x4695 () Real)
(declare-fun x4175 () Real)
(declare-fun x1743 () Real)
(declare-fun x2408 () Real)
(declare-fun x4664 () Real)
(declare-fun x2461 () Real)
(declare-fun x2519 () Bool)
(declare-fun x4741 () Bool)
(declare-fun x3784 () Real)
(declare-fun x3596 () Bool)
(declare-fun x2192 () x2327)
(declare-fun x4941 () Bool)
(declare-fun x4089 () Real)
(declare-fun x2867 () Bool)
(declare-fun x2825 () Real)
(declare-fun x3316 () Bool)
(declare-fun x4502 () Bool)
(declare-fun x716 () Bool)
(declare-fun x1223 (Real) Real)
(declare-fun x4610 () Real)
(declare-fun x538 () Real)
(declare-fun x3526 () Real)
(declare-fun x2414 () Bool)
(declare-fun x4685 () Bool)
(declare-fun x3274 () Real)
(declare-fun x2732 () Bool)
(declare-fun x20 () Real)
(declare-fun x1505 () x2327)
(declare-fun x3617 () Bool)
(declare-fun x3375 () Bool)
(declare-fun x956 (x2327) Real)
(declare-fun x3993 () Bool)
(declare-fun x2 () Real)
(declare-fun x28 (Real) Real)
(declare-fun x1532 (x2327) Real)
(declare-fun x4472 () Bool)
(declare-fun x4660 () Bool)
(declare-fun x4508 () Bool)
(declare-fun x2121 (Real) Real)
(declare-fun x844 () Real)
(declare-fun x2132 () Real)
(declare-fun x3264 () Bool)
(declare-fun x3178 () Real)
(declare-fun x4246 (x2327) Real)
(declare-fun x3965 () x2327)
(declare-fun x756 () Real)
(declare-fun x1885 () Bool)
(declare-fun x4611 () Bool)
(declare-fun x474 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x2892 () Real)
(declare-fun x4929 () Bool)
(declare-fun x163 () Bool)
(declare-fun x3041 () Bool)
(declare-fun x1990 () Real)
(declare-fun x1643 () Real)
(declare-fun x2730 () Bool)
(declare-fun x457 () Real)
(declare-fun x1571 () Bool)
(declare-fun x1387 () Real)
(declare-fun x4318 () x2327)
(declare-fun x2236 () Bool)
(declare-fun x2174 (x2327) Real)
(declare-fun x521 () Real)
(declare-fun x2377 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x652 () Bool)
(declare-fun x2561 () Real)
(declare-fun x3138 () Real)
(declare-fun x1819 () Real)
(declare-fun x3718 () Real)
(declare-fun x4317 () Bool)
(declare-fun x991 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x4633 () Real)
(declare-fun x1277 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x13 () Real)
(declare-fun x3790 () Real)
(declare-fun x251 () Real)
(declare-fun x1060 () x2327)
(declare-fun x3465 () Real)
(declare-fun x2144 () Bool)
(declare-fun x3200 () Real)
(declare-fun x2648 () Bool)
(declare-fun x4328 () Real)
(declare-fun x894 () Real)
(declare-fun x4972 (x2327) Real)
(declare-fun x4255 () x2327)
(declare-fun x3898 () Bool)
(declare-fun x4190 () Bool)
(declare-fun x1348 () x2327)
(declare-fun x971 () Real)
(declare-fun x2490 () Real)
(declare-fun x4483 () Real)
(declare-fun x2586 () Bool)
(declare-fun x359 () Bool)
(declare-fun x350 () Bool)
(declare-fun x22 () Real)
(declare-fun x1725 () Real)
(declare-fun x678 () Real)
(declare-fun x245 () Real)
(declare-fun x498 () Real)
(declare-fun x2385 () Real)
(declare-fun x1776 () x2327)
(declare-fun x3783 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x1844 (Real) Real)
(declare-fun x3866 () x2327)
(declare-fun x3248 (x2327) Real)
(declare-fun x743 () Bool)
(declare-fun x2499 () Real)
(declare-fun x2321 () Bool)
(declare-fun x3547 () Bool)
(declare-fun x2699 () Real)
(declare-fun x2943 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x344 () Real)
(declare-fun x3813 () Real)
(declare-fun x1651 (Real) Real)
(declare-fun x1382 (Real) Real)
(declare-fun x2641 () Real)
(declare-fun x4923 () Bool)
(declare-fun x3696 () Bool)
(declare-fun x3814 () Real)
(declare-fun x4145 () Real)
(declare-fun x689 () Real)
(declare-fun x2913 (x2327) Real)
(declare-fun x4823 () Bool)
(declare-fun x3284 () Bool)
(declare-fun x4095 () Real)
(declare-fun x4910 () Real)
(declare-fun x1137 () Bool)
(declare-fun x1109 () Real)
(declare-fun x4336 () Real)
(declare-fun x4449 () Bool)
(declare-fun x3824 (x2327) Real)
(declare-fun x4235 () Bool)
(declare-fun x1711 () Real)
(declare-fun x4791 () Real)
(declare-fun x1191 () Bool)
(declare-fun x4115 () Real)
(declare-fun x3976 () Real)
(declare-fun x4183 () Real)
(declare-fun x4934 (x2327) Real)
(declare-fun x2635 () Real)
(declare-fun x392 () Real)
(declare-fun x2710 () Bool)
(declare-fun x1173 () Real)
(declare-fun x3567 () Bool)
(declare-fun x200 () Real)
(declare-fun x269 (x2327) Real)
(declare-fun x485 () Bool)
(declare-fun x3091 (Real) Real)
(declare-fun x9 () Real)
(declare-fun x4853 () Real)
(declare-fun x4763 (x2327) Real)
(declare-fun x586 () Real)
(declare-fun x4543 () Real)
(declare-fun x711 () Real)
(declare-fun x2627 () Real)
(declare-fun x454 () Bool)
(declare-fun x2862 (x2327) Real)
(declare-fun x824 () Real)
(declare-fun x4131 () Real)
(declare-fun x1865 () Bool)
(declare-fun x2740 () Real)
(declare-fun x1874 () x2327)
(declare-fun x2969 () Real)
(declare-fun x3280 () Real)
(declare-fun x3325 () Bool)
(declare-fun x2957 () Real)
(declare-fun x4559 () Real)
(declare-fun x2613 () Real)
(declare-fun x3878 () Bool)
(declare-fun x4546 () Bool)
(declare-fun x1459 () x2327)
(declare-fun x4595 (x2327) Real)
(declare-fun x4268 (x2327) Real)
(declare-fun x4304 (x2327) Real)
(declare-fun x4904 () Real)
(declare-fun x2850 () Real)
(declare-fun x494 () x2327)
(declare-fun x1869 () Real)
(declare-fun x1658 () Real)
(declare-fun x2188 () Real)
(declare-fun x2626 () Real)
(declare-fun x332 () Bool)
(declare-fun x4618 () Real)
(declare-fun x4871 (Real) Real)
(declare-fun x4774 () Real)
(declare-fun x1785 () Bool)
(declare-fun x2715 () x2327)
(declare-fun x4768 () Bool)
(declare-fun x781 () Bool)
(declare-fun x3848 () Bool)
(declare-fun x115 () Real)
(declare-fun x624 () Real)
(declare-fun x80 () Real)
(declare-fun x2315 () Real)
(declare-fun x4775 () Real)
(declare-fun x2001 () Real)
(declare-fun x3576 () Bool)
(declare-fun x3795 () Bool)
(declare-fun x4114 () Bool)
(declare-fun x505 () Real)
(declare-fun x2154 () Real)
(declare-fun x696 () Real)
(declare-fun x3539 () Bool)
(declare-fun x3867 () Real)
(declare-fun x1148 (x2327) Real)
(declare-fun x49 () Bool)
(declare-fun x366 () Bool)
(declare-fun x2015 () Real)
(declare-fun x1559 () Real)
(declare-fun x2305 () Real)
(declare-fun x3542 () Bool)
(declare-fun x1952 () Real)
(declare-fun x2500 () Real)
(declare-fun x3475 () Real)
(declare-fun x3350 () Real)
(declare-fun x3860 () Real)
(declare-fun x1761 () Real)
(declare-fun x565 () Bool)
(declare-fun x4290 () Bool)
(declare-fun x1276 () Real)
(declare-fun x1145 () x2327)
(declare-fun x1759 () x2327)
(declare-fun x1458 () Real)
(declare-fun x1681 () Bool)
(declare-fun x1839 () Real)
(declare-fun x1882 () Bool)
(declare-fun x434 () Real)
(declare-fun x1203 () Real)
(declare-fun x187 () Real)
(declare-fun x939 () Real)
(declare-fun x1528 () Bool)
(declare-fun x850 () Real)
(declare-fun x2288 () Real)
(declare-fun x236 () Bool)
(declare-fun x175 () Bool)
(declare-fun x444 () Real)
(declare-fun x1610 () Bool)
(declare-fun x58 () Bool)
(declare-fun x3796 () Real)
(declare-fun x3029 () Real)
(declare-fun x2070 () Real)
(declare-fun x3291 () Real)
(declare-fun x2594 () Real)
(declare-fun x4696 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x3503 () Real)
(declare-fun x535 () Bool)
(declare-fun x3418 () x2327)
(declare-fun x3707 () Bool)
(declare-fun x506 () Real)
(declare-fun x3948 () Bool)
(declare-fun x3552 () Real)
(declare-fun x4874 () Real)
(declare-fun x567 () x2327)
(declare-fun x2069 () Bool)
(declare-fun x2263 () Real)
(declare-fun x3424 () Real)
(declare-fun x1875 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x53 (Real) Real)
(declare-fun x3222 () Real)
(declare-fun x7 () Real)
(declare-fun x4277 () Bool)
(declare-fun x4071 () Bool)
(declare-fun x3655 () Bool)
(declare-fun x1868 () Real)
(declare-fun x1873 () Real)
(declare-fun x2985 () Bool)
(declare-fun x16 () Real)
(declare-fun x3674 () Bool)
(declare-fun x488 () x2327)
(declare-fun x649 () Bool)
(declare-fun x4433 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x1189 () Real)
(declare-fun x15 (x2327) Real)
(declare-fun x4659 () Bool)
(declare-fun x4045 () Real)
(declare-fun x615 (x2327) Real)
(declare-fun x4697 () Real)
(declare-fun x549 () Bool)
(declare-fun x2168 () Real)
(declare-fun x1981 () Bool)
(declare-fun x719 () Real)
(declare-fun x2215 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x2369 () Real)
(declare-fun x630 () Real)
(declare-fun x4533 () Bool)
(declare-fun x918 () Real)
(declare-fun x879 () Real)
(declare-fun x2063 () Real)
(declare-fun x2164 () Bool)
(declare-fun x792 () Bool)
(declare-fun x4577 () Bool)
(declare-fun x2522 () Real)
(declare-fun x3633 () Real)
(declare-fun x2885 (Real) Real)
(declare-fun x1961 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x95 () Bool)
(declare-fun x129 () Real)
(declare-fun x4118 () Real)
(declare-fun x3735 () Bool)
(declare-fun x425 () Bool)
(declare-fun x1721 () Real)
(declare-fun x4712 () Real)
(declare-fun x1972 () Real)
(declare-fun x1831 () Bool)
(declare-fun x3332 () Bool)
(declare-fun x3230 () Bool)
(declare-fun x1586 () x2327)
(declare-fun x4721 () Real)
(declare-fun x3086 () Bool)
(declare-fun x3402 () Real)
(declare-fun x418 () Real)
(declare-fun x4956 () Real)
(declare-fun x691 () Bool)
(declare-fun x2244 () Real)
(declare-fun x4478 () x2327)
(declare-fun x81 () Bool)
(declare-fun x2394 () Real)
(declare-fun x1169 () Real)
(declare-fun x4462 () Bool)
(declare-fun x4731 () Bool)
(declare-fun x1828 () Real)
(declare-fun x2424 () Real)
(declare-fun x4992 () Bool)
(declare-fun x1467 () Real)
(declare-fun x1468 () Real)
(declare-fun x4441 (Real) Real)
(declare-fun x4092 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x1518 () Real)
(declare-fun x2155 () Bool)
(declare-fun x4337 () Bool)
(declare-fun x1507 (x2327) Real)
(declare-fun x4293 () Real)
(declare-fun x1862 () Bool)
(declare-fun x2891 () Bool)
(declare-fun x2235 () Bool)
(declare-fun x1065 () Real)
(declare-fun x3694 () Bool)
(declare-fun x4029 () Bool)
(declare-fun x974 () Bool)
(declare-fun x3085 () Real)
(declare-fun x4480 () Real)
(declare-fun x1088 () Real)
(declare-fun x2467 () x2327)
(declare-fun x1437 () Real)
(declare-fun x1568 () Bool)
(declare-fun x1818 () Real)
(declare-fun x1872 () Real)
(declare-fun x979 () Bool)
(declare-fun x1350 () Real)
(declare-fun x4866 () x2327)
(declare-fun x1916 () Real)
(declare-fun x1234 () Bool)
(declare-fun x302 () Bool)
(declare-fun x4195 () Real)
(declare-fun x4223 () x2327)
(declare-fun x1584 () Bool)
(declare-fun x3162 () Real)
(declare-fun x2993 () Real)
(declare-fun x1557 () Real)
(declare-fun x1019 () Bool)
(declare-fun x2267 () Bool)
(declare-fun x715 () Real)
(declare-fun x760 () Bool)
(declare-fun x613 () Real)
(declare-fun x2640 () Real)
(declare-fun x2995 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x4354 () Real)
(declare-fun x2860 () Real)
(declare-fun x2496 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x4382 () x2327)
(declare-fun x3857 () x2327)
(declare-fun x795 () Bool)
(declare-fun x4894 () Real)
(declare-fun x2893 () Real)
(declare-fun x249 () Bool)
(declare-fun x1976 () x2327)
(declare-fun x2044 () Real)
(declare-fun x774 () Real)
(declare-fun x1428 () Real)
(declare-fun x4099 () Real)
(declare-fun x1970 () Bool)
(declare-fun x2492 () Real)
(declare-fun x4004 () Bool)
(declare-fun x4549 () Bool)
(declare-fun x2755 () Real)
(declare-fun x1684 () Real)
(declare-fun x4708 () Bool)
(declare-fun x1599 () x2327)
(declare-fun x2879 () Real)
(declare-fun x217 () Real)
(declare-fun x4250 () Real)
(declare-fun x1073 () Real)
(declare-fun x2659 () Real)
(declare-fun x2737 () Real)
(declare-fun x2706 () Real)
(declare-fun x4117 () Real)
(declare-fun x1758 () Real)
(declare-fun x4850 () Real)
(declare-fun x1154 () x2327)
(declare-fun x283 () Bool)
(declare-fun x4805 () Real)
(declare-fun x4103 () Bool)
(declare-fun x666 () Real)
(declare-fun x1946 () x2327)
(declare-fun x2508 () x2327)
(declare-fun x3055 () Bool)
(declare-fun x3714 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x2927 () Real)
(declare-fun x676 () Real)
(declare-fun x2272 (Real) Real)
(declare-fun x336 () Bool)
(declare-fun x3070 () Real)
(declare-fun x1892 () x2327)
(declare-fun x561 () x2327)
(declare-fun x779 () Real)
(declare-fun x819 () Real)
(declare-fun x1813 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x522 (Real) Real)
(declare-fun x2848 () Bool)
(declare-fun x1747 () Real)
(declare-fun x1500 () x2327)
(declare-fun x809 () Bool)
(declare-fun x916 (x2327) Real)
(declare-fun x4977 () Bool)
(declare-fun x3723 () Real)
(declare-fun x374 () Bool)
(declare-fun x3618 (x2327) Real)
(declare-fun x3057 () Real)
(declare-fun x4416 () Real)
(declare-fun x1092 () Real)
(declare-fun x2190 () Real)
(declare-fun x2301 () Real)
(declare-fun x221 () Bool)
(declare-fun x4517 () x2327)
(declare-fun x3801 () Real)
(declare-fun x1140 () Bool)
(declare-fun x3096 () Real)
(declare-fun x2049 () Bool)
(declare-fun x2308 () Real)
(declare-fun x2868 () Bool)
(declare-fun x1082 () x2327)
(declare-fun x1039 () x2327)
(declare-fun x410 () Real)
(declare-fun x3789 () Real)
(declare-fun x1669 (Real) Real)
(declare-fun x3827 () Real)
(declare-fun x2458 () Real)
(declare-fun x1385 () Real)
(declare-fun x2162 () Real)
(declare-fun x670 () Bool)
(declare-fun x2506 () Real)
(declare-fun x4232 () Bool)
(declare-fun x1020 () Real)
(declare-fun x4969 () Bool)
(declare-fun x1816 () Real)
(declare-fun x1029 () Real)
(declare-fun x3094 () Bool)
(declare-fun x4532 () Bool)
(declare-fun x416 () Real)
(declare-fun x2949 () Real)
(declare-fun x2310 () Bool)
(declare-fun x859 () Bool)
(declare-fun x1774 () Real)
(declare-fun x2876 () Bool)
(declare-fun x331 () Real)
(declare-fun x860 () Real)
(declare-fun x4139 () Real)
(declare-fun x2998 () Real)
(declare-fun x1228 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x4661 () Real)
(declare-fun x4080 () Bool)
(declare-fun x4825 () Real)
(declare-fun x2685 () Real)
(declare-fun x1973 () Real)
(declare-fun x4213 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x925 () Real)
(declare-fun x4400 () Bool)
(declare-fun x323 () Bool)
(declare-fun x246 () x2327)
(declare-fun x4958 () Bool)
(declare-fun x1637 () Real)
(declare-fun x2902 () Real)
(declare-fun x2125 () Bool)
(declare-fun x3322 () Real)
(declare-fun x2669 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x56 () Real)
(declare-fun x480 () Real)
(declare-fun x3326 () Bool)
(declare-fun x3221 () Real)
(declare-fun x4174 () Bool)
(declare-fun x41 () Real)
(declare-fun x1883 () x2327)
(declare-fun x2137 () Bool)
(declare-fun x1035 () Real)
(declare-fun x2749 () x2327)
(declare-fun x993 () Bool)
(declare-fun x4885 () Bool)
(declare-fun x978 () Real)
(declare-fun x3137 () Real)
(declare-fun x537 () Real)
(declare-fun x270 () Real)
(declare-fun x2692 () Real)
(declare-fun x2361 () Real)
(declare-fun x3126 (x2327) Real)
(declare-fun x379 () x2327)
(declare-fun x3225 () Bool)
(declare-fun x1301 () x2327)
(declare-fun x591 () Bool)
(declare-fun x4844 () Bool)
(declare-fun x1451 (x2327) Real)
(declare-fun x1239 () Real)
(declare-fun x3369 () Bool)
(declare-fun x3270 () Bool)
(declare-fun x4500 () Real)
(declare-fun x3406 () Real)
(declare-fun x1932 () x2327)
(declare-fun x1977 () Real)
(declare-fun x632 () Bool)
(declare-fun x2250 () x2327)
(declare-fun x4680 () Real)
(declare-fun x4410 () Real)
(declare-fun x4869 (Real) Real)
(declare-fun x3637 () Real)
(declare-fun x2546 () Real)
(declare-fun x4632 (Real) Real)
(declare-fun x218 () Real)
(declare-fun x865 () Bool)
(declare-fun x1786 (Real) Real)
(declare-fun x3920 () Real)
(declare-fun x168 () x2327)
(declare-fun x1631 () Bool)
(declare-fun x510 () Bool)
(declare-fun x2967 () Bool)
(declare-fun x37 () Real)
(declare-fun x3563 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x2343 () Real)
(declare-fun x4637 () Real)
(declare-fun x4555 () Real)
(declare-fun x773 () x2327)
(declare-fun x2754 () Real)
(declare-fun x4466 () Bool)
(declare-fun x4880 () Bool)
(declare-fun x4790 () Real)
(declare-fun x4846 () Real)
(declare-fun x4510 () Bool)
(declare-fun x3034 () Real)
(declare-fun x1446 () Real)
(declare-fun x4899 () Real)
(declare-fun x4288 () Real)
(declare-fun x3469 () Bool)
(declare-fun x2055 () Real)
(declare-fun x4888 () Bool)
(declare-fun x1205 () Real)
(declare-fun x3470 () x2327)
(declare-fun x3223 (x2327) Real)
(declare-fun x3310 () Bool)
(declare-fun x1262 () Real)
(declare-fun x2482 () Real)
(declare-fun x2498 () Bool)
(declare-fun x1453 () Real)
(declare-fun x2233 () Real)
(declare-fun x3588 () Real)
(declare-fun x1207 (Real) Real)
(declare-fun x4335 () x2327)
(declare-fun x4383 () Real)
(declare-fun x1424 () Real)
(declare-fun x1402 () Bool)
(declare-fun x3612 () x2327)
(declare-fun x1906 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x3603 () Real)
(declare-fun x1420 () x2327)
(declare-fun x808 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x361 () Bool)
(declare-fun x1625 (x2327) Real)
(declare-fun x3272 () Real)
(declare-fun x4733 () Bool)
(declare-fun x507 () Bool)
(declare-fun x4049 () Bool)
(declare-fun x626 () Bool)
(declare-fun x3488 () Real)
(declare-fun x2344 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x3661 (x2327) Real)
(declare-fun x3643 () Real)
(declare-fun x4645 () Bool)
(declare-fun x1364 () Real)
(declare-fun x345 () Bool)
(declare-fun x580 () Real)
(declare-fun x1118 () Real)
(declare-fun x4148 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x4392 () Real)
(declare-fun x3793 () Bool)
(declare-fun x4452 () Real)
(declare-fun x4881 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x151 () Real)
(declare-fun x2914 () Real)
(declare-fun x920 () Real)
(declare-fun x3753 () Bool)
(declare-fun x4667 () x2327)
(declare-fun x1272 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x4374 () Real)
(declare-fun x4581 () Real)
(declare-fun x3895 () Real)
(declare-fun x69 () Real)
(declare-fun x3619 () Bool)
(declare-fun x4917 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x3721 () Bool)
(declare-fun x107 () Bool)
(declare-fun x610 () Real)
(declare-fun x349 (Real) Real)
(declare-fun x921 () Real)
(declare-fun x1419 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x4606 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x4674 () x2327)
(declare-fun x2077 () Bool)
(declare-fun x1730 () Real)
(declare-fun x429 () Real)
(declare-fun x11 () Bool)
(declare-fun x3951 () Bool)
(declare-fun x3559 () Real)
(declare-fun x2401 () Real)
(declare-fun x1588 () Bool)
(declare-fun x3947 () Bool)
(declare-fun x1379 () Real)
(declare-fun x881 () Real)
(declare-fun x3652 () Bool)
(declare-fun x303 () Real)
(declare-fun x2937 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x855 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x3765 () Real)
(declare-fun x1825 () Bool)
(declare-fun x677 () Real)
(declare-fun x1254 () Real)
(declare-fun x1654 () Real)
(declare-fun x2934 () Bool)
(declare-fun x4386 () Bool)
(declare-fun x609 () Bool)
(declare-fun x721 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x3668 () Bool)
(declare-fun x1755 () Real)
(declare-fun x3454 () Bool)
(declare-fun x4020 () Real)
(declare-fun x3323 () Real)
(declare-fun x2149 () Bool)
(declare-fun x2264 () Real)
(declare-fun x2483 () Bool)
(declare-fun x2962 () Real)
(declare-fun x1316 () Real)
(declare-fun x1265 () Real)
(declare-fun x4593 () Real)
(declare-fun x3690 () Real)
(declare-fun x1549 () x2327)
(declare-fun x3808 () Real)
(declare-fun x2017 () Bool)
(declare-fun x1115 () Real)
(declare-fun x4094 () Real)
(declare-fun x2382 () Real)
(declare-fun x176 () Bool)
(declare-fun x2418 () Real)
(declare-fun x4251 () Bool)
(declare-fun x2355 (Real) Real)
(declare-fun x2592 () Real)
(declare-fun x4544 () Bool)
(declare-fun x1678 () x2327)
(declare-fun x2757 () Bool)
(declare-fun x1192 (Real) Real)
(declare-fun x4915 () Real)
(declare-fun x4419 () Real)
(declare-fun x2099 () Real)
(declare-fun x2469 () Bool)
(declare-fun x1703 (x2327) Real)
(declare-fun x1398 () Real)
(declare-fun x694 () x2327)
(declare-fun x529 (x2327) Real)
(declare-fun x3665 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x3340 () x2327)
(declare-fun x3139 () Real)
(declare-fun x4322 () Real)
(declare-fun x2652 () Real)
(declare-fun x4814 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x1390 () Real)
(declare-fun x2043 () Bool)
(declare-fun x2689 () Real)
(declare-fun x582 () Bool)
(declare-fun x3610 () Bool)
(declare-fun x3852 () Real)
(declare-fun x3832 () Real)
(declare-fun x1303 () Real)
(declare-fun x3957 () Real)
(declare-fun x3546 () Real)
(declare-fun x4545 () Real)
(declare-fun x4220 () x2327)
(declare-fun x4366 () Real)
(declare-fun x2932 () Bool)
(declare-fun x3708 () Real)
(declare-fun x4236 () Real)
(declare-fun x970 () Real)
(declare-fun x1181 () Real)
(declare-fun x3716 () Real)
(declare-fun x559 () Real)
(declare-fun x2460 () Bool)
(declare-fun x4402 () Real)
(declare-fun x2724 () Real)
(declare-fun x1476 () Bool)
(declare-fun x2951 () Real)
(declare-fun x3180 () Real)
(declare-fun x4928 () Real)
(declare-fun x1240 () Real)
(declare-fun x2815 () Bool)
(declare-fun x2625 () Real)
(declare-fun x953 (Real) Real)
(declare-fun x3366 () Real)
(declare-fun x2058 () Real)
(declare-fun x1830 () Bool)
(declare-fun x3299 () Bool)
(declare-fun x3495 () x2327)
(declare-fun x3688 () Real)
(declare-fun x1731 () x2327)
(declare-fun x569 () Real)
(declare-fun x3516 () Bool)
(declare-fun x4515 () Bool)
(declare-fun x2767 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x1113 (Real) Real)
(declare-fun x4589 () Real)
(declare-fun x697 () Real)
(declare-fun x3457 () Real)
(declare-fun x3220 () Real)
(declare-fun x226 () Real)
(declare-fun x152 () Bool)
(declare-fun x1795 () Bool)
(declare-fun x2312 (Real) Real)
(declare-fun x4348 () Bool)
(declare-fun x3785 () Real)
(declare-fun x818 () Real)
(declare-fun x17 () Real)
(declare-fun x2570 () Real)
(declare-fun x563 () Real)
(declare-fun x3873 () Bool)
(declare-fun x1581 () Real)
(declare-fun x3759 () x2327)
(declare-fun x3513 () Real)
(declare-fun x3215 () Real)
(declare-fun x3153 () Real)
(declare-fun x2014 () Bool)
(declare-fun x4926 () Real)
(declare-fun x4753 () Bool)
(declare-fun x848 () Bool)
(declare-fun x2776 () Bool)
(declare-fun x1768 () Real)
(declare-fun x4484 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x4343 (Real) Real)
(declare-fun x4027 () Real)
(declare-fun x875 () Bool)
(declare-fun x2680 () Real)
(declare-fun x517 () Real)
(declare-fun x4488 () Real)
(declare-fun x2074 () Bool)
(declare-fun x4913 () Real)
(declare-fun x4259 () Bool)
(declare-fun x239 () Bool)
(declare-fun x3822 () x2327)
(declare-fun x4156 () Real)
(declare-fun x1014 () Bool)
(declare-fun x3958 () x2327)
(declare-fun x1829 () Real)
(declare-fun x108 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x3118 () Real)
(declare-fun x4072 () x2327)
(declare-fun x1384 () Real)
(declare-fun x4957 () Real)
(declare-fun x3510 () Bool)
(declare-fun x3797 () Real)
(declare-fun x54 () Real)
(declare-fun x443 () Bool)
(declare-fun x3450 () Bool)
(declare-fun x1494 () Real)
(declare-fun x3918 () Bool)
(declare-fun x843 () Real)
(declare-fun x126 () Real)
(declare-fun x1653 () Real)
(declare-fun x3079 () Bool)
(declare-fun x3345 () Real)
(declare-fun x4113 () Real)
(declare-fun x395 () Real)
(declare-fun x4986 () x2327)
(declare-fun x4428 () Real)
(declare-fun x605 () Bool)
(declare-fun x2046 (Real) Real)
(declare-fun x1679 (Real) Real)
(declare-fun x1551 () Real)
(declare-fun x4557 () Real)
(declare-fun x4734 () Bool)
(declare-fun x3519 (x2327) Real)
(declare-fun x3843 () Real)
(declare-fun x4793 () Real)
(declare-fun x3349 () Real)
(declare-fun x2134 () Bool)
(declare-fun x838 () Real)
(declare-fun x1165 () Real)
(declare-fun x3919 () Real)
(declare-fun x1963 () Bool)
(declare-fun x4560 () Real)
(declare-fun x4530 (x2327) Real)
(declare-fun x1704 () Real)
(declare-fun x3704 () Real)
(declare-fun x2936 () Real)
(declare-fun x3459 () Real)
(declare-fun x3370 () Real)
(declare-fun x259 () Bool)
(declare-fun x524 () Real)
(declare-fun x3254 () Bool)
(declare-fun x3150 () Bool)
(declare-fun x4176 () Real)
(declare-fun x1503 () Real)
(declare-fun x650 () Real)
(declare-fun x3013 () Bool)
(declare-fun x2441 () Real)
(declare-fun x1349 () Bool)
(declare-fun x873 () Real)
(declare-fun x4639 () Bool)
(declare-fun x2687 () Bool)
(declare-fun x724 () Bool)
(declare-fun x60 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x4580 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x2549 () x2327)
(declare-fun x3803 (Real) Real)
(declare-fun x741 () Real)
(declare-fun x2605 () Real)
(declare-fun x556 () Real)
(declare-fun x3354 () Bool)
(declare-fun x4528 () Bool)
(declare-fun x1805 () Real)
(declare-fun x1080 () Real)
(declare-fun x264 () Real)
(declare-fun x4772 () x2327)
(declare-fun x1881 () x2327)
(declare-fun x4212 () Real)
(declare-fun x1767 () Real)
(declare-fun x1037 () Real)
(declare-fun x1336 () Real)
(declare-fun x1342 () Real)
(declare-fun x4373 () x2327)
(declare-fun x1439 () Bool)
(declare-fun x4496 () Bool)
(declare-fun x4837 (x2327) Real)
(declare-fun x2824 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x1485 () Real)
(declare-fun x4842 () Bool)
(declare-fun x3196 () Real)
(declare-fun x3496 () Bool)
(declare-fun x4303 () Real)
(declare-fun x3315 () Bool)
(declare-fun x4351 () Bool)
(declare-fun x3027 () Real)
(declare-fun x1579 () Real)
(declare-fun x948 () Bool)
(declare-fun x4849 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x2513 () Real)
(declare-fun x1031 (x2327) Real)
(declare-fun x3672 () Real)
(declare-fun x205 () Real)
(declare-fun x3980 () Bool)
(declare-fun x2270 () Real)
(declare-fun x76 (x2327) Real)
(declare-fun x1149 () Real)
(declare-fun x4505 (x2327) Real)
(declare-fun x4325 () Bool)
(declare-fun x3383 () Real)
(declare-fun x4124 () Bool)
(declare-fun x1471 (x2327) Real)
(declare-fun x306 () Bool)
(declare-fun x1837 () x2327)
(declare-fun x3889 () Real)
(declare-fun x949 () x2327)
(declare-fun x2291 () Bool)
(declare-fun x439 () Real)
(declare-fun x4679 () x2327)
(declare-fun x1302 () Bool)
(declare-fun x2873 () Bool)
(declare-fun x423 () Bool)
(declare-fun x4702 () Real)
(declare-fun x742 () Real)
(declare-fun x3389 (x2327) Real)
(declare-fun x2693 () Bool)
(declare-fun x955 () Real)
(declare-fun x4841 () Real)
(declare-fun x4244 () Real)
(declare-fun x3545 () x2327)
(declare-fun x1233 (Real) Real)
(declare-fun x655 () Bool)
(declare-fun x229 () Real)
(declare-fun x308 () Bool)
(declare-fun x273 () Bool)
(declare-fun x799 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x4218 (Real) Real)
(declare-fun x274 () Bool)
(declare-fun x768 () Real)
(declare-fun x487 () x2327)
(declare-fun x936 () x2327)
(declare-fun x3483 () Bool)
(declare-fun x1696 () Real)
(declare-fun x3104 () Real)
(declare-fun x3356 () Bool)
(declare-fun x4907 () Bool)
(declare-fun x747 () Real)
(declare-fun x2102 () Bool)
(declare-fun x4355 () Bool)
(declare-fun x1425 () Real)
(declare-fun x2442 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x1939 (x2327) Real)
(declare-fun x2729 () Real)
(declare-fun x608 () Real)
(declare-fun x1105 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x4087 () Bool)
(declare-fun x4134 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x646 () Real)
(declare-fun x4794 () Real)
(declare-fun x1811 () Bool)
(declare-fun x4590 () Real)
(declare-fun x2249 () Real)
(declare-fun x1474 () Bool)
(declare-fun x2609 () Bool)
(declare-fun x312 () Bool)
(declare-fun x4839 () Bool)
(declare-fun x4138 () Bool)
(declare-fun x3413 () Real)
(declare-fun x1027 () Real)
(declare-fun x762 () Real)
(declare-fun x739 () Bool)
(declare-fun x2727 () Real)
(declare-fun x3243 () Real)
(declare-fun x3669 () x2327)
(declare-fun x1084 () Bool)
(declare-fun x4535 () Bool)
(declare-fun x2928 () Real)
(declare-fun x551 () x2327)
(declare-fun x2543 () Bool)
(declare-fun x3902 () Real)
(declare-fun x4403 () Real)
(declare-fun x3763 () x2327)
(declare-fun x106 () Bool)
(declare-fun x3659 () Bool)
(declare-fun x3191 () Real)
(declare-fun x1746 () x2327)
(declare-fun x3197 () Real)
(declare-fun x2376 () Bool)
(declare-fun x4060 () Real)
(declare-fun x1664 () Bool)
(declare-fun x2629 () Bool)
(declare-fun x3508 () Bool)
(declare-fun x4919 () Real)
(declare-fun x3015 () Bool)
(declare-fun x4331 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2944 () x2327)
(declare-fun x2356 () Real)
(declare-fun x149 () Real)
(declare-fun x348 () Real)
(declare-fun x4980 () Bool)
(declare-fun x2465 () Real)
(declare-fun x4258 () Real)
(declare-fun x2039 () Real)
(declare-fun x122 () Bool)
(declare-fun x2287 () Real)
(declare-fun x2265 () Real)
(declare-fun x1236 () Real)
(declare-fun x3987 () Bool)
(declare-fun x2181 () Real)
(declare-fun x3912 () Bool)
(declare-fun x598 (Real Real) Real)
(declare-fun x2748 () Real)
(declare-fun x2351 () Real)
(declare-fun x2532 () Real)
(declare-fun x4217 () Real)
(declare-fun x3116 () Bool)
(declare-fun x3134 () Real)
(declare-fun x3065 () Real)
(declare-fun x1318 () Real)
(declare-fun x989 () Bool)
(declare-fun x3845 () Real)
(declare-fun x4778 () Real)
(declare-fun x2753 () Real)
(declare-fun x4491 () Real)
(declare-fun x1686 () Real)
(declare-fun x904 () Real)
(declare-fun x3377 () Real)
(declare-fun x4349 (Real) Real)
(declare-fun x261 () x2327)
(declare-fun x636 () Real)
(declare-fun x50 () Bool)
(declare-fun x4784 (x2327) Real)
(declare-fun x763 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x1260 () Real)
(declare-fun x2281 () Real)
(declare-fun x1934 () x2327)
(declare-fun x1870 () Real)
(declare-fun x222 () Bool)
(declare-fun x4621 () Real)
(declare-fun x638 () Real)
(declare-fun x4962 () Bool)
(declare-fun x4409 () Real)
(declare-fun x3327 () Real)
(declare-fun x88 () Real)
(declare-fun x213 () Real)
(declare-fun x120 () Bool)
(declare-fun x3249 () Bool)
(declare-fun x751 (Real) Real)
(declare-fun x1548 () Real)
(declare-fun x3749 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x3786 () Bool)
(declare-fun x3532 () Bool)
(declare-fun x3078 () Real)
(declare-fun x617 () Bool)
(declare-fun x3794 () Real)
(declare-fun x2206 () Real)
(declare-fun x4128 () Bool)
(declare-fun x4821 () Real)
(declare-fun x3982 () Bool)
(declare-fun x4582 () Real)
(declare-fun x2811 () Real)
(declare-fun x4431 () Real)
(declare-fun x4601 () Real)
(declare-fun x4552 (x2327) Real)
(declare-fun x2797 () Bool)
(declare-fun x2813 () Real)
(declare-fun x278 () Real)
(declare-fun x629 () Bool)
(declare-fun x3251 () Bool)
(declare-fun x825 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x1968 () Real)
(declare-fun x2030 () Bool)
(declare-fun x4455 () Real)
(declare-fun x1616 () Real)
(declare-fun x3962 () Real)
(declare-fun x3681 () Bool)
(declare-fun x1965 (Real) Real)
(declare-fun x4194 () Bool)
(declare-fun x2449 () Real)
(declare-fun x3472 () Bool)
(declare-fun x1478 () Real)
(declare-fun x2708 () Bool)
(declare-fun x460 () Real)
(declare-fun x1308 () Bool)
(declare-fun x2657 (x2327) Real)
(declare-fun x3460 () Real)
(declare-fun x4914 () Real)
(declare-fun x2617 () Real)
(declare-fun x4949 () Real)
(declare-fun x4043 () Bool)
(declare-fun x1842 () Real)
(declare-fun x1710 () Real)
(declare-fun x3009 () Bool)
(declare-fun x3613 () Real)
(declare-fun x3260 () Real)
(declare-fun x4922 () Bool)
(declare-fun x4570 () Real)
(declare-fun x4684 () Bool)
(declare-fun x4993 () Bool)
(declare-fun x2259 (x2327) Real)
(declare-fun x4657 () Bool)
(declare-fun x91 () Real)
(declare-fun x4729 () Real)
(declare-fun x4529 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x3352 () Bool)
(declare-fun x3019 () Real)
(declare-fun x1417 () Bool)
(declare-fun x2282 () x2327)
(declare-fun x367 () Real)
(declare-fun x1335 () Real)
(declare-fun x2045 () Real)
(declare-fun x4576 () Bool)
(declare-fun x3992 () Real)
(declare-fun x470 () Real)
(declare-fun x4142 () Real)
(declare-fun x1299 () Real)
(declare-fun x4358 () x2327)
(declare-fun x1292 () Real)
(declare-fun x25 () Real)
(declare-fun x1226 () Real)
(declare-fun x2041 () Real)
(declare-fun x2083 () Real)
(declare-fun x70 () Bool)
(declare-fun x2953 () Real)
(declare-fun x4485 () Real)
(declare-fun x1490 () Real)
(declare-fun x3527 () Bool)
(declare-fun x1736 () Real)
(declare-fun x4082 () Real)
(declare-fun x893 () Bool)
(declare-fun x847 () Real)
(declare-fun x3218 () Bool)
(declare-fun x3231 () Real)
(declare-fun x3136 () Real)
(declare-fun x1159 () Real)
(declare-fun x4818 () Bool)
(declare-fun x2476 (x2327) Real)
(declare-fun x713 () Bool)
(declare-fun x1206 () Real)
(declare-fun x3657 () Real)
(declare-fun x1388 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x2003 () Real)
(declare-fun x298 () x2327)
(declare-fun x4652 () Real)
(declare-fun x1351 () x2327)
(declare-fun x3204 () Real)
(declare-fun x3812 () Bool)
(declare-fun x839 () Real)
(declare-fun x2983 () Real)
(declare-fun x2008 () Real)
(declare-fun x3641 () Real)
(declare-fun x2175 () Real)
(declare-fun x4287 () Bool)
(declare-fun x4865 () Bool)
(declare-fun x3686 () Bool)
(declare-fun x1655 () Real)
(declare-fun x4579 () Real)
(declare-fun x3505 () Real)
(declare-fun x4457 () Real)
(declare-fun x398 () Bool)
(declare-fun x3788 () Bool)
(declare-fun x2381 () Real)
(declare-fun x3698 (x2327) Real)
(declare-fun x4738 () Bool)
(declare-fun x235 () Real)
(declare-fun x2053 (Real) Real)
(declare-fun x4044 () Real)
(declare-fun x1512 (Real) Real)
(declare-fun x3425 () Bool)
(declare-fun x926 () Real)
(declare-fun x1848 (Real) Real)
(declare-fun x906 () Bool)
(declare-fun x4333 () Bool)
(declare-fun x3621 () Real)
(declare-fun x2450 () Real)
(declare-fun x902 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x288 () Real)
(declare-fun x1826 () Real)
(declare-fun x94 () Bool)
(declare-fun x2698 () Real)
(declare-fun x4799 (Real) Real)
(declare-fun x4344 () Real)
(declare-fun x3321 () Real)
(declare-fun x3761 () Bool)
(declare-fun x4224 () Real)
(declare-fun x4596 () Real)
(declare-fun x3535 (Real) Real)
(declare-fun x3523 () Real)
(declare-fun x1979 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x880 () Bool)
(declare-fun x2000 () Real)
(declare-fun x3285 () Bool)
(declare-fun x103 () Real)
(declare-fun x3339 () Real)
(declare-fun x2286 () Real)
(declare-fun x798 () Real)
(declare-fun x3595 () Real)
(declare-fun x3536 () Bool)
(declare-fun x4810 () Real)
(declare-fun x1196 () Bool)
(declare-fun x3579 () Real)
(declare-fun x2575 () Bool)
(declare-fun x3702 () Real)
(declare-fun x2189 () Bool)
(declare-fun x996 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1245 () Real)
(declare-fun x1024 () Bool)
(declare-fun x401 () Bool)
(declare-fun x2880 () Real)
(declare-fun x1033 () Real)
(declare-fun x3647 () Real)
(declare-fun x4119 () Real)
(declare-fun x2512 (x2327) Real)
(declare-fun x1406 () Real)
(declare-fun x211 () x2327)
(declare-fun x2081 () Bool)
(declare-fun x4526 () Bool)
(declare-fun x3056 () Bool)
(declare-fun x4953 () Real)
(declare-fun x2608 () Real)
(declare-fun x3741 () Bool)
(declare-fun x4819 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x138 () Bool)
(declare-fun x2994 () Real)
(declare-fun x1054 () Real)
(declare-fun x3125 () Bool)
(declare-fun x846 () Real)
(declare-fun x2515 () Bool)
(declare-fun x1609 () Real)
(declare-fun x1218 () Bool)
(declare-fun x3277 () Real)
(declare-fun x32 () Real)
(declare-fun x3745 () Bool)
(declare-fun x166 () Real)
(declare-fun x165 () Real)
(declare-fun x2796 () Real)
(declare-fun x2242 () Bool)
(declare-fun x3145 () Real)
(declare-fun x1603 () Real)
(declare-fun x4160 () Real)
(declare-fun x876 () Real)
(declare-fun x4897 () Bool)
(declare-fun x287 () Bool)
(declare-fun x833 () Real)
(declare-fun x671 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x3970 () Bool)
(declare-fun x2201 () Real)
(declare-fun x1330 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x2595 () Real)
(declare-fun x3491 () Real)
(declare-fun x3089 () Bool)
(declare-fun x3620 () Real)
(declare-fun x4952 (x2327) Real)
(declare-fun x4247 () Bool)
(declare-fun x4800 () Real)
(declare-fun x1649 () Bool)
(declare-fun x2446 () Real)
(declare-fun x1733 () x2327)
(declare-fun x2620 () Real)
(declare-fun x1311 () Bool)
(declare-fun x2528 (x2327) Real)
(declare-fun x4572 () Bool)
(declare-fun x707 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x3131 () Real)
(declare-fun x4047 () Real)
(declare-fun x1197 (Real) Real)
(declare-fun x2768 () Real)
(declare-fun x4245 () x2327)
(declare-fun x2219 () Real)
(declare-fun x2921 () Bool)
(declare-fun x4096 (Real) Real)
(declare-fun x4243 () Bool)
(declare-fun x1698 () Real)
(declare-fun x2707 () Bool)
(declare-fun x4338 () Real)
(declare-fun x3604 (x2327) Real)
(declare-fun x2899 () Real)
(declare-fun x1763 () Bool)
(declare-fun x4289 () Real)
(declare-fun x72 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x4486 () x2327)
(declare-fun x3713 () x2327)
(declare-fun x3856 () Real)
(declare-fun x725 () Bool)
(declare-fun x651 () Real)
(declare-fun x1068 () Real)
(declare-fun x4990 () Real)
(declare-fun x57 () Bool)
(declare-fun x2582 () Real)
(declare-fun x178 () Real)
(declare-fun x3102 () Bool)
(declare-fun x2145 () Real)
(declare-fun x3409 () x2327)
(declare-fun x765 () Bool)
(declare-fun x181 () Real)
(declare-fun x1010 () Bool)
(declare-fun x4489 () x2327)
(declare-fun x319 () x2327)
(declare-fun x1634 () Bool)
(declare-fun x797 () Real)
(declare-fun x980 () Real)
(declare-fun x1144 () Real)
(declare-fun x1492 () Real)
(declare-fun x4451 () Bool)
(declare-fun x2834 () Bool)
(declare-fun x4009 () Real)
(declare-fun x3810 () Real)
(declare-fun x4035 () Bool)
(declare-fun x4234 () Real)
(declare-fun x2713 () Bool)
(declare-fun x422 () Bool)
(declare-fun x1106 (Real) Real)
(declare-fun x4013 () Real)
(declare-fun x4864 () Real)
(declare-fun x660 () Bool)
(declare-fun x4826 () Bool)
(declare-fun x1636 () Real)
(declare-fun x258 () Bool)
(declare-fun x2793 (Real) Real)
(declare-fun x4180 () Real)
(declare-fun x4440 () Bool)
(declare-fun x3063 () Real)
(declare-fun x3187 () Bool)
(declare-fun x4360 () Real)
(declare-fun x2830 () Real)
(declare-fun x1722 () Bool)
(declare-fun x3054 () Bool)
(declare-fun x3774 () Real)
(declare-fun x4624 () Real)
(declare-fun x3729 () Bool)
(declare-fun x4836 () Real)
(declare-fun x4340 () Real)
(declare-fun x4975 () Bool)
(declare-fun x3883 () Real)
(declare-fun x2942 () Real)
(declare-fun x1327 () Real)
(declare-fun x1779 () Real)
(declare-fun x531 () Bool)
(declare-fun x1871 () Real)
(declare-fun x2823 () Bool)
(declare-fun x1063 () Real)
(declare-fun x1639 () Real)
(declare-fun x2255 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x2129 () Real)
(declare-fun x1983 (x2327) Real)
(declare-fun x545 () Real)
(declare-fun x3235 () Real)
(declare-fun x1195 () Real)
(declare-fun x4497 () Real)
(declare-fun x2849 () Real)
(declare-fun x2863 () Bool)
(declare-fun x2383 (Real) Real)
(declare-fun x2228 () Real)
(declare-fun x1307 () x2327)
(declare-fun x831 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x4835 () Real)
(declare-fun x969 () Real)
(declare-fun x1099 () Real)
(declare-fun x3473 () Real)
(declare-fun x3343 () Real)
(declare-fun x2341 () Real)
(declare-fun x2140 () Bool)
(declare-fun x4635 () Real)
(declare-fun x1772 () Bool)
(declare-fun x2990 () Bool)
(declare-fun x930 () Real)
(declare-fun x3311 () Real)
(declare-fun x3432 (x2327) Real)
(declare-fun x1132 () Bool)
(declare-fun x1021 () Real)
(declare-fun x248 () Real)
(declare-fun x4876 () Real)
(declare-fun x4921 () Real)
(declare-fun x354 (Real) Real)
(declare-fun x3012 () Real)
(declare-fun x1919 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x1521 () Real)
(declare-fun x2222 () Real)
(declare-fun x2061 () Bool)
(declare-fun x3680 (Real) Real)
(declare-fun x1085 () x2327)
(declare-fun x224 () Real)
(declare-fun x2314 () Real)
(declare-fun x2117 () Real)
(declare-fun x3382 (Real) Real)
(declare-fun x3463 () Bool)
(declare-fun x1645 () Real)
(declare-fun x1461 () Real)
(declare-fun x1923 () Real)
(declare-fun x1344 () Real)
(declare-fun x486 () Real)
(declare-fun x3426 () Bool)
(declare-fun x2744 () Real)
(declare-fun x1889 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x2368 () Real)
(declare-fun x3656 () Real)
(declare-fun x2392 () x2327)
(declare-fun x3259 () Bool)
(declare-fun x4056 () Real)
(declare-fun x2051 () Bool)
(declare-fun x4603 () Bool)
(declare-fun x3758 () Real)
(declare-fun x3124 () Bool)
(declare-fun x2533 () Real)
(declare-fun x2769 () Real)
(declare-fun x892 () Real)
(declare-fun x2700 () x2327)
(declare-fun x4135 () Bool)
(declare-fun x277 () Bool)
(declare-fun x654 () Bool)
(declare-fun x250 () Real)
(declare-fun x3211 () Real)
(declare-fun x3439 () Bool)
(declare-fun x3127 () Real)
(declare-fun x512 () Real)
(declare-fun x3926 () Real)
(declare-fun x441 () Real)
(declare-fun x1141 () Bool)
(declare-fun x3269 () Bool)
(declare-fun x1361 () x2327)
(declare-fun x3016 () Real)
(declare-fun x2311 () Real)
(declare-fun x3978 () Bool)
(declare-fun x4574 () Real)
(declare-fun x449 () x2327)
(declare-fun x4184 () Real)
(declare-fun x4523 () Real)
(declare-fun x4935 () Bool)
(declare-fun x566 () Bool)
(declare-fun x3906 () Real)
(declare-fun x3443 () Real)
(declare-fun x1629 () Bool)
(declare-fun x3767 () Bool)
(declare-fun x4547 () Real)
(declare-fun x2912 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x479 () Real)
(declare-fun x1049 () Bool)
(declare-fun x2933 () Bool)
(declare-fun x4378 () Real)
(declare-fun x3446 (x2327) Real)
(declare-fun x4739 () Real)
(declare-fun x1227 (x2327) Real)
(declare-fun x4479 () Real)
(declare-fun x3863 (Real) Real)
(declare-fun x1661 () Bool)
(declare-fun x4417 () Real)
(declare-fun x3208 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x3193 () Real)
(declare-fun x4742 () Real)
(declare-fun x67 () x2327)
(declare-fun x998 () Real)
(declare-fun x791 () Bool)
(declare-fun x2665 () Bool)
(declare-fun x3611 () Real)
(declare-fun x267 () Real)
(declare-fun x3414 () Bool)
(declare-fun x117 () Real)
(declare-fun x2403 () Bool)
(declare-fun x1887 () Real)
(declare-fun x3711 () Real)
(declare-fun x4692 () Real)
(declare-fun x2276 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x2639 () x2327)
(declare-fun x3710 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x491 () x2327)
(declare-fun x1430 () Real)
(declare-fun x508 () Real)
(declare-fun x223 () x2327)
(declare-fun x513 () Bool)
(declare-fun x3529 () Real)
(declare-fun x2437 () Real)
(declare-fun x910 () Real)
(declare-fun x3038 () Real)
(declare-fun x1877 () Bool)
(declare-fun x3924 () Real)
(declare-fun x3861 () Real)
(declare-fun x3408 () Bool)
(declare-fun x3011 () Bool)
(declare-fun x2307 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x3462 () Real)
(declare-fun x1358 () Bool)
(declare-fun x373 () Bool)
(declare-fun x4404 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x932 () Bool)
(declare-fun x268 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x1894 (Real) x2327)
(declare-fun x3119 () Real)
(declare-fun x4164 () Real)
(declare-fun x478 () Real)
(declare-fun x731 () Bool)
(declare-fun x2530 () Real)
(declare-fun x3662 () Real)
(declare-fun x2750 () Bool)
(declare-fun x2389 () Real)
(declare-fun x244 () Real)
(declare-fun x1202 () Real)
(declare-fun x3160 () Bool)
(declare-fun x1908 (x2327) Real)
(declare-fun x61 () Real)
(declare-fun x2854 () Bool)
(declare-fun x3097 () Bool)
(declare-fun x3059 () Real)
(declare-fun x4384 () x2327)
(declare-fun x1043 () Bool)
(declare-fun x127 () x2327)
(declare-fun x2935 () Real)
(declare-fun x1688 () Real)
(declare-fun x4689 () Real)
(declare-fun x195 () Real)
(declare-fun x931 () Bool)
(declare-fun x4815 () Real)
(declare-fun x1078 () Bool)
(declare-fun x1803 () Real)
(declare-fun x2614 () Real)
(declare-fun x3 () Real)
(declare-fun x4161 () Real)
(declare-fun x3799 () x2327)
(declare-fun x664 (Real) Real)
(declare-fun x1707 () Real)
(declare-fun x2910 () Real)
(declare-fun x2470 () Real)
(declare-fun x1694 () Bool)
(declare-fun x263 () x2327)
(declare-fun x1876 () Real)
(declare-fun x3955 () Bool)
(declare-fun x2564 (Real) Real)
(declare-fun x2082 () Bool)
(declare-fun x340 () Real)
(declare-fun x459 () Bool)
(declare-fun x3896 () Real)
(declare-fun x3996 () Bool)
(declare-fun x148 () Bool)
(declare-fun x919 () Real)
(declare-fun x2651 () Bool)
(declare-fun x133 () Real)
(declare-fun x4397 () Bool)
(declare-fun x2792 () Real)
(declare-fun x430 () Real)
(declare-fun x2115 () Real)
(declare-fun x2895 () Bool)
(declare-fun x1074 () x2327)
(declare-fun x3378 () Real)
(declare-fun x2690 () x2327)
(declare-fun x2552 () Bool)
(declare-fun x4994 () Real)
(declare-fun x1956 () Real)
(declare-fun x4443 () Real)
(declare-fun x2444 () Bool)
(declare-fun x2239 () Real)
(declare-fun x3941 () Bool)
(declare-fun x1526 () x2327)
(declare-fun x4003 (Real) Real)
(declare-fun x3077 () Real)
(declare-fun x2333 () Real)
(declare-fun x4735 () Real)
(declare-fun x1435 () Bool)
(declare-fun x2634 () Real)
(declare-fun x433 () Bool)
(declare-fun x2148 () Real)
(declare-fun x442 () Bool)
(declare-fun x1720 (x2327) Real)
(declare-fun x1071 () Bool)
(declare-fun x4536 () Real)
(declare-fun x900 () Real)
(declare-fun x2334 () Bool)
(declare-fun x2711 () Real)
(declare-fun x1501 () Real)
(declare-fun x2833 () Real)
(declare-fun x4202 () Real)
(declare-fun x3242 () Real)
(declare-fun x1321 () Real)
(declare-fun x4760 () Real)
(declare-fun x3544 () Bool)
(declare-fun x467 () Bool)
(declare-fun x2981 (Real) Real)
(declare-fun x3313 () Real)
(declare-fun x2329 () Real)
(declare-fun x170 () Bool)
(declare-fun x2531 () Real)
(declare-fun x1524 () Bool)
(declare-fun x4413 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x2618 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x462 () Real)
(declare-fun x3975 () Real)
(declare-fun x3353 () Real)
(declare-fun x4522 () Bool)
(declare-fun x63 () Bool)
(declare-fun x304 () Real)
(declare-fun x3074 () Real)
(declare-fun x4736 () Bool)
(declare-fun x1753 () Real)
(declare-fun x125 () Bool)
(declare-fun x1209 () x2327)
(declare-fun x2489 () Bool)
(declare-fun x35 () Real)
(declare-fun x2645 () Bool)
(declare-fun x266 () Real)
(declare-fun x2388 () Bool)
(declare-fun x640 (x2327) Real)
(declare-fun x2554 () Bool)
(declare-fun x4274 () Bool)
(declare-fun x4607 () x2327)
(declare-fun x770 () Real)
(declare-fun x4520 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x4141 () x2327)
(declare-fun x4053 () Bool)
(declare-fun x4387 () Bool)
(declare-fun x3805 () Real)
(declare-fun x2119 () Bool)
(declare-fun x4468 () Real)
(declare-fun x3520 (x2327) Real)
(declare-fun x504 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x594 () Real)
(declare-fun x2048 () Bool)
(declare-fun x2898 () Real)
(declare-fun x1856 () Bool)
(declare-fun x1287 () Real)
(declare-fun x1052 () Bool)
(declare-fun x2653 () Real)
(declare-fun x3456 () Real)
(declare-fun x1930 () Real)
(declare-fun x4006 () Real)
(declare-fun x3757 () Bool)
(declare-fun x3114 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x4796 () Real)
(declare-fun x2684 () Real)
(declare-fun x3731 () Bool)
(declare-fun x829 () Real)
(declare-fun x706 () x2327)
(declare-fun x4626 (Real) Real)
(declare-fun x4764 () Real)
(declare-fun x1454 () Real)
(declare-fun x159 () x2327)
(declare-fun x1556 () Bool)
(declare-fun x2606 () Bool)
(declare-fun x4666 () Bool)
(declare-fun x554 () Bool)
(declare-fun x4682 () Bool)
(declare-fun x2391 () Real)
(declare-fun x3561 () Real)
(declare-fun x1917 () Real)
(declare-fun x4777 () Real)
(declare-fun x4068 () x2327)
(declare-fun x4562 () Real)
(declare-fun x637 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x4951 () Real)
(declare-fun x2071 () x2327)
(declare-fun x3021 () Real)
(declare-fun x1675 () Real)
(declare-fun x4033 () Real)
(declare-fun x730 (Real) Real)
(declare-fun x4725 () Real)
(declare-fun x4709 () Real)
(declare-fun x1393 () Bool)
(declare-fun x4976 () Real)
(declare-fun x2978 (Real) Real)
(declare-fun x4276 () Bool)
(declare-fun x4693 () Real)
(declare-fun x700 () Real)
(declare-fun x3440 () Real)
(declare-fun x3347 () Real)
(declare-fun x1179 () Real)
(declare-fun x1980 () Bool)
(declare-fun x3023 () Real)
(declare-fun x3312 (Real) Real)
(declare-fun x1796 () x2327)
(declare-fun x2296 () Bool)
(declare-fun x4191 () Real)
(declare-fun x963 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x4430 () Real)
(declare-fun x4631 () Bool)
(declare-fun x1918 () Real)
(declare-fun x830 () Real)
(declare-fun x4066 () Real)
(declare-fun x2741 () Bool)
(declare-fun x4321 () Real)
(declare-fun x448 () Bool)
(declare-fun x4261 () Real)
(declare-fun x2906 () Bool)
(declare-fun x2396 () Real)
(declare-fun x3111 () Real)
(declare-fun x1593 () Real)
(declare-fun x3569 (Real) Real)
(declare-fun x74 () Real)
(declare-fun x2718 () Bool)
(declare-fun x3159 () Bool)
(declare-fun x1267 (x2327) Real)
(declare-fun x2840 () Real)
(declare-fun x2124 () Bool)
(declare-fun x1673 () Real)
(declare-fun x97 () Real)
(declare-fun x2631 () Real)
(declare-fun x772 () Bool)
(declare-fun x3968 () x2327)
(declare-fun x4771 () x2327)
(declare-fun x1740 () Real)
(declare-fun x194 () Real)
(declare-fun x2481 () Bool)
(declare-fun x789 () Bool)
(declare-fun x612 () Real)
(declare-fun x3184 () Real)
(declare-fun x4055 () Real)
(declare-fun x232 () Real)
(declare-fun x4295 () Bool)
(declare-fun x1480 (x2327) Real)
(declare-fun x4860 () Bool)
(declare-fun x885 () Real)
(declare-fun x3631 () Real)
(declare-fun x4912 () Real)
(declare-fun x3358 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x769 () Real)
(declare-fun x3740 () Bool)
(declare-fun x3534 (Real) Real)
(declare-fun x4492 () Bool)
(declare-fun x1337 () Real)
(declare-fun x3706 () Real)
(declare-fun x4291 () Real)
(declare-fun x2436 () Bool)
(declare-fun x2158 () Real)
(declare-fun x3999 () Real)
(declare-fun x2153 (x2327) Real)
(declare-fun x509 () Bool)
(declare-fun x2012 () Real)
(declare-fun x4828 (x2327) Real)
(declare-fun x4746 () x2327)
(declare-fun x317 () Real)
(declare-fun x8 () Bool)
(declare-fun x3099 () Real)
(declare-fun x2911 () Bool)
(declare-fun x2453 () Bool)
(declare-fun x4171 () Real)
(declare-fun x625 () Real)
(declare-fun x4379 () Real)
(declare-fun x1120 () x2327)
(declare-fun x2257 () Real)
(declare-fun x4960 () Real)
(declare-fun x3300 () Real)
(declare-fun x2371 () Real)
(declare-fun x3963 () Real)
(declare-fun x4432 () Bool)
(declare-fun x2638 () x2327)
(declare-fun x1098 () Bool)
(declare-fun x2271 () Bool)
(declare-fun x490 () Bool)
(declare-fun x2672 (Real) Real)
(declare-fun x4670 () Real)
(declare-fun x869 () Real)
(declare-fun x4781 () Bool)
(declare-fun x3622 (x2327) Real)
(declare-fun x761 (x2327) Real)
(declare-fun x495 () Bool)
(declare-fun x2579 () Real)
(declare-fun x4642 () Real)
(declare-fun x371 () Bool)
(declare-fun x385 () Real)
(declare-fun x2335 () Bool)
(declare-fun x4294 () x2327)
(declare-fun x3645 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x3030 () Real)
(declare-fun x1955 () Bool)
(declare-fun x315 () Real)
(declare-fun x114 () Bool)
(declare-fun x1053 () Real)
(declare-fun x4896 () Real)
(declare-fun x3949 () Bool)
(declare-fun x3821 () Bool)
(declare-fun x4007 () Real)
(declare-fun x804 () Real)
(declare-fun x3887 () Real)
(declare-fun x3156 () Real)
(declare-fun x3479 () Real)
(declare-fun x1341 () Real)
(declare-fun x3904 () Bool)
(declare-fun x2523 (x2327) Real)
(declare-fun x3317 () Real)
(declare-fun x1601 () Real)
(declare-fun x1440 () Real)
(declare-fun x2297 () x2327)
(declare-fun x3170 () Real)
(declare-fun x2495 () Real)
(declare-fun x1989 () Bool)
(declare-fun x130 (x2327) Real)
(declare-fun x3045 () Real)
(declare-fun x3817 () Real)
(declare-fun x3474 () Real)
(declare-fun x1193 () Real)
(declare-fun x399 () Bool)
(declare-fun x3556 () Real)
(declare-fun x2325 () Bool)
(declare-fun x701 () Real)
(declare-fun x3182 () Real)
(declare-fun x1950 () Real)
(declare-fun x968 () Real)
(declare-fun x2040 () Real)
(declare-fun x984 () Real)
(declare-fun x1199 (x2327) Real)
(declare-fun x3226 () Real)
(declare-fun x1734 () Real)
(declare-fun x1633 (x2327) Real)
(declare-fun x10 () Real)
(declare-fun x4788 (Real) Real)
(declare-fun x3820 () Real)
(declare-fun x2958 () Bool)
(declare-fun x1545 () Real)
(declare-fun x4699 () Real)
(declare-fun x951 () Bool)
(declare-fun x4947 () Real)
(declare-fun x3500 () Real)
(declare-fun x352 () Real)
(declare-fun x2576 (x2327) Real)
(declare-fun x4140 () Bool)
(declare-fun x4567 () Real)
(declare-fun x868 (Real) Real)
(declare-fun x285 () Real)
(declare-fun x1429 () Real)
(declare-fun x3239 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x3928 () Real)
(declare-fun x2370 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x144 () Real)
(declare-fun x286 () Real)
(declare-fun x3405 () Real)
(declare-fun x1635 () Real)
(declare-fun x4856 () Real)
(declare-fun x2525 () Real)
(declare-fun x2746 () x2327)
(declare-fun x2200 () Bool)
(declare-fun x1489 () Real)
(declare-fun x872 () Real)
(declare-fun x26 () Bool)
(declare-fun x465 () Real)
(declare-fun x2719 () Bool)
(declare-fun x2670 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x3088 () Bool)
(declare-fun x1582 (x2327) Real)
(declare-fun x2647 () Real)
(declare-fun x1125 () Real)
(declare-fun x4955 () Real)
(declare-fun x2268 () Real)
(declare-fun x3154 (Real) Real)
(declare-fun x4238 () Bool)
(declare-fun x2786 () Real)
(declare-fun x179 () Bool)
(declare-fun x3014 () Bool)
(declare-fun x1514 () Real)
(declare-fun x2252 () Real)
(declare-fun x4310 () Real)
(declare-fun x4942 () Real)
(declare-fun x272 () Real)
(declare-fun x290 () Bool)
(declare-fun x1726 () Real)
(declare-fun x4716 () Real)
(declare-fun x2882 () Real)
(declare-fun x570 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x4073 () Real)
(declare-fun x4434 () Real)
(declare-fun x717 () Real)
(declare-fun x4233 () Bool)
(declare-fun x2131 () Real)
(declare-fun x1890 () Real)
(declare-fun x3183 () Bool)
(declare-fun x1802 (Real) Real)
(declare-fun x4671 () Bool)
(declare-fun x3190 () Real)
(declare-fun x1462 () Real)
(declare-fun x4052 () Bool)
(declare-fun x782 () Bool)
(declare-fun x699 () Bool)
(declare-fun x3700 () Bool)
(declare-fun x3355 () Real)
(declare-fun x2939 () x2327)
(declare-fun x1754 () Real)
(declare-fun x4231 (Real) Real)
(declare-fun x924 () Real)
(declare-fun x3608 () Real)
(declare-fun x2084 () Real)
(declare-fun x4609 () Real)
(declare-fun x1143 () Real)
(declare-fun x2421 () Real)
(declare-fun x360 () Bool)
(declare-fun x3964 () Real)
(declare-fun x39 () Real)
(declare-fun x4307 () Real)
(declare-fun x1766 () Real)
(declare-fun x432 () Bool)
(declare-fun x573 () Real)
(declare-fun x2477 (Real) Real)
(declare-fun x2095 () Bool)
(declare-fun x2076 (Real) Real)
(declare-fun x2982 () Real)
(declare-fun x2915 () Bool)
(declare-fun x4352 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x123 (x2327) Real)
(declare-fun x3624 () Bool)
(declare-fun x3826 () Real)
(declare-fun x2630 () Real)
(declare-fun x4275 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x1353 () Real)
(declare-fun x3566 (x2327) Real)
(declare-fun x2359 () Real)
(declare-fun x4605 () Real)
(declare-fun x3051 () x2327)
(declare-fun x3601 () Real)
(declare-fun x2621 () Real)
(declare-fun x216 () x2327)
(declare-fun x497 () Bool)
(declare-fun x1499 (Real) Real)
(declare-fun x4445 () Real)
(declare-fun x241 () Bool)
(declare-fun x1152 () Real)
(declare-fun x2861 (Real) Real)
(declare-fun x1171 () Real)
(declare-fun x4420 () Real)
(declare-fun x1958 () Bool)
(declare-fun x1275 () Real)
(declare-fun x3478 () Bool)
(declare-fun x585 () Real)
(declare-fun x2597 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x1083 (x2327) Real)
(declare-fun x3372 () Bool)
(declare-fun x4327 () Bool)
(declare-fun x938 () Bool)
(declare-fun x3485 () Real)
(declare-fun x680 () Real)
(declare-fun x1558 () Real)
(declare-fun x3275 () Real)
(declare-fun x4724 () Bool)
(declare-fun x579 () Real)
(declare-fun x1666 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x4566 () Real)
(declare-fun x3779 () Real)
(declare-fun x4887 () Bool)
(declare-fun x453 () Bool)
(declare-fun x3415 () Real)
(declare-fun x4668 () Bool)
(declare-fun x4305 (Real) Real)
(declare-fun x2187 () Bool)
(declare-fun x954 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x3998 () Bool)
(declare-fun x2023 () Real)
(declare-fun x2052 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x4018 () Bool)
(declare-fun x2703 () Real)
(declare-fun x87 () x2327)
(declare-fun x1728 () Bool)
(declare-fun x3309 () Real)
(declare-fun x1612 () Real)
(declare-fun x1304 () Real)
(declare-fun x935 () Bool)
(declare-fun x2157 () Real)
(declare-fun x2374 () Real)
(declare-fun x3530 () Real)
(declare-fun x2966 () Real)
(declare-fun x4789 () Real)
(declare-fun x1700 () Bool)
(declare-fun x601 () Bool)
(declare-fun x275 () Real)
(declare-fun x2734 () Bool)
(declare-fun x4834 () Real)
(declare-fun x3858 () Real)
(declare-fun x3851 () Bool)
(declare-fun x3433 () Real)
(declare-fun x501 () Bool)
(declare-fun x746 () Bool)
(declare-fun x1744 () x2327)
(declare-fun x3560 () Bool)
(declare-fun x1282 () x2327)
(declare-fun x2723 () Bool)
(declare-fun x3103 () Real)
(declare-fun x867 () Real)
(declare-fun x3580 (x2327) Real)
(declare-fun x3956 () Real)
(declare-fun x1738 () Real)
(declare-fun x2945 () Bool)
(declare-fun x790 () x2327)
(declare-fun x1646 () Bool)
(declare-fun x1220 () Real)
(declare-fun x3167 () Bool)
(declare-fun x2883 () x2327)
(declare-fun x4780 () Real)
(declare-fun x4614 () Bool)
(declare-fun x4804 () Real)
(declare-fun x708 () Bool)
(declare-fun x2997 () Real)
(declare-fun x2992 () Bool)
(declare-fun x2431 () x2327)
(declare-fun x3480 () Real)
(declare-fun x1737 () Bool)
(declare-fun x3246 () Real)
(declare-fun x4681 () Real)
(declare-fun x667 () Bool)
(declare-fun x2238 () Real)
(declare-fun x2204 () Real)
(declare-fun x1365 () Real)
(declare-fun x3969 () Bool)
(declare-fun x4026 () Bool)
(declare-fun x835 () Real)
(declare-fun x2135 () Real)
(declare-fun x2208 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x4109 () Bool)
(declare-fun x3931 () Bool)
(declare-fun x3176 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x575 () Real)
(declare-fun x299 () Real)
(declare-fun x1996 () Bool)
(declare-fun x2390 () Real)
(declare-fun x3461 () Real)
(declare-fun x4222 () Bool)
(declare-fun x4371 () Bool)
(declare-fun x33 () Real)
(declare-fun x71 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x1660 () Real)
(declare-fun x2585 () Bool)
(declare-fun x2173 () Real)
(declare-fun x4490 () Real)
(declare-fun x4207 () x2327)
(declare-fun x4945 () Bool)
(declare-fun x496 () Bool)
(declare-fun x4012 () Real)
(declare-fun x4643 () Bool)
(declare-fun x2116 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x1374 () Real)
(declare-fun x2419 () Real)
(declare-fun x4578 () Real)
(declare-fun x2654 () Bool)
(declare-fun x1170 () Real)
(declare-fun x3916 () Bool)
(declare-fun x2336 () Bool)
(declare-fun x3140 () Bool)
(declare-fun x4556 () Bool)
(declare-fun x2246 () Real)
(declare-fun x588 () Bool)
(declare-fun x93 () Bool)
(declare-fun x2798 (Real) Real)
(declare-fun x4362 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x3974 () Bool)
(declare-fun x463 () Real)
(declare-fun x4284 () Real)
(declare-fun x2254 () Real)
(declare-fun x1893 () Real)
(declare-fun x164 () Real)
(declare-fun x2411 () Real)
(declare-fun x313 () Real)
(declare-fun x2775 () Real)
(declare-fun x4933 () Bool)
(declare-fun x673 () Real)
(declare-fun x1368 () Real)
(declare-fun x2794 () Real)
(declare-fun x3335 () Bool)
(declare-fun x21 () Bool)
(declare-fun x4948 () Bool)
(declare-fun x2736 () Bool)
(declare-fun x1798 (x2327) Real)
(declare-fun x4608 () Real)
(declare-fun x4991 () Bool)
(declare-fun x3911 () Real)
(declare-fun x2610 () Bool)
(declare-fun x1217 () Real)
(declare-fun x2047 () Real)
(declare-fun x4840 () Bool)
(declare-fun x59 () Bool)
(declare-fun x3151 () Real)
(declare-fun x1971 () x2327)
(declare-fun x1888 () Bool)
(declare-fun x2159 () Bool)
(declare-fun x4824 () Real)
(declare-fun x2686 () Bool)
(declare-fun x3123 () Bool)
(declare-fun x3173 () Bool)
(declare-fun x4973 () Real)
(declare-fun x758 () Bool)
(declare-fun x4538 () Real)
(declare-fun x4436 () Real)
(declare-fun x574 () Bool)
(declare-fun x866 () Real)
(declare-fun x1860 () Bool)
(declare-fun x2093 (x2327) Real)
(declare-fun x641 () Bool)
(declare-fun x279 () Bool)
(declare-fun x3573 () Real)
(declare-fun x3635 () Real)
(declare-fun x3815 (x2327) Real)
(declare-fun x2836 () Real)
(declare-fun x3773 () Real)
(declare-fun x406 () Real)
(declare-fun x2218 () x2327)
(declare-fun x3954 () Bool)
(declare-fun x260 () Real)
(declare-fun x685 (Real) Real)
(declare-fun x1565 () Bool)
(declare-fun x3506 () Real)
(declare-fun x1712 () Real)
(declare-fun x1455 () Real)
(declare-fun x3722 () Real)
(declare-fun x2789 () Real)
(declare-fun x1247 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x1296 () Real)
(declare-fun x4042 () Bool)
(declare-fun x3142 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x2451 (Real) Real)
(declare-fun x3422 () Bool)
(declare-fun x3209 () Real)
(declare-fun x1026 () Real)
(declare-fun x1667 () Real)
(declare-fun x3148 () Bool)
(declare-fun x6 () Real)
(declare-fun x2056 () Bool)
(declare-fun x975 (Real) Real)
(declare-fun x3043 () Bool)
(declare-fun x947 () Real)
(declare-fun x2562 () Real)
(declare-fun x3020 () Real)
(declare-fun x1177 () Real)
(declare-fun x1421 () Real)
(declare-fun x301 () Bool)
(declare-fun x2448 () Real)
(declare-fun x3296 () Bool)
(declare-fun x2526 () Real)
(declare-fun x2407 () Real)
(declare-fun x419 () Bool)
(declare-fun x3932 () Real)
(declare-fun x4054 (Real) Real)
(declare-fun x1706 () Bool)
(declare-fun x1913 () Real)
(declare-fun x4350 () Real)
(declare-fun x3346 () Bool)
(declare-fun x2429 () Real)
(declare-fun x2818 () Real)
(declare-fun x2497 () Real)
(declare-fun x4424 () Bool)
(declare-fun x2211 () Bool)
(declare-fun x124 () Bool)
(declare-fun x915 () Real)
(declare-fun x976 () Bool)
(declare-fun x4306 (x2327) Real)
(declare-fun x1399 () Real)
(declare-fun x4747 (Real) Real)
(declare-fun x2303 () Real)
(declare-fun x663 () Real)
(declare-fun x861 () Real)
(declare-fun x2279 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x242 () Bool)
(declare-fun x4356 () Real)
(declare-fun x1794 (Real) Real)
(declare-fun x4634 () Real)
(declare-fun x1697 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x3648 () Real)
(declare-fun x2180 () Bool)
(declare-fun x4891 () Bool)
(declare-fun x3301 (Real) Real)
(declare-fun x475 () Real)
(declare-fun x2679 () Bool)
(declare-fun x2563 () x2327)
(declare-fun x4474 (Real) Real)
(declare-fun x4394 () Real)
(declare-fun x2514 () Bool)
(declare-fun x1091 () Real)
(declare-fun x2822 () Real)
(declare-fun x3373 () Real)
(declare-fun x1515 () Bool)
(declare-fun x2926 () Real)
(declare-fun x1075 () Bool)
(declare-fun x27 () Real)
(declare-fun x1156 () Real)
(declare-fun x4108 () Real)
(declare-fun x813 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x4216 () Bool)
(declare-fun x2587 () Real)
(declare-fun x4506 (x2327) Real)
(declare-fun x2572 () Real)
(declare-fun x2300 () Real)
(declare-fun x1081 () Real)
(declare-fun x709 (x2327) Real)
(declare-fun x4981 () Real)
(declare-fun x810 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x4877 () Real)
(declare-fun x3398 () Bool)
(declare-fun x191 () Bool)
(declare-fun x738 () Real)
(declare-fun x405 () Bool)
(declare-fun x2209 () Real)
(declare-fun x310 () Real)
(declare-fun x284 () Bool)
(declare-fun x3986 () Bool)
(declare-fun x4756 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x65 (Real) Real)
(declare-fun x1294 () Bool)
(declare-fun x4146 () Bool)
(declare-fun x1473 () Real)
(declare-fun x1652 () Real)
(declare-fun x828 (Real) Real)
(declare-fun x3467 () Bool)
(declare-fun x3627 () Real)
(declare-fun x1606 () Bool)
(declare-fun x4895 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x2733 () Real)
(declare-fun x2772 () Real)
(declare-fun x2261 () Real)
(declare-fun x4959 () Real)
(declare-fun x2350 () Bool)
(declare-fun x4832 () x2327)
(declare-fun x4159 () Bool)
(declare-fun x4219 () Bool)
(declare-fun x1778 () Real)
(declare-fun x4884 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x3859 () Real)
(declare-fun x2038 () Real)
(declare-fun x1369 () Real)
(declare-fun x3625 () Real)
(declare-fun x2758 () Real)
(declare-fun x3447 () Bool)
(declare-fun x3959 () Real)
(declare-fun x3128 () Real)
(declare-fun x118 () Real)
(declare-fun x1215 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x1799 () Real)
(declare-fun x2974 () Bool)
(declare-fun x2176 () Real)
(declare-fun x686 () Real)
(declare-fun x1938 () Real)
(declare-fun x1523 () Bool)
(declare-fun x3537 () Bool)
(declare-fun x2426 () Bool)
(declare-fun x4199 () x2327)
(declare-fun x4740 (Real) Real)
(declare-fun x2454 () Real)
(declare-fun x1790 () Bool)
(declare-fun x3464 () Real)
(declare-fun x2837 () Real)
(declare-fun x447 () x2327)
(declare-fun x1921 () Real)
(declare-fun x372 () Real)
(declare-fun x1475 () Real)
(declare-fun x520 (x2327) Real)
(declare-fun x4565 () Bool)
(declare-fun x592 () Bool)
(declare-fun x985 () Real)
(declare-fun x3288 (Real) Real)
(declare-fun x1133 () Bool)
(declare-fun x4857 () Real)
(declare-fun x2367 () Real)
(declare-fun x4512 () Real)
(declare-fun x3615 () Bool)
(declare-fun x2784 () Real)
(declare-fun x2086 () Real)
(declare-fun x1941 () Real)
(declare-fun x3360 () x2327)
(declare-fun x729 () Bool)
(declare-fun x2273 () Bool)
(declare-fun x4965 () Real)
(declare-fun x3420 () x2327)
(declare-fun x1134 () Bool)
(declare-fun x86 () Real)
(declare-fun x3922 () Bool)
(declare-fun x4100 () Real)
(declare-fun x146 () Real)
(declare-fun x4173 () Real)
(declare-fun x3250 () Bool)
(declare-fun x682 () Real)
(declare-fun x557 () Bool)
(declare-fun x3590 () Real)
(declare-fun x4903 () Real)
(declare-fun x3376 () x2327)
(declare-fun x1723 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x837 () x2327)
(declare-fun x3143 () Real)
(declare-fun x4037 () Real)
(declare-fun x1346 () x2327)
(declare-fun x2596 () Real)
(declare-fun x4816 () Bool)
(declare-fun x4600 () Bool)
(declare-fun x845 () Real)
(declare-fun x265 () Real)
(declare-fun x4604 (Real) Real)
(declare-fun x466 () Bool)
(declare-fun x2591 () Real)
(declare-fun x1338 () Real)
(declare-fun x1295 () Bool)
(declare-fun x318 () x2327)
(declare-fun x2720 () Real)
(declare-fun x1576 () Real)
(declare-fun x2035 () Real)
(declare-fun x2656 () Bool)
(declare-fun x4851 () Real)
(declare-fun x1441 () Real)
(declare-fun x2298 () Real)
(declare-fun x3913 () Real)
(declare-fun x3623 () Real)
(declare-fun x2975 () Real)
(declare-fun x101 () Real)
(declare-fun x606 () Bool)
(declare-fun x4342 (x2327) Real)
(declare-fun x3769 () Real)
(declare-fun x4016 () Bool)
(declare-fun x3695 () Real)
(declare-fun x684 () Bool)
(declare-fun x4021 () Real)
(declare-fun x4372 () Real)
(declare-fun x1422 () Bool)
(declare-fun x68 () Real)
(declare-fun x4940 () Real)
(declare-fun x957 () Real)
(declare-fun x3581 () Real)
(declare-fun x2722 () Bool)
(declare-fun x4939 () Real)
(declare-fun x4847 () Bool)
(declare-fun x4313 () Real)
(declare-fun x4144 () Real)
(declare-fun x2896 () Real)
(declare-fun x3909 () Bool)
(declare-fun x3435 () Real)
(declare-fun x4762 () Bool)
(declare-fun x4936 () Bool)
(declare-fun x300 () Real)
(declare-fun x1309 (x2327) Real)
(declare-fun x3663 () Real)
(declare-fun x2675 () Real)
(declare-fun x3476 (Real) Real)
(declare-fun x3737 () Real)
(declare-fun x820 () Bool)
(declare-fun x1751 () Real)
(declare-fun x78 () Bool)
(declare-fun x3388 () Real)
(declare-fun x4704 () Real)
(declare-fun x2231 () Bool)
(declare-fun x2216 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x4905 () Real)
(declare-fun x4081 () Bool)
(declare-fun x735 () Real)
(declare-fun x4341 () Real)
(declare-fun x3449 () Real)
(declare-fun x203 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x4829 () Bool)
(declare-fun x2463 () Real)
(declare-fun x4665 () Real)
(declare-fun x960 () Real)
(declare-fun x1604 () x2327)
(declare-fun x3429 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x3683 () Real)
(declare-fun x913 () Bool)
(declare-fun x4063 () Real)
(declare-fun x2089 () Bool)
(declare-fun x883 () Real)
(declare-fun x2820 () Bool)
(declare-fun x887 () Bool)
(declare-fun x4450 () Real)
(declare-fun x1735 () Real)
(declare-fun x3064 () Real)
(declare-fun x688 () Real)
(declare-fun x1801 () Real)
(declare-fun x254 () Bool)
(declare-fun x2571 () Real)
(declare-fun x550 () Bool)
(declare-fun x3600 () Bool)
(declare-fun x599 () Real)
(declare-fun x3551 () Real)
(declare-fun x2925 () Real)
(declare-fun x1146 () Real)
(declare-fun x3262 () Bool)
(declare-fun x2779 () Real)
(declare-fun x233 () Real)
(declare-fun x2604 () Bool)
(declare-fun x417 () Real)
(declare-fun x4688 () Real)
(declare-fun x4619 () Bool)
(declare-fun x4655 () Real)
(declare-fun x3862 () Real)
(declare-fun x2464 () Real)
(declare-fun x2345 () Real)
(declare-fun x3985 () Real)
(declare-fun x2373 () Bool)
(declare-fun x3972 () Real)
(declare-fun x2290 () Bool)
(declare-fun x2524 () Real)
(declare-fun x1313 () Bool)
(declare-fun x1519 () Real)
(declare-fun x927 () Real)
(declare-fun x1408 () Real)
(declare-fun x1650 () Bool)
(declare-fun x1589 () Real)
(declare-fun x297 () Real)
(declare-fun x2445 () Real)
(declare-fun x1834 () Real)
(declare-fun x2247 () Bool)
(declare-fun x2529 () Real)
(declare-fun x1680 () Real)
(declare-fun x1967 () Bool)
(declare-fun x1259 () Real)
(declare-fun x3565 () Bool)
(declare-fun x3386 () x2327)
(declare-fun x1397 () x2327)
(declare-fun x3585 () Real)
(declare-fun x55 () Bool)
(declare-fun x2841 () Real)
(declare-fun x3636 (x2327) Real)
(declare-fun x1214 () Real)
(declare-fun x3946 () Bool)
(declare-fun x3161 () Real)
(declare-fun x4098 () Real)
(declare-fun x2920 () Real)
(declare-fun x2105 () Real)
(declare-fun x1901 () Bool)
(declare-fun x941 () Bool)
(declare-fun x693 () Real)
(declare-fun x1062 () Bool)
(declare-fun x4984 () Real)
(declare-fun x4585 () Real)
(declare-fun x3498 (x2327) Real)
(declare-fun x1011 () Real)
(declare-fun x3186 () Real)
(declare-fun x2258 () Bool)
(declare-fun x2584 () x2327)
(declare-fun x3365 () Real)
(declare-fun x2386 () Bool)
(declare-fun x2615 (Real) Real)
(declare-fun x2908 () Bool)
(declare-fun x4906 () Real)
(declare-fun x1569 () Real)
(declare-fun x1030 () Real)
(declare-fun x1380 () Real)
(declare-fun x4706 () Bool)
(declare-fun x2917 () Real)
(declare-fun x2243 () Bool)
(declare-fun x4001 () Real)
(declare-fun x4571 () Real)
(declare-fun x2806 () Real)
(declare-fun x620 () Bool)
(declare-fun x3266 () Real)
(declare-fun x1174 () Real)
(declare-fun x4966 () Bool)
(declare-fun x1375 (Real) Real)
(declare-fun x2785 () Real)
(declare-fun x2210 () Real)
(declare-fun x2521 () Bool)
(declare-fun x923 () Real)
(declare-fun x2756 () Real)
(declare-fun x1059 () Bool)
(declare-fun x2828 () Real)
(declare-fun x3738 () Real)
(declare-fun x3101 () Real)
(declare-fun x3572 (Real) Real)
(declare-fun x4365 () Bool)
(declare-fun x1905 () Real)
(declare-fun x3733 () Real)
(declare-fun x2987 () Real)
(declare-fun x674 () Bool)
(declare-fun x2517 (Real) Real)
(declare-fun x1279 () Bool)
(declare-fun x3764 () Bool)
(declare-fun x4240 () Real)
(declare-fun x3217 () Real)
(declare-fun x2191 () Bool)
(declare-fun x1909 () Bool)
(declare-fun x2202 () Real)
(declare-fun x749 () Bool)
(declare-fun x898 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x4638 (Real) Real)
(declare-fun x253 () Real)
(declare-fun x4878 () Real)
(declare-fun x745 () Real)
(declare-fun x1949 () Real)
(declare-fun x111 () Bool)
(declare-fun x3504 () Real)
(declare-fun x1619 (x2327) Real)
(declare-fun x2488 () Real)
(declare-fun x384 () Real)
(declare-fun x1964 () Real)
(declare-fun x1806 () Bool)
(declare-fun x4429 () Real)
(declare-fun x2559 () Bool)
(declare-fun x3846 (x2327) Real)
(declare-fun x3673 () Real)
(declare-fun x1705 (Real) Real)
(declare-fun x3293 () Bool)
(declare-fun x3981 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x2832 () Bool)
(declare-fun x4204 () Bool)
(declare-fun x3570 () Bool)
(declare-fun x2435 () Bool)
(declare-fun x2845 () Real)
(declare-fun x1904 () Real)
(declare-fun x3344 () Real)
(declare-fun x171 () Real)
(declare-fun x436 () Bool)
(declare-fun x426 () Real)
(declare-fun x2971 () Bool)
(declare-fun x3499 () Real)
(declare-fun x4627 () Bool)
(declare-fun x4267 () Real)
(declare-fun x4022 () Real)
(declare-fun x4256 () x2327)
(declare-fun x4647 () Real)
(declare-fun x476 () Real)
(declare-fun x1136 () x2327)
(declare-fun x2759 () Real)
(declare-fun x2110 (Real) Real)
(declare-fun x2262 () Real)
(declare-fun x38 () Real)
(declare-fun x1966 () Bool)
(declare-fun x1937 () Real)
(declare-fun x3324 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x4964 () Bool)
(declare-fun x4909 () Bool)
(declare-fun x4809 () Real)
(declare-fun x407 () Bool)
(declare-fun x2901 () Real)
(declare-fun x644 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x281 () x2327)
(declare-fun x1042 () Real)
(declare-fun x2109 () Real)
(declare-fun x201 (x2327) Real)
(declare-fun x3548 () Bool)
(declare-fun x2747 () Real)
(declare-fun x210 () x2327)
(declare-fun x2430 () Real)
(declare-fun x4748 () Real)
(declare-fun x1268 (Real) Real)
(declare-fun x2770 () Real)
(declare-fun x227 () x2327)
(declare-fun x4930 () Bool)
(declare-fun x2858 () Bool)
(declare-fun x2518 () Real)
(declare-fun x603 () Real)
(declare-fun x1376 () Bool)
(declare-fun x2410 () Real)
(declare-fun x1007 () Bool)
(declare-fun x1855 () Real)
(declare-fun x821 () Bool)
(declare-fun x4039 () Real)
(declare-fun x3022 () Real)
(declare-fun x4126 () Real)
(declare-fun x1787 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x99 (x2327) Real)
(declare-fun x4279 () Bool)
(declare-fun x4830 () Real)
(declare-fun x698 () Real)
(declare-fun x199 () Bool)
(declare-fun x4592 (x2327) Real)
(declare-fun x1788 () Real)
(declare-fun x806 () Bool)
(declare-fun x4730 () Real)
(declare-fun x3083 () x2327)
(declare-fun x4347 () x2327)
(declare-fun x3271 () Bool)
(declare-fun x52 () Real)
(declare-fun x2980 () Real)
(declare-fun x553 () Real)
(declare-fun x777 () Real)
(declare-fun x293 () Real)
(declare-fun x2398 () Bool)
(declare-fun x2548 (Real) Real)
(declare-fun x3106 () x2327)
(declare-fun x3202 () Real)
(declare-fun x987 () Bool)
(declare-fun x4345 () Real)
(declare-fun x2940 () Bool)
(declare-fun x1741 () Real)
(declare-fun x2094 () Real)
(declare-fun x411 () x2327)
(declare-fun x1 () Real)
(declare-fun x314 () Real)
(declare-fun x2535 () x2327)
(declare-fun x3005 () Bool)
(declare-fun x3292 () Bool)
(declare-fun x4513 () Bool)
(declare-fun x3888 () Real)
(declare-fun x4886 () Bool)
(declare-fun x3728 () Real)
(declare-fun x2466 () Real)
(declare-fun x2611 () x2327)
(declare-fun x1386 () Real)
(declare-fun x4311 () Real)
(declare-fun x3578 () Real)
(declare-fun x1371 () Real)
(declare-fun x4388 () Bool)
(declare-fun x2178 () Real)
(declare-fun x851 () x2327)
(declare-fun x4324 () Bool)
(declare-fun x4084 () Real)
(declare-fun x4890 () Real)
(declare-fun x3538 (Real) Real)
(declare-fun x4301 () Real)
(declare-fun x2904 () Real)
(declare-fun x1493 () Real)
(declare-fun x2230 () Bool)
(declare-fun x3854 () Bool)
(declare-fun x1410 () Real)
(declare-fun x4389 () Real)
(declare-fun x4867 () Bool)
(declare-fun x2886 () Bool)
(declare-fun x3294 () Real)
(declare-fun x40 () Bool)
(declare-fun x18 () Real)
(declare-fun x3642 () Real)
(declare-fun x3493 () Bool)
(declare-fun x456 () Real)
(declare-fun x1854 () Bool)
(declare-fun x2827 () Real)
(declare-fun x2897 () Real)
(declare-fun x2366 () Real)
(declare-fun x853 (x2327) Real)
(declare-fun x3833 () Real)
(declare-fun x4625 () Bool)
(declare-fun x420 () Real)
(declare-fun x4415 () Bool)
(declare-fun x4375 () Real)
(declare-fun x3039 () Real)
(declare-fun x375 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x1676 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x3691 () Real)
(declare-fun x4297 () Real)
(declare-fun x2122 () Bool)
(declare-fun x3458 () x2327)
(declare-fun x2240 () Real)
(declare-fun x1810 () Bool)
(declare-fun x2938 () Real)
(declare-fun x4152 () Real)
(declare-fun x2941 () x2327)
(declare-fun x4963 () Real)
(declare-fun x2106 () Real)
(declare-fun x1211 () Real)
(declare-fun x2551 () Real)
(declare-fun x2185 (x2327) Real)
(declare-fun x3651 () Real)
(declare-fun x2721 () Real)
(declare-fun x3989 (x2327) Real)
(declare-fun x705 (Real) Real)
(declare-fun x3314 () Bool)
(declare-fun x2010 () Real)
(declare-fun x568 () Real)
(declare-fun x3944 () x2327)
(declare-fun x1401 () Bool)
(declare-fun x4640 () Bool)
(declare-fun x2459 (x2327) Real)
(declare-fun x3195 () Bool)
(declare-fun x3122 () Real)
(declare-fun x1392 () Bool)
(declare-fun x212 () Bool)
(declare-fun x628 () Bool)
(declare-fun x3302 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x3877 () Bool)
(declare-fun x4858 () x2327)
(declare-fun x4971 () Bool)
(declare-fun x3599 () Real)
(declare-fun x1463 () Bool)
(declare-fun x597 () x2327)
(declare-fun x3380 () Real)
(declare-fun x1925 () Bool)
(declare-fun x1139 () x2327)
(declare-fun x316 () Real)
(declare-fun x4537 () Real)
(declare-fun x3164 () Bool)
(declare-fun x321 () Bool)
(declare-fun x2065 () Real)
(declare-fun x2547 () Real)
(declare-fun x1800 () Bool)
(declare-fun x2024 () Real)
(declare-fun x2795 () Bool)
(declare-fun x3671 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x458 () Real)
(declare-fun x3255 () Real)
(declare-fun x393 () Bool)
(declare-fun x4038 () Real)
(declare-fun x1230 () Bool)
(declare-fun x1998 () Real)
(declare-fun x2590 () Real)
(declare-fun x3549 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x3940 () Real)
(declare-fun x1691 () Real)
(declare-fun x325 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x3165 () Bool)
(declare-fun x2705 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x3018 () Real)
(declare-fun x3319 () Real)
(declare-fun x1258 () Bool)
(declare-fun x3290 () Bool)
(declare-fun x4979 () Real)
(declare-fun x3482 () Real)
(declare-fun x621 () Real)
(declare-fun x3528 () Real)
(declare-fun x2816 () x2327)
(declare-fun x3407 () Real)
(declare-fun x2022 () x2327)
(declare-fun x3752 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x3181 () Real)
(declare-fun x2057 () Real)
(declare-fun x4265 () Bool)
(declare-fun x3121 () Real)
(declare-fun x533 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x2156 () Real)
(declare-fun x4036 () Bool)
(declare-fun x403 () x2327)
(declare-fun x1418 () Bool)
(declare-fun x3864 () x2327)
(declare-fun x718 () Real)
(declare-fun x421 () Bool)
(declare-fun x622 () Real)
(declare-fun x3287 () Real)
(declare-fun x1175 () Bool)
(declare-fun x2553 () Bool)
(declare-fun x1208 () Real)
(declare-fun x3436 () Real)
(declare-fun x3001 () Real)
(declare-fun x4019 () Bool)
(declare-fun x4323 () Real)
(declare-fun x4927 () Bool)
(declare-fun x897 () Real)
(declare-fun x728 () Bool)
(declare-fun x4423 () Bool)
(declare-fun x1817 () Real)
(declare-fun x4848 () Real)
(declare-fun x4399 () Bool)
(declare-fun x3720 () Real)
(declare-fun x3616 () Real)
(declare-fun x3149 () Real)
(declare-fun x4475 () Bool)
(declare-fun x4446 () Real)
(declare-fun x4407 () Real)
(declare-fun x1041 () x2327)
(declare-fun x1954 () Real)
(declare-fun x2961 (Real) Real)
(declare-fun x3229 () Real)
(declare-fun x1045 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x2583 () Real)
(declare-fun x3871 () Real)
(declare-fun x4720 () Real)
(declare-fun x1783 () Bool)
(declare-fun x2751 () Real)
(declare-fun x3175 () x2327)
(declare-fun x4852 () Bool)
(declare-fun x1940 () Real)
(declare-fun x461 () Real)
(declare-fun x2331 () Real)
(declare-fun x3003 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x4406 () Real)
(declare-fun x3053 () Real)
(declare-fun x1032 () Bool)
(declare-fun x3802 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x4178 () x2327)
(declare-fun x2299 () Real)
(declare-fun x3100 () Bool)
(declare-fun x2042 () Real)
(declare-fun x1246 () Real)
(declare-fun x2856 (x2327) Real)
(declare-fun x240 () Real)
(declare-fun x2127 (Real) Real)
(declare-fun x4102 () Real)
(declare-fun x1847 () Bool)
(declare-fun x1622 () Real)
(declare-fun x1184 () Bool)
(declare-fun x4127 () Bool)
(declare-fun x202 () Bool)
(declare-fun x3732 (x2327) Real)
(declare-fun x1340 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x4280 () Bool)
(declare-fun x2678 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x262 () Bool)
(declare-fun x1530 (Real) Real)
(declare-fun x42 () Real)
(declare-fun x2869 () Bool)
(declare-fun x4122 () Bool)
(declare-fun x4700 () Real)
(declare-fun x4107 () Real)
(declare-fun x1167 () Real)
(declare-fun x2111 () x2327)
(declare-fun x635 () Bool)
(declare-fun x2358 () Real)
(declare-fun x4203 () Bool)
(declare-fun x4521 () Bool)
(declare-fun x1896 () Real)
(declare-fun x1016 (Real) Real)
(declare-fun x619 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x4916 () Bool)
(declare-fun x785 () Real)
(declare-fun x4181 () Real)
(declare-fun x307 () Bool)
(declare-fun x4283 () Bool)
(declare-fun x1040 () x2327)
(declare-fun x3032 () Real)
(declare-fun x2739 () Real)
(declare-fun x1198 () Bool)
(declare-fun x2393 () Bool)
(declare-fun x4353 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x4198 () x2327)
(declare-fun x4299 (Real) Real)
(declare-fun x4412 () Real)
(declare-fun x174 () Real)
(declare-fun x2091 () Bool)
(declare-fun x153 () Real)
(declare-fun x722 () Bool)
(declare-fun x3819 () Bool)
(declare-fun x1789 () Real)
(declare-fun x414 () Real)
(declare-fun x3558 () Real)
(declare-fun x1953 (x2327) Real)
(declare-fun x3914 () Bool)
(declare-fun x172 () Bool)
(declare-fun x1112 () Real)
(declare-fun x541 () Real)
(declare-fun x193 () Real)
(declare-fun x295 () Bool)
(declare-fun x378 () x2327)
(declare-fun x335 () Real)
(declare-fun x145 () Bool)
(declare-fun x4286 () Bool)
(declare-fun x2666 () Real)
(declare-fun x946 () Real)
(declare-fun x3800 () Real)
(declare-fun x4421 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x1315 () Real)
(declare-fun x2558 () Real)
(declare-fun x3589 () Real)
(declare-fun x3894 () Real)
(declare-fun x4272 () Real)
(declare-fun x815 () Bool)
(declare-fun x997 () Real)
(declare-fun x377 () Real)
(declare-fun x3025 () Real)
(declare-fun x4646 () Bool)
(declare-fun x3971 () Real)
(declare-fun x687 () Real)
(declare-fun x3163 (Real) Real)
(declare-fun x139 () Real)
(declare-fun x1910 () Real)
(declare-fun x1850 () Real)
(declare-fun x3412 () Real)
(declare-fun x2379 () x2327)
(declare-fun x1367 () x2327)
(declare-fun x4262 () Real)
(declare-fun x3705 () Bool)
(declare-fun x2037 (Real) Real)
(declare-fun x4714 () Bool)
(declare-fun x3396 () Real)
(declare-fun x452 () Bool)
(declare-fun x4201 () Real)
(declare-fun x1935 () Bool)
(declare-fun x3337 () Bool)
(declare-fun x1449 () Real)
(declare-fun x2632 () Bool)
(declare-fun x1270 () Real)
(declare-fun x2771 () Real)
(declare-fun x2101 () Bool)
(declare-fun x2294 () Bool)
(declare-fun x643 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x3430 () Real)
(declare-fun x2009 () Real)
(declare-fun x3654 () Real)
(declare-fun x3188 () Bool)
(declare-fun x4802 () Real)
(declare-fun x4264 () Bool)
(declare-fun x44 () Real)
(declare-fun x4511 () Bool)
(declare-fun x147 () Real)
(declare-fun x994 () Real)
(declare-fun x4900 () Real)
(declare-fun x2691 () Real)
(declare-fun x3917 () Real)
(declare-fun x1333 () Real)
(declare-fun x1278 () Real)
(declare-fun x2207 () Real)
(declare-fun x388 () Real)
(declare-fun x2667 () Real)
(declare-fun x4130 () Bool)
(declare-fun x472 () Real)
(declare-fun x3152 () Real)
(declare-fun x383 () Bool)
(declare-fun x4831 () Real)
(declare-fun x471 () Bool)
(declare-fun x4861 () Bool)
(declare-fun x3268 () Real)
(declare-fun x12 (x2327) Real)
(declare-fun x3438 () Bool)
(declare-fun x4361 () Real)
(declare-fun x1036 () x2327)
(declare-fun x3237 () Real)
(declare-fun x3930 () Real)
(declare-fun x1699 (Real) Real)
(declare-fun x1750 () Real)
(declare-fun x4059 () Bool)
(declare-fun x3787 () Real)
(declare-fun x3216 () Bool)
(declare-fun x4782 () Real)
(declare-fun x616 () Real)
(declare-fun x1383 () Bool)
(declare-fun x4308 () Bool)
(declare-fun x3734 () Real)
(declare-fun x2399 () Bool)
(declare-fun x206 () Real)
(declare-fun x4249 () Real)
(declare-fun x182 () Bool)
(declare-fun x764 () x2327)
(declare-fun x3630 () x2327)
(declare-fun x85 () Bool)
(declare-fun x3701 () Real)
(declare-fun x2970 () Bool)
(declare-fun x3682 () Bool)
(declare-fun x397 () Bool)
(declare-fun x1677 () Real)
(declare-fun x4 () Real)
(declare-fun x3835 () Real)
(declare-fun x110 () Real)
(declare-fun x1594 () Real)
(declare-fun x1243 () Real)
(declare-fun x3807 () Real)
(declare-fun x1867 () Bool)
(declare-fun x723 () Bool)
(declare-fun x1414 (x2327) Real)
(declare-fun x1201 () Real)
(declare-fun x3853 () Real)
(declare-fun x1269 () Real)
(declare-fun x4227 () Bool)
(declare-fun x2468 () Bool)
(declare-fun x642 () Real)
(declare-fun x2229 () Real)
(declare-fun x2565 () Real)
(declare-fun x2649 () Real)
(declare-fun x1126 () Real)
(declare-fun x525 () Real)
(declare-fun x3602 () Real)
(declare-fun x4504 () x2327)
(declare-fun x1023 () Real)
(declare-fun x207 (Real) Real)
(declare-fun x113 () Real)
(declare-fun x2318 () Real)
(declare-fun x4332 () Real)
(declare-fun x4893 () Bool)
(declare-fun x4260 () Real)
(declare-fun x3943 () Bool)
(declare-fun x961 () Bool)
(declare-fun x2332 () Real)
(declare-fun x1823 () Real)
(declare-fun x4166 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x4008 () Bool)
(declare-fun x4690 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x4925 () Real)
(declare-fun x1079 () Real)
(declare-fun x1456 () Bool)
(declare-fun x2959 () Bool)
(declare-fun x1687 () Real)
(declare-fun x2603 () Bool)
(declare-fun x4673 () Bool)
(declare-fun x3044 () Real)
(declare-fun x225 () Real)
(declare-fun x572 (x2327) Real)
(declare-fun x1647 () Real)
(declare-fun x208 (x2327) Real)
(declare-fun x776 () Real)
(declare-fun x3379 () Bool)
(declare-fun x1158 () Real)
(declare-fun x986 () Bool)
(declare-fun x4314 () Real)
(declare-fun x3781 () Real)
(declare-fun x43 () Real)
(declare-fun x3071 () Bool)
(declare-fun x4079 () Real)
(declare-fun x584 () Bool)
(declare-fun x958 () Real)
(declare-fun x4783 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x4309 () Real)
(declare-fun x1093 () Real)
(declare-fun x817 () Bool)
(declare-fun x150 () Real)
(declare-fun x2859 () Bool)
(declare-fun x4889 () Bool)
(declare-fun x4458 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x3236 () Bool)
(declare-fun x564 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x2950 () Bool)
(declare-fun x296 () Real)
(declare-fun x4701 () Real)
(declare-fun x4968 () Real)
(declare-fun x4676 () Real)
(declare-fun x3828 () Real)
(declare-fun x2580 () Bool)
(declare-fun x2931 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x895 () Bool)
(declare-fun x950 () Bool)
(declare-fun x1522 (Real) Real)
(declare-fun x4751 () Real)
(declare-fun x3879 () Bool)
(declare-fun x940 () Bool)
(declare-fun x656 () Bool)
(declare-fun x1442 () Real)
(declare-fun x3203 () Real)
(declare-fun x2160 () Bool)
(declare-fun x4859 () Bool)
(declare-fun x2018 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x4873 () Bool)
(declare-fun x155 () Real)
(declare-fun x2642 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x3850 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x834 () Bool)
(declare-fun x83 () Real)
(declare-fun x4381 () x2327)
(declare-fun x3524 () Real)
(declare-fun x1289 () Bool)
(declare-fun x3891 () Real)
(declare-fun x4678 () Bool)
(declare-fun x2186 (Real) Real)
(declare-fun x3628 () Bool)
(declare-fun x727 () Real)
(declare-fun x1756 () Bool)
(declare-fun x4588 () Bool)
(declare-fun x2423 () Bool)
(declare-fun x2712 () Real)
(declare-fun x1583 () Bool)
(declare-fun x602 () Real)
(declare-fun x639 () Real)
(declare-fun x2924 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x2903 () Real)
(declare-fun x2169 () Real)
(declare-fun x4069 () Bool)
(declare-fun x2852 () Real)
(declare-fun x3644 () x2327)
(declare-fun x2810 () Real)
(declare-fun x387 () Bool)
(declare-fun x3419 () Bool)
(declare-fun x4120 () Real)
(declare-fun x2491 () Real)
(declare-fun x593 () Bool)
(declare-fun x3392 () Real)
(declare-fun x4882 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x4705 () Bool)
(declare-fun x4017 () Real)
(declare-fun x3882 () Real)
(declare-fun x1814 () x2327)
(declare-fun x4650 () Real)
(declare-fun x1293 () Bool)
(declare-fun x4205 () Real)
(declare-fun x4031 () Real)
(declare-fun x1097 () x2327)
(declare-fun x2172 () Bool)
(declare-fun x3880 () Real)
(declare-fun x4075 () Real)
(declare-fun x1914 () Real)
(declare-fun x177 () Bool)
(declare-fun x2293 (x2327) Real)
(declare-fun x1717 () Bool)
(declare-fun x346 () Real)
(declare-fun x3267 () Real)
(declare-fun x219 () Real)
(declare-fun x2447 () Bool)
(declare-fun x1988 () Bool)
(declare-fun x2494 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x4034 () Real)
(declare-fun x3730 () Real)
(declare-fun x3823 () Real)
(declare-fun x158 () Bool)
(declare-fun x3061 () Real)
(declare-fun x4838 () Real)
(declare-fun x2438 () Real)
(declare-fun x4376 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x98 () Bool)
(declare-fun x702 () Real)
(declare-fun x4503 () Real)
(declare-fun x3804 () Real)
(declare-fun x4776 () Real)
(declare-fun x3098 (Real) Real)
(declare-fun x4677 () Real)
(declare-fun x137 () Real)
(declare-fun x3938 () Real)
(declare-fun x1103 () Real)
(declare-fun x2973 () Real)
(declare-fun x1764 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x518 () Bool)
(declare-fun x2682 () Bool)
(declare-fun x854 () Real)
(declare-fun x160 () Real)
(declare-fun x3253 () Real)
(declare-fun x1110 () Bool)
(declare-fun x4414 () Real)
(declare-fun x1960 () Bool)
(declare-fun x2166 () Real)
(declare-fun x1222 () Real)
(declare-fun x1343 () Bool)
(declare-fun x3717 () Real)
(declare-fun x4672 () Bool)
(declare-fun x4540 () Bool)
(declare-fun x90 () Bool)
(declare-fun x1157 () Real)
(declare-fun x595 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x942 () Real)
(declare-fun x1061 () Real)
(declare-fun x783 () Real)
(declare-fun x228 () Bool)
(declare-fun x89 () Real)
(declare-fun x4653 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x4707 (x2327) Real)
(declare-fun x192 () Bool)
(declare-fun x4534 () Real)
(declare-fun x3942 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x3818 () Real)
(declare-fun x2328 (x2327) Real)
(declare-fun x3638 () Real)
(declare-fun x890 () Bool)
(declare-fun x294 () Real)
(declare-fun x4189 () Bool)
(declare-fun x2851 () Real)
(declare-fun x230 () Bool)
(declare-fun x4368 () Real)
(declare-fun x2874 () Real)
(declare-fun x1943 () Real)
(declare-fun x2538 () Bool)
(declare-fun x4892 () Bool)
(declare-fun x2661 () Real)
(declare-fun x143 () Real)
(declare-fun x4519 () Real)
(declare-fun x577 () Bool)
(declare-fun x2475 () Bool)
(declare-fun x2472 () Real)
(declare-fun x3361 () Real)
(declare-fun x2360 () Real)
(declare-fun x2317 () Real)
(declare-fun x3899 () Bool)
(declare-fun x1574 () Real)
(declare-fun x322 (Real) Real)
(declare-fun x1529 () Real)
(declare-fun x4744 () Bool)
(declare-fun x2139 () Bool)
(declare-fun x132 () Real)
(declare-fun x3667 (Real) Real)
(declare-fun x1261 () Real)
(declare-fun x1178 () Bool)
(declare-fun x1331 () Real)
(declare-fun x889 () Bool)
(declare-fun x339 () Bool)
(declare-fun x4188 () Bool)
(declare-fun x614 () Bool)
(declare-fun x3533 () Bool)
(declare-fun x382 () Real)
(declare-fun x280 (Real) Real)
(declare-fun x4447 () Real)
(declare-fun x952 () Bool)
(declare-fun x238 () Bool)
(declare-fun x4064 () Bool)
(declare-fun x334 () Real)
(declare-fun x4002 () Real)
(declare-fun x3052 () x2327)
(declare-fun x3724 () Bool)
(declare-fun x3393 (Real) Real)
(declare-fun x4855 () Bool)
(declare-fun x886 () Real)
(declare-fun x5 () Bool)
(declare-fun x827 () Real)
(declare-fun x2541 (x2327) Real)
(declare-fun x2266 (Real) Real)
(declare-fun x4902 () Real)
(declare-fun x3245 () Bool)
(declare-fun x3806 () Bool)
(declare-fun x3886 (Real) Real)
(declare-fun x4498 () Real)
(declare-fun x3838 () Real)
(declare-fun x1221 () Bool)
(declare-fun x2791 () Real)
(declare-fun x1094 () Bool)
(declare-fun x4326 () Real)
(declare-fun x3771 () x2327)
(declare-fun x356 () Real)
(declare-fun x3093 () Bool)
(declare-fun x2803 () Real)
(declare-fun x3444 () Bool)
(declare-fun x4097 () Bool)
(declare-fun x2766 () Real)
(declare-fun x4241 () Real)
(declare-fun x4564 () Real)
(declare-fun x4320 () Real)
(declare-fun x3755 () Bool)
(declare-fun x4427 () Real)
(declare-fun x3658 () Real)
(declare-fun x4370 () Real)
(declare-fun x4769 () Bool)
(declare-fun x3224 (Real) Real)
(declare-fun x1048 () Real)
(declare-fun x1792 () Real)
(declare-fun x180 () Bool)
(declare-fun x4898 (Real) Real)
(declare-fun x4920 () Real)
(declare-fun x14 () Real)
(declare-fun x675 (x2327) Real)
(declare-fun x3113 () Bool)
(declare-fun x3725 () Real)
(declare-fun x658 () Bool)
(declare-fun x4583 () Bool)
(declare-fun x1004 () Real)
(declare-fun x3338 () Bool)
(declare-fun x4811 () Bool)
(declare-fun x4623 () Real)
(declare-fun x3047 () Bool)
(declare-fun x2050 () Real)
(declare-fun x4737 (Real) Real)
(declare-fun x3768 (Real) Real)
(declare-fun x3507 () Bool)
(declare-fun x136 (Real) Real)
(declare-fun x1595 () Bool)
(declare-fun x4076 () Bool)
(declare-fun x515 () Real)
(declare-fun x4077 () Real)
(declare-fun x333 () Bool)
(declare-fun x4193 () Real)
(declare-fun x1432 () Real)
(declare-fun x4465 () Real)
(declare-fun x4598 () Bool)
(declare-fun x3371 () Real)
(declare-fun x2031 () Real)
(declare-fun x2835 () Real)
(declare-fun x1812 () Real)
(declare-fun x3736 () x2327)
(declare-fun x1543 () Bool)
(declare-fun x1153 (Real) Real)
(declare-fun x1452 () Real)
(declare-fun x4602 () Bool)
(declare-fun x862 () Real)
(declare-fun x364 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x4568 (x2327) Real)
(declare-fun x1780 () Real)
(declare-fun x945 () Bool)
(declare-fun x4911 () Real)
(declare-fun x3847 () Real)
(declare-fun x2814 () Real)
(declare-fun x4460 () Real)
(declare-fun x909 () Bool)
(declare-fun x3172 () Real)
(declare-fun x4281 () Bool)
(declare-fun x4524 (Real) Real)
(declare-fun x455 () Real)
(declare-fun x2681 () Real)
(declare-fun x4438 () Bool)
(declare-fun x4801 () Real)
(declare-fun x1460 () Real)
(declare-fun x2507 () Real)
(declare-fun x1244 () Real)
(declare-fun x2745 () Bool)
(declare-fun x3080 () Bool)
(declare-fun x2275 () Bool)
(declare-fun x2484 () Real)
(declare-fun x4285 () Real)
(declare-fun x882 () x2327)
(declare-fun x173 () Real)
(declare-fun x937 () Bool)
(declare-fun x1931 () Real)
(declare-fun x4467 () Real)
(declare-fun x4390 () Real)
(declare-fun x1853 () Bool)
(declare-fun x4717 () Bool)
(declare-fun x4698 () Bool)
(declare-fun x1540 () x2327)
(declare-fun x92 () Bool)
(declare-fun x3303 () Real)
(declare-fun x903 () Real)
(declare-fun x755 () x2327)
(declare-fun x2171 () Bool)
(declare-fun x231 () Real)
(declare-fun x2725 () Real)
(declare-fun x2773 () Real)
(declare-fun x3219 () Real)
(declare-fun x391 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x3133 () Bool)
(declare-fun x4703 () Real)
(declare-fun x583 () Bool)
(declare-fun x4651 () Real)
(declare-fun x3512 () Bool)
(declare-fun x142 () Real)
(declare-fun x2556 () Real)
(declare-fun x1752 () Bool)
(declare-fun x3522 () Real)
(declare-fun x992 () Real)
(declare-fun x1689 () Real)
(declare-fun x4932 () Real)
(declare-fun x3132 () Bool)
(declare-fun x1962 (Real) Real)
(declare-fun x2375 () x2327)
(declare-fun x3278 () Bool)
(declare-fun x1770 () Real)
(declare-fun x2213 () Real)
(declare-fun x4563 (Real) Real)
(declare-fun x1897 () Real)
(declare-fun x4482 () Real)
(declare-fun x3397 () Real)
(declare-fun x1326 (Real) Real)
(declare-fun x1566 (Real) Real)
(declare-fun x3973 () Bool)
(declare-fun x3634 () Bool)
(declare-fun x4987 () Bool)
(declare-fun x2616 () Real)
(declare-fun x4954 () Real)
(declare-fun x732 () Real)
(declare-fun x852 () Real)
(declare-fun x4147 () Bool)
(declare-fun x775 () Real)
(declare-fun x1445 () Real)
(declare-fun x2510 () Real)
(declare-fun x4974 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x1225 () Real)
(declare-fun x141 () Bool)
(declare-fun x2664 () Real)
(declare-fun x437 () Bool)
(declare-fun x2277 () Real)
(declare-fun x162 () Bool)
(declare-fun x1879 (x2327) Real)
(declare-fun x1378 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x2473 () Real)
(declare-fun x156 () x2327)
(declare-fun x3141 () Real)
(declare-fun x4587 () Bool)
(declare-fun x1255 () Real)
(declare-fun x668 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x1620 () Real)
(declare-fun x3777 () Bool)
(declare-fun x404 () Real)
(declare-fun x2217 () Real)
(declare-fun x4078 () Real)
(declare-fun x1553 () Real)
(declare-fun x3869 () Real)
(declare-fun x736 () Real)
(declare-fun x4105 () Bool)
(declare-fun x1924 () Real)
(declare-fun x532 () Bool)
(declare-fun x3058 () Real)
(declare-fun x2365 () Real)
(declare-fun x2762 () Real)
(declare-fun x4116 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x2142 () Real)
(declare-fun x4125 () Real)
(declare-fun x3279 () Bool)
(declare-fun x3403 () x2327)
(declare-fun x647 () Real)
(declare-fun x2782 () Real)
(declare-fun x3431 () Real)
(declare-fun x2480 () Real)
(declare-fun x492 () Real)
(declare-fun x661 () Bool)
(declare-fun x560 () Bool)
(declare-fun x3410 () Real)
(declare-fun x1135 () x2327)
(declare-fun x2843 () x2327)
(declare-fun x4439 () Bool)
(declare-fun x390 () Real)
(declare-fun x1765 () Real)
(declare-fun x1809 () Real)
(declare-fun x540 () Bool)
(declare-fun x750 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x4620 () x2327)
(declare-fun x3201 () Real)
(declare-fun x4359 () Real)
(declare-fun x243 () Real)
(declare-fun x611 () Bool)
(declare-fun x2363 () x2327)
(declare-fun x2777 (x2327) Real)
(declare-fun x665 (Real) Real)
(declare-fun x1012 () Bool)
(declare-fun x3792 () Bool)
(declare-fun x3066 () Bool)
(declare-fun x3112 () Bool)
(declare-fun x3598 () Bool)
(declare-fun x627 () Real)
(declare-fun x4025 () Real)
(declare-fun x2443 () Real)
(declare-fun x2462 () Real)
(declare-fun x4514 () x2327)
(declare-fun x112 () Real)
(declare-fun x2020 (Real) Real)
(declare-fun x4845 () Bool)
(declare-fun x2742 () Bool)
(declare-fun x4766 () Real)
(declare-fun x1224 () Real)
(declare-fun x1495 () Bool)
(declare-fun x2728 () Bool)
(declare-fun x4875 () Real)
(declare-fun x214 () Real)
(declare-fun x3925 () Bool)
(declare-fun x499 () Bool)
(declare-fun x4015 () Real)
(declare-fun x589 () x2327)
(declare-fun x2527 () Real)
(declare-fun x1210 () Real)
(declare-fun x2930 () Bool)
(declare-fun x3936 () Bool)
(declare-fun x4586 () Bool)
(declare-fun x3273 () Real)
(declare-fun x4686 () Real)
(declare-fun x962 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x3261 () Bool)
(declare-fun x3087 () Bool)
(declare-fun x4093 () Real)
(declare-fun x757 () Bool)
(declare-fun x1443 () Real)
(declare-fun x1575 () Bool)
(declare-fun x328 () Real)
(declare-fun x2956 () Real)
(declare-fun x4970 () Real)
(declare-fun x2088 (Real) Real)
(declare-fun x744 () Bool)
(declare-fun x3258 () Real)
(declare-fun x4594 () Bool)
(declare-fun x3341 (Real) Real)
(declare-fun x995 () Real)
(declare-fun x631 () Bool)
(declare-fun x2397 () x2327)
(declare-fun x428 () Bool)
(declare-fun x3068 () Real)
(declare-fun x2151 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x4946 () Real)
(declare-fun x3298 () Real)
(declare-fun x402 () Real)
(declare-fun x3988 () Bool)
(declare-fun x4062 () Real)
(declare-fun x2536 () Real)
(declare-fun x215 () Real)
(declare-fun x2067 () Real)
(declare-fun x634 () x2327)
(declare-fun x3885 () Bool)
(declare-fun x3072 () Bool)
(declare-fun x1748 () Real)
(declare-fun x1857 () x2327)
(declare-fun x1578 () Real)
(declare-fun x190 () Real)
(declare-fun x34 () Real)
(declare-fun x3000 () Real)
(declare-fun x3400 () Real)
(declare-fun x2922 () Real)
(declare-fun x3240 () Real)
(declare-fun x3593 () Real)
(declare-fun x2560 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x714 () Bool)
(declare-fun x4058 () Real)
(declare-fun x4786 () Bool)
(declare-fun x1605 () Real)
(declare-fun x1509 () Real)
(declare-fun x4040 () Bool)
(declare-fun x4395 () Real)
(declare-fun x1328 () Real)
(declare-fun x1357 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x1546 () Real)
(declare-fun x4978 () Real)
(declare-fun x2578 () Real)
(declare-fun x4615 () Real)
(declare-fun x1791 () Real)
(declare-fun x3697 () x2327)
(declare-fun x1692 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x2989 () Bool)
(declare-fun x2600 () Real)
(declare-fun x3007 () Bool)
(declare-fun x4151 () Real)
(declare-fun x2731 () Bool)
(declare-fun x2364 () Real)
(declare-fun x2354 () Bool)
(declare-fun x4226 () Real)
(declare-fun x338 () Real)
(declare-fun x4106 () Bool)
(declare-fun x3385 () x2327)
(declare-fun x3194 () Real)
(declare-fun x3778 () Bool)
(declare-fun x128 () Bool)
(declare-fun x1319 (Real Real) Real)
(declare-fun x1749 () Bool)
(declare-fun x4048 () Real)
(declare-fun x1284 () Real)
(declare-fun x3214 () Bool)
(declare-fun x1415 () Real)
(declare-fun x3571 () Bool)
(declare-fun x2478 () Real)
(declare-fun x1069 () Real)
(declare-fun x473 () Bool)
(declare-fun x185 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x380 (Real) Real)
(declare-fun x2107 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x4813 () Real)
(declare-fun x3703 () Real)
(declare-fun x2225 () Bool)
(declare-fun x358 () Real)
(declare-fun x257 () Bool)
(declare-fun x1843 (Real) Real)
(declare-fun x3062 () Real)
(declare-fun x3069 () Real)
(declare-fun x1628 () Bool)
(declare-fun x30 (x2327) Real)
(declare-fun x4613 () x2327)
(declare-fun x2696 (x2327) Real)
(declare-fun x326 () Real)
(declare-fun x2474 () Real)
(declare-fun x3679 () Real)
(declare-fun x814 () Bool)
(declare-fun x3117 (Real) Real)
(declare-fun x3591 () Real)
(declare-fun x2589 () Real)
(declare-fun x2577 () x2327)
(declare-fun x1391 () Real)
(declare-fun x1808 () Real)
(declare-fun x4745 () Bool)
(declare-fun x4225 () x2327)
(declare-fun x2894 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x276 () Real)
(declare-fun x3900 () Real)
(declare-fun x2428 () Bool)
(declare-fun x618 () Real)
(declare-fun x3933 (Real) Real)
(declare-fun x341 () Real)
(declare-fun x1288 () Bool)
(declare-fun x4023 () Real)
(declare-fun x4210 () Real)
(declare-fun x4158 () Bool)
(declare-fun x1187 () Real)
(declare-fun x514 () Bool)
(declare-fun x1003 (x2327) Real)
(declare-fun x4691 () Bool)
(declare-fun x4292 () Bool)
(declare-fun x4493 () Real)
(declare-fun x3241 () Bool)
(declare-fun x2764 () Real)
(declare-fun x2783 () Real)
(declare-fun x1607 () x2327)
(declare-fun x4862 () Real)
(declare-fun x922 () x2327)
(declare-fun x511 () Real)
(declare-fun x2059 () Real)
(declare-fun x3953 () x2327)
(declare-fun x3950 () Real)
(declare-fun x3517 () Real)
(declare-fun x4248 () x2327)
(declare-fun x4669 () Real)
(declare-fun x3990 () Bool)
(declare-fun x1533 (Real) Real)
(declare-fun x2165 () Bool)
(declare-fun x1833 () Real)
(declare-fun x102 (x2327) Real)
(declare-fun x4408 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x73 () Bool)
(declare-fun x4185 () x2327)
(declare-fun x1685 () x2327)
(declare-fun x1542 () Real)
(declare-fun x2807 () Real)
(declare-fun x4872 () Bool)
(declare-fun x571 () Real)
(declare-fun x3515 () Real)
(declare-fun x1176 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x4950 () Bool)
(declare-fun x1797 () x2327)
(declare-fun x2005 (x2327) Real)
(declare-fun x2322 () Bool)
(declare-fun x2878 () Real)
(declare-fun x3921 () Real)
(declare-fun x3199 () Real)
(declare-fun x2844 () Bool)
(declare-fun x3174 () Real)
(declare-fun x2965 () Real)
(declare-fun x788 () x2327)
(declare-fun x3416 () Bool)
(declare-fun x4773 (Real) Real)
(declare-fun x1281 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x4167 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x2434 () Real)
(declare-fun x733 () Real)
(declare-fun x282 () Bool)
(declare-fun x3689 () Real)
(declare-fun x3441 () Real)
(declare-fun x2787 () Real)
(declare-fun x493 () Real)
(declare-fun x3568 () Bool)
(declare-fun x2842 () Bool)
(declare-fun x1329 () Real)
(declare-fun x1777 () Real)
(declare-fun x669 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x3855 () Real)
(declare-fun x2907 () Real)
(declare-fun x3629 () Real)
(declare-fun x1046 () Bool)
(declare-fun x4221 () Real)
(declare-fun x2774 () Real)
(declare-fun x1928 () Real)
(declare-fun x3067 () Real)
(declare-fun x3995 () Real)
(declare-fun x4237 () Bool)
(declare-fun x1945 () Bool)
(declare-fun x4658 () Real)
(declare-fun x4754 () Real)
(declare-fun x4136 () x2327)
(declare-fun x4495 () Bool)
(declare-fun x3351 () Bool)
(declare-fun x2493 () Real)
(declare-fun x3466 () Real)
(declare-fun x2955 () Bool)
(declare-fun x4477 () Bool)
(declare-fun x3553 () Real)
(declare-fun x1127 () Bool)
(declare-fun x1200 () Real)
(declare-fun x2422 () Bool)
(declare-fun x999 () Real)
(declare-fun x4757 () Bool)
(declare-fun x3399 () Real)
(declare-fun x2138 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x929 () Real)
(declare-fun x100 () Real)
(declare-fun x4334 () Real)
(declare-fun x3228 () Real)
(declare-fun x2028 () Bool)
(declare-fun x4154 () Bool)
(declare-fun x3907 () Real)
(declare-fun x1824 () Real)
(declare-fun x623 () Real)
(declare-fun x2633 () Bool)
(declare-fun x4253 () Bool)
(declare-fun x710 () Bool)
(declare-fun x4908 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x2412 () Bool)
(declare-fun x4448 () Real)
(declare-fun x800 () Bool)
(declare-fun x3660 () Real)
(declare-fun x3110 () Bool)
(declare-fun x4453 (Real) Real)
(declare-fun x1363 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x4104 () Bool)
(declare-fun x3210 () Real)
(declare-fun x4369 () Bool)
(declare-fun x1356 () Real)
(declare-fun x4165 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x4426 () Bool)
(declare-fun x1506 () x2327)
(declare-fun x4257 () Real)
(declare-fun x4215 (Real) Real)
(declare-fun x4298 () Real)
(declare-fun x4711 () Real)
(declare-fun x1517 () Real)
(declare-fun x4464 () Bool)
(declare-fun x3653 () Real)
(declare-fun x4937 () Real)
(declare-fun x2380 () Real)
(declare-fun x4752 () Real)
(declare-fun x3719 () Bool)
(declare-fun x1107 () Real)
(declare-fun x3306 () Bool)
(declare-fun x1527 () Real)
(declare-fun x3550 () Bool)
(declare-fun x1948 () Real)
(declare-fun x1547 () Real)
(declare-fun x451 () Bool)
(declare-fun x31 () Real)
(declare-fun x347 () Bool)
(declare-fun x3760 () Real)
(declare-fun x4380 () Real)
(declare-fun x4024 () Real)
(declare-fun x1757 () Bool)
(declare-fun x438 () Bool)
(declare-fun x3892 () Bool)
(declare-fun x4300 () Bool)
(declare-fun x3893 () Real)
(declare-fun x3868 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x3746 () Real)
(declare-fun x4561 () Real)
(declare-fun x1469 () Real)
(declare-fun x2439 () Real)
(declare-fun x1008 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x330 () Real)
(declare-fun x3451 () Real)
(declare-fun x1464 () Real)
(declare-fun x3649 () Bool)
(declare-fun x3961 () Real)
(declare-fun x3502 () Real)
(declare-fun x2812 () Real)
(declare-fun x3739 () Bool)
(declare-fun x2697 () Real)
(declare-fun x712 () Real)
(declare-fun x3179 () Bool)
(declare-fun x169 () Bool)
(declare-fun x3685 () Real)
(declare-fun x320 () Real)
(declare-fun x3234 () x2327)
(declare-fun x2877 () Bool)
(declare-fun x3333 () Real)
(declare-fun x1591 () Real)
(declare-fun x3834 () Real)
(declare-fun x3238 () Real)
(declare-fun x2274 () Real)
(declare-fun x2963 () Real)
(declare-fun x3144 () Real)
(declare-fun x4476 () Bool)
(declare-fun x1001 () Real)
(declare-fun x1632 () x2327)
(declare-fun x2420 () Real)
(declare-fun x4795 () Real)
(declare-fun x1264 () Real)
(declare-fun x435 () Real)
(declare-fun x1927 () Real)
(declare-fun x1155 () Bool)
(declare-fun x1732 () Real)
(declare-fun x4229 () Real)
(declare-fun x801 () Real)
(declare-fun x1472 () Real)
(declare-fun x220 () Real)
(declare-fun x1969 () Bool)
(declare-fun x1317 () Real)
(declare-fun x3632 () x2327)
(declare-fun x2212 () Bool)
(declare-fun x3664 () Real)
(declare-fun x2704 () Real)
(declare-fun x4422 () Real)
(declare-fun x1370 () Bool)
(declare-fun x3304 () Real)
(declare-fun x1298 () Real)
(declare-fun x3307 () Real)
(declare-fun x2280 () Real)
(declare-fun x3762 () Bool)
(declare-fun x4854 () Bool)
(declare-fun x4346 () Bool)
(declare-fun x1895 () x2327)
(declare-fun x2888 () Bool)
(declare-fun x4918 () Real)
(declare-fun x3168 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x45 () x2327)
(declare-fun x4393 () Real)
(declare-fun x695 (Real) Real)
(declare-fun x3247 () Real)
(declare-fun x1466 () Real)
(declare-fun x4630 () Real)
(declare-fun x1250 () Real)
(declare-fun x1903 () Real)
(declare-fun x4649 () Bool)
(declare-fun x1502 () Real)
(declare-fun x2232 () Real)
(declare-fun x2108 () Bool)
(declare-fun x1086 () Real)
(declare-fun x4901 () Real)
(declare-fun x562 () Real)
(declare-fun x1306 () Real)
(declare-fun x2025 () Bool)
(declare-fun x2516 (x2327) Real)
(declare-fun x1047 () Real)
(declare-fun x1683 () Bool)
(declare-fun x3754 () x2327)
(declare-fun x4470 () Real)
(declare-fun x4242 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x2855 () Real)
(declare-fun x2237 (Real) Real)
(declare-fun x3120 () Bool)
(declare-fun x4723 () Bool)
(declare-fun x4209 () Bool)
(declare-fun x2177 () Real)
(declare-fun x1015 () Real)
(declare-fun x3555 () Real)
(declare-fun x841 () Real)
(declare-fun x2601 () Bool)
(declare-fun x3897 () Real)
(declare-fun x3489 () Bool)
(declare-fun x543 () Real)
(declare-fun x2542 () Real)
(declare-fun x4499 () Real)
(declare-fun x2802 () Real)
(declare-fun x3772 () Real)
(declare-fun x3107 () x2327)
(declare-fun x1659 () Bool)
(declare-fun x1849 () Real)
(declare-fun x1638 () Real)
(declare-fun x1729 () Real)
(declare-fun x4085 () Bool)
(declare-fun x3155 (Real) Real)
(declare-fun x3421 () Real)
(declare-fun x944 () Bool)
(declare-fun x3675 () Real)
(declare-fun x905 () Real)
(declare-fun x1362 () Real)
(declare-fun x526 () Bool)
(declare-fun x96 () Real)
(declare-fun x3903 () Real)
(declare-fun x4302 () Bool)
(declare-fun x2487 () Real)
(declare-fun x2032 () Bool)
(declare-fun x3081 () x2327)
(declare-fun x4722 () Bool)
(declare-fun x2019 () Real)
(declare-fun x3584 () Bool)
(declare-fun x4558 () Real)
(declare-fun x771 () Bool)
(declare-fun x1915 () Real)
(declare-fun x4663 () Bool)
(declare-fun x4396 () x2327)
(declare-fun x1465 () Bool)
(declare-fun x4401 () Bool)
(declare-fun x1560 (Real) Real)
(declare-fun x2269 (x2327) Real)
(declare-fun x4792 () Real)
(declare-fun x1325 (x2327) Real)
(declare-fun x2839 () Real)
(declare-fun x519 () Real)
(declare-fun x4014 () Bool)
(declare-fun x79 () Bool)
(declare-fun x2889 () Real)
(declare-fun x1180 () Real)
(declare-fun x692 () Bool)
(declare-fun x3381 () Real)
(declare-fun x1403 () Bool)
(declare-fun x2954 () Real)
(declare-fun x4200 () Bool)
(declare-fun x3076 () Bool)
(declare-fun x4061 (Real) Real)
(declare-fun x3213 () x2327)
(declare-fun x1251 () Real)
(declare-fun x1138 (Real) Real)
(declare-fun x807 () Real)
(declare-fun x2790 () Real)
(declare-fun x720 () Real)
(declare-fun x943 () x2327)
(declare-fun x1820 () x2327)
(declare-fun x2628 () Real)
(declare-fun x4989 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x690 () Real)
(declare-fun x2663 () Bool)
(declare-fun x4584 () Real)
(declare-fun x2503 () Bool)
(declare-fun x3334 () Bool)
(declare-fun x2013 () Real)
(declare-fun x2738 () Real)
(declare-fun x2150 () Real)
(declare-fun x3836 () Real)
(declare-fun x1257 () x2327)
(declare-fun x2636 () Real)
(declare-fun x3966 () Real)
(declare-fun x2683 () Real)
(declare-fun x1481 () Real)
(declare-fun x3265 () Real)
(declare-fun x3391 () Bool)
(declare-fun x3207 () x2327)
(declare-fun x823 () Bool)
(declare-fun x587 () Real)
(declare-fun x1290 () Real)
(declare-fun x576 () Bool)
(declare-fun x4005 () Real)
(declare-fun x252 () Real)
(declare-fun x4636 () Bool)
(declare-fun x4471 () Bool)
(declare-fun x523 () Real)
(declare-fun x4694 () Bool)
(declare-fun x604 () Real)
(declare-fun x4074 () Real)
(declare-fun x3816 () Bool)
(declare-fun x3477 () Bool)
(declare-fun x3905 () x2327)
(declare-fun x4182 () Real)
(declare-fun x1172 () Real)
(declare-fun x2905 () Real)
(declare-fun x2096 () Real)
(declare-fun x4527 () x2327)
(declare-fun x413 () Bool)
(declare-fun x3831 () Bool)
(declare-fun x1123 () Real)
(declare-fun x4315 () Real)
(declare-fun x2352 () x2327)
(declare-fun x4172 () Bool)
(declare-fun x363 () Bool)
(declare-fun x596 () Real)
(declare-fun x1409 () Bool)
(declare-fun x1784 () Real)
(declare-fun x3712 () Real)
(declare-fun x1851 () Bool)
(declare-fun x3997 () Real)
(declare-fun x1114 () Real)
(declare-fun x4755 () Bool)
(declare-fun x933 () Bool)
(declare-fun x1884 () Real)
(declare-fun x1715 () Real)
(declare-fun x4208 () x2327)
(declare-fun x1511 () Real)
(declare-fun x2163 () Real)
(declare-fun x4806 () Bool)
(declare-fun x1310 () Real)
(declare-fun x2062 () Real)
(declare-fun x1359 () Real)
(declare-fun x3006 () Bool)
(declare-fun x1600 () Real)
(declare-fun x2457 () Bool)
(declare-fun x899 () Real)
(declare-fun x1866 () Real)
(declare-fun x4807 () Real)
(declare-fun x3115 () Real)
(declare-fun x2136 () Bool)
(declare-fun x4617 () Real)
(declare-fun x917 () Bool)
(declare-fun x3923 () Real)
(declare-fun x353 () Real)
(declare-fun x4385 () Real)
(declare-fun x1161 () Real)
(declare-fun x4057 (Real) Real)
(declare-fun x2195 () Bool)
(declare-fun x3597 () Real)
(declare-fun x840 () Bool)
(declare-fun x3031 (x2327) Real)
(declare-fun x607 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x558 () Real)
(declare-fun x3837 () Real)
(declare-fun x4494 () Bool)
(declare-fun x4269 () Real)
(declare-fun x446 () x2327)
(declare-fun x1366 () Bool)
(declare-fun x2674 () Real)
(declare-fun x23 () Bool)
(declare-fun x489 (Real) Real)
(declare-fun x256 () Bool)
(declare-fun x1457 () Real)
(declare-fun x3024 () Bool)
(declare-fun x973 () Bool)
(declare-fun x4050 () Real)
(declare-fun x4070 () x2327)
(declare-fun x2846 () x2327)
(declare-fun x1055 () Real)
(declare-fun x4153 () Bool)
(declare-fun x4728 () Bool)
(declare-fun x3842 () Real)
(declare-fun x1286 () Bool)
(declare-fun x1204 () Real)
(declare-fun x329 () Real)
(declare-fun x77 () Real)
(declare-fun x3328 () Real)
(declare-fun x4177 () Bool)
(declare-fun x542 () Bool)
(declare-fun x1590 () Real)
(declare-fun x3108 () Real)
(declare-fun x3490 () Real)
(declare-fun x3084 () Bool)
(declare-fun x3607 () Real)
(declare-fun x766 () Real)
(declare-fun x4163 () Bool)
(declare-fun x3929 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x4770 () Bool)
(declare-fun x1400 () Real)
(declare-fun x2402 () Real)
(declare-fun x2972 () Bool)
(declare-fun x2979 () Real)
(declare-fun x440 () Real)
(declare-fun x1256 () Real)
(declare-fun x1000 () Real)
(declare-fun x3881 () Bool)
(declare-fun x1182 () Real)
(declare-fun x1249 () Real)
(declare-fun x2400 () Real)
(declare-fun x3830 () Bool)
(declare-fun x1781 () Real)
(declare-fun x2179 () x2327)
(declare-fun x2765 () Bool)
(declare-fun x2353 () Bool)
(declare-fun x362 () Real)
(declare-fun x3605 () Real)
(declare-fun x928 () Real)
(declare-fun x1662 () Real)
(declare-fun x2964 () Bool)
(declare-fun x4363 () x2327)
(declare-fun x546 (Real) Real)
(declare-fun x877 () Bool)
(declare-fun x2660 () Real)
(declare-fun x188 () Real)
(declare-fun x3455 () Real)
(declare-fun x3514 () Real)
(declare-fun x1482 () Real)
(declare-fun x2348 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x2196 () Bool)
(declare-fun x653 () Real)
(declare-fun x1719 () Real)
(declare-fun x1283 () Real)
(declare-fun x863 () Real)
(declare-fun x3417 () x2327)
(declare-fun x3289 () Real)
(declare-fun x1985 () Real)
(declare-fun x2378 () Real)
(declare-fun x1987 () Real)
(declare-fun x4944 () Bool)
(declare-fun x4718 () Real)
(declare-fun x740 () Real)
(declare-fun x2034 () Real)
(declare-fun x3026 () Real)
(declare-fun x1025 () Real)
(declare-fun x2991 () Bool)
(declare-fun x2581 () Real)
(declare-fun x1119 () Bool)
(declare-fun x2337 () Real)
(declare-fun x3577 () Bool)
(declare-fun x3471 () Bool)
(declare-fun x3582 () Real)
(declare-fun x1486 () Bool)
(declare-fun x2256 () Real)
(declare-fun x2016 () Bool)
(declare-fun x826 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x832 () Bool)
(declare-fun x4111 () Bool)
(declare-fun x3434 () Bool)
(declare-fun x2098 (x2327) Real)
(declare-fun x3481 () Real)
(declare-fun x2716 () Bool)
(declare-fun x983 (Real) Real)
(declare-fun x1006 () Real)
(declare-fun x966 () Real)
(declare-fun x62 () Bool)
(declare-fun x2646 () Real)
(declare-fun x4000 () Real)
(declare-fun x1448 () Bool)
(declare-fun x780 () Real)
(declare-fun x794 () Real)
(declare-fun x2241 () x2327)
(declare-fun x368 () Real)
(declare-fun x3770 () Bool)
(declare-fun x3404 () Bool)
(declare-fun x427 () Real)
(declare-fun x4211 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x600 () Real)
(declare-fun x1487 () Bool)
(declare-fun x536 () Bool)
(declare-fun x3509 () Bool)
(declare-fun x2555 () Bool)
(declare-fun x3395 () Real)
(declare-fun x1947 () Bool)
(declare-fun x805 () Bool)
(declare-fun x189 () Real)
(declare-fun x4662 (x2327) Real)
(declare-fun x1835 () Real)
(declare-fun x1002 () Bool)
(declare-fun x527 () Bool)
(declare-fun x2875 () Bool)
(declare-fun x1219 () Real)
(declare-fun x1332 () Bool)
(declare-fun x2574 () Real)
(declare-fun x4273 (Real) Real)
(declare-fun x3750 () Real)
(declare-fun x4591 () Bool)
(declare-fun x734 () Real)
(declare-fun x3146 () Bool)
(declare-fun x75 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x2714 () Real)
(declare-fun x1242 () Real)
(declare-fun x4329 () Real)
(declare-fun x2968 () Real)
(declare-fun x4765 () Real)
(declare-fun x502 () Real)
(declare-fun x2501 () Bool)
(declare-fun x1377 (x2327) Real)
(declare-fun x1142 () Real)
(declare-fun x2545 () Real)
(declare-fun x552 () Real)
(declare-fun x704 () Real)
(declare-fun x2092 () Real)
(declare-fun x914 () Real)
(declare-fun x415 () Real)
(declare-fun x327 () x2327)
(declare-fun x197 () Real)
(declare-fun x3320 () Real)
(declare-fun x204 () Real)
(declare-fun x2819 () x2327)
(declare-fun x3979 () Real)
(declare-fun x981 () Real)
(declare-fun x1624 () Real)
(declare-fun x2743 () Real)
(declare-fun x3780 () Bool)
(declare-fun x645 () Bool)
(declare-fun x4798 (x2327) Real)
(declare-fun x3295 () Real)
(declare-fun x1693 () Real)
(declare-fun x2612 () Bool)
(declare-fun x3692 () Bool)
(declare-fun x1017 () Real)
(declare-fun x1238 () Bool)
(declare-fun x2511 () Real)
(declare-fun x4129 () Real)
(declare-fun x2504 () Real)
(declare-fun x2864 () Bool)
(declare-fun x4051 () Real)
(declare-fun x2673 () Real)
(declare-fun x2726 () Bool)
(declare-fun x116 () x2327)
(declare-fun x1102 (x2327) Real)
(declare-fun x4186 (x2327) Real)
(declare-fun x911 () Bool)
(declare-fun x4065 () Bool)
(declare-fun x1745 () Real)
(declare-fun x389 () Bool)
(declare-fun x412 () Bool)
(declare-fun x2695 () Real)
(declare-fun x19 () Bool)
(declare-fun x369 () x2327)
(declare-fun x2007 (Real) Real)
(declare-fun x988 () Real)
(declare-fun x2338 () Real)
(declare-fun x4437 () Real)
(declare-fun x2671 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x483 () Real)
(declare-fun x2292 () Bool)
(declare-fun x2304 () Real)
(declare-fun x4123 () Real)
(declare-fun x3574 () Real)
(declare-fun x3357 () x2327)
(declare-fun x3252 () Bool)
(declare-fun x1544 () Real)
(declare-fun x2909 () Bool)
(declare-fun x1534 () Real)
(declare-fun x503 () Real)
(declare-fun x3090 () Real)
(declare-fun x4715 () Bool)
(declare-fun x355 () Bool)
(declare-fun x1077 () x2327)
(declare-fun x109 () Real)
(declare-fun x3494 () Bool)
(declare-fun x1087 () Real)
(declare-fun x662 () Bool)
(declare-fun x3984 () Real)
(declare-fun x548 (x2327) Real)
(declare-fun x3967 () Bool)
(declare-fun x121 () Real)
(declare-fun x1716 () Real)
(declare-fun x1663 () Bool)
(declare-fun x4143 () Real)
(declare-fun x4988 () Real)
(declare-fun x1535 () Bool)
(declare-fun x3666 () Bool)
(declare-fun x4206 () Real)
(declare-fun x878 () Bool)
(declare-fun x2362 (x2327) Real)
(declare-fun x1072 () Real)
(declare-fun x748 () Real)
(declare-fun x2339 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x4683 () Bool)
(declare-fun x4759 () Bool)
(declare-fun x4357 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x4779 () Real)
(declare-fun x2227 () Real)
(declare-fun x464 () Bool)
(declare-fun x1111 () x2327)
(declare-fun x1280 () Bool)
(declare-fun x3562 () x2327)
(declare-fun x679 () Real)
(declare-fun x4516 () Bool)
(declare-fun x2036 () Bool)
(declare-fun x4551 () Real)
(declare-fun x2161 () Real)
(declare-fun x3983 () x2327)
(declare-fun x4833 () Real)
(declare-fun x528 () Bool)
(declare-fun x4879 () Bool)
(declare-fun x4391 () Real)
(declare-fun x2643 () Real)
(declare-fun x657 () Real)
(declare-fun x3639 () Real)
(declare-fun x4843 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x2502 (x2327) Real)
(declare-fun x3401 () Bool)
(declare-fun x3468 () Real)
(declare-fun x2283 () Bool)
(declare-fun x3609 () Real)
(declare-fun x1164 () Real)
(declare-fun x2223 () Bool)
(declare-fun x370 () Bool)
(declare-fun x2184 () Real)
(declare-fun x4083 () Bool)
(declare-fun x2881 () Real)
(declare-fun x3650 () Bool)
(declare-fun x3286 () x2327)
(declare-fun x396 () Real)
(declare-fun x901 () Bool)
(declare-fun x2977 () Real)
(declare-fun x3453 () Bool)
(declare-fun x2415 (Real) Real)
(declare-fun x4032 () Real)
(declare-fun x1907 () Bool)
(declare-fun x4367 () Real)
(declare-fun x4629 () Real)
(declare-fun x4573 () Bool)
(declare-fun x309 () Real)
(declare-fun x3744 () Real)
(declare-fun x4641 () x2327)
(declare-fun x1978 () Real)
(declare-fun x1836 (Real) Real)
(declare-fun x1577 () Real)
(declare-fun x967 () Real)
(declare-fun x2026 () Bool)
(declare-fun x3342 () Real)
(declare-fun x3939 () Bool)
(declare-fun x1739 () Real)
(declare-fun x1864 () Bool)
(declare-fun x3742 () Real)
(declare-fun x964 () Real)
(declare-fun x450 () Real)
(declare-fun x2289 () Real)
(declare-fun x2778 () Bool)
(declare-fun x4454 () Bool)
(declare-fun x3445 () Real)
(declare-fun x3367 () Real)
(declare-fun x3870 () Bool)
(declare-fun x3256 () Real)
(declare-fun x4312 () Bool)
(declare-fun x3048 () Real)
(declare-fun x2104 () Bool)
(declare-fun x4137 () Bool)
(declare-fun x857 () Real)
(declare-fun x400 () Real)
(declare-fun x2471 (x2327) Real)
(declare-fun x3901 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x2799 () Real)
(declare-fun x3811 () Bool)
(declare-fun x4133 () Real)
(declare-fun x4687 () Bool)
(declare-fun x2170 () Real)
(declare-fun x3046 () Bool)
(declare-fun x1942 () x2327)
(declare-fun x4569 () Real)
(declare-fun x3839 () Real)
(define-fun x2808 ((x2327 x2327) (x1056 Real)) x2327 (ite ((_ is x1886) x2327) (x1886 (x2677 x2327) (+ x1056 (x2253 x2327))) (ite ((_ is x4101) x2327) (x4101 (x1285 x2327) (x3487 x2327) (+ x1056 (x51 x2327))) (x4822 (+ (x2112 x2327) x1056)))))
(define-fun x1229 ((x4531 Real)) Real (ite (and (>= x4531 0) (< x4531 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4531 (- x4531 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x4575 ((x4531 Real)) Real (ite (and (>= x4531 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x4531)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4531) x4531))
(define-fun x1513 ((x1067 Real)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1067) (>= x1067 0)))
(define-fun x66 ((x1067 Real)) Bool (and (= x1067 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1067)) (= (x1319 x1067 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1067)))
(define-fun x1263 ((x1067 Real)) Bool (and (= 0 (x1319 x1067 0)) (= 0 (x1319 0 x1067))))
(define-fun x3872 ((x1067 Real)) Bool (= x1067 (x1319 x1067 x1067)))
(define-fun x3166 ((x1067 Real)) Bool (and (x3872 x1067) (x1263 x1067) (x66 x1067)))
(define-fun x445 ((x1067 Real)) Bool (= (x1319 255 (x1319 255 x1067)) (x1319 255 x1067)))
(define-fun x3028 ((x1067 Real)) Bool (=> (and (<= 0 x1067) (> 256 x1067)) (= x1067 (x1319 255 x1067))))
(define-fun x3575 ((x1067 Real)) Bool (=> (= x1067 (x1319 255 x1067)) (and (> 256 x1067) (<= 0 x1067))))
(define-fun x1670 ((x1067 Real)) Bool (=> (and (> 512 x1067) (<= 256 x1067)) (= (- x1067 256) (x1319 255 x1067))))
(define-fun x3557 ((x1067 Real) (x3092 Real)) Bool (and (<= 0 x3092) (= (+ (x1319 255 x1067) (* x3092 256)) x1067)))
(define-fun x3945 ((x1067 Real) (x2346 Real)) Bool (and (x445 x1067) (x1670 x1067) (x3557 x1067 x2346) (x3575 x1067) (x3028 x1067)))
(define-fun x2146 ((x1067 Real) (x3092 Real)) Bool (= (x1319 x3092 x1067) (x1319 x1067 x3092)))
(define-fun x3364 ((x1067 Real) (x3092 Real)) Bool (and (=> (<= 0 x3092) (>= x3092 (x1319 x1067 x3092))) (=> (<= 0 x1067) (>= x1067 (x1319 x1067 x3092))) (>= (x1319 x1067 x3092) 0)))
(define-fun x2143 ((x1067 Real) (x3092 Real)) Bool (and (x2146 x1067 x3092) (x3364 x1067 x3092)))
(define-fun x1564 ((x1067 Real) (x2346 Real)) Bool (and (x3945 x1067 x2346) (x2143 x1067 255)))
(define-fun x2194 ((x1067 Real)) Bool (= (x1319 115792089237316195423570984636004990333889740523700931696805413995650331181055 (x1319 115792089237316195423570984636004990333889740523700931696805413995650331181055 x1067)) (x1319 115792089237316195423570984636004990333889740523700931696805413995650331181055 x1067)))
(define-fun x4196 ((x1067 Real)) Bool (=> (and (>= x1067 0) (> 1461501637330902918203684832716283019655932542976 x1067)) (= x1067 (x1319 115792089237316195423570984636004990333889740523700931696805413995650331181055 x1067))))
(define-fun x836 ((x1067 Real) (x3092 Real) (x4459 Real) (x4982 Real)) Bool (and (<= 0 x4459) (> 309485009821345068724781056 x4982) (= (+ (* 374144419156711147060143317175368453031918731001856 x4982) x3092 (* 1461501637330902918203684832716283019655932542976 x4459)) x1067) (>= x3092 0) (> 1461501637330902918203684832716283019655932542976 x3092) (>= x4982 0) (< x4459 256) (= (+ (* 374144419156711147060143317175368453031918731001856 x4982) x3092) (x1319 115792089237316195423570984636004990333889740523700931696805413995650331181055 x1067))))
(define-fun x703 ((x1067 Real) (x4820 Real) (x2870 Real) (x4469 Real)) Bool (and (x836 x1067 x4820 x2870 x4469) (x2194 x1067) (x4196 x1067)))
(define-fun x305 ((x1067 Real) (x4820 Real) (x2870 Real) (x4469 Real)) Bool (and (x2143 x1067 115792089237316195423570984636004990333889740523700931696805413995650331181055) (x703 x1067 x4820 x2870 x4469)))
(define-fun x2619 ((x1067 Real)) Bool (= (x1319 372682917519380244141939632342652170012262798458880 x1067) (x1319 372682917519380244141939632342652170012262798458880 (x1319 372682917519380244141939632342652170012262798458880 x1067))))
(define-fun x4270 ((x1067 Real)) Bool (=> (and (< x1067 1461501637330902918203684832716283019655932542976) (<= 0 x1067)) (= 0 (x1319 372682917519380244141939632342652170012262798458880 x1067))))
(define-fun x104 ((x1067 Real) (x3092 Real) (x4459 Real) (x4982 Real)) Bool (and (= x1067 (+ x3092 (* x4459 1461501637330902918203684832716283019655932542976) (* x4982 374144419156711147060143317175368453031918731001856))) (< x4982 309485009821345068724781056) (> 256 x4459) (= (* 1461501637330902918203684832716283019655932542976 x4459) (x1319 372682917519380244141939632342652170012262798458880 x1067)) (>= x4982 0) (>= x4459 0) (< x3092 1461501637330902918203684832716283019655932542976) (>= x3092 0)))
(define-fun x4377 ((x1067 Real) (x4820 Real) (x2870 Real) (x4469 Real)) Bool (and (x2619 x1067) (x104 x1067 x4820 x2870 x4469) (x4270 x1067)))
(define-fun x4263 ((x1067 Real) (x4820 Real) (x2870 Real) (x4469 Real)) Bool (and (x4377 x1067 x4820 x2870 x4469) (x2143 x1067 372682917519380244141939632342652170012262798458880)))
(define-fun x1841 ((x1067 Real)) Bool (= (x1319 18446744073709551615 x1067) (x1319 18446744073709551615 (x1319 18446744073709551615 x1067))))
(define-fun x247 ((x1067 Real)) Bool (=> (and (< x1067 18446744073709551616) (>= x1067 0)) (= x1067 (x1319 18446744073709551615 x1067))))
(define-fun x3586 ((x1067 Real)) Bool (=> (= x1067 (x1319 18446744073709551615 x1067)) (and (< x1067 18446744073709551616) (<= 0 x1067))))
(define-fun x3442 ((x1067 Real)) Bool (=> (and (<= 18446744073709551616 x1067) (< x1067 36893488147419103232)) (= (x1319 18446744073709551615 x1067) (- x1067 18446744073709551616))))
(define-fun x4726 ((x1067 Real) (x3092 Real)) Bool (and (= (+ (* x3092 18446744073709551616) (x1319 18446744073709551615 x1067)) x1067) (<= 0 x3092)))
(define-fun x2440 ((x1067 Real) (x2346 Real)) Bool (and (x3586 x1067) (x3442 x1067) (x247 x1067) (x4726 x1067 x2346) (x1841 x1067)))
(define-fun x4187 ((x1067 Real) (x2346 Real)) Bool (and (x2143 x1067 18446744073709551615) (x2440 x1067 x2346)))
(define-fun x1804 ((x1067 Real)) Bool (= (x1319 1461501637330902918203684832716283019655932542975 x1067) (x1319 1461501637330902918203684832716283019655932542975 (x1319 1461501637330902918203684832716283019655932542975 x1067))))
(define-fun x759 ((x1067 Real)) Bool (=> (and (<= 0 x1067) (> 1461501637330902918203684832716283019655932542976 x1067)) (= (x1319 1461501637330902918203684832716283019655932542975 x1067) x1067)))
(define-fun x2133 ((x1067 Real)) Bool (=> (= x1067 (x1319 1461501637330902918203684832716283019655932542975 x1067)) (and (< x1067 1461501637330902918203684832716283019655932542976) (<= 0 x1067))))
(define-fun x2788 ((x1067 Real)) Bool (=> (and (< x1067 2923003274661805836407369665432566039311865085952) (>= x1067 1461501637330902918203684832716283019655932542976)) (= (x1319 1461501637330902918203684832716283019655932542975 x1067) (- x1067 1461501637330902918203684832716283019655932542976))))
(define-fun x3874 ((x1067 Real) (x3092 Real)) Bool (and (= (+ (x1319 1461501637330902918203684832716283019655932542975 x1067) (* 1461501637330902918203684832716283019655932542976 x3092)) x1067) (<= 0 x3092)))
(define-fun x3073 ((x1067 Real) (x2346 Real)) Bool (and (x1804 x1067) (x2788 x1067) (x759 x1067) (x2133 x1067) (x3874 x1067 x2346)))
(define-fun x2349 ((x1067 Real) (x2346 Real)) Bool (and (x3073 x1067 x2346) (x2143 x1067 1461501637330902918203684832716283019655932542975)))
(define-fun x3198 ((x1067 Real)) Bool (= (x1319 4294967295 (x1319 4294967295 x1067)) (x1319 4294967295 x1067)))
(define-fun x1160 ((x1067 Real)) Bool (=> (and (> 4294967296 x1067) (>= x1067 0)) (= x1067 (x1319 4294967295 x1067))))
(define-fun x3606 ((x1067 Real)) Bool (=> (= (x1319 4294967295 x1067) x1067) (and (<= 0 x1067) (> 4294967296 x1067))))
(define-fun x2097 ((x1067 Real)) Bool (=> (and (<= 4294967296 x1067) (> 8589934592 x1067)) (= (x1319 4294967295 x1067) (- x1067 4294967296))))
(define-fun x1621 ((x1067 Real) (x3092 Real)) Bool (and (= (+ (x1319 4294967295 x1067) (* 4294967296 x3092)) x1067) (<= 0 x3092)))
(define-fun x754 ((x1067 Real) (x2346 Real)) Bool (and (x3198 x1067) (x1621 x1067 x2346) (x2097 x1067) (x1160 x1067) (x3606 x1067)))
(define-fun x2072 ((x1067 Real) (x2346 Real)) Bool (and (x2143 x1067 4294967295) (x754 x1067 x2346)))
(define-fun x965 ((x1067 Real)) Bool (= (x1319 65535 (x1319 65535 x1067)) (x1319 65535 x1067)))
(define-fun x4442 ((x1067 Real)) Bool (=> (and (>= x1067 0) (> 65536 x1067)) (= x1067 (x1319 65535 x1067))))
(define-fun x289 ((x1067 Real)) Bool (=> (= (x1319 65535 x1067) x1067) (and (>= x1067 0) (< x1067 65536))))
(define-fun x4539 ((x1067 Real)) Bool (=> (and (<= 65536 x1067) (< x1067 131072)) (= (x1319 65535 x1067) (- x1067 65536))))
(define-fun x4713 ((x1067 Real) (x3092 Real)) Bool (and (>= x3092 0) (= (+ (* x3092 65536) (x1319 65535 x1067)) x1067)))
(define-fun x36 ((x1067 Real) (x2346 Real)) Bool (and (x289 x1067) (x965 x1067) (x4539 x1067) (x4713 x1067 x2346) (x4442 x1067)))
(define-fun x1498 ((x1067 Real) (x2346 Real)) Bool (and (x36 x1067 x2346) (x2143 x1067 65535)))
(define-fun x2520 ((x1067 Real)) Bool (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1067)) (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1067)))
(define-fun x555 ((x1067 Real)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x1067) (<= 0 x1067)) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1067) 0)))
(define-fun x3937 ((x1067 Real) (x3092 Real) (x4459 Real) (x4982 Real)) Bool (and (<= 0 x4982) (= x1067 (+ (* x4982 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3092 (* 1461501637330902918203684832716283019655932542976 x4459))) (< x3092 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 x4459) (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1067)) (<= 0 x4459) (> 1 x4982) (> 79228162514264337593543950336 x4459) (<= 0 x3092)))
(define-fun x1412 ((x1067 Real) (x4820 Real) (x2870 Real) (x4469 Real)) Bool (and (x555 x1067) (x3937 x1067 x4820 x2870 x4469) (x2520 x1067)))
(define-fun x778 ((x1067 Real) (x4820 Real) (x2870 Real) (x4469 Real)) Bool (and (x1412 x1067 x4820 x2870 x4469) (x2143 x1067 115792089237316195423570985007226406215939081747436879206741300988257197096960)))
(define-fun x431 ((x1067 Real)) Bool (= (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x1067) (x1319 26959946667150639794667015087019630673637144422540572481103610249215 (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x1067))))
(define-fun x3305 ((x1067 Real)) Bool (=> (and (< x1067 26959946667150639794667015087019630673637144422540572481103610249216) (>= x1067 0)) (= x1067 (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x1067))))
(define-fun x3205 ((x1067 Real)) Bool (=> (= x1067 (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x1067)) (and (<= 0 x1067) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1067))))
(define-fun x3212 ((x1067 Real)) Bool (=> (and (>= x1067 26959946667150639794667015087019630673637144422540572481103610249216) (< x1067 53919893334301279589334030174039261347274288845081144962207220498432)) (= (- x1067 26959946667150639794667015087019630673637144422540572481103610249216) (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x1067))))
(define-fun x803 ((x1067 Real) (x3092 Real)) Bool (and (= x1067 (+ (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x1067) (* x3092 26959946667150639794667015087019630673637144422540572481103610249216))) (<= 0 x3092)))
(define-fun x3437 ((x1067 Real) (x2346 Real)) Bool (and (x3205 x1067) (x803 x1067 x2346) (x3305 x1067) (x431 x1067) (x3212 x1067)))
(define-fun x934 ((x1067 Real) (x2346 Real)) Bool (and (x2143 x1067 26959946667150639794667015087019630673637144422540572481103610249215) (x3437 x1067 x2346)))
(define-fun x2960 ((x1067 Real)) Bool (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1067)) (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1067)))
(define-fun x3336 ((x1067 Real)) Bool (=> (and (>= x1067 0) (> 32 x1067)) (= 0 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1067))))
(define-fun x1188 ((x1067 Real) (x3092 Real) (x4459 Real) (x4982 Real)) Bool (and (> 1 x4982) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4982) x3092 (* 32 x4459)) x1067) (<= 0 x3092) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x4459) (> 32 x3092) (<= 0 x4459) (= (* x4459 32) (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1067)) (<= 0 x4982)))
(define-fun x2550 ((x1067 Real) (x4820 Real) (x2870 Real) (x4469 Real)) Bool (and (x1188 x1067 x4820 x2870 x4469) (x3336 x1067) (x2960 x1067)))
(define-fun x4612 ((x1067 Real) (x4820 Real) (x2870 Real) (x4469 Real)) Bool (and (x2143 x1067 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2550 x1067 x4820 x2870 x4469)))
(define-fun x2557 ((x1213 x2327)) Real (ite (= (x1894 x2008) x1213) x2653 (x1031 x1213)))
(define-fun x874 ((x1213 x2327)) Real (ite (= (x1894 x2747) x1213) x1112 (x1031 x1213)))
(define-fun x324 ((x1213 x2327)) Real (ite (= x3420 x1213) x3801 (x1939 x1213)))
(define-fun x4197 ((x1213 x2327)) Real (ite (= x1213 x2192) x2084 (x324 x1213)))
(define-fun x4554 ((x1213 x2327)) Real (ite (= x1213 x1082) x552 (x4197 x1213)))
(define-fun x1982 ((x1213 x2327)) Real (ite (= x1213 x3822) x2711 (x4554 x1213)))
(define-fun x2602 ((x1213 x2327)) Real (ite (and x3982 x3236) (x1982 x1213) (x1939 x1213)))
(define-fun x1147 ((x1213 x2327)) Real (ite (= x1213 x3403) x4833 (x1983 x1213)))
(define-fun x2817 ((x1213 x2327)) Real (ite (= x2111 x1213) x1452 (x1147 x1213)))
(define-fun x1900 ((x1213 x2327)) Real (ite (= x2941 x1213) x1675 (x2817 x1213)))
(define-fun x3934 ((x1213 x2327)) Real (ite (= x4208 x1213) x2790 (x1900 x1213)))
(define-fun x1504 ((x1213 x2327)) Real (ite x674 (ite (and x4346 x4128) (x3934 x1213) (x1983 x1213)) (x1983 x1213)))
(define-fun x888 ((x1213 x2327)) Real (ite (= x1213 x634) x3229 (x1504 x1213)))
(define-fun x1815 ((x1213 x2327)) Real (ite (= x1213 x216) x89 (x888 x1213)))
(define-fun x3640 ((x1213 x2327)) Real (ite (= x1213 x1632) x178 (x1815 x1213)))
(define-fun x1852 ((x1213 x2327)) Real (ite x4941 (x3640 x1213) (x1377 x1213)))
(define-fun x2295 ((x1213 x2327)) Real (ite (= x281 x1213) x1612 (x1625 x1213)))
(define-fun x4509 ((x1213 x2327)) Real (ite (= x1213 x882) x2828 (x2295 x1213)))
(define-fun x3726 ((x1213 x2327)) Real (ite (and x3236 x3982) (x1625 x1213) (ite (and x2552 x576) (x4509 x1213) (x1625 x1213))))
(define-fun x4435 ((x1213 x2327)) Real (ite (and x877 x570) (x1633 x1213) (x1625 x1213)))
(define-fun x4425 ((x1213 x2327)) Real (ite (= x1213 x2749) x4926 (x130 x1213)))
(define-fun x4548 ((x1213 x2327)) Real (ite (= x4517 x1213) x3888 (x4425 x1213)))
(define-fun x196 ((x1213 x2327)) Real (ite (and x2519 x3967 x1313 (not x2648)) (x2362 x1213) (x130 x1213)))
(define-fun x3791 ((x1213 x2327)) Real (ite (= x764 x1213) x1964 (x4568 x1213)))
(define-fun x4090 ((x1213 x2327)) Real (ite (= x1397 x1213) x4262 (x3791 x1213)))
(define-fun x4086 ((x1213 x2327)) Real (ite (= x1213 x2816) x4721 (x3846 x1213)))
(define-fun x24 ((x1213 x2327)) Real (ite (= x1213 x223) x415 (x4086 x1213)))
(define-fun x64 ((x1213 x2327)) Real (ite (and x865 (not x3527) x4586 x1980) (x3636 x1213) (x3846 x1213)))
(define-fun x4155 ((x1213 x2327)) Real (ite (and x2275 x4941 x1191) (x2777 x1213) (x208 x1213)))
(define-fun x3890 ((x1213 x2327)) Real (ite (= x1213 x3864) x1342 (x3126 x1213)))
(define-fun x3281 ((x1213 x2327)) Real (ite (= x4373 x1213) x4058 (x3890 x1213)))
(define-fun x3244 ((x1213 x2327)) Real (ite (and x3982 x3236) (x3126 x1213) (ite (and x576 x2552) (x3126 x1213) (x3281 x1213))))
(define-fun x3171 ((x1213 x2327)) Real (ite (and x570 x877) (x123 x1213) (x3126 x1213)))
(define-fun x4743 ((x1213 x2327)) Real (ite (= x1934 x1213) x4569 (x102 x1213)))
(define-fun x4644 ((x1213 x2327)) Real (ite (= x1874 x1213) x493 (x4743 x1213)))
(define-fun x4924 ((x1213 x2327)) Real (ite (and x1313 (not x2648) x3967 x2519) (x3989 x1213) (x102 x1213)))
(define-fun x2701 ((x1213 x2327)) Real (ite (= x1213 x3630) x4804 (x572 x1213)))
(define-fun x291 ((x1213 x2327)) Real (ite (= x2379 x1213) x1921 (x2701 x1213)))
(define-fun x4282 ((x1213 x2327)) Real (ite (= x1946 x1213) x139 (x4306 x1213)))
(define-fun x3486 ((x1213 x2327)) Real (ite (= x1213 x3360) x52 (x4282 x1213)))
(define-fun x3587 ((x1213 x2327)) Real (ite (and x865 (not x3527) x1980 x4586) (x3498 x1213) (x4306 x1213)))
(define-fun x539 ((x1213 x2327)) Real (ite (and x4941 x1191 x2275) (x4595 x1213) (x1003 x1213)))
(define-fun x4463 ((x1213 x2327)) Real (ite (= x567 x1213) x1978 (x4506 x1213)))
(define-fun x1861 ((x1213 x2327)) Real (ite (and x3982 x3236) (x4506 x1213) (ite (and x2552 x576) (x4463 x1213) (x4506 x1213))))
(define-fun x2080 ((x1213 x2327)) Real (ite (and x3967 x1313 x2519 (not x2648)) (x4530 x1213) (x1414 x1213)))
(define-fun x3841 ((x1213 x2327)) Real (ite (= x1213 x3376) x3522 (x99 x1213)))
(define-fun x3049 ((x1213 x2327)) Real (ite (and x4586 x865 (not x3527) x1980) (x4837 x1213) (x3389 x1213)))
(define-fun x1769 ((x1213 x2327)) Real (ite (and x1191 x2275 x4941) (x2512 x1213) (x2005 x1213)))
(define-fun x1470 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x1 (x1083 x1213)))
(define-fun x3308 ((x1213 x2327)) Real (ite (= (x1894 x1081) x1213) x1278 (x1470 x1213)))
(define-fun x2923 ((x1213 x2327)) Real (ite (= x1213 (x1894 x1081)) x2131 (x3308 x1213)))
(define-fun x1898 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x1553 (x2923 x1213)))
(define-fun x47 ((x1213 x2327)) Real (ite (and x877 x570) (x4798 x1213) (x1083 x1213)))
(define-fun x3075 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x3178 (x1451 x1213)))
(define-fun x3362 ((x1213 x2327)) Real (ite (= (x1894 x1092) x1213) x3317 (x3075 x1213)))
(define-fun x2688 ((x1213 x2327)) Real (ite (= (x1894 x1092) x1213) x1766 (x3362 x1213)))
(define-fun x2198 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x3928 (x2688 x1213)))
(define-fun x3158 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x558 (x1451 x1213)))
(define-fun x4110 ((x1213 x2327)) Real (ite (= x1213 (x1894 x850)) x686 (x3158 x1213)))
(define-fun x468 ((x1213 x2327)) Real (ite (and x1313 x3967 x2519 (not x2648)) (x2696 x1213) (x4110 x1213)))
(define-fun x1627 ((x1213 x2327)) Real (ite (= (x1894 x850) x1213) x985 (x468 x1213)))
(define-fun x1117 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x2969 (x1627 x1213)))
(define-fun x3670 ((x1213 x2327)) Real (ite x4806 (x2198 x1213) (ite (and x2519 x1313 (not x2648)) (x1117 x1213) (x1451 x1213))))
(define-fun x3541 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x719 (x1720 x1213)))
(define-fun x48 ((x1213 x2327)) Real (ite (= (x1894 x4676) x1213) x4447 (x3541 x1213)))
(define-fun x2452 ((x1213 x2327)) Real (ite (= x1213 (x1894 x4676)) x1037 (x48 x1213)))
(define-fun x1436 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x4680 (x2452 x1213)))
(define-fun x3766 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x2361 (x1720 x1213)))
(define-fun x2406 ((x1213 x2327)) Real (ite (= x1213 (x1894 x2482)) x2341 (x3766 x1213)))
(define-fun x2622 ((x1213 x2327)) Real (ite (and x1980 x865 x4586 (not x3527)) (x1798 x1213) (x2406 x1213)))
(define-fun x2539 ((x1213 x2327)) Real (ite (= (x1894 x2482) x1213) x4896 (x2622 x1213)))
(define-fun x2316 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x2953 (x2539 x1213)))
(define-fun x4192 ((x1213 x2327)) Real (ite (and x2275 x4941 x1191) (x2528 x1213) (x2476 x1213)))
(define-fun x659 ((x1213 x2327)) Real (ite x4941 (ite (and (not x2275) x4941) (x2476 x1213) (x4192 x1213)) (x1031 x1213)))
(define-fun x3318 ((x1213 x2327)) Real (ite (= x1213 x369) x1544 (x3248 x1213)))
(define-fun x4761 ((x1213 x2327)) Real (ite (and x3982 x3236) (x3248 x1213) (ite (and x2552 x576) (x3248 x1213) (x3318 x1213))))
(define-fun x2505 ((x1213 x2327)) Real (ite (and (not x2648) x3967 x1313 x2519) (x2153 x1213) (x4828 x1213)))
(define-fun x2948 ((x1213 x2327)) Real (ite (= x1213 x1895) x740 (x4784 x1213)))
(define-fun x381 ((x1213 x2327)) Real (ite (and x865 (not x3527) x1980 x4586) (x1703 x1213) (x3824 x1213)))
(define-fun x1709 ((x1213 x2327)) Real (ite (and x1191 x4941 x2275) (x548 x1213) (x2502 x1213)))
(define-fun x1912 ((x1213 x2327)) Real (ite (= (x1894 x2008) x1213) x651 (x659 x1213)))
(define-fun x1185 ((x1213 Real)) Real (ite (= x1213 420) x3380 (x4604 x1213)))
(define-fun x343 ((x1213 Real)) Real (ite (= x4079 x1213) 0 (x705 x1213)))
(define-fun x4803 ((x1213 Real)) Real (ite (= x1213 324) x1761 (x2564 x1213)))
(define-fun x1520 ((x1213 Real)) Real (ite (= 324 x1213) x1310 (x2564 x1213)))
(define-fun x2853 ((x1213 Real)) Real (ite (and x1969 x4454) (x2564 x1213) (ite (and x1825 x2984) (x4803 x1213) (x1520 x1213))))
(define-fun x1130 ((x1213 Real)) Real (ite (= 128 x1213) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1699 x1213)))
(define-fun x3952 ((x1213 Real)) Real (ite (= 128 x1213) x2522 (x2237 x1213)))
(define-fun x1381 ((x1213 Real)) Real (ite (= x1213 128) x3524 (x2237 x1213)))
(define-fun x547 ((x1213 Real)) Real (ite (= x1213 128) x1115 (x2237 x1213)))
(define-fun x4654 ((x1213 Real)) Real (ite (and x1858 x4203) (x3952 x1213) (ite (and x3507 x1228) (x1381 x1213) (x547 x1213))))
(define-fun x4487 ((x1213 Real)) Real (ite x1002 (x4654 x1213) (x1699 x1213)))
(define-fun x4787 ((x1213 Real)) Real (ite (= x4145 x1213) 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x4487 x1213)))
(define-fun x2413 ((x1213 Real)) Real (ite (= x1534 x1213) x2419 (x4787 x1213)))
(define-fun x793 ((x1213 Real)) Real (ite (and (> (+ x4145 0) x1213) (>= x1213 x4145)) (x3680 (+ (- x1213 x4145) 0)) (x2007 x1213)))
(define-fun x1345 ((x1213 Real)) Real (ite (= x4145 x1213) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x3163 x1213)))
(define-fun x1995 ((x1213 Real)) Real (ite (= x4145 x1213) x3459 (x1786 x1213)))
(define-fun x3374 ((x1213 Real)) Real (ite (= x1213 x4145) x439 (x1786 x1213)))
(define-fun x1355 ((x1213 Real)) Real (ite (= x1213 x4145) x1990 (x1786 x1213)))
(define-fun x3206 ((x1213 Real)) Real (ite (and x1706 x2436) (x1995 x1213) (ite (and x1349 x3939) (x3374 x1213) (x1355 x1213))))
(define-fun x1880 ((x1213 Real)) Real (ite (= x2905 x1213) x414 (x3154 x1213)))
(define-fun x3747 ((x1213 Real)) Real (ite (= x1213 x1244) 0 (x2981 x1213)))
(define-fun x1389 ((x1213 Real)) Real (ite (= x4205 x1213) x2063 (x1530 x1213)))
(define-fun x1373 ((x1213 Real)) Real (ite (= x4205 x1213) x4566 (x1530 x1213)))
(define-fun x3033 ((x1213 Real)) Real (ite (and (< x1213 (+ x2628 0)) (>= x1213 x2628)) (x3803 (+ (- x1213 x2628) 0)) (x1192 x1213)))
(define-fun x4046 ((x1213 Real)) Real (ite (and (not x4964) x4755 x906 x2645) (x3033 x1213) (x1192 x1213)))
(define-fun x3135 ((x1213 Real)) Real (ite x3426 (ite (and x1308 x4516) (x1389 x1213) (x1373 x1213)) (ite (and x2645 x906 (not x4964)) (x4046 x1213) (x1192 x1213))))
(define-fun x2320 ((x1213 Real)) Real (ite (= x1213 x4633) 904250603428552709895185118199468575982109441609966099573332780532423983104 (x3135 x1213)))
(define-fun x4550 ((x1213 Real)) Real (ite (and (<= x4633 x1213) (> (+ x4633 32) x1213)) (x1326 (+ 0 (- x1213 x4633))) (x3393 x1213)))
(define-fun x1166 ((x1213 Real)) Real (ite (= x1213 x2626) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1836 x1213)))
(define-fun x3518 ((x1213 Real)) Real (ite (= x1213 x2666) 274184521717934524641157099916833587240 (x1166 x1213)))
(define-fun x3040 ((x1213 Real)) Real (ite (= x3703 x1213) x2378 (x3518 x1213)))
(define-fun x1051 ((x1213 x2327)) Real (ite (= x379 x1213) x3048 (x201 x1213)))
(define-fun x4254 ((x1213 x2327)) Real (ite (= x1678 x1213) x4244 (x1051 x1213)))
(define-fun x2313 ((x1213 x2327)) Real (ite (= x3234 x1213) x3979 (x4254 x1213)))
(define-fun x3684 ((x1213 x2327)) Real (ite (= x4411 x1213) x4579 (x2313 x1213)))
(define-fun x534 ((x1213 x2327)) Real (ite (and x1969 x4454) (x3684 x1213) (x201 x1213)))
(define-fun x4162 ((x1213 x2327)) Real (ite (= x1213 x298) x2281 (x1199 x1213)))
(define-fun x1641 ((x1213 x2327)) Real (ite (= x1213 x3052) x676 (x4162 x1213)))
(define-fun x234 ((x1213 x2327)) Real (ite (= x1213 x2746) x3836 (x1641 x1213)))
(define-fun x3233 ((x1213 x2327)) Real (ite (= x2639 x1213) x3654 (x234 x1213)))
(define-fun x3525 ((x1213 x2327)) Real (ite (= x211 x1213) x3781 (x3126 x1213)))
(define-fun x3363 ((x1213 x2327)) Real (ite (= x1586 x1213) x4210 (x3525 x1213)))
(define-fun x119 ((x1213 x2327)) Real (ite (and x4454 x1969) (x3126 x1213) (ite (and x1825 x2984) (x3126 x1213) (x3363 x1213))))
(define-fun x3583 ((x1213 x2327)) Real (ite (and x4678 x1970) (x3432 x1213) (x3126 x1213)))
(define-fun x2655 ((x1213 x2327)) Real (ite (= x1213 x2071) x27 (x1507 x1213)))
(define-fun x4091 ((x1213 x2327)) Real (ite (= x4072 x1213) x4790 (x2655 x1213)))
(define-fun x4518 ((x1213 x2327)) Real (ite (and x906 x2645 x4755 (not x4964)) (x4707 x1213) (x1507 x1213)))
(define-fun x2694 ((x1213 x2327)) Real (ite (= x1213 x3081) x2390 (x4552 x1213)))
(define-fun x3359 ((x1213 x2327)) Real (ite (= x1213 x943) x2464 (x2694 x1213)))
(define-fun x4278 ((x1213 x2327)) Real (ite x3848 (ite (and x2404 x4549) (x4552 x1213) (ite (and x3094 x4935) (x4552 x1213) (x3359 x1213))) (ite (and x2934 x2196 (not x3110)) (x2269 x1213) (x4552 x1213))))
(define-fun x1782 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x2364 (x853 x1213)))
(define-fun x3283 ((x1213 x2327)) Real (ite (= (x1894 x2419) x1213) x96 (x1782 x1213)))
(define-fun x4710 ((x1213 x2327)) Real (ite (= x1213 (x1894 x2419)) x966 (x3283 x1213)))
(define-fun x1727 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x4022 (x4710 x1213)))
(define-fun x1807 ((x1213 x2327)) Real (ite (and x4678 x1970) (x4186 x1213) (x853 x1213)))
(define-fun x811 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x1321 (x3519 x1213)))
(define-fun x131 ((x1213 x2327)) Real (ite (= x1213 (x1894 x1299)) x1869 (x811 x1213)))
(define-fun x3592 ((x1213 x2327)) Real (ite (= x1213 (x1894 x1299)) x314 (x131 x1213)))
(define-fun x3693 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x478 (x3592 x1213)))
(define-fun x752 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x4374 (x3519 x1213)))
(define-fun x2544 ((x1213 x2327)) Real (ite (= x1213 (x1894 x1662)) x4267 (x752 x1213)))
(define-fun x2872 ((x1213 x2327)) Real (ite (and x2645 x906 x4755 (not x4964)) (x1532 x1213) (x2544 x1213)))
(define-fun x581 ((x1213 x2327)) Real (ite (= (x1894 x1662) x1213) x3717 (x2872 x1213)))
(define-fun x3263 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x1408 (x581 x1213)))
(define-fun x4230 ((x1213 x2327)) Real (ite x3426 (x3693 x1213) (ite (and x906 (not x4964) x2645) (x3263 x1213) (x3519 x1213))))
(define-fun x2588 ((x1213 x2327)) Real (ite (= x1213 x488) x3515 (x1625 x1213)))
(define-fun x2804 ((x1213 x2327)) Real (ite (= x1085 x1213) x3772 (x2588 x1213)))
(define-fun x4985 ((x1213 x2327)) Real (ite (and x4454 x1969) (x1625 x1213) (ite (and x2984 x1825) (x2804 x1213) (x1625 x1213))))
(define-fun x1095 ((x1213 x2327)) Real (ite (and x4678 x1970) (x956 x1213) (x1625 x1213)))
(define-fun x4168 ((x1213 x2327)) Real (ite (= x1213 x2297) x4329 (x3661 x1213)))
(define-fun x386 ((x1213 x2327)) Real (ite (= x706 x1213) x270 (x4168 x1213)))
(define-fun x4150 ((x1213 x2327)) Real (ite (and x2645 x4755 x906 (not x4964)) (x3223 x1213) (x3661 x1213)))
(define-fun x1552 ((x1213 x2327)) Real (ite (= x4245 x1213) x2219 (x3031 x1213)))
(define-fun x3497 ((x1213 x2327)) Real (ite (= x1213 x4504) x1918 (x1552 x1213)))
(define-fun x856 ((x1213 x2327)) Real (ite x3848 (ite (and x4549 x2404) (x3031 x1213) (ite (and x4935 x3094) (x3497 x1213) (x3031 x1213))) (ite (and x2196 x2934 (not x3110)) (x2093 x1213) (x3031 x1213))))
(define-fun x4214 ((x1213 Real)) Real (ite (= x1213 x2626) x585 (x1679 x1213)))
(define-fun x3960 ((x1213 Real)) Real (ite (= x2626 x1213) x777 (x1679 x1213)))
(define-fun x1838 ((x1213 Real)) Real (ite (= x1213 x2626) 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x1836 x1213)))
(define-fun x2114 ((x1213 Real)) Real (ite (= x1213 x4258) 274184521717934524641157099916833587240 (x1838 x1213)))
(define-fun x3348 ((x1213 Real)) Real (ite (= x1213 x3797) x807 (x2114 x1213)))
(define-fun x292 ((x1213 Real)) Real (ite (= x2337 x1213) x2771 (x3348 x1213)))
(define-fun x816 ((x1213 Real)) Real (ite (= x1213 x1833) x2892 (x292 x1213)))
(define-fun x858 ((x1213 Real)) Real (ite (= x579 x1213) 160 (x816 x1213)))
(define-fun x2569 ((x1213 Real)) Real (ite (and (> (+ 0 x2626) x1213) (<= x2626 x1213)) (x1268 (+ 0 (- x1213 x2626))) (x1153 x1213)))
(define-fun x4732 ((x1213 x2327)) Real (ite x3848 (ite (and x4549 x2404) (x3233 x1213) (x1199 x1213)) (x1199 x1213)))
(define-fun x912 ((x1213 x2327)) Real (ite (= x1213 x2508) x2968 (x4732 x1213)))
(define-fun x2887 ((x1213 x2327)) Real (ite (= x1213 x1145) x4320 (x912 x1213)))
(define-fun x1433 ((x1213 x2327)) Real (ite (= x1213 x4607) x2062 (x2887 x1213)))
(define-fun x3017 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x1167 (x761 x1213)))
(define-fun x4319 ((x1213 x2327)) Real (ite (= (x1894 x4789) x1213) x3695 (x3017 x1213)))
(define-fun x2593 ((x1213 x2327)) Real (ite (and (not x1785) x422 x1366 x1178) (x1309 x1213) (x4319 x1213)))
(define-fun x4296 ((x1213 x2327)) Real (ite (= (x1894 x4789) x1213) x1917 (x2593 x1213)))
(define-fun x633 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x892 (x4296 x1213)))
(define-fun x3594 ((x1213 Real)) Real (ite (= x1529 x1213) x4789 (x3535 x1213)))
(define-fun x2245 ((x1213 Real)) Real (ite (= x774 x1213) x2402 (x3594 x1213)))
(define-fun x2986 ((x1213 Real)) Real (ite (= x1213 x2626) x3894 (x1138 x1213)))
(define-fun x1714 ((x1213 Real)) Real (ite (= x2917 x1213) x2949 (x2245 x1213)))
(define-fun x1163 ((x1213 Real)) Real (ite (= x981 x1213) x3137 (x4747 x1213)))
(define-fun x2637 ((x1213 Real)) Real (ite (= x2779 x1213) 0 (x4299 x1213)))
(define-fun x4067 ((x1213 Real)) Real (ite (= x1213 0) x2522 (x2961 x1213)))
(define-fun x1050 ((x1213 Real)) Real (ite (= 0 x1213) x3459 (x4869 x1213)))
(define-fun x2599 ((x1213 Real)) Real (ite (= 164 x1213) x1873 (x3572 x1213)))
(define-fun x2319 ((x1213 Real)) Real (ite (= 196 x1213) 274184521717934524641157099916833587240 (x2599 x1213)))
(define-fun x46 ((x1213 Real)) Real (ite (= x1213 228) x4403 (x2319 x1213)))
(define-fun x3829 ((x1213 Real)) Real (ite (= x1213 128) 100 (x2415 x1213)))
(define-fun x337 ((x1213 Real)) Real (ite (= x1213 160) x4102 (x46 x1213)))
(define-fun x4758 ((x1213 Real)) Real (ite (= 324 x1213) x3517 (x4740 x1213)))
(define-fun x3910 ((x1213 Real)) Real (ite (and x4600 x1330) (x4740 x1213) (x4758 x1213)))
(define-fun x1232 ((x1213 x2327)) Real (ite (= x1685 x1213) x1579 (x4506 x1213)))
(define-fun x477 ((x1213 x2327)) Real (ite (and x4454 x1969) (x4506 x1213) (ite (and x1825 x2984) (x1232 x1213) (x4506 x1213))))
(define-fun x990 ((x1213 x2327)) Real (ite (= x1213 x2397) x4261 (x3248 x1213)))
(define-fun x311 ((x1213 x2327)) Real (ite (and x1969 x4454) (x3248 x1213) (ite (and x1825 x2984) (x3248 x1213) (x990 x1213))))
(define-fun x4785 ((x1213 x2327)) Real (ite (and x4755 (not x4964) x2645 x906) (x1227 x1213) (x2185 x1213)))
(define-fun x4767 ((x1213 x2327)) Real (ite (and x906 x4755 (not x4964) x2645) (x3622 x1213) (x4342 x1213)))
(define-fun x3849 ((x1213 Real)) Real (ite (= x115 x1213) x1662 (x4563 x1213)))
(define-fun x3423 ((x1213 Real)) Real (ite (= x483 x1213) x4615 (x3849 x1213)))
(define-fun x2947 ((x1213 Real)) Real (ite (= x2628 x1213) x766 (x1843 x1213)))
(define-fun x3130 ((x1213 Real)) Real (ite (= x1213 x1803) x1341 (x3423 x1213)))
(define-fun x2781 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x1454 (x761 x1213)))
(define-fun x1555 ((x1213 x2327)) Real (ite (= (x1894 x1030) x1213) x418 (x2781 x1213)))
(define-fun x4157 ((x1213 x2327)) Real (ite (= (x1894 x1030) x1213) x3673 (x1555 x1213)))
(define-fun x3782 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x173 (x4157 x1213)))
(define-fun x4041 ((x1213 x2327)) Real (ite x433 (x3782 x1213) (ite (and x1366 x1178 (not x1785)) (x633 x1213) (x761 x1213))))
(define-fun x3994 ((x1213 x2327)) Real (ite x3426 (x2185 x1213) (ite (and x906 (not x4964) x2645) (x4785 x1213) (x2185 x1213))))
(define-fun x2416 ((x1213 x2327)) Real (ite x3426 (x4342 x1213) (ite (and x906 x2645 (not x4964)) (x4767 x1213) (x4342 x1213))))
(define-fun x864 ((x1213 Real)) Real (ite (= x1213 x4205) x3246 (x354 x1213)))
(define-fun x812 ((x1213 Real)) Real (ite (and x2469 x3426) (x354 x1213) (x864 x1213)))
(define-fun x891 ((x1213 Real)) Real (ite (and (not x3508) x1785 x1366) (x4299 x1213) (x2637 x1213)))
(define-fun x871 ((x1213 x2327)) Real (ite (= x1213 x1257) x1338 (x856 x1213)))
(define-fun x3129 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x730 x1213)))
(define-fun x1537 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x1106 x1213)))
(define-fun x2234 ((x1213 Real)) Real (ite (= 420 x1213) x3826 (x3117 x1213)))
(define-fun x4797 ((x1213 Real)) Real (ite (= x1213 x3217) 0 (x207 x1213)))
(define-fun x1216 ((x1213 Real)) Real (ite (= 324 x1213) x1146 (x2076 x1213)))
(define-fun x2141 ((x1213 Real)) Real (ite (= x1213 324) x1264 (x2076 x1213)))
(define-fun x648 ((x1213 Real)) Real (ite (and x3236 x3982) (x2076 x1213) (ite (and x2552 x576) (x1216 x1213) (x2141 x1213))))
(define-fun x140 ((x1213 Real)) Real (ite (= x1213 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2266 x1213)))
(define-fun x4750 ((x1213 Real)) Real (ite (= x1213 128) x204 (x3341 x1213)))
(define-fun x237 ((x1213 Real)) Real (ite (= x1213 128) x2264 (x3341 x1213)))
(define-fun x3082 ((x1213 Real)) Real (ite (= x1213 128) x1114 (x3341 x1213)))
(define-fun x2831 ((x1213 Real)) Real (ite (and x4944 x4722) (x4750 x1213) (ite (and x721 x3095) (x237 x1213) (x3082 x1213))))
(define-fun x4961 ((x1213 Real)) Real (ite x448 (x2831 x1213) (x2266 x1213)))
(define-fun x4501 ((x1213 Real)) Real (ite (= x1213 x2491) 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x4961 x1213)))
(define-fun x4132 ((x1213 Real)) Real (ite (= x610 x1213) x1081 (x4501 x1213)))
(define-fun x2029 ((x1213 Real)) Real (ite (and (< x1213 (+ 0 x2491)) (>= x1213 x2491)) (x3301 (+ (- x1213 x2491) 0)) (x4799 x1213)))
(define-fun x2342 ((x1213 Real)) Real (ite (= x2491 x1213) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x4273 x1213)))
(define-fun x959 ((x1213 Real)) Real (ite (= x1213 x2491) x2003 (x1512 x1213)))
(define-fun x1271 ((x1213 Real)) Real (ite (= x1213 x2491) x2814 (x1512 x1213)))
(define-fun x2090 ((x1213 Real)) Real (ite (= x2491 x1213) x1600 (x1512 x1213)))
(define-fun x972 ((x1213 Real)) Real (ite (and x3142 x4116) (x959 x1213) (ite (and x565 x1175) (x1271 x1213) (x2090 x1213))))
(define-fun x2260 ((x1213 Real)) Real (ite (= x1213 x2441) x3765 (x3886 x1213)))
(define-fun x1212 ((x1213 Real)) Real (ite (= x4123 x1213) 0 (x1233 x1213)))
(define-fun x255 ((x1213 Real)) Real (ite (= x2784 x1213) x1400 (x3863 x1213)))
(define-fun x3676 ((x1213 Real)) Real (ite (= x1213 x2784) x2927 (x3863 x1213)))
(define-fun x1248 ((x1213 Real)) Real (ite (and (>= x1213 x3289) (< x1213 (+ x3289 0))) (x2798 (+ (- x1213 x3289) 0)) (x1669 x1213)))
(define-fun x105 ((x1213 Real)) Real (ite (and (not x2648) x2519 x1313 x3967) (x1248 x1213) (x1669 x1213)))
(define-fun x4011 ((x1213 Real)) Real (ite x4806 (ite (and x641 x238) (x255 x1213) (x3676 x1213)) (ite (and (not x2648) x2519 x1313) (x105 x1213) (x1669 x1213))))
(define-fun x469 ((x1213 Real)) Real (ite (= x3823 x1213) 904250603428552709895185118199468575982109441609966099573332780532423983104 (x4011 x1213)))
(define-fun x4628 ((x1213 Real)) Real (ite (and (> (+ x3823 32) x1213) (>= x1213 x3823)) (x546 (+ (- x1213 x3823) 0)) (x4638 x1213)))
(define-fun x3185 ((x1213 Real)) Real (ite (= x2810 x1213) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4349 x1213)))
(define-fun x1394 ((x1213 Real)) Real (ite (= x1213 x3664) 274184521717934524641157099916833587240 (x3185 x1213)))
(define-fun x4169 ((x1213 Real)) Real (ite (= x4965 x1213) x3635 (x1394 x1213)))
(define-fun x1266 ((x1213 Real)) Real (ite (= x1213 x2810) x4919 (x1382 x1213)))
(define-fun x2395 ((x1213 Real)) Real (ite (= x1213 x2810) x1222 (x1382 x1213)))
(define-fun x1231 ((x1213 Real)) Real (ite (= x1213 x2810) 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x4349 x1213)))
(define-fun x1561 ((x1213 Real)) Real (ite (= x1213 x88) 274184521717934524641157099916833587240 (x1231 x1213)))
(define-fun x786 ((x1213 Real)) Real (ite (= x845 x1213) x696 (x1561 x1213)))
(define-fun x3428 ((x1213 Real)) Real (ite (= x1224 x1213) x3343 (x786 x1213)))
(define-fun x3775 ((x1213 Real)) Real (ite (= x1903 x1213) x1350 (x3428 x1213)))
(define-fun x2566 ((x1213 Real)) Real (ite (= x1213 x3737) 160 (x3775 x1213)))
(define-fun x516 ((x1213 Real)) Real (ite (and (<= x2810 x1213) (< x1213 (+ 0 x2810))) (x2037 (+ (- x1213 x2810) 0)) (x2451 x1213)))
(define-fun x3387 ((x1213 Real)) Real (ite (= x1213 x1460) x2482 (x3091 x1213)))
(define-fun x2780 ((x1213 Real)) Real (ite (= x3750 x1213) x429 (x3387 x1213)))
(define-fun x2763 ((x1213 Real)) Real (ite (= x1213 x2810) x612 (x1375 x1213)))
(define-fun x29 ((x1213 Real)) Real (ite (= x1213 x3966) x4608 (x2780 x1213)))
(define-fun x1416 ((x1213 Real)) Real (ite (= x1336 x1213) x1368 (x4061 x1213)))
(define-fun x2182 ((x1213 Real)) Real (ite (= x4561 x1213) 0 (x2121 x1213)))
(define-fun x2021 ((x1213 Real)) Real (ite (= 0 x1213) x204 (x3534 x1213)))
(define-fun x1617 ((x1213 Real)) Real (ite (= x1213 0) x2003 (x1207 x1213)))
(define-fun x1618 ((x1213 Real)) Real (ite (= x1213 164) x1770 (x4453 x1213)))
(define-fun x1644 ((x1213 Real)) Real (ite (= x1213 196) 274184521717934524641157099916833587240 (x1618 x1213)))
(define-fun x2800 ((x1213 Real)) Real (ite (= x1213 228) x250 (x1644 x1213)))
(define-fun x1510 ((x1213 Real)) Real (ite (= x1213 128) 100 (x2312 x1213)))
(define-fun x3677 ((x1213 Real)) Real (ite (= x1213 160) x1261 (x2800 x1213)))
(define-fun x1427 ((x1213 Real)) Real (ite (= x1213 324) x4878 (x1844 x1213)))
(define-fun x357 ((x1213 Real)) Real (ite (and x279 x1906) (x1844 x1213) (x1427 x1213)))
(define-fun x4675 ((x1213 Real)) Real (ite (= x1956 x1213) x850 (x975 x1213)))
(define-fun x1690 ((x1213 Real)) Real (ite (= x3238 x1213) x3349 (x4675 x1213)))
(define-fun x1899 ((x1213 Real)) Real (ite (= x3289 x1213) x3464 (x4898 x1213)))
(define-fun x3908 ((x1213 Real)) Real (ite (= x819 x1213) x3553 (x1690 x1213)))
(define-fun x3448 ((x1213 Real)) Real (ite (= x1213 x2784) x1344 (x4626 x1213)))
(define-fun x4931 ((x1213 Real)) Real (ite (and x4806 x1134) (x4626 x1213) (x3448 x1213)))
(define-fun x1022 ((x1213 Real)) Real (ite (and x865 x3527 (not x3009)) (x2121 x1213) (x2182 x1213)))
(define-fun x884 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x4305 x1213)))
(define-fun x3411 ((x1213 Real)) Real (ite (= x1213 0) 1 (x1794 x1213)))
(define-fun x3276 ((x1213 x2327)) Real (ite (and (not x941) x3980 x542) (x2259 x1213) (x1582 x1213)))
(define-fun x1539 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x4480 (x1582 x1213)))
(define-fun x590 ((x1213 x2327)) Real (ite (= x1213 (x1894 x3907)) x1868 (x1539 x1213)))
(define-fun x4967 ((x1213 x2327)) Real (ite (= (x1894 x3907) x1213) x2614 (x590 x1213)))
(define-fun x977 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x862 (x4967 x1213)))
(define-fun x737 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x3462 (x269 x1213)))
(define-fun x409 ((x1213 x2327)) Real (ite (= x1213 (x1894 x847)) x1620 (x737 x1213)))
(define-fun x1372 ((x1213 x2327)) Real (ite (= x1213 (x1894 x847)) x4089 (x409 x1213)))
(define-fun x2193 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x1910 (x1372 x1213)))
(define-fun x842 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x2754 (x269 x1213)))
(define-fun x4749 ((x1213 x2327)) Real (ite (= (x1894 x4959) x1213) x1518 (x842 x1213)))
(define-fun x3004 ((x1213 x2327)) Real (ite (and x1423 x287 x4286 (not x2427)) (x1480 x1213) (x4749 x1213)))
(define-fun x2387 ((x1213 x2327)) Real (ite (= x1213 (x1894 x4959)) x3323 (x3004 x1213)))
(define-fun x3699 ((x1213 x2327)) Real (ite (= (x1894 274184521717934524641157099916833587240) x1213) x701 (x2387 x1213)))
(define-fun x2865 ((x1213 x2327)) Real (ite x94 (ite x3368 (x2193 x1213) (x269 x1213)) (ite (and x287 (not x2427) x1423) (x3699 x1213) (x269 x1213))))
(define-fun x3390 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x3152 (x2098 x1213)))
(define-fun x3727 ((x1213 x2327)) Real (ite (= (x1894 x3392) x1213) x1590 (x3390 x1213)))
(define-fun x1991 ((x1213 x2327)) Real (ite (= (x1894 x3392) x1213) x2605 (x3727 x1213)))
(define-fun x3484 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x189 (x1991 x1213)))
(define-fun x4316 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x1514 (x2098 x1213)))
(define-fun x2126 ((x1213 x2327)) Real (ite (= x1213 (x1894 x335)) x2175 (x4316 x1213)))
(define-fun x82 ((x1213 x2327)) Real (ite (and (not x4287) x1370 x2668 x2203) (x3446 x1213) (x2126 x1213)))
(define-fun x4473 ((x1213 x2327)) Real (ite (= (x1894 x335) x1213) x4597 (x82 x1213)))
(define-fun x3232 ((x1213 x2327)) Real (ite (= x1213 (x1894 274184521717934524641157099916833587240)) x988 (x4473 x1213)))
(define-fun x672 ((x1213 x2327)) Real (ite x4097 (ite x1565 (x3484 x1213) (x2098 x1213)) (ite (and (not x4287) x1370 x2203) (x3232 x1213) (x2098 x1213))))
(define-fun x4719 ((x1213 x2327)) Real (ite (and x4829 (not x4980)) (x3604 x1213) (ite (and x1775 x3427) (x3604 x1213) (ite (and x3159 x4690) (x1267 x1213) (ite (and x963 x2223) (x15 x1213) (ite (and (not x1186) x2258) (x3604 x1213) (ite (and (not x1757) x1629) (x3604 x1213) (ite (and x1279 x4888) (x3604 x1213) (ite (and x1919 x1695) (x3604 x1213) (ite (and x40 x3951) (x1267 x1213) (x3604 x1213)))))))))))
(define-fun x4541 ((x1213 x2327)) Real (ite (= x1213 x2535) x4151 (x15 x1213)))
(define-fun x2357 ((x1213 x2327)) Real (ite (= x1213 x694) x4183 (x4541 x1213)))
(define-fun x3169 ((x1213 x2327)) Real (ite x4577 (x4719 x1213) (x2357 x1213)))
(define-fun x1570 ((x1213 x2327)) Real (ite x3146 (x3169 x1213) (x3604 x1213)))
(define-fun x4812 ((x1213 x2327)) Real (ite (and x667 (not x536)) (x3566 x1213) (ite (and x1357 x2559) (x3566 x1213) (ite (and x268 x649) (x4952 x1213) (ite (and x1974 x3998) (x1908 x1213) (ite (and x2043 x4917) (x3566 x1213) (ite (and x2709 (not x3739)) (x3566 x1213) (ite (and (not x1596) x1363) (x3566 x1213) (ite (and x3015 x3899) (x3566 x1213) (ite (and x2376 x2713) (x3566 x1213) (ite (and x1218 x2208) (x4952 x1213) (x3566 x1213))))))))))))
(define-fun x1902 ((x1213 x2327)) Real (ite (= x3562 x1213) x1262 (x1908 x1213)))
(define-fun x134 ((x1213 x2327)) Real (ite (= x1213 x3965) x3711 (x1902 x1213)))
(define-fun x3501 ((x1213 x2327)) Real (ite x438 (x4812 x1213) (x134 x1213)))
(define-fun x3915 ((x1213 x2327)) Real (ite (and x4019 (not x4397)) (ite x3306 (x3501 x1213) (x3566 x1213)) (x3566 x1213)))
(define-fun x3105 ((x1213 x2327)) Real (ite (= x3495 x1213) x3746 (x3915 x1213)))
(define-fun x3227 ((x1213 Real)) Real (ite (= 128 x1213) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2885 x1213)))
(define-fun x1013 ((x1213 Real)) Real (ite (= 128 x1213) x4547 (x2548 x1213)))
(define-fun x3687 ((x1213 Real)) Real (ite (= x1213 128) x3827 (x2548 x1213)))
(define-fun x2509 ((x1213 Real)) Real (ite (= x1213 128) x2551 (x2548 x1213)))
(define-fun x135 ((x1213 Real)) Real (ite (and (not x2716) x2718 x1536) (x1013 x1213) (ite (and x2718 x1536 x2716) (x2548 x1213) (ite (and x1358 x2723 (not x2081)) (x3687 x1213) (ite (and x2723 x1358 x2081) (x2548 x1213) (ite (and x3584 x605 (not x2006)) (x2509 x1213) (x2548 x1213)))))))
(define-fun x4088 ((x1213 Real)) Real (ite (and (not x592) x383) (x135 x1213) (x2885 x1213)))
(define-fun x4983 ((x1213 Real)) Real (ite (= x1213 x2975) 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x4088 x1213)))
(define-fun x4943 ((x1213 Real)) Real (ite (= x3307 x1213) x3907 (x4983 x1213)))
(define-fun x1997 ((x1213 Real)) Real (ite (and (>= x1213 x2975) (> (+ 0 x2975) x1213)) (x1197 (+ 0 (- x1213 x2975))) (x4441 x1213)))
(define-fun x1444 ((x1213 Real)) Real (ite (= x1213 x2975) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2477 x1213)))
(define-fun x2805 ((x1213 Real)) Real (ite (= x2975 x1213) x838 (x4773 x1213)))
(define-fun x3540 ((x1213 Real)) Real (ite (= x1213 x2975) x700 (x4773 x1213)))
(define-fun x424 ((x1213 Real)) Real (ite (= x1213 x2975) x4824 (x4773 x1213)))
(define-fun x1488 ((x1213 Real)) Real (ite (and (not x2195) x4757 x549) (x2805 x1213) (ite (and x2195 x4757 x549) (x4773 x1213) (ite (and x2435 x1066 (not x889)) (x3540 x1213) (ite (and x1066 x2435 x889) (x4773 x1213) (ite (and x2991 (not x4400) x2728) (x424 x1213) (x4773 x1213)))))))
(define-fun x4028 ((x1213 Real)) Real (ite (= 420 x1213) x2882 (x2053 x1213)))
(define-fun x2248 ((x1213 Real)) Real (ite (= x1213 x3579) 0 (x522 x1213)))
(define-fun x3876 ((x1213 Real)) Real (ite (= 324 x1213) x2748 (x3382 x1213)))
(define-fun x1992 ((x1213 Real)) Real (ite x4887 (x3382 x1213) (x3876 x1213)))
(define-fun x408 ((x1213 Real)) Real (ite (= 324 x1213) x243 (x3382 x1213)))
(define-fun x3394 ((x1213 Real)) Real (ite x527 (x3382 x1213) (x408 x1213)))
(define-fun x4179 ((x1213 Real)) Real (ite x3146 (x3382 x1213) (ite x2339 (x1992 x1213) (x3394 x1213))))
(define-fun x1859 ((x1213 Real)) Real (ite (= x1213 x3153) x923 (x322 x1213)))
(define-fun x2988 ((x1213 Real)) Real (ite (= x1213 x717) 0 (x3098 x1213)))
(define-fun x183 ((x1213 Real)) Real (ite (= x4899 x1213) x2902 (x53 x1213)))
(define-fun x1334 ((x1213 Real)) Real (ite x4948 (x53 x1213) (x183 x1213)))
(define-fun x2147 ((x1213 Real)) Real (ite (= x1213 x4899) x4037 (x53 x1213)))
(define-fun x3709 ((x1213 Real)) Real (ite x3188 (x53 x1213) (x2147 x1213)))
(define-fun x726 ((x1213 Real)) Real (ite x2344 (x1334 x1213) (x3709 x1213)))
(define-fun x530 ((x1213 Real)) Real (ite (and (<= x4226 x1213) (> (+ x4226 0) x1213)) (x3614 (+ (- x1213 x4226) 0)) (x828 x1213)))
(define-fun x184 ((x1213 Real)) Real (ite (and x4286 x1423 (not x2427) x287) (x530 x1213) (x828 x1213)))
(define-fun x4599 ((x1213 Real)) Real (ite x94 (ite x3368 (x726 x1213) (x53 x1213)) (ite (and (not x2427) x287 x1423) (x184 x1213) (x828 x1213))))
(define-fun x3543 ((x1213 Real)) Real (ite (= x1213 x2660) 904250603428552709895185118199468575982109441609966099573332780532423983104 (x4599 x1213)))
(define-fun x394 ((x1213 Real)) Real (ite (and (>= x1213 x2660) (> (+ 32 x2660) x1213)) (x3569 (+ (- x1213 x2660) 0)) (x4215 x1213)))
(define-fun x3844 ((x1213 Real)) Real (ite (= x1950 x1213) 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x4474 x1213)))
(define-fun x767 ((x1213 Real)) Real (ite (= x1213 x37) 274184521717934524641157099916833587240 (x3844 x1213)))
(define-fun x1724 ((x1213 Real)) Real (ite (= x1213 x3274) x2288 (x767 x1213)))
(define-fun x2567 ((x1213 Real)) Real (ite (= x188 x1213) x3451 (x1724 x1213)))
(define-fun x849 ((x1213 Real)) Real (ite (= x1213 x83) x3311 (x2567 x1213)))
(define-fun x2068 ((x1213 Real)) Real (ite (= x1213 x4836) 160 (x849 x1213)))
(define-fun x154 ((x1213 Real)) Real (ite (and (> (+ 0 x1950) x1213) (<= x1950 x1213)) (x2672 (+ 0 (- x1213 x1950))) (x4218 x1213)))
(define-fun x4170 ((x1213 Real)) Real (ite (= x1950 x1213) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4474 x1213)))
(define-fun x4817 ((x1213 Real)) Real (ite (= x4564 x1213) 274184521717934524641157099916833587240 (x4170 x1213)))
(define-fun x4444 ((x1213 Real)) Real (ite (= x525 x1213) x219 (x4817 x1213)))
(define-fun x3564 ((x1213 Real)) Real (ite (= x1213 0) x4547 (x868 x1213)))
(define-fun x4616 ((x1213 Real)) Real (ite (= x1213 0) x838 (x685 x1213)))
(define-fun x3330 ((x1213 Real)) Real (ite (= x1213 164) x4341 (x3155 x1213)))
(define-fun x1656 ((x1213 Real)) Real (ite (= x1213 196) 274184521717934524641157099916833587240 (x3330 x1213)))
(define-fun x4149 ((x1213 Real)) Real (ite (= x1213 228) x1849 (x1656 x1213)))
(define-fun x4456 ((x1213 Real)) Real (ite (= x1213 128) 100 (x4788 x1213)))
(define-fun x1671 ((x1213 Real)) Real (ite (= 160 x1213) x4443 (x4149 x1213)))
(define-fun x787 ((x1213 Real)) Real (ite (= x1213 x2910) x335 (x136 x1213)))
(define-fun x1516 ((x1213 Real)) Real (ite (= x3631 x1213) x3774 (x787 x1213)))
(define-fun x2624 ((x1213 Real)) Real (ite (= x1950 x1213) x824 (x2127 x1213)))
(define-fun x907 ((x1213 Real)) Real (ite (= x1213 x4655) x697 (x1516 x1213)))
(define-fun x1863 ((x1213 Real)) Real (ite (= x1950 x1213) x3999 (x2110 x1213)))
(define-fun x1252 ((x1213 Real)) Real (ite x3740 (x2110 x1213) (x1863 x1213)))
(define-fun x1708 ((x1213 Real)) Real (ite (= x1213 x1950) x1390 (x2110 x1213)))
(define-fun x3297 ((x1213 Real)) Real (ite x3076 (x2110 x1213) (x1708 x1213)))
(define-fun x4364 ((x1213 Real)) Real (ite (= x680 x1213) x2591 (x3538 x1213)))
(define-fun x2884 ((x1213 Real)) Real (ite (= x2558 x1213) 0 (x3224 x1213)))
(define-fun x1525 ((x1213 Real)) Real (ite (= x1213 x3361) x4959 (x2615 x1213)))
(define-fun x271 ((x1213 Real)) Real (ite (= x2365 x1213) x968 (x1525 x1213)))
(define-fun x2432 ((x1213 Real)) Real (ite (= x4226 x1213) x2359 (x1113 x1213)))
(define-fun x2916 ((x1213 Real)) Real (ite (= x137 x1213) x4361 (x271 x1213)))
(define-fun x3282 ((x1213 x2327)) Real (ite (and x542 (not x941) x3980) (x30 x1213) (x2471 x1213)))
(define-fun x802 ((x1213 x2327)) Real (ite (and x1009 x2102) (x1953 x1213) (ite (and x2056 x4495) (x675 x1213) (ite (and x141 x3659) (x2471 x1213) (ite (and x3408 (not x4449)) (x2471 x1213) (ite (and x2052 x4572) (x2471 x1213) (ite (and x2900 x4892) (x1953 x1213) (ite (and x1523 x2795) (x2471 x1213) (x675 x1213)))))))))
(define-fun x3554 ((x1213 x2327)) Real (ite x527 (x802 x1213) (x1953 x1213)))
(define-fun x2735 ((x1213 x2327)) Real (ite x3146 (x2471 x1213) (ite x2339 (x2471 x1213) (x3554 x1213))))
(define-fun x3010 ((x1213 x2327)) Real (ite (and x287 (not x2427) x4286 x1423) (x4972 x1213) (x2293 x1213)))
(define-fun x4542 ((x1213 x2327)) Real (ite (= x1213 x3958) x1791 (x640 x1213)))
(define-fun x3531 ((x1213 x2327)) Real (ite x4887 (x640 x1213) (x4542 x1213)))
(define-fun x1614 ((x1213 x2327)) Real (ite x3146 (x640 x1213) (ite x2339 (x3531 x1213) (x640 x1213))))
(define-fun x2033 ((x1213 x2327)) Real (ite (and (not x2427) x287 x1423 x4286) (x2913 x1213) (x1471 x1213)))
(define-fun x500 ((x1213 x2327)) Real (ite (and x3980 (not x941) x542) (x4592 x1213) (x709 x1213)))
(define-fun x2064 ((x1213 x2327)) Real (ite (and x5 x4663) (x2541 x1213) (ite (and x1194 x138) (x76 x1213) (ite (and x668 x1989) (x709 x1213) (ite (and x4308 (not x1672)) (x709 x1213) (ite (and x4018 x4458) (x709 x1213) (ite (and x614 x4706) (x2541 x1213) (ite (and x374 x3567) (x709 x1213) (x76 x1213)))))))))
(define-fun x1975 ((x1213 x2327)) Real (ite x4887 (x2064 x1213) (x2541 x1213)))
(define-fun x4870 ((x1213 x2327)) Real (ite x3146 (x709 x1213) (ite x2339 (x1975 x1213) (x709 x1213))))
(define-fun x3511 ((x1213 x2327)) Real (ite (and x287 x4286 (not x2427) x1423) (x1879 x1213) (x2174 x1213)))
(define-fun x2486 ((x1213 x2327)) Real (ite (= x4674 x1213) x2681 (x3618 x1213)))
(define-fun x2534 ((x1213 x2327)) Real (ite x527 (x3618 x1213) (x2486 x1213)))
(define-fun x1034 ((x1213 x2327)) Real (ite x3146 (x3618 x1213) (ite x2339 (x3618 x1213) (x2534 x1213))))
(define-fun x796 ((x1213 x2327)) Real (ite (and (not x2427) x1423 x4286 x287) (x12 x1213) (x4662 x1213)))
(define-fun x1322 ((x1213 x2327)) Real (ite (and x108 x2089) (x2523 x1213) (ite (and x3414 x4872) (x2293 x1213) (ite (and x4477 (not x249)) (x2293 x1213) (ite (and x1140 x2167) (x2293 x1213) (ite (and x1352 x2306) (x2293 x1213) (x2523 x1213)))))))
(define-fun x1602 ((x1213 x2327)) Real (ite (= x1213 x1776) x4015 (x2523 x1213)))
(define-fun x2309 ((x1213 x2327)) Real (ite x3188 (x1322 x1213) (x1602 x1213)))
(define-fun x4553 ((x1213 x2327)) Real (ite x2344 (x2293 x1213) (x2309 x1213)))
(define-fun x753 ((x1213 x2327)) Real (ite (and x4640 x3537) (x4246 x1213) (ite (and x3993 x1024) (x2174 x1213) (ite (and x4684 (not x3261)) (x2174 x1213) (ite (and x2134 x3250) (x2174 x1213) (ite (and x2283 x1155) (x2174 x1213) (x4246 x1213)))))))
(define-fun x1573 ((x1213 x2327)) Real (ite (= x4613 x1213) x1755 (x4246 x1213)))
(define-fun x3678 ((x1213 x2327)) Real (ite x4948 (x753 x1213) (x1573 x1213)))
(define-fun x3884 ((x1213 x2327)) Real (ite x2344 (x3678 x1213) (x2174 x1213)))
(define-fun x484 ((x1213 x2327)) Real (ite x94 (x4662 x1213) (ite (and (not x2427) x287 x1423) (x796 x1213) (x4662 x1213))))
(define-fun x1993 ((x1213 x2327)) Real (ite x94 (x1471 x1213) (ite (and x287 x1423 (not x2427)) (x2033 x1213) (x1471 x1213))))
(define-fun x2809 ((x1213 Real)) Real (ite (= 324 x1213) x346 (x1566 x1213)))
(define-fun x822 ((x1213 Real)) Real (ite (and x2220 x3571) (x1566 x1213) (x2809 x1213)))
(define-fun x4507 ((x1213 Real)) Real (ite (= x4899 x1213) x34 (x2088 x1213)))
(define-fun x84 ((x1213 Real)) Real (ite (and x11 x1012) (x2088 x1213) (x4507 x1213)))
(define-fun x3840 ((x1213 Real)) Real (ite (= x636 x1213) x2368 (x1962 x1213)))
(define-fun x157 ((x1213 Real)) Real (ite (and x2866 x4415) (x1962 x1213) (x3840 x1213)))
(define-fun x3875 ((x1213 Real)) Real (ite (= x1213 0) 1 (x4622 x1213)))
(define-fun x4418 ((x1213 Real)) Real (ite x4887 (x4622 x1213) (x3875 x1213)))
(define-fun x2347 ((x1213 Real)) Real (ite (= x1213 0) 1 (x4622 x1213)))
(define-fun x544 ((x1213 Real)) Real (ite x527 (x4622 x1213) (x2347 x1213)))
(define-fun x3809 ((x1213 Real)) Real (ite x938 (ite x3146 (x4622 x1213) (ite x2339 (x4418 x1213) (x544 x1213))) (x953 x1213)))
(define-fun x1562 ((x1213 Real)) Real (ite (and (<= 356 x1213) (> (+ 356 x346) x1213)) (x3809 (+ (- x1213 356) 0)) (x2861 x1213)))
(define-fun x1682 ((x1213 Real)) Real (ite (= x1213 0) 1 (x3667 x1213)))
(define-fun x4808 ((x1213 Real)) Real (ite x4881 (x3667 x1213) (x1682 x1213)))
(define-fun x3384 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x3667 x1213)))
(define-fun x784 ((x1213 Real)) Real (ite x4211 (x3667 x1213) (x3384 x1213)))
(define-fun x4252 ((x1213 Real)) Real (ite x1565 (ite x2124 (x4808 x1213) (x784 x1213)) (x1522 x1213)))
(define-fun x3037 ((x1213 Real)) Real (ite (and (< x1213 (+ x3490 x2368)) (<= x3490 x1213)) (x4252 (+ (- x1213 x3490) 0)) (x751 x1213)))
(define-fun x1038 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x4871 x1213)))
(define-fun x4339 ((x1213 Real)) Real (ite x4948 (x4871 x1213) (x1038 x1213)))
(define-fun x681 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x4871 x1213)))
(define-fun x376 ((x1213 Real)) Real (ite x3188 (x4871 x1213) (x681 x1213)))
(define-fun x3825 ((x1213 Real)) Real (ite x3368 (ite x2344 (x4339 x1213) (x376 x1213)) (x2046 x1213)))
(define-fun x1598 ((x1213 Real)) Real (ite (and (<= x3656 x1213) (< x1213 (+ x34 x3656))) (x3825 (+ (- x1213 x3656) 0)) (x380 x1213)))
(define-fun x342 ((x1213 Real)) Real (ite (and x3571 x2220) (x2861 x1213) (x1562 x1213)))
(define-fun x1832 ((x1213 Real)) Real (ite (and x2866 x4415) (x751 x1213) (x3037 x1213)))
(define-fun x4405 ((x1213 Real)) Real (ite (and x11 x1012) (x380 x1213) (x1598 x1213)))
(define-fun x683 ((x1213 x2327)) Real (ite (= x1213 x2700) x4900 (x3105 x1213)))
(define-fun x2324 ((x1213 x2327)) Real (ite (= x168 x1213) x925 (x683 x1213)))
(define-fun x3935 ((x1213 Real)) Real (ite (and x1124 (not x3955) x4933) (x3224 x1213) (x2884 x1213)))
(define-fun x1648 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x2793 x1213)))
(define-fun x1713 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x2793 x1213)))
(define-fun x4271 ((x1213 Real)) Real (ite (= x1213 0) x1115 (x2961 x1213)))
(define-fun x2826 ((x1213 Real)) Real (ite (= 0 x1213) x3524 (x2961 x1213)))
(define-fun x3991 ((x1213 Real)) Real (ite (= x1213 0) x1990 (x4869 x1213)))
(define-fun x4010 ((x1213 Real)) Real (ite (= x1213 0) x439 (x4869 x1213)))
(define-fun x4938 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x4524 x1213)))
(define-fun x1297 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x4524 x1213)))
(define-fun x1235 ((x1213 x2327)) Real (ite (= x1213 x4198) x3355 (x4278 x1213)))
(define-fun x3977 ((x1213 Real)) Real (ite (= x1213 0) 1 (x730 x1213)))
(define-fun x198 ((x1213 Real)) Real (ite (= x1213 0) 1 (x1106 x1213)))
(define-fun x2004 ((x1213 Real)) Real (ite (= x1213 0) 1 (x2272 x1213)))
(define-fun x1984 ((x1213 Real)) Real (ite (= x1213 0) 1 (x2272 x1213)))
(define-fun x578 ((x1213 Real)) Real (ite (= x1213 0) x1114 (x3534 x1213)))
(define-fun x4827 ((x1213 Real)) Real (ite (= x1213 0) x2264 (x3534 x1213)))
(define-fun x4112 ((x1213 Real)) Real (ite (= x1213 0) x1600 (x1207 x1213)))
(define-fun x3452 ((x1213 Real)) Real (ite (= 0 x1213) x2814 (x1207 x1213)))
(define-fun x2717 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x2978 x1213)))
(define-fun x2152 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x2978 x1213)))
(define-fun x481 ((x1213 Real)) Real (ite (= x1213 0) 1 (x4305 x1213)))
(define-fun x4525 ((x1213 Real)) Real (ite (= 0 x1213) 1 (x1794 x1213)))
(define-fun x4330 ((x1213 Real)) Real (ite (= x1213 0) x2551 (x868 x1213)))
(define-fun x3050 ((x1213 Real)) Real (ite (= x1213 0) x3827 (x868 x1213)))
(define-fun x365 ((x1213 Real)) Real (ite (= x1213 0) x4824 (x685 x1213)))
(define-fun x1360 ((x1213 Real)) Real (ite (= 0 x1213) x700 (x685 x1213)))
(define-fun x3756 ((x1213 Real)) Real (ite (= x1213 0) 1 (x695 x1213)))
(define-fun x2650 ((x1213 x2327)) Real (ite (and x399 x3879) (x4934 x1213) (ite (and x3047 x2943) (x4763 x1213) (ite (and x1787 x419) (x4505 x1213) (ite (and (not x2118) x1168) (x4505 x1213) (ite (and x1925 x931) (x4505 x1213) (ite (and x3005 x1062) (x4934 x1213) (ite (and x4672 x3696) (x4505 x1213) (x4763 x1213)))))))))
(define-fun x1324 ((x1213 x2327)) Real (ite x3076 (x2650 x1213) (x4934 x1213)))
(define-fun x1587 ((x1213 Real)) Real (ite (= x1213 0) 1 (x695 x1213)))
(define-fun x1951 ((x1213 x2327)) Real (ite (and x4930 x1046) (x1325 x1213) (ite (and x1944 x637) (x2657 x1213) (ite (and x2895 x4496) (x520 x1213) (ite (and x3830 (not x2018)) (x520 x1213) (ite (and x350 x3245) (x520 x1213) (ite (and x4544 x1771) (x1325 x1213) (ite (and x4476 x3079) (x520 x1213) (x2657 x1213)))))))))
(define-fun x3492 ((x1213 x2327)) Real (ite x3740 (x1951 x1213) (x1325 x1213)))
(define-fun x2752 ((x1213 x2327)) Real (ite (and x4019 (not x4397)) (ite x3306 (x4505 x1213) (ite x4451 (x4505 x1213) (x1324 x1213))) (ite (and x2992 x1121 (not x3093)) (x1102 x1213) (x4505 x1213))))
(define-fun x2952 ((x1213 x2327)) Real (ite (= x1213 x1796) x4410 (x2752 x1213)))
(define-fun x2976 ((x1213 x2327)) Real (ite (and x4019 (not x4397)) (ite x3306 (x520 x1213) (ite x4451 (x3492 x1213) (x520 x1213))) (ite (and x1121 (not x3093) x2992) (x1148 x1213) (x520 x1213))))
(define-fun x161 ((x1213 x2327)) Real (ite (= x2584 x1213) x155 (x2976 x1213)))
(define-fun x3331 ((x1213 Real)) Real (ite (and x4454 x1969) (x4524 x1213) (ite (and x1825 x2984) (x1297 x1213) (x4938 x1213))))
(define-fun x4648 ((x1213 Real)) Real (ite (and (<= 356 x1213) (> (+ 356 x3517) x1213)) (x3331 (+ (- x1213 356) 0)) (x280 x1213)))
(define-fun x870 ((x1213 Real)) Real (ite (and x4600 x1330) (x280 x1213) (x4648 x1213)))
(define-fun x908 ((x1213 Real)) Real (ite (and x1100 x2736) (x3129 x1213) (x3977 x1213)))
(define-fun x1320 ((x1213 Real)) Real (ite (= x2190 x1213) x1578 (x664 x1213)))
(define-fun x1237 ((x1213 Real)) Real (ite (and (>= x1213 x1440) (> (+ x1578 x1440) x1213)) (x908 (+ (- x1213 x1440) 0)) (x665 x1213)))
(define-fun x3927 ((x1213 Real)) Real (ite (and x433 x236) (x665 x1213) (x1237 x1213)))
(define-fun x2946 ((x1213 Real)) Real (ite (and x433 x236) (x664 x1213) (x1320 x1213)))
(define-fun x4863 ((x1213 Real)) Real (ite (and x4516 x1308) (x1537 x1213) (x198 x1213)))
(define-fun x2113 ((x1213 Real)) Real (ite (and (>= x1213 x1780) (< x1213 (+ x1780 x3246))) (x4863 (+ 0 (- x1213 x1780))) (x1560 x1213)))
(define-fun x2226 ((x1213 Real)) Real (ite (and x2469 x3426) (x1560 x1213) (x2113 x1213)))
(define-fun x167 ((x1213 Real)) Real (ite (and x3236 x3982) (x2978 x1213) (ite (and x2552 x576) (x2152 x1213) (x2717 x1213))))
(define-fun x3189 ((x1213 Real)) Real (ite (and (> (+ 356 x4878) x1213) (>= x1213 356)) (x167 (+ (- x1213 356) 0)) (x489 x1213)))
(define-fun x4228 ((x1213 Real)) Real (ite (and x1906 x279) (x489 x1213) (x3189 x1213)))
(define-fun x4461 ((x1213 Real)) Real (ite (and x4337 x526) (x884 x1213) (x481 x1213)))
(define-fun x1253 ((x1213 Real)) Real (ite (= x1213 x2806) x2703 (x4096 x1213)))
(define-fun x2761 ((x1213 Real)) Real (ite (and (>= x1213 x1172) (> (+ x1172 x2703) x1213)) (x4461 (+ (- x1213 x1172) 0)) (x349 x1213)))
(define-fun x3042 ((x1213 Real)) Real (ite (and x2139 x436) (x349 x1213) (x2761 x1213)))
(define-fun x482 ((x1213 Real)) Real (ite (and x436 x2139) (x4096 x1213) (x1253 x1213)))
(define-fun x1657 ((x1213 Real)) Real (ite (and x238 x641) (x3411 x1213) (x4525 x1213)))
(define-fun x4398 ((x1213 Real)) Real (ite (and (> (+ x523 x1344) x1213) (<= x523 x1213)) (x1657 (+ (- x1213 x523) 0)) (x1016 x1213)))
(define-fun x2078 ((x1213 Real)) Real (ite (and x4806 x1134) (x1016 x1213) (x4398 x1213)))
(define-fun x2417 ((x1067 Real)) Bool (=> (and (not (= x1067 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= x1067 98474297345890754025501882143967591664980152141971839855651084132735363579904)) (not (= x1067 1461501637330902918203684832716283019655932542976)) (not (= x1067 157198259)) (not (= 1166402363 x1067)) (< 10000 x1067) (not (= 274184521717934524641157099916833587206 x1067)) (not (= x1067 826074471)) (not (= 274184521717934524641157099916833587202 x1067)) (not (= 79228162514264337593543950336 x1067)) (not (= 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1067)) (not (= x1067 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1067 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 1858285468 x1067)) (not (= 1889567281 x1067)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1067)) (not (= 1845821197 x1067)) (not (= x1067 109576784812748834340197573905731726730118698833493337707389013487240318287872)) (not (= 404098525 x1067)) (not (= 2514000705 x1067)) (not (= 2311529814 x1067)) (not (= x1067 34167655436598589418538772692774877509225721125679165766806516059628562808832)) (not (= 117300739 x1067)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1067)) (not (= x1067 1461501637330902918203684832716283019655932542975)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1067)) (not (= 26959946667150639794667015087019630673637144422540572481103610249216 x1067)) (not (= 4294967296 x1067)) (not (= x1067 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 904250603428552709895185118199468575982109441609966099573332780532423983104 x1067)) (not (= 31536000 x1067)) (not (= x1067 511946350)) (not (= 599290589 x1067)) (not (= 274184521717934524641157099916833587240 x1067)) (not (= 65535 x1067)) (not (= x1067 18446744073709551615)) (not (= x1067 455944412)) (not (= 2835717307 x1067)) (not (= x1067 4294967295)) (not (= x1067 115792089237316195423570984636004990333889740523700931696805413995650331181055)) (not (= 924834022 x1067)) (not (= 1722255204 x1067))) (not ((_ is x4822) (x1894 x1067)))))
(assert (axiom_frac_bound (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2233 x400 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2256 x2401 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2318 x1884 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2401 x2256 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3194 x4428 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3240 x914 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3265 x4078 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3377 x404 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3383 x1686 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4078 x3265 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4851 x4802 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x914 x3240 (uninterp_frac (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x2233 x400 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x2256 x2401 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x2318 x1884 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x2401 x2256 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x3194 x4428 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x3240 x914 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x3265 x4078 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x3377 x404 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x3383 x1686 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x4078 x3265 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x4851 x4802 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318 x914 x3240 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x2233 x400 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x2256 x2401 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x2318 x1884 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x2401 x2256 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x3194 x4428 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x3240 x914 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x3265 x4078 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x3377 x404 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x3383 x1686 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x4078 x3265 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x4851 x4802 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404 x914 x3240 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x2233 x400 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x2256 x2401 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x2318 x1884 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x2401 x2256 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x3194 x4428 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x3240 x914 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x3265 x4078 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x3377 x404 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x3383 x1686 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x4078 x3265 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x4851 x4802 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428 x914 x3240 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)))
(assert (axiom_frac_bound x1461 31536000))
(assert (axiom_frac_zero x1461 31536000 x2233 x400 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x2256 x2401 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x2318 x1884 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x2401 x2256 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x3194 x4428 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x3240 x914 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x3265 x4078 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x3377 x404 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x3383 x1686 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x4078 x3265 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x4851 x4802 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_zero x1461 31536000 x914 x3240 (uninterp_frac x1461 31536000)))
(assert (axiom_frac_bound x2083 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x2233 x400 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x2256 x2401 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x2318 x1884 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x2401 x2256 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x3194 x4428 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x3240 x914 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x3265 x4078 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x3377 x404 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x3383 x1686 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x4078 x3265 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x4851 x4802 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2083 1461501637330902918203684832716283019655932542976 x914 x3240 (uninterp_frac x2083 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x2356 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x2233 x400 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x2256 x2401 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x2318 x1884 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x2401 x2256 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x3194 x4428 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x3240 x914 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x3265 x4078 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x3377 x404 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x3383 x1686 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x4078 x3265 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x4851 x4802 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x2356 26959946667150639794667015087019630673637144422540572481103610249216 x914 x3240 (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_bound x2372 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x2233 x400 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x2256 x2401 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x2318 x1884 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x2401 x2256 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x3194 x4428 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x3240 x914 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x3265 x4078 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x3377 x404 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x3383 x1686 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x4078 x3265 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x4851 x4802 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2372 1461501637330902918203684832716283019655932542976 x914 x3240 (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x2525 10000))
(assert (axiom_frac_zero x2525 10000 x2233 x400 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x2256 x2401 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x2318 x1884 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x2401 x2256 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x3194 x4428 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x3240 x914 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x3265 x4078 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x3377 x404 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x3383 x1686 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x4078 x3265 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x4851 x4802 (uninterp_frac x2525 10000)))
(assert (axiom_frac_zero x2525 10000 x914 x3240 (uninterp_frac x2525 10000)))
(assert (axiom_frac_bound x3021 31536000))
(assert (axiom_frac_zero x3021 31536000 x2233 x400 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x2256 x2401 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x2318 x1884 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x2401 x2256 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x3194 x4428 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x3240 x914 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x3265 x4078 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x3377 x404 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x3383 x1686 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x4078 x3265 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x4851 x4802 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_zero x3021 31536000 x914 x3240 (uninterp_frac x3021 31536000)))
(assert (axiom_frac_bound x3069 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x2233 x400 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x2256 x2401 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x2318 x1884 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x2401 x2256 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x3194 x4428 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x3240 x914 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x3265 x4078 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x3377 x404 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x3383 x1686 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x4078 x3265 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x4851 x4802 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3069 1461501637330902918203684832716283019655932542976 x914 x3240 (uninterp_frac x3069 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x315 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x2233 x400 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x2256 x2401 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x2318 x1884 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x2401 x2256 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x3194 x4428 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x3240 x914 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x3265 x4078 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x3377 x404 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x3383 x1686 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x4078 x3265 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x4851 x4802 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x315 1461501637330902918203684832716283019655932542976 x914 x3240 (uninterp_frac x315 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x326 10000))
(assert (axiom_frac_zero x326 10000 x2233 x400 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x2256 x2401 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x2318 x1884 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x2401 x2256 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x3194 x4428 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x3240 x914 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x3265 x4078 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x3377 x404 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x3383 x1686 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x4078 x3265 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x4851 x4802 (uninterp_frac x326 10000)))
(assert (axiom_frac_zero x326 10000 x914 x3240 (uninterp_frac x326 10000)))
(assert (axiom_frac_bound x3504 10000))
(assert (axiom_frac_zero x3504 10000 x2233 x400 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x2256 x2401 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x2318 x1884 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x2401 x2256 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x3194 x4428 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x3240 x914 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x3265 x4078 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x3377 x404 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x3383 x1686 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x4078 x3265 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x4851 x4802 (uninterp_frac x3504 10000)))
(assert (axiom_frac_zero x3504 10000 x914 x3240 (uninterp_frac x3504 10000)))
(assert (axiom_frac_bound x3706 10000))
(assert (axiom_frac_zero x3706 10000 x2233 x400 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x2256 x2401 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x2318 x1884 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x2401 x2256 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x3194 x4428 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x3240 x914 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x3265 x4078 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x3377 x404 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x3383 x1686 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x4078 x3265 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x4851 x4802 (uninterp_frac x3706 10000)))
(assert (axiom_frac_zero x3706 10000 x914 x3240 (uninterp_frac x3706 10000)))
(assert (axiom_frac_bound x3787 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x2233 x400 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x2256 x2401 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x2318 x1884 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x2401 x2256 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x3194 x4428 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x3240 x914 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x3265 x4078 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x3377 x404 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x3383 x1686 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x4078 x3265 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x4851 x4802 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x3787 1461501637330902918203684832716283019655932542976 x914 x3240 (uninterp_frac x3787 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x4001 10000))
(assert (axiom_frac_zero x4001 10000 x2233 x400 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x2256 x2401 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x2318 x1884 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x2401 x2256 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x3194 x4428 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x3240 x914 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x3265 x4078 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x3377 x404 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x3383 x1686 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x4078 x3265 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x4851 x4802 (uninterp_frac x4001 10000)))
(assert (axiom_frac_zero x4001 10000 x914 x3240 (uninterp_frac x4001 10000)))
(assert (axiom_frac_bound x4100 79228162514264337593543950336))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x2233 x400 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x2256 x2401 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x2318 x1884 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x2401 x2256 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x3194 x4428 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x3240 x914 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x3265 x4078 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x3377 x404 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x3383 x1686 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x4078 x3265 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x4851 x4802 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_zero x4100 79228162514264337593543950336 x914 x3240 (uninterp_frac x4100 79228162514264337593543950336)))
(assert (axiom_frac_bound x4143 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x2233 x400 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x2256 x2401 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x2318 x1884 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x2401 x2256 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x3194 x4428 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x3240 x914 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x3265 x4078 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x3377 x404 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x3383 x1686 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x4078 x3265 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x4851 x4802 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4143 1461501637330902918203684832716283019655932542976 x914 x3240 (uninterp_frac x4143 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x4334 10000))
(assert (axiom_frac_zero x4334 10000 x2233 x400 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x2256 x2401 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x2318 x1884 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x2401 x2256 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x3194 x4428 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x3240 x914 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x3265 x4078 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x3377 x404 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x3383 x1686 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x4078 x3265 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x4851 x4802 (uninterp_frac x4334 10000)))
(assert (axiom_frac_zero x4334 10000 x914 x3240 (uninterp_frac x4334 10000)))
(assert (axiom_frac_bound x4372 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x2233 x400 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x2256 x2401 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x2318 x1884 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x2401 x2256 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x3194 x4428 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x3240 x914 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x3265 x4078 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x3377 x404 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x3383 x1686 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x4078 x3265 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x4851 x4802 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4372 1461501637330902918203684832716283019655932542976 x914 x3240 (uninterp_frac x4372 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x4431 79228162514264337593543950336))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x2233 x400 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x2256 x2401 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x2318 x1884 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x2401 x2256 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x3194 x4428 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x3240 x914 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x3265 x4078 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x3377 x404 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x3383 x1686 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x4078 x3265 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x4851 x4802 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_zero x4431 79228162514264337593543950336 x914 x3240 (uninterp_frac x4431 79228162514264337593543950336)))
(assert (axiom_frac_bound x4567 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x2233 x400 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x2256 x2401 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x2318 x1884 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x2401 x2256 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x3194 x4428 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x3240 x914 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x3265 x4078 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x3377 x404 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x3383 x1686 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x4078 x3265 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x4851 x4802 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4567 1461501637330902918203684832716283019655932542976 x914 x3240 (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x4735 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x2233 x400 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x2256 x2401 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x2318 x1884 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x2401 x2256 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x3194 x4428 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x3240 x914 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x3265 x4078 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x3377 x404 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x3383 x1686 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x4078 x3265 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x4851 x4802 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4735 26959946667150639794667015087019630673637144422540572481103610249216 x914 x3240 (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_bound x4777 31536000))
(assert (axiom_frac_zero x4777 31536000 x2233 x400 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x2256 x2401 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x2318 x1884 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x2401 x2256 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x3194 x4428 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x3240 x914 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x3265 x4078 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x3377 x404 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x3383 x1686 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x4078 x3265 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x4851 x4802 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_zero x4777 31536000 x914 x3240 (uninterp_frac x4777 31536000)))
(assert (axiom_frac_bound x4796 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x2233 x400 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x2256 x2401 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x2318 x1884 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x2401 x2256 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x3194 x4428 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x3240 x914 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x3265 x4078 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x3377 x404 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x3383 x1686 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x4078 x3265 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x4851 x4802 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x4796 1461501637330902918203684832716283019655932542976 x914 x3240 (uninterp_frac x4796 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x4904 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x2233 x400 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x2256 x2401 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x2318 x1884 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x2401 x2256 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x3194 x4428 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x3240 x914 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x3265 x4078 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x3377 x404 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x3383 x1686 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x4078 x3265 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x4851 x4802 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_zero x4904 26959946667150639794667015087019630673637144422540572481103610249216 x914 x3240 (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (axiom_frac_bound x515 79228162514264337593543950336))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x2233 x400 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x2256 x2401 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x2318 x1884 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x2401 x2256 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x3194 x4428 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x3240 x914 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x3265 x4078 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x3377 x404 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x3383 x1686 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x4078 x3265 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x4851 x4802 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_frac_zero x515 79228162514264337593543950336 x914 x3240 (uninterp_frac x515 79228162514264337593543950336)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x1000))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1015))
(assert (axiom_int_approximation x1017))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1023))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1026))
(assert (axiom_int_approximation x1027))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1063))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1093))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1109))
(assert (axiom_int_approximation x1112))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1115))
(assert (axiom_int_approximation x1116))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1123))
(assert (axiom_int_approximation x1125))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1149))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x1169))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x1177))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1181))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x1189))
(assert (axiom_int_approximation x1193))
(assert (axiom_int_approximation x1195))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1205))
(assert (axiom_int_approximation x1206))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1210))
(assert (axiom_int_approximation x1211))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x1220))
(assert (axiom_int_approximation x1222))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1226))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1249))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1262))
(assert (axiom_int_approximation x1264))
(assert (axiom_int_approximation x1265))
(assert (axiom_int_approximation x1269))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1316))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1321))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x1328))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1331))
(assert (axiom_int_approximation x1333))
(assert (axiom_int_approximation x1335))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x1341))
(assert (axiom_int_approximation x1342))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x1371))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1407))
(assert (axiom_int_approximation x1408))
(assert (axiom_int_approximation x1410))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1425))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x1429))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1437))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1454))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x146))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1461))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1464))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1467))
(assert (axiom_int_approximation x1468))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1481))
(assert (axiom_int_approximation x1482))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1492))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1494))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1501))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x151))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1514))
(assert (axiom_int_approximation x1517))
(assert (axiom_int_approximation x1518))
(assert (axiom_int_approximation x1519))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1527))
(assert (axiom_int_approximation x1529))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1542))
(assert (axiom_int_approximation x1544))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1551))
(assert (axiom_int_approximation x1553))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x1574))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x1577))
(assert (axiom_int_approximation x1578))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x1581))
(assert (axiom_int_approximation x1589))
(assert (axiom_int_approximation x1590))
(assert (axiom_int_approximation x1591))
(assert (axiom_int_approximation x1593))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1601))
(assert (axiom_int_approximation x1603))
(assert (axiom_int_approximation x1605))
(assert (axiom_int_approximation x1609))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1616))
(assert (axiom_int_approximation x1620))
(assert (axiom_int_approximation x1622))
(assert (axiom_int_approximation x1624))
(assert (axiom_int_approximation x1635))
(assert (axiom_int_approximation x1636))
(assert (axiom_int_approximation x1637))
(assert (axiom_int_approximation x1638))
(assert (axiom_int_approximation x1639))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x1643))
(assert (axiom_int_approximation x1645))
(assert (axiom_int_approximation x1647))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x1652))
(assert (axiom_int_approximation x1653))
(assert (axiom_int_approximation x1654))
(assert (axiom_int_approximation x1655))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x1660))
(assert (axiom_int_approximation x1662))
(assert (axiom_int_approximation x1667))
(assert (axiom_int_approximation x1673))
(assert (axiom_int_approximation x1675))
(assert (axiom_int_approximation x1677))
(assert (axiom_int_approximation x1680))
(assert (axiom_int_approximation x1684))
(assert (axiom_int_approximation x1686))
(assert (axiom_int_approximation x1687))
(assert (axiom_int_approximation x1688))
(assert (axiom_int_approximation x1689))
(assert (axiom_int_approximation x1691))
(assert (axiom_int_approximation x1693))
(assert (axiom_int_approximation x1696))
(assert (axiom_int_approximation x1698))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x1704))
(assert (axiom_int_approximation x1707))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1710))
(assert (axiom_int_approximation x1711))
(assert (axiom_int_approximation x1712))
(assert (axiom_int_approximation x1715))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x1719))
(assert (axiom_int_approximation x1721))
(assert (axiom_int_approximation x1725))
(assert (axiom_int_approximation x1726))
(assert (axiom_int_approximation x1729))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x1730))
(assert (axiom_int_approximation x1732))
(assert (axiom_int_approximation x1734))
(assert (axiom_int_approximation x1735))
(assert (axiom_int_approximation x1736))
(assert (axiom_int_approximation x1738))
(assert (axiom_int_approximation x1739))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x1740))
(assert (axiom_int_approximation x1741))
(assert (axiom_int_approximation x1743))
(assert (axiom_int_approximation x1745))
(assert (axiom_int_approximation x1747))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x1750))
(assert (axiom_int_approximation x1751))
(assert (axiom_int_approximation x1753))
(assert (axiom_int_approximation x1754))
(assert (axiom_int_approximation x1755))
(assert (axiom_int_approximation x1758))
(assert (axiom_int_approximation x1761))
(assert (axiom_int_approximation x1765))
(assert (axiom_int_approximation x1766))
(assert (axiom_int_approximation x1767))
(assert (axiom_int_approximation x1768))
(assert (axiom_int_approximation x1770))
(assert (axiom_int_approximation x1774))
(assert (axiom_int_approximation x1777))
(assert (axiom_int_approximation x1778))
(assert (axiom_int_approximation x1779))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x1780))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1784))
(assert (axiom_int_approximation x1788))
(assert (axiom_int_approximation x1789))
(assert (axiom_int_approximation x1791))
(assert (axiom_int_approximation x1792))
(assert (axiom_int_approximation x1799))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x1801))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1805))
(assert (axiom_int_approximation x1808))
(assert (axiom_int_approximation x1809))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1816))
(assert (axiom_int_approximation x1817))
(assert (axiom_int_approximation x1818))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x1823))
(assert (axiom_int_approximation x1824))
(assert (axiom_int_approximation x1826))
(assert (axiom_int_approximation x1828))
(assert (axiom_int_approximation x1829))
(assert (axiom_int_approximation x1833))
(assert (axiom_int_approximation x1834))
(assert (axiom_int_approximation x1835))
(assert (axiom_int_approximation x1839))
(assert (axiom_int_approximation x1842))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x1850))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1866))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x1869))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x1870))
(assert (axiom_int_approximation x1871))
(assert (axiom_int_approximation x1872))
(assert (axiom_int_approximation x1873))
(assert (axiom_int_approximation x1876))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x1884))
(assert (axiom_int_approximation x1887))
(assert (axiom_int_approximation x189))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1893))
(assert (axiom_int_approximation x1896))
(assert (axiom_int_approximation x1897))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x1903))
(assert (axiom_int_approximation x1904))
(assert (axiom_int_approximation x1905))
(assert (axiom_int_approximation x1910))
(assert (axiom_int_approximation x1913))
(assert (axiom_int_approximation x1914))
(assert (axiom_int_approximation x1915))
(assert (axiom_int_approximation x1916))
(assert (axiom_int_approximation x1917))
(assert (axiom_int_approximation x1918))
(assert (axiom_int_approximation x1921))
(assert (axiom_int_approximation x1923))
(assert (axiom_int_approximation x1924))
(assert (axiom_int_approximation x1927))
(assert (axiom_int_approximation x1928))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x1930))
(assert (axiom_int_approximation x1931))
(assert (axiom_int_approximation x1937))
(assert (axiom_int_approximation x1938))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x1940))
(assert (axiom_int_approximation x1941))
(assert (axiom_int_approximation x1943))
(assert (axiom_int_approximation x1948))
(assert (axiom_int_approximation x1949))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x1950))
(assert (axiom_int_approximation x1952))
(assert (axiom_int_approximation x1954))
(assert (axiom_int_approximation x1956))
(assert (axiom_int_approximation x1964))
(assert (axiom_int_approximation x1968))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x1972))
(assert (axiom_int_approximation x1973))
(assert (axiom_int_approximation x1977))
(assert (axiom_int_approximation x1978))
(assert (axiom_int_approximation x1985))
(assert (axiom_int_approximation x1987))
(assert (axiom_int_approximation x1990))
(assert (axiom_int_approximation x1998))
(assert (axiom_int_approximation x2))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x2000))
(assert (axiom_int_approximation x2001))
(assert (axiom_int_approximation x2003))
(assert (axiom_int_approximation x2008))
(assert (axiom_int_approximation x2009))
(assert (axiom_int_approximation x2010))
(assert (axiom_int_approximation x2012))
(assert (axiom_int_approximation x2013))
(assert (axiom_int_approximation x2015))
(assert (axiom_int_approximation x2019))
(assert (axiom_int_approximation x2023))
(assert (axiom_int_approximation x2024))
(assert (axiom_int_approximation x2031))
(assert (axiom_int_approximation x2034))
(assert (axiom_int_approximation x2035))
(assert (axiom_int_approximation x2038))
(assert (axiom_int_approximation x2039))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x2040))
(assert (axiom_int_approximation x2041))
(assert (axiom_int_approximation x2042))
(assert (axiom_int_approximation x2044))
(assert (axiom_int_approximation x2045))
(assert (axiom_int_approximation x2047))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x2050))
(assert (axiom_int_approximation x2055))
(assert (axiom_int_approximation x2057))
(assert (axiom_int_approximation x2058))
(assert (axiom_int_approximation x2059))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x2062))
(assert (axiom_int_approximation x2063))
(assert (axiom_int_approximation x2065))
(assert (axiom_int_approximation x2067))
(assert (axiom_int_approximation x2070))
(assert (axiom_int_approximation x2083))
(assert (axiom_int_approximation x2084))
(assert (axiom_int_approximation x2086))
(assert (axiom_int_approximation x2092))
(assert (axiom_int_approximation x2094))
(assert (axiom_int_approximation x2096))
(assert (axiom_int_approximation x2099))
(assert (axiom_int_approximation x2105))
(assert (axiom_int_approximation x2106))
(assert (axiom_int_approximation x2109))
(assert (axiom_int_approximation x2115))
(assert (axiom_int_approximation x2117))
(assert (axiom_int_approximation x2129))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x2131))
(assert (axiom_int_approximation x2132))
(assert (axiom_int_approximation x2135))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x2142))
(assert (axiom_int_approximation x2145))
(assert (axiom_int_approximation x2148))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x2150))
(assert (axiom_int_approximation x2154))
(assert (axiom_int_approximation x2156))
(assert (axiom_int_approximation x2157))
(assert (axiom_int_approximation x2158))
(assert (axiom_int_approximation x2161))
(assert (axiom_int_approximation x2162))
(assert (axiom_int_approximation x2163))
(assert (axiom_int_approximation x2166))
(assert (axiom_int_approximation x2168))
(assert (axiom_int_approximation x2169))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x2170))
(assert (axiom_int_approximation x2173))
(assert (axiom_int_approximation x2175))
(assert (axiom_int_approximation x2176))
(assert (axiom_int_approximation x2177))
(assert (axiom_int_approximation x2178))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x2181))
(assert (axiom_int_approximation x2184))
(assert (axiom_int_approximation x2188))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x2190))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x2201))
(assert (axiom_int_approximation x2202))
(assert (axiom_int_approximation x2204))
(assert (axiom_int_approximation x2206))
(assert (axiom_int_approximation x2207))
(assert (axiom_int_approximation x2209))
(assert (axiom_int_approximation x2210))
(assert (axiom_int_approximation x2213))
(assert (axiom_int_approximation x2217))
(assert (axiom_int_approximation x2219))
(assert (axiom_int_approximation x2222))
(assert (axiom_int_approximation x2227))
(assert (axiom_int_approximation x2228))
(assert (axiom_int_approximation x2229))
(assert (axiom_int_approximation x2232))
(assert (axiom_int_approximation x2233))
(assert (axiom_int_approximation x2238))
(assert (axiom_int_approximation x2239))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x2240))
(assert (axiom_int_approximation x2244))
(assert (axiom_int_approximation x2246))
(assert (axiom_int_approximation x2249))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x2252))
(assert (axiom_int_approximation x2254))
(assert (axiom_int_approximation x2256))
(assert (axiom_int_approximation x2257))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x2261))
(assert (axiom_int_approximation x2262))
(assert (axiom_int_approximation x2263))
(assert (axiom_int_approximation x2264))
(assert (axiom_int_approximation x2265))
(assert (axiom_int_approximation x2268))
(assert (axiom_int_approximation x2270))
(assert (axiom_int_approximation x2274))
(assert (axiom_int_approximation x2277))
(assert (axiom_int_approximation x2280))
(assert (axiom_int_approximation x2281))
(assert (axiom_int_approximation x2284))
(assert (axiom_int_approximation x2286))
(assert (axiom_int_approximation x2287))
(assert (axiom_int_approximation x2288))
(assert (axiom_int_approximation x2289))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x2298))
(assert (axiom_int_approximation x2299))
(assert (axiom_int_approximation x2300))
(assert (axiom_int_approximation x2301))
(assert (axiom_int_approximation x2303))
(assert (axiom_int_approximation x2304))
(assert (axiom_int_approximation x2305))
(assert (axiom_int_approximation x2308))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x2311))
(assert (axiom_int_approximation x2314))
(assert (axiom_int_approximation x2315))
(assert (axiom_int_approximation x2317))
(assert (axiom_int_approximation x2318))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x2329))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x2331))
(assert (axiom_int_approximation x2332))
(assert (axiom_int_approximation x2333))
(assert (axiom_int_approximation x2337))
(assert (axiom_int_approximation x2338))
(assert (axiom_int_approximation x2341))
(assert (axiom_int_approximation x2343))
(assert (axiom_int_approximation x2345))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x2351))
(assert (axiom_int_approximation x2356))
(assert (axiom_int_approximation x2358))
(assert (axiom_int_approximation x2359))
(assert (axiom_int_approximation x2360))
(assert (axiom_int_approximation x2361))
(assert (axiom_int_approximation x2364))
(assert (axiom_int_approximation x2365))
(assert (axiom_int_approximation x2366))
(assert (axiom_int_approximation x2367))
(assert (axiom_int_approximation x2368))
(assert (axiom_int_approximation x2369))
(assert (axiom_int_approximation x2371))
(assert (axiom_int_approximation x2372))
(assert (axiom_int_approximation x2374))
(assert (axiom_int_approximation x2378))
(assert (axiom_int_approximation x2380))
(assert (axiom_int_approximation x2381))
(assert (axiom_int_approximation x2382))
(assert (axiom_int_approximation x2385))
(assert (axiom_int_approximation x2389))
(assert (axiom_int_approximation x2390))
(assert (axiom_int_approximation x2391))
(assert (axiom_int_approximation x2394))
(assert (axiom_int_approximation x2396))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x2400))
(assert (axiom_int_approximation x2401))
(assert (axiom_int_approximation x2402))
(assert (axiom_int_approximation x2407))
(assert (axiom_int_approximation x2408))
(assert (axiom_int_approximation x2410))
(assert (axiom_int_approximation x2411))
(assert (axiom_int_approximation x2418))
(assert (axiom_int_approximation x2419))
(assert (axiom_int_approximation x2420))
(assert (axiom_int_approximation x2421))
(assert (axiom_int_approximation x2424))
(assert (axiom_int_approximation x2429))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x2430))
(assert (axiom_int_approximation x2434))
(assert (axiom_int_approximation x2437))
(assert (axiom_int_approximation x2438))
(assert (axiom_int_approximation x2439))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x2441))
(assert (axiom_int_approximation x2443))
(assert (axiom_int_approximation x2445))
(assert (axiom_int_approximation x2446))
(assert (axiom_int_approximation x2448))
(assert (axiom_int_approximation x2449))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x2450))
(assert (axiom_int_approximation x2454))
(assert (axiom_int_approximation x2458))
(assert (axiom_int_approximation x2461))
(assert (axiom_int_approximation x2462))
(assert (axiom_int_approximation x2463))
(assert (axiom_int_approximation x2464))
(assert (axiom_int_approximation x2465))
(assert (axiom_int_approximation x2466))
(assert (axiom_int_approximation x2470))
(assert (axiom_int_approximation x2472))
(assert (axiom_int_approximation x2473))
(assert (axiom_int_approximation x2474))
(assert (axiom_int_approximation x2478))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x2480))
(assert (axiom_int_approximation x2482))
(assert (axiom_int_approximation x2484))
(assert (axiom_int_approximation x2487))
(assert (axiom_int_approximation x2488))
(assert (axiom_int_approximation x2490))
(assert (axiom_int_approximation x2491))
(assert (axiom_int_approximation x2492))
(assert (axiom_int_approximation x2493))
(assert (axiom_int_approximation x2495))
(assert (axiom_int_approximation x2497))
(assert (axiom_int_approximation x2499))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x2500))
(assert (axiom_int_approximation x2504))
(assert (axiom_int_approximation x2506))
(assert (axiom_int_approximation x2507))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x2510))
(assert (axiom_int_approximation x2511))
(assert (axiom_int_approximation x2513))
(assert (axiom_int_approximation x2518))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x2522))
(assert (axiom_int_approximation x2524))
(assert (axiom_int_approximation x2525))
(assert (axiom_int_approximation x2526))
(assert (axiom_int_approximation x2527))
(assert (axiom_int_approximation x2529))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x2530))
(assert (axiom_int_approximation x2531))
(assert (axiom_int_approximation x2532))
(assert (axiom_int_approximation x2533))
(assert (axiom_int_approximation x2536))
(assert (axiom_int_approximation x2542))
(assert (axiom_int_approximation x2545))
(assert (axiom_int_approximation x2546))
(assert (axiom_int_approximation x2547))
(assert (axiom_int_approximation x2551))
(assert (axiom_int_approximation x2556))
(assert (axiom_int_approximation x2558))
(assert (axiom_int_approximation x2561))
(assert (axiom_int_approximation x2562))
(assert (axiom_int_approximation x2565))
(assert (axiom_int_approximation x2570))
(assert (axiom_int_approximation x2571))
(assert (axiom_int_approximation x2572))
(assert (axiom_int_approximation x2574))
(assert (axiom_int_approximation x2578))
(assert (axiom_int_approximation x2579))
(assert (axiom_int_approximation x2581))
(assert (axiom_int_approximation x2582))
(assert (axiom_int_approximation x2583))
(assert (axiom_int_approximation x2587))
(assert (axiom_int_approximation x2589))
(assert (axiom_int_approximation x2590))
(assert (axiom_int_approximation x2591))
(assert (axiom_int_approximation x2592))
(assert (axiom_int_approximation x2594))
(assert (axiom_int_approximation x2595))
(assert (axiom_int_approximation x2596))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x2600))
(assert (axiom_int_approximation x2605))
(assert (axiom_int_approximation x2607))
(assert (axiom_int_approximation x2608))
(assert (axiom_int_approximation x2613))
(assert (axiom_int_approximation x2614))
(assert (axiom_int_approximation x2616))
(assert (axiom_int_approximation x2617))
(assert (axiom_int_approximation x2620))
(assert (axiom_int_approximation x2621))
(assert (axiom_int_approximation x2625))
(assert (axiom_int_approximation x2626))
(assert (axiom_int_approximation x2627))
(assert (axiom_int_approximation x2628))
(assert (axiom_int_approximation x2630))
(assert (axiom_int_approximation x2631))
(assert (axiom_int_approximation x2634))
(assert (axiom_int_approximation x2635))
(assert (axiom_int_approximation x2636))
(assert (axiom_int_approximation x264))
(assert (axiom_int_approximation x2640))
(assert (axiom_int_approximation x2641))
(assert (axiom_int_approximation x2643))
(assert (axiom_int_approximation x2644))
(assert (axiom_int_approximation x2646))
(assert (axiom_int_approximation x2647))
(assert (axiom_int_approximation x2649))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x2652))
(assert (axiom_int_approximation x2653))
(assert (axiom_int_approximation x2659))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x2660))
(assert (axiom_int_approximation x2661))
(assert (axiom_int_approximation x2662))
(assert (axiom_int_approximation x2664))
(assert (axiom_int_approximation x2666))
(assert (axiom_int_approximation x2667))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x2673))
(assert (axiom_int_approximation x2674))
(assert (axiom_int_approximation x2675))
(assert (axiom_int_approximation x2680))
(assert (axiom_int_approximation x2681))
(assert (axiom_int_approximation x2683))
(assert (axiom_int_approximation x2684))
(assert (axiom_int_approximation x2685))
(assert (axiom_int_approximation x2689))
(assert (axiom_int_approximation x2691))
(assert (axiom_int_approximation x2692))
(assert (axiom_int_approximation x2695))
(assert (axiom_int_approximation x2697))
(assert (axiom_int_approximation x2698))
(assert (axiom_int_approximation x2699))
(assert (axiom_int_approximation x27))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x2703))
(assert (axiom_int_approximation x2704))
(assert (axiom_int_approximation x2706))
(assert (axiom_int_approximation x2711))
(assert (axiom_int_approximation x2712))
(assert (axiom_int_approximation x2714))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x2720))
(assert (axiom_int_approximation x2721))
(assert (axiom_int_approximation x2724))
(assert (axiom_int_approximation x2725))
(assert (axiom_int_approximation x2727))
(assert (axiom_int_approximation x2729))
(assert (axiom_int_approximation x2733))
(assert (axiom_int_approximation x2737))
(assert (axiom_int_approximation x2738))
(assert (axiom_int_approximation x2739))
(assert (axiom_int_approximation x2740))
(assert (axiom_int_approximation x2743))
(assert (axiom_int_approximation x2744))
(assert (axiom_int_approximation x2747))
(assert (axiom_int_approximation x2748))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x2751))
(assert (axiom_int_approximation x2753))
(assert (axiom_int_approximation x2754))
(assert (axiom_int_approximation x2755))
(assert (axiom_int_approximation x2756))
(assert (axiom_int_approximation x2758))
(assert (axiom_int_approximation x2759))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x2762))
(assert (axiom_int_approximation x2764))
(assert (axiom_int_approximation x2766))
(assert (axiom_int_approximation x2768))
(assert (axiom_int_approximation x2769))
(assert (axiom_int_approximation x2770))
(assert (axiom_int_approximation x2771))
(assert (axiom_int_approximation x2772))
(assert (axiom_int_approximation x2773))
(assert (axiom_int_approximation x2774))
(assert (axiom_int_approximation x2775))
(assert (axiom_int_approximation x2779))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x2782))
(assert (axiom_int_approximation x2783))
(assert (axiom_int_approximation x2784))
(assert (axiom_int_approximation x2785))
(assert (axiom_int_approximation x2786))
(assert (axiom_int_approximation x2787))
(assert (axiom_int_approximation x2789))
(assert (axiom_int_approximation x2790))
(assert (axiom_int_approximation x2791))
(assert (axiom_int_approximation x2792))
(assert (axiom_int_approximation x2794))
(assert (axiom_int_approximation x2796))
(assert (axiom_int_approximation x2799))
(assert (axiom_int_approximation x2801))
(assert (axiom_int_approximation x2802))
(assert (axiom_int_approximation x2803))
(assert (axiom_int_approximation x2806))
(assert (axiom_int_approximation x2807))
(assert (axiom_int_approximation x2810))
(assert (axiom_int_approximation x2811))
(assert (axiom_int_approximation x2812))
(assert (axiom_int_approximation x2813))
(assert (axiom_int_approximation x2814))
(assert (axiom_int_approximation x2818))
(assert (axiom_int_approximation x2822))
(assert (axiom_int_approximation x2825))
(assert (axiom_int_approximation x2827))
(assert (axiom_int_approximation x2828))
(assert (axiom_int_approximation x2830))
(assert (axiom_int_approximation x2833))
(assert (axiom_int_approximation x2835))
(assert (axiom_int_approximation x2836))
(assert (axiom_int_approximation x2837))
(assert (axiom_int_approximation x2838))
(assert (axiom_int_approximation x2839))
(assert (axiom_int_approximation x2840))
(assert (axiom_int_approximation x2841))
(assert (axiom_int_approximation x2845))
(assert (axiom_int_approximation x2849))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x2850))
(assert (axiom_int_approximation x2851))
(assert (axiom_int_approximation x2852))
(assert (axiom_int_approximation x2855))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x2860))
(assert (axiom_int_approximation x2874))
(assert (axiom_int_approximation x2878))
(assert (axiom_int_approximation x2879))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x2880))
(assert (axiom_int_approximation x2881))
(assert (axiom_int_approximation x2882))
(assert (axiom_int_approximation x2889))
(assert (axiom_int_approximation x2892))
(assert (axiom_int_approximation x2893))
(assert (axiom_int_approximation x2896))
(assert (axiom_int_approximation x2897))
(assert (axiom_int_approximation x2898))
(assert (axiom_int_approximation x2899))
(assert (axiom_int_approximation x2901))
(assert (axiom_int_approximation x2902))
(assert (axiom_int_approximation x2903))
(assert (axiom_int_approximation x2904))
(assert (axiom_int_approximation x2905))
(assert (axiom_int_approximation x2907))
(assert (axiom_int_approximation x2910))
(assert (axiom_int_approximation x2914))
(assert (axiom_int_approximation x2917))
(assert (axiom_int_approximation x2920))
(assert (axiom_int_approximation x2922))
(assert (axiom_int_approximation x2925))
(assert (axiom_int_approximation x2926))
(assert (axiom_int_approximation x2927))
(assert (axiom_int_approximation x2928))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x2935))
(assert (axiom_int_approximation x2936))
(assert (axiom_int_approximation x2938))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x2942))
(assert (axiom_int_approximation x2949))
(assert (axiom_int_approximation x2951))
(assert (axiom_int_approximation x2953))
(assert (axiom_int_approximation x2954))
(assert (axiom_int_approximation x2956))
(assert (axiom_int_approximation x2957))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x2962))
(assert (axiom_int_approximation x2963))
(assert (axiom_int_approximation x2965))
(assert (axiom_int_approximation x2966))
(assert (axiom_int_approximation x2968))
(assert (axiom_int_approximation x2969))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x2973))
(assert (axiom_int_approximation x2975))
(assert (axiom_int_approximation x2977))
(assert (axiom_int_approximation x2979))
(assert (axiom_int_approximation x2980))
(assert (axiom_int_approximation x2982))
(assert (axiom_int_approximation x2983))
(assert (axiom_int_approximation x2987))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x2993))
(assert (axiom_int_approximation x2994))
(assert (axiom_int_approximation x2997))
(assert (axiom_int_approximation x2998))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x3000))
(assert (axiom_int_approximation x3001))
(assert (axiom_int_approximation x3008))
(assert (axiom_int_approximation x3012))
(assert (axiom_int_approximation x3016))
(assert (axiom_int_approximation x3018))
(assert (axiom_int_approximation x3019))
(assert (axiom_int_approximation x3020))
(assert (axiom_int_approximation x3021))
(assert (axiom_int_approximation x3022))
(assert (axiom_int_approximation x3023))
(assert (axiom_int_approximation x3025))
(assert (axiom_int_approximation x3026))
(assert (axiom_int_approximation x3027))
(assert (axiom_int_approximation x3029))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x3030))
(assert (axiom_int_approximation x3032))
(assert (axiom_int_approximation x3034))
(assert (axiom_int_approximation x3038))
(assert (axiom_int_approximation x3039))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x3044))
(assert (axiom_int_approximation x3045))
(assert (axiom_int_approximation x3048))
(assert (axiom_int_approximation x3053))
(assert (axiom_int_approximation x3057))
(assert (axiom_int_approximation x3058))
(assert (axiom_int_approximation x3059))
(assert (axiom_int_approximation x3061))
(assert (axiom_int_approximation x3062))
(assert (axiom_int_approximation x3063))
(assert (axiom_int_approximation x3064))
(assert (axiom_int_approximation x3065))
(assert (axiom_int_approximation x3067))
(assert (axiom_int_approximation x3068))
(assert (axiom_int_approximation x3069))
(assert (axiom_int_approximation x3070))
(assert (axiom_int_approximation x3074))
(assert (axiom_int_approximation x3077))
(assert (axiom_int_approximation x3078))
(assert (axiom_int_approximation x3085))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x3090))
(assert (axiom_int_approximation x3096))
(assert (axiom_int_approximation x3099))
(assert (axiom_int_approximation x31))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x3101))
(assert (axiom_int_approximation x3103))
(assert (axiom_int_approximation x3104))
(assert (axiom_int_approximation x3108))
(assert (axiom_int_approximation x3111))
(assert (axiom_int_approximation x3115))
(assert (axiom_int_approximation x3118))
(assert (axiom_int_approximation x3119))
(assert (axiom_int_approximation x3121))
(assert (axiom_int_approximation x3122))
(assert (axiom_int_approximation x3127))
(assert (axiom_int_approximation x3128))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x3131))
(assert (axiom_int_approximation x3134))
(assert (axiom_int_approximation x3136))
(assert (axiom_int_approximation x3137))
(assert (axiom_int_approximation x3138))
(assert (axiom_int_approximation x3139))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x3141))
(assert (axiom_int_approximation x3143))
(assert (axiom_int_approximation x3144))
(assert (axiom_int_approximation x3145))
(assert (axiom_int_approximation x3149))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x3151))
(assert (axiom_int_approximation x3152))
(assert (axiom_int_approximation x3153))
(assert (axiom_int_approximation x3156))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x3161))
(assert (axiom_int_approximation x3162))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x3170))
(assert (axiom_int_approximation x3172))
(assert (axiom_int_approximation x3174))
(assert (axiom_int_approximation x3178))
(assert (axiom_int_approximation x3180))
(assert (axiom_int_approximation x3181))
(assert (axiom_int_approximation x3182))
(assert (axiom_int_approximation x3184))
(assert (axiom_int_approximation x3186))
(assert (axiom_int_approximation x3190))
(assert (axiom_int_approximation x3191))
(assert (axiom_int_approximation x3193))
(assert (axiom_int_approximation x3194))
(assert (axiom_int_approximation x3196))
(assert (axiom_int_approximation x3197))
(assert (axiom_int_approximation x3199))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x3200))
(assert (axiom_int_approximation x3201))
(assert (axiom_int_approximation x3202))
(assert (axiom_int_approximation x3203))
(assert (axiom_int_approximation x3204))
(assert (axiom_int_approximation x3209))
(assert (axiom_int_approximation x3210))
(assert (axiom_int_approximation x3211))
(assert (axiom_int_approximation x3215))
(assert (axiom_int_approximation x3217))
(assert (axiom_int_approximation x3219))
(assert (axiom_int_approximation x3220))
(assert (axiom_int_approximation x3221))
(assert (axiom_int_approximation x3222))
(assert (axiom_int_approximation x3226))
(assert (axiom_int_approximation x3228))
(assert (axiom_int_approximation x3229))
(assert (axiom_int_approximation x3231))
(assert (axiom_int_approximation x3235))
(assert (axiom_int_approximation x3237))
(assert (axiom_int_approximation x3238))
(assert (axiom_int_approximation x3240))
(assert (axiom_int_approximation x3242))
(assert (axiom_int_approximation x3243))
(assert (axiom_int_approximation x3246))
(assert (axiom_int_approximation x3247))
(assert (axiom_int_approximation x3253))
(assert (axiom_int_approximation x3255))
(assert (axiom_int_approximation x3256))
(assert (axiom_int_approximation x3257))
(assert (axiom_int_approximation x3258))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x3260))
(assert (axiom_int_approximation x3265))
(assert (axiom_int_approximation x3266))
(assert (axiom_int_approximation x3267))
(assert (axiom_int_approximation x3268))
(assert (axiom_int_approximation x3272))
(assert (axiom_int_approximation x3273))
(assert (axiom_int_approximation x3274))
(assert (axiom_int_approximation x3275))
(assert (axiom_int_approximation x3277))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x3280))
(assert (axiom_int_approximation x3287))
(assert (axiom_int_approximation x3289))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x3291))
(assert (axiom_int_approximation x3294))
(assert (axiom_int_approximation x3295))
(assert (axiom_int_approximation x3298))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x3300))
(assert (axiom_int_approximation x3303))
(assert (axiom_int_approximation x3304))
(assert (axiom_int_approximation x3307))
(assert (axiom_int_approximation x3309))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x3311))
(assert (axiom_int_approximation x3313))
(assert (axiom_int_approximation x3317))
(assert (axiom_int_approximation x3319))
(assert (axiom_int_approximation x3320))
(assert (axiom_int_approximation x3321))
(assert (axiom_int_approximation x3322))
(assert (axiom_int_approximation x3323))
(assert (axiom_int_approximation x3327))
(assert (axiom_int_approximation x3328))
(assert (axiom_int_approximation x3333))
(assert (axiom_int_approximation x3339))
(assert (axiom_int_approximation x334))
(assert (axiom_int_approximation x3342))
(assert (axiom_int_approximation x3343))
(assert (axiom_int_approximation x3344))
(assert (axiom_int_approximation x3345))
(assert (axiom_int_approximation x3347))
(assert (axiom_int_approximation x3349))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x3350))
(assert (axiom_int_approximation x3353))
(assert (axiom_int_approximation x3355))
(assert (axiom_int_approximation x3361))
(assert (axiom_int_approximation x3365))
(assert (axiom_int_approximation x3366))
(assert (axiom_int_approximation x3367))
(assert (axiom_int_approximation x3370))
(assert (axiom_int_approximation x3371))
(assert (axiom_int_approximation x3373))
(assert (axiom_int_approximation x3377))
(assert (axiom_int_approximation x3378))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x3380))
(assert (axiom_int_approximation x3381))
(assert (axiom_int_approximation x3383))
(assert (axiom_int_approximation x3388))
(assert (axiom_int_approximation x3392))
(assert (axiom_int_approximation x3395))
(assert (axiom_int_approximation x3396))
(assert (axiom_int_approximation x3397))
(assert (axiom_int_approximation x3399))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x3400))
(assert (axiom_int_approximation x3402))
(assert (axiom_int_approximation x3405))
(assert (axiom_int_approximation x3406))
(assert (axiom_int_approximation x3407))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x3410))
(assert (axiom_int_approximation x3412))
(assert (axiom_int_approximation x3413))
(assert (axiom_int_approximation x3415))
(assert (axiom_int_approximation x3421))
(assert (axiom_int_approximation x3424))
(assert (axiom_int_approximation x3430))
(assert (axiom_int_approximation x3431))
(assert (axiom_int_approximation x3433))
(assert (axiom_int_approximation x3435))
(assert (axiom_int_approximation x3436))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x3440))
(assert (axiom_int_approximation x3441))
(assert (axiom_int_approximation x3443))
(assert (axiom_int_approximation x3445))
(assert (axiom_int_approximation x3449))
(assert (axiom_int_approximation x3451))
(assert (axiom_int_approximation x3455))
(assert (axiom_int_approximation x3456))
(assert (axiom_int_approximation x3457))
(assert (axiom_int_approximation x3459))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x3460))
(assert (axiom_int_approximation x3461))
(assert (axiom_int_approximation x3462))
(assert (axiom_int_approximation x3464))
(assert (axiom_int_approximation x3465))
(assert (axiom_int_approximation x3466))
(assert (axiom_int_approximation x3468))
(assert (axiom_int_approximation x3473))
(assert (axiom_int_approximation x3474))
(assert (axiom_int_approximation x3475))
(assert (axiom_int_approximation x3479))
(assert (axiom_int_approximation x348))
(assert (axiom_int_approximation x3480))
(assert (axiom_int_approximation x3481))
(assert (axiom_int_approximation x3482))
(assert (axiom_int_approximation x3485))
(assert (axiom_int_approximation x3488))
(assert (axiom_int_approximation x3490))
(assert (axiom_int_approximation x3491))
(assert (axiom_int_approximation x3499))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x3500))
(assert (axiom_int_approximation x3502))
(assert (axiom_int_approximation x3503))
(assert (axiom_int_approximation x3504))
(assert (axiom_int_approximation x3505))
(assert (axiom_int_approximation x3506))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x3513))
(assert (axiom_int_approximation x3514))
(assert (axiom_int_approximation x3515))
(assert (axiom_int_approximation x3517))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x3521))
(assert (axiom_int_approximation x3522))
(assert (axiom_int_approximation x3523))
(assert (axiom_int_approximation x3524))
(assert (axiom_int_approximation x3526))
(assert (axiom_int_approximation x3528))
(assert (axiom_int_approximation x3529))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x3530))
(assert (axiom_int_approximation x3546))
(assert (axiom_int_approximation x3551))
(assert (axiom_int_approximation x3552))
(assert (axiom_int_approximation x3553))
(assert (axiom_int_approximation x3555))
(assert (axiom_int_approximation x3556))
(assert (axiom_int_approximation x3558))
(assert (axiom_int_approximation x3559))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x3561))
(assert (axiom_int_approximation x3573))
(assert (axiom_int_approximation x3574))
(assert (axiom_int_approximation x3578))
(assert (axiom_int_approximation x3579))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x3581))
(assert (axiom_int_approximation x3582))
(assert (axiom_int_approximation x3585))
(assert (axiom_int_approximation x3588))
(assert (axiom_int_approximation x3589))
(assert (axiom_int_approximation x3590))
(assert (axiom_int_approximation x3591))
(assert (axiom_int_approximation x3593))
(assert (axiom_int_approximation x3595))
(assert (axiom_int_approximation x3597))
(assert (axiom_int_approximation x3599))
(assert (axiom_int_approximation x3601))
(assert (axiom_int_approximation x3602))
(assert (axiom_int_approximation x3603))
(assert (axiom_int_approximation x3605))
(assert (axiom_int_approximation x3607))
(assert (axiom_int_approximation x3608))
(assert (axiom_int_approximation x3609))
(assert (axiom_int_approximation x3611))
(assert (axiom_int_approximation x3613))
(assert (axiom_int_approximation x3616))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x3620))
(assert (axiom_int_approximation x3621))
(assert (axiom_int_approximation x3623))
(assert (axiom_int_approximation x3625))
(assert (axiom_int_approximation x3627))
(assert (axiom_int_approximation x3629))
(assert (axiom_int_approximation x3631))
(assert (axiom_int_approximation x3633))
(assert (axiom_int_approximation x3635))
(assert (axiom_int_approximation x3637))
(assert (axiom_int_approximation x3638))
(assert (axiom_int_approximation x3639))
(assert (axiom_int_approximation x3641))
(assert (axiom_int_approximation x3642))
(assert (axiom_int_approximation x3643))
(assert (axiom_int_approximation x3647))
(assert (axiom_int_approximation x3648))
(assert (axiom_int_approximation x3651))
(assert (axiom_int_approximation x3653))
(assert (axiom_int_approximation x3654))
(assert (axiom_int_approximation x3656))
(assert (axiom_int_approximation x3657))
(assert (axiom_int_approximation x3658))
(assert (axiom_int_approximation x3660))
(assert (axiom_int_approximation x3662))
(assert (axiom_int_approximation x3663))
(assert (axiom_int_approximation x3664))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x3672))
(assert (axiom_int_approximation x3673))
(assert (axiom_int_approximation x3675))
(assert (axiom_int_approximation x3679))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x3683))
(assert (axiom_int_approximation x3685))
(assert (axiom_int_approximation x3688))
(assert (axiom_int_approximation x3689))
(assert (axiom_int_approximation x3690))
(assert (axiom_int_approximation x3691))
(assert (axiom_int_approximation x3695))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x3701))
(assert (axiom_int_approximation x3702))
(assert (axiom_int_approximation x3703))
(assert (axiom_int_approximation x3704))
(assert (axiom_int_approximation x3706))
(assert (axiom_int_approximation x3708))
(assert (axiom_int_approximation x3711))
(assert (axiom_int_approximation x3712))
(assert (axiom_int_approximation x3716))
(assert (axiom_int_approximation x3717))
(assert (axiom_int_approximation x3718))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x3720))
(assert (axiom_int_approximation x3722))
(assert (axiom_int_approximation x3723))
(assert (axiom_int_approximation x3725))
(assert (axiom_int_approximation x3728))
(assert (axiom_int_approximation x3730))
(assert (axiom_int_approximation x3733))
(assert (axiom_int_approximation x3734))
(assert (axiom_int_approximation x3737))
(assert (axiom_int_approximation x3738))
(assert (axiom_int_approximation x3742))
(assert (axiom_int_approximation x3744))
(assert (axiom_int_approximation x3746))
(assert (axiom_int_approximation x3750))
(assert (axiom_int_approximation x3758))
(assert (axiom_int_approximation x3760))
(assert (axiom_int_approximation x3765))
(assert (axiom_int_approximation x3769))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x3772))
(assert (axiom_int_approximation x3773))
(assert (axiom_int_approximation x3774))
(assert (axiom_int_approximation x3779))
(assert (axiom_int_approximation x3781))
(assert (axiom_int_approximation x3784))
(assert (axiom_int_approximation x3785))
(assert (axiom_int_approximation x3787))
(assert (axiom_int_approximation x3789))
(assert (axiom_int_approximation x3790))
(assert (axiom_int_approximation x3794))
(assert (axiom_int_approximation x3796))
(assert (axiom_int_approximation x3797))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x3800))
(assert (axiom_int_approximation x3801))
(assert (axiom_int_approximation x3804))
(assert (axiom_int_approximation x3805))
(assert (axiom_int_approximation x3807))
(assert (axiom_int_approximation x3808))
(assert (axiom_int_approximation x3810))
(assert (axiom_int_approximation x3813))
(assert (axiom_int_approximation x3814))
(assert (axiom_int_approximation x3817))
(assert (axiom_int_approximation x3818))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x3820))
(assert (axiom_int_approximation x3823))
(assert (axiom_int_approximation x3826))
(assert (axiom_int_approximation x3827))
(assert (axiom_int_approximation x3828))
(assert (axiom_int_approximation x3832))
(assert (axiom_int_approximation x3833))
(assert (axiom_int_approximation x3834))
(assert (axiom_int_approximation x3835))
(assert (axiom_int_approximation x3836))
(assert (axiom_int_approximation x3837))
(assert (axiom_int_approximation x3838))
(assert (axiom_int_approximation x3839))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x3842))
(assert (axiom_int_approximation x3843))
(assert (axiom_int_approximation x3845))
(assert (axiom_int_approximation x3847))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x3852))
(assert (axiom_int_approximation x3853))
(assert (axiom_int_approximation x3855))
(assert (axiom_int_approximation x3856))
(assert (axiom_int_approximation x3858))
(assert (axiom_int_approximation x3859))
(assert (axiom_int_approximation x3860))
(assert (axiom_int_approximation x3861))
(assert (axiom_int_approximation x3862))
(assert (axiom_int_approximation x3867))
(assert (axiom_int_approximation x3869))
(assert (axiom_int_approximation x3871))
(assert (axiom_int_approximation x388))
(assert (axiom_int_approximation x3880))
(assert (axiom_int_approximation x3882))
(assert (axiom_int_approximation x3883))
(assert (axiom_int_approximation x3887))
(assert (axiom_int_approximation x3888))
(assert (axiom_int_approximation x3889))
(assert (axiom_int_approximation x3891))
(assert (axiom_int_approximation x3893))
(assert (axiom_int_approximation x3894))
(assert (axiom_int_approximation x3895))
(assert (axiom_int_approximation x3896))
(assert (axiom_int_approximation x3897))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x3900))
(assert (axiom_int_approximation x3902))
(assert (axiom_int_approximation x3903))
(assert (axiom_int_approximation x3906))
(assert (axiom_int_approximation x3907))
(assert (axiom_int_approximation x3911))
(assert (axiom_int_approximation x3913))
(assert (axiom_int_approximation x3917))
(assert (axiom_int_approximation x3919))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x3920))
(assert (axiom_int_approximation x3921))
(assert (axiom_int_approximation x3923))
(assert (axiom_int_approximation x3924))
(assert (axiom_int_approximation x3926))
(assert (axiom_int_approximation x3928))
(assert (axiom_int_approximation x3930))
(assert (axiom_int_approximation x3932))
(assert (axiom_int_approximation x3938))
(assert (axiom_int_approximation x3940))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x3950))
(assert (axiom_int_approximation x3956))
(assert (axiom_int_approximation x3957))
(assert (axiom_int_approximation x3959))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x3961))
(assert (axiom_int_approximation x3962))
(assert (axiom_int_approximation x3963))
(assert (axiom_int_approximation x3964))
(assert (axiom_int_approximation x3966))
(assert (axiom_int_approximation x3971))
(assert (axiom_int_approximation x3972))
(assert (axiom_int_approximation x3975))
(assert (axiom_int_approximation x3976))
(assert (axiom_int_approximation x3979))
(assert (axiom_int_approximation x3984))
(assert (axiom_int_approximation x3985))
(assert (axiom_int_approximation x3992))
(assert (axiom_int_approximation x3995))
(assert (axiom_int_approximation x3997))
(assert (axiom_int_approximation x3999))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x4000))
(assert (axiom_int_approximation x4001))
(assert (axiom_int_approximation x4002))
(assert (axiom_int_approximation x4005))
(assert (axiom_int_approximation x4006))
(assert (axiom_int_approximation x4007))
(assert (axiom_int_approximation x4009))
(assert (axiom_int_approximation x4012))
(assert (axiom_int_approximation x4013))
(assert (axiom_int_approximation x4015))
(assert (axiom_int_approximation x4017))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x4020))
(assert (axiom_int_approximation x4021))
(assert (axiom_int_approximation x4022))
(assert (axiom_int_approximation x4023))
(assert (axiom_int_approximation x4024))
(assert (axiom_int_approximation x4025))
(assert (axiom_int_approximation x4027))
(assert (axiom_int_approximation x4031))
(assert (axiom_int_approximation x4032))
(assert (axiom_int_approximation x4033))
(assert (axiom_int_approximation x4034))
(assert (axiom_int_approximation x4037))
(assert (axiom_int_approximation x4038))
(assert (axiom_int_approximation x4039))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x4044))
(assert (axiom_int_approximation x4045))
(assert (axiom_int_approximation x4047))
(assert (axiom_int_approximation x4048))
(assert (axiom_int_approximation x4050))
(assert (axiom_int_approximation x4051))
(assert (axiom_int_approximation x4055))
(assert (axiom_int_approximation x4056))
(assert (axiom_int_approximation x4058))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x4060))
(assert (axiom_int_approximation x4062))
(assert (axiom_int_approximation x4063))
(assert (axiom_int_approximation x4066))
(assert (axiom_int_approximation x4073))
(assert (axiom_int_approximation x4074))
(assert (axiom_int_approximation x4075))
(assert (axiom_int_approximation x4077))
(assert (axiom_int_approximation x4078))
(assert (axiom_int_approximation x4079))
(assert (axiom_int_approximation x4082))
(assert (axiom_int_approximation x4084))
(assert (axiom_int_approximation x4089))
(assert (axiom_int_approximation x4093))
(assert (axiom_int_approximation x4094))
(assert (axiom_int_approximation x4095))
(assert (axiom_int_approximation x4098))
(assert (axiom_int_approximation x4099))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x4100))
(assert (axiom_int_approximation x4102))
(assert (axiom_int_approximation x4107))
(assert (axiom_int_approximation x4108))
(assert (axiom_int_approximation x4113))
(assert (axiom_int_approximation x4115))
(assert (axiom_int_approximation x4117))
(assert (axiom_int_approximation x4118))
(assert (axiom_int_approximation x4119))
(assert (axiom_int_approximation x4120))
(assert (axiom_int_approximation x4123))
(assert (axiom_int_approximation x4125))
(assert (axiom_int_approximation x4126))
(assert (axiom_int_approximation x4129))
(assert (axiom_int_approximation x4131))
(assert (axiom_int_approximation x4133))
(assert (axiom_int_approximation x4139))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x4142))
(assert (axiom_int_approximation x4143))
(assert (axiom_int_approximation x4144))
(assert (axiom_int_approximation x4145))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x4151))
(assert (axiom_int_approximation x4152))
(assert (axiom_int_approximation x4156))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x4160))
(assert (axiom_int_approximation x4161))
(assert (axiom_int_approximation x4164))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x4171))
(assert (axiom_int_approximation x4173))
(assert (axiom_int_approximation x4175))
(assert (axiom_int_approximation x4176))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x4180))
(assert (axiom_int_approximation x4181))
(assert (axiom_int_approximation x4182))
(assert (axiom_int_approximation x4183))
(assert (axiom_int_approximation x4184))
(assert (axiom_int_approximation x4191))
(assert (axiom_int_approximation x4193))
(assert (axiom_int_approximation x4195))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x4201))
(assert (axiom_int_approximation x4202))
(assert (axiom_int_approximation x4205))
(assert (axiom_int_approximation x4206))
(assert (axiom_int_approximation x4210))
(assert (axiom_int_approximation x4212))
(assert (axiom_int_approximation x4217))
(assert (axiom_int_approximation x4221))
(assert (axiom_int_approximation x4224))
(assert (axiom_int_approximation x4226))
(assert (axiom_int_approximation x4229))
(assert (axiom_int_approximation x4234))
(assert (axiom_int_approximation x4236))
(assert (axiom_int_approximation x4240))
(assert (axiom_int_approximation x4241))
(assert (axiom_int_approximation x4244))
(assert (axiom_int_approximation x4249))
(assert (axiom_int_approximation x4250))
(assert (axiom_int_approximation x4257))
(assert (axiom_int_approximation x4258))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x4260))
(assert (axiom_int_approximation x4261))
(assert (axiom_int_approximation x4262))
(assert (axiom_int_approximation x4267))
(assert (axiom_int_approximation x4269))
(assert (axiom_int_approximation x427))
(assert (axiom_int_approximation x4272))
(assert (axiom_int_approximation x4284))
(assert (axiom_int_approximation x4285))
(assert (axiom_int_approximation x4288))
(assert (axiom_int_approximation x4289))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x4291))
(assert (axiom_int_approximation x4293))
(assert (axiom_int_approximation x4297))
(assert (axiom_int_approximation x4298))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x4301))
(assert (axiom_int_approximation x4303))
(assert (axiom_int_approximation x4307))
(assert (axiom_int_approximation x4309))
(assert (axiom_int_approximation x4310))
(assert (axiom_int_approximation x4311))
(assert (axiom_int_approximation x4313))
(assert (axiom_int_approximation x4314))
(assert (axiom_int_approximation x4315))
(assert (axiom_int_approximation x4320))
(assert (axiom_int_approximation x4321))
(assert (axiom_int_approximation x4322))
(assert (axiom_int_approximation x4323))
(assert (axiom_int_approximation x4326))
(assert (axiom_int_approximation x4328))
(assert (axiom_int_approximation x4329))
(assert (axiom_int_approximation x4332))
(assert (axiom_int_approximation x4334))
(assert (axiom_int_approximation x4336))
(assert (axiom_int_approximation x4338))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x4340))
(assert (axiom_int_approximation x4341))
(assert (axiom_int_approximation x4344))
(assert (axiom_int_approximation x4345))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x4350))
(assert (axiom_int_approximation x4354))
(assert (axiom_int_approximation x4356))
(assert (axiom_int_approximation x4359))
(assert (axiom_int_approximation x4360))
(assert (axiom_int_approximation x4361))
(assert (axiom_int_approximation x4366))
(assert (axiom_int_approximation x4367))
(assert (axiom_int_approximation x4368))
(assert (axiom_int_approximation x4370))
(assert (axiom_int_approximation x4372))
(assert (axiom_int_approximation x4374))
(assert (axiom_int_approximation x4375))
(assert (axiom_int_approximation x4378))
(assert (axiom_int_approximation x4379))
(assert (axiom_int_approximation x4380))
(assert (axiom_int_approximation x4383))
(assert (axiom_int_approximation x4385))
(assert (axiom_int_approximation x4389))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x4390))
(assert (axiom_int_approximation x4391))
(assert (axiom_int_approximation x4392))
(assert (axiom_int_approximation x4393))
(assert (axiom_int_approximation x4394))
(assert (axiom_int_approximation x4395))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x4402))
(assert (axiom_int_approximation x4403))
(assert (axiom_int_approximation x4406))
(assert (axiom_int_approximation x4407))
(assert (axiom_int_approximation x4409))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x4410))
(assert (axiom_int_approximation x4412))
(assert (axiom_int_approximation x4414))
(assert (axiom_int_approximation x4416))
(assert (axiom_int_approximation x4417))
(assert (axiom_int_approximation x4419))
(assert (axiom_int_approximation x4420))
(assert (axiom_int_approximation x4422))
(assert (axiom_int_approximation x4427))
(assert (axiom_int_approximation x4428))
(assert (axiom_int_approximation x4429))
(assert (axiom_int_approximation x4430))
(assert (axiom_int_approximation x4431))
(assert (axiom_int_approximation x4434))
(assert (axiom_int_approximation x4436))
(assert (axiom_int_approximation x4437))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x4443))
(assert (axiom_int_approximation x4445))
(assert (axiom_int_approximation x4446))
(assert (axiom_int_approximation x4447))
(assert (axiom_int_approximation x4448))
(assert (axiom_int_approximation x4450))
(assert (axiom_int_approximation x4452))
(assert (axiom_int_approximation x4455))
(assert (axiom_int_approximation x4457))
(assert (axiom_int_approximation x4460))
(assert (axiom_int_approximation x4465))
(assert (axiom_int_approximation x4467))
(assert (axiom_int_approximation x4468))
(assert (axiom_int_approximation x4470))
(assert (axiom_int_approximation x4479))
(assert (axiom_int_approximation x4480))
(assert (axiom_int_approximation x4482))
(assert (axiom_int_approximation x4483))
(assert (axiom_int_approximation x4485))
(assert (axiom_int_approximation x4488))
(assert (axiom_int_approximation x4490))
(assert (axiom_int_approximation x4491))
(assert (axiom_int_approximation x4493))
(assert (axiom_int_approximation x4497))
(assert (axiom_int_approximation x4498))
(assert (axiom_int_approximation x4499))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x4500))
(assert (axiom_int_approximation x4503))
(assert (axiom_int_approximation x4512))
(assert (axiom_int_approximation x4519))
(assert (axiom_int_approximation x4523))
(assert (axiom_int_approximation x4534))
(assert (axiom_int_approximation x4536))
(assert (axiom_int_approximation x4537))
(assert (axiom_int_approximation x4538))
(assert (axiom_int_approximation x4543))
(assert (axiom_int_approximation x4545))
(assert (axiom_int_approximation x4547))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x4551))
(assert (axiom_int_approximation x4555))
(assert (axiom_int_approximation x4557))
(assert (axiom_int_approximation x4558))
(assert (axiom_int_approximation x4559))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x4560))
(assert (axiom_int_approximation x4561))
(assert (axiom_int_approximation x4562))
(assert (axiom_int_approximation x4564))
(assert (axiom_int_approximation x4566))
(assert (axiom_int_approximation x4567))
(assert (axiom_int_approximation x4569))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x4570))
(assert (axiom_int_approximation x4571))
(assert (axiom_int_approximation x4574))
(assert (axiom_int_approximation x4578))
(assert (axiom_int_approximation x4579))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x4581))
(assert (axiom_int_approximation x4582))
(assert (axiom_int_approximation x4584))
(assert (axiom_int_approximation x4585))
(assert (axiom_int_approximation x4589))
(assert (axiom_int_approximation x4590))
(assert (axiom_int_approximation x4593))
(assert (axiom_int_approximation x4596))
(assert (axiom_int_approximation x4597))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x4601))
(assert (axiom_int_approximation x4605))
(assert (axiom_int_approximation x4608))
(assert (axiom_int_approximation x4609))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x4610))
(assert (axiom_int_approximation x4615))
(assert (axiom_int_approximation x4617))
(assert (axiom_int_approximation x4618))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x4621))
(assert (axiom_int_approximation x4623))
(assert (axiom_int_approximation x4624))
(assert (axiom_int_approximation x4629))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x4630))
(assert (axiom_int_approximation x4633))
(assert (axiom_int_approximation x4634))
(assert (axiom_int_approximation x4635))
(assert (axiom_int_approximation x4637))
(assert (axiom_int_approximation x4642))
(assert (axiom_int_approximation x4647))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x4650))
(assert (axiom_int_approximation x4651))
(assert (axiom_int_approximation x4652))
(assert (axiom_int_approximation x4655))
(assert (axiom_int_approximation x4658))
(assert (axiom_int_approximation x4661))
(assert (axiom_int_approximation x4664))
(assert (axiom_int_approximation x4665))
(assert (axiom_int_approximation x4669))
(assert (axiom_int_approximation x4670))
(assert (axiom_int_approximation x4676))
(assert (axiom_int_approximation x4677))
(assert (axiom_int_approximation x4680))
(assert (axiom_int_approximation x4681))
(assert (axiom_int_approximation x4686))
(assert (axiom_int_approximation x4688))
(assert (axiom_int_approximation x4689))
(assert (axiom_int_approximation x4692))
(assert (axiom_int_approximation x4693))
(assert (axiom_int_approximation x4695))
(assert (axiom_int_approximation x4697))
(assert (axiom_int_approximation x4699))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x4700))
(assert (axiom_int_approximation x4701))
(assert (axiom_int_approximation x4702))
(assert (axiom_int_approximation x4703))
(assert (axiom_int_approximation x4704))
(assert (axiom_int_approximation x4709))
(assert (axiom_int_approximation x4711))
(assert (axiom_int_approximation x4712))
(assert (axiom_int_approximation x4716))
(assert (axiom_int_approximation x4718))
(assert (axiom_int_approximation x472))
(assert (axiom_int_approximation x4720))
(assert (axiom_int_approximation x4721))
(assert (axiom_int_approximation x4725))
(assert (axiom_int_approximation x4727))
(assert (axiom_int_approximation x4729))
(assert (axiom_int_approximation x4730))
(assert (axiom_int_approximation x4735))
(assert (axiom_int_approximation x4739))
(assert (axiom_int_approximation x4742))
(assert (axiom_int_approximation x4748))
(assert (axiom_int_approximation x475))
(assert (axiom_int_approximation x4751))
(assert (axiom_int_approximation x4752))
(assert (axiom_int_approximation x4754))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x4760))
(assert (axiom_int_approximation x4764))
(assert (axiom_int_approximation x4765))
(assert (axiom_int_approximation x4766))
(assert (axiom_int_approximation x4774))
(assert (axiom_int_approximation x4775))
(assert (axiom_int_approximation x4776))
(assert (axiom_int_approximation x4777))
(assert (axiom_int_approximation x4778))
(assert (axiom_int_approximation x4779))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x4780))
(assert (axiom_int_approximation x4782))
(assert (axiom_int_approximation x4789))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x4790))
(assert (axiom_int_approximation x4791))
(assert (axiom_int_approximation x4792))
(assert (axiom_int_approximation x4793))
(assert (axiom_int_approximation x4794))
(assert (axiom_int_approximation x4795))
(assert (axiom_int_approximation x4796))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x4800))
(assert (axiom_int_approximation x4801))
(assert (axiom_int_approximation x4802))
(assert (axiom_int_approximation x4804))
(assert (axiom_int_approximation x4805))
(assert (axiom_int_approximation x4807))
(assert (axiom_int_approximation x4809))
(assert (axiom_int_approximation x4810))
(assert (axiom_int_approximation x4813))
(assert (axiom_int_approximation x4815))
(assert (axiom_int_approximation x4821))
(assert (axiom_int_approximation x4824))
(assert (axiom_int_approximation x4825))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x4830))
(assert (axiom_int_approximation x4831))
(assert (axiom_int_approximation x4833))
(assert (axiom_int_approximation x4834))
(assert (axiom_int_approximation x4835))
(assert (axiom_int_approximation x4836))
(assert (axiom_int_approximation x4838))
(assert (axiom_int_approximation x4841))
(assert (axiom_int_approximation x4846))
(assert (axiom_int_approximation x4848))
(assert (axiom_int_approximation x4850))
(assert (axiom_int_approximation x4851))
(assert (axiom_int_approximation x4853))
(assert (axiom_int_approximation x4856))
(assert (axiom_int_approximation x4857))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x4862))
(assert (axiom_int_approximation x4864))
(assert (axiom_int_approximation x4868))
(assert (axiom_int_approximation x4874))
(assert (axiom_int_approximation x4875))
(assert (axiom_int_approximation x4876))
(assert (axiom_int_approximation x4877))
(assert (axiom_int_approximation x4878))
(assert (axiom_int_approximation x4890))
(assert (axiom_int_approximation x4894))
(assert (axiom_int_approximation x4896))
(assert (axiom_int_approximation x4899))
(assert (axiom_int_approximation x4900))
(assert (axiom_int_approximation x4901))
(assert (axiom_int_approximation x4902))
(assert (axiom_int_approximation x4903))
(assert (axiom_int_approximation x4904))
(assert (axiom_int_approximation x4905))
(assert (axiom_int_approximation x4906))
(assert (axiom_int_approximation x4910))
(assert (axiom_int_approximation x4911))
(assert (axiom_int_approximation x4912))
(assert (axiom_int_approximation x4913))
(assert (axiom_int_approximation x4914))
(assert (axiom_int_approximation x4915))
(assert (axiom_int_approximation x4918))
(assert (axiom_int_approximation x4919))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x4920))
(assert (axiom_int_approximation x4921))
(assert (axiom_int_approximation x4925))
(assert (axiom_int_approximation x4926))
(assert (axiom_int_approximation x4928))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x4932))
(assert (axiom_int_approximation x4937))
(assert (axiom_int_approximation x4939))
(assert (axiom_int_approximation x4940))
(assert (axiom_int_approximation x4942))
(assert (axiom_int_approximation x4946))
(assert (axiom_int_approximation x4947))
(assert (axiom_int_approximation x4949))
(assert (axiom_int_approximation x4951))
(assert (axiom_int_approximation x4953))
(assert (axiom_int_approximation x4954))
(assert (axiom_int_approximation x4955))
(assert (axiom_int_approximation x4956))
(assert (axiom_int_approximation x4957))
(assert (axiom_int_approximation x4959))
(assert (axiom_int_approximation x4960))
(assert (axiom_int_approximation x4963))
(assert (axiom_int_approximation x4965))
(assert (axiom_int_approximation x4968))
(assert (axiom_int_approximation x4970))
(assert (axiom_int_approximation x4973))
(assert (axiom_int_approximation x4976))
(assert (axiom_int_approximation x4978))
(assert (axiom_int_approximation x4979))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x4981))
(assert (axiom_int_approximation x4984))
(assert (axiom_int_approximation x4988))
(assert (axiom_int_approximation x4990))
(assert (axiom_int_approximation x4994))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x503))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x523))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x54))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x559))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x651))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x689))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x693))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x715))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x736))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x747))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x768))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x827))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x843))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x866))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x872))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x886))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x923))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x925))
(assert (axiom_int_approximation x926))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x939))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x970))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x978))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x994))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x997))
(assert (axiom_int_approximation x998))
(assert (axiom_int_approximation x999))
(assert (= (and x4971 (not x114)) x743))
(assert (= (and x1969 (not x4454)) x1825))
(assert (x1513 x1371))
(assert (x2349 x4857 x2067))
(assert (x1513 x2311))
(assert (= (x1582 (x1894 x3907)) (ite (= (x1894 x3907) (x1894 274184521717934524641157099916833587240)) x4701 (x1912 (x1894 x3907)))))
(assert (x1513 x1923))
(assert (x2417 x3473))
(assert (x1513 x573))
(assert (x1513 x4206))
(assert (x1513 x1767))
(assert (x1513 x3309))
(assert (x2417 x1092))
(assert (x1513 x2591))
(assert (= (x2856 (x1894 x4609)) x4609))
(assert (x1513 x1950))
(assert (x1513 x142))
(assert (= 0 (x953 (- x1333 356))))
(assert (= (x3519 (x1894 x1030)) (ite x1846 (ite x4600 (x1727 (x1894 x1030)) (x853 (x1894 x1030))) (x1807 (x1894 x1030)))))
(assert (= (x2053 x4340) (ite (= x4340 388) x4729 (x65 x4340))))
(assert (= x4235 (and x1349 (not x3939))))
(assert (= (and x2436 (not x1706)) x1349))
(assert (x1513 x3397))
(assert (x1513 x2889))
(assert (= (ite x2139 (x1436 (x1894 x847)) (ite (and x865 (not x3527) x4586) (x2316 (x1894 x847)) (x1720 (x1894 x847)))) (x2476 (x1894 x847))))
(assert (= (ite (= x4607 x2218) x4322 (x1377 x4607)) (x201 x4607)))
(assert (= (x2856 (x1894 x335)) x335))
(assert (= (x1894 599290589) (x4822 599290589)))
(assert (= (x4952 x1348) (ite (= x1039 x1348) x2204 (x3566 x1348))))
(assert (= (and x2108 x2670) x3982))
(assert (= (ite (and x3767 (not x179)) (ite (and x3980 (not x941) x542) (x615 x3713) (x3618 x3713)) (ite x2999 (ite x938 (x1034 x3713) (x3618 x3713)) (x3618 x3713))) (x4662 x3713)))
(assert (x1513 x2063))
(assert (= (x1083 (x1894 x3675)) (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x3675)) x3573 (x874 (x1894 x3675)))))
(assert (= (ite x4806 (ite (and x238 x641) (x102 x1120) (x4644 x1120)) (ite (and x1313 (not x2648) x2519) (x4924 x1120) (x102 x1120))) (x572 x1120)))
(assert (x1513 x2368))
(assert (x1513 x3896))
(assert (x934 x77 x33))
(assert (= (ite x3426 (x812 x402) (x354 x402)) (x664 x402)))
(assert (x1513 x4800))
(assert (= (ite (= x1820 x2218) x4322 (x1377 x1820)) (x201 x1820)))
(assert (= x3188 (or (and x2089 x108) (and x1140 x2167) (and x2082 x3719) (and x4872 x3414) (and x1352 x2306) (and (not x249) x4477))))
(assert (x1513 x244))
(assert (= (x2856 (x1894 x1030)) x1030))
(assert (x1513 x563))
(assert (= (ite (= x4679 x3866) x1441 (x1377 x3866)) (x1939 x3866)))
(assert (= (and x1944 (not x637)) x1046))
(assert (x1513 x899))
(assert (= (ite (and x3767 (not x179)) (x500 x159) (ite x2999 (ite x938 (x4870 x159) (x709 x159)) (x709 x159))) (x2174 x159)))
(assert (= (=> (and (= (= x1545 x4959) x3261) (= x1545 x2207)) (and (=> (not x3261) x3249) (=> x3261 x4233))) x3509))
(assert (= (x1844 x4910) 0))
(assert (x1513 x2803))
(assert (x2417 x867))
(assert (x2417 x1735))
(assert (x1513 x2268))
(assert (x1513 x1177))
(assert (x1513 x174))
(assert (x1513 x2239))
(assert (x1513 x4547))
(assert (x1513 x3789))
(assert (x1513 x1329))
(assert (x934 x3421 x4776))
(assert (= (and (not x2483) x2377) x1273))
(assert (x1513 x4957))
(assert (= (or (and x1358 x2723) (and x3584 x605) (and x2718 x1536)) x1404))
(assert (= (ite (= x851 x4746) x3108 (x675 x851)) (x1953 x851)))
(assert (= (x3163 x4094) (ite (and x1970 x4678) (x793 x4094) (x2007 x4094))))
(assert (x3166 x3633))
(assert (x1513 x4813))
(assert (x1513 x829))
(assert (= (x1720 (x1894 x3392)) (ite x674 (x3670 (x1894 x3392)) (ite (and x4909 x4137 (not x4004)) (x4268 (x1894 x3392)) (x3670 (x1894 x3392))))))
(assert (x1513 x3378))
(assert (= x3299 (=> (= (> x3020 0) x2321) (and (=> x2321 x58) (=> (not x2321) x2460)))))
(assert (x3166 x479))
(assert (= x4451 (or (and (not x4544) x1771) x3740)))
(assert (x1513 x4262))
(assert (x1513 x3204))
(assert (= (=> (and (= x179 (> x4181 x3913)) (= (x1229 (+ x1849 x3481)) x4181)) (and (=> x179 x2460) (=> (and (not x179) (= x3342 x4226)) x421))) x1865))
(assert (x1513 x1114))
(assert (= (ite x3925 (ite x1906 (x2602 x1540) (x1939 x1540)) (x1939 x1540)) (x1983 x1540)))
(assert (= (ite x3925 (ite x1906 (x3244 x851) (x3126 x851)) (x3171 x851)) (x102 x851)))
(assert (x1513 x4184))
(assert (x1513 x3349))
(assert (x1513 x3421))
(assert (x1513 x1548))
(assert (x1513 x2041))
(assert (= (=> (and (= x2154 x2299) (= x346 x4297) (= x2614 (- (x590 (x1894 x3907)) x2132)) (= 0 x2132) (= (x1229 (+ x2132 (uninterp_mod (x4967 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x862) (= x3097 (< (+ x2132 (x4967 (x1894 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3097) x3544) x262))
(assert (x1513 x2202))
(assert (x1513 x3468))
(assert (x2417 x2213))
(assert (= (ite (= x4340 356) x920 (x1848 x4340)) (x65 x4340)))
(assert (x1513 x368))
(assert (= x325 (and x370 x3035)))
(assert (= x2008 (x2856 (x1894 x2008))))
(assert (x1513 x1025))
(assert (x1513 x843))
(assert (x1513 x4815))
(assert (= (and x4439 x4386) x1140))
(assert (= (x2856 (x4822 34167655436598589418538772692774877509225721125679165766806516059628562808832)) 34167655436598589418538772692774877509225721125679165766806516059628562808832))
(assert (x1513 x2905))
(assert (x1513 x4164))
(assert (x1513 x2480))
(assert (= (ite (and x3767 (not x179)) (x3276 (x1894 x4959)) (ite x2999 (ite x938 (x977 (x1894 x4959)) (x1582 (x1894 x4959))) (x1582 (x1894 x4959)))) (x269 (x1894 x4959))))
(assert (x1513 x2031))
(assert (= (x1894 79228162514264337593543950336) (x4822 79228162514264337593543950336)))
(assert (x1513 x2773))
(assert (= x2344 (or x4948 (and (not x4640) x3537))))
(assert (x1513 x4498))
(assert (x1513 x1593))
(assert (= (ite (= x2218 x4489) x4322 (x1377 x4489)) (x201 x4489)))
(assert (= (x2005 x67) (ite x2139 (x3389 x67) (ite (and x4586 x865 (not x3527)) (x3049 x67) (x3389 x67)))))
(assert (= x791 (and (not x2732) x3914)))
(assert (= (=> (and (= x2158 x3627) (= 0 x4650)) x2921) x1595))
(assert (= (and x3278 (not x3881)) x3164))
(assert (x1513 x3528))
(assert (x2417 x1492))
(assert (x1513 x1123))
(assert (x1513 x3350))
(assert (x1513 x2956))
(assert (x1513 x3651))
(assert (= (x3604 x2241) x844))
(assert (= (ite x3925 (ite x1906 (x2602 x4986) (x1939 x4986)) (x1939 x4986)) (x1983 x4986)))
(assert (= (x4773 x4340) (ite (= x4340 x3818) 274184521717934524641157099916833587240 (x1444 x4340))))
(assert (x1513 x3322))
(assert (x1513 x1870))
(assert (x1513 x4098))
(assert (x1513 x1143))
(assert (x1513 x3023))
(assert (x1513 x1159))
(assert (x1513 x4697))
(assert (x1513 x4249))
(assert (x1513 x2841))
(assert (x1513 x1173))
(assert (= (x1983 x4478) (ite x3925 (ite x1906 (x2602 x4478) (x1939 x4478)) (x1939 x4478))))
(assert (= (x102 x4335) (ite x3925 (ite x1906 (x3244 x4335) (x3126 x4335)) (x3171 x4335))))
(assert (x1513 x2380))
(assert (x1513 x1318))
(assert (x1513 x276))
(assert (= x744 (=> (and (= (x1083 (x1894 274184521717934524641157099916833587240)) x1) (= (x1229 (+ 324 x926)) x1088) (= (= x1081 274184521717934524641157099916833587240) x3236) (= (>= x3672 0) x283) (= x757 (< x39 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x918 324) (= x1275 (x4575 (- x1088 324))) (= x3672 (x1083 (x1894 274184521717934524641157099916833587240))) x283 (= x39 (x1083 (x1894 x1081))) x4492 x757 (= (x1470 (x1894 x1081)) x1278) (= x4492 (< (x1470 (x1894 x1081)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x3236) x4166) (=> (and (= x4936 (= 0 x4711)) (not (= 511946350 x4344)) (> x4249 0) (= (or (and (< x2803 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2803) true)) (> x2803 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4333) (= x3917 (x1319 1461501637330902918203684832716283019655932542975 x3605)) (not (= 455944412 x4344)) (< x4344 1166402363) (= (x1319 1461501637330902918203684832716283019655932542975 x1870) x3339) (= 0 x4878) (not x2665) (= x248 (x4554 x3822)) (= (x2328 (x1894 274184521717934524641157099916833587240)) x4249) (= (x324 x2690) x2608) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x4596) x278) (or (and (= x316 (x1939 x318)) (= (x1319 1461501637330902918203684832716283019655932542975 x316) x4402) (or (and (= x2173 x2047) (= x2047 (x1319 255 x2691)) (= x3944 (x4101 (x1894 x3339) (x4822 211) 0)) (= x2691 (x1939 x4772)) (= x4772 (x4101 (x1894 274184521717934524641157099916833587240) x3944 0)) (not x810)) (and (= x2173 (ite x810 1 0)) x810)) (= x1733 (x4101 (x1894 x240) (x4822 210) 0)) (= x765 (not (= x4402 0))) (= (= x1421 274184521717934524641157099916833587240) x810) (= x318 (x4101 (x1894 x240) (x4822 208) 0)) (not x974) x765 (= x1421 (x1319 1461501637330902918203684832716283019655932542975 x4582)) (= (x1939 x1733) x4582)) (and (= x2173 (ite x974 1 0)) x974)) (= (x1939 x4858) x1870) (= x1275 x1033) (= x240 x250) (= x128 (= 0 x3339)) (= x974 (= 274184521717934524641157099916833587240 x3339)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0) x1082) (< 0 x2173) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1546) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x248) x4590) (= x410 x1770) (= x2964 (= x4624 0)) (< x4344 2311529814) (= (< x3880 1) x4016) (not x4936) (= 0 x3773) (= x3605 (x1939 x1604)) (= (not (= 0 x3917)) x3598) (= x736 274184521717934524641157099916833587240) (not x2964) (= x410 x4436) (= (x4101 (x1894 x240) (x4822 208) 0) x1604) (= 599290589 x4344) (= x3420 (x4101 (x1894 x240) (x4822 210) 0)) (= (x4101 (x1894 x240) (x4822 208) 0) x487) (= (x1229 (+ 1 x1745)) x552) x3236 (= 1 x3012) (= 100 x1033) (= (x1939 x487) x647) (= (x4101 (x1894 x240) (x4822 208) 0) x4858) (= x3880 (x324 x2192)) (= (x4101 (x1894 x240) (x4822 208) 0) x3822) (= x4711 (x1319 1461501637330902918203684832716283019655932542975 x647)) (= 274184521717934524641157099916833587240 x3479) (= (x4575 (- x3880 1)) x2084) x3598 (= x1745 (x4197 x1082)) (= (x1939 x3420) x4596) (<= x410 1461501637330902918203684832716283019655932542975) (not (> 4 x1033)) (= x240 x2684) (not x4016) (= x4436 x4711) (= x278 x3801) (= x2690 (x4101 (x1894 x240) (x4822 208) 0)) (not x4333) (= x2711 (x1229 (+ x4590 274184521717934524641157099916833587240))) (= (x4101 (x1894 x410) (x4822 209) 0) x2192) (= (> x1745 115792089237316195423570985008687907853269984665640564039457584007913129639934) x2665) (not (> 455944412 x4344)) (= (x1319 1461501637330902918203684832716283019655932542975 x2608) x4624) (= x2803 (x4575 (- x1033 4))) (not x128)) x302)))))
(assert (x1513 x3317))
(assert (=> (< (- x867 1) 10000) (= (x4822 x867) (x1894 x867))))
(assert (x1513 x3616))
(assert (x1513 x3590))
(assert (x1513 x2810))
(assert (= (x2856 (x1894 x2482)) x2482))
(assert (= (x4552 x3357) (ite x3426 (ite (and x1308 x4516) (x1507 x3357) (x4091 x3357)) (ite (and x2645 x906 (not x4964)) (x4518 x3357) (x1507 x3357)))))
(assert (x3166 x4730))
(assert (= (ite (= x1282 x1039) x2204 (x3566 x1282)) (x4952 x1282)))
(assert (x2417 x1299))
(assert (x1513 x2000))
(assert (= x4606 (=> (= (< x3287 x3460) x4544) (and (=> (and (= x2769 1) (= 274184521717934524641157099916833587240 x3491) (= x1645 (x4575 (- x3287 x3460))) (not x4544) (= x3999 x2533) (= 274184521717934524641157099916833587240 x2239)) x993) (=> x4544 x347)))))
(assert (x3166 x3449))
(assert (= 599290589 (x2856 (x4822 599290589))))
(assert (x1513 x2184))
(assert (= (=> (and (>= x2773 0) (= x2773 (x2293 x3857)) (= x3962 x3758) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x3857) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2773) (= (> x968 x2773) x4872) (= 274184521717934524641157099916833587240 x2759)) (and (=> x4872 x92) (=> (not x4872) x714))) x2707))
(assert (x1513 x1469))
(assert (x1513 x968))
(assert (x1513 x2222))
(assert (= x3800 (x2856 (x1894 x3800))))
(assert (= (x3604 x246) (ite (= x246 x2241) x844 (x1852 x246))))
(assert (= x2747 (x2856 (x1894 x2747))))
(assert (= (ite (= x2241 x3495) x844 (x1852 x3495)) (x3604 x3495)))
(assert (= (and x366 (not x230)) x549))
(assert (x1513 x4372))
(assert (= x1062 (and (not x399) x3879)))
(assert (x1513 x1449))
(assert (x1513 x3703))
(assert (x1513 x450))
(assert (x1513 x4359))
(assert (x1513 x2926))
(assert (= (x3091 x4578) 0))
(assert (x1513 x1251))
(assert (x1513 x1201))
(assert (= (=> (and (= (x1983 (x4822 56)) x129) (= x2495 (x2328 (x1894 x1092))) (= x1758 (x1983 x4620)) (= (x1319 1461501637330902918203684832716283019655932542975 x1758) x1092) (= x2648 (> x2495 0)) (= (x1319 1461501637330902918203684832716283019655932542975 x129) x850)) (and (=> (and (> x4144 0) (or (and (= x2595 (x1229 (+ x3289 x117))) (= (x1229 (+ 63 x61)) x4212) (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4212) x117) (not x2585) (= x1364 x2595)) (and (= x3289 x1364) x2585)) (= x1313 (and (< (+ x3349 x4115) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1653 x3349))) (= (x1451 (x1894 x850)) x4115) (= (x1451 (x1894 274184521717934524641157099916833587240)) x1653) (not (> x3349 x4315)) (or (and (= 0 x4144) (= x61 0) (not x1313)) (and (= x3742 x61) (= x1438 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x1627 (x1894 274184521717934524641157099916833587240)) x3609))) x1313 (= (> x1828 0) x3967) (= (< (+ x3349 (x3158 (x1894 x850))) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x145) (or (and (> 4294967296 x3742) (= x3450 (= x3144 (x2696 (x1894 x850)))) (= (x4110 (x1894 274184521717934524641157099916833587240)) x1850) (= (x4110 (x1894 x850)) x3144) x3967 x3450 x49 (= (<= x1850 (x2696 (x1894 274184521717934524641157099916833587240))) x49)) (not x3967)) (= x558 (- (x1451 (x1894 274184521717934524641157099916833587240)) x3349)) (= x4144 x1828) (= x985 (- (x468 (x1894 x850)) x3609)) x1438 x145 (= (x1229 (+ x3349 (uninterp_mod (x3158 (x1894 x850)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x686) (= x3609 (ite (= 0 x1828) x3349 0)) (= x2969 (x1229 (+ x3609 (uninterp_mod (x1627 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))) (not x2648) (= x4315 (x1451 (x1894 274184521717934524641157099916833587240))) (= x2585 (= x61 0)) (= x1364 x3823)) x1090) (=> (and (= x3238 (x1229 (+ x1956 32))) (= (x1690 x819) x4571) (= (x1229 (+ 128 x4284)) x2784) x4312 (= (x1229 (+ x3289 36)) x4284) (= (> x3784 x1265) x4494) (= (> x1159 0) x4312) (= x1159 (x2328 (x1894 x1092))) (= x1265 (x1899 x3289)) (= x3464 (x4575 (- x3131 32))) (= (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x4571) x1527) (= x4284 x1956) x2648 (= x1481 0) (= x3553 (x1229 (+ x1527 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= x412 (> x1265 0)) (= (x1229 (+ 32 x3289)) x819) (or (not x4494) (and (= x4123 (x1229 (+ x2784 x1265))) x4494)) (or (and (not x412) (= x3784 0)) (and (or (and (not x913) (= 32 x3784)) (and (or (and (= 64 x3784) (not x209)) (and (= (< 96 x1265) x3358) x209 (or (and x3358 (= (x1229 (+ x3289 128)) x101) (= x3784 128) (not x2890) (= x2441 (x1229 (+ x4712 160))) (= (x3908 x101) x3765) (= (< 128 x1265) x2890)) (and (= x3784 96) (not x3358))) (= x3136 (x1229 (+ 128 x4712))) (= (x3908 x872) x4007) (= (x1229 (+ x3289 96)) x872))) x913 (= (> x1265 64) x209) (= (x1229 (+ 64 x3289)) x2570) (= x4637 (x3908 x2570)) (= (x1229 (+ x4712 96)) x1754))) (= x1189 x2784) (= x913 (> x1265 32)) (= (x3908 x2768) x3950) (= x819 x2768) x412)) (= (x1229 (+ 100 x3289)) x4712) (= x3131 (x4575 (- x4712 x3289)))) x3650))) x4167))
(assert (x1513 x1400))
(assert (x1513 x480))
(assert (=> (< (- x240 1) 10000) (= (x1894 x240) (x4822 x240))))
(assert (= (x1894 274184521717934524641157099916833587206) (x4822 274184521717934524641157099916833587206)))
(assert (x1513 x4288))
(assert (= (ite x3925 (ite x1906 (x2602 x2700) (x1939 x2700)) (x1939 x2700)) (x1983 x2700)))
(assert (x1513 x3172))
(assert (x3166 x3893))
(assert (= x3544 (=> (and (= (= x346 0) x3571) (or (and (= x2070 324) x3571 (= x2980 96)) (and (not x3571) (= x3260 x2070) (= x3260 (x1229 (+ x3859 324))) (= x353 (x1229 (+ 63 x346))) (= x2980 324) (= x3859 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x353))))) x1019)))
(assert (x1513 x2008))
(assert (x1513 x1180))
(assert (x1513 x2162))
(assert (x1513 x235))
(assert (= (ite x4806 (ite (and x641 x238) (x4548 x1500) (x130 x1500)) (ite (and x1313 x2519 (not x2648)) (x196 x1500) (x130 x1500))) (x4568 x1500)))
(assert (x3166 x129))
(assert (= x1010 (and (not x3570) x591)))
(assert (= (x761 (x1894 x1030)) (ite x3848 (x4230 (x1894 x1030)) (ite (and x2934 x2196 (not x3110)) (x529 (x1894 x1030)) (x4230 (x1894 x1030))))))
(assert (= x3379 (=> (= x4715 (> x3039 x264)) (and (=> (not x4715) x1554) (=> x4715 x4653)))))
(assert (x3166 x1655))
(assert (x1513 x647))
(assert (x1513 x4742))
(assert (= (ite (and (not x179) x3767) (x3282 x3857) (ite x2999 (ite x938 (x2735 x3857) (x2471 x3857)) (x2471 x3857))) (x2293 x3857)))
(assert (x1513 x1600))
(assert (x1513 x1577))
(assert (x1513 x2882))
(assert (= 0 (x1699 x1328)))
(assert (= (x2856 (x1894 x4959)) x4959))
(assert (x1513 x2743))
(assert (= (x1720 (x1894 x3964)) (ite x674 (x3670 (x1894 x3964)) (ite (and x4909 (not x4004) x4137) (x4268 (x1894 x3964)) (x3670 (x1894 x3964))))))
(assert (=> (> (+ 10000 1) x1260) (= (x1894 x1260) (x4822 x1260))))
(assert (x1513 x642))
(assert (x1513 x3526))
(assert (= (x1983 x4199) (ite x3925 (ite x1906 (x2602 x4199) (x1939 x4199)) (x1939 x4199))))
(assert (= (ite x2139 (x1436 (x1894 x335)) (ite (and (not x3527) x865 x4586) (x2316 (x1894 x335)) (x1720 (x1894 x335)))) (x2476 (x1894 x335))))
(assert (= x4277 (=> (and (= x371 (= x335 x465)) (= x1591 x465)) (and (=> (not x371) x1595) (=> x371 x2854)))))
(assert (x1513 x4289))
(assert (x1513 x3062))
(assert (x2349 x3807 x2254))
(assert (= x284 (=> (= (< x689 x1849) x4251) (and (=> (and (= 128 x4226) (not x4251)) x421) (=> x4251 x2460)))))
(assert (= (x828 x4340) (ite (and x3767 (not x179)) (ite (and (not x4148) x951) (x1488 x4340) (x2477 x4340)) (ite x2999 (ite x938 (x4179 x4340) (x3382 x4340)) (x2885 x4340)))))
(assert (= (ite (= x2218 x3385) x4322 (x1377 x3385)) (x201 x3385)))
(assert (= (and (not x40) x3951) x3159))
(assert (x1513 x2625))
(assert (x1513 x587))
(assert (x1513 x2666))
(assert (x1513 x1208))
(assert (x1513 x4284))
(assert (x1513 x3096))
(assert (x1513 x1369))
(assert (= (or x1846 x2330) x2645))
(assert (x1513 x3457))
(assert (= x1545 (x2856 (x1894 x1545))))
(assert (= x855 (=> (= x2732 (< x1693 x2013)) (and (=> x2732 x1595) (=> (not x2732) x4146)))))
(assert (= (ite x674 (x3670 (x1894 274184521717934524641157099916833587240)) (ite (and x4137 (not x4004) x4909) (x4268 (x1894 274184521717934524641157099916833587240)) (x3670 (x1894 274184521717934524641157099916833587240)))) (x1720 (x1894 274184521717934524641157099916833587240))))
(assert (x1513 x2963))
(assert (= x1044 (and x2061 (not x1891))))
(assert (= (ite (= x2241 x411) x844 (x1852 x411)) (x3604 x411)))
(assert (= (ite x1846 (ite x4600 (x311 x4070) (x3248 x4070)) (ite (and x1970 x4678) (x916 x4070) (x3248 x4070))) (x2185 x4070)))
(assert (x1513 x243))
(assert (= (=> (and (= x4609 (x1319 1461501637330902918203684832716283019655932542975 x3057)) (= x3057 (x3566 x1549)) (= (= x4609 0) x2376) (= (x4101 (x1894 x505) (x4822 208) 0) x1549)) (and (=> (not x2376) x3868) (=> x2376 x1272))) x4471))
(assert (x1513 x2500))
(assert (= (=> (and x2580 x451 (= 324 x3804) (= x2364 (x853 (x1894 274184521717934524641157099916833587240))) (= x2315 (x1229 (+ x4512 324))) (= (x853 (x1894 x2419)) x2472) (= (x853 (x1894 274184521717934524641157099916833587240)) x1736) (= (= 274184521717934524641157099916833587240 x2419) x4454) x4849 (= (< x2472 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2580) (= x2358 (x4575 (- x2315 324))) (= x4849 (< (x1782 (x1894 x2419)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x96 (x1782 (x1894 x2419))) (= (>= x1736 0) x451)) (and (=> (not x4454) x2011) (=> (and (= (x1319 1461501637330902918203684832716283019655932542975 x1739) x4024) (not x3576) (not x4153) (> x1200 0) (= (x1319 1461501637330902918203684832716283019655932542975 x947) x3430) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4131) x3576) (= 100 x711) (= x597 (x4101 (x1894 x3201) (x4822 208) 0)) (= x3078 (x1051 x1678)) (= (x201 x597) x2811) (= x4206 599290589) (= x3125 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2692)) (< x2692 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2692))) (= x3048 x3734) (= (= x1006 0) x2931) (= x3979 (x1229 (+ 1 x4131))) (> 1166402363 x4206) (= x711 x2358) (= x224 (x1319 1461501637330902918203684832716283019655932542975 x2811)) (= (x2328 (x1894 274184521717934524641157099916833587240)) x3690) (= 0 x3517) (= x4244 (x4575 (- x3078 1))) (= (x4101 (x1894 x2202) (x4822 209) 0) x1678) (>= 1461501637330902918203684832716283019655932542975 x2202) (= x1873 x2202) (= x1820 (x4101 (x1894 x3201) (x4822 208) 0)) (= x589 (x4101 (x1894 x3201) (x4822 208) 0)) (= 1 x2661) (not x3125) (= x231 x3201) (= x4579 (x1229 (+ x3653 274184521717934524641157099916833587240))) (= (= x1006 274184521717934524641157099916833587240) x4532) (= (x1319 1461501637330902918203684832716283019655932542975 x476) x1006) (= (x4254 x3234) x4131) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x358) (= x379 (x4101 (x1894 x3201) (x4822 210) 0)) (not (= 511946350 x4206)) (= 0 x251) (= x265 274184521717934524641157099916833587240) (= (x1051 x1505) x947) (< x4206 2311529814) (= x1505 (x4101 (x1894 x3201) (x4822 208) 0)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0) x3234) (not (= 455944412 x4206)) (= x2202 x3862) (not x2931) (= (x201 x1820) x1739) (= x3734 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2010)) (= x4411 (x4101 (x1894 x3201) (x4822 208) 0)) (= (x201 x379) x2010) (not (< x711 4)) (not x2847) x2568 (= x476 (x201 x589)) (= x2692 (x4575 (- x711 4))) (= (= 0 x4024) x4153) (= x4024 x3862) (not (> 455944412 x4206)) (not x825) (= x2420 274184521717934524641157099916833587240) (= x3201 x4403) (= x2568 (not (= 0 x224))) (= (x2313 x4411) x1123) (> x3690 0) (or (and x4532 (= (ite x4532 1 0) x1200)) (and (= (x1319 1461501637330902918203684832716283019655932542975 x2852) x4066) (or (and (= x3697 (x4101 (x1894 274184521717934524641157099916833587240) x3612 0)) (= (x4101 (x1894 x1006) (x4822 211) 0) x3612) (= x2470 (x1319 255 x3530)) (= (x201 x3697) x3530) (= x2470 x1200) (not x3271)) (and (= (ite x3271 1 0) x1200) x3271)) (= x728 (not (= 0 x4066))) (= x3271 (= 274184521717934524641157099916833587240 x4928)) (= (x201 x3107) x486) (= (x1319 1461501637330902918203684832716283019655932542975 x486) x4928) (= (x201 x2577) x2852) (= x3107 (x4101 (x1894 x3201) (x4822 210) 0)) x728 (= (x4101 (x1894 x3201) (x4822 208) 0) x2577) (not x4532))) (= x825 (< x3078 1)) (= x3653 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1123)) x4454 (= (= 0 x3430) x2847)) x1692))) x1889))
(assert (x1513 x3984))
(assert (x3166 x2462))
(assert (= (ite (= x411 x3495) x2156 (x3604 x3495)) (x1267 x3495)))
(assert (x1513 x621))
(assert (x1513 x115))
(assert (= (or (and x2435 x1066) (and x2991 x2728) (and x4757 x549)) x1615))
(assert (x1513 x1968))
(assert (= (and x3570 x591) x2052))
(assert (x1513 x846))
(assert (= (x136 x1680) 0))
(assert (x2349 x1478 x3319))
(assert (x1513 x4212))
(assert (= 0 (x136 x2838)))
(assert (x1513 x1478))
(assert (x1513 x3078))
(assert (x1513 x2249))
(assert (x1513 x1306))
(assert (= (=> (= (< 0 x3378) x2164) (and (=> (not x2164) x2460) (=> x2164 x4049))) x2612))
(assert (x3166 x1739))
(assert (= (=> (and (= x901 (= 274184521717934524641157099916833587206 x3392)) (= x1590 (x3390 (x1894 x3392))) x1238 (= x1238 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3390 (x1894 x3392)))) (= x3152 (x2098 (x1894 274184521717934524641157099916833587240)))) (and (=> x901 x3745) (=> (not x901) x1277))) x2079))
(assert (x3166 x4559))
(assert (x1513 x502))
(assert (=> (< (- x235 1) 10000) (= (x4822 x235) (x1894 x235))))
(assert (x1513 x377))
(assert (x1513 x2331))
(assert (x1513 x596))
(assert (= x3249 (=> (and (= 0 x1819) (= x4800 x3209)) x4682)))
(assert (x1513 x2724))
(assert (x1513 x2636))
(assert (x1513 x2490))
(assert (=> (< (- x3201 1) 10000) (= (x1894 x3201) (x4822 x3201))))
(assert (x1513 x3797))
(assert (x1513 x4838))
(assert (x1513 x1941))
(assert (= (x76 x1139) (ite (= x261 x1139) x1689 (x709 x1139))))
(assert (= (ite (= x4766 x1189) x3950 (x1669 x4766)) (x3768 x4766)))
(assert (x1513 x568))
(assert (= (x1325 x1036) (ite (= x1036 x790) x35 (x2657 x1036))))
(assert (x1513 x2430))
(assert (x1513 x4367))
(assert (= 0 (x1560 x4288)))
(assert (= (ite x4941 (ite (and (not x2275) x4941) (x1003 x3857) (x539 x3857)) (x3126 x3857)) (x2471 x3857)))
(assert (x1513 x2035))
(assert (= (=> (= x4083 (= 0 x2695)) (and (=> x4083 x2460) (=> (not x4083) x2294))) x4042))
(assert (x778 x2010 x1647 x3837 x2454))
(assert (= (ite (= x4679 x837) x1441 (x1377 x837)) (x1939 x837)))
(assert (= (x709 x1484) (ite x4941 (ite (and (not x2275) x4941) (x208 x1484) (x4155 x1484)) (x1625 x1484))))
(assert (= (ite (= x4679 x4178) x1441 (x1377 x4178)) (x1939 x4178)))
(assert (x1513 x3595))
(assert (x1513 x2525))
(assert (= (and x4684 x3261) x1024))
(assert (= true x1613))
(assert (x2417 x2484))
(assert (= (x1983 x4223) (ite x3925 (ite x1906 (x2602 x4223) (x1939 x4223)) (x1939 x4223))))
(assert (x1513 x1509))
(assert (= x2859 (=> (and (= (not (= x3902 0)) x792) (= (x4101 (x1894 x2213) (x4822 208) 0) x2939) (= x2818 (x3604 x2939)) (= x3902 (x1319 1461501637330902918203684832716283019655932542975 x2818))) (and (=> (and (= x1883 (x4101 (x1894 x2213) (x4822 210) 0)) (or (and (= x144 (x3604 x3866)) (= x735 x2209) (= (x1319 255 x144) x735) (not x295) (= (x4101 (x1894 x2962) (x4822 211) 0) x4381) (= x3866 (x4101 (x1894 274184521717934524641157099916833587240) x4381 0))) (and x295 (= (ite x295 1 0) x2209))) (= x295 (= 274184521717934524641157099916833587240 x2706)) (= x2706 (x1319 1461501637330902918203684832716283019655932542975 x220)) x792 (= x220 (x3604 x1883))) x1646) (=> (not x792) x2971)))))
(assert (x1513 x4195))
(assert (= (x4568 x1036) (ite x4806 (ite (and x641 x238) (x4548 x1036) (x130 x1036)) (ite (and x2519 (not x2648) x1313) (x196 x1036) (x130 x1036)))))
(assert (x1513 x2188))
(assert (= (x1894 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x4822 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1513 x1006))
(assert (= x1155 (and (not x3993) x1024)))
(assert (x1513 x4430))
(assert (x1513 x3613))
(assert (x2417 x2962))
(assert (= x1867 (=> (and (= (= 0 x2368) x2866) (or (and (not x2866) (= x636 x4175) (= (x1229 (+ x1569 96)) x3490)) (and (= 96 x4175) x2866))) x3003)))
(assert (= x256 (or (and x1922 (not x4237)) (and (not x917) x1005))))
(assert (x1513 x3513))
(assert (= (x4306 x851) (ite x674 (ite (and x4128 x4346) (x572 x851) (ite (and x355 x2985) (x572 x851) (x291 x851))) (ite (and x4909 (not x4004) x4137) (x3580 x851) (x572 x851)))))
(assert (= (ite x3925 (ite x1906 (x2602 x2111) (x1939 x2111)) (x1939 x2111)) (x1983 x2111)))
(assert (= (x1939 x1632) (ite (= x4679 x1632) x1441 (x1377 x1632))))
(assert (x1513 x1099))
(assert (x1513 x265))
(assert (x1513 x1265))
(assert (x1513 x4911))
(assert (=> (> (+ 10000 1) x4609) (= (x4822 x4609) (x1894 x4609))))
(assert (= (ite x674 (ite (and x4346 x4128) (x4568 x4248) (ite (and x355 x2985) (x4090 x4248) (x4568 x4248))) (ite (and x4909 (not x4004) x4137) (x3698 x4248) (x4568 x4248))) (x3846 x4248)))
(assert (= (ite x2139 (x1436 (x1894 x2482)) (ite (and (not x3527) x865 x4586) (x2316 (x1894 x2482)) (x1720 (x1894 x2482)))) (x2476 (x1894 x2482))))
(assert (= (x2476 (x1894 x3441)) (ite x2139 (x1436 (x1894 x3441)) (ite (and (not x3527) x4586 x865) (x2316 (x1894 x3441)) (x1720 (x1894 x3441))))))
(assert (x1513 x553))
(assert (= (ite x4806 (ite (and x238 x641) (x102 x2715) (x4644 x2715)) (ite (and x2519 x1313 (not x2648)) (x4924 x2715) (x102 x2715))) (x572 x2715)))
(assert (x1513 x462))
(assert (= (x1953 x2715) (ite (= x2715 x4746) x3108 (x675 x2715))))
(assert (x1513 x1092))
(assert (= 1722255204 (x2856 (x4822 1722255204))))
(assert (x1513 x20))
(assert (= x4546 (=> (and (= (x683 x168) x3896) (= x780 (x2324 x2392)) (= x4900 (x4575 (- x2019 1))) (= x1143 0) (= x1710 (x2328 (x1894 x3392))) (= (< 0 x1710) x1052) (= (x4101 (x1894 x3022) (x4822 208) 0) x168) (= (x1319 1461501637330902918203684832716283019655932542975 x780) x3392) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3896) x925)) (and (=> x1052 x2765) (=> (not x1052) x4158)))))
(assert (x1513 x942))
(assert (= (=> (and (= (= x847 274184521717934524641157099916833587206) x3776) x63 (= (x737 (x1894 x847)) x1620) (= (< (x737 (x1894 x847)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x63) (= x3462 (x269 (x1894 274184521717934524641157099916833587240)))) (and (=> (not x3776) x3870) (=> x3776 x1567))) x1495))
(assert (= (x675 x3857) (ite (= x3857 x2676) x4949 (x2471 x3857))))
(assert (x1513 x4370))
(assert (= (x572 x2843) (ite x4806 (ite (and x641 x238) (x102 x2843) (x4644 x2843)) (ite (and (not x2648) x2519 x1313) (x4924 x2843) (x102 x2843)))))
(assert (= (or (and x370 (not x3035)) x1565) x4415))
(assert (x1513 x712))
(assert (x1513 x4389))
(assert (x1513 x1803))
(assert (= (x2476 (x1894 274184521717934524641157099916833587240)) (ite x2139 (x1436 (x1894 274184521717934524641157099916833587240)) (ite (and (not x3527) x865 x4586) (x2316 (x1894 274184521717934524641157099916833587240)) (x1720 (x1894 274184521717934524641157099916833587240))))))
(assert (= (x1962 x4175) (ite x94 (x84 x4175) (x2088 x4175))))
(assert (= (ite (= x146 x1328) x4574 (x1192 x1328)) (x1802 x1328)))
(assert (x1513 x3930))
(assert (= (ite x4806 (x4931 x3300) (x4626 x3300)) (x4096 x3300)))
(assert (= (x4306 x1307) (ite x674 (ite (and x4346 x4128) (x572 x1307) (ite (and x2985 x355) (x572 x1307) (x291 x1307))) (ite (and x4909 x4137 (not x4004)) (x3580 x1307) (x572 x1307)))))
(assert (= x4049 (=> (= x4226 x2070) x421)))
(assert (x1513 x435))
(assert (= x2875 true))
(assert (= x4945 (=> (and (= x3100 (= (ite x671 1 0) x2345)) (= x4098 (x1229 (+ x2284 32))) (= (x4405 x4098) x2345) (= (= 0 x2345) x509) (= (not x509) x671)) (and (=> x3100 x2693) (=> (not x3100) x2460)))))
(assert (x1513 x4394))
(assert (x1513 x2783))
(assert (x1513 x4062))
(assert (x1513 x2209))
(assert (x1513 x2790))
(assert (= (and (not x4287) x1370) x2049))
(assert (x1513 x4431))
(assert (x1513 x2711))
(assert (x2349 x1303 x2646))
(assert (x4612 x1425 x3149 x2040 x56))
(assert (x4612 x479 x2583 x3882 x2997))
(assert (x1513 x3034))
(assert (x1513 x4422))
(assert (x1513 x2057))
(assert (= (x1939 x1759) (ite (= x1759 x4679) x1441 (x1377 x1759))))
(assert (= (x201 x3799) (ite (= x3799 x2218) x4322 (x1377 x3799))))
(assert (= x1697 true))
(assert (x1513 x3725))
(assert (x1513 x224))
(assert (x1513 x770))
(assert (= x2705 (=> (= x4935 (= 274184521717934524641157099916833587206 x4133)) (and (=> (not x4935) x2679) (=> (and (= x3045 x585) (= x2092 (x4575 (- x480 4))) (>= 1461501637330902918203684832716283019655932542975 x1735) (= x4667 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= (+ x1915 x927) x1918) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x4245) (= x616 274184521717934524641157099916833587240) (= (x1552 x4207) x1789) (= x4486 (x4101 (x1894 274184521717934524641157099916833587240) x1976 0)) (= (< x2162 x4523) x691) (= x2205 (< x2162 x4523)) (= x480 x4605) (not (= x4082 117300739)) (not x1487) (= x1976 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 2) 0)) (= x4207 (x4101 (x1894 x1735) (x4822 1) 0)) (= x4523 x164) (= x1487 (< x297 x164)) (= (x4575 (- x2162 x164)) x3174) (= x1735 x3027) (not (= x4082 157198259)) (= x1915 x4523) (= 274184521717934524641157099916833587240 x4023) (>= x1789 0) (= x2641 274184521717934524641157099916833587240) (= x4504 (x4101 (x1894 x1735) (x4822 1) 0)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x568) (not (= x4082 404098525)) (not x2205) (< (+ x4523 x1789) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (>= (+ x1789 x4523) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1860) (= (or (> x2092 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2092 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2092 96))) x4529) (not x4529) (< x4082 826074471) (= x2176 (x2328 (x1894 274184521717934524641157099916833587206))) (not (< x480 4)) (not x2302) (= x3138 274184521717934524641157099916833587240) (= x2222 274184521717934524641157099916833587240) (not x1860) (>= x297 0) (= (x2416 x4486) x2162) (<= 0 x2162) (= (x3031 x4667) x297) (> x2176 0) (<= x297 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2162) (not x691) (= x2219 (x4575 (- x297 x164))) (= 599290589 x4082) (= (> x4523 x297) x2302) (= x2421 274184521717934524641157099916833587240) (= x1735 x2378) (= 1 x4629) (= x1789 x927) (= x2771 x164) x4935 (= x480 100) (<= x1789 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2054)))))
(assert (= (ite x94 (ite x3368 (x4553 x2715) (x2293 x2715)) (ite (and x1423 x287 (not x2427)) (x3010 x2715) (x2293 x2715))) (x4505 x2715)))
(assert (x1513 x1601))
(assert (x1513 x3611))
(assert (x1513 x3555))
(assert (x1513 x132))
(assert (= (=> (and (= x2631 (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3068))) (= x3191 (x675 x1074)) (= (> x3191 x2631) x3434) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x1074) (= x3488 274184521717934524641157099916833587240) (<= x3191 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4575 (- x625 x3068)) x4949) (= x2676 (x4101 (x1894 x2922) (x4822 1) 0)) (<= 0 x3191)) (and (=> (not x3434) x3973) (=> x3434 x991))) x533))
(assert (x1513 x3143))
(assert (x1564 x4862 x4912))
(assert (= (ite (= x1746 x4679) x1441 (x1377 x1746)) (x1939 x1746)))
(assert (= x1395 true))
(assert (x1513 x4920))
(assert (= 0 (x1566 x4175)))
(assert (x2417 x896))
(assert (x3166 x3057))
(assert (x1513 x4775))
(assert (x3166 x4164))
(assert (= (x4626 x4910) (ite x3925 (ite x1906 (x357 x4910) (x1844 x4910)) (x1844 x4910))))
(assert (= (ite (= x4679 x3470) x1441 (x1377 x3470)) (x1939 x3470)))
(assert (x1513 x4021))
(assert (x1513 x458))
(assert (= (x15 (x4822 56)) (ite (= x4178 (x4822 56)) x2443 (x1267 (x4822 56)))))
(assert (= (x4784 x3713) (ite x4806 (x4828 x3713) (ite (and x2519 x1313 (not x2648)) (x2505 x3713) (x4828 x3713)))))
(assert (x1513 x4821))
(assert (= (x2856 (x4822 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x1267 x1361) (ite (= x411 x1361) x2156 (x3604 x1361))))
(assert (= (x1983 x773) (ite x3925 (ite x1906 (x2602 x773) (x1939 x773)) (x1939 x773))))
(assert (x1513 x3826))
(assert (= (ite x94 (ite x3368 (x3884 x2022) (x2174 x2022)) (ite (and x287 (not x2427) x1423) (x3511 x2022) (x2174 x2022))) (x520 x2022)))
(assert (x1513 x4721))
(assert (= (x4952 x2700) (ite (= x1039 x2700) x2204 (x3566 x2700))))
(assert (x1513 x2391))
(assert (= (x15 x694) (ite (= x4178 x694) x2443 (x1267 x694))))
(assert (= (=> (and (= x1892 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x1814 (x4101 (x1894 x3067) (x4822 2) 0)) (<= x3304 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1111 (x4101 (x1894 274184521717934524641157099916833587240) x1814 0)) (= x3304 (x640 x1111)) (<= 0 x3304) (= 274184521717934524641157099916833587240 x3256) (= x5 (< x3304 x980)) (= x4482 274184521717934524641157099916833587240)) (and (=> x5 x1853) (=> (not x5) x2656))) x3929))
(assert (= (ite (= x3468 132) 274184521717934524641157099916833587240 (x140 x3468)) (x3341 x3468)))
(assert (x3166 x1758))
(assert (x1513 x4564))
(assert (x3166 x2038))
(assert (x1513 x1415))
(assert (x1513 x3201))
(assert (= 4294967296 (x2856 (x4822 4294967296))))
(assert (= (x1720 (x1894 x847)) (ite x674 (x3670 (x1894 x847)) (ite (and x4137 (not x4004) x4909) (x4268 (x1894 x847)) (x3670 (x1894 x847))))))
(assert (x1513 x2371))
(assert (x1513 x2465))
(assert (x1513 x1165))
(assert (= (ite x1846 (ite x4600 (x534 x2282) (x201 x2282)) (x201 x2282)) (x1199 x2282)))
(assert (x1513 x1635))
(assert (x3166 x1887))
(assert (x1513 x1467))
(assert (=> (< (- x1662 1) 10000) (= (x1894 x1662) (x4822 x1662))))
(assert (= (x1983 x1883) (ite x3925 (ite x1906 (x2602 x1883) (x1939 x1883)) (x1939 x1883))))
(assert (x1513 x2034))
(assert (x2349 x4483 x1432))
(assert (x1513 x2439))
(assert (x1513 x4000))
(assert (= x692 (=> (and (= (x2328 (x1894 x3907)) x2775) (= (> x2775 0) x3707)) (and (=> x3707 x98) (=> (not x3707) x284)))))
(assert (= (=> (and (= x710 (> x3481 x2188)) (= x2188 (x4575 (- x984 x2318)))) (and (=> (not x710) x1865) (=> x710 x2460))) x3422))
(assert (= (=> (and (= x2500 (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2013))) (>= x4765 0) (= x2442 (< x2500 x4765)) (= x4234 274184521717934524641157099916833587240) (= (x2952 x127) x4765) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4765) (= (x4575 (- x1693 x2013)) x4410) (= (x4101 (x1894 x465) (x4822 1) 0) x127) (= x1796 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0))) (and (=> (not x2442) x4103) (=> x2442 x1595))) x4146))
(assert (= (ite (= x3175 x1971) x2478 (x2174 x3175)) (x4246 x3175)))
(assert (= x158 (and (not x1308) x4516)))
(assert (x1513 x3919))
(assert (= (x2856 (x4822 2514000705)) 2514000705))
(assert (= 274184521717934524641157099916833587240 (x2856 (x1894 274184521717934524641157099916833587240))))
(assert (x1513 x676))
(assert (x1513 x1887))
(assert (x1513 x4939))
(assert (= (x1894 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x4822 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (or (and x2834 x4059) (and x2750 x4715) (and x4408 (not x2224)) (and x1314 x848) (and x1891 x2061) (and x699 x1044)) x4881))
(assert (x1513 x3475))
(assert (x1513 x260))
(assert (= (ite (= x4832 x4679) x1441 (x1377 x4832)) (x1939 x4832)))
(assert (= (ite (= x3420 x4679) x1441 (x1377 x3420)) (x1939 x3420)))
(assert (x1513 x682))
(assert (= (x2856 (x1894 x847)) x847))
(assert (= (x4822 274184521717934524641157099916833587240) (x1894 274184521717934524641157099916833587240)))
(assert (x1513 x2721))
(assert (x1513 x4407))
(assert (x4612 x4913 x2536 x4978 x2704))
(assert (x1513 x3440))
(assert (= x3743 (=> (and (= x3377 (x1319 4294967295 x4445)) (= x4735 (x3604 x4478)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404)) x3320) (= x4445 (- (/ x4735 26959946667150639794667015087019630673637144422540572481103610249216) (uninterp_frac x4735 26959946667150639794667015087019630673637144422540572481103610249216))) (= x4040 (= x4298 0)) (= x4298 (x1319 x1781 x4963)) (= x4963 (ite (< x3320 x3377) 1 0)) (= x3194 (x4575 (- x2689 x3181))) (= (ite (not x3477) 1 0) x1781) (= x3477 (= x404 0))) (and (=> (not x4040) x2460) (=> x4040 x1584)))))
(assert (x1513 x2176))
(assert (x2072 x4445 x929))
(assert (x3166 x2652))
(assert (x1513 x1726))
(assert (= (x201 x1506) (ite (= x2218 x1506) x4322 (x1377 x1506))))
(assert (= (x4626 x3300) (ite x3925 (ite x1906 (x357 x3300) (x1844 x3300)) (x1844 x3300))))
(assert (= (x1003 x1074) (ite x2139 (ite (and x526 x4337) (x4306 x1074) (x3486 x1074)) (ite (and x865 (not x3527) x4586) (x3587 x1074) (x4306 x1074)))))
(assert (= (x1894 2311529814) (x4822 2311529814)))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x1662)) x4370 (x2557 (x1894 x1662))) (x853 (x1894 x1662))))
(assert (x1513 x109))
(assert (= x4619 (and (not x4935) x3094)))
(assert (= x3729 (and x2832 x2101)))
(assert (= (x2523 x2843) (ite (= x2843 x1136) x4240 (x2293 x2843))))
(assert (x1513 x2855))
(assert (= (ite (and x3767 (not x179)) (x3604 x3051) (ite x2999 (ite x938 (x1570 x3051) (x3604 x3051)) (x3604 x3051))) (x3566 x3051)))
(assert (x1513 x4117))
(assert (= x4565 true))
(assert (x1513 x2596))
(assert (x1513 x2914))
(assert (x1513 x3691))
(assert (x3166 x316))
(assert (x2349 x4559 x835))
(assert (= (=> (and (= x1972 (x1319 1461501637330902918203684832716283019655932542975 x2008)) (= (x1319 1461501637330902918203684832716283019655932542975 x797) x3997) (= x1241 (= x3997 x1972)) (= x797 (x3604 x2241))) (and (=> x1241 x1198) (=> (not x1241) x2460))) x795))
(assert (x1513 x470))
(assert (x1513 x2366))
(assert (x1513 x3787))
(assert (x1513 x3827))
(assert (x1513 x251))
(assert (x1513 x4181))
(assert (x3166 x77))
(assert (= (x3566 x1420) (ite (and x3767 (not x179)) (x3604 x1420) (ite x2999 (ite x938 (x1570 x1420) (x3604 x1420)) (x3604 x1420)))))
(assert (x1513 x2003))
(assert (= (ite (= x1892 x1036) x2951 (x76 x1036)) (x2541 x1036)))
(assert (= (x1894 117300739) (x4822 117300739)))
(assert (x1513 x434))
(assert (x1513 x2957))
(assert (x1513 x3402))
(assert (= x1260 (x2856 (x1894 x1260))))
(assert (x1513 x2607))
(assert (x1513 x537))
(assert (x934 x1519 x456))
(assert (=> (> (+ 10000 1) x1492) (= (x1894 x1492) (x4822 x1492))))
(assert (= x574 true))
(assert (x1564 x3530 x2903))
(assert (x1513 x204))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x3410) (not x1129) x1141 (>= x3410 0) (not x2384) (<= x3660 1461501637330902918203684832716283019655932542975) (< x2747 1461501637330902918203684832716283019655932542976) (= x3139 x2008) (= (= x2747 0) x1234) (= x3660 x2747) (>= x3660 0) (= x2340 (> x2286 x2367)) (= (not (= x3139 x4610)) x1141) (= x2384 x560) (= x3410 x1023) (= x3463 (< 0 x2747)) (= (x1031 (x1894 x2747)) x2367) (= x4610 x2747) (= (not x560) x2180) (or x3463 x1234)) (and (=> (and (not x2340) (<= 0 x1801) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2286 (x874 (x1894 274184521717934524641157099916833587240)))) x3626) (>= 1461501637330902918203684832716283019655932542975 x1801) (= x4968 x2286) (<= 0 x385) (= x2747 x385) (= (- (x1031 (x1894 x2747)) x2286) x1112) (= x215 x463) (= x2979 x2513) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2262) true) (> x2262 35) (= x2270 x463) (= x1927 x1904) (= x3573 (x1229 (+ (uninterp_mod (x874 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2286))) (<= 0 x2270) (<= x385 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2270) x3626) x4908) (=> (and (= false x2603) x2340 (= x1463 true)) x577))) x202))
(assert (x1513 x101))
(assert (x1513 x1118))
(assert (x1513 x1518))
(assert (x3166 x3852))
(assert (x1513 x1605))
(assert (x1513 x4131))
(assert (x1513 x3272))
(assert (= (ite (= x1746 x411) x2156 (x3604 x1746)) (x1267 x1746)))
(assert (x1513 x4047))
(assert (x1513 x3304))
(assert (x1513 x3800))
(assert (= x4987 (=> (and (= (> x3906 0) x2108) (= (x2328 (x1894 x1081)) x3906)) (and (=> (and (not x2108) (not (> x250 x4968)) (= 128 x310)) x1717) (=> (and (= (> x926 0) x771) (= x1182 260) x2108 (or (and x771 (= (< 32 x926) x4163) (= (x3677 160) x1938) (or (and (= x2835 (x3677 192)) (= (< 64 x926) x3453) x4163 (or (and (not x3453) (= 64 x455)) (and (or (and (= x4121 (< 128 x926)) x203 (= x455 128) (= (x3677 256) x3826) (not x4121)) (and (= 96 x455) (not x203))) x3453 (= x3074 (x3677 224)) (= x203 (> x926 96))))) (and (= x455 32) (not x4163)))) (and (= x455 0) (not x771))) (= (x2800 160) x3582) (= (< 0 x2057) x3252) (= x4821 274184521717934524641157099916833587240) (= (> x455 x926) x432) (= (x1510 128) x926) x3252 (= x2057 (x2328 (x1894 x1081))) (= 0 x4034) (= x3595 128) (= x3723 274184521717934524641157099916833587240) (or (not x432) (and x432 (= (x1229 (+ x926 324)) x3217))) (= x1770 (x1319 1461501637330902918203684832716283019655932542975 x2747)) (= x3985 (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x3582)) (= (x1229 (+ x3985 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x1261)) x744)))))
(assert (= 0 (x1016 x623)))
(assert (x1513 x4567))
(assert (= (or (and (not x4440) x540) (and x823 x3729)) x4097))
(assert (x1513 x4366))
(assert (= (=> (= (= 0 x1011) x2483) (and (=> x2483 x2460) (=> (not x2483) x4880))) x2278))
(assert (x1513 x3956))
(assert (x1513 x3722))
(assert (x1513 x1818))
(assert (x1513 x4497))
(assert (= (=> (= (< 0 x2345) x3634) (and (=> (not x3634) x2460) (=> x3634 x809))) x2693))
(assert (x1513 x1873))
(assert (x3166 x3202))
(assert (x1513 x1107))
(assert (x1513 x1239))
(assert (x1513 x4428))
(assert (x1513 x3211))
(assert (= x1272 (=> (= 0 x10) x3173)))
(assert (x1513 x3769))
(assert (= (x15 x156) (ite (= x4178 x156) x2443 (x1267 x156))))
(assert (x1513 x3413))
(assert (= 0 (x2615 x4406)))
(assert (x1513 x4956))
(assert (= (=> (and (= x4126 0) (= x3058 x2158)) x2521) x4653))
(assert (= (ite (= x4178 x3965) x2443 (x1267 x3965)) (x15 x3965)))
(assert (x1513 x2897))
(assert (x1513 x2390))
(assert (x1513 x2219))
(assert (= (x3566 x1361) (ite (and (not x179) x3767) (x3604 x1361) (ite x2999 (ite x938 (x1570 x1361) (x3604 x1361)) (x3604 x1361)))))
(assert (x1513 x4074))
(assert (x1513 x4512))
(assert (x1513 x1903))
(assert (x3166 x4857))
(assert (x3166 x1870))
(assert (x3166 x4427))
(assert (= (x3846 x1036) (ite x674 (ite (and x4128 x4346) (x4568 x1036) (ite (and x2985 x355) (x4090 x1036) (x4568 x1036))) (ite (and (not x4004) x4909 x4137) (x3698 x1036) (x4568 x1036)))))
(assert (= x1076 (and (not x70) x834)))
(assert (x1513 x3627))
(assert (= (x1983 x4384) (ite x3925 (ite x1906 (x2602 x4384) (x1939 x4384)) (x1939 x4384))))
(assert (x3166 x4571))
(assert (= x1418 (=> (and (= x3704 0) (= x314 (- (x131 (x1894 x1299)) x3704)) (= (x812 x1839) x4651) (not (= 0 x1445)) (= x478 (x1229 (+ x3704 (uninterp_mod (x3592 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (< (+ x3704 (x3592 (x1894 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4053) (or (not x4140) (and (= x4288 (x1229 (+ 32 x1839))) (= (ite x2972 1 0) x2896) (not (or (and (> 32 x3712) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3712) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3712))) (= x747 (x2226 x4288)) (< 0 x747) (= (not x3912) x2972) (= x2896 x747) (= (= 0 x747) x3912) x4140 (= (x812 x1839) x3712))) (= x2928 x4633) (= x2469 (= x3246 0)) (or (and x2469 (= 96 x1839) (= x2928 x4205)) (and (not x2469) (= x2613 (x1229 (+ x1455 x4205))) (= x4205 x1839) (= (x1229 (+ x3246 63)) x622) (= x2928 x2613) (= x1455 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x622)) (= x1780 (x1229 (+ x3456 96))))) (= x4140 (> x4651 0)) x4053) x4656)))
(assert (x1513 x1086))
(assert (x2417 x4133))
(assert (x3166 x2280))
(assert (x1513 x334))
(assert (= x4387 x877))
(assert (x1513 x1206))
(assert (= (x130 x327) (ite x3925 (ite x1906 (x3726 x327) (x1625 x327)) (x4435 x327))))
(assert (= (ite x4806 (ite (and x238 x641) (x102 x4141) (x4644 x4141)) (ite (and x2519 (not x2648) x1313) (x4924 x4141) (x102 x4141))) (x572 x4141)))
(assert (= x3084 (=> (and (= (= x4341 x2600) x4980) (= x1415 x2600)) (and (=> (not x4980) x2971) (=> x4980 x4889)))))
(assert (x1513 x2892))
(assert (x1513 x3672))
(assert (x1513 x96))
(assert (x1513 x4686))
(assert (x1513 x3997))
(assert (= (x201 x3632) (ite (= x2218 x3632) x4322 (x1377 x3632))))
(assert (x1513 x3365))
(assert (x1513 x4774))
(assert (= (x1199 x3052) (ite x1846 (ite x4600 (x534 x3052) (x201 x3052)) (x201 x3052))))
(assert (x1513 x3141))
(assert (x1513 x1521))
(assert (x1513 x2706))
(assert (x1513 x3695))
(assert (= x4733 (=> (and (= x4766 x3823) (not (or (and (< x3683 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3683))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3683))) (= x2382 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x479)) (= x2810 (x1229 (+ x3823 x2382))) (= x479 (x1229 (+ x3683 31))) (= x863 (x4349 x4766)) (not (= x1406 0)) (= x4004 (= 0 x863))) (and (=> x4004 x944) (=> (and (not (= x885 0)) (= x845 (x1229 (+ 32 x88))) (not (= x1080 0)) (= x4005 x88) (or (not x4137) (and x2348 (< x1208 4294967296) (= (= x2546 (x4268 (x1894 x3473))) x3054) (= (x3670 (x1894 x3473)) x2546) x4137 (= x2463 (x3670 (x1894 274184521717934524641157099916833587240))) (= x2348 (<= x2463 (x4268 (x1894 274184521717934524641157099916833587240)))) x3054)) (= x1080 (x2328 (x1894 x3473))) (= (> x885 0) x4137) (not x4004) (= (x1229 (+ 64 x1224)) x3737) (= (x1229 (+ 64 x845)) x1903) (= x696 (x1319 1461501637330902918203684832716283019655932542975 x2747)) (= x1224 (x1229 (+ x88 64))) (= (x1229 (+ 164 x2810)) x2524) (= x4005 (x1229 (+ x2810 4)))) x1508)))))
(assert (= (and x4969 x1273) x1483))
(assert (= x3306 (or x438 (and x1974 (not x3998)))))
(assert (x1513 x4914))
(assert (x1513 x1023))
(assert (= x4279 (=> (= (< x4519 x2647) x3005) (and (=> (and (= x2437 x1390) (= 274184521717934524641157099916833587240 x4455) (= x1509 1) (= 274184521717934524641157099916833587240 x3506) (= (x4575 (- x4519 x2647)) x4981) (not x3005)) x2842) (=> x3005 x3986)))))
(assert (x1513 x3723))
(assert (x1513 x3515))
(assert (= 274184521717934524641157099916833587202 (x2856 (x4822 274184521717934524641157099916833587202))))
(assert (= x339 (=> (and (= (x1908 x3562) x930) (= (> x930 115792089237316195423570985008687907853269984665640564039457584007913129639934) x3998) (= x31 (x4575 (- x3855 1))) (= x3562 (x4101 (x1894 x1260) (x4822 209) 0))) (and (=> (and (= x627 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x338)) (= (x1229 (+ 1 x930)) x1262) (= x10 1) (= x25 x1260) (not x3998) (= x3965 (x4101 (x1894 x505) (x4822 208) 0)) (= (x1229 (+ x25 x627)) x3711) (= (x1902 x3965) x338)) x3173) (=> x3998 x1272)))))
(assert (x1513 x1732))
(assert (x1564 x4988 x160))
(assert (= (and x2479 (not x1402)) x428))
(assert (x1513 x1591))
(assert (x1513 x2627))
(assert (x778 x2263 x1987 x3001 x4038))
(assert (= (x2856 (x1894 x1748)) x1748))
(assert (x1513 x2910))
(assert (= (=> (and (= x4709 (x761 (x1894 x1030))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4709) x2857) (= (x761 (x1894 274184521717934524641157099916833587240)) x2744) x4769 (= x4769 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2781 (x1894 x1030)))) (= x1359 x1616) x2857 (= (>= x2744 0) x282) (= x1100 (= 274184521717934524641157099916833587206 x1030)) (= x418 (x2781 (x1894 x1030))) (= (x761 (x1894 274184521717934524641157099916833587240)) x1454) x282) (and (=> (and (= (+ x4979 x2966) x1998) (= x1338 (x4575 (- x1025 x2630))) (= x3258 (x4575 (- x2739 4))) (= x4807 274184521717934524641157099916833587240) (= x1305 (>= (+ x1292 x1788) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x4101 (x1894 x867) (x4822 1) 0) x2179) (= (> x1292 x1025) x4879) (not (> 826074471 x663)) (not x4879) (= x2956 274184521717934524641157099916833587240) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1788 x1292)) (= (x2328 (x1894 274184521717934524641157099916833587206)) x1952) (= x2739 x1359) (not (= 826074471 x663)) (= x663 2835717307) (= x1788 x4979) (<= 0 x1788) (= x867 x460) (= x2402 x2630) (not x3398) (= 32 x1578) (not (= x663 1889567281)) (= x3398 (or (> x3258 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3258)) (> 64 x3258)))) (= x2630 x1292) (> x1952 0) (not x1305) (not x4811) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1788) (>= 1461501637330902918203684832716283019655932542975 x867) (not (< x2739 4)) (= x1788 (x871 x2179)) (= x3099 76450787359836037641860180984291677749980919077056822294353438043884394381312) (<= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4185 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (not (= 2514000705 x663)) (= x2739 68) x1100 (= x1025 (x856 x4185)) (= x1257 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x867 x4789) (= x4811 (< x1025 x2630)) (= x1292 x2966) (>= x1025 0) (= 1 x1636)) x3296) (=> (not x1100) x2455))) x4855))
(assert (x1513 x1452))
(assert (x1513 x3653))
(assert (= (ite (= x4340 x3828) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3543 x4340)) (x4215 x4340)))
(assert (=> (< (- x524 1) 10000) (= (x4822 x524) (x1894 x524))))
(assert (= (ite x3925 (ite x1906 (x2602 x2941) (x1939 x2941)) (x1939 x2941)) (x1983 x2941)))
(assert (x1513 x3353))
(assert (= 0 (x2615 x4498)))
(assert (x1513 x3514))
(assert (x1513 x2852))
(assert (= (x2856 (x4822 455944412)) 455944412))
(assert (= x3372 (=> (and (> 1461501637330902918203684832716283019655932542976 x2008) (= (< 0 x2008) x3865) (<= 0 x2210) (= x1893 (x1031 (x1894 274184521717934524641157099916833587206))) (= true x364) (>= x4031 0) (= x2212 (< 0 (x2328 (x1894 274184521717934524641157099916833587240)))) (<= x2210 1461501637330902918203684832716283019655932542975) (= 1 x4688) (= x2210 x2008) (>= 1461501637330902918203684832716283019655932542975 x1548) (= 924834022 x2099) (= (= x2008 0) x3060) (>= x1548 0) (= x4300 false) (= x4189 (> (x2328 (x1894 274184521717934524641157099916833587202)) 0)) (= x3941 (> (x2328 (x1894 274184521717934524641157099916833587206)) 0)) x4189 x3778 x3941 (= (< x3843 x689) x2160) (= x1664 false) (or x3060 x3865) (= x4031 x2117) x2212 (= (x1031 (x1894 x2008)) x3843) (= (= x2783 x1799) x3778) (= false x1722) (>= 1461501637330902918203684832716283019655932542975 x4031) (<= 0 x1893) (= x1799 x2008) (= x1548 x2783) (= (x1031 (x1894 274184521717934524641157099916833587202)) x3457) (= x4257 (x1031 (x1894 274184521717934524641157099916833587240))) (>= x4257 0) (<= 0 x3457)) (and (=> (and (= x1129 false) x2160 (= true x2384)) x202) (=> (and (>= 1461501637330902918203684832716283019655932542975 x1743) (= x2008 x4063) (= x4370 (x1229 (+ (uninterp_mod (x2557 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x689))) (<= 0 x4063) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x2557 (x1894 274184521717934524641157099916833587240)) x689)) x935) x935 (= x689 x2635) (<= x4063 1461501637330902918203684832716283019655932542975) (= x1743 x2301) (>= x1743 0) (<= 0 x957) (= x2689 x924) (<= x957 1461501637330902918203684832716283019655932542975) (< 35 x3366) (not x2160) (= x3725 x2301) (= x2484 x450) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3366)) (= (- (x1031 (x1894 x2008)) x689) x2653)) x817)))))
(assert (x1513 x3621))
(assert (= (ite x3925 (ite x1906 (x1861 x67) (x4506 x67)) (ite (and x877 x570) (x2862 x67) (x4506 x67))) (x1414 x67)))
(assert (x1513 x1368))
(assert (x1513 x3957))
(assert (x3166 x3956))
(assert (x1513 x1753))
(assert (x1513 x1462))
(assert (x1513 x4830))
(assert (x1513 x3170))
(assert (x1513 x777))
(assert (x2417 x2034))
(assert (= (ite x3925 (ite x1906 (x3726 x2611) (x1625 x2611)) (x4435 x2611)) (x130 x2611)))
(assert (= (ite x3925 (ite x1906 (x2602 x1041) (x1939 x1041)) (x1939 x1041)) (x1983 x1041)))
(assert (= x4211 (or (and x791 x2442) (and x1933 (not x371)) (and x1585 x2823) (and x4522 x2974) (and x1907 x3467) (and x3914 x2732))))
(assert (x1513 x1978))
(assert (x1513 x2779))
(assert (=> (< (- x2979 1) 10000) (= (x1894 x2979) (x4822 x2979))))
(assert (= (x1939 x3409) (ite (= x4679 x3409) x1441 (x1377 x3409))))
(assert (x1513 x1834))
(assert (x1513 x1542))
(assert (= (ite x3925 (ite x1906 (x1861 x4347) (x4506 x4347)) (ite (and x877 x570) (x2862 x4347) (x4506 x4347))) (x1414 x4347)))
(assert (x1513 x1824))
(assert (x3166 x1453))
(assert (= (ite x4806 (ite (and x641 x238) (x4548 x159) (x130 x159)) (ite (and x2519 (not x2648) x1313) (x196 x159) (x130 x159))) (x4568 x159)))
(assert (= (x4568 x2611) (ite x4806 (ite (and x641 x238) (x4548 x2611) (x130 x2611)) (ite (and (not x2648) x1313 x2519) (x196 x2611) (x130 x2611)))))
(assert (not x3372))
(assert (= (x1939 x2941) (ite (= x4679 x2941) x1441 (x1377 x2941))))
(assert (= (x208 x2022) (ite x2139 (ite (and x526 x4337) (x24 x2022) (x3846 x2022)) (ite (and x865 (not x3527) x4586) (x64 x2022) (x3846 x2022)))))
(assert (x1513 x1745))
(assert (x1513 x521))
(assert (= (x4552 x3968) (ite x3426 (ite (and x1308 x4516) (x1507 x3968) (x4091 x3968)) (ite (and (not x4964) x906 x2645) (x4518 x3968) (x1507 x3968)))))
(assert (x1513 x506))
(assert (= (ite x3925 (ite x1906 (x1898 (x1894 x3441)) (x1083 (x1894 x3441))) (x47 (x1894 x3441))) (x1451 (x1894 x3441))))
(assert (x1513 x4848))
(assert (= (x1983 x1549) (ite x3925 (ite x1906 (x2602 x1549) (x1939 x1549)) (x1939 x1549))))
(assert (x1513 x103))
(assert (x1513 x3064))
(assert (= (x709 x3175) (ite x4941 (ite (and x4941 (not x2275)) (x208 x3175) (x4155 x3175)) (x1625 x3175))))
(assert (x1513 x4383))
(assert (= (ite (= x1307 x4746) x3108 (x675 x1307)) (x1953 x1307)))
(assert (= (and x4724 x3795) x85))
(assert (x1513 x1972))
(assert (x2417 x3022))
(assert (x1513 x4904))
(assert (x1513 x3118))
(assert (x1513 x2281))
(assert (x1564 x1093 x3744))
(assert (= x527 (or (and x2795 x1523) (and x4495 x2056) (and x3659 x141) (and x4892 x2900) (and x3408 (not x4449)) (and x3904 x3434) (and x4572 x2052) (and x2102 x1009))))
(assert (= (and (not x4059) x2834) x2750))
(assert (x1513 x3635))
(assert (x1513 x4240))
(assert (x1513 x1792))
(assert (= (and x2736 (not x1100)) x4510))
(assert (= (x4822 2835717307) (x1894 2835717307)))
(assert (x1513 x1696))
(assert (x1513 x1116))
(assert (x1513 x2009))
(assert (= (x4822 115792089237316195423570984636004990333889740523700931696805413995650331181055) (x1894 115792089237316195423570984636004990333889740523700931696805413995650331181055)))
(assert (x1513 x2628))
(assert (x1513 x299))
(assert (= (ite (= x4256 x4679) x1441 (x1377 x4256)) (x1939 x4256)))
(assert (x1513 x441))
(assert (x1513 x794))
(assert (x1513 x3303))
(assert (= true x4421))
(assert (x1513 x493))
(assert (= (=> (and (= (< x1712 x642) x699) (= (x1229 (+ x3039 x642)) x1712)) (and (=> (and (= x3058 32) (not x699) (= x4126 1)) x2521) (=> x699 x4653))) x996))
(assert (x3166 x1805))
(assert (x1513 x2969))
(assert (x1513 x3247))
(assert (= (x3618 x3713) (ite x4941 (ite (and (not x2275) x4941) (x2502 x3713) (x1709 x3713)) (x3248 x3713))))
(assert (= (ite (= x1282 x2241) x844 (x1852 x1282)) (x3604 x1282)))
(assert (x1513 x3805))
(assert (= (and (not x4885) x2537) x2107))
(assert (x2417 x235))
(assert (x2417 x6))
(assert (= (=> (and (= x4350 0) (= x2466 x4800)) x3425) x92))
(assert (x1513 x4805))
(assert (x1513 x3139))
(assert (= (ite (= x2218 x4068) x4322 (x1377 x4068)) (x201 x4068)))
(assert (x1513 x4356))
(assert (= (x4822 455944412) (x1894 455944412)))
(assert (= x805 (=> (and (= x2491 x444) (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1887) x1079) (= x2480 x3008) (not (= x44 0)) (= (x2831 128) x3008) (not (or (and (> 32 x4394) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4394))) (> x4394 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x444 (x1229 (+ x1079 128))) (= x1887 (x1229 (+ x4394 31)))) x2128)))
(assert (= (ite (and x3767 (not x179)) (x3604 x4199) (ite x2999 (ite x938 (x1570 x4199) (x3604 x4199)) (x3604 x4199))) (x3566 x4199)))
(assert (x1513 x4250))
(assert (x2349 x4422 x2879))
(assert (= 0 (x349 x2240)))
(assert (x2349 x647 x2333))
(assert (= x3368 (or x2344 x4071)))
(assert (x1513 x3162))
(assert (x1513 x2582))
(assert (= (and x4818 x3898) x1969))
(assert (= (ite x3925 (ite x1906 (x3244 x3340) (x3126 x3340)) (x3171 x3340)) (x102 x3340)))
(assert (= (or (and x1273 (not x4969)) (and x3634 x3056)) x94))
(assert (= x2322 (=> (= x1094 (= 0 x4452)) (and (=> x1094 x2460) (=> (not x1094) x3208)))))
(assert (x1513 x992))
(assert (= (ite (= x298 x2218) x4322 (x1377 x298)) (x201 x298)))
(assert (= (=> (and (not (= x804 117300739)) (= x350 (or (and (< x4940 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4940))) (> x4940 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4864 (x2328 (x1894 274184521717934524641157099916833587206))) (> x4864 0) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4951) (> 826074471 x804) (= x4940 (x4575 (- x2942 4))) (not (= 157198259 x804)) (= 100 x2942) (not (> 4 x2942)) (= x942 x2942) (= x219 x2332) (not (= x804 404098525)) (= x3460 x3451) (= x804 599290589)) (and (=> x350 x347) (=> (not x350) x4587))) x2386))
(assert (x1513 x2400))
(assert (x1513 x2896))
(assert (= x3013 x4909))
(assert (= (x3604 x156) (ite (= x156 x2241) x844 (x1852 x156))))
(assert (x1513 x205))
(assert (x1513 x2201))
(assert (x1513 x552))
(assert (=> (> (+ 10000 1) x2922) (= (x1894 x2922) (x4822 x2922))))
(assert (= (ite x4806 (ite (and x238 x641) (x4548 x4248) (x130 x4248)) (ite (and x2519 x1313 (not x2648)) (x196 x4248) (x130 x4248))) (x4568 x4248)))
(assert (x1513 x1236))
(assert (x1513 x883))
(assert (x1513 x910))
(assert (x1513 x2968))
(assert (x1513 x2794))
(assert (= (ite (= x2535 x2241) x844 (x1852 x2535)) (x3604 x2535)))
(assert (= x591 (and x2325 (not x3850))))
(assert (x2417 x2755))
(assert (= (x208 x45) (ite x2139 (ite (and x4337 x526) (x24 x45) (x3846 x45)) (ite (and x4586 x865 (not x3527)) (x64 x45) (x3846 x45)))))
(assert (= x4861 (=> (and (= x319 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= (< x1149 x769) x4759) (= x2715 (x4101 (x1894 x519) (x4822 1) 0)) (= x3760 (x4575 (- x1464 x2647))) (<= x769 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1109 274184521717934524641157099916833587240) (= (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2647)) x1149) (= (x4763 x2715) x769) (<= 0 x769)) (and (=> (not x4759) x1665) (=> x4759 x3986)))))
(assert (= x2543 (or x2999 (and x1137 (not x4251)) (and x3767 (not x179)))))
(assert (x1513 x4125))
(assert (= (x2856 (x1894 x1236)) x1236))
(assert (x1513 x4077))
(assert (x1513 x296))
(assert (= (x130 x159) (ite x3925 (ite x1906 (x3726 x159) (x1625 x159)) (x4435 x159))))
(assert (x1513 x3889))
(assert (= (x1083 (x1894 x850)) (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x850)) x3573 (x874 (x1894 x850)))))
(assert (x1513 x3122))
(assert (x1513 x4537))
(assert (= (x2266 x3468) 0))
(assert (x1513 x747))
(assert (x1513 x2811))
(assert (= (=> (and (= (x520 x1139) x4446) (= x2895 (> x3451 x4446)) (= x367 x3460) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4446) (>= x4446 0) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x1139) (= 274184521717934524641157099916833587240 x2305)) (and (=> x2895 x347) (=> (not x2895) x4122))) x79))
(assert (= (x3519 (x1894 274184521717934524641157099916833587240)) (ite x1846 (ite x4600 (x1727 (x1894 274184521717934524641157099916833587240)) (x853 (x1894 274184521717934524641157099916833587240))) (x1807 (x1894 274184521717934524641157099916833587240)))))
(assert (= x2979 (x2856 (x1894 x2979))))
(assert (x2417 x2332))
(assert (= x4865 (=> (and (= (= x4389 0) x1763) (= x4389 (x2328 (x1894 x335)))) (and (=> x1763 x2460) (=> (and (or (not x2412) (and (= (x672 (x1894 x335)) x3103) x2930 (= (x672 (x1894 274184521717934524641157099916833587240)) x4810) (= x2930 (>= (x2516 (x1894 274184521717934524641157099916833587240)) x4810)) (= (= (x2516 (x1894 x335)) x3103) x973) x2412 (< x4229 4294967296) x973)) (not x1763) (= (> x1777 0) x2412)) x1058)))))
(assert (= (x1939 x2883) (ite (= x2883 x4679) x1441 (x1377 x2883))))
(assert (x1513 x2977))
(assert (x1513 x1242))
(assert (x1513 x1545))
(assert (= (+ 3 (x2856 x116)) (x2856 (x2808 x116 3))))
(assert (x1513 x2217))
(assert (x1513 x646))
(assert (= x4462 (=> (and (= x704 (x269 (x1894 274184521717934524641157099916833587240))) (= x2427 (< x704 x968))) (and (=> (and (= (and (< (+ x968 x288) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x968 x4336)) x1423) (or (and (or (not x4286) (and (= (<= x7 (x1480 (x1894 274184521717934524641157099916833587240))) x3786) (= (x4749 (x1894 274184521717934524641157099916833587240)) x7) x3324 (= x3324 (= x3611 (x1480 (x1894 x4959)))) (> 4294967296 x1161) x4286 x3786 (= x3611 (x4749 (x1894 x4959))))) (= (- (x3004 (x1894 x4959)) x1968) x3323) (= x4286 (> x2304 0)) x3444 x1878 (= x1878 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1968 (x2387 (x1894 274184521717934524641157099916833587240))))) (= (- (x269 (x1894 274184521717934524641157099916833587240)) x968) x2754) (= x701 (x1229 (+ x1968 (uninterp_mod (x2387 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x842 (x1894 x4959)) x968)) x3444) x1423 (= x1518 (x1229 (+ x968 (uninterp_mod (x842 (x1894 x4959)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1161 x4118) (= x1968 (ite (= x2304 0) x968 0)) (= x2304 x2954)) (and (not x1423) (= 0 x4118) (= 0 x2954))) (= (= x4118 0) x471) (or (and (= x4375 x1931) (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x206) x1017) (= x1931 (x1229 (+ x4226 x1017))) (not x471) (= (x1229 (+ 63 x4118)) x206)) (and (= x4226 x4375) x471)) (= x288 (x269 (x1894 x4959))) (not x2427) (= (x269 (x1894 274184521717934524641157099916833587240)) x4336)) x453) (=> x2427 x2460)))))
(assert (= (+ 1 (x2856 x116)) (x2856 (x2808 x116 1))))
(assert (= (x4822 109576784812748834340197573905731726730118698833493337707389013487240318287872) (x1894 109576784812748834340197573905731726730118698833493337707389013487240318287872)))
(assert (x1513 x915))
(assert (= (x1669 x4766) (ite x3925 (ite x1906 (x648 x4766) (x2266 x4766)) (ite x2686 (x972 x4766) (x4273 x4766)))))
(assert (= (=> (and (= x335 (x1319 1461501637330902918203684832716283019655932542975 x4725)) (= x837 (x4101 (x1894 x3022) (x4822 208) 0)) (= (x3915 x837) x4725) (= (= 0 x335) x1810)) (and (=> (not x1810) x1856) (=> x1810 x2460))) x2515))
(assert (x1513 x4))
(assert (x1513 x4782))
(assert (x1513 x165))
(assert (x2417 x4959))
(assert (x3166 x4445))
(assert (x1513 x1707))
(assert (= (x1953 x127) (ite (= x4746 x127) x3108 (x675 x127))))
(assert (x1513 x1686))
(assert (= x1999 (=> (and (= x83 (x1229 (+ 64 x3274))) (= x3118 x37) (= x3093 (= x3400 0)) (= x3274 (x1229 (+ x37 32))) (= (x1229 (+ 64 x37)) x188) (= (x1229 (+ x1950 4)) x3118) (= x4836 (x1229 (+ 64 x188))) (= (x1319 1461501637330902918203684832716283019655932542975 x2008) x2288) (= x3400 (x2328 (x1894 x3964))) (= x3932 (x1229 (+ 164 x1950)))) (and (=> (and (not x3093) (= x1121 (> x3199 0)) (or (not x1121) (and (= x3133 (= x1335 (x1619 (x1894 x3964)))) (= x1963 (<= x3853 (x1619 (x1894 274184521717934524641157099916833587240)))) (= x1335 (x2865 (x1894 x3964))) (> 4294967296 x233) x3133 x1963 (= (x2865 (x1894 274184521717934524641157099916833587240)) x3853) x1121))) x3024) (=> x3093 x2460)))))
(assert (x1513 x2262))
(assert (x1513 x2263))
(assert (x1513 x4455))
(assert (= 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x2856 (x4822 109576784812748834340197573905731726730118698833493337707389013487240318287872))))
(assert (x2417 x4789))
(assert (= (x15 x1549) (ite (= x1549 x4178) x2443 (x1267 x1549))))
(assert (x1513 x4120))
(assert (= (x2076 x4766) (ite (and (not x432) x2108 x2670) (x207 x4766) (x4797 x4766))))
(assert (x1513 x2616))
(assert (= (x1983 x4358) (ite x3925 (ite x1906 (x2602 x4358) (x1939 x4358)) (x1939 x4358))))
(assert (x1513 x1910))
(assert (x3166 x4585))
(assert (x1513 x4990))
(assert (= (ite x3925 (ite x1906 (x3244 x1154) (x3126 x1154)) (x3171 x1154)) (x102 x1154)))
(assert (x1513 x353))
(assert (= (x130 x3175) (ite x3925 (ite x1906 (x3726 x3175) (x1625 x3175)) (x4435 x3175))))
(assert (x1513 x1594))
(assert (= x242 (=> (= x2871 (= x3964 274184521717934524641157099916833587240)) (and (=> (not x2871) x4085) (=> x2871 x1888)))))
(assert (= 924834022 (x2856 (x4822 924834022))))
(assert (= (x15 x2392) (ite (= x4178 x2392) x2443 (x1267 x2392))))
(assert (x1513 x4618))
(assert (= (x380 x4098) 0))
(assert (x1513 x3373))
(assert (x1513 x4693))
(assert (= (=> (and (= x2131 (- (x3308 (x1894 x1081)) x2105)) (= x1553 (x1229 (+ (uninterp_mod (x2923 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2105))) (= x310 x2822) (= x3267 (x357 x3018)) (= x2105 0) (or (and (= 324 x2822) x279 (= 96 x3018)) (and (= x3018 324) (= x2822 x2129) (= x4536 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4695)) (= x2129 (x1229 (+ x4536 324))) (= x4695 (x1229 (+ 63 x4878))) (not x279))) (= (= 0 x4878) x279) (or (and (= x1715 (x357 x3018)) (= x430 (ite x4190 1 0)) (= (x4228 x2574) x2662) (> x2662 0) (= x4190 (not x4064)) (not (or (> x1715 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1715 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1715)))) x4867 (= x2662 x430) (= x2574 (x1229 (+ 32 x3018))) (= (= 0 x2662) x4064)) (not x4867)) (= x4867 (< 0 x3267)) x4520 (= (< (+ (x2923 (x1894 274184521717934524641157099916833587240)) x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4520) (not (= x3012 0))) x1717) x302))
(assert (x1513 x984))
(assert (x1513 x2381))
(assert (= (x201 x3234) (ite (= x3234 x2218) x4322 (x1377 x3234))))
(assert (= (and (not x4572) x2052) x3408))
(assert (x1513 x4221))
(assert (x1513 x3077))
(assert (x1513 x2762))
(assert (= (ite (= x168 x1420) x31 (x4952 x168)) (x1908 x168)))
(assert (= true x2933))
(assert (x1513 x2994))
(assert (= (x1983 x168) (ite x3925 (ite x1906 (x2602 x168) (x1939 x168)) (x1939 x168))))
(assert (= (or (and x1661 (not x3140)) (and (not x4148) x951)) x4907))
(assert (= x1944 (and (not x4781) x1634)))
(assert (x1513 x3845))
(assert (= x3925 (or (and x2670 (not x2108)) x1906)))
(assert (x1513 x1033))
(assert (x1513 x4796))
(assert (= (and x163 (not x2868)) x4627))
(assert (x1513 x1315))
(assert (x1513 x2407))
(assert (x1513 x4894))
(assert (x1513 x1921))
(assert (x1513 x1637))
(assert (x1513 x1622))
(assert (x1513 x4846))
(assert (x1513 x3053))
(assert (= x1479 true))
(assert (x1513 x2448))
(assert (x1513 x3662))
(assert (= x3150 (and (not x4204) x2990)))
(assert (= x3056 (and x593 x3100)))
(assert (= (ite (= (x1894 x335) (x1894 274184521717934524641157099916833587240)) x4701 (x1912 (x1894 x335))) (x1582 (x1894 x335))))
(assert (= (=> (= (= x2962 274184521717934524641157099916833587240) x2085) (and (=> (not x2085) x2859) (=> (and x2085 (= (ite x2085 1 0) x2209)) x1646))) x3715))
(assert (x1513 x2545))
(assert (x2349 x1655 x742))
(assert (x1513 x3298))
(assert (x1513 x844))
(assert (x1513 x2652))
(assert (x1513 x1254))
(assert (x1513 x1068))
(assert (= (x208 x3175) (ite x2139 (ite (and x526 x4337) (x24 x3175) (x3846 x3175)) (ite (and x4586 (not x3527) x865) (x64 x3175) (x3846 x3175)))))
(assert (x1513 x4876))
(assert (= (x3535 x653) 0))
(assert (x1513 x1461))
(assert (x1513 x153))
(assert (x1513 x4034))
(assert (x1513 x2411))
(assert (x1513 x2096))
(assert (x1513 x4310))
(assert (x1513 x980))
(assert (x1513 x625))
(assert (= (=> (= x4903 x2769) x4290) x993))
(assert (=> (> (+ 10000 1) x2484) (= (x1894 x2484) (x4822 x2484))))
(assert (= x4458 (and x3850 x2325)))
(assert (=> (> (+ 10000 1) x2332) (= (x1894 x2332) (x4822 x2332))))
(assert (x1513 x1529))
(assert (x1513 x3008))
(assert (x1513 x1387))
(assert (x2417 x2202))
(assert (x1513 x2287))
(assert (x1513 x4107))
(assert (x4612 x206 x3658 x193 x4171))
(assert (x1513 x3016))
(assert (x1513 x3964))
(assert (x1513 x653))
(assert (x1513 x2727))
(assert (x1513 x2925))
(assert (= x4975 (and x2073 x3707)))
(assert (x1513 x385))
(assert (= (and x3183 (not x826)) x2651))
(assert (x1513 x955))
(assert (x1513 x2206))
(assert (x1513 x2445))
(assert (= (ite x4806 (ite (and x641 x238) (x102 x1154) (x4644 x1154)) (ite (and x2519 x1313 (not x2648)) (x4924 x1154) (x102 x1154))) (x572 x1154)))
(assert (= x1606 (=> (= (= x3513 274184521717934524641157099916833587240) x3739) (and (=> (not x3739) x1272) (=> x3739 x3624)))))
(assert (x1513 x3405))
(assert (= (=> (and (= x4407 x3058) (= x4126 x2031)) x4194) x2521))
(assert (x1513 x1740))
(assert (= (x4563 x1803) 0))
(assert (= (x4822 18446744073709551615) (x1894 18446744073709551615)))
(assert (x1513 x679))
(assert (x1513 x1170))
(assert (x1513 x4853))
(assert (= (ite (= x4679 x1540) x1441 (x1377 x1540)) (x1939 x1540)))
(assert (= (x1267 x1759) (ite (= x1759 x411) x2156 (x3604 x1759))))
(assert (= (x1267 x1039) (ite (= x411 x1039) x2156 (x3604 x1039))))
(assert (= (and (not x4346) x4128) x2985))
(assert (= x1280 (=> (= (= 274184521717934524641157099916833587206 x2419) x3939) (and (=> (and (= 1889567281 x2086) x3939 (not (> 826074471 x2086)) (= (x4575 (- x657 4)) x4647) (not (> 4 x657)) (not (= 826074471 x2086)) (= x3648 1) (= x1193 x657) (= x4138 (or (and (< x4647 32) (= (<= x4647 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4647))) (not x4138) (= (x1095 x922) x439) (= x149 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x922 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= (x2328 (x1894 274184521717934524641157099916833587206)) x1318) (<= 0 x439) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x439) (= 32 x919) (= x1287 274184521717934524641157099916833587240) (= 36 x657) (< 0 x1318)) x1541) (=> (not x3939) x2335)))))
(assert (x1564 x3720 x698))
(assert (= (x15 x2535) (ite (= x4178 x2535) x2443 (x1267 x2535))))
(assert (= x3187 (and x4040 x4643)))
(assert (x2349 x1739 x1890))
(assert (x1513 x3838))
(assert (x1513 x1603))
(assert (x1513 x4244))
(assert (= (or (and x4458 x4018) (and x1194 x138) (and x1989 x668) (and x3165 x3533) (and x4308 (not x1672)) (and x4663 x5) (and x374 x3567) (and x614 x4706)) x4887))
(assert (x1513 x3923))
(assert (x1513 x4779))
(assert (x1513 x1721))
(assert (= x4194 (=> (and (= x4705 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x1991 (x1894 274184521717934524641157099916833587240)) x1784))) (= x189 (x1229 (+ (uninterp_mod (x1991 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1784))) (= x2605 (- (x3727 (x1894 x3392)) x1784)) (= x2368 x4407) x4705 (= 0 x1784) (= x2031 x3602)) x1867)))
(assert (= (=> (and (= x1361 (x4101 (x1894 x505) (x4822 208) 0)) (= x3685 (x3566 x1361)) (= x111 (not (= 0 x1574))) (= x1574 (x1319 1461501637330902918203684832716283019655932542975 x3685))) (and (=> (and (= (x4101 (x1894 x505) (x4822 210) 0) x156) (or (and (= x3347 (x1319 255 x1093)) (= x2883 (x4101 (x1894 274184521717934524641157099916833587240) x1060 0)) (= x3347 x4954) (= x1060 (x4101 (x1894 x4609) (x4822 211) 0)) (not x2710) (= x1093 (x3566 x2883))) (and x2710 (= (ite x2710 1 0) x4954))) (= x2710 (= x3064 274184521717934524641157099916833587240)) (= (x1319 1461501637330902918203684832716283019655932542975 x4857) x3064) (= x4857 (x3566 x156)) x111) x2820) (=> (not x111) x1272))) x2236))
(assert (= x1019 (=> (= (= 0 x2154) x3011) (and (=> (not x3011) x2776) (=> x3011 x2460)))))
(assert (= (and x186 x3646) x1925))
(assert (x3166 x4913))
(assert (= (=> (and (= x4297 x2925) (= x2299 x1205)) x262) x2959))
(assert (x1513 x2232))
(assert (x1513 x250))
(assert (= (x1451 (x1894 x3907)) (ite x3925 (ite x1906 (x1898 (x1894 x3907)) (x1083 (x1894 x3907))) (x47 (x1894 x3907)))))
(assert (= (x2856 (x1894 x3964)) x3964))
(assert (x1513 x400))
(assert (= (or (and x637 x1944) (and x4544 x1771) (and x1634 x4781) (and x350 x3245) (and x3079 x4476) (and x4496 x2895) (and x4930 x1046) (and x3830 (not x2018))) x3740))
(assert (= (ite (= 388 x1328) x91 (x4343 x1328)) (x4604 x1328)))
(assert (= (ite (= x4178 x1420) x2443 (x1267 x1420)) (x15 x1420)))
(assert (= x4477 (and (not x2167) x1140)))
(assert (x1513 x3847))
(assert (x2349 x4915 x4630))
(assert (= x433 (or (and x4977 x4510) (and x2736 x1100))))
(assert (= (x269 (x1894 x3964)) (ite (and (not x179) x3767) (x3276 (x1894 x3964)) (ite x2999 (ite x938 (x977 (x1894 x3964)) (x1582 (x1894 x3964))) (x1582 (x1894 x3964))))))
(assert (= (x4638 x4766) (ite (= x4766 x3219) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x469 x4766))))
(assert (x1513 x3860))
(assert (x1513 x3456))
(assert (= (ite x3925 (ite x1906 (x2602 x4208) (x1939 x4208)) (x1939 x4208)) (x1983 x4208)))
(assert (x1513 x1205))
(assert (x1513 x2691))
(assert (x778 x4360 x2699 x562 x1398))
(assert (x1513 x2764))
(assert (x1513 x2744))
(assert (= (ite x1846 (ite x4600 (x2853 x1328) (x1699 x1328)) (ite x3454 (x3206 x1328) (x3163 x1328))) (x1192 x1328)))
(assert (x1513 x392))
(assert (x1513 x4100))
(assert (x4612 x1521 x2177 x1768 x3940))
(assert (= (ite (and (not x179) x3767) (x3604 x156) (ite x2999 (ite x938 (x1570 x156) (x3604 x156)) (x3604 x156))) (x3566 x156)))
(assert (x3166 x3530))
(assert (x1513 x519))
(assert (x778 x3896 x229 x4390 x4534))
(assert (x1513 x618))
(assert (= x2325 (and x2642 (not x336))))
(assert (x1513 x1374))
(assert (x1513 x3773))
(assert (x1513 x4571))
(assert (= (ite x94 (ite x3368 (x3884 x1139) (x2174 x1139)) (ite (and x1423 (not x2427) x287) (x3511 x1139) (x2174 x1139))) (x520 x1139)))
(assert (x1513 x1730))
(assert (x1513 x457))
(assert (x1513 x1557))
(assert (x1513 x2506))
(assert (x1513 x1316))
(assert (x1513 x2264))
(assert (x1513 x2315))
(assert (x1513 x4291))
(assert (x1513 x872))
(assert (x2417 x1006))
(assert (x1513 x410))
(assert (= (and x3150 (not x1864)) x4971))
(assert (x1513 x3861))
(assert (= (and x4432 (not x1810)) x4685))
(assert (x1513 x4460))
(assert (x1513 x1303))
(assert (x1513 x1195))
(assert (x1513 x4031))
(assert (= (ite (= x788 x4679) x1441 (x1377 x788)) (x1939 x788)))
(assert (x3166 x797))
(assert (= (ite x674 (ite (and x4346 x4128) (x572 x4335) (ite (and x2985 x355) (x572 x4335) (x291 x4335))) (ite (and x4137 x4909 (not x4004)) (x3580 x4335) (x572 x4335))) (x4306 x4335)))
(assert (x1513 x4023))
(assert (x1513 x4523))
(assert (x1513 x2951))
(assert (= x1584 (=> (and (= x902 (= 0 x4428)) (= (ite (not x902) 1 0) x3633) (= (x1319 x3633 x2041) x1457) (= (uninterp_mod (* x3377 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4428) (= x2041 (ite (> x3194 x1118) 1 0)) (= x1118 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428))) (= (= x1457 0) x1422)) (and (=> (not x1422) x2460) (=> x1422 x254)))))
(assert (x1513 x3291))
(assert (= x4947 (x2856 (x1894 x4947))))
(assert (= x850 (x2856 (x1894 x850))))
(assert (=> (> (+ 10000 1) x1635) (= (x1894 x1635) (x4822 x1635))))
(assert (= (x4306 x2715) (ite x674 (ite (and x4128 x4346) (x572 x2715) (ite (and x355 x2985) (x572 x2715) (x291 x2715))) (ite (and x4909 x4137 (not x4004)) (x3580 x2715) (x572 x2715)))))
(assert (x1513 x149))
(assert (x1513 x430))
(assert (= (x1267 x2883) (ite (= x411 x2883) x2156 (x3604 x2883))))
(assert (= (+ 1 (x2856 x3417)) (x2856 (x2808 x3417 1))))
(assert (= x2011 (=> (= x2984 (= 274184521717934524641157099916833587206 x2419)) (and (=> (not x2984) x95) (=> (and (= (x1625 x4866) x1063) (= (< x3858 x3280) x72) (= (x4101 (x1894 x3200) (x4822 1) 0) x4866) (= x2815 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3280 x2787))) (= x3280 x1446) (< 0 x109) (not x72) (= 274184521717934524641157099916833587240 x3957) (= 100 x543) (<= x1063 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2661 1) (= 32 x3517) (= (x4101 (x1894 x3200) (x4822 2) 0) x263) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3182) true) (> 96 x3182)) (> x3182 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2426) (= x3000 274184521717934524641157099916833587240) (<= x3858 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4515 (< x1063 x4780)) (<= x2787 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x543 x2358) (= 274184521717934524641157099916833587240 x4366) x2984 (not x2815) (>= x3858 0) (= x109 (x2328 (x1894 274184521717934524641157099916833587206))) (= 274184521717934524641157099916833587240 x506) (= x4224 x3200) (>= x2787 0) (= x2787 x3237) (= x1085 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (not (= x1940 404098525)) (= (x4575 (- x1063 x4780)) x3515) (= x1873 x3200) (= x181 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x488 (x4101 (x1894 x3200) (x4822 1) 0)) (= x3280 x4780) (<= x3200 1461501637330902918203684832716283019655932542975) (= x4104 (> x3280 x3858)) (not (= x1940 117300739)) (< x1940 826074471) (not x2426) (>= x1063 0) (not x4104) (= x2467 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= (+ x1446 x3237) x3772) (not (< x543 4)) (= (x4101 (x1894 274184521717934524641157099916833587240) x263 0) x1685) (= (x4506 x3286) x3858) (= (x2588 x2467) x2787) (= x4780 x4403) (= (> x3280 x1063) x2247) (not x2247) (= (x4575 (- x3858 x4780)) x1579) (= (x4101 (x1894 274184521717934524641157099916833587240) x403 0) x3286) (< (+ x2787 x3280) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x4101 (x1894 x3200) (x4822 2) 0) x403) (= 599290589 x1940) (= (x4575 (- x543 4)) x3182) (= x1761 x3847) (not (= 157198259 x1940)) (not x4515)) x1692)))))
(assert (x1513 x427))
(assert (x1513 x3504))
(assert (x1513 x4320))
(assert (x3166 x144))
(assert (x1513 x711))
(assert (= (and (not x4723) x1911) x2048))
(assert (x1513 x4984))
(assert (x3166 x2418))
(assert (= (x1939 x2111) (ite (= x4679 x2111) x1441 (x1377 x2111))))
(assert (x1513 x272))
(assert (x1513 x1835))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x4676) x826) (and (=> (and (not (> 826074471 x2465)) (= x3371 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 274184521717934524641157099916833587240 x151) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3647)) (> 64 x3647)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3647)) x4227) (= x139 (x4575 (- x1255 x3328))) (= x3482 x1643) (not (= x2465 1889567281)) (= x4365 (>= (+ x3976 x3482) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x815) (= x429 x3328) (not x4227) (not (< x4838 4)) (= x2465 2835717307) (= 1 x2015) (not x4365) (< (+ x3976 x3482) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x1946) (>= x1255 0) (<= x1255 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x485) (= x1255 (x4306 x1154)) (= x2563 (x4101 (x1894 x6) (x4822 1) 0)) (= x2482 x6) (= (x4282 x2563) x3482) (not (= x2465 826074471)) (= x2785 x3976) (= (> x3328 x1255) x815) (<= x3482 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2317 x6) (not (= x2465 2514000705)) (= x1154 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x3360 (x4101 (x1894 x6) (x4822 1) 0)) (= 68 x4838) (= x2729 274184521717934524641157099916833587240) (= x3328 x3976) (>= x3482 0) x826 (= x4664 x4838) (>= 1461501637330902918203684832716283019655932542975 x6) (= x52 (+ x2785 x1643)) (= (x4575 (- x4838 4)) x3647) (= x2703 32) (= x485 (> x3976 x1255)) (< 0 x2351) (= x2351 (x2328 (x1894 274184521717934524641157099916833587202)))) x1119) (=> (not x826) x4565))) x2123))
(assert (x1513 x3289))
(assert (=> (> (+ 10000 1) x335) (= (x1894 x335) (x4822 x335))))
(assert (= (ite (= x411 x2535) x2156 (x3604 x2535)) (x1267 x2535)))
(assert (= (ite x3925 (ite x1906 (x2602 x2939) (x1939 x2939)) (x1939 x2939)) (x1983 x2939)))
(assert (x1513 x2305))
(assert (x1513 x35))
(assert (= (x4441 x3959) (ite (= x3959 x1029) x1849 (x4943 x3959))))
(assert (= (ite (= x2241 x1759) x844 (x1852 x1759)) (x3604 x1759)))
(assert (x3166 x622))
(assert (= (ite (and (not x179) x3767) (x3604 x1039) (ite x2999 (ite x938 (x1570 x1039) (x3604 x1039)) (x3604 x1039))) (x3566 x1039)))
(assert (x3166 x4596))
(assert (x1513 x83))
(assert (x1513 x34))
(assert (=> (< (- x4959 1) 10000) (= (x4822 x4959) (x1894 x4959))))
(assert (x1513 x3491))
(assert (x1513 x2495))
(assert (= (=> (= x605 (= 274184521717934524641157099916833587202 x3907)) (and (=> (and (not (< x3436 826074471)) (= x2994 36) (= x4700 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x4575 (- x2994 4)) x2799) (> x2371 0) x605 (= 1889567281 x3436) (= x2994 36) (not (= 826074471 x3436)) (= (or (> x2799 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2799) (= (<= x2799 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2006) (not (< x2994 4)) (or (and (= x4452 0) x2006 (= x1467 x1824)) (and (not x2006) (= x1467 32) (= 274184521717934524641157099916833587240 x2675) (>= x2551 0) (= x4335 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= 1 x4452) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2551) (= (x2471 x4335) x2551))) (= x2371 (x2328 (x1894 274184521717934524641157099916833587202)))) x2322) (=> (not x605) x1395))) x4753))
(assert (x2349 x1870 x1126))
(assert (x1513 x3608))
(assert (x1513 x3012))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x847)) x3573 (x874 (x1894 x847))) (x1083 (x1894 x847))))
(assert (x1513 x1689))
(assert (x3166 x4027))
(assert (x1513 x4180))
(assert (= x951 (and (not x2877) x1615)))
(assert (= x3290 (and (not x2427) x287)))
(assert (x1513 x197))
(assert (x1513 x3529))
(assert (= x1032 (=> (and (= (x3105 x1282) x1303) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3211) x2487) (= 0 x4538) (= x3746 x2487) (= 0 x4180) (= (x4101 (x1894 x3022) (x4822 208) 0) x1282) (= (x3915 x3495) x3211) (= x1402 (= x4665 0)) (= (x4101 (x1894 x3022) (x4822 210) 0) x3495) (= (x1319 1461501637330902918203684832716283019655932542975 x1303) x4665)) (and (=> (not x1402) x4423) (=> x1402 x2460)))))
(assert (x1513 x704))
(assert (x1513 x1210))
(assert (x1513 x575))
(assert (x1513 x4585))
(assert (= (x3604 x4478) (ite (= x2241 x4478) x844 (x1852 x4478))))
(assert (x1513 x1781))
(assert (= (x102 x2843) (ite x3925 (ite x1906 (x3244 x2843) (x3126 x2843)) (x3171 x2843))))
(assert (= (ite (= x1883 x2241) x844 (x1852 x1883)) (x3604 x1883)))
(assert (x1513 x3820))
(assert (x1513 x4285))
(assert (x4187 x4957 x1243))
(assert (x1513 x2385))
(assert (x1513 x4615))
(assert (= (and x2543 (not x373)) x287))
(assert (x1513 x3574))
(assert (x1513 x2600))
(assert (= (ite (= x4679 x1039) x1441 (x1377 x1039)) (x1939 x1039)))
(assert (= (ite (= x678 x4766) x250 (x4132 x4766)) (x4799 x4766)))
(assert (= (x1939 x168) (ite (= x168 x4679) x1441 (x1377 x168))))
(assert (x1513 x4718))
(assert (= (or (and x4845 x1491) x707) x716))
(assert (x1513 x4862))
(assert (= x3089 (=> (and (= x2493 (x2328 (x1894 x4789))) (= x2384 false) (= x962 (> x2493 0)) (or (and (= x3204 (x2328 (x1894 x4789))) (not (= x3204 0)) (not (= x827 0)) x962 (or (not x2996) (and x4768 x2996 (= x4191 (x4041 (x1894 274184521717934524641157099916833587240))) (> 4294967296 x2055) (= (<= x4191 (x3815 (x1894 274184521717934524641157099916833587240))) x4768) (= x883 (x4041 (x1894 x4789))) x259 (= (= (x3815 (x1894 x4789)) x883) x259))) (= (< 0 x827) x2996)) (not x962)) (= false x1129)) x202)))
(assert (= (=> (= x1014 (= 274184521717934524641157099916833587202 x2419)) (and (=> (not x1014) x1413) (=> (and (> x1462 0) (= x1462 (x2328 (x1894 274184521717934524641157099916833587202))) (= 1889567281 x727) (= x3648 1) (= x3350 36) (not (< x727 826074471)) (not x4929) (not (> 4 x3350)) (not (= x727 826074471)) (= (x4575 (- x3350 4)) x1177) (= x2549 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x919 32) (>= x1990 0) (= x1990 (x3583 x2549)) (<= x1990 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2851 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x1193 x3350) (= (or (> x1177 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1177) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1177)))) x4929) x1014 (= 274184521717934524641157099916833587240 x1866)) x1541))) x2335))
(assert (x1513 x2531))
(assert (x3166 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1513 x2818))
(assert (=> (> (+ 10000 1) x4289) (= (x4822 x4289) (x1894 x4289))))
(assert (= (ite (= x3697 x2218) x4322 (x1377 x3697)) (x201 x3697)))
(assert (x1513 x997))
(assert (x1513 x981))
(assert (x1513 x1904))
(assert (= 115792089237316195423570984636004990333889740523700931696805413995650331181055 (x2856 (x4822 115792089237316195423570984636004990333889740523700931696805413995650331181055))))
(assert (x1513 x3367))
(assert (x1513 x4701))
(assert (= (=> (= (= x3907 274184521717934524641157099916833587206) x2723) (and (=> (and (not (> 4 x3919)) (not (= 826074471 x4412)) (not (< x4412 826074471)) (= x3919 36) (= x4412 1889567281) (= x3919 36) x2723 (= (x4575 (- x3919 4)) x702) (< 0 x1734) (= x2081 (or (and (= (<= x702 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x702)) (> x702 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (and (= x1467 x1824) (= x4452 0) x2081) (and (= x45 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x4452 1) (= 274184521717934524641157099916833587240 x1792) (= x3827 (x709 x45)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3827) (<= 0 x3827) (= 32 x1467) (not x2081))) (= x2547 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x2328 (x1894 274184521717934524641157099916833587206)) x1734)) x2322) (=> (not x2723) x4753))) x4556))
(assert (x2417 x465))
(assert (= (x1983 x2431) (ite x3925 (ite x1906 (x2602 x2431) (x1939 x2431)) (x1939 x2431))))
(assert (x2349 x3838 x2532))
(assert (x1513 x3708))
(assert (x1513 x994))
(assert (x1513 x1317))
(assert (x1513 x316))
(assert (= x2709 (and (not x3899) x3015)))
(assert (= (and x2457 x743) x564))
(assert (x1513 x735))
(assert (x2417 x1081))
(assert (= (=> (and (= 274184521717934524641157099916833587240 x461) (= x2161 (x3618 x1837)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x4746) (<= x2161 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2161 x3068) x2102) (= x1837 (x4101 (x1894 274184521717934524641157099916833587240) x3763 0)) (= (x4101 (x1894 x2922) (x4822 2) 0) x3763) (= x3805 274184521717934524641157099916833587240) (>= x2161 0)) (and (=> (not x2102) x3087) (=> x2102 x991))) x1955))
(assert (= (x1894 1166402363) (x4822 1166402363)))
(assert (= (ite x4806 (x1414 x4347) (ite (and (not x2648) x2519 x1313) (x2080 x4347) (x1414 x4347))) (x99 x4347)))
(assert (x1513 x930))
(assert (x1513 x2360))
(assert (x1513 x732))
(assert (= (and (not x3434) x3904) x4495))
(assert (= (ite (= x4679 (x4822 56)) x1441 (x1377 (x4822 56))) (x1939 (x4822 56))))
(assert (= (ite x3925 (ite x1906 (x2602 x4256) (x1939 x4256)) (x1939 x4256)) (x1983 x4256)))
(assert (x778 x2252 x3065 x3785 x2792))
(assert (= x867 (x2856 (x1894 x867))))
(assert (= (+ (x2856 x4255) 3) (x2856 (x2808 x4255 3))))
(assert (= x4103 (=> (and (= (x1229 (+ x4765 x2013)) x3275) (= (> x4765 x3275) x1907)) (and (=> (and (= 32 x3627) (= 1 x4650) (not x1907)) x2921) (=> x1907 x1595)))))
(assert (= (+ 6 (x2856 x4255)) (x2856 (x2808 x4255 6))))
(assert (= (x3604 x3470) (ite (= x3470 x2241) x844 (x1852 x3470))))
(assert (x1513 x4569))
(assert (= (x1939 x4478) (ite (= x4478 x4679) x1441 (x1377 x4478))))
(assert (x1513 x3145))
(assert (x1513 x1353))
(assert (= (x1451 (x1894 x2008)) (ite x3925 (ite x1906 (x1898 (x1894 x2008)) (x1083 (x1894 x2008))) (x47 (x1894 x2008)))))
(assert (= (x3566 x2700) (ite (and (not x179) x3767) (x3604 x2700) (ite x2999 (ite x938 (x1570 x2700) (x3604 x2700)) (x3604 x2700)))))
(assert (= (x1939 x1744) (ite (= x1744 x4679) x1441 (x1377 x1744))))
(assert (= (x2476 (x1894 x3964)) (ite x2139 (x1436 (x1894 x3964)) (ite (and (not x3527) x865 x4586) (x2316 (x1894 x3964)) (x1720 (x1894 x3964))))))
(assert (= (ite x4941 (ite (and (not x2275) x4941) (x208 x1036) (x4155 x1036)) (x1625 x1036)) (x709 x1036)))
(assert (x1513 x3020))
(assert (= x4892 (and x1009 (not x2102))))
(assert (= (ite (= x851 x3083) x3273 (x4763 x851)) (x4934 x851)))
(assert (x1513 x1871))
(assert (x1513 x3992))
(assert (= (x1939 x318) (ite (= x4679 x318) x1441 (x1377 x318))))
(assert (= (x4342 x4486) (ite x1846 (ite x4600 (x477 x4486) (x4506 x4486)) (ite (and x1970 x4678) (x4304 x4486) (x4506 x4486)))))
(assert (= (and (not x4759) x4819) x3047))
(assert (x1513 x2252))
(assert (x1513 x4536))
(assert (= (=> (= x4903 x10) x4290) x3173))
(assert (= (=> (= x3369 (= x3602 0)) (and (=> (not x3369) x2216) (=> x3369 x2460))) x3003))
(assert (= (x1582 (x1894 x4959)) (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x4959)) x4701 (x1912 (x1894 x4959)))))
(assert (= (x1894 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x4822 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1513 x1072))
(assert (= x4577 (or (and x2258 (not x1186)) (and (not x3494) x2844) (and x2223 x963) (and x4690 x3159) (and (not x792) x182) (and (not x1757) x1629) (and x4829 (not x4980)) (and x1695 x1919) (and x4888 x1279) (and x3951 x40) (and x3427 x1775))))
(assert (x1513 x2860))
(assert (x1513 x3238))
(assert (x1513 x1481))
(assert (x3166 x2753))
(assert (=> (> (+ 10000 1) x3339) (= (x4822 x3339) (x1894 x3339))))
(assert (= (x1908 x2700) (ite (= x1420 x2700) x31 (x4952 x2700))))
(assert (= 0 (x2266 x4766)))
(assert (= x1081 (x2856 (x1894 x1081))))
(assert (x1513 x206))
(assert (x1513 x2927))
(assert (x1513 x3307))
(assert (x1513 x3556))
(assert (x1513 x3836))
(assert (x1513 x1791))
(assert (x1513 x1662))
(assert (x1513 x112))
(assert (= x6 (x2856 (x1894 x6))))
(assert (= (and (not x3236) x3982) x2552))
(assert (= (ite x94 (ite x3368 (x4553 x127) (x2293 x127)) (ite (and x1423 x287 (not x2427)) (x3010 x127) (x2293 x127))) (x4505 x127)))
(assert (= (or x2124 x2863) x1565))
(assert (= (x2856 (x1894 x2034)) x2034))
(assert (x1513 x4261))
(assert (= (ite x3925 (ite x1906 (x2602 x3562) (x1939 x3562)) (x1939 x3562)) (x1983 x3562)))
(assert (x1513 x3443))
(assert (x1513 x3048))
(assert (x1513 x3300))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2856 (x4822 115792089237316195423570985008687907853269984665640564039457584007913129639934))))
(assert (x1513 x426))
(assert (= x4158 (=> (and (= (x2098 (x1894 274184521717934524641157099916833587240)) x1068) (= (> x3774 x1068) x4287)) (and (=> (and (or (and (= (< (+ (x4316 (x1894 x335)) x3774) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4671) (= x1687 x2758) (= x3551 x3020) (= x2175 (x1229 (+ x3774 (uninterp_mod (x4316 (x1894 x335)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1242 (ite (= 0 x3551) x3774 0)) (= (- (x2098 (x1894 274184521717934524641157099916833587240)) x3774) x1514) x1403 (= x4597 (- (x82 (x1894 x335)) x1242)) (= (> x3551 0) x2668) (= (x1229 (+ (uninterp_mod (x4473 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1242)) x988) (= (< (+ (x4473 (x1894 274184521717934524641157099916833587240)) x1242) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1403) (or (not x2668) (and x2255 (= x3345 (x2126 (x1894 x335))) x2668 (= (>= (x3446 (x1894 274184521717934524641157099916833587240)) x982) x2255) (< x1687 4294967296) (= (x2126 (x1894 274184521717934524641157099916833587240)) x982) (= x4974 (= (x3446 (x1894 x335)) x3345)) x4974)) x4671 x2203) (and (= x2758 0) (not x2203) (= 0 x3020))) (= (and (< (+ x3774 x426) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x3070 x3774)) x2203) (= x3329 (= 0 x2758)) (not x4287) (= x426 (x2098 (x1894 x335))) (= (x2098 (x1894 274184521717934524641157099916833587240)) x3070)) x3299) (=> x4287 x2460)))))
(assert (x1513 x166))
(assert (x1513 x905))
(assert (x1513 x2261))
(assert (= (ite (and (not x179) x3767) (x3276 (x1894 x335)) (ite x2999 (ite x938 (x977 (x1894 x335)) (x1582 (x1894 x335))) (x1582 (x1894 x335)))) (x269 (x1894 x335))))
(assert (x1513 x4968))
(assert (= (x3604 x4199) (ite (= x4199 x2241) x844 (x1852 x4199))))
(assert (= (x1939 x4771) (ite (= x4771 x4679) x1441 (x1377 x4771))))
(assert (x1513 x2590))
(assert (x1513 x2450))
(assert (x1513 x970))
(assert (x1513 x2683))
(assert (x1513 x2013))
(assert (= (=> (and (or (and x1134 (= x3433 x2784) (= 96 x4910)) (and (= x523 (x1229 (+ 96 x4712))) (= (x1229 (+ 63 x1344)) x4164) (not x1134) (= x1407 x3433) (= x4910 x2784) (= (x1229 (+ x2784 x2157)) x1407) (= x2157 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4164)))) (= (= x1344 0) x1134) (= (x4931 x4910) x4108) (= x3831 (< (+ x1240 (x2688 (x1894 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1240 0) (= x3433 x3823) (= x3928 (x1229 (+ (uninterp_mod (x2688 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1240))) (= (- (x3362 (x1894 x1092)) x1240) x1766) (or (and (= (ite x3885 1 0) x3172) (= (= x4876 0) x2002) (> x4876 0) (not (or (> x392 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x392 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x392 32)))) (= (not x2002) x3885) (= x623 (x1229 (+ x4910 32))) (= x4876 x3172) (= (x2078 x623) x4876) x4134 (= (x4931 x4910) x392)) (not x4134)) (not (= 0 x3623)) (= x4134 (> x4108 0)) x3831) x1090) x2929))
(assert (x1513 x2304))
(assert (=> (< (- x1299 1) 10000) (= (x4822 x1299) (x1894 x1299))))
(assert (x1513 x4562))
(assert (x1513 x2418))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x4789)) x4370 (x2557 (x1894 x4789))) (x853 (x1894 x4789))))
(assert (x1513 x3395))
(assert (x1513 x1574))
(assert (x1513 x1073))
(assert (= (x1199 (x4822 56)) (ite x1846 (ite x4600 (x534 (x4822 56)) (x201 (x4822 56))) (x201 (x4822 56)))))
(assert (= (=> (and (= x4470 (x3604 x551)) (= x984 (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4470))) (= (- (/ x4001 10000) (uninterp_frac x4001 10000)) x968) (= (> x2318 x984) x4204) (= x4001 (uninterp_mod (* x2318 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x4204 x2460) (=> (not x4204) x306))) x2722))
(assert (x1513 x4963))
(assert (= (x2523 x127) (ite (= x1136 x127) x4240 (x2293 x127))))
(assert (x1513 x88))
(assert (=> (> (+ 10000 1) x2482) (= (x4822 x2482) (x1894 x2482))))
(assert (= (and x3527 x865) x526))
(assert (x1513 x2265))
(assert (x1513 x623))
(assert (= x240 (x2856 (x1894 x240))))
(assert (= (x1983 x837) (ite x3925 (ite x1906 (x2602 x837) (x1939 x837)) (x1939 x837))))
(assert (x1513 x1081))
(assert (x3166 x1399))
(assert (x1513 x479))
(assert (x1513 x317))
(assert (= (ite x3925 (ite x1906 (x2602 x2535) (x1939 x2535)) (x1939 x2535)) (x1983 x2535)))
(assert (x1513 x3828))
(assert (= x1554 (=> (and (= x2584 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= (x4101 (x1894 x4289) (x4822 1) 0) x1036) (= (x161 x1036) x642) (= (> x642 x1581) x1891) (= (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3039)) x1581) (= x155 (x4575 (- x264 x3039))) (<= 0 x642) (= 274184521717934524641157099916833587240 x553) (<= x642 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (not x1891) x996) (=> x1891 x4653)))))
(assert (x1513 x4303))
(assert (x1513 x2086))
(assert (x1513 x1115))
(assert (x1513 x827))
(assert (x1513 x2369))
(assert (x2417 x3303))
(assert (= (ite (= x1549 x411) x2156 (x3604 x1549)) (x1267 x1549)))
(assert (x1513 x867))
(assert (= (ite x2139 (ite (and x4337 x526) (x4306 x127) (x3486 x127)) (ite (and (not x3527) x865 x4586) (x3587 x127) (x4306 x127))) (x1003 x127)))
(assert (x1513 x4488))
(assert (x3166 x762))
(assert (x1513 x1453))
(assert (x1513 x847))
(assert (= (ite (= x1145 x2218) x4322 (x1377 x1145)) (x201 x1145)))
(assert (x1513 x1937))
(assert (= (x1939 x156) (ite (= x156 x4679) x1441 (x1377 x156))))
(assert (x1513 x964))
(assert (=> (< (- x465 1) 10000) (= (x4822 x465) (x1894 x465))))
(assert (x1513 x2581))
(assert (= (x1983 x3866) (ite x3925 (ite x1906 (x2602 x3866) (x1939 x3866)) (x1939 x3866))))
(assert (x2349 x3728 x1027))
(assert (= (x640 x67) (ite x4941 (ite (and (not x2275) x4941) (x2005 x67) (x1769 x67)) (x4506 x67))))
(assert (= (x3824 x1837) (ite x674 (ite (and x4128 x4346) (x4784 x1837) (ite (and x355 x2985) (x4784 x1837) (x2948 x1837))) (ite (and x4137 x4909 (not x4004)) (x2459 x1837) (x4784 x1837)))))
(assert (x3166 x2530))
(assert (= (x2541 x2611) (ite (= x1892 x2611) x2951 (x76 x2611))))
(assert (= (=> (= x614 (> x980 x3304)) (and (=> (and (= x3834 x2748) (= (x4101 (x1894 274184521717934524641157099916833587240) x1367 0) x3958) (= (x4575 (- x3304 x980)) x1791) (= x2841 32) (= 1 x4677) (not x614) (= x4033 274184521717934524641157099916833587240) (= x1367 (x4101 (x1894 x3067) (x4822 2) 0))) x1608) (=> x614 x1853))) x2656))
(assert (x3166 x1204))
(assert (x1513 x1839))
(assert (= (=> (= (= 0 x1260) x2043) (and (=> x2043 x1272) (=> (not x2043) x3132))) x3624))
(assert (x1513 x1527))
(assert (x3166 x2450))
(assert (= (x2856 (x1894 x3022)) x3022))
(assert (x1513 x2617))
(assert (x3166 x1478))
(assert (= (=> (and (= x2611 (x4101 (x1894 x2332) (x4822 1) 0)) (= (x2657 x2611) x3552) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3552) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x755) (= 274184521717934524641157099916833587240 x4326) (= x4781 (> x3552 x4479)) (>= x3552 0) (= x4479 (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3460))) (= x2812 (x4575 (- x4446 x3460)))) (and (=> x4781 x347) (=> (not x4781) x643))) x4843))
(assert (x1513 x2157))
(assert (x1513 x2094))
(assert (= x3441 (x2856 (x1894 x3441))))
(assert (= (ite (= x2022 x1892) x2951 (x76 x2022)) (x2541 x2022)))
(assert (x1513 x2747))
(assert (= x1974 (and x649 (not x268))))
(assert (= (x1582 (x1894 x847)) (ite (= (x1894 x847) (x1894 274184521717934524641157099916833587240)) x4701 (x1912 (x1894 x847)))))
(assert (= (ite (= x4679 x2431) x1441 (x1377 x2431)) (x1939 x2431)))
(assert (x1513 x663))
(assert (x1513 x2210))
(assert (= x3972 (x2856 (x1894 x3972))))
(assert (=> (> (+ 10000 1) x2008) (= (x1894 x2008) (x4822 x2008))))
(assert (x4612 x915 x4323 x3151 x1468))
(assert (x3166 x4582))
(assert (= x425 (=> (and (= x4449 (= x2922 x4341)) (= x1667 x2922)) (and (=> (not x4449) x991) (=> x4449 x3681)))))
(assert (x1513 x16))
(assert (x1513 x1704))
(assert (x1513 x266))
(assert (x305 x2038 x3455 x4669 x3243))
(assert (x1513 x3938))
(assert (x1513 x3781))
(assert (x1513 x1080))
(assert (x1513 x3108))
(assert (= (x1699 x4094) 0))
(assert (x1513 x2784))
(assert (= (x2856 (x1894 x3675)) x3675))
(assert (x1513 x3521))
(assert (x1513 x1612))
(assert (x1513 x2608))
(assert (= (ite x674 (ite (and x4128 x4346) (x4568 x2944) (ite (and x355 x2985) (x4090 x2944) (x4568 x2944))) (ite (and x4909 (not x4004) x4137) (x3698 x2944) (x4568 x2944))) (x3846 x2944)))
(assert (x1513 x3193))
(assert (= (x1939 x2700) (ite (= x2700 x4679) x1441 (x1377 x2700))))
(assert (x1513 x3867))
(assert (= (x3661 x4207) (ite x1846 (ite x4600 (x4985 x4207) (x1625 x4207)) (x1095 x4207))))
(assert (x1564 x1817 x2733))
(assert (x1513 x543))
(assert (x1513 x4258))
(assert (x1513 x121))
(assert (= x175 (and x2829 (not x4464))))
(assert (= (=> (and (= x1521 (x1229 (+ x580 31))) (= (x1229 (+ x1835 128)) x3077) (not (= x2782 0)) (not (or (and (> 32 x580) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x580))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x580))) (= x3077 x4145) (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1521) x1835) (= x876 x843) (= x843 (x4654 128))) x398) x1476))
(assert (x1513 x2303))
(assert (= (x1512 x4766) (ite (= x4766 x573) 274184521717934524641157099916833587240 (x2342 x4766))))
(assert (x1513 x402))
(assert (x1513 x4981))
(assert (=> (< (- x4676 1) 10000) (= (x1894 x4676) (x4822 x4676))))
(assert (= (+ 2 (x2856 x4255)) (x2856 (x2808 x4255 2))))
(assert (x1513 x110))
(assert (= (x1199 x3207) (ite x1846 (ite x4600 (x534 x3207) (x201 x3207)) (x201 x3207))))
(assert (x1513 x741))
(assert (= (x709 x45) (ite x4941 (ite (and (not x2275) x4941) (x208 x45) (x4155 x45)) (x1625 x45))))
(assert (x1513 x2712))
(assert (x1513 x2755))
(assert (x1513 x3911))
(assert (=> (< (- x3964 1) 10000) (= (x1894 x3964) (x4822 x3964))))
(assert (= (x1267 x837) (ite (= x411 x837) x2156 (x3604 x837))))
(assert (= 0 (x2885 x4340)))
(assert (x1513 x1816))
(assert (= x3870 (=> (= (= x847 274184521717934524641157099916833587202) x4386) (and (=> (not x4386) x1697) (=> x4386 x2586)))))
(assert (x1513 x4937))
(assert (= (ite (= x411 x3965) x2156 (x3604 x3965)) (x1267 x3965)))
(assert (= 0 (x1566 x2980)))
(assert (= (and x3159 (not x4690)) x963))
(assert (x1513 x2689))
(assert (x3166 x732))
(assert (= (=> (and (= x4752 x2841) (= 0 x4677)) x1608) x1853))
(assert (x1513 x998))
(assert (x1513 x3203))
(assert (= (x2856 (x2808 x3417 6)) (+ (x2856 x3417) 6)))
(assert (x1513 x3690))
(assert (x1513 x4483))
(assert (x1513 x1990))
(assert (= (x2237 x4094) (ite (= x4094 132) 274184521717934524641157099916833587240 (x1130 x4094))))
(assert (= (ite (= x4030 x2241) x844 (x1852 x4030)) (x3604 x4030)))
(assert (= (=> (= x2285 true) x1773) x2460))
(assert (= x1293 (and x1825 (not x2984))))
(assert (x1513 x2572))
(assert (x1513 x2497))
(assert (x1513 x2207))
(assert (x1513 x2462))
(assert (= x1294 (=> (and (= (> x2587 0) x3898) (= x2587 (x2328 (x1894 x2419)))) (and (=> (and (= (x3829 128) x4512) (= x1873 (x1319 1461501637330902918203684832716283019655932542975 x2008)) (= 274184521717934524641157099916833587240 x197) (= x933 (> x4095 x4512)) (= x2582 0) (= 260 x2265) x3542 (= x3421 (x46 160)) (= (x2328 (x1894 x2419)) x4894) x3898 (= x3542 (< 0 x4894)) (or (and (= x4095 0) (not x1742)) (and (= x4493 (x337 160)) (= (> x4512 32) x3666) x1742 (or (and (= x4095 32) (not x3666)) (and (= (> x4512 64) x4625) x3666 (= (x337 192) x3845) (or (and (= x360 (> x4512 96)) (= (x337 224) x91) x4625 (or (and (not x360) (= x4095 96)) (and (= x3380 (x337 256)) (= 128 x4095) (not x2494) x360 (= x2494 (< 128 x4512))))) (and (= x4095 64) (not x4625))))))) (= 274184521717934524641157099916833587240 x4911) (= 128 x4241) (or (not x933) (and (= x4079 (x1229 (+ x4512 324))) x933)) (= (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x3421) x2737) (= x4102 (x1229 (+ x2737 16156842317565293874272834530371880720966471053262404558597773956279093428224))) (= (> x4512 0) x1742)) x1889) (=> (and (= 128 x3053) (not (< x2635 x4403)) (not x3898)) x2940)))))
(assert (x1513 x3880))
(assert (= (x4246 x1036) (ite (= x1971 x1036) x2478 (x2174 x1036))))
(assert (x3166 x3211))
(assert (= (x3604 x1744) (ite (= x1744 x2241) x844 (x1852 x1744))))
(assert (x1513 x3597))
(assert (x1513 x982))
(assert (= (=> (= x2868 (= x1081 274184521717934524641157099916833587202)) (and (=> (not x2868) x574) (=> (and (not x3177) (= (x4101 (x1894 x2034) (x4822 2) 0) x1301) (>= x133 0) (= x4584 x541) (< 0 x3930) (not (= 117300739 x2289)) (= (x4575 (- x738 x3162)) x1342) (= 599290589 x2289) (= x4051 x4942) (= x4942 x3162) (not (= 404098525 x2289)) (<= x2034 1461501637330902918203684832716283019655932542975) x2868 (= (< x133 x4942) x4891) (= x738 (x3126 x1135)) (not x1439) (= (x4101 (x1894 x2034) (x4822 1) 0) x1135) (= 32 x4878) (not x4891) (<= 0 x738) (= x4058 (+ x4051 x4584)) (>= x541 0) (= x133 (x3248 x4225)) (= x521 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (< x133 x4942) x2104) (= (< x738 x3162) x1439) (= x776 x2034) (= x3930 (x2328 (x1894 274184521717934524641157099916833587202))) (not x2104) (= x250 x3162) (not x3315) (= x3474 274184521717934524641157099916833587240) (= (x3890 x1881) x541) (= x1275 x1276) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x4373) (not (< x1276 4)) (= x1605 274184521717934524641157099916833587240) (= x3177 (< x738 x4942)) (= 274184521717934524641157099916833587240 x2667) (= x3315 (>= (+ x4942 x541) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x738 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587240 x2697) (= (x4575 (- x133 x3162)) x1544) (= 1 x3012) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4942 x541)) (= x369 (x4101 (x1894 274184521717934524641157099916833587240) x1301 0)) (= (x4575 (- x1276 4)) x42) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4101 (x1894 x2034) (x4822 2) 0) x4641) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x42) (and (< x42 96) (= (<= x42 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x3970) (= x1264 x1834) (= x3864 (x4101 (x1894 x2034) (x4822 1) 0)) (= 100 x1276) (not (= 157198259 x2289)) (not x3970) (> 826074471 x2289) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x541) (= x1881 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x1770 x2034) (= x4225 (x4101 (x1894 274184521717934524641157099916833587240) x4641 0))) x302))) x2353))
(assert (= (and x4401 x4387) x4116))
(assert (x1513 x68))
(assert (= (=> (= 0 x2769) x993) x347))
(assert (x2349 x486 x1430))
(assert (= (x130 x1500) (ite x3925 (ite x1906 (x3726 x1500) (x1625 x1500)) (x4435 x1500))))
(assert (x3166 x1425))
(assert (x1513 x2441))
(assert (x1513 x2461))
(assert (x1513 x214))
(assert (x1513 x3738))
(assert (x1513 x2274))
(assert (= x4724 (and (not x3011) x3668)))
(assert (x1513 x3038))
(assert (x1513 x3344))
(assert (x1513 x4557))
(assert (= (x3566 x3562) (ite (and (not x179) x3767) (x3604 x3562) (ite x2999 (ite x938 (x1570 x3562) (x3604 x3562)) (x3604 x3562)))))
(assert (= (x3604 x3562) (ite (= x3562 x2241) x844 (x1852 x3562))))
(assert (x1513 x3603))
(assert (= x3942 (and (not x1491) x4845)))
(assert (= (ite (= x4382 x4679) x1441 (x1377 x4382)) (x1939 x4382)))
(assert (x1513 x1042))
(assert (x1513 x2341))
(assert (x1513 x97))
(assert (= (=> (and (= x2951 (x1229 (+ x2845 x980))) (= x138 (< x2951 x2845))) (and (=> x138 x1853) (=> (not x138) x3929))) x4508))
(assert (x1513 x4850))
(assert (= (ite x674 (ite (and x4128 x4346) (x4568 x3175) (ite (and x2985 x355) (x4090 x3175) (x4568 x3175))) (ite (and x4137 (not x4004) x4909) (x3698 x3175) (x4568 x3175))) (x3846 x3175)))
(assert (x1513 x1287))
(assert (x1513 x1758))
(assert (x778 x4596 x2571 x999 x86))
(assert (x2349 x2852 x4760))
(assert (x1513 x1916))
(assert (x1513 x4267))
(assert (x2349 x797 x1269))
(assert (x3166 x356))
(assert (x1513 x4001))
(assert (x1513 x3582))
(assert (x1513 x524))
(assert (x1513 x3431))
(assert (x1513 x4766))
(assert (x1513 x2782))
(assert (= (and x4685 (not x3338)) x2479))
(assert (= (x4822 115792089237316195423570985008687907853269984665640564039457584007913129639934) (x1894 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x1513 x61))
(assert (x2417 x4676))
(assert (= (x3846 x45) (ite x674 (ite (and x4346 x4128) (x4568 x45) (ite (and x2985 x355) (x4090 x45) (x4568 x45))) (ite (and x4909 x4137 (not x4004)) (x3698 x45) (x4568 x45)))))
(assert (x1513 x3524))
(assert (= (=> (and (or (and (= x3300 96) x436) (and (= x3300 x2806) (= (x1229 (+ 96 x1673)) x1172) (not x436))) (= x3023 (x482 x3300)) (= 0 x3992) (= x436 (= x2703 0)) x21 (= (- (x48 (x1894 x4676)) x3992) x1037) (or (not x3046) (and (= x2246 x4161) x3046 (> x2246 0) (= (not x820) x2654) (= (= 0 x2246) x820) (= (ite x2654 1 0) x4161) (= (x482 x3300) x538) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x538) (and (> 32 x538) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x538) true)))) (= (x1229 (+ x3300 32)) x2240) (= (x3042 x2240) x2246))) (= x4680 (x1229 (+ (uninterp_mod (x2452 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3992))) (= (< (+ x3992 (x2452 (x1894 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x21) (= (> x3023 0) x3046) (not (= 0 x2015))) x1901) x1119))
(assert (= (or (and x163 x2868) (and x2552 x576) (and x3236 x3982)) x1906))
(assert (x1513 x270))
(assert (= (x3604 x1420) (ite (= x1420 x2241) x844 (x1852 x1420))))
(assert true)
(assert (= (x3566 (x4822 56)) (ite (and x3767 (not x179)) (x3604 (x4822 56)) (ite x2999 (ite x938 (x1570 (x4822 56)) (x3604 (x4822 56))) (x3604 (x4822 56))))))
(assert (x1513 x4778))
(assert (= (ite x4941 (ite (and x4941 (not x2275)) (x1003 x4335) (x539 x4335)) (x3126 x4335)) (x2471 x4335)))
(assert (x2349 x2753 x320))
(assert (= (x1939 x2250) (ite (= x4679 x2250) x1441 (x1377 x2250))))
(assert (= (and x336 x2642) x3427))
(assert (= (ite (= x1039 x2392) x2204 (x3566 x2392)) (x4952 x2392)))
(assert (= (ite (= x411 x4679) x1441 (x1377 x411)) (x1939 x411)))
(assert (x1513 x4375))
(assert (x1513 x4210))
(assert (= (x1983 x1348) (ite x3925 (ite x1906 (x2602 x1348) (x1939 x1348)) (x1939 x1348))))
(assert (= x2447 (=> (and (= x1333 (x1229 (+ 32 x2980))) (= (not x3577) x909) (= (x342 x1333) x3378) (= (= x3378 0) x3577) (= (= x3378 (ite x909 1 0)) x1840)) (and (=> x1840 x2612) (=> (not x1840) x2460)))))
(assert (= (ite x4806 (ite (and x238 x641) (x102 x1074) (x4644 x1074)) (ite (and x2519 x1313 (not x2648)) (x4924 x1074) (x102 x1074))) (x572 x1074)))
(assert (x1513 x4119))
(assert (x2417 x519))
(assert (x1513 x2042))
(assert (= (and (not x4872) x3414) x2306))
(assert (x1513 x1429))
(assert (x1513 x1869))
(assert (x1513 x2542))
(assert (x1513 x677))
(assert (= (x4453 192) 0))
(assert (x3166 x1187))
(assert (x1513 x100))
(assert (x1513 x1673))
(assert (x1513 x1047))
(assert (x1513 x4102))
(assert (x1513 x1262))
(assert (x2417 x1914))
(assert (x1513 x1754))
(assert (= (x15 x2250) (ite (= x4178 x2250) x2443 (x1267 x2250))))
(assert (x1513 x779))
(assert (x1513 x2949))
(assert (x1513 x4409))
(assert (= x3565 (=> (and (= x313 (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1337))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4017) (= x2311 274184521717934524641157099916833587240) (= x4017 (x4246 x3175)) (= (> x4017 x313) x4645) (= x3175 (x4101 (x1894 x1545) (x4822 1) 0)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x1971) (= (x4575 (- x4830 x1337)) x2478) (<= 0 x4017)) (and (=> (not x4645) x2538) (=> x4645 x3249)))))
(assert (x1513 x2813))
(assert (x1513 x3345))
(assert (= x991 (=> (and (= x4310 0) (= x4752 x2774)) x2171)))
(assert (= (ite x1846 (ite x4600 (x4985 x4318) (x1625 x4318)) (x1095 x4318)) (x3661 x4318)))
(assert (= (x572 x3340) (ite x4806 (ite (and x641 x238) (x102 x3340) (x4644 x3340)) (ite (and x2519 (not x2648) x1313) (x4924 x3340) (x102 x3340)))))
(assert (x1513 x74))
(assert (x2417 274184521717934524641157099916833587240))
(assert (= (x1908 x1282) (ite (= x1420 x1282) x31 (x4952 x1282))))
(assert (x1513 x2213))
(assert (= (ite (= x4766 x3136) x4007 (x4737 x4766)) (x3886 x4766)))
(assert (x1513 x3295))
(assert (x1513 x1020))
(assert (= (ite (= x2241 x1361) x844 (x1852 x1361)) (x3604 x1361)))
(assert (x3166 x4047))
(assert (= x4676 (x2856 (x1894 x4676))))
(assert (=> (< (- x3067 1) 10000) (= (x1894 x3067) (x4822 x3067))))
(assert (=> (> (+ 10000 1) x6) (= (x4822 x6) (x1894 x6))))
(assert (x1513 x978))
(assert (x1513 x3605))
(assert (x3166 x3122))
(assert (x1513 x845))
(assert (x1513 x1747))
(assert (x1513 x1711))
(assert (= (=> (= x3289 x310) x4167) x1717))
(assert (x1513 x3266))
(assert (x1513 x599))
(assert (= x4678 x120))
(assert (= (ite (= x1420 x837) x31 (x4952 x837)) (x1908 x837)))
(assert (x1513 x2396))
(assert (x1513 x2359))
(assert (x1513 x4720))
(assert (x1513 x4445))
(assert (x1513 x612))
(assert (= (ite x674 (ite (and x4128 x4346) (x572 x3857) (ite (and x2985 x355) (x572 x3857) (x291 x3857))) (ite (and (not x4004) x4909 x4137) (x3580 x3857) (x572 x3857))) (x4306 x3857)))
(assert (x1513 x2840))
(assert (x1513 x4751))
(assert (= (ite (= x2676 x1307) x4949 (x2471 x1307)) (x675 x1307)))
(assert (= (x3846 x2611) (ite x674 (ite (and x4128 x4346) (x4568 x2611) (ite (and x355 x2985) (x4090 x2611) (x4568 x2611))) (ite (and x4137 (not x4004) x4909) (x3698 x2611) (x4568 x2611)))))
(assert (x1513 x769))
(assert (= (ite x3925 (ite x1906 (x4761 x936) (x3248 x936)) (ite (and x570 x877) (x2576 x936) (x3248 x936))) (x4828 x936)))
(assert (= true x3147))
(assert (= (ite x1846 (ite x4600 (x534 x1857) (x201 x1857)) (x201 x1857)) (x1199 x1857)))
(assert (x1513 x147))
(assert (x1513 x1338))
(assert (x1564 x2590 x688))
(assert (x1513 x3186))
(assert (x1513 x2851))
(assert (x2349 x2818 x1511))
(assert (x1513 x328))
(assert (x1513 x1780))
(assert (x1513 x4561))
(assert (= (and (not x619) x4576) x4355))
(assert (= (x1267 x4199) (ite (= x411 x4199) x2156 (x3604 x4199))))
(assert (=> (> (+ 10000 1) x4236) (= (x4822 x4236) (x1894 x4236))))
(assert (x1513 x701))
(assert (= (and (not x4018) x4458) x4308))
(assert (= (=> (= x823 (< 0 x441)) (and (=> x823 x3909) (=> (not x823) x2460))) x628))
(assert (x1513 x873))
(assert (x1513 x151))
(assert (x1513 x3742))
(assert (x1513 x1828))
(assert (= (x280 x1589) 0))
(assert (= x2842 (=> (= x4903 x1509) x4290)))
(assert (x2417 x3675))
(assert (x1513 x139))
(assert (x1513 x2466))
(assert (=> (> (+ 10000 1) x2244) (= (x4822 x2244) (x1894 x2244))))
(assert (x1513 x3962))
(assert (= (ite x3925 (ite x1906 (x1898 (x1894 x3473)) (x1083 (x1894 x3473))) (x47 (x1894 x3473))) (x1451 (x1894 x3473))))
(assert (x2349 x1442 x2664))
(assert (x1513 x1741))
(assert (x1513 x673))
(assert (= (x3604 x1039) (ite (= x2241 x1039) x844 (x1852 x1039))))
(assert (= (x2856 (x2808 x3417 3)) (+ (x2856 x3417) 3)))
(assert (x1513 x44))
(assert (x1513 x3068))
(assert (= x2765 (=> (and (= x697 (x1229 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2880))) (= x1124 (< 0 x4918)) (= x955 (x1229 (+ x1950 36))) (= x1569 (x1229 (+ x1950 100))) (= x824 (x4575 (- x905 32))) (= x2880 (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x4778)) (= x4918 (x2328 (x1894 x3392))) (= x4778 (x1516 x4655)) (= (x1229 (+ x1950 32)) x4655) (= x955 x2910) (= x396 0) (= x3631 (x1229 (+ 32 x2910))) (= x636 (x1229 (+ 128 x955))) (= x905 (x4575 (- x1569 x1950)))) (and (=> (and (= (> x600 0) x3241) x1124 (or (and (= 0 x4914) (not x3241)) (and (= x14 x4655) (or (and (= (x1229 (+ x1569 96)) x2009) (= x4751 (x907 x4555)) (or (and (= (x1229 (+ x1569 128)) x682) (= x2298 (x907 x1680)) x1659 (or (and (= 96 x4914) (not x107)) (and (= (> x600 128) x1286) (= 128 x4914) (not x1286) (= x680 (x1229 (+ 160 x1569))) (= x2591 (x907 x2838)) (= (x1229 (+ 128 x1950)) x2838) x107)) (= x1680 (x1229 (+ x1950 96))) (= (< 96 x600) x107)) (and (= 64 x4914) (not x1659))) (= (< 64 x600) x1659) (= (x1229 (+ 64 x1950)) x4555) x4989) (and (not x4989) (= x4914 32))) (= x2714 (x907 x14)) (= (> x600 32) x4989) x3241 (= x3141 x636))) (= (> x4914 x600) x3955) (or (not x3955) (and x3955 (= x2558 (x1229 (+ x600 x636))))) (= x600 (x2624 x1950))) x2629) (=> (not x1124) x2460)))))
(assert (x1513 x2474))
(assert (x1513 x928))
(assert (x1513 x819))
(assert (x1513 x2158))
(assert (x1513 x862))
(assert (x1513 x1826))
(assert (= (ite (and (not x179) x3767) (x3604 x2392) (ite x2999 (ite x938 (x1570 x2392) (x3604 x2392)) (x3604 x2392))) (x3566 x2392)))
(assert (x1513 x1579))
(assert (= (x3566 x1540) (ite (and x3767 (not x179)) (x3604 x1540) (ite x2999 (ite x938 (x1570 x1540) (x3604 x1540)) (x3604 x1540)))))
(assert (x1513 x4205))
(assert (x1513 x3817))
(assert (x1513 x3712))
(assert (x1513 x919))
(assert (x1513 x89))
(assert (x1513 x1872))
(assert (= (x4952 x3562) (ite (= x3562 x1039) x2204 (x3566 x3562))))
(assert (= (x522 x4340) (ite (and x4092 x4259 x4657 x4975 (not x1626) x2891) (x2053 x4340) (ite (and x4259 x4975 x2891 (not x4657) x4092) (x65 x4340) (ite (and x4092 x2891 (not x4259) x4975) (x1848 x4340) (ite (and (not x4092) x2891 x4975) (x2885 x4340) (x4028 x4340)))))))
(assert (= (or (and (not x1907) x3467) x4211) x2863))
(assert (x3166 x2308))
(assert (=> (> (+ 10000 1) x519) (= (x4822 x519) (x1894 x519))))
(assert (= (ite (= x1348 x2241) x844 (x1852 x1348)) (x3604 x1348)))
(assert (= x3507 (and (not x1858) x4203)))
(assert (x1513 x2010))
(assert (x3166 x915))
(assert (=> (< (- x2419 1) 10000) (= (x4822 x2419) (x1894 x2419))))
(assert (x1513 x3235))
(assert (x2417 x335))
(assert (x1513 x1445))
(assert (x1513 x3121))
(assert (x1513 x967))
(assert (=> (> (+ 10000 1) x3200) (= (x1894 x3200) (x4822 x3200))))
(assert (= x3475 (x2856 (x1894 x3475))))
(assert (x1513 x248))
(assert (x1513 x3907))
(assert (x1513 x1069))
(assert (x1513 x2))
(assert (= (=> (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2035) (= x335 x4289) (= x3096 68) (not (= x3590 2514000705)) (> x4831 0) (= x3039 x3774) (not (> 826074471 x3590)) (= x4075 (x4575 (- x3096 4))) (= x1314 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4075)) (> 64 x4075)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4075))) (= x3555 x3096) (= x3590 2835717307) (not (= 826074471 x3590)) (not (= 1889567281 x3590)) (not (> 4 x3096)) (= (x2328 (x1894 274184521717934524641157099916833587206)) x4831)) (and (=> (not x1314) x3892) (=> x1314 x4653))) x3745))
(assert (= (+ 4 (x2856 x3417)) (x2856 (x2808 x3417 4))))
(assert (x1513 x2620))
(assert (x1513 x231))
(assert (= (or (and x987 (not x1007)) (and (not x4397) x4019)) x4432))
(assert (x1513 x4039))
(assert (x1513 x2298))
(assert (x1513 x4954))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x3392)) x4701 (x1912 (x1894 x3392))) (x1582 (x1894 x3392))))
(assert (x4263 x2038 x143 x2163 x3231))
(assert (x1513 x2775))
(assert (= (x1083 (x1894 x3392)) (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x3392)) x3573 (x874 (x1894 x3392)))))
(assert (= (ite (= x2843 x2676) x4949 (x2471 x2843)) (x675 x2843)))
(assert (x1513 x3897))
(assert (= x1492 (x2856 (x1894 x1492))))
(assert (x1513 x2751))
(assert (x1513 x3343))
(assert (x1513 x2256))
(assert (= (ite x1846 (ite x4600 (x4985 x2179) (x1625 x2179)) (x1095 x2179)) (x3661 x2179)))
(assert (= (x1199 x4607) (ite x1846 (ite x4600 (x534 x4607) (x201 x4607)) (x201 x4607))))
(assert (= x2922 (x2856 (x1894 x2922))))
(assert (x1513 x569))
(assert (= (or (and x3047 x2943) (and x3879 x399) (and x1062 x3005) (and x1168 (not x2118)) (and x1925 x931) (and x1787 x419) (and x4819 x4759) (and x4672 x3696)) x3076))
(assert (x1513 x4633))
(assert (x1513 x1179))
(assert (= (x2523 x1307) (ite (= x1136 x1307) x4240 (x2293 x1307))))
(assert (=> (< (- x2213 1) 10000) (= (x1894 x2213) (x4822 x2213))))
(assert (x1513 x4443))
(assert (x1513 x1244))
(assert (= (ite (= x2218 x597) x4322 (x1377 x597)) (x201 x597)))
(assert (x1513 x18))
(assert (= x186 (and x3401 (not x59))))
(assert (x2417 x621))
(assert (x1513 x388))
(assert (= (ite (= x4679 x4294) x1441 (x1377 x4294)) (x1939 x4294)))
(assert (= x519 (x2856 (x1894 x519))))
(assert (= (ite x3426 (ite (and x4516 x1308) (x1507 x4396) (x4091 x4396)) (ite (and x2645 (not x4964) x906) (x4518 x4396) (x1507 x4396))) (x4552 x4396)))
(assert (= (x130 x449) (ite x3925 (ite x1906 (x3726 x449) (x1625 x449)) (x4435 x449))))
(assert (= (ite x4941 (ite (and x4941 (not x2275)) (x208 x3983) (x4155 x3983)) (x1625 x3983)) (x709 x3983)))
(assert (= (x3604 x168) (ite (= x2241 x168) x844 (x1852 x168))))
(assert (x1513 x4903))
(assert (x1513 x4951))
(assert (x2349 x3852 x1259))
(assert (x1513 x2975))
(assert (= x1662 (x2856 (x1894 x1662))))
(assert (x1513 x1029))
(assert (= (ite x4806 (ite (and x238 x641) (x4548 x3175) (x130 x3175)) (ite (and x2519 x1313 (not x2648)) (x196 x3175) (x130 x3175))) (x4568 x3175)))
(assert (x2417 x1260))
(assert (= (x4822 26959946667150639794667015087019630673637144422540572481103610249215) (x1894 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1513 x1055))
(assert (=> (< (- x3392 1) 10000) (= (x1894 x3392) (x4822 x3392))))
(assert (x1513 x4379))
(assert (x1513 x780))
(assert (x1513 x3706))
(assert (x1513 x1158))
(assert (x1513 x3274))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x4133) x3216) (and (=> (not x3216) x1419) (=> (and (= x2771 x3121) (= 599290589 x2096) (= x4070 (x4101 (x1894 274184521717934524641157099916833587240) x3759 0)) (= x4396 (x4101 (x1894 x235) (x4822 1) 0)) (= x1723 (< x1144 x4490)) (= (x4101 (x1894 x235) (x4822 1) 0) x943) (> x2578 0) (= x2058 (x2694 x4396)) (= x2374 x2058) (= x3332 (> x4490 x1144)) (<= 0 x3895) (>= 1461501637330902918203684832716283019655932542975 x235) (< (+ x2058 x4490) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4367) (and (< x4367 96) (= true (<= x4367 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1392) (not x806) (= (x4575 (- x1144 x3121)) x4718) (= (x3994 x4070) x1144) (= x777 x2170) (= x4221 274184521717934524641157099916833587240) (= x964 274184521717934524641157099916833587240) (= x806 (< x3895 x4490)) (= (x4552 x1526) x3895) (= (> x3121 x3895) x2243) (= (x2328 (x1894 274184521717934524641157099916833587202)) x2578) (not x1723) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3895) (>= x2058 0) (= x1250 x235) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2058) (= 274184521717934524641157099916833587240 x3861) (= x4367 (x4575 (- x575 4))) (not (= x2096 117300739)) (= x235 x2378) (= x4629 1) (not x1392) (= x3439 (>= (+ x4490 x2058) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 274184521717934524641157099916833587240 x1741) (= 100 x575) (not x3332) (< x2096 826074471) (= (x4575 (- x3895 x3121)) x2390) (not x3439) (= x3121 x4490) (= x575 x4605) (not (= x2096 404098525)) (= x3759 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 2) 0)) (= (+ x852 x2374) x2464) (not x2243) (= 274184521717934524641157099916833587240 x1923) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1144) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x3081) (= x4490 x852) (not (< x575 4)) x3216 (>= x1144 0) (= 274184521717934524641157099916833587240 x4562) (not (= x2096 157198259)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x1526) (= x599 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x2054))) x2679))
(assert (x1513 x1801))
(assert (= (=> (and (= x4297 x2841) (= x4677 x2299)) x262) x1608))
(assert (x1513 x1677))
(assert (x1513 x2547))
(assert (x1513 x508))
(assert (= x2600 (x2856 (x1894 x2600))))
(assert (= (and x2891 x4975) x1089))
(assert (x1513 x4269))
(assert (x1513 x3551))
(assert (= (ite x4806 (ite (and x238 x641) (x4548 x1139) (x130 x1139)) (ite (and x1313 x2519 (not x2648)) (x196 x1139) (x130 x1139))) (x4568 x1139)))
(assert (x3166 115792089237316195423570984636004990333889740523700931696805413995650331181055))
(assert (x1513 x2166))
(assert (x1513 x2849))
(assert (x1513 x3221))
(assert (x3166 x174))
(assert (x1513 x1017))
(assert (= (x4273 x3468) (ite (and x570 x877) (x2029 x3468) (x4799 x3468))))
(assert (x1513 x4450))
(assert (x1513 x4058))
(assert (= (x4563 x4956) 0))
(assert (x1513 x4322))
(assert (= (x2856 (x4822 404098525)) 404098525))
(assert (x1513 x1833))
(assert (x3166 x2430))
(assert (= (ite (and x877 x570) (x2029 x4766) (x4799 x4766)) (x4273 x4766)))
(assert (x1513 x3523))
(assert (x1513 x876))
(assert (= (ite x3925 (ite x1906 (x2602 x1361) (x1939 x1361)) (x1939 x1361)) (x1983 x1361)))
(assert (= (ite x1846 (ite x4600 (x534 x2746) (x201 x2746)) (x201 x2746)) (x1199 x2746)))
(assert (= (ite x1846 (ite x4600 (x534 x298) (x201 x298)) (x201 x298)) (x1199 x298)))
(assert (= (x4568 x45) (ite x4806 (ite (and x238 x641) (x4548 x45) (x130 x45)) (ite (and x2519 x1313 (not x2648)) (x196 x45) (x130 x45)))))
(assert (x1513 x1214))
(assert (= (x640 x1111) (ite x4941 (ite (and x4941 (not x2275)) (x2005 x1111) (x1769 x1111)) (x4506 x1111))))
(assert (= (ite (= x837 x1039) x2204 (x3566 x837)) (x4952 x837)))
(assert (x2349 x3202 x4380))
(assert (= (and (not x641) x238) x1096))
(assert (= (ite x1846 (ite x4600 (x534 x2639) (x201 x2639)) (x201 x2639)) (x1199 x2639)))
(assert (= (x1199 x3799) (ite x1846 (ite x4600 (x534 x3799) (x201 x3799)) (x201 x3799))))
(assert (x1513 x1144))
(assert (= (or (and x459 (not x3109)) x1002) x4678))
(assert (= (x4568 x449) (ite x4806 (ite (and x641 x238) (x4548 x449) (x130 x449)) (ite (and (not x2648) x1313 x2519) (x196 x449) (x130 x449)))))
(assert (x1513 x3134))
(assert (x1513 x4392))
(assert (x1513 x4202))
(assert (= (ite x674 (ite (and x4128 x4346) (x4568 x1500) (ite (and x2985 x355) (x4090 x1500) (x4568 x1500))) (ite (and x4137 (not x4004) x4909) (x3698 x1500) (x4568 x1500))) (x3846 x1500)))
(assert (=> (< (- x3907 1) 10000) (= (x1894 x3907) (x4822 x3907))))
(assert (x1513 x3683))
(assert (= 0 (x3091 x3143)))
(assert (= (x102 x1120) (ite x3925 (ite x1906 (x3244 x1120) (x3126 x1120)) (x3171 x1120))))
(assert (x2417 x2979))
(assert (= (x1786 x1328) (ite (= x2380 x1328) 274184521717934524641157099916833587240 (x1345 x1328))))
(assert (x1513 x2807))
(assert (x1513 x1755))
(assert (x1513 x2850))
(assert (= (=> (and (= x1655 (x3604 x3754)) (= (x1319 1461501637330902918203684832716283019655932542975 x1655) x2962) (= (x4101 (x1894 x2213) (x4822 208) 0) x3754) (= x1695 (= x2962 0))) (and (=> x1695 x2971) (=> (not x1695) x3715))) x4069))
(assert (x1513 x4910))
(assert (x1513 x687))
(assert (x1513 x863))
(assert (= (x1939 x1459) (ite (= x1459 x4679) x1441 (x1377 x1459))))
(assert (x1513 x2228))
(assert (= (ite (and (not x179) x3767) (x3282 x1307) (ite x2999 (ite x938 (x2735 x1307) (x2471 x1307)) (x2471 x1307))) (x2293 x1307)))
(assert (= (x3846 x2022) (ite x674 (ite (and x4128 x4346) (x4568 x2022) (ite (and x355 x2985) (x4090 x2022) (x4568 x2022))) (ite (and x4137 (not x4004) x4909) (x3698 x2022) (x4568 x2022)))))
(assert (= (=> (and (= (x822 x2980) x142) (= (or (and (= (<= x142 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x142 32)) (> x142 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4154)) (and (=> (not x4154) x2447) (=> x4154 x2460))) x3619))
(assert (x1513 x4500))
(assert (= (ite (= x2250 x411) x2156 (x3604 x2250)) (x1267 x2250)))
(assert (x1513 x3625))
(assert (x1513 x776))
(assert (= (ite (= x1074 x2676) x4949 (x2471 x1074)) (x675 x1074)))
(assert (x1513 x2472))
(assert (x1498 x545 x2904))
(assert (= (x1414 x1111) (ite x3925 (ite x1906 (x1861 x1111) (x4506 x1111)) (ite (and x877 x570) (x2862 x1111) (x4506 x1111)))))
(assert (= (x1083 (x1894 x3907)) (ite (= (x1894 x3907) (x1894 274184521717934524641157099916833587240)) x3573 (x874 (x1894 x3907)))))
(assert (x1513 x894))
(assert (= (x1983 x3409) (ite x3925 (ite x1906 (x2602 x3409) (x1939 x3409)) (x1939 x3409))))
(assert (= (ite (= x3052 x2218) x4322 (x1377 x3052)) (x201 x3052)))
(assert (x1513 x3656))
(assert (= x1005 (or x4097 (and x2049 x2321))))
(assert (= (x2856 (x4822 31536000)) 31536000))
(assert (=> (> (+ 10000 1) x896) (= (x1894 x896) (x4822 x896))))
(assert (= (and (not x4535) x1293) x4893))
(assert (x1513 x918))
(assert (= (x709 x1139) (ite x4941 (ite (and (not x2275) x4941) (x208 x1139) (x4155 x1139)) (x1625 x1139))))
(assert (= (x572 x4335) (ite x4806 (ite (and x238 x641) (x102 x4335) (x4644 x4335)) (ite (and (not x2648) x1313 x2519) (x4924 x4335) (x102 x4335)))))
(assert (= x3550 (=> (and (= x4200 (< 0 x3638)) (= x3638 (x2328 (x1894 x3907)))) (and (=> (and (= (x1582 (x1894 274184521717934524641157099916833587240)) x2439) (= x2975 128) (= x3481 x2439) (not x4200)) x4611) (=> x4200 x3354)))))
(assert (x1513 x545))
(assert (x2349 x476 x1473))
(assert (x1513 x478))
(assert (= x2422 (=> (and (= (x1229 (+ 31 x2572)) x762) (= (or (and (> 32 x2572) (= (<= x2572 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2572)) x4723) (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x762) x2407) (= (x1229 (+ x2407 x2660)) x1950)) (and (=> (not x4723) x4826) (=> x4723 x2460)))))
(assert (x1513 x3474))
(assert (= (x489 x2574) 0))
(assert (x1513 x4024))
(assert (= (ite (and x2891 x4975 (not x413)) (x522 x4340) (x2248 x4340)) (x3382 x4340)))
(assert (= x1393 (=> (and (= x2535 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0)) (= (> x2042 115792089237316195423570985008687907853269984665640564039457584007913129639934) x2223) (= (x15 x2535) x2042) (= (x4575 (- x472 1)) x2443)) (and (=> x2223 x2971) (=> (and (= (x4541 x694) x2308) (= x4621 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2308)) (= x4183 (x1229 (+ 274184521717934524641157099916833587240 x4621))) (not x2223) (= (x4101 (x1894 x2213) (x4822 208) 0) x694) (= x1205 1) (= (x1229 (+ x2042 1)) x4151) (= 0 x2925)) x2959)))))
(assert (x1513 x2830))
(assert (x1513 x3396))
(assert (x1513 x2050))
(assert (= (x1983 x788) (ite x3925 (ite x1906 (x2602 x788) (x1939 x788)) (x1939 x788))))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2856 (x4822 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (= (and x1483 (not x1486)) x593))
(assert (x1513 x1187))
(assert (= x2220 (or (and x1089 (not x1649)) x938)))
(assert (= (x1507 x3357) (ite x1846 (ite x4600 (x119 x3357) (x3126 x3357)) (x3583 x3357))))
(assert (x1513 x4139))
(assert (= x2144 (and x1718 x3877)))
(assert (= 0 (x3091 x3966)))
(assert (= (x1083 (x1894 x3964)) (ite (= (x1894 x3964) (x1894 274184521717934524641157099916833587240)) x3573 (x874 (x1894 x3964)))))
(assert (= (x130 x2944) (ite x3925 (ite x1906 (x3726 x2944) (x1625 x2944)) (x4435 x2944))))
(assert (x1513 x2613))
(assert (x1513 x178))
(assert (x1513 x897))
(assert (= (ite (= x2218 x1599) x4322 (x1377 x1599)) (x201 x1599)))
(assert (= (and x3120 (not x4736)) x228))
(assert (= (ite x1846 (ite x4600 (x4985 x447) (x1625 x447)) (x1095 x447)) (x3661 x447)))
(assert (x1513 x2561))
(assert (x2417 x410))
(assert (x1513 x1654))
(assert (x3166 x248))
(assert (x1513 x2769))
(assert (= (ite x1846 (ite x4600 (x4985 x4667) (x1625 x4667)) (x1095 x4667)) (x3661 x4667)))
(assert (= x3718 (x2856 (x1894 x3718))))
(assert (x1513 x3546))
(assert (=> (< (- x3675 1) 10000) (= (x4822 x3675) (x1894 x3675))))
(assert (x1513 x3979))
(assert (x1513 x77))
(assert (= x3339 (x2856 (x1894 x3339))))
(assert (= (x1199 x1599) (ite x1846 (ite x4600 (x534 x1599) (x201 x1599)) (x201 x1599))))
(assert (= x1914 (x2856 (x1894 x1914))))
(assert (= (=> (not (= x4629 0)) x813) x2054))
(assert (x1513 x2659))
(assert (x1513 x2987))
(assert (x1513 x3019))
(assert (= (ite x3925 (ite x1906 (x2602 x3051) (x1939 x3051)) (x1939 x3051)) (x1983 x3051)))
(assert (=> (< (- x1748 1) 10000) (= (x1894 x1748) (x4822 x1748))))
(assert (= x3851 (and x1448 x442)))
(assert (= (x2856 (x1894 x2620)) x2620))
(assert (= x2332 (x2856 (x1894 x2332))))
(assert (= (x1003 x851) (ite x2139 (ite (and x4337 x526) (x4306 x851) (x3486 x851)) (ite (and x865 (not x3527) x4586) (x3587 x851) (x4306 x851)))))
(assert (x3166 x3896))
(assert (x1513 x2675))
(assert (x1513 x252))
(assert (x1513 x4429))
(assert (x1513 x2410))
(assert (x1513 x1310))
(assert (x1513 x1337))
(assert (=> (> (+ 10000 1) x2755) (= (x4822 x2755) (x1894 x2755))))
(assert (= x4352 (and x1840 x3116)))
(assert (= (=> (and (= x2385 (x2328 (x1894 x4195))) (= (x1229 (+ x693 x4890)) x3774) (= (x1319 1461501637330902918203684832716283019655932542975 x2753) x3907) (= (x1319 1461501637330902918203684832716283019655932542975 x2008) x4195) (= (> x2385 0) x2457) (= x2753 (x3604 x2392))) (and (=> (not x2457) x692) (=> x2457 x3550))) x763))
(assert (x1513 x517))
(assert (x3166 x4778))
(assert (x1513 x3999))
(assert (x1513 x1743))
(assert (x1513 x1261))
(assert (= x3573 (x1083 (x1894 274184521717934524641157099916833587240))))
(assert (= (=> (and (= (> x2008 0) x1070) (< x2008 1461501637330902918203684832716283019655932542976) (= (< x4450 x689) x1491) (= x3617 (= x2008 0)) (not x1463) (= x4450 (x659 (x1894 x2008))) (or x3617 x1070) (not x2603)) (and (=> (and (= (- (x659 (x1894 x2008)) x689) x651) (> x3366 35) (= (<= x3366 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x2702 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x689 (x1912 (x1894 274184521717934524641157099916833587240))))) (= x1638 x420) (= x2008 x4160) (<= 0 x4160) (<= x4160 1461501637330902918203684832716283019655932542975) (<= 0 x1125) x2702 (<= x1125 1461501637330902918203684832716283019655932542975) (<= 0 x1638) (= x3022 x450) (not x1491) (= x3725 x420) (>= 1461501637330902918203684832716283019655932542975 x1638) (= x4701 (x1229 (+ (uninterp_mod (x1912 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x689)))) x333) (=> (and x1491 (= x277 true)) x3264))) x577))
(assert (= (ite x674 (x3670 (x1894 x335)) (ite (and (not x4004) x4137 x4909) (x4268 (x1894 x335)) (x3670 (x1894 x335)))) (x1720 (x1894 x335))))
(assert (= (ite (and (not x941) x3980 x542) (x1997 x4340) (x4441 x4340)) (x2477 x4340)))
(assert (x1513 x2878))
(assert (= (=> (and (= (x1319 1461501637330902918203684832716283019655932542975 x3449) x1662) (= x1299 (x1319 1461501637330902918203684832716283019655932542975 x2059)) (= (< 0 x3789) x4964) (= x3789 (x2328 (x1894 x1299))) (= (x1199 x1346) x2059) (= x3449 (x1199 (x4822 56)))) (and (=> (and (not (< x537 x4615)) (> x1729 0) (or (and (not x906) (= x1729 0) (= 0 x406)) (and (= x4755 (> x3871 0)) (= (- (x3519 (x1894 274184521717934524641157099916833587240)) x4615) x4374) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x581 (x1894 274184521717934524641157099916833587240)) x1977)) x859) (= x1977 (ite (= 0 x3871) x4615 0)) (or (not x4755) (and (= (>= (x1532 (x1894 274184521717934524641157099916833587240)) x3603) x2138) x4755 (= (= (x1532 (x1894 x1662)) x1738) x1190) x1190 (= x3603 (x2544 (x1894 274184521717934524641157099916833587240))) x2138 (= x1738 (x2544 (x1894 x1662))) (< x860 4294967296))) x859 (= x406 x860) (= x3717 (- (x2872 (x1894 x1662)) x1977)) x906 (= x940 (< (+ (x752 (x1894 x1662)) x4615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x4267 (x1229 (+ (uninterp_mod (x752 (x1894 x1662)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4615))) (= x1729 x3871) x940 (= (x1229 (+ x1977 (uninterp_mod (x581 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1408))) (or (and x758 (= x1551 x2628)) (and (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1187) x4117) (= x1551 x3588) (not x758) (= x3588 (x1229 (+ x2628 x4117))) (= (x1229 (+ x406 63)) x1187))) (= (x3519 (x1894 274184521717934524641157099916833587240)) x537) (= x1316 (x3519 (x1894 x1662))) (= x1551 x4633) (not x4964) (= (and (<= x4615 x2889) (< (+ x1316 x4615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x906) (= (x3519 (x1894 274184521717934524641157099916833587240)) x2889) (= x758 (= 0 x406))) x4656) (=> (and (= x4902 x115) (= x4205 (x1229 (+ x4902 128))) (= (< 0 x897) x3943) (= x766 (x4575 (- x3663 32))) (= x1341 (x1229 (+ x1170 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= (x4575 (- x3456 x2628)) x3663) (= (x1229 (+ 32 x2628)) x1803) (= (x1229 (+ x2628 36)) x4902) (= (x1229 (+ x115 32)) x483) (= (x1229 (+ x2628 100)) x3456) (= x2789 0) (= (x3423 x1803) x3063) x952 (= x722 (< x897 x1379)) (= (> x1035 0) x952) (= x1170 (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x3063)) (= x1035 (x2328 (x1894 x1299))) (= x897 (x2947 x2628)) x4964 (or (and (not x3943) (= 0 x1379)) (and (= (x3130 x4285) x4574) (= x4285 x1803) x3943 (= x146 x4205) (or (and x75 (= x4021 (x1229 (+ 64 x2628))) (= (x1229 (+ x3456 96)) x3722) (= (x3130 x4021) x1726) (or (and (= x1379 64) (not x3560)) (and (= (x1229 (+ x2628 96)) x4956) (= x1296 (x1229 (+ x3456 128))) (= x272 (x3130 x4956)) (= (< 96 x897) x4646) (or (and (= x3753 (> x897 128)) (= x2905 (x1229 (+ x3456 160))) (= (x1229 (+ 128 x2628)) x650) (= 128 x1379) x4646 (not x3753) (= x414 (x3130 x650))) (and (= 96 x1379) (not x4646))) x3560)) (= (< 64 x897) x3560)) (and (not x75) (= 32 x1379))) (= x75 (< 32 x897)))) (or (and (= (x1229 (+ x897 x4205)) x1244) x722) (not x722))) x2032))) x4475))
(assert (x778 x2796 x4652 x666 x3995))
(assert (=> (< (- x3441 1) 10000) (= (x4822 x3441) (x1894 x3441))))
(assert (= (ite x3925 (ite x1906 (x1898 (x1894 x847)) (x1083 (x1894 x847))) (x47 (x1894 x847))) (x1451 (x1894 x847))))
(assert (= (x4763 x851) (ite (= x319 x851) x3760 (x4505 x851))))
(assert (= 0 (x4563 x4021)))
(assert (x1513 x3654))
(assert (x3166 x112))
(assert (= 1461501637330902918203684832716283019655932542975 (x2856 (x4822 1461501637330902918203684832716283019655932542975))))
(assert (x1513 x3502))
(assert (x1513 x924))
(assert (x1513 x3099))
(assert (= (x2856 (x1894 x505)) x505))
(assert (x1513 x4378))
(assert (= (x2657 x2022) (ite (= x755 x2022) x2812 (x520 x2022))))
(assert (x1513 x4543))
(assert (x1513 x2698))
(assert (= (x102 x2375) (ite x3925 (ite x1906 (x3244 x2375) (x3126 x2375)) (x3171 x2375))))
(assert (= (x3604 x2700) (ite (= x2241 x2700) x844 (x1852 x2700))))
(assert (x1513 x3553))
(assert (= (x1720 (x1894 x3441)) (ite x674 (x3670 (x1894 x3441)) (ite (and (not x4004) x4909 x4137) (x4268 (x1894 x3441)) (x3670 (x1894 x3441))))))
(assert (x3166 x353))
(assert (= (ite (= x1733 x4679) x1441 (x1377 x1733)) (x1939 x1733)))
(assert (x1513 x3639))
(assert (= (and x4614 (not x3447)) x4818))
(assert (x2417 274184521717934524641157099916833587202))
(assert (x1513 x4651))
(assert (= (x1939 x4199) (ite (= x4199 x4679) x1441 (x1377 x4199))))
(assert (= (and x1052 x1049) x4933))
(assert (x1513 x1655))
(assert (= (x3572 192) 0))
(assert (= (and x3682 x120) x2436))
(assert (x1513 x1264))
(assert (x1513 x2835))
(assert (= (and x536 x667) x1363))
(assert (x3166 x4212))
(assert (x1513 x2286))
(assert (x1513 x2378))
(assert (= (ite x4806 (x1414 x1111) (ite (and x1313 x2519 (not x2648)) (x2080 x1111) (x1414 x1111))) (x99 x1111)))
(assert (x1513 x3500))
(assert (x1513 x1455))
(assert (x1513 x1440))
(assert (x1513 x4007))
(assert (= x2940 (=> (= x2628 x3053) x4475)))
(assert (x1513 x4519))
(assert (x1513 x4336))
(assert (= (x1939 x694) (ite (= x4679 x694) x1441 (x1377 x694))))
(assert (= (and x1363 x1596) x2713))
(assert (x1513 x233))
(assert (= 2311529814 (x2856 (x4822 2311529814))))
(assert (= (and (not x2435) x1066) x2991))
(assert (x1513 x4093))
(assert (x3166 x512))
(assert (= x1049 (and x428 (not x1078))))
(assert (= x4106 (=> (and (= x4890 (x4575 (- x2318 x968))) (= (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x693)) x4202) (= x114 (> x4890 x4202))) (and (=> (not x114) x763) (=> x114 x2460)))))
(assert (x3166 x225))
(assert (x1513 x2470))
(assert (= (x675 x127) (ite (= x127 x2676) x4949 (x2471 x127))))
(assert (= (and x1661 x3140) x366))
(assert (x1513 x2828))
(assert (x1513 x2115))
(assert (x2349 x712 x900))
(assert (= (x201 x1932) (ite (= x1932 x2218) x4322 (x1377 x1932))))
(assert (x1513 x4802))
(assert (= (ite x2139 (ite (and x4337 x526) (x24 x4248) (x3846 x4248)) (ite (and x865 x4586 (not x3527)) (x64 x4248) (x3846 x4248))) (x208 x4248)))
(assert (= x2767 (=> (and (= (x2328 (x1894 x2419)) x967) (= x3109 (< 0 x967))) (and (=> (and (= (x853 (x1894 274184521717934524641157099916833587240)) x2497) (= 128 x4145) (not x3109) (= x2497 x876)) x398) (=> x3109 x3334)))))
(assert (= (and (not x4930) x1046) x1771))
(assert (= (x1939 x4030) (ite (= x4030 x4679) x1441 (x1377 x4030))))
(assert (= x834 (and (not x1175) x565)))
(assert (= (=> (= x3646 (= 274184521717934524641157099916833587202 x3964)) (and (=> x3646 x3088) (=> (not x3646) x4854))) x4839))
(assert (= (ite x3925 (ite x1906 (x2602 x2250) (x1939 x2250)) (x1939 x2250)) (x1983 x2250)))
(assert (x1513 x4338))
(assert (x1513 x2135))
(assert (= (x1894 4294967296) (x4822 4294967296)))
(assert (x1513 x2240))
(assert (x1513 x4900))
(assert (x1513 x3810))
(assert (x1513 x3217))
(assert (x1513 x1779))
(assert (=> (> (+ 10000 1) x3800) (= (x1894 x3800) (x4822 x3800))))
(assert (= (x4822 1461501637330902918203684832716283019655932542976) (x1894 1461501637330902918203684832716283019655932542976)))
(assert (x1513 x1255))
(assert (= (x1983 x4178) (ite x3925 (ite x1906 (x2602 x4178) (x1939 x4178)) (x1939 x4178))))
(assert (= (x4784 x936) (ite x4806 (x4828 x936) (ite (and (not x2648) x1313 x2519) (x2505 x936) (x4828 x936)))))
(assert (= (=> (and (= x4341 (x1319 1461501637330902918203684832716283019655932542975 x2008)) (= x4443 (x1229 (+ x2458 16156842317565293874272834530371880720966471053262404558597773956279093428224))) (= x894 274184521717934524641157099916833587240) (= (> x4260 0) x2891) (= (x2328 (x1894 x3907)) x4260) (= x4430 128) (= x2438 260) (= x2458 (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x225)) (= x225 (x4149 160)) (= x873 0) (= 274184521717934524641157099916833587240 x1306)) (and (=> (not x2891) x2460) (=> (and (= x4092 (< 0 x563)) (= x563 (x4456 128)) (or (and (not x4092) (= 0 x3597)) (and (or (and (or (and (= x3597 64) (not x4657)) (and (= (< 96 x563) x1626) (= (x1671 224) x4729) x4657 (or (and (= (x1671 256) x2882) (not x832) x1626 (= 128 x3597) (= x832 (< 128 x563))) (and (not x1626) (= x3597 96))))) (= (x1671 192) x920) (= x4657 (< 64 x563)) x4259) (and (not x4259) (= x3597 32))) (= (x1671 160) x4006) (= (> x563 32) x4259) x4092)) (= x413 (> x3597 x563)) x2891 (or (and (= (x1229 (+ x563 324)) x3579) x413) (not x413))) x645))) x98))
(assert (x1513 x2799))
(assert (= (x3846 x3983) (ite x674 (ite (and x4128 x4346) (x4568 x3983) (ite (and x355 x2985) (x4090 x3983) (x4568 x3983))) (ite (and x4137 x4909 (not x4004)) (x3698 x3983) (x4568 x3983)))))
(assert (= (and (not x4404) x3195) x4643))
(assert (x3166 x545))
(assert (= x410 (x2856 (x1894 x410))))
(assert (x2417 x1662))
(assert (x1513 x3101))
(assert (= (ite (= x1549 x2241) x844 (x1852 x1549)) (x3604 x1549)))
(assert (x1513 x969))
(assert (x1513 x3119))
(assert (= (x3155 160) 0))
(assert (= (ite x1846 (ite x4600 (x534 x3644) (x201 x3644)) (x201 x3644)) (x1199 x3644)))
(assert (= (=> (and (= x336 (= x3907 274184521717934524641157099916833587240)) (= x4480 (x1582 (x1894 274184521717934524641157099916833587240))) (= x2279 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1539 (x1894 x3907)))) x2279 (= x1868 (x1539 (x1894 x3907)))) (and (=> x336 x4026) (=> (not x336) x3811))) x3391))
(assert (= (ite (= x4478 x4178) x2443 (x1267 x4478)) (x15 x4478)))
(assert (= (or (and x1858 x4203) (and x619 x4576) (and x3507 x1228)) x1002))
(assert (x1513 x1897))
(assert (x1513 x4082))
(assert (x1513 x2558))
(assert (= (x2471 x2843) (ite x4941 (ite (and x4941 (not x2275)) (x1003 x2843) (x539 x2843)) (x3126 x2843))))
(assert (=> (> (+ 10000 1) x2620) (= (x4822 x2620) (x1894 x2620))))
(assert (x1513 x2518))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2856 (x4822 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= (x2523 x851) (ite (= x1136 x851) x4240 (x2293 x851))))
(assert (= (x4822 65535) (x1894 65535)))
(assert (x4187 x4585 x1021))
(assert (= (+ 5 (x2856 x4255)) (x2856 (x2808 x4255 5))))
(assert (= x4594 (=> (and (= x40 (= 0 x2627)) (= x1466 x2156) (= (x1267 x1746) x1478) (= x2252 (x3604 x411)) (= 0 x458) (= (x1319 1461501637330902918203684832716283019655932542975 x1478) x2627) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2252) x1466) (= x1746 (x4101 (x1894 x2213) (x4822 208) 0)) (= x411 (x4101 (x1894 x2213) (x4822 210) 0))) (and (=> (not x40) x3112) (=> x40 x2971)))))
(assert (= (x1451 (x1894 x2482)) (ite x3925 (ite x1906 (x1898 (x1894 x2482)) (x1083 (x1894 x2482))) (x47 (x1894 x2482)))))
(assert (x4612 x4212 x2424 x4012 x4176))
(assert (x1513 x1408))
(assert (x1513 x338))
(assert (x1513 x25))
(assert (x1513 x303))
(assert (x1513 x580))
(assert (= (x208 x3983) (ite x2139 (ite (and x4337 x526) (x24 x3983) (x3846 x3983)) (ite (and x4586 x865 (not x3527)) (x64 x3983) (x3846 x3983)))))
(assert (= x2573 (=> (and (= (x2328 (x1894 x4133)) x2640) (= x3322 (x1229 (+ x2666 64))) (= x2378 (x1319 1461501637330902918203684832716283019655932542975 x2008)) (= (= x4133 274184521717934524641157099916833587240) x2404) (= x4834 (x1229 (+ 4 x2626))) (= x4834 x2666) (= 274184521717934524641157099916833587240 x2579) (= (x1229 (+ x2626 100)) x2935) (= (x4575 (- x2935 x2626)) x4605) (not (= 0 x2640)) (= x3703 (x1229 (+ x2666 32)))) (and (=> (not x2404) x2705) (=> (and (not x4165) (= (x4162 x3052) x3897) (= (x234 x2639) x3026) (= 0 x4794) (= x1599 (x4101 (x1894 x621) (x4822 208) 0)) (= x200 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< 0 x2983) (= x3836 (x1229 (+ x3203 1))) (= x2746 (x4101 (x1894 x1365) (x4822 209) 0)) (= x2280 (x1199 x1506)) (= (x1319 1461501637330902918203684832716283019655932542975 x2518) x252) (= x3203 (x1641 x2746)) (= x4526 (not (= x462 0))) (not x4786) (= x1932 (x4101 (x1894 x621) (x4822 208) 0)) (< x3608 2311529814) (= (x1199 x1932) x2518) (= (x4101 (x1894 x621) (x4822 210) 0) x298) (= (< x3897 1) x307) (= x2755 (x1319 1461501637330902918203684832716283019655932542975 x2280)) (= 100 x1371) (= (x4575 (- x3897 1)) x676) x2404 (< x3608 1166402363) (= (or (> x4345 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4345 96) (= (<= x4345 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2995) (= x4345 (x4575 (- x1371 4))) (= x948 (= 0 x2755)) (= x1506 (x4101 (x1894 x621) (x4822 208) 0)) (not x948) (= x3214 (= x252 0)) (= x1365 x1254) (= x1087 274184521717934524641157099916833587240) x4526 (= x3207 (x4101 (x1894 x621) (x4822 208) 0)) (= (= 0 x1254) x4165) (= 274184521717934524641157099916833587240 x4468) (not x3214) (not x307) (= x3052 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0)) (= x3654 (x1229 (+ x3222 x3733))) (= x4420 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3502)) (= (= x1557 0) x1597) (= x621 x16) (= x3733 x1365) (<= x1365 1461501637330902918203684832716283019655932542975) (= x3608 599290589) (not (< x3608 455944412)) (not (= x3608 455944412)) (= (x1199 x3207) x3807) (not x1597) (= x1371 x4605) (= x2281 x4420) (= x4629 1) (= (x4101 (x1894 x621) (x4822 208) 0) x2639) (= 274184521717934524641157099916833587240 x252) (= (= 274184521717934524641157099916833587240 x2755) x1663) (not x2995) (not (< x1371 4)) (= x3502 (x1199 x298)) (not (= 511946350 x3608)) (= x1365 x2378) (= (x2328 (x1894 274184521717934524641157099916833587240)) x2983) (= x621 x2771) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3026) x3222) (> x4716 0) (= (x1319 1461501637330902918203684832716283019655932542975 x3807) x462) (= (x4162 x1599) x195) (or (and (or (and (= x378 (x4101 (x1894 x2755) (x4822 211) 0)) (= (x1319 255 x4862) x4779) (not x4859) (= x4779 x4716) (= (x1199 x227) x4862) (= (x4101 (x1894 274184521717934524641157099916833587240) x378 0) x227)) (and x4859 (= x4716 (ite x4859 1 0)))) (not x1663) (= (x1319 1461501637330902918203684832716283019655932542975 x4559) x4551) x1979 (= x87 (x4101 (x1894 x621) (x4822 208) 0)) (= x4559 (x1199 x87)) (= (= x4139 274184521717934524641157099916833587240) x4859) (= (x4101 (x1894 x621) (x4822 210) 0) x3385) (= x4139 (x1319 1461501637330902918203684832716283019655932542975 x1453)) (= x1979 (not (= 0 x4551))) (= x1453 (x1199 x3385))) (and (= (ite x1663 1 0) x4716) x1663)) (= (> x3203 115792089237316195423570985008687907853269984665640564039457584007913129639934) x4786) (= x1557 (x1319 1461501637330902918203684832716283019655932542975 x195))) x2054)))))
(assert (= (x2856 (x1894 x2287)) x2287))
(assert (x4612 x1187 x4414 x1624 x3085))
(assert (x1513 x4878))
(assert (x1513 x2318))
(assert (x2349 x195 x3313))
(assert (= (x3031 x4207) (ite x3426 (ite (and x1308 x4516) (x386 x4207) (x3661 x4207)) (ite (and (not x4964) x906 x2645) (x4150 x4207) (x3661 x4207)))))
(assert (= (x4563 x650) 0))
(assert (= (+ (x2856 x116) 4) (x2856 (x2808 x116 4))))
(assert (x2072 x2430 x2993))
(assert (= (ite (= x3175 x261) x1689 (x709 x3175)) (x76 x3175)))
(assert (= true x1419))
(assert (x1513 x4309))
(assert (= x141 (and x4449 x3408)))
(assert (= (x572 x851) (ite x4806 (ite (and x238 x641) (x102 x851) (x4644 x851)) (ite (and (not x2648) x1313 x2519) (x4924 x851) (x102 x851)))))
(assert (= (x1325 x2022) (ite (= x2022 x790) x35 (x2657 x2022))))
(assert (= (and x1218 (not x2208)) x649))
(assert (x1513 x3855))
(assert (= (ite x1846 (ite x4600 (x534 x1506) (x201 x1506)) (x201 x1506)) (x1199 x1506)))
(assert (= (=> (and (= x1304 (x1319 1461501637330902918203684832716283019655932542975 x2232)) (= 274184521717934524641157099916833587240 x2813) (= x505 x1691) (= x1596 (not (= 0 x1304))) (= x1759 (x4101 (x1894 x505) (x4822 208) 0)) (= (x3566 x1759) x2232)) (and (=> x1596 x4471) (=> (not x1596) x1272))) x222))
(assert (x1513 x1193))
(assert (x1513 x801))
(assert (= (x4246 x2022) (ite (= x1971 x2022) x2478 (x2174 x2022))))
(assert (x1513 x492))
(assert (x1513 x3182))
(assert (x1513 x1149))
(assert (= (ite (= x4178 x1361) x2443 (x1267 x1361)) (x15 x1361)))
(assert (x1513 x1943))
(assert (x1513 x4468))
(assert (= x3245 (and x3401 x59)))
(assert (= (and x3512 (not x2340)) x1448))
(assert (= (=> (and (= x4310 x2299) (= x2774 x4297)) x262) x2171))
(assert (= 115792089237316195423570985007226406215939081747436879206741300988257197096960 (x2856 (x4822 115792089237316195423570985007226406215939081747436879206741300988257197096960))))
(assert (x1513 x4765))
(assert (x1513 x738))
(assert (x1513 x2839))
(assert (x1513 x3449))
(assert (x1513 x4700))
(assert (= (=> (= (= 274184521717934524641157099916833587240 x3907) x4757) (and (=> (not x4757) x2760) (=> (and (= x4099 (x4575 (- x841 4))) (> 2311529814 x1469) (not (< x841 4)) (= x841 x4990) (not (< x1469 1166402363)) (= (or (and (< x4099 32) (= true (<= x4099 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4099)) x2195) (not (= 1722255204 x1469)) x4757 (> x1048 0) (not (= 1858285468 x1469)) (= x1469 1889567281) (= (x2328 (x1894 274184521717934524641157099916833587240)) x1048) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3370) (or (and (= x838 (x3604 x1744)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0) x1744) (= 1 x1622) (= 32 x1055) (= x3708 274184521717934524641157099916833587240) (not x2195)) (and (= x4809 x1055) (= x1622 0) x2195)) (not (= x1469 1845821197)) (= x841 36) (not (< x1469 1722255204))) x631))) x4353))
(assert (= (and x791 (not x2442)) x3467))
(assert (x1513 x181))
(assert (x2349 x3893 x4307))
(assert (x1513 x3503))
(assert (x1513 x3558))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x1081) x721) (and (=> (not x721) x361) (=> (and (= x979 (or (> x3500 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3500 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3500))))) (= x2264 (x1625 x1797)) (= x3657 (x2328 (x1894 274184521717934524641157099916833587206))) (<= 0 x2264) (= 1889567281 x3691) (not x979) (= x340 36) x721 (= 32 x4394) (= x1797 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x44 1) (not (= 826074471 x3691)) (< 0 x3657) (<= x2264 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 826074471 x3691)) (= x4557 274184521717934524641157099916833587240) (not (< x340 4)) (= 36 x340) (= (x4575 (- x340 4)) x3500) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x267)) x805))) x1531))
(assert (= x4019 (or x4399 x3306 x4451)))
(assert (x1513 x43))
(assert (x1513 x824))
(assert (= x1773 (=> (= x2285 x277) x3264)))
(assert (= (and x4496 (not x2895)) x3079))
(assert (x1513 x1298))
(assert (= (=> (and (not (= 0 x2636)) (= x303 x3219) (= (x1983 x773) x3343) (= (x1229 (+ x3823 4)) x303) (= 274184521717934524641157099916833587240 x2506) (= (> x165 0) x2221) (= (x2328 (x1894 x3473)) x2636) (= x4256 (x2808 x3417 1)) (= x3417 x773) (= (x1983 x1041) x2510) (= x3473 (x1319 1461501637330902918203684832716283019655932542975 x2510)) (= x1350 (x1983 x4256)) (or (and (= x1406 x165) (not x2221)) (and x2221 (= x1406 1) (< x3683 4294967296)))) x4733) x1090))
(assert (x1513 x4272))
(assert (x1513 x2059))
(assert (x2417 x995))
(assert (= (x201 x379) (ite (= x379 x2218) x4322 (x1377 x379))))
(assert (x1513 x4066))
(assert (x1513 x417))
(assert (= (ite (= x4766 388) x3074 (x4054 x4766)) (x3117 x4766)))
(assert (= x453 (=> (= x1851 (> x2954 0)) (and (=> (and x1851 (= x2660 x4375)) x3735) (=> (not x1851) x2460)))))
(assert (= (x2856 (x1894 x3473)) x3473))
(assert (= (x1451 (x1894 x335)) (ite x3925 (ite x1906 (x1898 (x1894 x335)) (x1083 (x1894 x335))) (x47 (x1894 x335)))))
(assert (x1513 x41))
(assert (x1513 x2772))
(assert (x3166 x3728))
(assert (x1513 x3804))
(assert (= (or x4847 (and x3147 x2160)) x3512))
(assert (x1513 x1172))
(assert (= (x1003 x3857) (ite x2139 (ite (and x4337 x526) (x4306 x3857) (x3486 x3857)) (ite (and x4586 (not x3527) x865) (x3587 x3857) (x4306 x3857)))))
(assert (= (x1267 x4478) (ite (= x411 x4478) x2156 (x3604 x4478))))
(assert (= (x2856 (x1894 x4195)) x4195))
(assert (= 0 (x3155 224)))
(assert (x1513 x1924))
(assert (= (ite (= x275 x1328) x4403 (x2413 x1328)) (x2007 x1328)))
(assert (x934 x4778 x3029))
(assert (x1513 x1956))
(assert (= x3533 (and (not x3567) x374)))
(assert (x1513 x2827))
(assert (= (ite (= x573 x3468) 274184521717934524641157099916833587240 (x2342 x3468)) (x1512 x3468)))
(assert (x1513 x1751))
(assert (= 274184521717934524641157099916833587206 (x2856 (x1894 274184521717934524641157099916833587206))))
(assert (x1513 x1589))
(assert (x1513 x4688))
(assert (= x944 (=> (and (= x3134 274184521717934524641157099916833587240) (= x2109 (x1229 (+ x2810 100))) (= (x1229 (+ x3664 64)) x1753) (= (= x3473 274184521717934524641157099916833587240) x4346) (= (x2328 (x1894 x3473)) x2145) (= x4965 (x1229 (+ x3664 32))) (= x3651 (x1229 (+ x2810 4))) (not (= 0 x2145)) (= x3664 x3651) (= x4379 (x4575 (- x2109 x2810))) (= x3635 (x1319 1461501637330902918203684832716283019655932542975 x2747))) (and (=> (not x4346) x397) (=> (and (not x4958) (= (x1229 (+ 1 x1779)) x1675) (= x720 274184521717934524641157099916833587240) (= 0 x2712) (= x3635 x3475) (= x3403 (x4101 (x1894 x368) (x4822 210) 0)) (< x2878 2311529814) (= 599290589 x2878) (= x2553 (< x4119 1)) (= (x4101 (x1894 x368) (x4822 208) 0) x4223) (= x226 100) (not x1929) (= x1559 (x1147 x1459)) (= (= x2698 0) x4958) (= (x1319 1461501637330902918203684832716283019655932542975 x1559) x2698) (not (< x226 4)) (not (< x2878 455944412)) (= x2830 x368) (< 0 x2024) (= x4384 (x4101 (x1894 x368) (x4822 208) 0)) (not x4065) (= x2024 (x2328 (x1894 274184521717934524641157099916833587240))) (= x2941 (x4101 (x1894 x3475) (x4822 209) 0)) (= (= 0 x434) x4357) (= x3343 x368) (= x652 (not (= x300 0))) (= 274184521717934524641157099916833587240 x434) (not (= x2878 511946350)) (= (x4101 (x1894 x368) (x4822 208) 0) x4208) (= x2111 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0)) x652 (= x434 (x1319 1461501637330902918203684832716283019655932542975 x112)) (= (= x1914 0) x4065) (> 1166402363 x2878) (= 274184521717934524641157099916833587240 x1732) (= x2796 (x1983 x3403)) x4346 (>= 1461501637330902918203684832716283019655932542975 x3475) (= x3838 (x1983 x4832)) (= x4332 x3475) (not x4357) (= x4639 (= x1914 274184521717934524641157099916833587240)) (= x3475 x1437) (= (> x1779 115792089237316195423570985008687907853269984665640564039457584007913129639934) x514) (not x507) (= 1 x470) (not x514) (> x2562 0) (= x1452 (x4575 (- x4119 1))) (= (x1319 1461501637330902918203684832716283019655932542975 x3838) x300) (= (x2817 x2941) x1779) (or (and (= (= x3559 274184521717934524641157099916833587240) x1098) x3471 (= x3471 (not (= 0 x417))) (= (x4101 (x1894 x368) (x4822 210) 0) x2431) (= (x4101 (x1894 x368) (x4822 208) 0) x4363) (= (x1983 x2431) x3728) (= x417 (x1319 1461501637330902918203684832716283019655932542975 x1086)) (not x4639) (= (x1319 1461501637330902918203684832716283019655932542975 x3728) x3559) (= (x1983 x4363) x1086) (or (and (= (ite x1098 1 0) x2562) x1098) (and (not x1098) (= x2227 (x1319 255 x512)) (= (x4101 (x1894 274184521717934524641157099916833587240) x2352 0) x4986) (= (x4101 (x1894 x1914) (x4822 211) 0) x2352) (= x512 (x1983 x4986)) (= x2227 x2562)))) (and (= (ite x4639 1 0) x2562) x4639)) (= (x1900 x4208) x4360) (= (x1983 x4223) x4084) (not (= 455944412 x2878)) (= x715 x4833) (= x1914 (x1319 1461501637330902918203684832716283019655932542975 x4084)) (= (x1147 x2111) x4119) (= (= x1437 0) x1929) (= x132 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x4360)) (= x3574 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not x2553) (= x2790 (x1229 (+ x4332 x132))) (= x4832 (x4101 (x1894 x368) (x4822 208) 0)) (= x507 (or (and (= (<= x4825 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x4825)) (> x4825 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4379 x226) (= x715 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2796)) (= x4825 (x4575 (- x226 4))) (= x1459 (x4101 (x1894 x368) (x4822 208) 0)) (= (x1983 x4384) x112)) x2606)))))
(assert (x1513 x3430))
(assert (x1513 x3022))
(assert (x1513 x2812))
(assert (x1513 x1466))
(assert (x2143 x3633 x2041))
(assert (= (x4740 x1839) 0))
(assert (= (x1451 (x1894 x4959)) (ite x3925 (ite x1906 (x1898 (x1894 x4959)) (x1083 (x1894 x4959))) (x47 (x1894 x4959)))))
(assert (= x11 x2377))
(assert (= x2915 (=> (and (= x3671 (> x1181 x2689)) (= x1181 (x1319 18446744073709551615 x4585)) (= (x1852 x2241) x4427) (= x4478 (x2808 x4255 5)) (= x844 (x1229 (+ x4409 (uninterp_mod (ite x510 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x4585 (- (/ x3787 1461501637330902918203684832716283019655932542976) (uninterp_frac x3787 1461501637330902918203684832716283019655932542976))) (= (x1319 115792089237316195423570984636004990333889740523700931696805413995650331181055 x4427) x4409) (= x3787 (x3604 x4478)) (= false x510)) (and (=> (not x3671) x2460) (=> x3671 x795)))))
(assert (= (=> (and (= (> x2644 0) x3140) (= x2644 (x2328 (x1894 x3907)))) (and (=> (and (not x3140) (= x3342 x2975) (= x2300 x3913) (= x2300 (x3276 (x1894 274184521717934524641157099916833587240)))) x3422) (=> x3140 x4745))) x2294))
(assert (x1513 x4436))
(assert (x1513 x2644))
(assert (x1513 x4108))
(assert (= (x1983 x1632) (ite x3925 (ite x1906 (x2602 x1632) (x1939 x1632)) (x1939 x1632))))
(assert (x1513 x3194))
(assert (= (x1939 x2241) (ite (= x4679 x2241) x1441 (x1377 x2241))))
(assert (x1513 x4680))
(assert (x2417 x1030))
(assert (x1513 x3184))
(assert (x1513 x896))
(assert (=> (< (- x2287 1) 10000) (= (x1894 x2287) (x4822 x2287))))
(assert (x1513 x297))
(assert (x1513 x4297))
(assert (= (x2856 (x1894 x1365)) x1365))
(assert (x1513 x4129))
(assert (x1513 x1054))
(assert (x3166 x3838))
(assert (x1513 x4928))
(assert (= 0 (x2615 x137)))
(assert (x1513 x3633))
(assert (= (x1939 x216) (ite (= x4679 x216) x1441 (x1377 x216))))
(assert (x1513 x3950))
(assert (= (x709 x159) (ite x4941 (ite (and x4941 (not x2275)) (x208 x159) (x4155 x159)) (x1625 x159))))
(assert (= (x4952 x3965) (ite (= x1039 x3965) x2204 (x3566 x3965))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2856 (x4822 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (x2856 (x1894 x3392)) x3392))
(assert (= 826074471 (x2856 (x4822 826074471))))
(assert (x1513 x313))
(assert (x1513 x2001))
(assert (= (=> (= (= 0 x2874) x3419) (and (=> (not x3419) x2422) (=> x3419 x2460))) x875))
(assert (x3166 x2041))
(assert (= 0 (x136 x4555)))
(assert (x1513 x2044))
(assert (x1513 x2142))
(assert (x1513 x3240))
(assert (x3166 x3605))
(assert (= x3183 (and x526 (not x4337))))
(assert (x2349 x2462 x4856))
(assert (x1513 x3718))
(assert (x3166 x3111))
(assert (= (and x4944 (not x4722)) x3095))
(assert (x1513 x3377))
(assert (x1513 x4078))
(assert (= (x1939 x1282) (ite (= x1282 x4679) x1441 (x1377 x1282))))
(assert (= x2089 (and x3719 (not x2082))))
(assert (= (ite x3925 (ite x1906 (x2602 x4382) (x1939 x4382)) (x1939 x4382)) (x1983 x4382)))
(assert (x1513 x348))
(assert (= (ite x3925 (ite x1906 (x3244 x3669) (x3126 x3669)) (x3171 x3669)) (x102 x3669)))
(assert (x934 x3063 x879))
(assert (= (ite x2139 (ite (and x526 x4337) (x4306 x2843) (x3486 x2843)) (ite (and x865 (not x3527) x4586) (x3587 x2843) (x4306 x2843))) (x1003 x2843)))
(assert (= (x2856 (x1894 x3201)) x3201))
(assert (x1513 x1217))
(assert (x1513 x1292))
(assert (= (ite (and x3767 (not x179)) (x3276 (x1894 274184521717934524641157099916833587240)) (ite x2999 (ite x938 (x977 (x1894 274184521717934524641157099916833587240)) (x1582 (x1894 274184521717934524641157099916833587240))) (x1582 (x1894 274184521717934524641157099916833587240)))) (x269 (x1894 274184521717934524641157099916833587240))))
(assert (x1513 x4578))
(assert (x1513 x372))
(assert (x1513 x733))
(assert (x1513 x1250))
(assert (= x4289 (x2856 (x1894 x4289))))
(assert (x1513 x838))
(assert (= (x1939 x2939) (ite (= x2939 x4679) x1441 (x1377 x2939))))
(assert (= (x130 x4248) (ite x3925 (ite x1906 (x3726 x4248) (x1625 x4248)) (x4435 x4248))))
(assert (x1513 x1710))
(assert (= (x4822 2514000705) (x1894 2514000705)))
(assert (x1513 x4160))
(assert (x1513 x2358))
(assert (= (x201 x1857) (ite (= x1857 x2218) x4322 (x1377 x1857))))
(assert (=> (< (- x3022 1) 10000) (= (x1894 x3022) (x4822 x3022))))
(assert (= (=> (= x1175 (= x1081 274184521717934524641157099916833587206)) (and (=> (and (not (> 4 x2050)) (= x1973 1889567281) x1175 (= x3445 1) (= (x4575 (- x2050 4)) x921) (= x2814 (x4435 x1607)) (> x3920 0) (= x2050 36) (not (> 826074471 x1973)) (= 274184521717934524641157099916833587240 x1180) (= 32 x2725) (= x3641 x2050) (= x4984 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not x4275) (= x4275 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x921)) (< x921 32)) (> x921 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3920 (x2328 (x1894 274184521717934524641157099916833587206))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2814) (<= 0 x2814) (not (= 826074471 x1973)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x1607)) x3489) (=> (not x1175) x1396))) x3628))
(assert (x3166 x206))
(assert (= (x76 x3983) (ite (= x3983 x261) x1689 (x709 x3983))))
(assert (= (x1530 x1328) (ite (and x4964 x2645 (not x722)) (x2981 x1328) (x3747 x1328))))
(assert (= (x1003 x2715) (ite x2139 (ite (and x4337 x526) (x4306 x2715) (x3486 x2715)) (ite (and x865 x4586 (not x3527)) (x3587 x2715) (x4306 x2715)))))
(assert (= (=> (= x1352 (> x3962 x2773)) (and (=> x1352 x92) (=> (not x1352) x2873))) x714))
(assert (= x1571 (=> (= (= 274184521717934524641157099916833587202 x3907) x2728) (and (=> (not x2728) x2933) (=> (and (= x1211 50942633119752846454219349998365661925608737367104304655302372697894809501696) (or (and x4400 (= 0 x1622) (= x4809 x1055)) (and (= 32 x1055) (not x4400) (<= x4824 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587240 x4543) (= (x3282 x1120) x4824) (= 1 x1622) (>= x4824 0) (= x1120 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)))) (= (x4575 (- x602 4)) x3431) (not (> 826074471 x4925)) (= x4925 1889567281) x2728 (not (< x602 4)) (= x602 x4990) (> x2596 0) (= x2596 (x2328 (x1894 274184521717934524641157099916833587202))) (not (= x4925 826074471)) (= x4400 (or (> x3431 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3431 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3431))))) (= x602 36)) x631)))))
(assert (= (ite x2139 (ite (and x4337 x526) (x4306 x1120) (x3486 x1120)) (ite (and x4586 x865 (not x3527)) (x3587 x1120) (x4306 x1120))) (x1003 x1120)))
(assert (x1513 x1276))
(assert (x2417 x1748))
(assert (x1513 x4048))
(assert (= (x4822 1722255204) (x1894 1722255204)))
(assert (= (x1939 x1348) (ite (= x1348 x4679) x1441 (x1377 x1348))))
(assert (= (ite (= x1039 x168) x2204 (x3566 x168)) (x4952 x168)))
(assert (x1513 x4650))
(assert (x1513 x4551))
(assert (= (=> (and (= x4148 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1055) true) (< x1055 32)) (> x1055 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4499) x4953) (= x4499 (x1229 (+ 31 x1055))) (= x2461 (x1229 (+ x2975 x4953)))) (and (=> x4148 x2460) (=> (and (not x4148) (= x3913 x4681) (= x2975 x3959) (= (x1488 x3959) x4681) (= x3342 x2461)) x3422))) x2598))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x1299) x4302) (and (=> (not x4302) x1749) (=> (and (not x3931) (= x995 x1930) (= (x2328 (x1894 274184521717934524641157099916833587202)) x3716) (= (x4575 (- x2625 4)) x992) (not (< x4429 826074471)) (= (x4101 (x1894 x995) (x4822 1) 0) x4072) (<= x1943 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4136 (x4101 (x1894 x995) (x4822 1) 0)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x3736) (= x1369 (x1507 x3736)) (not (> 4 x2625)) (= x4790 (+ x4354 x1913)) (not (= x4429 1889567281)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1369) x4302 (not x2251) (= 274184521717934524641157099916833587240 x2400) (>= 1461501637330902918203684832716283019655932542975 x995) (= x2625 x646) (= (> x3599 x1369) x2251) (= x4846 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1445 1) (= x3599 x4615) (not x3948) (= x995 x1662) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x2071) (= x3599 x4754) (= x1043 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4754 x1943))) (< 0 x3716) (= x4774 x4566) (= x3931 (> x4754 x1369)) (not (= x4429 2514000705)) (>= x1943 0) (not (= x4429 826074471)) (= x4754 x1913) (= x2756 274184521717934524641157099916833587240) (not x1043) (= x4354 x1943) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1943 x4754)) (= x1943 (x2655 x4136)) (<= 0 x1369) (= 68 x2625) (= (x4575 (- x1369 x3599)) x27) (= 32 x3246) (= x4429 2835717307) (= (or (and (> 64 x992) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x992))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x992)) x3948)) x1418))) x1936))
(assert (x1513 x830))
(assert (x1513 x1866))
(assert (= (and x325 (not x901)) x2537))
(assert (x1513 x4063))
(assert (x1513 x133))
(assert (x1513 x766))
(assert (= (x4568 x1484) (ite x4806 (ite (and x641 x238) (x4548 x1484) (x130 x1484)) (ite (and x2519 (not x2648) x1313) (x196 x1484) (x130 x1484)))))
(assert (x1513 x4804))
(assert (x1564 x1399 x1283))
(assert (= x1299 (x2856 (x1894 x1299))))
(assert (x1513 x285))
(assert (x1513 x4570))
(assert (=> (< (- x1236 1) 10000) (= (x4822 x1236) (x1894 x1236))))
(assert (= x3918 (and x2144 x1291)))
(assert (x1513 x188))
(assert (x1513 x957))
(assert (x2349 x1559 x4589))
(assert (x1513 x2401))
(assert (x1513 x1246))
(assert (= (and x1168 x2118) x419))
(assert (x1513 x926))
(assert (= (=> (and (= (x3566 x2250) x351) (= x3513 (x1319 1461501637330902918203684832716283019655932542975 x351)) (= (x4101 (x1894 x505) (x4822 208) 0) x2250) (= (= 0 x3513) x3899)) (and (=> (not x3899) x1606) (=> x3899 x1272))) x1183))
(assert (= x938 (or x2339 x3146 x323)))
(assert (x1513 x2257))
(assert (x2417 x4236))
(assert (x1513 x4902))
(assert (x1513 x3222))
(assert (x1513 x4590))
(assert (= (ite (= (x4822 106) x4679) x1441 (x1377 (x4822 106))) (x1939 (x4822 106))))
(assert (x1513 x3342))
(assert (x1513 x406))
(assert (x2072 x2411 x2901))
(assert (x1513 x3039))
(assert (x1513 x4410))
(assert (x1513 x4676))
(assert (x1513 x3026))
(assert (x1513 x613))
(assert (x1513 x1658))
(assert (x1513 x4044))
(assert (x1513 x3464))
(assert (x1513 x3399))
(assert (x1513 x4665))
(assert (x1513 x384))
(assert (= (x4763 x2715) (ite (= x2715 x319) x3760 (x4505 x2715))))
(assert (= x3094 (and (not x2404) x4549)))
(assert (= (x2856 (x4822 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1513 x463))
(assert (x1513 x2965))
(assert (x2349 x4009 x4560))
(assert (x1513 x1157))
(assert (= x3303 (x2856 (x1894 x3303))))
(assert (= (x572 x3857) (ite x4806 (ite (and x238 x641) (x102 x3857) (x4644 x3857)) (ite (and (not x2648) x1313 x2519) (x4924 x3857) (x102 x3857)))))
(assert (x3166 x3413))
(assert (=> (> (+ 10000 1) x1545) (= (x1894 x1545) (x4822 x1545))))
(assert (= (and x4116 (not x3142)) x565))
(assert (x1513 x219))
(assert (x1513 x3774))
(assert (x1513 x1464))
(assert (x1513 x155))
(assert (x1513 x240))
(assert (x1513 x594))
(assert (x1513 x3219))
(assert (x2417 x3339))
(assert (x1513 x2513))
(assert (= x1692 (=> (and x2069 (or (and (= (x1229 (+ 63 x3517)) x2652) (not x1330) (= x121 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2652)) (= 324 x4775) (= (x1229 (+ 324 x121)) x1284) (= x1284 x639)) (and x1330 (= x639 324) (= x4775 96))) (= x2069 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x4710 (x1894 274184521717934524641157099916833587240)) x998))) (= x3053 x639) (= (x1229 (+ x998 (uninterp_mod (x4710 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x4022) (= (= x3517 0) x1330) (= x998 0) (= (> x1547 0) x4717) (or (not x4717) (and (= (ite x1110 1 0) x3589) (= (x1229 (+ 32 x4775)) x1589) (= (x3910 x4775) x594) (< 0 x3975) (not (or (and (< x594 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x594))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x594))) (= x3589 x3975) x4717 (= (x870 x1589) x3975) (= x1110 (not x4238)) (= x4238 (= 0 x3975)))) (= (- (x3283 (x1894 x2419)) x998) x966) (= (x3910 x4775) x1547) (not (= x2661 0))) x2940)))
(assert (x2349 x2747 x3197))
(assert (x1513 x4056))
(assert (x1513 x745))
(assert (x3166 x1091))
(assert (x1513 x4045))
(assert (x1513 x2667))
(assert (x1513 x4994))
(assert (= (=> (and (= x4440 (< 0 x276)) (= (x157 x4175) x276)) (and (=> (not x4440) x3909) (=> x4440 x1831))) x2216))
(assert (x1513 x1765))
(assert (x1513 x4145))
(assert (x1513 x1379))
(assert (x1513 x2565))
(assert (= (ite x3925 (ite x1906 (x3726 x2022) (x1625 x2022)) (x4435 x2022)) (x130 x2022)))
(assert (= (ite (= x1036 x755) x2812 (x520 x1036)) (x2657 x1036)))
(assert (= (and x3533 (not x3165)) x1194))
(assert (x1513 x2685))
(assert (x1513 x232))
(assert (x1513 x3966))
(assert (= x235 (x2856 (x1894 x235))))
(assert (x1513 x1855))
(assert (=> (> (+ 10000 1) x4789) (= (x4822 x4789) (x1894 x4789))))
(assert (= (and x2073 (not x3707)) x1137))
(assert (= x3132 (=> (and (= x4689 (x4952 x1348)) (= (x4101 (x1894 x505) (x4822 208) 0) x1348) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x4027) x2396) (= x1039 (x4101 (x1894 x505) (x4822 210) 0)) (= x2208 (= 0 x1069)) (= (x3566 x1039) x4027) (= x2204 x2396) (= (x1319 1461501637330902918203684832716283019655932542975 x4689) x1069) (= 0 x166)) (and (=> x2208 x1272) (=> (not x2208) x3721)))))
(assert (= (x2476 (x1894 x4959)) (ite x2139 (x1436 (x1894 x4959)) (ite (and x865 (not x3527) x4586) (x2316 (x1894 x4959)) (x1720 (x1894 x4959))))))
(assert (x1513 x4314))
(assert (x1513 x4793))
(assert (= (ite (= x1136 x2715) x4240 (x2293 x2715)) (x2523 x2715)))
(assert (= (x3846 x1484) (ite x674 (ite (and x4346 x4128) (x4568 x1484) (ite (and x2985 x355) (x4090 x1484) (x4568 x1484))) (ite (and (not x4004) x4909 x4137) (x3698 x1484) (x4568 x1484)))))
(assert (= (x705 x1328) (ite (and x4818 (not x360) x1742 x3898 x4625 x3666) (x4604 x1328) (ite (and x4818 x3666 (not x4625) x1742 x3898) (x4343 x1328) (ite (and (not x3666) x4818 x1742 x3898) (x2020 x1328) (ite (and (not x1742) x3898 x4818) (x1699 x1328) (x1185 x1328)))))))
(assert (x3166 x4695))
(assert (x1513 x3181))
(assert (= x1151 (=> (= x1536 (= x3907 274184521717934524641157099916833587240)) (and (=> (not x1536) x4556) (=> (and (not (= 1858285468 x2257)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2764) (= x2257 1889567281) (not (< x2257 1166402363)) (= 36 x2228) (= x1916 (x4575 (- x2228 4))) (or (and (= x1467 32) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0) x3470) (= 1 x4452) (= x4547 (x3604 x3470)) (= x2045 274184521717934524641157099916833587240) (not x2716)) (and (= x1824 x1467) x2716 (= 0 x4452))) (= x624 (x2328 (x1894 274184521717934524641157099916833587240))) (= (or (> x1916 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1916 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1916 32))) x2716) (not (< x2257 1722255204)) (not (< x2228 4)) (< 0 x624) (not (= x2257 1845821197)) x1536 (= x2228 36) (not (= 1722255204 x2257)) (> 2311529814 x2257)) x2322)))))
(assert (x3166 x486))
(assert (= x3868 (=> (= (= x4609 274184521717934524641157099916833587240) x2271) (and (=> (and x2271 (= (ite x2271 1 0) x4954)) x2820) (=> (not x2271) x2236)))))
(assert (= (ite (= x2690 x4679) x1441 (x1377 x2690)) (x1939 x2690)))
(assert (x1513 x4191))
(assert (= (=> (and (= x3165 (< x1353 x2845)) (= x2845 (x76 x3983)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x3983) (<= 0 x2845) (= (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x980)) x1353) (= x261 (x4101 (x1894 x3067) (x4822 1) 0)) (= 274184521717934524641157099916833587240 x1004) (= x1689 (x4575 (- x2987 x980))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2845)) (and (=> x3165 x1853) (=> (not x3165) x4508))) x1150))
(assert (x2349 x2643 x2429))
(assert (x1513 x3711))
(assert (= x2823 (and x2537 x4885)))
(assert (x1513 x3499))
(assert (x1513 x3220))
(assert (x1513 x2748))
(assert (x1513 x414))
(assert (= (ite x1846 (ite x4600 (x119 x4396) (x3126 x4396)) (x3583 x4396)) (x1507 x4396)))
(assert (= (ite (= x4679 x2392) x1441 (x1377 x2392)) (x1939 x2392)))
(assert (= 2835717307 (x2856 (x4822 2835717307))))
(assert (= (or (and x4454 x1969) (and x4535 x1293) (and x2984 x1825)) x4600))
(assert (x1513 x4566))
(assert (= (=> (and (= x3209 x3963) (= x1819 x4793)) x3404) x4682))
(assert (= (and x141 (not x3659)) x1523))
(assert (x1513 x4947))
(assert (x1513 x4905))
(assert (x1513 x503))
(assert (x1513 x995))
(assert (x1513 x129))
(assert (x1513 x3985))
(assert (= (ite x1846 (ite x4600 (x3910 x402) (x4740 x402)) (x4740 x402)) (x354 x402)))
(assert (= (and x373 x2543) x3335))
(assert (x1513 x4005))
(assert (x2417 x2287))
(assert (= (x2174 x2022) (ite (and (not x179) x3767) (x500 x2022) (ite x2999 (ite x938 (x4870 x2022) (x709 x2022)) (x709 x2022)))))
(assert (= (x3341 x4766) (ite (= x4766 132) 274184521717934524641157099916833587240 (x140 x4766))))
(assert (x1513 x4960))
(assert (x1513 x2288))
(assert (= x4233 (=> (and (= x798 274184521717934524641157099916833587240) (= x159 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= (x2174 x159) x4830) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4830) (= x3993 (> x968 x4830)) (= x1337 x2201) (<= 0 x4830)) (and (=> (not x3993) x3493) (=> x3993 x3249)))))
(assert (x1513 x2092))
(assert (x1513 x4735))
(assert (= (=> (= (= x3964 274184521717934524641157099916833587206) x59) (and (=> x59 x2386) (=> (not x59) x4839))) x4085))
(assert (= (ite (= x4679 x1361) x1441 (x1377 x1361)) (x1939 x1361)))
(assert (=> (< (- x1914 1) 10000) (= (x1894 x1914) (x4822 x1914))))
(assert (x1513 x2491))
(assert (x3166 1461501637330902918203684832716283019655932542975))
(assert (=> (> (+ 10000 1) x1365) (= (x1894 x1365) (x4822 x1365))))
(assert (x1513 x1680))
(assert (=> (> (+ 10000 1) x2034) (= (x4822 x2034) (x1894 x2034))))
(assert (x1513 x4434))
(assert (= 0 (x4563 x4285)))
(assert (x1513 x2229))
(assert (= (x1939 x4220) (ite (= x4220 x4679) x1441 (x1377 x4220))))
(assert (= (+ 2 (x2856 x116)) (x2856 (x2808 x116 2))))
(assert (= (ite x4806 (ite (and x238 x641) (x102 x2563) (x4644 x2563)) (ite (and (not x2648) x2519 x1313) (x4924 x2563) (x102 x2563))) (x572 x2563)))
(assert (= (x1199 x1346) (ite x1846 (ite x4600 (x534 x1346) (x201 x1346)) (x201 x1346))))
(assert (x1513 x4033))
(assert (= (x4822 98474297345890754025501882143967591664980152141971839855651084132735363579904) (x1894 98474297345890754025501882143967591664980152141971839855651084132735363579904)))
(assert (= (x3566 x1549) (ite (and x3767 (not x179)) (x3604 x1549) (ite x2999 (ite x938 (x1570 x1549) (x3604 x1549)) (x3604 x1549)))))
(assert (= (x1894 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x4822 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x1513 x2145))
(assert (x1513 x2382))
(assert (x1513 x476))
(assert (x1513 x4677))
(assert (x1513 x3410))
(assert (= (x3572 256) 0))
(assert (= x1288 (=> (= x4736 (= x3473 274184521717934524641157099916833587202)) (and (=> (not x4736) x2074) (=> (and (> x3373 0) (= (x4101 (x1894 274184521717934524641157099916833587240) x3106 0) x1895) (= x801 274184521717934524641157099916833587240) (not x1401) (not x1434) (= x3635 x3718) (= (> x293 x3119) x26) x4736 (<= 0 x833) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 2) 0) x3106) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x3630) (= (>= (+ x2673 x293) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1434) (> 826074471 x4994) (= x1921 (+ x3900 x2907)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 2) 0) x1942) (= x2673 (x2701 x4141)) (= x2291 (< x833 x2268)) (<= x3119 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3340 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x4379 x1300) (= 100 x1300) (= (x4101 (x1894 274184521717934524641157099916833587240) x1942 0) x936) (= x1401 (or (> x4955 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x4955) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4955) true)))) (= 274184521717934524641157099916833587240 x3032) (= x4955 (x4575 (- x1300 4))) (not x4511) (not x26) (= x293 x2268) (not x2291) (<= x833 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3186 x3718) (>= 1461501637330902918203684832716283019655932542975 x3718) (= 274184521717934524641157099916833587240 x1374) (= x3900 x293) (<= 0 x2673) (= 599290589 x4994) (= x470 1) (not x3326) (not (= 117300739 x4994)) (= x344 274184521717934524641157099916833587240) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2135) (= 274184521717934524641157099916833587240 x2277) (= (x4575 (- x833 x2268)) x4804) (= x2907 x2673) (= x1222 x1747) (= x1246 274184521717934524641157099916833587240) (<= 0 x3119) (= x3119 (x4784 x936)) (= (x4575 (- x3119 x2268)) x740) (not (= 157198259 x4994)) (= (< x833 x293) x4511) (= x3343 x2268) (= (x4101 (x1894 x3718) (x4822 1) 0) x4141) (<= x2673 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 404098525 x4994)) (= x3373 (x2328 (x1894 274184521717934524641157099916833587202))) (= (< x3119 x293) x3326) (= (x572 x3340) x833) (not (> 4 x1300)) (= x2379 (x4101 (x1894 x3718) (x4822 1) 0)) (< (+ x293 x2673) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2606)))))
(assert (x1513 x3834))
(assert (= (or x3368 (and (not x1528) x2742)) x11))
(assert (= (ite (and (not x179) x3767) (x3604 x2883) (ite x2999 (ite x938 (x1570 x2883) (x3604 x2883)) (x3604 x2883))) (x3566 x2883)))
(assert (= (x4822 404098525) (x1894 404098525)))
(assert (x1513 x2493))
(assert (x4187 x3956 x3790))
(assert (x1513 x4123))
(assert (x1513 x3459))
(assert (x778 x4142 x3856 x4699 x1331))
(assert (= x4439 (and x1961 (not x3776))))
(assert (x1513 x4490))
(assert (x1513 x4015))
(assert (x1513 x1359))
(assert (= (x3604 x694) (ite (= x2241 x694) x844 (x1852 x694))))
(assert (x1513 x1336))
(assert (x3166 x2010))
(assert (= (=> (and x1312 (= x1265 x1684) (= x3178 (x1451 (x1894 274184521717934524641157099916833587240))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1158) x1312) (= (x1451 (x1894 x1092)) x1158) x1674 (= x641 (= 274184521717934524641157099916833587206 x1092)) (= x3317 (x3075 (x1894 x1092))) (= x3102 (>= x4921 0)) (= x4921 (x1451 (x1894 274184521717934524641157099916833587240))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3075 (x1894 x1092))) x1674) x3102) (and (=> (and (= x582 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4073) (and (< x4073 64) (= (<= x4073 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (> x1047 x492) x199) (= x3038 (x2328 (x1894 274184521717934524641157099916833587206))) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x2749) (= x1344 32) (< (+ x1047 x1020) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x783 x1047) (<= 0 x492) (= x1020 (x4425 x327)) (not (= 2514000705 x3025)) (<= x1020 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x850 x524) (= x1751 274184521717934524641157099916833587240) (not (> 826074471 x3025)) (= 274184521717934524641157099916833587240 x928) (= (x4575 (- x3298 4)) x4073) (<= x524 1461501637330902918203684832716283019655932542975) (= (+ x2674 x286) x3888) (= x3298 68) (= x4926 (x4575 (- x492 x783))) (= (x130 x1731) x492) (<= x492 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x524 x1725) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1767) (= (x4101 (x1894 x524) (x4822 1) 0) x4517) x641 (not x2354) (not x199) (= x286 x1047) (= x1684 x3298) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1020 x1047)) x4513) (< 0 x3038) (= x3019 x1400) (= x2354 (< x492 x783)) (= (x4101 (x1894 x524) (x4822 1) 0) x327) (not (= 1889567281 x3025)) (= x1731 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (not (> 4 x3298)) (= 1 x3623) (not (= 826074471 x3025)) (= x783 x3349) (not x582) (= 2835717307 x3025) (not x4513) (>= x1020 0) (= x1020 x2674)) x2929) (=> (not x641) x274))) x3650))
(assert (x1513 x3370))
(assert (x1513 x6))
(assert (x1513 x2592))
(assert (= (x2856 (x1894 274184521717934524641157099916833587202)) 274184521717934524641157099916833587202))
(assert (x2417 x1365))
(assert (x1513 x3277))
(assert (= (x2856 (x1894 x4789)) x4789))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x3392) x4885) (and (=> (not x4885) x2967) (=> x4885 x4130))) x1277))
(assert (x2349 x4730 x3971))
(assert (= (=> (and (not (= 0 x3887)) (= x1193 (x4575 (- x1985 x4145))) (= x2380 x285) (= (= x2419 274184521717934524641157099916833587240) x1706) (= x1985 (x1229 (+ x4145 36))) (= (x2328 (x1894 x2419)) x3887) (= x1210 274184521717934524641157099916833587240) (= (x1229 (+ 4 x4145)) x285)) (and (=> (not x1706) x1280) (=> (and (not (= x1156 1845821197)) (not (> 4 x214)) (= x3648 1) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3891) (and (< x3891 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3891)))) x2409) x1706 (not (< x1156 1722255204)) (= x1193 x214) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1443) (not x2409) (< 0 x3235) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0) x949) (not (= 1858285468 x1156)) (not (= 1722255204 x1156)) (= (x4575 (- x214 4)) x3891) (= x3459 (x201 x949)) (= x919 32) (> 2311529814 x1156) (= 1889567281 x1156) (= (x2328 (x1894 274184521717934524641157099916833587240)) x3235) (not (> 1166402363 x1156)) (= x3556 274184521717934524641157099916833587240) (= x214 36)) x1541))) x670))
(assert (= x1567 (=> (and (not (= x1429 2514000705)) (= x2825 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 826074471 x1429)) (= x968 x1337) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2499) (and (= (<= x2499 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2499 64))) x3250) (= 2835717307 x1429) (= (x4575 (- x3662 4)) x2499) (not (= x1429 1889567281)) (= (x2328 (x1894 274184521717934524641157099916833587206)) x2772) (= x3662 68) (not (> 4 x3662)) (< 0 x2772) (= x1545 x4959) (not (> 826074471 x1429)) (= x4125 x3662)) (and (=> (not x3250) x3509) (=> x3250 x3249)))))
(assert (x1513 x3460))
(assert (= (and (not x4715) x2750) x2061))
(assert (= (and x85 (not x4154)) x3116))
(assert (= (and x550 x1241) x3195))
(assert (x3166 x3720))
(assert (= x163 (and x2552 (not x576))))
(assert (x3166 x338))
(assert (= x3296 (=> (and x2149 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x4157 (x1894 274184521717934524641157099916833587240)) x13)) x2149) (= (x2946 x402) x756) (or (and (> x4074 0) (= (x3927 x939) x4074) (= x3926 (ite x1811 1 0)) (= x2155 (= 0 x4074)) (= x1601 (x2946 x402)) x4992 (= x3926 x4074) (= (not x2155) x1811) (= (x1229 (+ 32 x402)) x939) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1601) (and (< x1601 32) (= (<= x1601 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) (not x4992)) (= x236 (= x1578 0)) (= 0 x13) (or (and (= x2190 x402) (not x236) (= (x1229 (+ 96 x4002)) x1440)) (and x236 (= 96 x402))) (= x3673 (- (x1555 (x1894 x1030)) x13)) (not (= 0 x1636)) (= (x1229 (+ (uninterp_mod (x4157 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x13)) x173) (= x4992 (> x756 0))) x3089)))
(assert (= (=> (and (= x4337 (= x4676 274184521717934524641157099916833587206)) x3478 (= (< (x3541 (x1894 x4676)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3649) (= (< x2166 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3478) (= (<= 0 x2659) x662) (= (x1720 (x1894 274184521717934524641157099916833587240)) x2659) (= (x3541 (x1894 x4676)) x4447) x3649 (= x3381 x4664) (= x2166 (x1720 (x1894 x4676))) (= (x1720 (x1894 274184521717934524641157099916833587240)) x719) x662) (and (=> (not x4337) x2123) (=> (and (= x4670 (x2328 (x1894 274184521717934524641157099916833587206))) (= x969 x2791) (<= x2360 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x3184 2514000705)) (not (> 826074471 x3184)) (= x429 x3860) (= 2835717307 x3184) (= (> x3860 x2360) x1945) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x969) (= x3701 x2620) (not x2276) (= x4045 274184521717934524641157099916833587240) (= 1 x2015) (< (+ x362 x969) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< x1482 4)) (= x362 x3860) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x2816) (= x2168 x362) (>= x2360 0) (= (< x2360 x362) x2276) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x2944) (not (= 1889567281 x3184)) (= x4664 x1482) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x818) (and (> 64 x818) (= (<= x818 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1668) (= x2620 x2482) (= (x4086 x1500) x969) (<= x2620 1461501637330902918203684832716283019655932542975) (not x1668) (= x818 (x4575 (- x1482 4))) (= (x3846 x2944) x2360) (= 68 x1482) (not x1945) (<= 0 x969) (< 0 x4670) (= x4050 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1500 (x4101 (x1894 x2620) (x4822 1) 0)) (= x1611 (>= (+ x362 x969) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4337 (= 32 x2703) (not x1611) (= x415 (+ x2791 x2168)) (= 274184521717934524641157099916833587240 x3395) (= (x4575 (- x2360 x3860)) x4721) (= x223 (x4101 (x1894 x2620) (x4822 1) 0)) (not (= 826074471 x3184))) x1119))) x4247))
(assert (x1513 x2643))
(assert (x1513 x4711))
(assert (x3166 x3421))
(assert (x3166 x4963))
(assert (= (x4568 x3983) (ite x4806 (ite (and x238 x641) (x4548 x3983) (x130 x3983)) (ite (and (not x2648) x2519 x1313) (x196 x3983) (x130 x3983)))))
(assert (x1513 x356))
(assert (x1513 x1761))
(assert (x1513 x4002))
(assert (x1513 x1636))
(assert (= (x2098 (x1894 x3392)) (ite (and (not x4397) x4019) (x2865 (x1894 x3392)) (ite (and x2992 (not x3093) x1121) (x1619 (x1894 x3392)) (x2865 (x1894 x3392))))))
(assert (x1513 x3267))
(assert (x1513 x351))
(assert (= (x1720 (x1894 x4676)) (ite x674 (x3670 (x1894 x4676)) (ite (and x4137 x4909 (not x4004)) (x4268 (x1894 x4676)) (x3670 (x1894 x4676))))))
(assert (= (x1894 511946350) (x4822 511946350)))
(assert (x1513 x3144))
(assert (= x3426 (or (and x4516 x1308) (and x4302 x158))))
(assert (x1513 x3506))
(assert (= x2330 (or x3454 (and x120 (not x3682)))))
(assert (= (ite x3925 (ite x1906 (x3726 x1484) (x1625 x1484)) (x4435 x1484)) (x130 x1484)))
(assert (x1513 x1001))
(assert (x3166 372682917519380244141939632342652170012262798458880))
(assert (= (=> (and (= 274184521717934524641157099916833587240 x20) (= x4382 (x4101 (x1894 x2213) (x4822 208) 0)) (= 274184521717934524641157099916833587240 x4055) (= x3923 x2213) (= (not (= 0 x2391)) x1757) (= x1385 (x3604 x4382)) (= (x1319 1461501637330902918203684832716283019655932542975 x1385) x2391)) (and (=> x1757 x4069) (=> (not x1757) x2971))) x4889))
(assert (= true x1749))
(assert (= (and x1523 (not x2795)) x3904))
(assert (x1513 x2739))
(assert (x1513 x2768))
(assert (x2349 x4582 x1103))
(assert (x1513 x2530))
(assert (= (ite (= x2700 x411) x2156 (x3604 x2700)) (x1267 x2700)))
(assert (= x3087 (=> (= (< x2161 x3068) x2900) (and (=> (and (= x494 (x4101 (x1894 x2922) (x4822 2) 0)) (= x3295 274184521717934524641157099916833587240) (= x4310 1) (= (x4101 (x1894 274184521717934524641157099916833587240) x494 0) x4674) (= 32 x2774) (= x2681 (x4575 (- x2161 x3068))) (= x243 x390) (not x2900)) x2171) (=> x2900 x991)))))
(assert (x1513 x4579))
(assert (x3166 x4084))
(assert (x1513 x91))
(assert (= (x1836 x1328) (ite (and x3472 x3705) (x4550 x1328) (x3393 x1328))))
(assert (x1513 x3920))
(assert (=> (> (+ 10000 1) x4133) (= (x1894 x4133) (x4822 x4133))))
(assert (= 65535 (x2856 (x4822 65535))))
(assert (= (ite x3925 (ite x1906 (x2602 x2241) (x1939 x2241)) (x1939 x2241)) (x1983 x2241)))
(assert (= (ite x3426 (ite (and x1308 x4516) (x386 x4185) (x3661 x4185)) (ite (and (not x4964) x906 x2645) (x4150 x4185) (x3661 x4185))) (x3031 x4185)))
(assert (= x3208 (=> (and (= x2507 (x1229 (+ 128 x857))) (= x857 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x38)) (= (or (and (> 32 x1467) (= true (<= x1467 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1467 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x592) (= (x1229 (+ x1467 31)) x38)) (and (=> (and (= x978 (x135 128)) (not x592) (= x2975 x2507) (= x978 x3481)) x4611) (=> x592 x2460)))))
(assert (x1513 x3858))
(assert (x1513 x4596))
(assert (x4612 x4164 x4801 x4485 x4973))
(assert (x1513 x2012))
(assert (x2349 x2261 x3620))
(assert (x1513 x4491))
(assert (x1513 x2983))
(assert (x1513 x2845))
(assert (x1513 x622))
(assert (x1513 x3380))
(assert (= (ite (= x1039 x1540) x2204 (x3566 x1540)) (x4952 x1540)))
(assert (= (=> (and (= (x269 (x1894 274184521717934524641157099916833587240)) x4013) (= (x269 (x1894 x847)) x1387) (= x1528 (and (>= x4013 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1387))) (= x1774 x4125)) (and (=> x1528 x1495) (=> (and (= 0 x1011) (not x1528) (= 0 x34)) x4714))) x474))
(assert (= (x322 x4340) (ite (= x4340 x2504) x3247 (x4632 x4340))))
(assert (x3166 x2643))
(assert (x1513 x1729))
(assert (= (ite x4941 (ite (and (not x2275) x4941) (x1003 x851) (x539 x851)) (x3126 x851)) (x2471 x851)))
(assert (= (or (and x2196 (not x3110)) x3848) x1366))
(assert (= (x1939 x1549) (ite (= x1549 x4679) x1441 (x1377 x1549))))
(assert (x1513 x4692))
(assert (x1513 x4368))
(assert (= (x2856 (x4822 1166402363)) 1166402363))
(assert (x1513 x3333))
(assert (= (x4822 1845821197) (x1894 1845821197)))
(assert (x1513 x32))
(assert (x1513 x264))
(assert (= x3973 (=> (and (= x3108 (x1229 (+ x3191 x3068))) (= (< x3108 x3191) x2056)) (and (=> x2056 x991) (=> (not x2056) x1955)))))
(assert (x1513 x390))
(assert (x1513 x4094))
(assert (x2417 x3475))
(assert (= 0 (x4453 224)))
(assert (x1513 x697))
(assert (x3166 x195))
(assert (x1513 x2837))
(assert (x1513 x2175))
(assert (x1513 x164))
(assert (x1513 x2641))
(assert (= (and x3147 (not x2160)) x4614))
(assert (x1513 x762))
(assert (x1513 x2758))
(assert (x1513 x2019))
(assert (= (ite x3925 (ite x1906 (x2602 (x4822 56)) (x1939 (x4822 56))) (x1939 (x4822 56))) (x1983 (x4822 56))))
(assert (= (x2856 (x1894 x2962)) x2962))
(assert (x1513 x14))
(assert (x3166 x3685))
(assert (= (x1894 904250603428552709895185118199468575982109441609966099573332780532423983104) (x4822 904250603428552709895185118199468575982109441609966099573332780532423983104)))
(assert (x1513 x2070))
(assert (x1513 x3839))
(assert (= (ite x3925 (ite x1906 (x2602 x3495) (x1939 x3495)) (x1939 x3495)) (x1983 x3495)))
(assert (= (x1451 (x1894 274184521717934524641157099916833587240)) (ite x3925 (ite x1906 (x1898 (x1894 274184521717934524641157099916833587240)) (x1083 (x1894 274184521717934524641157099916833587240))) (x47 (x1894 274184521717934524641157099916833587240)))))
(assert (x1513 x1063))
(assert (x1513 x2178))
(assert (x3166 18446744073709551615))
(assert (= (x3566 x1282) (ite (and x3767 (not x179)) (x3604 x1282) (ite x2999 (ite x938 (x1570 x1282) (x3604 x1282)) (x3604 x1282)))))
(assert (x1513 x3451))
(assert (x2349 x1758 x3814))
(assert (= (ite (= x2392 x2241) x844 (x1852 x2392)) (x3604 x2392)))
(assert (x3166 x4422))
(assert (x1513 x2437))
(assert (= (x15 x2883) (ite (= x4178 x2883) x2443 (x1267 x2883))))
(assert (x1513 x4609))
(assert (= (ite (= x4384 x4679) x1441 (x1377 x4384)) (x1939 x4384)))
(assert (x2417 x3964))
(assert (= 1858285468 (x2856 (x4822 1858285468))))
(assert (= (x2476 (x1894 x2008)) (ite x2139 (x1436 (x1894 x2008)) (ite (and x4586 (not x3527) x865) (x2316 (x1894 x2008)) (x1720 (x1894 x2008))))))
(assert (x1513 x1905))
(assert (x1513 x4361))
(assert (x4612 x2652 x22 x638 x1501))
(assert (x1513 x1842))
(assert (= (and x4362 (not x4083)) x1661))
(assert (= x2403 (=> (and (= x946 (x4575 (- x1871 4))) (= x2922 x4341) (> 826074471 x1593) (= x4572 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x946) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x946) true) (< x946 96)))) (not (= x1593 404098525)) (= (x2328 (x1894 274184521717934524641157099916833587202)) x3327) (not (= 157198259 x1593)) (= x1593 599290589) (= x1808 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3068 x1849) (not (= x1593 117300739)) (> x3327 0) (= x1871 100) (= x1871 x32) (not (> 4 x1871))) (and (=> x4572 x991) (=> (not x4572) x425)))))
(assert (= (x207 x4766) (ite (and x771 (not x203) x2108 x2670 x3453 x4163) (x3117 x4766) (ite (and x2670 (not x3453) x771 x4163 x2108) (x4054 x4766) (ite (and x2670 x771 (not x4163) x2108) (x4231 x4766) (ite (and x2670 (not x771) x2108) (x2266 x4766) (x2234 x4766)))))))
(assert (x778 x248 x3629 x2720 x1458))
(assert (= (x4822 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1894 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (x3604 x3965) (ite (= x3965 x2241) x844 (x1852 x3965))))
(assert (= (ite (= x3562 x4679) x1441 (x1377 x3562)) (x1939 x3562)))
(assert (x1513 x3229))
(assert (= x407 (=> (and (not (> x1948 x4460)) (= (x4575 (- x218 x2233)) x4920) (= x2628 x299) (= (x1229 (+ x4403 x876)) x1948) (not (< x4920 x876))) x4475)))
(assert (x1513 x3210))
(assert (x1513 x3647))
(assert (= (x2856 (x1894 x524)) x524))
(assert (x1513 x52))
(assert (x1513 x627))
(assert (x2417 x847))
(assert (x1513 x4709))
(assert (x1513 x4050))
(assert (x1513 x4175))
(assert (x1513 x914))
(assert (x1513 x1930))
(assert (x1513 x3664))
(assert (x1513 x511))
(assert (x1513 x213))
(assert (x1513 x4637))
(assert (= (x1267 x2392) (ite (= x411 x2392) x2156 (x3604 x2392))))
(assert (= (x3535 x3514) 0))
(assert (= (=> (= false x2285) x1773) x4708))
(assert (= x865 (or (and x4909 (not x4004)) x674)))
(assert (=> (< (- x995 1) 10000) (= (x4822 x995) (x1894 x995))))
(assert (= (ite x1846 (ite x4600 (x534 x491) (x201 x491)) (x201 x491)) (x1199 x491)))
(assert (x1513 x2660))
(assert (x1513 x1952))
(assert (= x3454 (or (and x3939 x1349) (and x4235 x1014) (and x2436 x1706))))
(assert (x1513 x3928))
(assert (= (=> (and (= (x2523 x2843) x1356) (>= x1356 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1356) (= x1136 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= (x4101 (x1894 x3800) (x4822 1) 0) x2843) (= 274184521717934524641157099916833587240 x687) (= x2082 (< x3528 x1356)) (= x4240 (x4575 (- x2773 x3962))) (= (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3962)) x3528)) (and (=> x2082 x92) (=> (not x2082) x191))) x2873))
(assert (x1513 x1457))
(assert (x1513 x3561))
(assert (x1513 x4629))
(assert (x1513 x195))
(assert (= (ite x3925 (ite x1906 (x2602 x3403) (x1939 x3403)) (x1939 x3403)) (x1983 x3403)))
(assert (x1513 x2204))
(assert (= (x3389 x67) (ite x674 (ite (and x4128 x4346) (x99 x67) (ite (and x2985 x355) (x3841 x67) (x99 x67))) (ite (and x4137 (not x4004) x4909) (x3520 x67) (x99 x67)))))
(assert (x2349 x2008 x608))
(assert (x1513 x947))
(assert (= (x4740 x402) 0))
(assert (x2349 x4689 x3406))
(assert (=> (< (- x3303 1) 10000) (= (x1894 x3303) (x4822 x3303))))
(assert (= x3160 (=> (and (= x4782 274184521717934524641157099916833587240) (= (x1993 x67) x3287) (>= x3287 0) (= (x4101 (x1894 x2332) (x4822 1) 0) x790) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 2) 0) x1040) (= (x4101 (x1894 274184521717934524641157099916833587240) x1040 0) x67) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3287) (= (> x3460 x3287) x4930) (= x4182 274184521717934524641157099916833587240)) (and (=> x4930 x347) (=> (not x4930) x4606)))))
(assert (x1513 x2351))
(assert (x1513 x2394))
(assert (= (x4822 31536000) (x1894 31536000)))
(assert (= (x1983 x634) (ite x3925 (ite x1906 (x2602 x634) (x1939 x634)) (x1939 x634))))
(assert (x1513 x4037))
(assert (x2143 x1781 x4963))
(assert (= (ite (= x3754 x2241) x844 (x1852 x3754)) (x3604 x3754)))
(assert (= (x1939 x2192) (ite (= x2192 x4679) x1441 (x1377 x2192))))
(assert (= (ite (= (x1894 x4133) (x1894 274184521717934524641157099916833587240)) x4370 (x2557 (x1894 x4133))) (x853 (x1894 x4133))))
(assert (x1513 x37))
(assert (= x2220 x3668))
(assert (= (x2293 x2715) (ite (and (not x179) x3767) (x3282 x2715) (ite x2999 (ite x938 (x2735 x2715) (x2471 x2715)) (x2471 x2715)))))
(assert (x1513 x146))
(assert (x2349 x174 x4835))
(assert (x3166 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1498 x2450 x3059))
(assert (x1513 x215))
(assert (x1513 x2880))
(assert (x4263 x100 x3505 x3808 x1065))
(assert (x1513 x1220))
(assert (x1513 x718))
(assert (x1513 x4634))
(assert (x1513 x4955))
(assert (x1513 x4499))
(assert (= (ite (= x4178 x1540) x2443 (x1267 x1540)) (x15 x1540)))
(assert (x1513 x3559))
(assert (= x1058 (=> (= x4237 (= x1777 0)) (and (=> x4237 x2460) (=> (not x4237) x4708)))))
(assert (x1513 x2942))
(assert (x1513 x4695))
(assert (= (=> (= (< 0 x4954) x3901) (and (=> (not x3901) x1272) (=> x3901 x1183))) x2820))
(assert (x1513 x278))
(assert (= (ite (= x4363 x4679) x1441 (x1377 x4363)) (x1939 x4363)))
(assert (= (ite (= x3857 x4746) x3108 (x675 x3857)) (x1953 x3857)))
(assert (x1513 x2434))
(assert (= x3067 (x2856 (x1894 x3067))))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x3907) x2435) (and (=> (not x2435) x1571) (=> (and (= x266 1889567281) (not (< x266 826074471)) (not (< x794 4)) (= (x4575 (- x794 4)) x1472) (= (x2328 (x1894 274184521717934524641157099916833587206)) x2786) (= x889 (or (and (= true (<= x1472 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1472 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1472))) (> x2786 0) x2435 (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4702) (or (and (not x889) (= 32 x1055) (= x700 (x500 x4248)) (<= 0 x700) (<= x700 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587240 x1905) (= 1 x1622) (= x4248 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0))) (and (= 0 x1622) (= x1055 x4809) x889)) (= x794 x4990) (not (= x266 826074471)) (= 36 x794)) x631))) x2760))
(assert (= (ite (and x3767 (not x179)) (x1566 x2284) (ite x2999 (x822 x2284) (x1566 x2284))) (x2088 x2284)))
(assert (= (x15 x4199) (ite (= x4178 x4199) x2443 (x1267 x4199))))
(assert (= (ite (= x4340 132) 274184521717934524641157099916833587240 (x3227 x4340)) (x2548 x4340)))
(assert (= (or (and (not x3527) x865) x2139) x4941))
(assert (x1513 x1653))
(assert (x1513 x4113))
(assert (x3166 x1086))
(assert (x1513 x2117))
(assert (x1513 x2527))
(assert (= (x3661 x4185) (ite x1846 (ite x4600 (x4985 x4185) (x1625 x4185)) (x1095 x4185))))
(assert (= (ite x3925 (ite x1906 (x2602 x3965) (x1939 x3965)) (x1939 x3965)) (x1983 x3965)))
(assert (x1513 x3067))
(assert (x1513 x3648))
(assert (x1513 x3321))
(assert (x778 x732 x559 x4217 x2343))
(assert (=> (< (- x1006 1) 10000) (= (x4822 x1006) (x1894 x1006))))
(assert (= (=> (and (= x3067 x4500) (= (= x4341 x3067) x1672)) (and (=> x1672 x3124) (=> (not x1672) x1853))) x4295))
(assert (x1513 x1091))
(assert (x1513 x2621))
(assert (= (x1582 (x1894 274184521717934524641157099916833587240)) x4701))
(assert (x1513 x833))
(assert (= (=> (and (not (or (and (> 32 x919) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x919))) (> x919 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4460 x334) (not (= x3648 0)) (= x1327 (x1229 (+ x4145 x2565))) (= x1327 x299) (= (x3206 x4094) x334) (= x4094 x4145) (= (x1229 (+ 31 x919)) x4913) (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4913) x2565)) x407) x1541))
(assert (= x668 (and x1672 x4308)))
(assert (= (x2541 x3175) (ite (= x1892 x3175) x2951 (x76 x3175))))
(assert (x1513 x3111))
(assert (= (x3604 x1746) (ite (= x1746 x2241) x844 (x1852 x1746))))
(assert (x1513 x4704))
(assert (x1513 x1109))
(assert (x1513 x2953))
(assert (x1513 x602))
(assert (x1513 x4298))
(assert (x1513 x2372))
(assert (= (ite (= (x4822 1) x4679) x1441 (x1377 (x4822 1))) (x1939 (x4822 1))))
(assert (x1513 x1693))
(assert (x1513 x4725))
(assert (x3166 x4360))
(assert (= x809 (=> (= x2660 x18) x3735)))
(assert (x2417 x2747))
(assert (= (ite (= x87 x2218) x4322 (x1377 x87)) (x201 x87)))
(assert (= (x709 x4248) (ite x4941 (ite (and x4941 (not x2275)) (x208 x4248) (x4155 x4248)) (x1625 x4248))))
(assert (x1513 x2893))
(assert (x1513 x2729))
(assert (= x550 (and x3671 x3918)))
(assert (x1513 x4988))
(assert (x1513 x4942))
(assert (= (x3155 256) 0))
(assert (x3166 x220))
(assert (= (ite (= x755 x2611) x2812 (x520 x2611)) (x2657 x2611)))
(assert (x1513 x2814))
(assert (x1513 x1675))
(assert (= (x1908 x1540) (ite (= x1420 x1540) x31 (x4952 x1540))))
(assert (x4612 x353 x1428 x4748 x4581))
(assert (x1513 x4344))
(assert (x1513 x4095))
(assert (x1513 x472))
(assert (= (x201 x1678) (ite (= x1678 x2218) x4322 (x1377 x1678))))
(assert (x1513 x4193))
(assert (= (x1720 (x1894 x2008)) (ite x674 (x3670 (x1894 x2008)) (ite (and x4909 x4137 (not x4004)) (x4268 (x1894 x2008)) (x3670 (x1894 x2008))))))
(assert (= (and (not x4691) x423) x2718))
(assert (= (x675 x2715) (ite (= x2715 x2676) x4949 (x2471 x2715))))
(assert (= (x2981 x1328) (ite (and x2645 x3943 (not x4646) x4964 x3560 x75) (x3154 x1328) (ite (and x4964 x75 x2645 (not x3560) x3943) (x1651 x1328) (ite (and x2645 x4964 x3943 (not x75)) (x1802 x1328) (ite (and x4964 (not x3943) x2645) (x1192 x1328) (x1880 x1328)))))))
(assert (x1513 x1748))
(assert (= (ite (= x1420 x1039) x2204 (x3566 x1420)) (x4952 x1420)))
(assert (= x4663 (and x1194 (not x138))))
(assert (= (x201 x1346) (ite (= x2218 x1346) x4322 (x1377 x1346))))
(assert (= x632 (and x1005 x917)))
(assert (x1513 x3813))
(assert (x1513 x3257))
(assert (x1513 x2487))
(assert (x1513 x294))
(assert (=> (< (- x3475 1) 10000) (= (x1894 x3475) (x4822 x3475))))
(assert (x1513 x3436))
(assert (x1513 x1735))
(assert (x1513 x358))
(assert (x1513 x3573))
(assert (x1513 x4921))
(assert (= (=> (and (= (> x4017 x1755) x4640) (= (x1229 (+ x1337 x4017)) x1755)) (and (=> x4640 x3249) (=> (and (not x4640) (= x3443 x2902) (= x4613 (x4101 (x1894 x1545) (x4822 1) 0)) (= x1819 1) (= x3209 32)) x4682))) x2538))
(assert (= (ite (= (x1894 x1092) (x1894 274184521717934524641157099916833587240)) x3573 (x874 (x1894 x1092))) (x1083 (x1894 x1092))))
(assert (x1513 x4790))
(assert (= x4888 (and x3494 x2844)))
(assert (= x4122 (=> (= x4476 (< x4446 x3460)) (and (=> x4476 x347) (=> (not x4476) x4843)))))
(assert (= (ite (= x4679 x3754) x1441 (x1377 x3754)) (x1939 x3754)))
(assert (x1513 x4890))
(assert (= (=> (and (= (x2328 (x1894 x847)) x3523) (= x373 (< 0 x3523)) (= x4959 (x1319 1461501637330902918203684832716283019655932542975 x3893)) (= x3893 (x3566 (x4822 56))) (= x2261 (x3566 x2392)) (= x847 (x1319 1461501637330902918203684832716283019655932542975 x2261))) (and (=> x373 x1572) (=> (not x373) x4462))) x421))
(assert (= (x4822 4294967295) (x1894 4294967295)))
(assert (x1513 x2062))
(assert (= (x2856 (x4822 1845821197)) 1845821197))
(assert (x778 x1123 x1171 x3228 x3607))
(assert (x1513 x1687))
(assert (= (x1939 x3403) (ite (= x3403 x4679) x1441 (x1377 x3403))))
(assert (x1513 x4949))
(assert (x1513 x3642))
(assert (x1513 x4919))
(assert (= x3493 (=> (= (> x1337 x4830) x2283) (and (=> x2283 x3249) (=> (not x2283) x3565)))))
(assert (x1513 x1425))
(assert (x1513 x1460))
(assert (x1513 x460))
(assert (= x3404 (=> (and (= x2740 0) (= x3963 x34) (= (- (x409 (x1894 x847)) x2740) x4089) (= (< (+ x2740 (x1372 (x1894 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1762) x1762 (= x4793 x1011) (= (x1229 (+ x2740 (uninterp_mod (x1372 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1910)) x4714)))
(assert (x1513 x4925))
(assert (= (=> (and (= x1179 x519) (= x2118 (= x519 x219))) (and (=> x2118 x3071) (=> (not x2118) x3986))) x4666))
(assert (= (and x2134 (not x3250)) x4684))
(assert (= (x572 x1307) (ite x4806 (ite (and x641 x238) (x102 x1307) (x4644 x1307)) (ite (and (not x2648) x1313 x2519) (x4924 x1307) (x102 x1307)))))
(assert (x1513 x3924))
(assert (= (x3091 x2448) 0))
(assert (x1513 x4332))
(assert (= (ite (= x1328 132) 274184521717934524641157099916833587240 (x1130 x1328)) (x2237 x1328)))
(assert (= x1006 (x2856 (x1894 x1006))))
(assert (x1513 x4301))
(assert (x1513 x4027))
(assert (x1513 x3466))
(assert (= (ite (= x1505 x2218) x4322 (x1377 x1505)) (x201 x1505)))
(assert (=> (< (- x505 1) 10000) (= (x1894 x505) (x4822 x505))))
(assert (= (=> (and (= x3642 x942) (< x4291 826074471) (not (= x4291 117300739)) (= 100 x3642) (= x2329 (x2328 (x1894 274184521717934524641157099916833587202))) (not (= x4291 157198259)) (= x931 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1937) (and (= true (<= x1937 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x1937)))) (not (> 4 x3642)) (= x519 x219) (not (= 404098525 x4291)) (= x1937 (x4575 (- x3642 4))) (> x2329 0) (= x3451 x2647) (= x2474 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x4291)) (and (=> x931 x3986) (=> (not x931) x4666))) x3088))
(assert (x1513 x2300))
(assert (=> (< (- x847 1) 10000) (= (x1894 x847) (x4822 x847))))
(assert (= (=> (and (= (= x4289 x335) x2224) (= x4289 x733)) (and (=> (not x2224) x4653) (=> x2224 x4852))) x3892))
(assert (= (x4552 x1526) (ite x3426 (ite (and x4516 x1308) (x1507 x1526) (x4091 x1526)) (ite (and x906 (not x4964) x2645) (x4518 x1526) (x1507 x1526)))))
(assert (x1513 x505))
(assert (= (x1983 x4030) (ite x3925 (ite x1906 (x2602 x4030) (x1939 x4030)) (x1939 x4030))))
(assert (x1513 x2055))
(assert (= x370 (and x1124 x4933)))
(assert (x1513 x3138))
(assert (x1513 x4739))
(assert (x1513 x1437))
(assert (x1513 x4913))
(assert (x3166 255))
(assert (= (x102 x4141) (ite x3925 (ite x1906 (x3244 x4141) (x3126 x4141)) (x3171 x4141))))
(assert (= (x3031 x4667) (ite x3426 (ite (and x1308 x4516) (x386 x4667) (x3661 x4667)) (ite (and x2645 (not x4964) x906) (x4150 x4667) (x3661 x4667)))))
(assert (= (x1983 x2883) (ite x3925 (ite x1906 (x2602 x2883) (x1939 x2883)) (x1939 x2883))))
(assert (x1513 x2421))
(assert (= (ite (= x589 x2218) x4322 (x1377 x589)) (x201 x589)))
(assert (x1513 x4326))
(assert (x1513 x4538))
(assert (x1513 x3579))
(assert (= (ite (= x2241 x4178) x844 (x1852 x4178)) (x3604 x4178)))
(assert (= (x1522 (- x1696 x3490)) 0))
(assert (x1513 x3894))
(assert (x1513 x3609))
(assert (x3166 x38))
(assert (= (ite x4806 (ite (and x238 x641) (x102 x127) (x4644 x127)) (ite (and x1313 x2519 (not x2648)) (x4924 x127) (x102 x127))) (x572 x127)))
(assert (= (x201 x3207) (ite (= x3207 x2218) x4322 (x1377 x3207))))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x1748)) x4370 (x2557 (x1894 x1748))) (x853 (x1894 x1748))))
(assert (x1513 x3733))
(assert (= (and (not x1695) x1919) x1176))
(assert (= (ite (and x3767 (not x179)) (x3282 x127) (ite x2999 (ite x938 (x2735 x127) (x2471 x127)) (x2471 x127))) (x2293 x127)))
(assert (= (ite x1846 (ite x4600 (x534 x2508) (x201 x2508)) (x201 x2508)) (x1199 x2508)))
(assert (x1513 x3200))
(assert (= (x975 x2768) 0))
(assert (= 0 (x3572 224)))
(assert (= (x76 x2611) (ite (= x2611 x261) x1689 (x709 x2611))))
(assert (= (x2856 (x1894 x2202)) x2202))
(assert (x1513 x3490))
(assert (=> (> (+ 10000 1) x4947) (= (x4822 x4947) (x1894 x4947))))
(assert (x1513 x3853))
(assert (x1513 x2954))
(assert (x1513 x3591))
(assert (x1513 x3975))
(assert (x1513 x1296))
(assert (x1513 x1502))
(assert (= x4290 (=> (= x4397 (= 0 x4903)) (and (=> x4397 x2460) (=> (not x4397) x2515)))))
(assert (x2349 x129 x971))
(assert (x4612 x4499 x4635 x1174 x3883))
(assert (= (x2856 (x4822 511946350)) 511946350))
(assert (= (x4799 x3468) (ite (= x3468 x678) x250 (x4132 x3468))))
(assert (x1513 x4810))
(assert (= x4962 (and (not x4302) x158)))
(assert (x305 x4427 x1256 x1688 x4906))
(assert (= (ite (= x1420 x3562) x31 (x4952 x3562)) (x1908 x3562)))
(assert (= (ite x4941 (ite (and x4941 (not x2275)) (x1003 x1074) (x539 x1074)) (x3126 x1074)) (x2471 x1074)))
(assert (x1513 x4582))
(assert (x1513 x3906))
(assert (x1513 x4457))
(assert (x1513 x2587))
(assert (x1513 x4970))
(assert (x1513 x523))
(assert (x1513 x4965))
(assert (= (or (and x3142 x4116) (and x1175 x565) (and x834 x70)) x2686))
(assert (x1513 x4236))
(assert (x2417 x2620))
(assert (= (x709 x2022) (ite x4941 (ite (and (not x2275) x4941) (x208 x2022) (x4155 x2022)) (x1625 x2022))))
(assert (x1513 x650))
(assert (= x1168 (and x1925 (not x931))))
(assert (= (and x175 x2871) x2559))
(assert (x4612 x38 x2338 x329 x2634))
(assert (x1513 x13))
(assert (x2349 x2811 x2998))
(assert (x1513 x4864))
(assert (= x2642 (and x1089 x1649)))
(assert (x1513 x1406))
(assert (x1513 x3258))
(assert (x1513 x2825))
(assert (x3166 x1303))
(assert (x1513 x187))
(assert (= true x1413))
(assert (x1513 x1964))
(assert (= (ite x3925 (ite x1906 (x1898 (x1894 x4676)) (x1083 (x1894 x4676))) (x47 (x1894 x4676))) (x1451 (x1894 x4676))))
(assert (x1513 x4427))
(assert (= (x1471 x67) (ite (and x3767 (not x179)) (ite (and x542 x3980 (not x941)) (x3732 x67) (x640 x67)) (ite x2999 (ite x938 (x1614 x67) (x640 x67)) (x640 x67)))))
(assert (= (x3604 (x4822 1)) (ite (= (x4822 1) x2241) x844 (x1852 (x4822 1)))))
(assert (x2349 x947 x603))
(assert (= (or x3426 (and (not x4964) x2645)) x3472))
(assert (= x1961 (and x1528 x2742)))
(assert (x1513 x4345))
(assert (= (and x1155 (not x2283)) x2824))
(assert (x1513 x117))
(assert (= x2821 (and x2713 (not x2376))))
(assert (x1513 x4419))
(assert (= (ite (= x246 x4679) x1441 (x1377 x246)) (x1939 x246)))
(assert (x1513 x1011))
(assert (x1513 x2238))
(assert (x3166 x2747))
(assert (x3166 x647))
(assert (= (=> (= x2795 (> x3068 x625)) (and (=> x2795 x991) (=> (not x2795) x533))) x1630))
(assert (x1513 x4341))
(assert (= (x4822 157198259) (x1894 157198259)))
(assert (= (x975 x2570) 0))
(assert (= (ite (and (not x933) x3898 x4818) (x705 x1328) (x343 x1328)) (x2564 x1328)))
(assert (x2417 x2600))
(assert (= (x1983 x1759) (ite x3925 (ite x1906 (x2602 x1759) (x1939 x1759)) (x1939 x1759))))
(assert (x3166 x3026))
(assert (x1513 x3480))
(assert (x2417 x1165))
(assert (x1513 x4851))
(assert (x2349 x2510 x690))
(assert (x1513 x1777))
(assert (= (x2471 x1120) (ite x4941 (ite (and (not x2275) x4941) (x1003 x1120) (x539 x1120)) (x3126 x1120))))
(assert (x1513 x1004))
(assert (x1513 x3976))
(assert (x1513 x1954))
(assert (=> (< (- x3718 1) 10000) (= (x4822 x3718) (x1894 x3718))))
(assert (x1513 x3433))
(assert (x1513 x1876))
(assert (x1513 x3190))
(assert (x2349 x1086 x3180))
(assert (= true x2074))
(assert (= (ite (= x3495 x4679) x1441 (x1377 x3495)) (x1939 x3495)))
(assert (x1513 x4143))
(assert (= (and x419 (not x1787)) x3696))
(assert (= (=> (= x3881 (= 274184521717934524641157099916833587202 x1081)) (and (=> (and (not (= x4545 826074471)) (>= x1114 0) (not x1640) (= 1889567281 x4545) (= 1 x44) (= x881 274184521717934524641157099916833587240) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x110) (< 0 x1317) (= (x4575 (- x3210 4)) x1225) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1114) (= x1317 (x2328 (x1894 274184521717934524641157099916833587202))) (= 32 x4394) (= x1114 (x3126 x3458)) (= x1640 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1225) (and (< x1225 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1225) true)))) (not (> 4 x3210)) (= x3210 36) (= 36 x3210) (= x3458 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (not (> 826074471 x4545)) x3881) x805) (=> (not x3881) x554))) x361))
(assert (x1513 x2770))
(assert (x3166 x4988))
(assert (x1513 x3737))
(assert (= 0 (x2046 (- x4098 x3656))))
(assert (x1513 x2874))
(assert (x2417 x2244))
(assert (= (x853 (x1894 x1030)) (ite (= (x1894 x1030) (x1894 274184521717934524641157099916833587240)) x4370 (x2557 (x1894 x1030)))))
(assert (= (ite x1846 (ite x4600 (x534 x227) (x201 x227)) (x201 x227)) (x1199 x227)))
(assert (= (ite x4806 (x4828 x1837) (ite (and x1313 (not x2648) x2519) (x2505 x1837) (x4828 x1837))) (x4784 x1837)))
(assert (= (or (and x721 x3095) (and x3278 x3881) (and x4722 x4944)) x448))
(assert (= (and x1358 (not x2723)) x3584))
(assert (x1513 x220))
(assert (x1513 x885))
(assert (x1513 x3623))
(assert (= x398 (=> (and (= x1970 (> x3867 0)) (= x275 (x1229 (+ 32 x1534))) (= x1748 (x1319 1461501637330902918203684832716283019655932542975 x2008)) (= x3101 (x1229 (+ x4145 4))) (= x3101 x1534) (not (= x586 0)) (or (not x1970) (and x1970 x3981 (> 4294967296 x3921) (= (x853 (x1894 x1748)) x2840) x1258 (= x1258 (= x2840 (x4186 (x1894 x1748)))) (= x3981 (>= (x4186 (x1894 274184521717934524641157099916833587240)) x3127)) (= x3127 (x853 (x1894 274184521717934524641157099916833587240))))) (= (x2328 (x1894 x1748)) x586)) x1588)))
(assert (= (x1786 x4094) (ite (= x4094 x2380) 274184521717934524641157099916833587240 (x1345 x4094))))
(assert (= (ite (and (not x179) x3767) (x3604 x168) (ite x2999 (ite x938 (x1570 x168) (x3604 x168)) (x3604 x168))) (x3566 x168)))
(assert (x1513 x2161))
(assert (=> (< (- x4195 1) 10000) (= (x4822 x4195) (x1894 x4195))))
(assert (x1513 x2789))
(assert (x1513 x4403))
(assert (= (ite x674 (x3670 (x1894 x4959)) (ite (and x4137 x4909 (not x4004)) (x4268 (x1894 x4959)) (x3670 (x1894 x4959)))) (x1720 (x1894 x4959))))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x4676)) x3573 (x874 (x1894 x4676))) (x1083 (x1894 x4676))))
(assert (x1513 x610))
(assert (x1513 x475))
(assert (x1513 x727))
(assert (x934 x4571 x3689))
(assert (= (x2856 (x1894 x621)) x621))
(assert (= (or x4887 (and x4706 (not x614))) x2339))
(assert (= (=> (and (= x4324 x1221) (= x277 x644) (= x1221 (not x644))) x4324) x3264))
(assert (= (ite (= x1540 x2241) x844 (x1852 x1540)) (x3604 x1540)))
(assert (= (ite x3925 (ite x1906 (x3244 x127) (x3126 x127)) (x3171 x127)) (x102 x127)))
(assert (x3166 x2394))
(assert (x1513 x3392))
(assert (x1513 x4932))
(assert (x1513 x1551))
(assert (x1513 x4658))
(assert (x1513 x988))
(assert (x1513 x923))
(assert (= x2992 (and (not x1935) x2048)))
(assert (= (ite (= x3822 x4679) x1441 (x1377 x3822)) (x1939 x3822)))
(assert (= (x2856 (x4822 79228162514264337593543950336)) 79228162514264337593543950336))
(assert (= (x102 x3905) (ite x3925 (ite x1906 (x3244 x3905) (x3126 x3905)) (x3171 x3905))))
(assert (= (ite (= x3386 x2218) x4322 (x1377 x3386)) (x201 x3386)))
(assert (= x557 (=> (and (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3413) x2938) (= (x1229 (+ x2331 31)) x3413) (= x1328 x4633) (= (x1229 (+ x4633 x2938)) x2626) (not (= 0 x2511)) (= x997 (x1836 x1328)) (= (= x997 0) x3110) (not (or (and (= true (<= x2331 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2331)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2331)))) (and (=> (and (= x4742 (x1229 (+ x2626 164))) (= x2337 (x1229 (+ 64 x4258))) (not x3110) (= x1833 (x1229 (+ 64 x3797))) (= x807 (x1319 1461501637330902918203684832716283019655932542975 x2008)) (= x3797 (x1229 (+ 32 x4258))) (or (not x2934) (and (= x1122 (>= (x529 (x1894 274184521717934524641157099916833587240)) x4000)) (= x1214 (x4230 (x1894 x4133))) (= (= (x529 (x1894 x4133)) x1214) x986) x986 (= x4000 (x4230 (x1894 274184521717934524641157099916833587240))) x1122 (< x1730 4294967296) x2934)) (= (x2328 (x1894 x4133)) x1475) (not (= x2683 0)) (= (x1229 (+ x2337 64)) x579) (= x4258 x2561) (not (= 0 x1475)) (= x2561 (x1229 (+ 4 x2626))) (= (> x2683 0) x2934)) x813) (=> x3110 x2573)))))
(assert (x1513 x3913))
(assert (= (ite (= x4679 x773) x1441 (x1377 x773)) (x1939 x773)))
(assert (= x4845 (or (and x3512 x2340) x4941)))
(assert (x1513 x783))
(assert (= (x1939 x551) (ite (= x551 x4679) x1441 (x1377 x551))))
(assert (x1513 x4730))
(assert (x1513 x440))
(assert (= (and (not x4977) x4510) x3496))
(assert (= (ite x1846 (ite x4600 (x119 x1526) (x3126 x1526)) (x3583 x1526)) (x1507 x1526)))
(assert (x3166 115792089237316195423570985007226406215939081747436879206741300988257197096960))
(assert (x1513 x2510))
(assert (x1513 x3704))
(assert (= (ite x3925 (ite x1906 (x2602 x1282) (x1939 x1282)) (x1939 x1282)) (x1983 x1282)))
(assert (x1513 x1490))
(assert (= x4516 (and x4964 x2645)))
(assert (= (x1939 x4986) (ite (= x4679 x4986) x1441 (x1377 x4986))))
(assert (x1513 x2756))
(assert (= (ite x1846 (ite x4600 (x534 x1145) (x201 x1145)) (x201 x1145)) (x1199 x1145)))
(assert (x1513 x2902))
(assert (x1513 x1335))
(assert (x1513 x525))
(assert (x1513 x4792))
(assert (= (or (and x526 x4337) (and x826 x3183)) x2139))
(assert (x1513 x3196))
(assert (x1513 x2308))
(assert (=> (< (- x3473 1) 10000) (= (x1894 x3473) (x4822 x3473))))
(assert (x2417 x3201))
(assert (x1513 x3701))
(assert (x3166 x2261))
(assert (x934 x3582 x54))
(assert (x1513 x3366))
(assert (x1513 x2771))
(assert (x1513 x4350))
(assert (x2417 x3067))
(assert (x1513 x4946))
(assert (x1513 x720))
(assert (= x3909 x58))
(assert (x1513 x1146))
(assert (= (x1894 34167655436598589418538772692774877509225721125679165766806516059628562808832) (x4822 34167655436598589418538772692774877509225721125679165766806516059628562808832)))
(assert (= (ite (= x3818 x3959) 274184521717934524641157099916833587240 (x1444 x3959)) (x4773 x3959)))
(assert (= (+ (x2856 x116) 6) (x2856 (x2808 x116 6))))
(assert (= (x2856 (x1894 x4133)) x4133))
(assert (= x2776 (=> (and (= x3833 (x822 x2980)) (= (< 0 x3833) x3795)) (and (=> x3795 x3619) (=> (not x3795) x4049)))))
(assert (x1513 x225))
(assert (= (x1983 x694) (ite x3925 (ite x1906 (x2602 x694) (x1939 x694)) (x1939 x694))))
(assert (x2349 x4084 x630))
(assert (= (x130 x2638) (ite x3925 (ite x1906 (x3726 x2638) (x1625 x2638)) (x4435 x2638))))
(assert (x1513 x636))
(assert (= (ite (= (x1894 x335) (x1894 274184521717934524641157099916833587240)) x3573 (x874 (x1894 x335))) (x1083 (x1894 x335))))
(assert (x4187 x3111 x245))
(assert (x1513 x4976))
(assert (x4612 x622 x3104 x3679 x2526))
(assert (= x1901 (=> (and (= (> x3639 0) x2275) (= x3639 (x2328 (x1894 x2482))) (= x2603 false) (or (and x2275 (not (= x3242 0)) (or (not x1191) (and x3086 x1191 (= x3277 (x2476 (x1894 x2482))) (= (>= (x2528 (x1894 274184521717934524641157099916833587240)) x4383) x4573) x4573 (> 4294967296 x2366) (= (= (x2528 (x1894 x2482)) x3277) x3086) (= (x2476 (x1894 274184521717934524641157099916833587240)) x4383))) (= x839 (x2328 (x1894 x2482))) (= (< 0 x3242) x1191) (not (= 0 x839))) (not x2275)) (= x1463 false)) x577)))
(assert (x3166 x2590))
(assert (= (ite x3925 (ite x1906 (x2602 x411) (x1939 x411)) (x1939 x411)) (x1983 x411)))
(assert (x3166 x2518))
(assert (x1513 x2881))
(assert (x1513 x1684))
(assert (x2417 x505))
(assert (x1513 x1224))
(assert (= (ite (= 324 x1328) x4493 (x1699 x1328)) (x2020 x1328)))
(assert (x1513 x2227))
(assert (x1513 x1850))
(assert (= (x761 (x1894 274184521717934524641157099916833587240)) (ite x3848 (x4230 (x1894 274184521717934524641157099916833587240)) (ite (and (not x3110) x2934 x2196) (x529 (x1894 274184521717934524641157099916833587240)) (x4230 (x1894 274184521717934524641157099916833587240))))))
(assert (x1513 x4712))
(assert (x1513 x293))
(assert (= (x269 (x1894 x847)) (ite (and (not x179) x3767) (x3276 (x1894 x847)) (ite x2999 (ite x938 (x977 (x1894 x847)) (x1582 (x1894 x847))) (x1582 (x1894 x847))))))
(assert (= x2196 x3472))
(assert (x2417 x368))
(assert (x1513 x3758))
(assert (x1513 x4017))
(assert (= (x3604 x2883) (ite (= x2241 x2883) x844 (x1852 x2883))))
(assert (= x3489 (=> (and (not (= x3445 0)) (= (x1229 (+ x1503 x2491)) x296) (= x1603 x1107) (= x1603 (x972 x3468)) (= x296 x3938) (= x2491 x3468) (= (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x915) x1503) (= x915 (x1229 (+ 31 x2725))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2725) (and (> 32 x2725) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2725) true))))) x389)))
(assert (x2417 x3441))
(assert (= (x208 x2611) (ite x2139 (ite (and x526 x4337) (x24 x2611) (x3846 x2611)) (ite (and x865 (not x3527) x4586) (x64 x2611) (x3846 x2611)))))
(assert (= x3761 (=> (= (< x2987 x980) x3567) (and (=> (not x3567) x1150) (=> x3567 x1853)))))
(assert (x1513 x4402))
(assert (x1513 x1893))
(assert (x1513 x1712))
(assert (= (x2856 (x4822 1889567281)) 1889567281))
(assert (x1513 x3638))
(assert (= 0 (x136 x4655)))
(assert (x1513 x1125))
(assert (= (+ 1 (x2856 x4255)) (x2856 (x2808 x4255 1))))
(assert (x1513 x1290))
(assert (x1513 x2920))
(assert (= (ite x674 (ite (and x4128 x4346) (x4568 x1139) (ite (and x355 x2985) (x4090 x1139) (x4568 x1139))) (ite (and x4909 (not x4004) x4137) (x3698 x1139) (x4568 x1139))) (x3846 x1139)))
(assert (= x2834 (and x2224 x4408)))
(assert (x1513 x3191))
(assert (= (x76 x159) (ite (= x159 x261) x1689 (x709 x159))))
(assert (= x1009 (and x4495 (not x2056))))
(assert (= (+ 4 (x2856 x4255)) (x2856 (x2808 x4255 4))))
(assert (x1513 x2270))
(assert (x1513 x1482))
(assert (x1513 x2482))
(assert (= (x2615 x213) 0))
(assert (= (x354 x1839) (ite x1846 (ite x4600 (x3910 x1839) (x4740 x1839)) (x4740 x1839))))
(assert (x1513 x2443))
(assert (= x643 (=> (and (= (x1229 (+ x3460 x3552)) x35) (= (< x35 x3552) x637)) (and (=> (not x637) x3160) (=> x637 x347)))))
(assert (x1513 x1300))
(assert (x1513 x696))
(assert (x1513 x3730))
(assert (x1513 x31))
(assert (= (ite x2139 (x1436 (x1894 x3392)) (ite (and x865 x4586 (not x3527)) (x2316 (x1894 x3392)) (x1720 (x1894 x3392)))) (x2476 (x1894 x3392))))
(assert (= (x208 x159) (ite x2139 (ite (and x4337 x526) (x24 x159) (x3846 x159)) (ite (and (not x3527) x4586 x865) (x64 x159) (x3846 x159)))))
(assert (x1513 x3589))
(assert (x1513 x2015))
(assert (x1513 x3750))
(assert (= 0 (x3535 x3688)))
(assert (= 904250603428552709895185118199468575982109441609966099573332780532423983104 (x2856 (x4822 904250603428552709895185118199468575982109441609966099573332780532423983104))))
(assert (x1513 x1441))
(assert (x1513 x4555))
(assert (x3166 x4957))
(assert (x1513 x1284))
(assert (x1513 x4329))
(assert (= (x1983 x3754) (ite x3925 (ite x1906 (x2602 x3754) (x1939 x3754)) (x1939 x3754))))
(assert (= (ite (= (x4822 56) x2218) x4322 (x1377 (x4822 56))) (x201 (x4822 56))))
(assert (= (and (not x1426) x3942) x1718))
(assert (x1513 x861))
(assert (x1513 x1849))
(assert (= (x201 x2577) (ite (= x2218 x2577) x4322 (x1377 x2577))))
(assert (x1513 x2570))
(assert (x2349 x3057 x4841))
(assert (x1513 x4009))
(assert (x1513 x1738))
(assert (x1513 x2635))
(assert (x1513 x1390))
(assert (x3166 x4483))
(assert (= (x1939 x634) (ite (= x4679 x634) x1441 (x1377 x634))))
(assert (x2349 x2394 x69))
(assert (= (ite (and x2221 x3013) (x4628 x4766) (x4638 x4766)) (x4349 x4766)))
(assert (x1513 x2389))
(assert (x1513 x1977))
(assert (x1513 x3517))
(assert (x1513 x3675))
(assert (x1513 x925))
(assert (x1513 x734))
(assert (x1513 x3801))
(assert (= (=> (and (= x3555 x600) (= x3397 (x2098 (x1894 274184521717934524641157099916833587240))) (= (x2098 (x1894 x3392)) x4392) (= x3035 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4392) (>= x3397 0)))) (and (=> x3035 x2079) (=> (and (not x3035) (= 0 x3602) (= x2368 0)) x1867))) x2629))
(assert (x1513 x2595))
(assert (x3166 x351))
(assert (= (=> (and (= 274184521717934524641157099916833587240 x68) (<= 0 x264) (= x3039 x3268) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x264) (= (x2976 x2022) x264) (= x2022 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= (< x264 x3774) x4059)) (and (=> x4059 x4653) (=> (not x4059) x3379))) x4852))
(assert (= (x15 x1039) (ite (= x1039 x4178) x2443 (x1267 x1039))))
(assert (x2417 x4289))
(assert (= (x4737 x4766) (ite (= x1754 x4766) x4637 (x3768 x4766))))
(assert (= (=> (and (= (= x441 0) x2554) (= (= x441 (ite x504 1 0)) x2101) (= (x1832 x1696) x441) (= (x1229 (+ x4175 32)) x1696) (= (not x2554) x504)) (and (=> x2101 x628) (=> (not x2101) x2460))) x2496))
(assert (x1513 x2838))
(assert (= x274 (=> (= (= 274184521717934524641157099916833587202 x1092) x4124) (and (=> (and (= x3521 x147) (= x3521 x3465) (>= 1461501637330902918203684832716283019655932542975 x1635) (= (x4575 (- x2044 x147)) x4569) (= x1934 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3769 x3521)) (= x3349 x147) (not (= 1889567281 x4062)) (= x1652 (x4575 (- x3561 4))) (= x3561 x1684) (= x2375 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= (x102 x2375) x2044) (not x3532) (not (= 2514000705 x4062)) (not x2290) (> x2957 0) (<= x2044 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1635 x205) (= x2833 x3769) (not x4159) (= x3878 (< x2044 x3521)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2973) (not (< x3561 4)) x4124 (= (x4101 (x1894 x1635) (x4822 1) 0) x3669) (<= x3769 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x3878) (= x493 (+ x3465 x2833)) (= x2927 x1000) (= x850 x1635) (= x2839 274184521717934524641157099916833587240) (>= x2044 0) (= x3532 (or (> x1652 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1652 64) (= true (<= x1652 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x3769 (x4743 x3669)) (= 32 x1344) (= (x2328 (x1894 274184521717934524641157099916833587202)) x2957) (= x1874 (x4101 (x1894 x1635) (x4822 1) 0)) (<= 0 x3769) (= 2835717307 x4062) (= x2290 (< x2044 x147)) (= 68 x3561) (= (>= (+ x3521 x3769) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4159) (not (< x4062 826074471)) (= 1 x3623) (not (= 826074471 x4062)) (= 274184521717934524641157099916833587240 x1217)) x2929) (=> (not x4124) x2875)))))
(assert (= x528 (and (not x4386) x4439)))
(assert (x3166 x1781))
(assert (x1513 x2045))
(assert (= 18446744073709551615 (x2856 (x4822 18446744073709551615))))
(assert (= (x15 x168) (ite (= x4178 x168) x2443 (x1267 x168))))
(assert (x1513 x382))
(assert (= (ite x1846 (ite x4600 (x534 x3632) (x201 x3632)) (x201 x3632)) (x1199 x3632)))
(assert (x1513 x331))
(assert (= x3914 (and x4522 (not x2974))))
(assert (x1513 x1616))
(assert (= (x2005 x1111) (ite x2139 (x3389 x1111) (ite (and x4586 (not x3527) x865) (x3049 x1111) (x3389 x1111)))))
(assert (= (x3163 x1328) (ite (and x1970 x4678) (x793 x1328) (x2007 x1328))))
(assert (x1513 x1189))
(assert (= (x1582 (x1894 x3441)) (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x3441)) x4701 (x1912 (x1894 x3441)))))
(assert (x1513 x4621))
(assert (x1513 x2065))
(assert (x1513 x1356))
(assert (x1513 x3772))
(assert (x1513 x4226))
(assert (= x4587 (=> (and (= x2018 (= x219 x2332)) (= x4120 x2332)) (and (=> (not x2018) x347) (=> x2018 x79)))))
(assert (x1513 x2973))
(assert (x1513 x1442))
(assert (x1513 x2753))
(assert (= (ite x3925 (ite x1906 (x3726 x1731) (x1625 x1731)) (x4435 x1731)) (x130 x1731)))
(assert (= (x1908 x3495) (ite (= x1420 x3495) x31 (x4952 x3495))))
(assert (x1513 x2511))
(assert (x1513 x4115))
(assert (x1513 x3260))
(assert (x1513 x3818))
(assert (x1513 x4915))
(assert (x1513 x2935))
(assert (x1513 x2047))
(assert (x1513 x4608))
(assert (x1513 x2484))
(assert (x1513 x418))
(assert (= (x4822 1858285468) (x1894 1858285468)))
(assert (= (ite x3925 (ite x1906 (x3244 x1307) (x3126 x1307)) (x3171 x1307)) (x102 x1307)))
(assert (x1513 x4133))
(assert (= (x4054 x4766) (ite (= x4766 356) x2835 (x4231 x4766))))
(assert (= (ite x674 (ite (and x4128 x4346) (x4784 x3713) (ite (and x355 x2985) (x4784 x3713) (x2948 x3713))) (ite (and (not x4004) x4137 x4909) (x2459 x3713) (x4784 x3713))) (x3824 x3713)))
(assert (= (x15 x1348) (ite (= x1348 x4178) x2443 (x1267 x1348))))
(assert (x1513 x1226))
(assert (=> (> (+ 10000 1) x1092) (= (x1894 x1092) (x4822 x1092))))
(assert (x1513 x3530))
(assert (= (x99 x67) (ite x4806 (x1414 x67) (ite (and x2519 (not x2648) x1313) (x2080 x67) (x1414 x67)))))
(assert (= (x4632 x4340) (ite (= x4340 x3396) x508 (x3312 x4340))))
(assert (= (and x2991 (not x2728)) x4528))
(assert (= (x4453 256) 0))
(assert (x1513 x3578))
(assert (x1513 x2106))
(assert (x1513 x17))
(assert (x1513 x515))
(assert (x1513 x1940))
(assert (x1513 x1391))
(assert (= (x1983 x4620) (ite x3925 (ite x1906 (x2602 x4620) (x1939 x4620)) (x1939 x4620))))
(assert (= x1066 (and (not x4757) x549)))
(assert (= x1629 (and x4829 x4980)))
(assert (= (ite (and (not x179) x3767) (x3282 x851) (ite x2999 (ite x938 (x2735 x851) (x2471 x851)) (x2471 x851))) (x2293 x851)))
(assert (x2417 x3907))
(assert (x1513 x1299))
(assert (x1513 x860))
(assert (= (ite x674 (ite (and x4128 x4346) (x572 x127) (ite (and x355 x2985) (x572 x127) (x291 x127))) (ite (and (not x4004) x4909 x4137) (x3580 x127) (x572 x127))) (x4306 x127)))
(assert (x1513 x3063))
(assert (x1513 x3074))
(assert (= (x1953 x2843) (ite (= x2843 x4746) x3108 (x675 x2843))))
(assert (= (x572 x3905) (ite x4806 (ite (and x238 x641) (x102 x3905) (x4644 x3905)) (ite (and (not x2648) x1313 x2519) (x4924 x3905) (x102 x3905)))))
(assert (= (x1894 274184521717934524641157099916833587202) (x4822 274184521717934524641157099916833587202)))
(assert (x1513 x1884))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x4959)) x3573 (x874 (x1894 x4959))) (x1083 (x1894 x4959))))
(assert (x1513 x4447))
(assert (= x191 (=> (and (= (< x4015 x1356) x108) (= x4015 (x1229 (+ x3962 x1356)))) (and (=> x108 x92) (=> (and (= x2836 x4037) (not x108) (= x4350 1) (= x1776 (x4101 (x1894 x3800) (x4822 1) 0)) (= x2466 32)) x3425)))))
(assert (= (ite x1846 (ite x4600 (x534 x87) (x201 x87)) (x201 x87)) (x1199 x87)))
(assert (= (and x848 (not x1314)) x4408))
(assert (= (ite x674 (ite (and x4128 x4346) (x572 x1154) (ite (and x2985 x355) (x572 x1154) (x291 x1154))) (ite (and x4137 x4909 (not x4004)) (x3580 x1154) (x572 x1154))) (x4306 x1154)))
(assert (x1513 x4899))
(assert (= (ite x674 (ite (and x4128 x4346) (x572 x3905) (ite (and x355 x2985) (x572 x3905) (x291 x3905))) (ite (and x4909 (not x4004) x4137) (x3580 x3905) (x572 x3905))) (x4306 x3905)))
(assert (= (x1983 x216) (ite x3925 (ite x1906 (x2602 x216) (x1939 x216)) (x1939 x216))))
(assert (x1513 x3371))
(assert (= x397 (=> (= (= x3473 274184521717934524641157099916833587206) x355) (and (=> (and (= x2287 x3635) (= (x99 x4347) x2794) (not (= 157198259 x2802)) (= x4347 (x4101 (x1894 274184521717934524641157099916833587240) x3213 0)) (= x1809 (x3791 x449)) (= x4262 (+ x4201 x3044)) (= x449 (x4101 (x1894 x2287) (x4822 1) 0)) x355 (not x4174) (<= x2794 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1809 x4201) (= x3257 x3343) (= (> x2206 x2794) x3007) (= x3779 (x4575 (- x3625 4))) (>= x2794 0) (not x2183) (not (< x3625 4)) (not (= x2802 404098525)) (= x4497 (x4568 x2638)) (= x1281 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1809 x2206))) (= 100 x3625) (= x3522 (x4575 (- x2794 x3257))) (= (> x2206 x2794) x2183) (not x3285) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x764) (= (< x4497 x3257) x3285) (= (or (and (= true (<= x3779 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x3779)) (> x3779 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4174) (= (x2328 (x1894 274184521717934524641157099916833587206)) x3333) (= x3213 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 2) 0)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x2638) (= 1 x470) (= (< x4497 x2206) x1028) (not x3007) (> 826074471 x2802) (>= 1461501637330902918203684832716283019655932542975 x2287) (not (= x2802 117300739)) (<= 0 x4497) (= x3376 (x4101 (x1894 274184521717934524641157099916833587240) x4527 0)) (= 599290589 x2802) (not x1281) (= (x4101 (x1894 x2287) (x4822 1) 0) x1397) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4497) (= x4919 x2897) (= x2926 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 274184521717934524641157099916833587240 x1872) (= x2206 x3044) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1809) (= x3625 x4379) (= x2206 x3257) (= x1251 274184521717934524641157099916833587240) (= 274184521717934524641157099916833587240 x1173) (not x1028) (= x1637 274184521717934524641157099916833587240) (< (+ x2206 x1809) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 2) 0) x4527) (= (x4575 (- x4497 x3257)) x1964) (= x903 x2287) (= 274184521717934524641157099916833587240 x3581) (< 0 x3333) (<= 0 x1809) (= x2488 274184521717934524641157099916833587240)) x2606) (=> (not x355) x1288)))))
(assert (= (x15 x837) (ite (= x4178 x837) x2443 (x1267 x837))))
(assert (x1513 x3482))
(assert (= (or x3188 (and (not x108) x2089)) x4071))
(assert (= (ite (= x1039 x3495) x2204 (x3566 x3495)) (x4952 x3495)))
(assert (x2349 x2232 x3407))
(assert (= (x2502 x3713) (ite x2139 (x3824 x3713) (ite (and (not x3527) x4586 x865) (x381 x3713) (x3824 x3713)))))
(assert (x1513 x3961))
(assert (x1513 x4807))
(assert (x1513 x4340))
(assert (x1513 x3273))
(assert (x2349 x1385 x4617))
(assert (x1513 x3412))
(assert (x1513 x1784))
(assert (x1513 x1350))
(assert (x1513 x1364))
(assert (= (x1267 x1540) (ite (= x1540 x411) x2156 (x3604 x1540))))
(assert (x1513 x512))
(assert (x1513 x4470))
(assert (x1513 x639))
(assert (= x2444 (=> (and (= x3616 (x1319 1461501637330902918203684832716283019655932542975 x4483)) (= x4030 (x4101 (x1894 x2213) (x4822 208) 0)) (= (x3604 x4030) x4483) (= x1279 (= x3616 0))) (and (=> x1279 x2971) (=> (not x1279) x3239)))))
(assert (x1513 x1553))
(assert (x1513 x3202))
(assert (= 0 (x3572 160)))
(assert (x1513 x304))
(assert (= (x1267 (x4822 56)) (ite (= (x4822 56) x411) x2156 (x3604 (x4822 56)))))
(assert (= 4294967295 (x2856 (x4822 4294967295))))
(assert (x1513 x4360))
(assert (x3166 x2691))
(assert (= (x201 x3107) (ite (= x2218 x3107) x4322 (x1377 x3107))))
(assert (x1513 x1559))
(assert (= (ite (= x411 x3051) x2156 (x3604 x3051)) (x1267 x3051)))
(assert (x1513 x3871))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x2419)) x4370 (x2557 (x1894 x2419))) (x853 (x1894 x2419))))
(assert (= true x3949))
(assert (x1513 x3328))
(assert (x1513 x1380))
(assert (x1513 x3631))
(assert (=> (< (- x368 1) 10000) (= (x4822 x368) (x1894 x368))))
(assert (x1513 x3383))
(assert (= x2755 (x2856 (x1894 x2755))))
(assert (= x3146 (or x4577 (and (not x2223) x963))))
(assert (= (ite (= x4679 x4358) x1441 (x1377 x4358)) (x1939 x4358)))
(assert (= (or (and (not x3739) x2709) (and x3015 x3899) (and x2208 x1218) (and x2713 x2376) (and x2559 x1357) (and (not x1596) x1363) (and (not x536) x667) (and x2043 x4917) (and x649 x268) (and (not x111) x3114) (and (not x3901) x1378) (and x1974 x3998)) x438))
(assert (x1513 x1061))
(assert (x2417 x1236))
(assert (x1513 x3688))
(assert (= (x2856 (x1894 x4236)) x4236))
(assert (x1513 x3657))
(assert (x4612 x762 x1410 x4868 x4727))
(assert (x1513 x1799))
(assert (x1513 x3552))
(assert (x305 x100 x4173 x3435 x3794))
(assert (x1513 x4780))
(assert (x1513 x4901))
(assert (= (ite (= 132 x3959) 274184521717934524641157099916833587240 (x3227 x3959)) (x2548 x3959)))
(assert (= (and x2823 (not x1585)) x1933))
(assert (= x4415 x750))
(assert (x1513 x804))
(assert (= x2244 (x2856 (x1894 x2244))))
(assert (= x3986 (=> (= 0 x1509) x2842)))
(assert (= (x3566 x1759) (ite (and (not x179) x3767) (x3604 x1759) (ite x2999 (ite x938 (x1570 x1759) (x3604 x1759)) (x3604 x1759)))))
(assert (= (ite (= x2241 x4382) x844 (x1852 x4382)) (x3604 x4382)))
(assert (x1513 x2640))
(assert (x1564 x1204 x3593))
(assert (x1513 x1225))
(assert (x1513 x200))
(assert (= (=> (and (= (x2328 (x1894 x3964)) x1362) (= x4338 (x1229 (+ 100 x1950))) (= (x1229 (+ 64 x4564)) x4946) (= (= x1362 0) x4464) (= x718 274184521717934524641157099916833587240) (= (x1319 1461501637330902918203684832716283019655932542975 x2008) x219) (= x525 (x1229 (+ x4564 32))) (= x942 (x4575 (- x4338 x1950))) (= x4564 x2229) (= (x1229 (+ x1950 4)) x2229)) (and (=> x4464 x2460) (=> (not x4464) x242))) x2159))
(assert (= (ite (and x3767 (not x179)) (x3604 x2250) (ite x2999 (ite x938 (x1570 x2250) (x3604 x2250)) (x3604 x2250))) (x3566 x2250)))
(assert (x1513 x3215))
(assert (x2349 x220 x2150))
(assert (= (x1894 1889567281) (x4822 1889567281)))
(assert (x1513 x3199))
(assert (x1513 x2301))
(assert (x2417 x2922))
(assert (x3166 x2059))
(assert (x1513 x4940))
(assert (x1513 x2190))
(assert (x1513 x2673))
(assert (x1513 x3734))
(assert (= (x4246 x1139) (ite (= x1139 x1971) x2478 (x2174 x1139))))
(assert (= (=> (and (not (> x2480 x4378)) (= (x4575 (- x4448 x3265)) x4378) (= x3938 x3289) (= (x1229 (+ x2480 x250)) x569) (not (> x569 x1107))) x4167) x389))
(assert (= (=> (and (= x3083 (x4101 (x1894 x519) (x4822 1) 0)) (= (< x4519 x2647) x399) (= x4303 274184521717934524641157099916833587240) (= x3713 (x4101 (x1894 274184521717934524641157099916833587240) x3418 0)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 2) 0) x3418) (= 274184521717934524641157099916833587240 x2743) (= (x484 x3713) x4519) (<= 0 x4519) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4519)) (and (=> (not x399) x4279) (=> x399 x3986))) x2908))
(assert (= (=> (and (= (x1229 (+ x2660 4)) x994) (= (x3566 x4199) x3311) (= x2762 (x2328 (x1894 x3964))) (= x3961 274184521717934524641157099916833587240) (= x994 x3828) (= x3051 x4255) (= (x2808 x4255 1) x4199) (= x739 (= x2762 0)) (= x3964 (x1319 1461501637330902918203684832716283019655932542975 x1442)) (= (x3566 x4478) x1442) (= (x3566 x3051) x3451)) (and (=> (and (not x739) (or (and (= x517 x2874) (not x781)) (and (> 4294967296 x2572) (= x2874 1) x781)) (= (> x517 0) x781)) x875) (=> x739 x2460))) x3735))
(assert (= (ite x94 (ite x3368 (x4553 x851) (x2293 x851)) (ite (and x287 (not x2427) x1423) (x3010 x851) (x2293 x851))) (x4505 x851)))
(assert (x1513 x807))
(assert (= (x201 x2639) (ite (= x2639 x2218) x4322 (x1377 x2639))))
(assert (x1513 x4610))
(assert (= (and (not x3419) x308) x1911))
(assert (x1513 x3832))
(assert (x1513 x4655))
(assert (x1513 x1156))
(assert (= (ite (= x2535 x4679) x1441 (x1377 x2535)) (x1939 x2535)))
(assert (= (x2856 (x1894 x2484)) x2484))
(assert (= (x853 (x1894 x1299)) (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x1299)) x4370 (x2557 (x1894 x1299)))))
(assert (x2417 x4609))
(assert (x1513 x3887))
(assert (x1513 x2980))
(assert (x1513 x1152))
(assert (= (ite x3925 (ite x1906 (x1898 (x1894 x1092)) (x1083 (x1894 x1092))) (x47 (x1894 x1092))) (x1451 (x1894 x1092))))
(assert (x1513 x1590))
(assert (= x1996 (=> (and (< x3810 826074471) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2434) (and (= (<= x2434 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2434 96))) x4018) (= (x2328 (x1894 274184521717934524641157099916833587206)) x1329) (= x4341 x3067) (not (> 4 x830)) (not (= 404098525 x3810)) (= x32 x830) (< 0 x1329) (not (= x3810 157198259)) (= (x4575 (- x830 4)) x2434) (= 599290589 x3810) (= x980 x1849) (= x74 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 117300739 x3810)) (= x830 100)) (and (=> (not x4018) x4295) (=> x4018 x1853)))))
(assert (= x707 (or x1960 x256)))
(assert (x1513 x3716))
(assert (x1513 x3903))
(assert (x1513 x3917))
(assert (x1513 x946))
(assert (= (x3604 (x4822 56)) (ite (= (x4822 56) x2241) x844 (x1852 (x4822 56)))))
(assert (= (x4822 1461501637330902918203684832716283019655932542975) (x1894 1461501637330902918203684832716283019655932542975)))
(assert (= (=> (= (= x2419 274184521717934524641157099916833587202) x4535) (and (=> (and (not (= 404098525 x4815)) (= x4419 x1492) (= x1169 274184521717934524641157099916833587240) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2490) (= x1209 (x4101 (x1894 x1492) (x4822 2) 0)) (= x1310 x2617) (= x4403 x3730) (= x4815 599290589) (= x734 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2199 (> x3730 x3034)) (= x4210 (+ x4437 x1829)) (not x2937) (not x2016) (= (x3126 x561) x3034) (= x2016 (> x4368 x3294)) (= x3294 (x3248 x446)) (= x446 (x4101 (x1894 274184521717934524641157099916833587240) x3545 0)) (= (x4101 (x1894 274184521717934524641157099916833587240) x1209 0) x2397) (= x677 x2358) (= x1873 x1492) (= x1449 (x4575 (- x677 4))) (= x4261 (x4575 (- x3294 x3730))) (= x1380 274184521717934524641157099916833587240) (= x211 (x4101 (x1894 x1492) (x4822 1) 0)) (= x4434 274184521717934524641157099916833587240) (= (x4575 (- x3034 x3730)) x3781) (not (> 4 x677)) (> x4356 0) (not x3516) (< x4815 826074471) (= x2405 (>= (+ x4368 x2490) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2405) (< (+ x4368 x2490) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3516 (> x4368 x3294)) (not x2199) (<= 0 x2490) (= x2937 (> x4368 x3034)) (= 1 x2661) (= x561 (x4101 (x1894 x1492) (x4822 1) 0)) (= x3517 32) (<= x1492 1461501637330902918203684832716283019655932542975) (<= 0 x3034) (>= x3294 0) (= x3771 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x2490 x4437) (= x1829 x4368) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3294) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x1586) (= (x4101 (x1894 x1492) (x4822 2) 0) x3545) (not (= 157198259 x4815)) x4535 (= x1061 274184521717934524641157099916833587240) (= x4368 x3730) (= x4356 (x2328 (x1894 274184521717934524641157099916833587202))) (not x1737) (= 100 x677) (= (or (and (> 96 x1449) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1449))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1449)) x1737) (<= x3034 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2490 (x3525 x3771)) (not (= x4815 117300739))) x1692) (=> (not x4535) x1479))) x95))
(assert (x1513 x2099))
(assert (x1513 x4313))
(assert (= (x201 x2508) (ite (= x2218 x2508) x4322 (x1377 x2508))))
(assert (x1513 x850))
(assert (x1513 x2129))
(assert (= (=> (and (= x4129 (x84 x2284)) (= (> x4129 0) x4969)) (and (=> x4969 x4916) (=> (not x4969) x809))) x4880))
(assert (x1513 x1026))
(assert (= (or (and x1044 (not x699)) x4881) x2124))
(assert (= (x1939 x4858) (ite (= x4858 x4679) x1441 (x1377 x4858))))
(assert (= (x2007 x4094) (ite (= x4094 x275) x4403 (x2413 x4094))))
(assert (= x4203 (and x3109 x459)))
(assert (= (and x4029 x3851) x4944))
(assert (x2349 x4725 x4558))
(assert (x1513 x1546))
(assert (= (x4934 x127) (ite (= x3083 x127) x3273 (x4763 x127))))
(assert (= (and x1378 x3901) x3015))
(assert (= true x2967))
(assert (x1513 x4099))
(assert (= (=> (and (= (x157 x4175) x4417) (= (or (and (> 32 x4417) (= (<= x4417 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x4417 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x890)) (and (=> x890 x2460) (=> (not x890) x2496))) x1831))
(assert (= (x1894 826074471) (x4822 826074471)))
(assert (x1513 x3522))
(assert (= x1588 (=> (and (not (= 0 x3867)) (= (> x171 0) x3682) (= (x2328 (x1894 x2419)) x171)) (and (=> (and (= x4642 x4460) (= (x1807 (x1894 274184521717934524641157099916833587240)) x4642) (not x3682) (= x299 x4145)) x407) (=> x3682 x670)))))
(assert (x1513 x3070))
(assert (x1513 x1788))
(assert (x3166 x1042))
(assert (= (or (and x4619 x3216) (and x4935 x3094) (and x4549 x2404)) x3848))
(assert (x1513 x4833))
(assert (x1513 x2661))
(assert (= x3980 (or (and (not x592) x383) (and x564 (not x4200)))))
(assert (x1513 x881))
(assert (x1513 x2284))
(assert (x1513 x118))
(assert (x1513 x4416))
(assert (x1513 x1275))
(assert (= (x4343 x1328) (ite (= 356 x1328) x3845 (x2020 x1328))))
(assert (x1513 x4452))
(assert (=> (> (+ 10000 1) x2600) (= (x4822 x2600) (x1894 x2600))))
(assert (x1513 x3069))
(assert (= (or (and x3993 x1024) (and x3250 x2134) (and x4645 x2824) (and x4684 (not x3261)) (and x2283 x1155) (and x4640 x3537)) x4948))
(assert (= x4370 (x853 (x1894 274184521717934524641157099916833587240))))
(assert (= (x3091 x4704) 0))
(assert (x1513 x3660))
(assert (= x3425 (=> (and (= x3963 x2466) (= x4793 x4350)) x3404)))
(assert (=> (> (+ 10000 1) x3972) (= (x4822 x3972) (x1894 x3972))))
(assert (= (x3846 x159) (ite x674 (ite (and x4346 x4128) (x4568 x159) (ite (and x2985 x355) (x4090 x159) (x4568 x159))) (ite (and x4137 x4909 (not x4004)) (x3698 x159) (x4568 x159)))))
(assert (= x817 (=> (and (= (x201 x491) x2372) (= x2303 x2381) (= x395 (* x914 x3240)) (< (* x3240 x914) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 599290589 x4720)) (= x2233 (- (/ x3706 10000) (uninterp_frac x3706 10000))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2233 x400)) (= (x1377 (x4822 106)) x1817) (= x613 (x1319 18446744073709551615 x1805)) (= x100 (x1377 x2218)) (= x785 x1698) (= x3526 (x201 x4489)) (= (x2328 (x1894 x3303)) x3889) (= (x4575 (- x2689 x4939)) x3383) (= 924834022 x4720) (= x4322 (x1229 (+ x4693 (uninterp_mod (ite x749 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2233 x3796) (= (x1319 255 x1817) x596) (not (< x3366 4)) (< 0 x2369) (= (x1319 1461501637330902918203684832716283019655932542975 x2394) x2381) (= x4615 (- (/ x4334 10000) (uninterp_frac x4334 10000))) (not (= 455944412 x4720)) (= x3984 (x1319 255 x1399)) (< (* x3383 x1686) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x3984 0) (not (< x2233 x4615)) (= x4093 (x4575 (- x3366 4))) (= (x2808 x116 4) x1346) (= (x2808 x116 3) x4068) (= x4431 (x201 (x4822 1))) (= (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1698)) x218) (= (< 0 x3889) x3447) (< (+ x1698 x2233) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2303 (x1319 1461501637330902918203684832716283019655932542975 x2008)) (= x491 (x2808 x116 5)) (= (x2808 x116 2) x4489) (= x2411 (- (/ x2356 26959946667150639794667015087019630673637144422540572481103610249216) (uninterp_frac x2356 26959946667150639794667015087019630673637144422540572481103610249216))) (= x2419 (x1319 1461501637330902918203684832716283019655932542975 x712)) (= (- (/ x4431 79228162514264337593543950336) (uninterp_frac x4431 79228162514264337593543950336)) x545) (= x1750 x3526) (not (< x924 x4939)) (= (- (/ x315 1461501637330902918203684832716283019655932542976) (uninterp_frac x315 1461501637330902918203684832716283019655932542976)) x1399) (= x3303 (x1319 1461501637330902918203684832716283019655932542975 x2008)) (= x4334 (* x2233 x400)) (= x2369 (x2328 (x1894 274184521717934524641157099916833587240))) (= x315 (x1377 x2218)) (= x4957 (- (/ x2083 1461501637330902918203684832716283019655932542976) (uninterp_frac x2083 1461501637330902918203684832716283019655932542976))) (= (x1319 115792089237316195423570984636004990333889740523700931696805413995650331181055 x100) x4693) (= x712 (x201 x1346)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3526 x2982)) (= (x201 x1346) x2083) (= (x1319 4294967295 x2411) x3240) (= x2982 x4874) (= (x201 x4068) x1698) (= (x1319 65535 x545) x400) (not (or (> x4093 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x4093) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4093))))) (= (* x3383 x1686) x3021) (not (< x4720 455944412)) (= x4939 (x1319 18446744073709551615 x4957)) (= (x2808 x116 6) x2218) (= x395 x1686) (= (+ x1750 x4874) x2402) (= (x201 x2218) x2394) (< x924 x613) (= (- (/ x3021 31536000) (uninterp_frac x3021 31536000)) x3706) (= (- (/ x2372 1461501637330902918203684832716283019655932542976) (uninterp_frac x2372 1461501637330902918203684832716283019655932542976)) x1805) (= x914 (x201 x4068)) (= (+ x3796 x785) x4403) (= x749 false) (< x4720 1166402363) (= x2982 (x4575 (- x2233 x4615))) (= 0 x596) (not (= x4720 511946350)) (< x4720 2311529814) (= (x4101 (x1894 x2484) (x4822 2) 0) x116) (= x2484 x3402) (= (x201 x491) x2356)) (and (=> (not x3447) x1294) (=> x3447 x2767)))))
(assert (x1513 x3025))
(assert (x1513 x2023))
(assert (x1513 x715))
(assert (x1513 x1079))
(assert (x1513 x1719))
(assert (= (x1983 x156) (ite x3925 (ite x1906 (x2602 x156) (x1939 x156)) (x1939 x156))))
(assert (= x4847 (or (and x1366 (not x1785)) x433)))
(assert (x1513 x1407))
(assert (x1513 x3488))
(assert (x1513 x3018))
(assert (x1513 x4161))
(assert (x778 x3502 x1558 x2649 x416))
(assert (x1513 x3441))
(assert (x2349 x3685 x2529))
(assert (x1513 x4716))
(assert (x4263 x4427 x2801 x4395 x1576))
(assert (= 0 (x975 x101)))
(assert (= x308 (and x893 (not x739))))
(assert (= (x15 x2700) (ite (= x2700 x4178) x2443 (x1267 x2700))))
(assert (=> (> (+ 10000 1) x1165) (= (x4822 x1165) (x1894 x1165))))
(assert (= 0 (x4453 160)))
(assert (x2349 x2059 x4795))
(assert (x1513 x404))
(assert (x1513 x3115))
(assert (= (and x814 x3335) x2742))
(assert (= (ite x3925 (ite x1906 (x2602 x1746) (x1939 x1746)) (x1939 x1746)) (x1983 x1746)))
(assert (x1513 x4084))
(assert (x1513 x2084))
(assert (x1513 x2922))
(assert (x1513 x173))
(assert (x1513 x3))
(assert (x1513 x2488))
(assert (= (ite (and (not x179) x3767) (x3604 x4478) (ite x2999 (ite x938 (x1570 x4478) (x3604 x4478)) (x3604 x4478))) (x3566 x4478)))
(assert (x2349 x351 x2898))
(assert (x1513 x2938))
(assert (= (ite x3925 (ite x1906 (x3726 x1036) (x1625 x1036)) (x4435 x1036)) (x130 x1036)))
(assert (x3166 x476))
(assert (x1513 x1638))
(assert (= (and (not x5) x4663) x4706))
(assert (x1513 x275))
(assert (= (and x4004 x4909) x4128))
(assert (x778 x4027 x126 x4293 x330))
(assert (= (x520 x1036) (ite x94 (ite x3368 (x3884 x1036) (x2174 x1036)) (ite (and (not x2427) x1423 x287) (x3511 x1036) (x2174 x1036)))))
(assert (x3166 4294967295))
(assert (x1513 x3602))
(assert (x1513 x541))
(assert (x1513 x1048))
(assert (= (x76 x2022) (ite (= x2022 x261) x1689 (x709 x2022))))
(assert (= (or (and x1096 x4124) (and x641 x238)) x4806))
(assert (= (x4441 x4340) (ite (= x1029 x4340) x1849 (x4943 x4340))))
(assert (x2417 274184521717934524641157099916833587206))
(assert (x1513 x1973))
(assert (= x2419 (x2856 (x1894 x2419))))
(assert (x1513 x344))
(assert (x1513 x3972))
(assert (x1513 x4559))
(assert (= (and (not x2043) x4917) x1218))
(assert (x1513 x3481))
(assert (=> (< (- x2962 1) 10000) (= (x1894 x2962) (x4822 x2962))))
(assert (x1513 x3823))
(assert (x1513 x3000))
(assert (x1513 x3720))
(assert (x1513 x4224))
(assert (= (ite (= x127 x319) x3760 (x4505 x127)) (x4763 x127)))
(assert (x1513 x2170))
(assert (x1513 x3294))
(assert (= (+ 5 (x2856 x3417)) (x2856 (x2808 x3417 5))))
(assert (x3166 x4915))
(assert (= (=> (and (= (x888 x216) x80) (= (< 0 x673) x3527) (= (x1815 x1632) x732) (= x475 (x1319 1461501637330902918203684832716283019655932542975 x4422)) (= (x2328 (x1894 x4676)) x673) (= x788 (x4101 (x1894 x2979) (x4822 208) 0)) (= x1632 (x4101 (x1894 x2979) (x4822 208) 0)) (not (= 0 x2482)) (= x3409 (x4101 (x1894 x2979) (x4822 208) 0)) (not (= x475 0)) (= x3365 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x4142)) (= (x1504 x4358) x2462) (= (x1319 1461501637330902918203684832716283019655932542975 x174) x2482) (= x861 0) (= (x1319 1461501637330902918203684832716283019655932542975 x2462) x3972) (= (x1504 x634) x4142) (= (x3640 x4620) x356) (= x4358 (x4101 (x1894 x2979) (x4822 208) 0)) (= x178 (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x732)) (= (x888 x788) x4422) (= x216 (x4101 (x1894 x3972) (x4822 209) 0)) (= x4676 (x1319 1461501637330902918203684832716283019655932542975 x356)) (= 0 x2000) (not (= x3972 0)) (= x1073 0) (= (x1504 x3409) x174) (= x89 (x4575 (- x80 1))) (= x634 (x4101 (x1894 x2979) (x4822 210) 0)) (not (< x80 1)) (= x3365 x3229)) (and (=> (and (= x4056 (x1720 (x1894 274184521717934524641157099916833587240))) (or (and (= x4184 0) (= 0 x4692) (not x4586)) (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x429 (x3766 (x1894 x2482)))) x3036) (= x4850 x4184) x125 (= x2341 (x1229 (+ (uninterp_mod (x3766 (x1894 x2482)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x429))) (= x2361 (- (x1720 (x1894 274184521717934524641157099916833587240)) x429)) (= (x1229 (+ (uninterp_mod (x2539 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4618)) x2953) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4618 (x2539 (x1894 274184521717934524641157099916833587240)))) x125) (= x4896 (- (x2622 (x1894 x2482)) x4618)) x4586 x3036 (= x4618 (ite (= 0 x2881) x429 0)) (= x2881 x4692) (or (and (= (x2406 (x1894 274184521717934524641157099916833587240)) x187) (> 4294967296 x4850) (= x4764 (x2406 (x1894 x2482))) x1980 (= (= (x1798 (x1894 x2482)) x4764) x321) x1568 x321 (= x1568 (<= x187 (x1798 (x1894 274184521717934524641157099916833587240))))) (not x1980)) (= x1980 (> x2881 0)))) (not (< x4056 x429)) (< 0 x4692) (= (= x4184 0) x4844) (= (x1720 (x1894 274184521717934524641157099916833587240)) x1239) (= (x1720 (x1894 x2482)) x4328) (= x4586 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4328 x429)) (<= x429 x1239))) (not x3527)) x1901) (=> (and (= (x1229 (+ x2810 36)) x384) (= (x1229 (+ 32 x1460)) x3750) (= (x2780 x3966) x77) x1813 (= (> x372 0) x1813) (= (x2328 (x1894 x4676)) x372) (= (< 0 x3381) x3748) (= x1315 (x4575 (- x1673 x2810))) (= x3966 (x1229 (+ 32 x2810))) (= (x1229 (+ x2810 100)) x1673) x3527 (or (and (= (x29 x4704) x556) (= x452 (< 32 x3381)) (= x2806 x3817) x3748 (= x3966 x4704) (or (and (= 32 x1818) (not x452)) (and (or (and (= 64 x1818) (not x1957)) (and (or (and (= x1818 96) (not x4762)) (and (not x1875) x4762 (= x2448 (x1229 (+ 128 x2810))) (= (< 128 x3381) x1875) (= x1368 (x29 x2448)) (= x1336 (x1229 (+ x1673 160))) (= 128 x1818))) (= (x29 x4578) x3145) x1957 (= x4578 (x1229 (+ 96 x2810))) (= x4762 (< 96 x3381)) (= (x1229 (+ 128 x1673)) x1941))) (= x1639 (x29 x3143)) x452 (= x1957 (< 64 x3381)) (= (x1229 (+ x2810 64)) x3143) (= (x1229 (+ 96 x1673)) x2589)))) (and (not x3748) (= 0 x1818))) (= (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x77) x3388) (= x4608 (x1229 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3388))) (= x384 x1460) (or (not x3009) (and x3009 (= (x1229 (+ x3381 x2806)) x4561))) (= (< x3381 x1818) x3009) (= (x2763 x2810) x3381) (= x612 (x4575 (- x1315 32))) (= (x1229 (+ 128 x384)) x2806) (= x3613 0)) x4247))) x1508))
(assert (= (x4822 115792089237316195423570985007226406215939081747436879206741300988257197096960) (x1894 115792089237316195423570985007226406215939081747436879206741300988257197096960)))
(assert (x1513 x4953))
(assert (= (x3566 x3965) (ite (and x3767 (not x179)) (x3604 x3965) (ite x2999 (ite x938 (x1570 x3965) (x3604 x3965)) (x3604 x3965)))))
(assert (x3166 x712))
(assert (= (x76 x1036) (ite (= x1036 x261) x1689 (x709 x1036))))
(assert (= (ite (= x1139 x1892) x2951 (x76 x1139)) (x2541 x1139)))
(assert (x1513 x585))
(assert (x1513 x4959))
(assert (= x1092 (x2856 (x1894 x1092))))
(assert (x2349 x356 x1823))
(assert (= (=> (and (= x4193 (x2328 (x1894 x335))) (= x917 (> x4193 0))) (and (=> x917 x4865) (=> (not x917) x4708))) x58))
(assert (x1513 x1544))
(assert (= (=> (and (= (x2808 x3417 6) x4679) (= x4009 (x1939 x4679)) (= x4851 (x1319 4294967295 x2430)) (not (= 511946350 x1842)) (= x442 (< 0 x1099)) (= (x1319 1461501637330902918203684832716283019655932542975 x4009) x779) (= (x1319 65535 x4047) x4078) (= x4777 (* x2256 x2401)) (= x3405 (x1319 18446744073709551615 x3111)) (= x779 x2751) (< (+ x1226 x1654) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x3265 x4078) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4802 (x1939 x2363)) (= (- (/ x515 79228162514264337593543950336) (uninterp_frac x515 79228162514264337593543950336)) x4047) (= (x1939 x4620) x4915) (= x3956 (- (/ x3069 1461501637330902918203684832716283019655932542976) (uninterp_frac x3069 1461501637330902918203684832716283019655932542976))) (not (< x3265 x3349)) (= x2430 (- (/ x4904 26959946667150639794667015087019630673637144422540572481103610249216) (uninterp_frac x4904 26959946667150639794667015087019630673637144422540572481103610249216))) (= (* x4078 x3265) x326) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2401 x2256)) (= x260 x2979) (= (x1229 (+ x886 (uninterp_mod (ite x1302 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1441) (= x3111 (- (/ x4372 1461501637330902918203684832716283019655932542976) (uninterp_frac x4372 1461501637330902918203684832716283019655932542976))) (not (= x1842 599290589)) (= x3349 (- (/ x326 10000) (uninterp_frac x326 10000))) (not (> 4 x2262)) (= x775 x3702) (not (or (and (< x118 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x118))) (> x118 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2808 x3417 5) x1041) (= x4620 (x2808 x3417 4)) (= x4904 (x1939 x1041)) (= x1226 (x4575 (- x3265 x3349))) (= x3499 0) (not (= x1842 455944412)) (= (- (/ x4567 1461501637330902918203684832716283019655932542976) (uninterp_frac x4567 1461501637330902918203684832716283019655932542976)) x1204) (= x250 (+ x904 x3702)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x4851 x4802)) (< x1842 1166402363) (= (x2808 x3417 3) x2363) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3265 x775)) (< 0 x3466) (= x1654 x2039) (> x4039 0) (= (x1319 1461501637330902918203684832716283019655932542975 x2747) x2244) (= (+ x4032 x2039) x429) (= x3069 (x1939 x4620)) (= x886 (x1319 115792089237316195423570984636004990333889740523700931696805413995650331181055 x2038)) (= x3466 (x2328 (x1894 274184521717934524641157099916833587240))) (= x4567 (x1377 x4679)) (= x1654 (x1939 x4771)) (= false x1302) (= (x1377 x4679) x2038) (= x4877 (* x4851 x4802)) (= x2256 x4877) (= (x1319 255 x1204) x4039) (= (x1319 1461501637330902918203684832716283019655932542975 x4915) x1081) (= x515 (x1939 (x4822 1))) (> x3405 x1904) (= x1099 (x2328 (x1894 x2244))) (= x3504 (- (/ x4777 31536000) (uninterp_frac x4777 31536000))) (= x775 (x1939 x2363)) (= (x4575 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x775)) x4448) (= x1226 x4032) (= (x4575 (- x1927 x3558)) x2401) (= (x1319 1461501637330902918203684832716283019655932542975 x2747) x2751) (not (> x3558 x1904)) (= x1842 924834022) (= x4372 (x1939 x1041)) (= x3558 (x1319 18446744073709551615 x3956)) (= (x1377 (x4822 106)) x3720) (= x4771 (x2808 x3417 2)) (= (- (/ x3504 10000) (uninterp_frac x3504 10000)) x3265) (= (x1319 255 x3720) x3499) (= (x4101 (x1894 x2979) (x4822 2) 0) x3417) (= x904 x3265) (= x118 (x4575 (- x2262 4))) (not (< x1842 455944412)) (< x1842 2311529814)) (and (=> x442 x2025) (=> (not x442) x4987))) x4908))
(assert (x1513 x736))
(assert (x1513 x657))
(assert (x1513 x2446))
(assert (x2143 x2418 x1091))
(assert (x1513 x1667))
(assert (x1513 x4789))
(assert (= x3879 (and x3047 (not x2943))))
(assert (x1513 x3090))
(assert (= (ite (= x4679 x4772) x1441 (x1377 x4772)) (x1939 x4772)))
(assert (= (x2098 (x1894 274184521717934524641157099916833587240)) (ite (and x4019 (not x4397)) (x2865 (x1894 274184521717934524641157099916833587240)) (ite (and (not x3093) x2992 x1121) (x1619 (x1894 274184521717934524641157099916833587240)) (x2865 (x1894 274184521717934524641157099916833587240))))))
(assert (x1513 x1475))
(assert (= x4673 (and (not x3216) x4619)))
(assert (x1513 x2802))
(assert (= (x15 x3562) (ite (= x3562 x4178) x2443 (x1267 x3562))))
(assert (x1513 x2631))
(assert (x1513 x3381))
(assert (x1513 x113))
(assert (x1513 x857))
(assert (x1513 x1569))
(assert (= (=> (and (= x2590 (x1852 (x4822 106))) (= x3022 x1391) (= (= 0 x153) x3877) (= (x1319 255 x2590) x153)) (and (=> (not x3877) x2460) (=> x3877 x4602))) x257))
(assert (x1513 x38))
(assert (x1513 x346))
(assert (x1513 x4075))
(assert (x1513 x2332))
(assert (x1513 x3209))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x2008)) x3573 (x874 (x1894 x2008))) (x1083 (x1894 x2008))))
(assert (= (x2861 x1333) 0))
(assert (x2349 x316 x253))
(assert (= (ite x4941 (ite (and x4941 (not x2275)) (x1003 x1307) (x539 x1307)) (x3126 x1307)) (x2471 x1307)))
(assert (x1513 x4926))
(assert (x3166 x3807))
(assert (x1513 x3833))
(assert (x1513 x39))
(assert (x1513 x4503))
(assert (x1513 x3045))
(assert (x2417 x850))
(assert (x3166 x4142))
(assert (x1513 x4702))
(assert (x1513 x1774))
(assert (x1513 x775))
(assert (= (=> (and (= x4752 x2925) (= x1205 0)) x2959) x2971))
(assert (x4612 x3413 x4623 x309 x3424))
(assert (x1513 x3265))
(assert (x1513 x2725))
(assert (x1513 x756))
(assert (x1513 x1770))
(assert (x1513 x1494))
(assert (x1513 x1200))
(assert (= (=> (= (= x1081 274184521717934524641157099916833587206) x576) (and (=> (not x576) x2353) (=> (and (= x2414 (> x1490 x1164)) x576 (= x1612 (x4575 (- x3903 x2936))) (= (x4101 (x1894 x896) (x4822 1) 0) x281) (<= x3903 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3903) (= x3903 (x1625 x1351)) (<= 0 x1164) (= x3869 x2542) (= x4317 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x317) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x317)) (< x317 96)))) (= x1490 x2936) (= (x4575 (- x1164 x2936)) x1978) (= x3012 1) (<= x896 1461501637330902918203684832716283019655932542975) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1594) (= x2846 (x4101 (x1894 x896) (x4822 2) 0)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x882) (= (< x3903 x1490) x3225) (< 0 x2238) (<= 0 x2542) (= x3480 274184521717934524641157099916833587240) (<= x1164 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x896 x43) (= x4886 (< x1164 x1490)) (not (> 4 x1290)) (not x2414) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x2819) (not x4317) (= x1351 (x4101 (x1894 x896) (x4822 1) 0)) (= 274184521717934524641157099916833587240 x1001) (= x4878 32) (= x2828 (+ x3869 x352)) (not (= x1026 117300739)) (= x896 x1770) (= (x4506 x4514) x1164) (= (x4575 (- x1290 4)) x317) (= x4491 x1146) (= x1490 x352) (= (x2295 x2819) x2542) (= 274184521717934524641157099916833587240 x1949) (not (= 404098525 x1026)) (= x869 274184521717934524641157099916833587240) (not (= x1026 157198259)) (= (x4101 (x1894 x896) (x4822 2) 0) x3953) (= x567 (x4101 (x1894 274184521717934524641157099916833587240) x2846 0)) (= x1275 x1290) (= x1290 100) (= x2238 (x2328 (x1894 274184521717934524641157099916833587206))) (< x1026 826074471) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2542 x1490)) x23) (not x23) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2542) (= 599290589 x1026) (< (+ x2542 x1490) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x3225) (= (x4101 (x1894 274184521717934524641157099916833587240) x3953 0) x4514) (= x250 x2936) (= (> x2936 x3903) x1339) (not x1339) (not x4886)) x302))) x4166))
(assert (x1513 x1578))
(assert (x3166 x2411))
(assert (x1513 x3891))
(assert (x1513 x3784))
(assert (x3166 x3502))
(assert (x1513 x4664))
(assert (= (x201 x2282) (ite (= x2218 x2282) x4322 (x1377 x2282))))
(assert (x1513 x538))
(assert (x1513 x4412))
(assert (x1513 x4493))
(assert (= x2606 (=> (not (= 0 x470)) x1508)))
(assert (= x3811 (=> (= (= x3907 274184521717934524641157099916833587206) x3850) (and (=> (not x3850) x1343) (=> x3850 x1996)))))
(assert (x1513 x678))
(assert (x1513 x3599))
(assert (= (ite x2139 (ite (and x526 x4337) (x24 x1484) (x3846 x1484)) (ite (and x4586 x865 (not x3527)) (x64 x1484) (x3846 x1484))) (x208 x1484)))
(assert (x1513 x1000))
(assert (x1513 x1421))
(assert (x1513 x3339))
(assert (x1513 x465))
(assert (x1513 x3765))
(assert (x1513 x2299))
(assert (= (x2856 (x4822 98474297345890754025501882143967591664980152141971839855651084132735363579904)) 98474297345890754025501882143967591664980152141971839855651084132735363579904))
(assert (= (and (not x1279) x4888) x2258))
(assert (= (ite (= x2241 x3866) x844 (x1852 x3866)) (x3604 x3866)))
(assert (x1513 x3032))
(assert (x1513 x3760))
(assert (x1513 x1817))
(assert (x1513 x144))
(assert (x3166 x4009))
(assert (x1513 x3327))
(assert (x1513 x1581))
(assert (= (x201 x949) (ite (= x949 x2218) x4322 (x1377 x949))))
(assert (= (x1939 x4679) x1441))
(assert (x1513 x137))
(assert (= (ite (= (x1894 x2482) (x1894 274184521717934524641157099916833587240)) x3573 (x874 (x1894 x2482))) (x1083 (x1894 x2482))))
(assert (= (or (and x4346 x4128) (and x4736 x3120) (and x2985 x355)) x674))
(assert (= (=> (and (= (= 0 x4947) x3338) (= x2643 (x3915 x1540)) (= x1540 (x4101 (x1894 x3022) (x4822 208) 0)) (= (x1319 1461501637330902918203684832716283019655932542975 x2643) x4947)) (and (=> (not x3338) x1032) (=> x3338 x2460))) x1856))
(assert (x1513 x4605))
(assert (= (x4231 x4766) (ite (= 324 x4766) x1938 (x2266 x4766))))
(assert (= (x3604 x837) (ite (= x2241 x837) x844 (x1852 x837))))
(assert (x1513 x4328))
(assert (= (x2174 x1139) (ite (and (not x179) x3767) (x500 x1139) (ite x2999 (ite x938 (x4870 x1139) (x709 x1139)) (x709 x1139)))))
(assert (= x2073 (and x743 (not x2457))))
(assert (x1513 x1736))
(assert (x1513 x1204))
(assert (x1513 x600))
(assert (x3166 x2811))
(assert (x3166 x1817))
(assert (x1513 x4241))
(assert (= (=> (and (= x570 (> x3266 0)) (= x678 (x1229 (+ x610 32))) (or (not x570) (and (> 4294967296 x1517) x1340 (= (x1083 (x1894 x3675)) x3) (= (= x3 (x4798 (x1894 x3675))) x3041) x3041 (= x1340 (<= x304 (x4798 (x1894 274184521717934524641157099916833587240)))) (= x304 (x1083 (x1894 274184521717934524641157099916833587240))) x570)) (not (= 0 x4272)) (= x1740 (x1229 (+ 4 x2491))) (= x610 x1740) (= (x1319 1461501637330902918203684832716283019655932542975 x2747) x3675) (= x4272 (x2328 (x1894 x3675)))) x2165) x2128))
(assert (= (x1983 x2392) (ite x3925 (ite x1906 (x2602 x2392) (x1939 x2392)) (x1939 x2392))))
(assert (= (=> (and (= x4401 (< 0 x4976)) (= (x2328 (x1894 x1081)) x4976) (not (= x3266 0))) (and (=> x4401 x4109) (=> (and (not x4401) (= x3938 x2491) (= x1107 x1201) (= (x47 (x1894 274184521717934524641157099916833587240)) x1201)) x389))) x2165))
(assert (= (x4306 x2563) (ite x674 (ite (and x4128 x4346) (x572 x2563) (ite (and x355 x2985) (x572 x2563) (x291 x2563))) (ite (and x4137 (not x4004) x4909) (x3580 x2563) (x572 x2563)))))
(assert (x1513 x461))
(assert (x1513 x2345))
(assert (x1513 x2058))
(assert (x1513 x335))
(assert (= (=> (and (= x328 (x3519 (x1894 x1299))) (= (<= 0 x1386) x1354) (= x656 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x811 (x1894 x1299)))) (= (x3519 (x1894 274184521717934524641157099916833587240)) x1386) x4895 (= x897 x646) (= x1321 (x3519 (x1894 274184521717934524641157099916833587240))) x1354 (= (= 274184521717934524641157099916833587206 x1299) x1308) x656 (= x4895 (< x328 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x811 (x1894 x1299)) x1869)) (and (=> (and (= x646 x2178) (= 1 x1445) (= x899 (x4575 (- x2178 4))) (= x2178 68) (= 32 x3246) (>= x1220 0) (not x169) (not (= 826074471 x3309)) (not x2919) (= x2827 x3503) (= x3503 x4615) (not x4583) (= 2835717307 x3309) (<= 0 x2545) (not x2848) (= x1662 x1236) (not (= x3309 2514000705)) (<= x2545 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3839 (x2328 (x1894 274184521717934524641157099916833587206))) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x4318) (= (or (and (= true (<= x899 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x899 64)) (> x899 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x169) (= (x3661 x4318) x2545) (= (> x3503 x2545) x2848) (= (< x2545 x2827) x2919) (not (> 826074471 x3309)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x2297) (not (= x3309 1889567281)) (<= x1220 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x270 (+ x4661 x1424)) (= (x4101 (x1894 x1236) (x4822 1) 0) x447) (= x1220 x1424) (<= x1236 1461501637330902918203684832716283019655932542975) (= x503 274184521717934524641157099916833587240) (= (x4101 (x1894 x1236) (x4822 1) 0) x706) (> x3839 0) (= 274184521717934524641157099916833587240 x2607) (= x2063 x4393) (= x1236 x2531) (= x4583 (>= (+ x1220 x2827) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2770 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2827 x1220)) (= x4661 x2827) (= x1220 (x4168 x447)) (not (> 4 x2178)) x1308 (= x4329 (x4575 (- x2545 x3503)))) x1418) (=> (not x1308) x1936))) x2032))
(assert (x3166 65535))
(assert (x1513 x717))
(assert (= x987 (and x2992 (not x3093))))
(assert (= x2990 (and x1045 x1862)))
(assert (= 0 (x665 x939)))
(assert (x1513 x3588))
(assert (x2349 x3449 x4875))
(assert (=> (< (- x621 1) 10000) (= (x4822 x621) (x1894 x621))))
(assert (x1513 x189))
(assert (x1513 x839))
(assert (= (ite x1846 (ite x4600 (x1727 (x1894 x4789)) (x853 (x1894 x4789))) (x1807 (x1894 x4789))) (x3519 (x1894 x4789))))
(assert (= (x3098 x4340) (ite (and x3990 x814 x3335 x1417 (not x2726) x3284) (x322 x4340) (ite (and x3284 x3990 x3335 (not x1417) x814) (x4632 x4340) (ite (and x3335 x3284 x814 (not x3990)) (x3312 x4340) (ite (and x814 (not x3284) x3335) (x828 x4340) (x1859 x4340)))))))
(assert (x1513 x2917))
(assert (x1513 x2337))
(assert (x1513 x624))
(assert (= (=> (and (= x2031 x4650) (= x4407 x3627)) x4194) x2921))
(assert (= (ite (= x2218 x491) x4322 (x1377 x491)) (x201 x491)))
(assert (x1513 x3246))
(assert (x1513 x4448))
(assert (x2349 x679 x2181))
(assert (= (x2856 (x1894 x3907)) x3907))
(assert (x1513 x2630))
(assert (= x2610 (=> (and (not (= 0 x3190)) (= x3190 (x2328 (x1894 x1081))) (= x4722 (= 274184521717934524641157099916833587240 x1081)) (= x3835 128) (= 274184521717934524641157099916833587240 x2094)) (and (=> (not x4722) x1531) (=> (and (= 36 x4937) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0) x4294) (not x3777) x4722 (= 32 x4394) (= x4703 1889567281) (> x829 0) (= x829 (x2328 (x1894 274184521717934524641157099916833587240))) (= 1 x44) (= 274184521717934524641157099916833587240 x3226) (= x3291 (x4575 (- x4937 4))) (not (= x4703 1722255204)) (not (< x4703 1722255204)) (not (> 1166402363 x4703)) (not (> 4 x4937)) (= x3777 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3291) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3291)) (< x3291 32)))) (= x4937 36) (> 2311529814 x4703) (not (= x4703 1845821197)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2389) (not (= x4703 1858285468)) (= x204 (x1939 x4294))) x805)))))
(assert (x1564 x512 x1142))
(assert (= (ite x3925 (ite x1906 (x2602 x4363) (x1939 x4363)) (x1939 x4363)) (x1983 x4363)))
(assert (x778 x3211 x9 x1812 x1485))
(assert (x1513 x2589))
(assert (= x3537 (and x2824 (not x4645))))
(assert (= x3334 (=> (and (= x1826 (x2328 (x1894 x2419))) (not (= x1826 0)) (= x3585 128) (= x4658 274184521717934524641157099916833587240) (= (= 274184521717934524641157099916833587240 x2419) x1858)) (and (=> (and x1858 (= 32 x580) (not (> 1166402363 x2849)) (< 0 x1195) (not (= 1722255204 x2849)) (= (x4575 (- x618 4)) x1924) (= 36 x618) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0) x3386) (= 1889567281 x2849) (not (> 4 x618)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1924) (and (= (<= x1924 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1924))) x301) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3440) (= x2893 274184521717934524641157099916833587240) (not x301) (= 1 x2782) (not (< x2849 1722255204)) (= x2522 (x201 x3386)) (not (= 1858285468 x2849)) (> 2311529814 x2849) (= (x2328 (x1894 274184521717934524641157099916833587240)) x1195) (not (= x2849 1845821197)) (= x618 36)) x1476) (=> (not x1858) x1623)))))
(assert (x1513 x1443))
(assert (x1513 x300))
(assert (= x2213 (x2856 (x1894 x2213))))
(assert (= (=> (= x1186 (= x3616 x2600)) (and (=> x1186 x4594) (=> (not x1186) x2971))) x3239))
(assert (x1513 x2551))
(assert (x1513 x2822))
(assert (= (ite (= x2676 x851) x4949 (x2471 x851)) (x675 x851)))
(assert (= x3830 (and x3245 (not x350))))
(assert (= (x2174 x3175) (ite (and (not x179) x3767) (x500 x3175) (ite x2999 (ite x938 (x4870 x3175) (x709 x3175)) (x709 x3175)))))
(assert (x1513 x4681))
(assert (= (=> (and (= x3307 x113) (= (x1229 (+ x2975 4)) x113) (= (x1229 (+ 32 x3307)) x1029) (= (x2328 (x1894 x3441)) x2023) (= x941 (= 0 x2023)) (= x3441 (x1319 1461501637330902918203684832716283019655932542975 x2008))) (and (=> x941 x2460) (=> (and (or (not x542) (and (= (x1582 (x1894 x3441)) x1203) x3954 (= (x1582 (x1894 274184521717934524641157099916833587240)) x150) (> 4294967296 x4634) (= (= (x2259 (x1894 x3441)) x1203) x3954) x542 (= (<= x150 (x2259 (x1894 274184521717934524641157099916833587240))) x3792) x3792)) (= x542 (< 0 x2695)) (not x941)) x4042))) x4611))
(assert (x1513 x2154))
(assert (x1564 x144 x1219))
(assert (= (=> (= x1007 (= 0 x3199)) (and (=> x1007 x2460) (=> (not x1007) x2515))) x3024))
(assert (= (ite (and (not x3230) x814 x3335) (x3098 x4340) (x2988 x4340)) (x53 x4340)))
(assert (= (=> (and (= (or (and (= true (<= x2581 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2581)) (> x2581 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1486) (= x2581 (x84 x2284))) (and (=> x1486 x2460) (=> (not x1486) x4945))) x4916))
(assert (x4612 x4695 x2169 x1245 x2738))
(assert (x1513 x2647))
(assert (x1513 x4385))
(assert (x1513 x3153))
(assert (x1513 x1715))
(assert (x3166 x100))
(assert (x1513 x1808))
(assert (x4187 x1805 x3161))
(assert (x1513 x2277))
(assert (= x2829 (and x1935 x2048)))
(assert (x1513 x1609))
(assert (= x1862 (and x1422 x3187)))
(assert (= (x3519 (x1894 x4133)) (ite x1846 (ite x4600 (x1727 (x1894 x4133)) (x853 (x1894 x4133))) (x1807 (x1894 x4133)))))
(assert (= x4130 (=> (and (= x3555 x2920) (not (= 1889567281 x745)) (not (> 4 x2920)) (= x745 2835717307) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x4467) (= x3529 (x2328 (x1894 274184521717934524641157099916833587202))) (= x348 (x4575 (- x2920 4))) (= x335 x465) (not (= 2514000705 x745)) (= x2920 68) (> x3529 0) (not (= 826074471 x745)) (not (< x745 826074471)) (= x1585 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x348) (and (= true (<= x348 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x348 64)))) (= x2013 x3774)) (and (=> x1585 x1595) (=> (not x1585) x4277)))))
(assert (= (ite (and (not x179) x3767) (x3604 x1348) (ite x2999 (ite x938 (x1570 x1348) (x3604 x1348)) (x3604 x1348))) (x3566 x1348)))
(assert (= (x3566 x837) (ite (and (not x179) x3767) (x3604 x837) (ite x2999 (ite x938 (x1570 x837) (x3604 x837)) (x3604 x837)))))
(assert (= (ite (= x2939 x2241) x844 (x1852 x2939)) (x3604 x2939)))
(assert (= x254 (=> (and (= x1764 (= 0 x2318)) (= (= 0 x2963) x1045) (= x1091 (ite (> x1884 x3367) 1 0)) (= x2525 (- (/ x1461 31536000) (uninterp_frac x1461 31536000))) (= (- (/ x4100 79228162514264337593543950336) (uninterp_frac x4100 79228162514264337593543950336)) x2450) (= x2963 (x1319 x2418 x1091)) (= x3367 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318))) (= (- (/ x2525 10000) (uninterp_frac x2525 10000)) x2318) (= x1461 (uninterp_mod (* x3194 x4428) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1319 65535 x2450) x1884) (= x2418 (ite (not x1764) 1 0)) (= x4100 (x3604 (x4822 1)))) (and (=> x1045 x2722) (=> (not x1045) x2460)))))
(assert (x1513 x1362))
(assert (x1513 x774))
(assert (x1513 x1341))
(assert (x3166 x1123))
(assert (x778 x1116 x1493 x498 x3061))
(assert (= (=> (and (= x1420 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0)) (= x3855 (x4952 x1420)) (= x268 (< x3855 1))) (and (=> x268 x1272) (=> (not x268) x339))) x3721))
(assert (= (x15 x1759) (ite (= x4178 x1759) x2443 (x1267 x1759))))
(assert (x1513 x3963))
(assert (=> (< (- x1081 1) 10000) (= (x1894 x1081) (x4822 x1081))))
(assert (x1513 x3473))
(assert (x1513 x854))
(assert (= 0 (x751 x1696)))
(assert (x1513 x2578))
(assert (x1513 x3226))
(assert (x2417 x1545))
(assert (x3166 x2252))
(assert (= (x1199 x3385) (ite x1846 (ite x4600 (x534 x3385) (x201 x3385)) (x201 x3385))))
(assert (x1513 x1918))
(assert (= (or (and x111 x3114) (and x2821 x2271)) x1378))
(assert (x1513 x1778))
(assert (x1513 x1278))
(assert (= (ite (= x4340 324) x4006 (x2885 x4340)) (x1848 x4340)))
(assert (x3166 x947))
(assert (x1513 x1492))
(assert (= (ite x674 (ite (and x4346 x4128) (x572 x1074) (ite (and x2985 x355) (x572 x1074) (x291 x1074))) (ite (and x4909 (not x4004) x4137) (x3580 x1074) (x572 x1074))) (x4306 x1074)))
(assert (x1513 x3902))
(assert (= x669 (=> (= (= 274184521717934524641157099916833587202 x2419) x619) (and (=> (and x619 (not x2120) (= 1889567281 x4601) (= 1 x2782) (= (x3126 x1097) x1115) (< 0 x1152) (= x1152 (x2328 (x1894 274184521717934524641157099916833587202))) (not (> 826074471 x4601)) (>= x1115 0) (= (x4575 (- x4960 4)) x3924) (not (> 4 x4960)) (= x4960 36) (= x4960 36) (not (= x4601 826074471)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3924) (and (= true (<= x3924 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3924 32))) x2120) (= x4853 274184521717934524641157099916833587240) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1115) (= x580 32) (= x1097 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1897)) x1476) (=> (not x619) x4421)))))
(assert (= (ite (= x4679 x1604) x1441 (x1377 x1604)) (x1939 x1604)))
(assert (= (x1983 x1039) (ite x3925 (ite x1906 (x2602 x1039) (x1939 x1039)) (x1939 x1039))))
(assert (x3166 x2608))
(assert (= 0 (x2615 x1298)))
(assert (= x4111 true))
(assert (x1513 x4183))
(assert (= x423 (and x564 x4200)))
(assert (x1513 x4574))
(assert (x1513 x2156))
(assert (= (x3312 x4340) (ite (= x854 x4340) x1954 (x828 x4340))))
(assert (= (x1983 x246) (ite x3925 (ite x1906 (x2602 x246) (x1939 x246)) (x1939 x246))))
(assert (x1513 x3174))
(assert (= (=> (and (not (= x3196 0)) (= (= x1081 274184521717934524641157099916833587240) x3142) (= x1054 (x1229 (+ 36 x2491))) (= x3641 (x4575 (- x1054 x2491))) (= (x1229 (+ 4 x2491)) x2965) (= x573 x2965) (= x3196 (x2328 (x1894 x1081))) (= 274184521717934524641157099916833587240 x1721)) (and (=> (not x3142) x3628) (=> (and (= x3445 1) (not (= x1707 1722255204)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 209) 0) x4220) (= x2725 32) (= (or (and (= (<= x4391 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x4391)) (> x4391 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x713) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x866) (< 0 x2616) x3142 (< x1707 2311529814) (not (= 1858285468 x1707)) (= 1889567281 x1707) (not (> 4 x435)) (not (= x1707 1845821197)) (= x3641 x435) (= x435 36) (not (> 1722255204 x1707)) (= (x2328 (x1894 274184521717934524641157099916833587240)) x2616) (= (x1939 x4220) x2003) (= x1609 274184521717934524641157099916833587240) (not x713) (not (> 1166402363 x1707)) (= (x4575 (- x435 4)) x4391)) x3489))) x4109))
(assert (x1513 x288))
(assert (x1513 x2533))
(assert (x1513 x2464))
(assert (x2417 x4195))
(assert (= (x1894 924834022) (x4822 924834022)))
(assert (x1513 x444))
(assert (= (x1720 (x1894 x2482)) (ite x674 (x3670 (x1894 x2482)) (ite (and x4137 (not x4004) x4909) (x4268 (x1894 x2482)) (x3670 (x1894 x2482))))))
(assert (= (=> (and (= (x2808 x4255 3) x551) (= x4796 (x3604 x2392)) (= x4404 (> x3181 x2689)) (= x1042 (- (/ x4796 1461501637330902918203684832716283019655932542976) (uninterp_frac x4796 1461501637330902918203684832716283019655932542976))) (= x2392 (x2808 x4255 4)) (= x3181 (x1319 18446744073709551615 x1042)) (= (x3604 x551) x404)) (and (=> (not x4404) x3743) (=> x4404 x2460))) x1198))
(assert (= (ite x3925 (ite x1906 (x3244 x2563) (x3126 x2563)) (x3171 x2563)) (x102 x2563)))
(assert (= 1461501637330902918203684832716283019655932542976 (x2856 (x4822 1461501637330902918203684832716283019655932542976))))
(assert (x2417 x240))
(assert (x1513 x2109))
(assert (= (or (and (not x4029) x3851) x448) x877))
(assert (x1513 x1342))
(assert (= x323 (or (and x4892 (not x2900)) x527)))
(assert (= (ite x3925 (ite x1906 (x4761 x1837) (x3248 x1837)) (ite (and x877 x570) (x2576 x1837) (x3248 x1837))) (x4828 x1837)))
(assert (x1513 x1519))
(assert (x1513 x4642))
(assert (= x3414 (and x249 x4477)))
(assert (x3166 x1116))
(assert (x1513 x3843))
(assert (x1513 x2246))
(assert (x1564 x2691 x1270))
(assert (x1513 x1093))
(assert (x1513 x4834))
(assert (x1513 x4022))
(assert (= (ite (= x1971 x2611) x2478 (x2174 x2611)) (x4246 x2611)))
(assert (x1513 x921))
(assert (x1513 x4060))
(assert (= (x4505 x1307) (ite x94 (ite x3368 (x4553 x1307) (x2293 x1307)) (ite (and x1423 (not x2427) x287) (x3010 x1307) (x2293 x1307)))))
(assert (= (=> (= (> x2209 0) x3494) (and (=> x3494 x2444) (=> (not x3494) x2971))) x1646))
(assert (= (+ 5 (x2856 x116)) (x2856 (x2808 x116 5))))
(assert (= (=> (and (= x2445 274184521717934524641157099916833587240) (= (x1229 (+ 4 x2975)) x1542) (= x4990 (x4575 (- x4805 x2975))) (= (x1229 (+ x2975 36)) x4805) (= (= 0 x2727) x230) (= x3818 x1542) (= (x2328 (x1894 x3907)) x2727)) (and (=> x230 x2460) (=> (not x230) x4353))) x4745))
(assert (x3166 x1519))
(assert (= x3200 (x2856 (x1894 x3200))))
(assert (x1513 x686))
(assert (= 274184521717934524641157099916833587240 (x2856 (x4822 274184521717934524641157099916833587240))))
(assert (= (x201 x227) (ite (= x2218 x227) x4322 (x1377 x227))))
(assert (x1513 x429))
(assert (x1513 x3895))
(assert (= (x1983 x3470) (ite x3925 (ite x1906 (x2602 x3470) (x1939 x3470)) (x1939 x3470))))
(assert (= x2999 (or (and (not x3795) x4724) (and x4352 x2164))))
(assert (= (ite (= x2218 x3644) x4322 (x1377 x3644)) (x201 x3644)))
(assert (= (x201 x2218) x4322))
(assert (= (x3566 x3495) (ite (and x3767 (not x179)) (x3604 x3495) (ite x2999 (ite x938 (x1570 x3495) (x3604 x3495)) (x3604 x3495)))))
(assert (= (=> (= (= x1030 274184521717934524641157099916833587202) x4977) (and (=> (not x4977) x3949) (=> (and (= 274184521717934524641157099916833587240 x4077) (= 68 x3215) (= x1578 32) (= x2148 2835717307) (= (< x4385 x4048) x4770) (= x4236 x846) (= x3510 (< x4385 x4321)) (not (= 1889567281 x2148)) (= x4048 x4321) (= x2249 (x2328 (x1894 274184521717934524641157099916833587202))) (not x3510) (= x3215 x1359) (= x4897 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x331 x4321))) (= x2855 (+ x960 x2314)) (= x1636 1) (= x3968 (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0)) (= x3355 (x4575 (- x4385 x4048))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3016) (not (> 4 x3215)) (= x960 x4321) (not (= 826074471 x2148)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x331 x4321)) (= x3357 (x4101 (x1894 x4236) (x4822 1) 0)) (= x331 (x1235 x3357)) (<= x331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x4236) (not x4770) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x4198) x4977 (not x4897) (> x2249 0) (= x2314 x331) (= x377 (x4575 (- x3215 4))) (= 274184521717934524641157099916833587240 x3621) (= x4385 (x4278 x3968)) (not (> 826074471 x2148)) (= x4789 x4236) (not (= 2514000705 x2148)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4385) (>= x331 0) (= (or (and (= (<= x377 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x377 64)) (> x377 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x976) (= x4048 x2402) (>= x4385 0) (not x976)) x3296))) x2455))
(assert (= (ite x674 (ite (and x4346 x4128) (x572 x1120) (ite (and x2985 x355) (x572 x1120) (x291 x1120))) (ite (and x4137 x4909 (not x4004)) (x3580 x1120) (x572 x1120))) (x4306 x1120)))
(assert (x1513 x1203))
(assert (x1513 x2419))
(assert (= (x1939 x4620) (ite (= x4620 x4679) x1441 (x1377 x4620))))
(assert (= (and x2018 x3830) x4496))
(assert (= (x3389 x1111) (ite x674 (ite (and x4346 x4128) (x99 x1111) (ite (and x2985 x355) (x3841 x1111) (x99 x1111))) (ite (and x4137 (not x4004) x4909) (x3520 x1111) (x99 x1111)))))
(assert (= (and (not x4124) x1096) x2958))
(assert (x1513 x3256))
(assert (x1513 x903))
(assert (= x1888 (=> (and (= 100 x2065) (= 599290589 x3115) (not (> 455944412 x3115)) (not (= x3115 511946350)) (= x1357 (or (and (= true (<= x2556 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2556 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2556))) (> 1166402363 x3115) (not (> 4 x2065)) (not (= x3115 455944412)) (= x2065 x942) (= x219 x1260) (= x1157 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3451 x505) (= x1711 (x2328 (x1894 274184521717934524641157099916833587240))) (= (x4575 (- x2065 4)) x2556) (< x3115 2311529814) (> x1711 0)) (and (=> (not x1357) x1827) (=> x1357 x1272)))))
(assert (= (or x3925 x2778) x2519))
(assert (= (x2856 (x1894 x465)) x465))
(assert (x1513 x616))
(assert (x1513 x7))
(assert (x1513 x3585))
(assert (x1513 x3842))
(assert (x1513 x4703))
(assert (x1513 x748))
(assert (= (x201 x2746) (ite (= x2746 x2218) x4322 (x1377 x2746))))
(assert (x1513 x310))
(assert (x3166 x4862))
(assert (= (x3519 (x1894 x1299)) (ite x1846 (ite x4600 (x1727 (x1894 x1299)) (x853 (x1894 x1299))) (x1807 (x1894 x1299)))))
(assert (= x3071 (=> (and (= x2410 274184521717934524641157099916833587240) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x1307) (= x1464 (x4505 x1307)) (= x1787 (< x1464 x3451)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1464) (>= x1464 0) (= x2647 x341)) (and (=> (not x1787) x3700) (=> x1787 x3986)))))
(assert (=> (< (- x1030 1) 10000) (= (x4822 x1030) (x1894 x1030))))
(assert (= (x1908 x3965) (ite (= x3965 x1420) x31 (x4952 x3965))))
(assert (x2349 x2518 x2766))
(assert (x1513 x1931))
(assert (x1513 x4670))
(assert (x1513 x3287))
(assert (= 0 (x1566 x2284)))
(assert (= (and x1366 x1785) x2736))
(assert (= (x3154 x1328) (ite (= x1296 x1328) x272 (x1651 x1328))))
(assert (= (ite (= x2363 x4679) x1441 (x1377 x2363)) (x1939 x2363)))
(assert (= x1343 (=> (= (= 274184521717934524641157099916833587202 x3907) x3570) (and (=> (not x3570) x1613) (=> x3570 x2403)))))
(assert (x1513 x3893))
(assert (x934 x3122 x2594))
(assert (= (x102 x3857) (ite x3925 (ite x1906 (x3244 x3857) (x3126 x3857)) (x3171 x3857))))
(assert (x1513 x2449))
(assert (x778 x3026 x1660 x217 x2408))
(assert (x1513 x1035))
(assert (x1513 x2982))
(assert (= (or x4806 (and x2519 (not x2648))) x3013))
(assert (x1513 x1240))
(assert (x3166 x1559))
(assert (x2417 x3718))
(assert (x1513 x1620))
(assert (x1513 x439))
(assert (x1513 x841))
(assert (x1513 x1809))
(assert (= (x1199 x1932) (ite x1846 (ite x4600 (x534 x1932) (x201 x1932)) (x201 x1932))))
(assert (x1513 x3400))
(assert (= x4826 (=> (and (= x3546 (x4474 x4340)) (= x1935 (= 0 x3546)) (= x2660 x4340)) (and (=> x1935 x2159) (=> (not x1935) x1999)))))
(assert (x1513 x2244))
(assert (x3166 x3063))
(assert (= x1358 (and x2718 (not x1536))))
(assert (= (ite x4941 (ite (and x4941 (not x2275)) (x1003 x127) (x539 x127)) (x3126 x127)) (x2471 x127)))
(assert (x1513 x3388))
(assert (x1513 x939))
(assert (x1513 x4144))
(assert (x1513 x2574))
(assert (x1513 x1639))
(assert (= (x1003 x1307) (ite x2139 (ite (and x4337 x526) (x4306 x1307) (x3486 x1307)) (ite (and x4586 (not x3527) x865) (x3587 x1307) (x4306 x1307)))))
(assert (x1513 x2546))
(assert (x1513 x218))
(assert (= (and x1448 (not x442)) x2670))
(assert (x2417 x3972))
(assert (x2417 x3800))
(assert (x1513 x486))
(assert (x1513 x1645))
(assert (= x182 (and x1176 (not x2085))))
(assert (= (ite (= x1282 x4178) x2443 (x1267 x1282)) (x15 x1282)))
(assert (= (x1267 x1348) (ite (= x1348 x411) x2156 (x3604 x1348))))
(assert (x778 x338 x190 x571 x3643))
(assert (= (and x3427 (not x1775)) x4829))
(assert (= x2854 (=> (and (= (x2752 x851) x1693) (= x3399 x2013) (= 274184521717934524641157099916833587240 x4269) (<= x1693 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2974 (< x1693 x3774)) (<= 0 x1693) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x851)) (and (=> x2974 x1595) (=> (not x2974) x855)))))
(assert (x1513 x1202))
(assert (x1513 x4234))
(assert (x1513 x3311))
(assert (= (ite x4941 (ite (and (not x2275) x4941) (x2502 x1837) (x1709 x1837)) (x3248 x1837)) (x3618 x1837)))
(assert (= (and (not x2871) x175) x3401))
(assert (x1513 x866))
(assert (x1513 x455))
(assert (x1513 x2697))
(assert (x1513 x4391))
(assert (x2349 x2608 x604))
(assert (x1513 x2774))
(assert (x2349 x780 x2492))
(assert (x1513 x2173))
(assert (x1513 x1739))
(assert (x1513 x1088))
(assert (x1513 x1030))
(assert (x3166 x2796))
(assert (x1513 x3685))
(assert (= (ite x4941 (ite (and (not x2275) x4941) (x1003 x3905) (x539 x3905)) (x3126 x3905)) (x2471 x3905)))
(assert (x1513 x4142))
(assert (x2417 x2482))
(assert (x1513 x4764))
(assert (x1513 x2806))
(assert (=> (> (+ 10000 1) x1735) (= (x1894 x1735) (x4822 x1735))))
(assert (x1513 x1927))
(assert (= (ite (= x4679 x4208) x1441 (x1377 x4208)) (x1939 x4208)))
(assert (x1513 x4417))
(assert (x3166 x4689))
(assert (x1513 x3361))
(assert (x1513 x3268))
(assert (= (=> (and (= x2019 (x3105 x2700)) (= x2700 (x4101 (x1894 x4947) (x4822 209) 0)) (= (> 1 x2019) x1078)) (and (=> (not x1078) x4546) (=> x1078 x2460))) x4423))
(assert (x1513 x3275))
(assert (= (x1939 x4223) (ite (= x4223 x4679) x1441 (x1377 x4223))))
(assert (= (=> (and (not (= x910 599290589)) (= (x4575 (- x3366 4)) x3842) (= (x2328 (x1894 274184521717934524641157099916833587240)) x1502) (= 924834022 x910) (not (= x910 511946350)) (not (= 455944412 x910)) (= (or (and (= (<= x3842 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3842 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3842)) x1426) (> 1166402363 x910) (not (> 455944412 x910)) (> x1502 0) (< x910 2311529814) (not (> 4 x3366))) (and (=> x1426 x2460) (=> (not x1426) x257))) x333))
(assert (x1513 x2329))
(assert (= (x2856 (x4822 157198259)) 157198259))
(assert (= (x4568 x2022) (ite x4806 (ite (and x238 x641) (x4548 x2022) (x130 x2022)) (ite (and x1313 x2519 (not x2648)) (x196 x2022) (x130 x2022)))))
(assert (= x3719 (and x2306 (not x1352))))
(assert (x1513 x1698))
(assert (x1513 x3728))
(assert (= (x15 x3495) (ite (= x3495 x4178) x2443 (x1267 x3495))))
(assert (x1513 x2936))
(assert (x1513 x3479))
(assert (x1513 x2522))
(assert (x1513 x4257))
(assert (x1513 x4754))
(assert (x1513 x3156))
(assert (x1513 x1985))
(assert (= (or (and x182 x792) (and x1176 x2085)) x2844))
(assert (x2417 x4947))
(assert (x3166 x1093))
(assert (x1513 x2402))
(assert (x1513 x3746))
(assert (= (x761 (x1894 x4789)) (ite x3848 (x4230 (x1894 x4789)) (ite (and x2934 (not x3110) x2196) (x529 (x1894 x4789)) (x4230 (x1894 x4789))))))
(assert (x1513 x2365))
(assert (= (=> (and (= (< 0 x1577) x1785) (= x232 x2968) (= x4607 (x4101 (x1894 x2484) (x4822 208) 0)) (= 0 x3353) (= x4250 (x1319 1461501637330902918203684832716283019655932542975 x3202)) (= (x4732 x2508) x1116) (= (x4101 (x1894 x2484) (x4822 208) 0) x1857) (= x4320 (x4575 (- x2446 1))) (not (= 0 x1165)) (= x3799 (x4101 (x1894 x2484) (x4822 208) 0)) (= x4789 (x1319 1461501637330902918203684832716283019655932542975 x679)) (not (= x4789 0)) (= x4730 (x1433 x1346)) (not (= 0 x4250)) (= (x912 x1857) x3202) (= x4025 0) (= (x2328 (x1894 x1030)) x1577) (= (x4732 x2282) x679) (= x2446 (x912 x1145)) (= (x4101 (x1894 x2484) (x4822 210) 0) x2508) (= 0 x2473) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1116) x232) (= (x1319 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2263) x2062) (= (x1319 1461501637330902918203684832716283019655932542975 x2530) x1165) (not (< x2446 1)) (= x2282 (x4101 (x1894 x2484) (x4822 208) 0)) (= x1145 (x4101 (x1894 x1165) (x4822 209) 0)) (= (x1319 1461501637330902918203684832716283019655932542975 x4730) x1030) (= x2263 (x2887 x4607)) (= (x4732 x3799) x2530)) (and (=> (and (= (x2986 x2626) x1616) x1785 (= x3469 (> x1616 0)) (= (x2245 x2917) x1519) (= x2685 (x1229 (+ 36 x2626))) (= x388 (x2328 (x1894 x1030))) (or (and (= x4813 (x1714 x3514)) (or (and (= x653 (x1229 (+ x2626 64))) (or (and (or (and (not x1289) (= (x1229 (+ 160 x4002)) x981) (= (x1714 x3688) x3137) (= x3688 (x1229 (+ x2626 128))) (= (< 128 x1616) x1289) x180 (= 128 x3255)) (and (= x3255 96) (not x180))) x609 (= (x1229 (+ 96 x2626)) x4152) (= x4359 (x1714 x4152)) (= x180 (< 96 x1616)) (= x4697 (x1229 (+ x4002 128)))) (and (not x609) (= 64 x3255))) x3568 (= (> x1616 64) x609) (= x2106 (x1714 x653)) (= (x1229 (+ 96 x4002)) x1778)) (and (not x3568) (= 32 x3255))) (= x3514 x2917) (= x2190 x1072) (= (> x1616 32) x3568) x3469) (and (not x3469) (= 0 x3255))) (= x495 (> x388 0)) (= (x1229 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3637)) x2949) (or (and x3508 (= x2779 (x1229 (+ x2190 x1616)))) (not x3508)) (= x3508 (> x3255 x1616)) (= (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x1519) x3637) x495 (= x2837 0) (= x4002 (x1229 (+ x2626 100))) (= (x4575 (- x4002 x2626)) x1249) (= (x1229 (+ 32 x2626)) x2917) (= x2685 x1529) (= x2190 (x1229 (+ x2685 128))) (= x774 (x1229 (+ 32 x1529))) (= (x4575 (- x1249 32)) x3894)) x4855) (=> (and (< 0 x3221) (not (< x2001 x2402)) (or (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2402 (x3017 (x1894 x4789)))) x4466) (= x1816 x3030) x4466 (= x1917 (- (x2593 (x1894 x4789)) x4020)) (= x1167 (- (x761 (x1894 274184521717934524641157099916833587240)) x2402)) x3969 (= x2850 x3221) (= (< 0 x2850) x422) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4020 (x4296 (x1894 274184521717934524641157099916833587240)))) x3969) (= (x1229 (+ (uninterp_mod (x4296 (x1894 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4020)) x892) x1178 (or (and x57 (= x57 (<= x4970 (x1309 (x1894 274184521717934524641157099916833587240)))) (< x1816 4294967296) (= x3591 (x4319 (x1894 x4789))) (= (x4319 (x1894 274184521717934524641157099916833587240)) x4970) x422 (= (= x3591 (x1309 (x1894 x4789))) x4842) x4842) (not x422)) (= (x1229 (+ (uninterp_mod (x3017 (x1894 x4789)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2402)) x3695) (= (ite (= x2850 0) x2402 0) x4020)) (and (= 0 x3221) (not x1178) (= 0 x3030))) (= (x761 (x1894 274184521717934524641157099916833587240)) x2001) (= x2095 (= 0 x3030)) (= (x761 (x1894 x4789)) x502) (= x1494 (x761 (x1894 274184521717934524641157099916833587240))) (not x1785) (= (and (>= x1494 x2402) (< (+ x2402 x502) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1178)) x3089))) x813))
(assert (x1513 x3030))
(assert (x1513 x2714))
(assert (x1513 x3926))
(assert (= (ite x2139 (ite (and x4337 x526) (x4306 x4335) (x3486 x4335)) (ite (and (not x3527) x4586 x865) (x3587 x4335) (x4306 x4335))) (x1003 x4335)))
(assert (= (=> (= x1228 (= x2419 274184521717934524641157099916833587206)) (and (=> (not x1228) x669) (=> (and (= 32 x580) (= 274184521717934524641157099916833587240 x2592) (not (> 826074471 x1716)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2449) (<= x3524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 36 x3321) (= (or (and (= true (<= x4465 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4465 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4465)) x3002) (not x3002) (not (> 4 x3321)) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x1077) (= (x4575 (- x3321 4)) x4465) (<= 0 x3524) (> x2807 0) (= 36 x3321) (= x2807 (x2328 (x1894 274184521717934524641157099916833587206))) (= x2782 1) (not (= 826074471 x1716)) x1228 (= (x1625 x1077) x3524) (= x1716 1889567281)) x1476))) x1623))
(assert (= (x2471 x2715) (ite x4941 (ite (and x4941 (not x2275)) (x1003 x2715) (x539 x2715)) (x3126 x2715))))
(assert (= (x1939 x3965) (ite (= x3965 x4679) x1441 (x1377 x3965))))
(assert (x1513 x3862))
(assert (x1513 x4465))
(assert (x3166 x679))
(assert (x1513 x3058))
(assert (x1513 x3027))
(assert (x2349 x2280 x768))
(assert (= x3148 (=> (and (= x249 (= x3800 x4959)) (= x3800 x4792)) (and (=> x249 x2707) (=> (not x249) x92)))))
(assert (x1513 x3835))
(assert (= (ite (= x1420 x411) x2156 (x3604 x1420)) (x1267 x1420)))
(assert (x1513 x3779))
(assert (x1513 x2681))
(assert (x1513 x2524))
(assert (= x3278 (and x3095 (not x721))))
(assert (= (ite (= x3051 x4679) x1441 (x1377 x3051)) (x1939 x3051)))
(assert (x1513 x702))
(assert (= (x2856 (x4822 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (x1983 x1420) (ite x3925 (ite x1906 (x2602 x1420) (x1939 x1420)) (x1939 x1420))))
(assert (x1513 x267))
(assert (= (x1083 (x1894 x1081)) (ite (= (x1894 x1081) (x1894 274184521717934524641157099916833587240)) x3573 (x874 (x1894 x1081)))))
(assert (x1513 x3280))
(assert (x1513 x3663))
(assert (=> (> (+ 10000 1) x2202) (= (x1894 x2202) (x4822 x2202))))
(assert (= x631 (=> (= (= x1622 0) x2877) (and (=> (not x2877) x2598) (=> x2877 x2460)))))
(assert (= (x3393 x1328) (ite (= x1328 x970) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2320 x1328))))
(assert (x1513 x4831))
(assert (x1513 x2420))
(assert (= (x1267 x1282) (ite (= x1282 x411) x2156 (x3604 x1282))))
(assert (x1513 x3320))
(assert (= (and (not x1094) x1404) x383))
(assert (= x1008 (and x540 x4440)))
(assert (= x1922 (and (not x1763) x632)))
(assert (= (x208 x1139) (ite x2139 (ite (and x4337 x526) (x24 x1139) (x3846 x1139)) (ite (and x865 x4586 (not x3527)) (x64 x1139) (x3846 x1139)))))
(assert (x1513 x3959))
(assert (x1513 x1161))
(assert (= (and x1186 x2258) x3951))
(assert (= (x1582 (x1894 x3964)) (ite (= (x1894 x3964) (x1894 274184521717934524641157099916833587240)) x4701 (x1912 (x1894 x3964)))))
(assert (x1513 x171))
(assert (x1513 x4809))
(assert (x4187 x1042 x4791))
(assert (x1513 x4073))
(assert (x1513 x2083))
(assert (x1513 x680))
(assert (x1513 x4006))
(assert (x1513 x1386))
(assert (x1513 x3601))
(assert (= (x3155 192) 0))
(assert (x1513 x4020))
(assert (x1513 x2786))
(assert (x1513 x892))
(assert (x3166 x4499))
(assert (x1513 x3347))
(assert (x2349 x3605 x194))
(assert (x1513 x2556))
(assert (x1513 x1222))
(assert (x3166 x1521))
(assert (= (x1720 (x1894 x3907)) (ite x674 (x3670 (x1894 x3907)) (ite (and (not x4004) x4909 x4137) (x4268 (x1894 x3907)) (x3670 (x1894 x3907))))))
(assert (x1513 x3255))
(assert (x1513 x2038))
(assert (x2417 x3200))
(assert (= (x1939 x1082) (ite (= x4679 x1082) x1441 (x1377 x1082))))
(assert (x1513 x340))
(assert (= (ite (= x411 x3562) x2156 (x3604 x3562)) (x1267 x3562)))
(assert (= x3354 (=> (and (= 274184521717934524641157099916833587240 x4739) (= (= 0 x4901) x4691) (= x4901 (x2328 (x1894 x3907))) (= x3220 128)) (and (=> x4691 x2460) (=> (not x4691) x1151)))))
(assert (x1513 x1734))
(assert (= x2989 (and (not x605) x3584)))
(assert (= (x1983 x1744) (ite x3925 (ite x1906 (x2602 x1744) (x1939 x1744)) (x1939 x1744))))
(assert (x1513 x579))
(assert (x1513 x1534))
(assert (x1513 x1304))
(assert (= x893 (or (and x1851 x3290) x94)))
(assert (x1513 x4393))
(assert (=> (< (- x410 1) 10000) (= (x1894 x410) (x4822 x410))))
(assert (x1513 x1181))
(assert (= (x130 x1139) (ite x3925 (ite x1906 (x3726 x1139) (x1625 x1139)) (x4435 x1139))))
(assert (x1513 x3852))
(assert (= (x269 (x1894 x3392)) (ite (and x3767 (not x179)) (x3276 (x1894 x3392)) (ite x2999 (ite x938 (x977 (x1894 x3392)) (x1582 (x1894 x3392))) (x1582 (x1894 x3392))))))
(assert (x1513 x920))
(assert (x1513 x2680))
(assert (= (=> (and (= x536 (= x1260 x219)) (= x2721 274184521717934524641157099916833587240) (= x1260 x17)) (and (=> x536 x222) (=> (not x536) x1272))) x1827))
(assert (x1513 x4545))
(assert (= x667 (and x2559 (not x1357))))
(assert (x1513 x1948))
(assert (= (x1894 26959946667150639794667015087019630673637144422540572481103610249216) (x4822 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x1513 x700))
(assert (x1513 x226))
(assert (x1513 x4467))
(assert (x1513 x1691))
(assert (x1513 x4647))
(assert (x1513 x2740))
(assert (x1513 x2836))
(assert (x3166 x2510))
(assert (x1513 x1169))
(assert (= x4819 (and (not x4672) x3696)))
(assert (x1513 x740))
(assert (x1513 x1164))
(assert (x1513 x1517))
(assert (= x1960 (or (and x4154 x85) (and x3195 x4404) (and x4907 x710) (and x428 x1078) (and x4019 x4397) (and x1862 (not x1045)) (and x1810 x4432) (and (not x1241) x550) (and (not x1291) x2144) (and x366 x230) (and x3729 (not x823)) (and x4464 x2829) (and x4251 x1137) (and x179 x3767) (and x1718 (not x3877)) (and x632 x1763) (and x4685 x3338) (and x593 (not x3100)) (and x3918 (not x3671)) (and x4148 x951) (and x3187 (not x1422)) (and (not x2164) x4352) (and x2992 x3093) (and x3116 (not x1840)) (and x3290 (not x1851)) (and x2990 x4204) (and x1483 x1486) (and x750 x3369) (and x1426 x3942) (and (not x4040) x4643) (and x2427 x287) (and x3419 x308) (and (not x2891) x4975) (and (not x2321) x2049) (and x739 x893) (and x890 x1008) (and x4723 x1911) (and x114 x4971) (and x1922 x4237) (and x3056 (not x3634)) (and x1615 x2877) (and x3335 (not x814)) (and x1370 x4287) (and (not x1124) x4933) (and x4083 x4362) (and x2377 x2483) (and x3011 x3668) (and x592 x383) (and (not x2101) x2832) (and x423 x4691) (and x3980 x941) (and x1404 x1094) (and x2479 x1402) (and x1007 x987) (and x1864 x3150))))
(assert (x1513 x556))
(assert (x1513 x150))
(assert (= (x1083 (x1894 x3441)) (ite (= (x1894 x3441) (x1894 274184521717934524641157099916833587240)) x3573 (x874 (x1894 x3441)))))
(assert (x1513 x1652))
(assert (x1513 x2979))
(assert (= (or x3076 (and x1062 (not x3005))) x4399))
(assert (x3166 x1442))
(assert (x1513 x2148))
(assert (x1513 x2463))
(assert (x1513 x2737))
(assert (= (x1267 x156) (ite (= x411 x156) x2156 (x3604 x156))))
(assert (= x2134 (and x3776 x1961)))
(assert (= (ite (= x2392 x1420) x31 (x4952 x2392)) (x1908 x2392)))
(assert (= (x136 x14) 0))
(assert (= x848 (and x325 x901)))
(assert (= (=> (and (= (= x34 0) x1012) (or (and (= (x1229 (+ 63 x34)) x1425) (not x1012) (= (x1229 (+ x4899 x3062)) x382) (= x4899 x2284) (= x18 x382) (= x3062 (x1319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1425)) (= x3656 (x1229 (+ x3170 96)))) (and (= x2284 96) x1012 (= x18 x4899)))) x2278) x4714))
(assert (x1513 x2626))
(assert (x1513 x3136))
(assert (= (ite x3925 (ite x1906 (x3244 x2715) (x3126 x2715)) (x3171 x2715)) (x102 x2715)))
(assert (= (x3604 x2250) (ite (= x2250 x2241) x844 (x1852 x2250))))
(assert (x1513 x4857))
(assert (x1513 x367))
(assert (= (and (not x941) x3980) x4362))
(assert (= x4917 (and x2709 x3739)))
(assert (x1513 x3137))
(assert (x1513 x4420))
(assert (= (and (not x2271) x2821) x3114))
(assert (= (or (and x4387 (not x4401)) x2686) x2778))
(assert (= (ite x3925 (ite x1906 (x2602 x551) (x1939 x551)) (x1939 x551)) (x1983 x551)))
(assert (= (ite x3925 (ite x1906 (x3726 x45) (x1625 x45)) (x4435 x45)) (x130 x45)))
(assert (x1513 x4752))
(assert (x1513 x4794))
(assert (= (ite (and (not x179) x3767) (x1566 x4175) (ite x2999 (x822 x4175) (x1566 x4175))) (x2088 x4175)))
(assert (x1513 x3445))
(assert (= x4656 (=> (and (= x1704 (x2328 (x1894 x4133))) (= (< 0 x1658) x3705) (= x116 x3632) (= (x1319 1461501637330902918203684832716283019655932542975 x3852) x4133) (or (and (> 4294967296 x2331) (= 1 x2511) x3705) (and (= x1658 x2511) (not x3705))) (= x2892 (x1199 x3644)) (= (x1229 (+ 4 x4633)) x4905) (= x970 x4905) (not (= 0 x1704)) (= (x1199 x491) x3852) (= (x2808 x116 1) x3644) (= (x1199 x3632) x2771) (= 274184521717934524641157099916833587240 x1719)) x557)))
(assert (= (x709 x2611) (ite x4941 (ite (and (not x2275) x4941) (x208 x2611) (x4155 x2611)) (x1625 x2611))))
(assert (x1513 x1472))
(assert (= (ite x2139 (x1436 (x1894 x3907)) (ite (and x4586 x865 (not x3527)) (x2316 (x1894 x3907)) (x1720 (x1894 x3907)))) (x2476 (x1894 x3907))))
(assert (x1513 x1182))
(assert (x1513 x1805))
(assert (= (x1939 x1420) (ite (= x4679 x1420) x1441 (x1377 x1420))))
(assert (= (=> (and (= x1876 (x2328 (x1894 274184521717934524641157099916833587202))) (= x4125 x4301) (= (x4575 (- x4301 4)) x4537) (> x1876 0) (= x4959 x3800) (not (< x4314 826074471)) (= x4301 68) (= x4156 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 2835717307 x4314) (not (= 826074471 x4314)) (not (> 4 x4301)) (not (= x4314 1889567281)) (not (= x4314 2514000705)) (= x2167 (or (and (< x4537 64) (= true (<= x4537 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4537 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x968 x3962)) (and (=> (not x2167) x3148) (=> x2167 x92))) x2586))
(assert (= (x1233 x4766) (ite (and x2648 x209 (not x3358) x412 x2519 x913) (x3886 x4766) (ite (and x913 x2648 x412 x2519 (not x209)) (x4737 x4766) (ite (and x2519 (not x913) x2648 x412) (x3768 x4766) (ite (and x2519 (not x412) x2648) (x1669 x4766) (x2260 x4766)))))))
(assert (= (ite (and (not x179) x3767) (x3282 x2843) (ite x2999 (ite x938 (x2735 x2843) (x2471 x2843)) (x2471 x2843))) (x2293 x2843)))
(assert (x1513 x1365))
(assert (x1513 x10))
(assert (= (x1983 x1459) (ite x3925 (ite x1906 (x2602 x1459) (x1939 x1459)) (x1939 x1459))))
(assert (x1513 x1914))
(assert (x1513 x586))
(assert (x1513 x4152))
(assert (x1513 x42))
(assert (x1513 x2928))
(assert (= (ite (and x3767 (not x179)) (x500 x1036) (ite x2999 (ite x938 (x4870 x1036) (x709 x1036)) (x709 x1036))) (x2174 x1036)))
(assert (x1513 x420))
(assert (x1513 x4479))
(assert (x1513 x2356))
(assert (x1513 x2105))
(assert (x1513 x797))
(assert (x1513 x886))
(assert (= (and (not x890) x1008) x2832))
(assert (x1513 x3807))
(assert (x1513 x396))
(assert (x3166 x2818))
(assert (= x645 (=> (and (= (x1229 (+ x563 324)) x1015) (= (and (<= 0 x4848) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x97)) x1649) (= x97 (x1582 (x1894 x3907))) (= (x4575 (- x1015 324)) x32) (= x3344 324) (= (x1582 (x1894 274184521717934524641157099916833587240)) x4848)) (and (=> (and (= 0 x346) (= x2154 0) (not x1649)) x3544) (=> x1649 x3391)))))
(assert (x1513 x1333))
(assert (= 0 (x3535 x2917)))
(assert (x1513 x483))
(assert (x1513 x3127))
(assert (x1513 x1260))
(assert (x1513 x2662))
(assert (= (x201 x4411) (ite (= x4411 x2218) x4322 (x1377 x4411))))
(assert (x1513 x693))
(assert (x1513 x2233))
(assert (x1513 x4321))
(assert (= (ite x2139 (ite (and x4337 x526) (x24 x1036) (x3846 x1036)) (ite (and x4586 x865 (not x3527)) (x64 x1036) (x3846 x1036))) (x208 x1036)))
(assert (x1513 x4406))
(assert (= (x2541 x159) (ite (= x1892 x159) x2951 (x76 x159))))
(assert (= x896 (x2856 (x1894 x896))))
(assert (x1513 x2962))
(assert (= x3120 (and x2985 (not x355))))
(assert (x1513 x3131))
(assert (x1513 x4689))
(assert (= x3767 (and x4907 (not x710))))
(assert (x2417 x2008))
(assert (x1513 x2024))
(assert (= x1846 (or x4600 (and x4818 (not x3898)))))
(assert (x1513 x2684))
(assert (= (ite x674 (ite (and x4346 x4128) (x572 x2843) (ite (and x2985 x355) (x572 x2843) (x291 x2843))) (ite (and x4909 (not x4004) x4137) (x3580 x2843) (x572 x2843))) (x4306 x2843)))
(assert (= (x2856 (x4822 26959946667150639794667015087019630673637144422540572481103610249216)) 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1513 x27))
(assert (= (ite x3925 (ite x1906 (x2602 (x4822 106)) (x1939 (x4822 106))) (x1939 (x4822 106))) (x1983 (x4822 106))))
(assert (x1513 x1503))
(assert (x1513 x4079))
(assert (x1513 x4126))
(assert (x1513 x4601))
(assert (= x3112 (=> (and (= (x4101 (x1894 x2600) (x4822 209) 0) x4178) (= x4690 (> 1 x472)) (= (x1267 x4178) x472)) (and (=> x4690 x2971) (=> (not x4690) x1393)))))
(assert (x1513 x4624))
(assert (= (=> (and (= (x4101 (x1894 x3022) (x4822 2) 0) x4255) (= (x1319 255 x4988) x4) (= (x2808 x4255 6) x2241) (= x4988 (- (/ x4143 1461501637330902918203684832716283019655932542976) (uninterp_frac x4143 1461501637330902918203684832716283019655932542976))) (= x1291 (< 0 x4)) (= x4143 (x1852 x2241))) (and (=> x1291 x2915) (=> (not x1291) x2460))) x4602))
(assert (x1513 x818))
(assert (x1513 x4918))
(assert (x1513 x1385))
(assert (x1513 x3888))
(assert (x3166 x3582))
(assert (= x1665 (=> (and (= (< x3273 x769) x2943) (= x3273 (x1229 (+ x769 x2647)))) (and (=> x2943 x3986) (=> (not x2943) x2908)))))
(assert (x1513 x2289))
(assert (x1498 x4047 x1489))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2856 (x4822 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x1513 x1087))
(assert (= (ite (and x3767 (not x179)) (x500 x2611) (ite x2999 (ite x938 (x4870 x2611) (x709 x2611)) (x709 x2611))) (x2174 x2611)))
(assert (x1513 x3057))
(assert (x1513 x4482))
(assert (x1513 x2899))
(assert (= (x3535 x4152) 0))
(assert (x1513 x4825))
(assert (x3166 x2852))
(assert (x1513 x1053))
(assert (= (x1507 x4136) (ite x1846 (ite x4600 (x119 x4136) (x3126 x4136)) (x3583 x4136))))
(assert (= x4854 true))
(assert (= 0 (x1844 x3018)))
(assert (x2417 x3392))
(assert (x1513 x4824))
(assert (= x1790 (and x186 (not x3646))))
(assert (= (x102 x1074) (ite x3925 (ite x1906 (x3244 x1074) (x3126 x1074)) (x3171 x1074))))
(assert (= (x201 (x4822 1)) (ite (= (x4822 1) x2218) x4322 (x1377 (x4822 1)))))
(assert (x1513 x1716))
(assert (x2417 x524))
(assert (= (ite (= (x1894 274184521717934524641157099916833587240) (x1894 x3473)) x3573 (x874 (x1894 x3473))) (x1083 (x1894 x3473))))
(assert (x1513 x4446))
(assert (x1513 x3921))
(assert (= x1634 (and x3079 (not x4476))))
(assert (= (x975 x819) 0))
(assert (= (x3604 x3051) (ite (= x2241 x3051) x844 (x1852 x3051))))
(assert (x1513 x1547))
(assert (= (x1451 (x1894 x3392)) (ite x3925 (ite x1906 (x1898 (x1894 x3392)) (x1083 (x1894 x3392))) (x47 (x1894 x3392)))))
(assert (= x3124 (=> (and (= (x4101 (x1894 x3067) (x4822 1) 0) x1484) (= (x709 x1484) x2987) (= (< x2987 x1849) x1989) (>= x2987 0) (= x980 x511) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2987)) (and (=> (not x1989) x3761) (=> x1989 x1853)))))
(assert (= (x4474 x4340) (ite (and x893 (not x739) x781) (x394 x4340) (x4215 x4340))))
(assert (x3166 x780))
(assert (x1513 x415))
(assert (= (x2856 (x1894 x1635)) x1635))
(assert (x1513 x3242))
(assert (= x4549 (and x3110 x2196)))
(assert (x1513 x4025))
(assert (= 0 (x975 x872)))
(assert (x1513 x4182))
(assert (x1513 x2787))
(assert (x1513 x1998))
(assert (= x4576 (and (not x1228) x3507)))
(assert (= (x4568 x2944) (ite x4806 (ite (and x238 x641) (x4548 x2944) (x130 x2944)) (ite (and x1313 (not x2648) x2519) (x196 x2944) (x130 x2944)))))
(assert (= (ite x94 (ite x3368 (x3884 x2611) (x2174 x2611)) (ite (and x287 x1423 (not x2427)) (x3511 x2611) (x2174 x2611))) (x520 x2611)))
(assert (x1513 x1249))
(assert (= (=> (and (= x3068 x2899) (<= x625 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3659 (< x625 x1849)) (= x3905 (x4101 (x1894 x2922) (x4822 1) 0)) (>= x625 0) (= x625 (x2471 x3905))) (and (=> x3659 x991) (=> (not x3659) x1630))) x3681))
(assert (= x4026 (=> (and (> 2311529814 x2527) (= x2142 (x2328 (x1894 274184521717934524641157099916833587240))) (= (x4575 (- x3578 4)) x4060) (not (< x2527 455944412)) (not (= 511946350 x2527)) (= 599290589 x2527) (= x1775 (or (and (> 96 x4060) (= (<= x4060 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4060))) (= x1849 x2213) (= x32 x3578) (< x2527 1166402363) (= x3578 100) (= x2600 x4341) (> x2142 0) (not (= 455944412 x2527)) (= x1765 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x3578))) (and (=> (not x1775) x3084) (=> x1775 x2971)))))
(assert (= (x2856 (x2808 x3417 2)) (+ (x2856 x3417) 2)))
(assert (x1513 x3103))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x1081) x70) (and (=> (not x70) x4111) (=> (and (= x3641 x1202) (< 0 x3820) (= 1 x3445) (= (x4575 (- x1202 4)) x3193) (= x3601 1889567281) (= (x4101 (x1894 274184521717934524641157099916833587240) (x4822 1) 0) x210) (= 274184521717934524641157099916833587240 x440) (not (> 4 x1202)) (= x3820 (x2328 (x1894 274184521717934524641157099916833587202))) (= x1600 (x3171 x210)) x70 (not (= x3601 826074471)) (not x3714) (= 36 x1202) (>= x1600 0) (not (< x3601 826074471)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1600) (= x2217 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3193) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3193) true) (< x3193 32))) x3714) (= 32 x2725)) x3489))) x1396))
(assert (x1513 x2473))
(assert (= (x2856 (x4822 117300739)) 117300739))
(assert (= x306 (=> (and (= (x2808 x4255 2) x246) (= x1864 (< x2318 x968)) (= x1849 (x1229 (+ x2318 x4470))) (= x693 (x3604 x246))) (and (=> (not x1864) x4106) (=> x1864 x2460)))))
(assert (x1513 x80))
(assert (= (x3604 x551) (ite (= x2241 x551) x844 (x1852 x551))))
(assert (x1513 x2317))
(assert (x1513 x4055))
(assert (= (ite (and x4019 (not x4397)) (x2865 (x1894 x335)) (ite (and x2992 (not x3093) x1121) (x1619 (x1894 x335)) (x2865 (x1894 x335)))) (x2098 (x1894 x335))))
(assert (x1513 x798))
(assert (=> (> (+ 10000 1) x2747) (= (x4822 x2747) (x1894 x2747))))
(assert (x1513 x2579))
(assert (x3166 x1385))
(assert (x1513 x1399))
(assert (x2349 x112 x3461))
(assert (x1513 x2796))
(assert (x1513 x2759))
(assert (x1513 x3932))
(assert (= (x3863 x4766) (ite (and x2648 (not x4494) x2519) (x1233 x4766) (x1212 x4766))))
(assert (x1513 x1725))
(assert (= 0 (x2885 x3959)))
(assert (= (x1267 x168) (ite (= x168 x411) x2156 (x3604 x168))))
(assert (x1513 x4836))
(assert (= true x554))
(assert (= 0 (x4740 x4775)))
(assert (= (x2548 128) (x3227 128)))
(assert (x1513 x2478))
(assert (= (x1844 x3300) 0))
(assert (x2349 x2530 x958))
(assert (=> (> (+ 10000 1) x850) (= (x4822 x850) (x1894 x850))))
(assert (= (ite x1846 (ite x4600 (x119 x3736) (x3126 x3736)) (x3583 x3736)) (x1507 x3736)))
(assert (x1513 x341))
(assert (x1513 x4729))
(assert (x1513 x869))
(assert (x1513 x4156))
(assert (x1513 x2703))
(assert (x1513 x1868))
(assert (= (ite x3925 (ite x1906 (x4761 x3713) (x3248 x3713)) (ite (and x570 x877) (x2576 x3713) (x3248 x3713))) (x4828 x3713)))
(assert (x1513 x3581))
(assert (x1513 x1949))
(assert (x1513 x2280))
(assert (= (ite x3925 (ite x1906 (x1898 (x1894 x850)) (x1083 (x1894 x850))) (x47 (x1894 x850))) (x1451 (x1894 x850))))
(assert (= (=> (= x4672 (> x2647 x1464)) (and (=> x4672 x3986) (=> (not x4672) x4861))) x3700))
(assert (x2349 x1453 x4593))
(assert (= (x1507 x3968) (ite x1846 (ite x4600 (x119 x3968) (x3126 x3968)) (x3583 x3968))))
(assert (= (and x1629 x1757) x1919))
(assert (= x1370 (and x1049 (not x1052))))
(assert (x1513 x3355))
(assert (= (ite (and (not x941) x3980 x542) (x1997 x3959) (x4441 x3959)) (x2477 x3959)))
(assert (= (ite x1846 (ite x4600 (x1727 (x1894 x1662)) (x853 (x1894 x1662))) (x1807 (x1894 x1662))) (x3519 (x1894 x1662))))
(assert (= (x15 x3051) (ite (= x3051 x4178) x2443 (x1267 x3051))))
(assert (x1513 x1384))
(assert (= (x1267 x4178) (ite (= x411 x4178) x2156 (x3604 x4178))))
(assert (x1513 x3859))
(assert (= x368 (x2856 (x1894 x368))))
(assert (x1513 x362))
(assert (= (ite (= x1883 x4679) x1441 (x1377 x1883)) (x1939 x1883)))
(assert (x1513 x2504))
(assert (= (x1939 x1041) (ite (= x1041 x4679) x1441 (x1377 x1041))))
(assert (x1513 x4013))
(assert (= x995 (x2856 (x1894 x995))))
(assert (= x4522 (and x1933 x371)))
(assert (x1513 x1327))
(assert (x3166 x4725))
(assert (x1513 x1211))
(assert (= (ite (= x411 x694) x2156 (x3604 x694)) (x1267 x694)))
(assert (= (x1003 x3905) (ite x2139 (ite (and x526 x4337) (x4306 x3905) (x3486 x3905)) (ite (and x4586 x865 (not x3527)) (x3587 x3905) (x4306 x3905)))))
(assert (= (x1451 (x1894 x3964)) (ite x3925 (ite x1906 (x1898 (x1894 x3964)) (x1083 (x1894 x3964))) (x47 (x1894 x3964)))))
(assert (= (x4568 x2638) (ite x4806 (ite (and x238 x641) (x4548 x2638) (x130 x2638)) (ite (and (not x2648) x2519 x1313) (x196 x2638) (x130 x2638)))))
(assert (x1513 x3641))
(assert (x1513 x4260))
(assert (x3166 x2263))
(assert (= x459 (and x4614 x3447)))
(assert (x1513 x3637))
(assert (= x1165 (x2856 (x1894 x1165))))
(assert (x1513 x2695))
(assert (x1513 x1015))
(assert (x2417 x1635))
(assert (x1513 x689))
(assert (x4612 x1887 x1928 x3485 x4311))
(assert (= (ite x3925 (ite x1906 (x2602 x4832) (x1939 x4832)) (x1939 x4832)) (x1983 x4832)))
(assert (x1513 x4118))
(assert (= (x1651 x1328) (ite (= x1328 x3722) x1726 (x1802 x1328))))
(assert (x778 x2308 x1896 x3128 x3415))
(assert (x1513 x4229))
(assert (= (ite (= x487 x4679) x1441 (x1377 x487)) (x1939 x487)))
(assert (= (x2856 (x1894 x1735)) x1735))
(assert (x1513 x1328))
(assert (= (=> (and (= x3170 (x1229 (+ x4226 100))) (= (x1229 (+ 32 x3361)) x2365) (= x2359 (x4575 (- x103 32))) (= (x1229 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2115)) x4361) (= x1855 x3361) (= x1855 (x1229 (+ x4226 36))) (= x4899 (x1229 (+ 128 x1855))) (= x41 (x2328 (x1894 x847))) (= (x1229 (+ 32 x4226)) x137) (= (x271 x137) x3122) (= x2115 (x1319 26959946667150639794667015087019630673637144422540572481103610249215 x3122)) (= (> x41 0) x814) (= x103 (x4575 (- x3170 x4226))) (= x1384 0)) (and (=> (and (= x3230 (> x3090 x1774)) x814 (= x1774 (x2432 x4226)) (or (not x3230) (and (= x717 (x1229 (+ x4899 x1774))) x3230)) (or (and (not x3284) (= 0 x3090)) (and x3284 (= x854 x4899) (= x3990 (> x1774 32)) (or (and (= (x1229 (+ 64 x4226)) x213) (= x508 (x2916 x213)) x3990 (or (and (not x1417) (= 64 x3090)) (and (= (x1229 (+ x4226 96)) x1298) (or (and (= x3090 96) (not x2726)) (and x2726 (= x3090 128) (= x1947 (< 128 x1774)) (= (x2916 x4498) x923) (not x1947) (= (x1229 (+ 160 x3170)) x3153) (= x4498 (x1229 (+ x4226 128))))) (= (< 96 x1774) x2726) x1417 (= (x1229 (+ 128 x3170)) x2504) (= x3247 (x2916 x1298)))) (= (x1229 (+ 96 x3170)) x3396) (= (> x1774 64) x1417)) (and (not x3990) (= x3090 32))) (= x1954 (x2916 x4406)) (= x4406 x137))) (= x3284 (< 0 x1774))) x474) (=> (not x814) x2460))) x1572))
(assert (= (x130 x3983) (ite x3925 (ite x1906 (x3726 x3983) (x1625 x3983)) (x4435 x3983))))
(assert (x1513 x1819))
(assert (x1513 x2438))
(assert (x2417 x2419))
(assert (x1513 x4151))
(assert (= (x1983 (x4822 1)) (ite x3925 (ite x1906 (x2602 (x4822 1)) (x1939 (x4822 1))) (x1939 (x4822 1)))))
(assert (x1513 x2507))
(assert (x934 x225 x3253))
(assert (x1513 x2562))
(assert (x1513 x4315))
(assert (= (and (not x3369) x750) x540))
(assert (x1513 x2692))
(assert (= x238 (and x2648 x2519)))
(assert (= (x2502 x1837) (ite x2139 (x3824 x1837) (ite (and x4586 x865 (not x3527)) (x381 x1837) (x3824 x1837)))))
(assert (x1513 x2132))
(assert (x1513 x1789))
(assert (= x2025 (=> (and (= x1206 (x2328 (x1894 x1081))) (= (> x1206 0) x4029)) (and (=> (and (not x4029) (= x2621 x2480) (= (x1083 (x1894 274184521717934524641157099916833587240)) x2621) (= 128 x2491)) x2128) (=> x4029 x2610)))))
(assert (x1513 x2367))
(assert (x1513 x2458))
(assert (x1513 x2499))
(assert (x1513 x1938))
(assert (= (ite x3426 (ite (and x4516 x1308) (x386 x2179) (x3661 x2179)) (ite (and x2645 (not x4964) x906) (x4150 x2179) (x3661 x2179))) (x3031 x2179)))
(assert (x3166 x2232))
(assert (x3166 x2008))
(assert (x1513 x315))
(assert (= x3692 (and x4235 (not x1014))))
(assert (x1513 x1344))
(assert (= (and (not x1989) x668) x374))
(check-sat)
