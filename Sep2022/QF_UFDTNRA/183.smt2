(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x1338 0)) (((x1133 (x243 x1338) (x316 Real)) (x355 (x466 x1338) (x300 x1338) (x1381 Real)) (x604 (x73 Real)))))
(declare-fun x413 () Bool)
(declare-fun x983 () Real)
(declare-fun x1546 () Bool)
(declare-fun x565 () Bool)
(declare-fun x908 () Bool)
(declare-fun x689 () Bool)
(declare-fun x658 () Real)
(declare-fun x1560 () x1338)
(declare-fun x720 () Bool)
(declare-fun x265 () Real)
(declare-fun x1322 (x1338) Real)
(declare-fun x914 () Bool)
(declare-fun x104 () Bool)
(declare-fun x561 () x1338)
(declare-fun x111 () Real)
(declare-fun x509 () x1338)
(declare-fun x605 () Bool)
(declare-fun x427 () Bool)
(declare-fun x965 () Real)
(declare-fun x1186 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x480 () x1338)
(declare-fun x817 () Bool)
(declare-fun x467 () Bool)
(declare-fun x1571 () Real)
(declare-fun x1553 () x1338)
(declare-fun x1610 () Bool)
(declare-fun x1022 () Real)
(declare-fun x471 () x1338)
(declare-fun x248 () Real)
(declare-fun x149 () Bool)
(declare-fun x593 () Real)
(declare-fun x1301 () Real)
(declare-fun x846 () Real)
(declare-fun x130 () x1338)
(declare-fun x1339 (x1338) Real)
(declare-fun x1573 () Real)
(declare-fun x1112 () Bool)
(declare-fun x405 () Real)
(declare-fun x1139 () Real)
(declare-fun x421 () Bool)
(declare-fun x286 () x1338)
(declare-fun x542 () Bool)
(declare-fun x981 () Real)
(declare-fun x465 () Real)
(declare-fun x176 () Bool)
(declare-fun x323 () Real)
(declare-fun x1058 () Real)
(declare-fun x1323 () Real)
(declare-fun x978 () x1338)
(declare-fun x594 () Real)
(declare-fun x1029 () Real)
(declare-fun x1187 () Real)
(declare-fun x1223 () Real)
(declare-fun x657 () Real)
(declare-fun x45 () x1338)
(declare-fun x1071 () Real)
(declare-fun x1247 () Real)
(declare-fun x1442 () Bool)
(declare-fun x557 () Bool)
(declare-fun x1079 () Real)
(declare-fun x1519 () Real)
(declare-fun x279 () Bool)
(declare-fun x741 () Real)
(declare-fun x1259 () Real)
(declare-fun x549 () Real)
(declare-fun x1319 () Real)
(declare-fun x940 () Bool)
(declare-fun x1070 () x1338)
(declare-fun x48 () Real)
(declare-fun x96 () Real)
(declare-fun x1082 () Real)
(declare-fun x618 () x1338)
(declare-fun x732 () Real)
(declare-fun x101 () Real)
(declare-fun x696 () Real)
(declare-fun x109 () Real)
(declare-fun x831 () x1338)
(declare-fun x823 () x1338)
(declare-fun x342 () x1338)
(declare-fun x1520 () Bool)
(declare-fun x883 () Real)
(declare-fun x1114 () Bool)
(declare-fun x1083 () Real)
(declare-fun x1277 () Bool)
(declare-fun x1513 () Real)
(declare-fun x1494 () Real)
(declare-fun x1163 () Real)
(declare-fun x1147 () x1338)
(declare-fun x311 () x1338)
(declare-fun x409 () Bool)
(declare-fun x985 () Real)
(declare-fun x1280 () Real)
(declare-fun x363 () Real)
(declare-fun x880 () Real)
(declare-fun x894 () Real)
(declare-fun x1574 () x1338)
(declare-fun x733 () Real)
(declare-fun x897 () Real)
(declare-fun x1541 () Real)
(declare-fun x773 () Real)
(declare-fun x760 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x1589 () Real)
(declare-fun x1463 () Bool)
(declare-fun x1276 () Real)
(declare-fun x624 () Bool)
(declare-fun x224 () x1338)
(declare-fun x1547 () Bool)
(declare-fun x505 () Real)
(declare-fun x1129 () Bool)
(declare-fun x219 () x1338)
(declare-fun x80 () Real)
(declare-fun x1366 () Real)
(declare-fun x442 () Real)
(declare-fun x794 () Real)
(declare-fun x1344 () Real)
(declare-fun x560 () Real)
(declare-fun x653 () Bool)
(declare-fun x962 () Real)
(declare-fun x1231 () Bool)
(declare-fun x787 () Real)
(declare-fun x625 () Real)
(declare-fun x242 () Real)
(declare-fun x881 () Bool)
(declare-fun x577 () x1338)
(declare-fun x892 () x1338)
(declare-fun x1241 () Real)
(declare-fun x458 () Real)
(declare-fun x1066 () Real)
(declare-fun x1397 (x1338) Real)
(declare-fun x261 () Real)
(declare-fun x446 () Real)
(declare-fun x488 () x1338)
(declare-fun x737 () Real)
(declare-fun x217 () Bool)
(declare-fun x1504 () Real)
(declare-fun x1345 (Real) Real)
(declare-fun x640 () Real)
(declare-fun x1460 () Real)
(declare-fun x895 () Real)
(declare-fun x1484 () Real)
(declare-fun x1516 () x1338)
(declare-fun x1318 (x1338) Real)
(declare-fun x1511 () Real)
(declare-fun x1475 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x234 () Real)
(declare-fun x1063 () Real)
(declare-fun x665 () Real)
(declare-fun x166 () x1338)
(declare-fun x1065 () x1338)
(declare-fun x240 (x1338) Real)
(declare-fun x1032 () Real)
(declare-fun x1211 () Bool)
(declare-fun x551 () Real)
(declare-fun x973 () x1338)
(declare-fun x1370 () Real)
(declare-fun x1101 () Real)
(declare-fun x920 () Bool)
(declare-fun x934 () Real)
(declare-fun x1396 () Real)
(declare-fun x128 () Real)
(declare-fun x723 () Real)
(declare-fun x777 () Real)
(declare-fun x768 () x1338)
(declare-fun x1500 () Real)
(declare-fun x1515 () Bool)
(declare-fun x320 () Bool)
(declare-fun x1556 () x1338)
(declare-fun x315 () Bool)
(declare-fun x27 () x1338)
(declare-fun x30 () Real)
(declare-fun x1297 () x1338)
(declare-fun x963 () Real)
(declare-fun x806 () Real)
(declare-fun x189 () Real)
(declare-fun x72 (Real) Real)
(declare-fun x1149 () Bool)
(declare-fun x307 () x1338)
(declare-fun x1160 () Bool)
(declare-fun x1258 () Real)
(declare-fun x567 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x344 () Bool)
(declare-fun x273 () Real)
(declare-fun x1487 () Bool)
(declare-fun x987 () x1338)
(declare-fun x1369 () x1338)
(declare-fun x852 () Bool)
(declare-fun x673 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x88 () x1338)
(declare-fun x400 () Bool)
(declare-fun x263 (x1338) Real)
(declare-fun x526 () Real)
(declare-fun x1028 () Real)
(declare-fun x1465 () Real)
(declare-fun x698 () Real)
(declare-fun x259 () Real)
(declare-fun x304 () x1338)
(declare-fun x692 () x1338)
(declare-fun x691 () Bool)
(declare-fun x479 () Real)
(declare-fun x1329 () Bool)
(declare-fun x515 (x1338) Real)
(declare-fun x1316 () Bool)
(declare-fun x901 () x1338)
(declare-fun x33 () Real)
(declare-fun x890 () Bool)
(declare-fun x1539 () Real)
(declare-fun x628 () Bool)
(declare-fun x210 () Bool)
(declare-fun x1557 () Real)
(declare-fun x1390 () Real)
(declare-fun x731 () x1338)
(declare-fun x1268 () Real)
(declare-fun x1550 () x1338)
(declare-fun x1035 () x1338)
(declare-fun x49 () Real)
(declare-fun x1282 () Bool)
(declare-fun x918 () Real)
(declare-fun x841 (Real) Real)
(declare-fun x1613 () Real)
(declare-fun x1409 () x1338)
(declare-fun x822 () x1338)
(declare-fun x810 () Bool)
(declare-fun x1415 () Real)
(declare-fun x95 () Bool)
(declare-fun x797 () Real)
(declare-fun x423 () Bool)
(declare-fun x1455 () Real)
(declare-fun x138 () x1338)
(declare-fun x686 () x1338)
(declare-fun x312 () Real)
(declare-fun x911 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x412 () Bool)
(declare-fun x441 () Real)
(declare-fun x1472 () Bool)
(declare-fun x905 () Bool)
(declare-fun x1572 () Real)
(declare-fun x53 () Bool)
(declare-fun x250 () Bool)
(declare-fun x748 () x1338)
(declare-fun x954 () Real)
(declare-fun x550 () Real)
(declare-fun x610 () x1338)
(declare-fun x294 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x407 () Real)
(declare-fun x1166 () Real)
(declare-fun x119 () Real)
(declare-fun x22 () Bool)
(declare-fun x819 () Real)
(declare-fun x769 () Real)
(declare-fun x439 () Real)
(declare-fun x952 () Real)
(declare-fun x225 () Bool)
(declare-fun x1405 () Real)
(declare-fun x743 () Bool)
(declare-fun x1125 () x1338)
(declare-fun x211 () Real)
(declare-fun x1225 () Real)
(declare-fun x1509 () x1338)
(declare-fun x19 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1068 () Real)
(declare-fun x291 () Real)
(declare-fun x1424 () Real)
(declare-fun x337 () x1338)
(declare-fun x1311 () Bool)
(declare-fun x738 () Real)
(declare-fun x1217 () Real)
(declare-fun x518 () Bool)
(declare-fun x528 () Real)
(declare-fun x1383 () Bool)
(declare-fun x113 () Real)
(declare-fun x1394 () Bool)
(declare-fun x1154 () x1338)
(declare-fun x493 () Real)
(declare-fun x650 () x1338)
(declare-fun x1334 () Real)
(declare-fun x456 () Real)
(declare-fun x1144 () Real)
(declare-fun x1286 () Bool)
(declare-fun x848 () Real)
(declare-fun x1449 () Bool)
(declare-fun x348 () x1338)
(declare-fun x865 () Real)
(declare-fun x1229 () Bool)
(declare-fun x535 () Bool)
(declare-fun x1412 () x1338)
(declare-fun x1287 () Real)
(declare-fun x235 () Real)
(declare-fun x349 () Bool)
(declare-fun x827 () Real)
(declare-fun x1015 () x1338)
(declare-fun x483 () Real)
(declare-fun x460 () Real)
(declare-fun x710 () Real)
(declare-fun x1608 () x1338)
(declare-fun x1525 () Real)
(declare-fun x314 () x1338)
(declare-fun x159 () Real)
(declare-fun x1220 (Real Real) Real)
(declare-fun x489 () Real)
(declare-fun x200 () Bool)
(declare-fun x891 () Real)
(declare-fun x145 () x1338)
(declare-fun x925 () Real)
(declare-fun x984 () Real)
(declare-fun x1459 () Bool)
(declare-fun x959 () Bool)
(declare-fun x1364 () Real)
(declare-fun x546 () Real)
(declare-fun x1551 () Bool)
(declare-fun x285 () Real)
(declare-fun x1042 () Real)
(declare-fun x436 () Real)
(declare-fun x213 () Bool)
(declare-fun x14 () x1338)
(declare-fun x313 () x1338)
(declare-fun x774 (x1338) Real)
(declare-fun x1155 () Real)
(declare-fun x678 () Bool)
(declare-fun x417 () Bool)
(declare-fun x335 () x1338)
(declare-fun x452 () Bool)
(declare-fun x585 () Real)
(declare-fun x1064 () Bool)
(declare-fun x1128 () Real)
(declare-fun x36 () Real)
(declare-fun x533 () Bool)
(declare-fun x156 () Real)
(declare-fun x750 () Real)
(declare-fun x1391 (x1338) Real)
(declare-fun x1025 () Real)
(declare-fun x715 () Real)
(declare-fun x1115 () Bool)
(declare-fun x862 () Bool)
(declare-fun x106 () Bool)
(declare-fun x630 () Bool)
(declare-fun x646 () Real)
(declare-fun x566 () Real)
(declare-fun x964 () Real)
(declare-fun x40 () Bool)
(declare-fun x1575 () Real)
(declare-fun x1260 () Bool)
(declare-fun x396 () Bool)
(declare-fun x478 () Real)
(declare-fun x1559 () Bool)
(declare-fun x1210 () Real)
(declare-fun x857 () Bool)
(declare-fun x121 () Real)
(declare-fun x833 () x1338)
(declare-fun x1261 () x1338)
(declare-fun x55 () Real)
(declare-fun x105 () Real)
(declare-fun x203 () x1338)
(declare-fun x1182 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x388 () Bool)
(declare-fun x220 () Real)
(declare-fun x278 () Real)
(declare-fun x834 () Real)
(declare-fun x1440 () Real)
(declare-fun x1336 () x1338)
(declare-fun x793 () Bool)
(declare-fun x1081 () Real)
(declare-fun x564 () Real)
(declare-fun x6 () x1338)
(declare-fun x1495 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x1165 () Real)
(declare-fun x1006 () Real)
(declare-fun x1607 () Real)
(declare-fun x555 () Real)
(declare-fun x1332 () Bool)
(declare-fun x958 () x1338)
(declare-fun x534 () Bool)
(declare-fun x718 () Real)
(declare-fun x1086 () Bool)
(declare-fun x287 () Real)
(declare-fun x582 () x1338)
(declare-fun x1257 () Bool)
(declare-fun x816 () Bool)
(declare-fun x1395 () Real)
(declare-fun x1107 () Real)
(declare-fun x603 () Bool)
(declare-fun x1289 () Real)
(declare-fun x457 () Bool)
(declare-fun x798 () Real)
(declare-fun x308 () Real)
(declare-fun x1158 () Real)
(declare-fun x284 () Bool)
(declare-fun x1503 () Real)
(declare-fun x591 () x1338)
(declare-fun x849 () Real)
(declare-fun x1142 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x395 () Real)
(declare-fun x84 () Bool)
(declare-fun x656 () Bool)
(declare-fun x1480 () x1338)
(declare-fun x1569 () Bool)
(declare-fun x70 () Real)
(declare-fun x1585 () Bool)
(declare-fun x764 () Real)
(declare-fun x1172 () Real)
(declare-fun x953 () Real)
(declare-fun x765 () Bool)
(declare-fun x425 () Real)
(declare-fun x1499 () Real)
(declare-fun x1127 () Real)
(declare-fun x672 () Real)
(declare-fun x20 () Real)
(declare-fun x1199 () Real)
(declare-fun x435 () Bool)
(declare-fun x756 () x1338)
(declare-fun x332 () Real)
(declare-fun x712 (x1338) Real)
(declare-fun x896 () Real)
(declare-fun x1054 () Real)
(declare-fun x1372 () Real)
(declare-fun x939 () Bool)
(declare-fun x201 () Real)
(declare-fun x820 () Real)
(declare-fun x928 () Real)
(declare-fun x1598 () Real)
(declare-fun x1012 () Real)
(declare-fun x115 () Real)
(declare-fun x1526 () Real)
(declare-fun x1478 () Real)
(declare-fun x387 () Real)
(declare-fun x75 () Real)
(declare-fun x477 () Real)
(declare-fun x1436 () Real)
(declare-fun x956 () Real)
(declare-fun x708 () Real)
(declare-fun x649 () Real)
(declare-fun x878 () Real)
(declare-fun x147 (Real) Real)
(declare-fun x297 () Real)
(declare-fun x796 () Real)
(declare-fun x365 () Real)
(declare-fun x502 () Real)
(declare-fun x788 () Bool)
(declare-fun x753 () x1338)
(declare-fun x1341 () Real)
(declare-fun x1009 () x1338)
(declare-fun x824 (Real) Real)
(declare-fun x1161 () x1338)
(declare-fun x1601 () Real)
(declare-fun x216 () Real)
(declare-fun x503 () x1338)
(declare-fun x144 () Bool)
(declare-fun x757 () x1338)
(declare-fun x966 () x1338)
(declare-fun x411 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1243 () x1338)
(declare-fun x836 () Real)
(declare-fun x1188 () Real)
(declare-fun x1536 () Real)
(declare-fun x1534 () Real)
(declare-fun x43 () Real)
(declare-fun x1227 () Bool)
(declare-fun x236 () Bool)
(declare-fun x1448 () Real)
(declare-fun x44 () Real)
(declare-fun x1528 () Real)
(declare-fun x736 () Bool)
(declare-fun x995 () Real)
(declare-fun x784 () Real)
(declare-fun x1467 () Bool)
(declare-fun x837 () x1338)
(declare-fun x1570 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x98 () Real)
(declare-fun x381 () Bool)
(declare-fun x1011 () Real)
(declare-fun x832 () Bool)
(declare-fun x253 () Real)
(declare-fun x600 () x1338)
(declare-fun x972 () Bool)
(declare-fun x107 () Real)
(declare-fun x1100 () Bool)
(declare-fun x146 () Real)
(declare-fun x898 () Bool)
(declare-fun x1497 () Real)
(declare-fun x205 () x1338)
(declare-fun x1348 () Real)
(declare-fun x1596 () Real)
(declare-fun x1036 () Real)
(declare-fun x1384 () Bool)
(declare-fun x758 () Real)
(declare-fun x218 () x1338)
(declare-fun x18 () Bool)
(declare-fun x1135 () Real)
(declare-fun x869 () Real)
(declare-fun x1098 () Bool)
(declare-fun x202 () Bool)
(declare-fun x1094 () Real)
(declare-fun x1433 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x183 () x1338)
(declare-fun x1255 () x1338)
(declare-fun x1612 () Real)
(declare-fun x1076 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x804 () x1338)
(declare-fun x1067 () Real)
(declare-fun x1284 () Real)
(declare-fun x1200 () Real)
(declare-fun x1514 () x1338)
(declare-fun x508 () Real)
(declare-fun x1 () Bool)
(declare-fun x7 () Real)
(declare-fun x371 () Real)
(declare-fun x410 () Real)
(declare-fun x1393 () Bool)
(declare-fun x850 () Real)
(declare-fun x1246 (Real) Real)
(declare-fun x302 () x1338)
(declare-fun x1283 () Real)
(declare-fun x943 (x1338) Real)
(declare-fun x725 () Real)
(declare-fun x454 () Real)
(declare-fun x1151 () x1338)
(declare-fun x262 () Bool)
(declare-fun x543 (x1338) Real)
(declare-fun x519 () Real)
(declare-fun x1131 () Bool)
(declare-fun x97 () Real)
(declare-fun x803 () x1338)
(declare-fun x622 () Bool)
(declare-fun x900 () Real)
(declare-fun x1413 () Real)
(declare-fun x856 () Bool)
(declare-fun x1359 () Real)
(declare-fun x1313 () Real)
(declare-fun x838 () Real)
(declare-fun x1175 () Real)
(declare-fun x1156 () Real)
(declare-fun x751 (Real) Real)
(declare-fun x153 () Bool)
(declare-fun x398 () x1338)
(declare-fun x418 () x1338)
(declare-fun x1089 () x1338)
(declare-fun x41 () Bool)
(declare-fun x319 () x1338)
(declare-fun x541 () Real)
(declare-fun x699 () Real)
(declare-fun x1102 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x716 () Bool)
(declare-fun x249 () x1338)
(declare-fun x449 () Bool)
(declare-fun x1285 () x1338)
(declare-fun x169 () Real)
(declare-fun x292 () Real)
(declare-fun x1049 () Real)
(declare-fun x702 () Bool)
(declare-fun x815 () Bool)
(declare-fun x470 () Bool)
(declare-fun x684 () Real)
(declare-fun x520 () Real)
(declare-fun x588 () Bool)
(declare-fun x377 () Real)
(declare-fun x1476 () Real)
(declare-fun x245 () Real)
(declare-fun x705 () Real)
(declare-fun x416 () Bool)
(declare-fun x524 () Real)
(declare-fun x1522 () Real)
(declare-fun x208 () Bool)
(declare-fun x276 () Real)
(declare-fun x206 () Real)
(declare-fun x664 () Real)
(declare-fun x444 () Real)
(declare-fun x1444 () x1338)
(declare-fun x507 () x1338)
(declare-fun x199 () Bool)
(declare-fun x433 () Real)
(declare-fun x35 () Real)
(declare-fun x1013 () Bool)
(declare-fun x420 () Real)
(declare-fun x275 () x1338)
(declare-fun x12 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x811 () Real)
(declare-fun x1498 () Bool)
(declare-fun x969 () Real)
(declare-fun x78 (Real) Real)
(declare-fun x1545 () Real)
(declare-fun x703 () Real)
(declare-fun x1053 () Bool)
(declare-fun x955 () Real)
(declare-fun x1611 (Real) Real)
(declare-fun x572 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x399 () Real)
(declare-fun x544 () Real)
(declare-fun x227 () x1338)
(declare-fun x99 () Real)
(declare-fun x1203 () Bool)
(declare-fun x326 () Bool)
(declare-fun x406 () Bool)
(declare-fun x299 () Bool)
(declare-fun x1218 () x1338)
(declare-fun x374 () Real)
(declare-fun x228 (Real) Real)
(declare-fun x596 () Bool)
(declare-fun x746 () Real)
(declare-fun x690 () Real)
(declare-fun x855 () Real)
(declare-fun x383 () Bool)
(declare-fun x685 () x1338)
(declare-fun x194 () Bool)
(declare-fun x693 () x1338)
(declare-fun x1373 () Real)
(declare-fun x633 () Real)
(declare-fun x62 () x1338)
(declare-fun x949 () Real)
(declare-fun x380 () Bool)
(declare-fun x103 () Real)
(declare-fun x927 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x1355 () Real)
(declare-fun x654 () Real)
(declare-fun x1040 () Real)
(declare-fun x1281 () Bool)
(declare-fun x700 () Real)
(declare-fun x63 () x1338)
(declare-fun x126 () x1338)
(declare-fun x1236 () Bool)
(declare-fun x1377 () Real)
(declare-fun x379 () x1338)
(declare-fun x929 () Real)
(declare-fun x989 () Real)
(declare-fun x1564 () Bool)
(declare-fun x350 () Real)
(declare-fun x1482 (x1338) Real)
(declare-fun x938 () Real)
(declare-fun x1252 () Bool)
(declare-fun x306 () Real)
(declare-fun x498 () Bool)
(declare-fun x192 () Real)
(declare-fun x1090 () Real)
(declare-fun x196 () Bool)
(declare-fun x74 () Bool)
(declare-fun x310 () x1338)
(declare-fun x786 () Real)
(declare-fun x163 () Real)
(declare-fun x1270 () Bool)
(declare-fun x539 () Bool)
(declare-fun x415 () Bool)
(declare-fun x980 () x1338)
(declare-fun x583 (x1338) Real)
(declare-fun x141 () Bool)
(declare-fun x1347 () x1338)
(declare-fun x974 () Real)
(declare-fun x468 () x1338)
(declare-fun x1273 () Bool)
(declare-fun x120 () x1338)
(declare-fun x679 () Bool)
(declare-fun x1581 () x1338)
(declare-fun x522 () Bool)
(declare-fun x1119 (Real) Real)
(declare-fun x513 () Real)
(declare-fun x64 () Real)
(declare-fun x160 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x814 () Real)
(declare-fun x845 () Bool)
(declare-fun x277 () x1338)
(declare-fun x239 () Real)
(declare-fun x1212 () Real)
(declare-fun x186 () Real)
(declare-fun x590 () Bool)
(declare-fun x957 () Real)
(declare-fun x237 () Bool)
(declare-fun x403 () Bool)
(declare-fun x859 () x1338)
(declare-fun x568 () Real)
(declare-fun x648 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x336 () Real)
(declare-fun x826 () Real)
(declare-fun x361 () Real)
(declare-fun x254 () Real)
(declare-fun x671 () Real)
(declare-fun x1234 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x148 () Real)
(declare-fun x1162 () Bool)
(declare-fun x1153 () Real)
(declare-fun x1213 () Bool)
(declare-fun x158 () Real)
(declare-fun x785 () Real)
(declare-fun x360 () Real)
(declare-fun x1237 () x1338)
(declare-fun x357 () x1338)
(declare-fun x799 () Bool)
(declare-fun x42 () Bool)
(declare-fun x516 () Real)
(declare-fun x835 () x1338)
(declare-fun x50 () Real)
(declare-fun x902 () Real)
(declare-fun x76 () Bool)
(declare-fun x270 () x1338)
(declare-fun x761 () Real)
(declare-fun x904 () Bool)
(declare-fun x89 () x1338)
(declare-fun x688 () Real)
(declare-fun x1350 () Real)
(declare-fun x1045 () Real)
(declare-fun x547 () Bool)
(declare-fun x303 () Real)
(declare-fun x1078 () Real)
(declare-fun x808 () Real)
(declare-fun x1215 () Real)
(declare-fun x1183 () Bool)
(declare-fun x1008 () Real)
(declare-fun x706 () Bool)
(declare-fun x1196 () Real)
(declare-fun x171 () Bool)
(declare-fun x325 () Real)
(declare-fun x1239 () x1338)
(declare-fun x1208 () x1338)
(declare-fun x931 () Real)
(declare-fun x1171 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x801 () Real)
(declare-fun x825 () Bool)
(declare-fun x968 () Real)
(declare-fun x608 () x1338)
(declare-fun x907 () Real)
(declare-fun x1152 () Real)
(declare-fun x504 () Bool)
(declare-fun x1602 () Real)
(declare-fun x844 () Real)
(declare-fun x977 () Real)
(declare-fun x34 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x346 () x1338)
(declare-fun x1483 () Bool)
(declare-fun x631 () Real)
(declare-fun x221 () x1338)
(declare-fun x1300 () Bool)
(declare-fun x1537 () Real)
(declare-fun x1566 () Bool)
(declare-fun x1385 () Real)
(declare-fun x858 () Bool)
(declare-fun x364 () Real)
(declare-fun x331 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x255 () Real)
(declare-fun x870 () Bool)
(declare-fun x1254 () Real)
(declare-fun x473 () Bool)
(declare-fun x1580 () Real)
(declare-fun x1428 () Real)
(declare-fun x343 () Real)
(declare-fun x197 () x1338)
(declare-fun x1069 () Real)
(declare-fun x362 () x1338)
(declare-fun x632 () Real)
(declare-fun x1046 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1411 () Real)
(declare-fun x386 () Real)
(declare-fun x1568 () Real)
(declare-fun x1095 () x1338)
(declare-fun x511 () Real)
(declare-fun x992 () Real)
(declare-fun x1178 () Real)
(declare-fun x1004 () Bool)
(declare-fun x1317 () x1338)
(declare-fun x129 () Real)
(declare-fun x266 () x1338)
(declare-fun x1132 () Real)
(declare-fun x562 () Real)
(declare-fun x521 () Bool)
(declare-fun x734 () Real)
(declare-fun x401 () Real)
(declare-fun x1248 () Real)
(declare-fun x61 () Real)
(declare-fun x652 () Real)
(declare-fun x681 () Real)
(declare-fun x749 () Bool)
(declare-fun x143 () Real)
(declare-fun x165 () Real)
(declare-fun x790 () Bool)
(declare-fun x430 () Real)
(declare-fun x393 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x1362 () x1338)
(declare-fun x24 () Real)
(declare-fun x257 () x1338)
(declare-fun x571 () Bool)
(declare-fun x178 () Real)
(declare-fun x209 () Real)
(declare-fun x1502 () Real)
(declare-fun x1201 () Real)
(declare-fun x462 () Bool)
(declare-fun x212 () Bool)
(declare-fun x1469 () Real)
(declare-fun x885 () Real)
(declare-fun x805 () Real)
(declare-fun x1197 () Bool)
(declare-fun x1245 () Real)
(declare-fun x993 () Bool)
(declare-fun x843 () Bool)
(declare-fun x26 () x1338)
(declare-fun x714 () Real)
(declare-fun x1510 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x8 () Real)
(declare-fun x1290 () x1338)
(declare-fun x1416 () Real)
(declare-fun x1263 () x1338)
(declare-fun x554 () Real)
(declare-fun x1075 () x1338)
(declare-fun x368 () Real)
(declare-fun x1604 () Real)
(declare-fun x1320 () x1338)
(declare-fun x609 () Bool)
(declare-fun x742 () Real)
(declare-fun x1126 () Bool)
(declare-fun x481 () Bool)
(declare-fun x917 () Bool)
(declare-fun x1597 () Real)
(declare-fun x352 () Real)
(declare-fun x187 () Real)
(declare-fun x1453 () Real)
(declare-fun x1479 () x1338)
(declare-fun x341 () Real)
(declare-fun x941 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x497 () Real)
(declare-fun x52 () Bool)
(declare-fun x926 () Real)
(declare-fun x372 () Real)
(declare-fun x781 () x1338)
(declare-fun x1309 () Real)
(declare-fun x1583 () Real)
(declare-fun x136 () Real)
(declare-fun x1272 () Bool)
(declare-fun x1141 () Real)
(declare-fun x754 () Real)
(declare-fun x970 () Real)
(declare-fun x1232 () Real)
(declare-fun x867 (x1338) Real)
(declare-fun x621 () Real)
(declare-fun x569 (Real) Real)
(declare-fun x813 () x1338)
(declare-fun x135 () Real)
(declare-fun x1426 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x25 () x1338)
(declare-fun x726 () Real)
(declare-fun x772 (Real) Real)
(declare-fun x1521 () Real)
(declare-fun x1192 () Real)
(declare-fun x1590 () Real)
(declare-fun x589 () Bool)
(declare-fun x1056 () Real)
(declare-fun x440 () x1338)
(declare-fun x659 () Real)
(declare-fun x1439 () Real)
(declare-fun x68 () Real)
(declare-fun x853 (Real Real) Real)
(declare-fun x1202 () Bool)
(declare-fun x298 () Real)
(declare-fun x142 () x1338)
(declare-fun x687 () x1338)
(declare-fun x370 () Real)
(declare-fun x1335 () Real)
(declare-fun x922 () Real)
(declare-fun x317 () Real)
(declare-fun x932 () Real)
(declare-fun x735 () Bool)
(declare-fun x1389 () Real)
(declare-fun x587 () Real)
(declare-fun x394 () Real)
(declare-fun x1582 () Real)
(declare-fun x21 () Bool)
(declare-fun x66 () Real)
(declare-fun x282 () Bool)
(declare-fun x537 () Real)
(declare-fun x1093 () Bool)
(declare-fun x559 () Bool)
(declare-fun x359 () Bool)
(declare-fun x495 () x1338)
(declare-fun x345 () Bool)
(declare-fun x491 () Real)
(declare-fun x1432 () Bool)
(declare-fun x847 () Real)
(declare-fun x783 () Real)
(declare-fun x1177 () Real)
(declare-fun x523 (Real) Real)
(declare-fun x1195 () Bool)
(declare-fun x168 () Real)
(declare-fun x1446 () Real)
(declare-fun x1486 () Real)
(declare-fun x1314 () Real)
(declare-fun x872 () Bool)
(declare-fun x241 () Real)
(declare-fun x463 () Real)
(declare-fun x392 () Real)
(declare-fun x598 () Real)
(declare-fun x1331 () Bool)
(declare-fun x888 () Real)
(declare-fun x644 () Real)
(declare-fun x1005 () Real)
(declare-fun x1603 () Real)
(declare-fun x728 () Bool)
(declare-fun x599 () Bool)
(declare-fun x338 () Bool)
(declare-fun x100 () x1338)
(declare-fun x222 () Real)
(declare-fun x188 () Real)
(declare-fun x563 () Real)
(declare-fun x87 () x1338)
(declare-fun x1312 () Bool)
(declare-fun x721 () Real)
(declare-fun x85 () Bool)
(declare-fun x1473 () Real)
(declare-fun x1306 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x375 () Bool)
(declare-fun x988 () Bool)
(declare-fun x93 () Real)
(declare-fun x1038 () Bool)
(declare-fun x776 () Bool)
(declare-fun x759 () Real)
(declare-fun x1398 () Real)
(declare-fun x1251 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x1018 () Real)
(declare-fun x1027 () Real)
(declare-fun x979 () Real)
(declare-fun x916 () Bool)
(declare-fun x414 () Real)
(declare-fun x373 () x1338)
(declare-fun x1274 () Bool)
(declare-fun x669 () x1338)
(declare-fun x179 () Real)
(declare-fun x1543 () Real)
(declare-fun x246 () Real)
(declare-fun x305 () Real)
(declare-fun x1221 () Real)
(declare-fun x1194 () Bool)
(declare-fun x578 () Real)
(declare-fun x1173 () Real)
(declare-fun x60 () Real)
(declare-fun x942 () Bool)
(declare-fun x739 () Real)
(declare-fun x226 () Real)
(declare-fun x775 () Real)
(declare-fun x1595 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x623 () Bool)
(declare-fun x893 () x1338)
(declare-fun x366 () Bool)
(declare-fun x1552 () x1338)
(declare-fun x91 () Real)
(declare-fun x597 () Real)
(declare-fun x1333 () Bool)
(declare-fun x1401 () Real)
(declare-fun x5 () Bool)
(declare-fun x264 () x1338)
(declare-fun x13 () x1338)
(declare-fun x1026 () Bool)
(declare-fun x584 () Real)
(declare-fun x92 () Real)
(declare-fun x1109 () Real)
(declare-fun x996 () Bool)
(declare-fun x347 () Real)
(declare-fun x31 () Real)
(declare-fun x11 () Bool)
(declare-fun x576 () Real)
(declare-fun x1530 () Real)
(declare-fun x1600 () Real)
(declare-fun x56 () Real)
(declare-fun x886 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x860 () x1338)
(declare-fun x1205 () Bool)
(declare-fun x1228 () Real)
(declare-fun x540 () Real)
(declare-fun x620 () Bool)
(declare-fun x1302 () Real)
(declare-fun x1505 () x1338)
(declare-fun x494 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x1417 () Real)
(declare-fun x1407 () x1338)
(declare-fun x1007 () x1338)
(declare-fun x915 () Real)
(declare-fun x1508 () Real)
(declare-fun x643 () Bool)
(declare-fun x617 () Bool)
(declare-fun x771 () Bool)
(declare-fun x581 () Bool)
(declare-fun x450 () x1338)
(declare-fun x1410 () Real)
(declare-fun x1447 () Real)
(declare-fun x429 () Real)
(declare-fun x434 () Bool)
(declare-fun x755 () Bool)
(declare-fun x295 () Real)
(declare-fun x1466 () Real)
(declare-fun x903 () Real)
(declare-fun x800 () Bool)
(declare-fun x59 () Bool)
(declare-fun x709 () Real)
(declare-fun x854 () x1338)
(declare-fun x998 () Real)
(declare-fun x616 () Bool)
(declare-fun x789 () Real)
(declare-fun x641 () Bool)
(declare-fun x851 () Bool)
(declare-fun x1308 () Real)
(declare-fun x1039 () Real)
(declare-fun x990 () Real)
(declare-fun x1488 () Real)
(declare-fun x744 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x967 () Real)
(declare-fun x614 () Bool)
(declare-fun x117 () Real)
(declare-fun x655 () x1338)
(declare-fun x1010 () Real)
(declare-fun x1563 () Bool)
(declare-fun x390 () Bool)
(declare-fun x828 () x1338)
(declare-fun x947 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x937 () Real)
(declare-fun x1016 () Real)
(declare-fun x94 () x1338)
(declare-fun x613 () Bool)
(declare-fun x792 () Bool)
(declare-fun x1123 () Real)
(declare-fun x882 () Real)
(declare-fun x293 () Bool)
(declare-fun x1588 () Real)
(declare-fun x1351 () Real)
(declare-fun x812 () Real)
(declare-fun x1278 () x1338)
(declare-fun x532 () Real)
(declare-fun x475 () Bool)
(declare-fun x9 () Real)
(declare-fun x1423 () x1338)
(declare-fun x999 () Real)
(declare-fun x329 () Real)
(declare-fun x1452 () x1338)
(declare-fun x432 () Real)
(declare-fun x1441 () Real)
(declare-fun x666 () Real)
(declare-fun x125 () Bool)
(declare-fun x1150 () x1338)
(declare-fun x1474 () Real)
(declare-fun x1427 () Bool)
(declare-fun x1315 () Real)
(declare-fun x110 () Real)
(declare-fun x339 () x1338)
(declare-fun x1579 () Real)
(declare-fun x506 () Real)
(declare-fun x1562 () x1338)
(declare-fun x132 (Real) Real)
(declare-fun x1292 () Real)
(declare-fun x112 () Real)
(declare-fun x1185 () Bool)
(declare-fun x274 () Real)
(declare-fun x626 () x1338)
(declare-fun x16 () x1338)
(declare-fun x514 () Real)
(declare-fun x229 () Bool)
(declare-fun x1349 () Real)
(declare-fun x944 () Bool)
(declare-fun x318 () Bool)
(declare-fun x510 () x1338)
(declare-fun x884 (x1338) Real)
(declare-fun x190 () Bool)
(declare-fun x354 () Bool)
(declare-fun x404 (x1338) Real)
(declare-fun x23 () Real)
(declare-fun x102 () Real)
(declare-fun x322 () Bool)
(declare-fun x437 () Bool)
(declare-fun x402 () Real)
(declare-fun x552 () Real)
(declare-fun x244 () Real)
(declare-fun x1438 () Real)
(declare-fun x1492 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x1080 () Real)
(declare-fun x1087 () Bool)
(declare-fun x385 () Bool)
(declare-fun x1599 () Real)
(declare-fun x204 () Real)
(declare-fun x1019 () Real)
(declare-fun x1164 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x910 () Real)
(declare-fun x1140 () Real)
(declare-fun x124 () Real)
(declare-fun x1134 () Real)
(declare-fun x1527 () Bool)
(declare-fun x118 () Bool)
(declare-fun x1523 () Real)
(declare-fun x1538 () Real)
(declare-fun x986 () x1338)
(declare-fun x32 () x1338)
(declare-fun x1419 () Bool)
(declare-fun x268 () x1338)
(declare-fun x982 () Bool)
(declare-fun x807 (Real) Real)
(declare-fun x1507 () Real)
(declare-fun x611 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x1491 () Real)
(declare-fun x1400 () Real)
(declare-fun x1540 () Real)
(declare-fun x747 () Real)
(declare-fun x82 () Real)
(declare-fun x1518 () x1338)
(declare-fun x1429 () x1338)
(declare-fun x1458 () Real)
(declare-fun x909 () x1338)
(declare-fun x1326 () Real)
(declare-fun x3 () Real)
(declare-fun x134 (Real) Real)
(declare-fun x1048 () Real)
(declare-fun x256 () Real)
(declare-fun x615 () Bool)
(declare-fun x538 () Real)
(declare-fun x426 () Real)
(declare-fun x447 () Real)
(declare-fun x818 () x1338)
(declare-fun x1106 () Bool)
(declare-fun x131 () x1338)
(declare-fun x461 () Bool)
(declare-fun x267 () Real)
(declare-fun x1548 () Real)
(declare-fun x879 () Real)
(declare-fun x223 () Real)
(declare-fun x1062 () Bool)
(declare-fun x531 () x1338)
(declare-fun x1403 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x184 () Real)
(declare-fun x1544 () Real)
(declare-fun x945 () Bool)
(declare-fun x1471 () Real)
(declare-fun x356 () Real)
(declare-fun x1291 (Real) Real)
(declare-fun x174 () x1338)
(declare-fun x474 () Real)
(declare-fun x660 () Real)
(declare-fun x1043 () Real)
(declare-fun x170 () Real)
(declare-fun x525 () Real)
(declare-fun x752 (x1338) Real)
(declare-fun x1609 () Real)
(declare-fun x1422 () Bool)
(declare-fun x1354 () x1338)
(declare-fun x133 () Real)
(declare-fun x157 () Real)
(declare-fun x842 () Real)
(declare-fun x1374 () Real)
(declare-fun x193 () Bool)
(declare-fun x866 () Bool)
(declare-fun x195 () x1338)
(declare-fun x745 () x1338)
(declare-fun x1014 () Bool)
(declare-fun x408 () x1338)
(declare-fun x574 () Real)
(declare-fun x79 () Bool)
(declare-fun x1057 () Real)
(declare-fun x1375 () Bool)
(declare-fun x1226 () Real)
(declare-fun x1594 () Real)
(declare-fun x1034 () Real)
(declare-fun x162 () Bool)
(declare-fun x451 () Real)
(declare-fun x1468 (x1338) Real)
(declare-fun x948 () Bool)
(declare-fun x1138 (Real) x1338)
(declare-fun x629 () Real)
(declare-fun x90 () Real)
(declare-fun x935 () Bool)
(declare-fun x500 () Real)
(declare-fun x863 () x1338)
(declare-fun x10 () Real)
(declare-fun x65 () Real)
(declare-fun x499 () Bool)
(declare-fun x1512 () x1338)
(declare-fun x1159 () Real)
(declare-fun x453 () Bool)
(declare-fun x913 () Real)
(declare-fun x443 () Real)
(declare-fun x1584 () x1338)
(declare-fun x376 () Bool)
(declare-fun x612 () Real)
(declare-fun x1414 () Real)
(declare-fun x921 () Bool)
(declare-fun x634 () Real)
(declare-fun x595 () Real)
(declare-fun x1402 () Bool)
(declare-fun x1346 () Real)
(declare-fun x71 () x1338)
(declare-fun x15 () Real)
(declare-fun x1170 () Bool)
(declare-fun x924 () x1338)
(declare-fun x180 () Real)
(declare-fun x876 () Bool)
(declare-fun x289 () Real)
(declare-fun x1299 () x1338)
(declare-fun x340 () Real)
(declare-fun x766 () Bool)
(declare-fun x933 () Real)
(declare-fun x214 () x1338)
(declare-fun x1279 () x1338)
(declare-fun x1275 () Real)
(declare-fun x296 () x1338)
(declare-fun x167 () Bool)
(declare-fun x1450 () Real)
(declare-fun x1092 () x1338)
(declare-fun x391 () Bool)
(declare-fun x997 (Real) Real)
(declare-fun x1021 () Real)
(declare-fun x324 () x1338)
(declare-fun x606 () x1338)
(declare-fun x1517 () x1338)
(declare-fun x247 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x1224 () Real)
(declare-fun x1244 () Real)
(declare-fun x182 () Real)
(declare-fun x871 () x1338)
(declare-fun x635 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x419 () x1338)
(declare-fun x1555 () x1338)
(declare-fun x1461 () Real)
(declare-fun x556 () Real)
(declare-fun x636 () Real)
(declare-fun x1565 () Bool)
(declare-fun x638 () Real)
(declare-fun x1264 () Real)
(declare-fun x512 () Bool)
(declare-fun x151 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x674 () Bool)
(declare-fun x619 () Real)
(declare-fun x330 () Real)
(declare-fun x791 () Bool)
(declare-fun x172 () Real)
(declare-fun x919 (x1338) Real)
(declare-fun x840 () Real)
(declare-fun x1085 () Real)
(declare-fun x668 () Real)
(declare-fun x1118 () Real)
(declare-fun x662 () Bool)
(declare-fun x730 () Real)
(declare-fun x1174 () Bool)
(declare-fun x173 () Bool)
(declare-fun x680 () Real)
(declare-fun x487 () Bool)
(declare-fun x899 () Bool)
(declare-fun x573 () Real)
(declare-fun x527 () Bool)
(declare-fun x717 () Real)
(declare-fun x861 () Real)
(declare-fun x123 () Real)
(declare-fun x1020 () x1338)
(declare-fun x252 () x1338)
(declare-fun x1198 () Bool)
(declare-fun x482 () Bool)
(declare-fun x459 () Real)
(declare-fun x704 () Bool)
(declare-fun x185 () Real)
(declare-fun x1529 () x1338)
(declare-fun x108 () Real)
(declare-fun x1561 (Real) Real)
(declare-fun x164 () Real)
(declare-fun x231 () Real)
(declare-fun x428 () Real)
(declare-fun x1055 () Real)
(declare-fun x839 () Real)
(declare-fun x782 () Bool)
(declare-fun x122 () Real)
(declare-fun x1088 () Real)
(declare-fun x1073 (Real) Real)
(declare-fun x1222 () Bool)
(declare-fun x175 () Real)
(declare-fun x1430 () x1338)
(declare-fun x29 () Real)
(declare-fun x1219 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1451 () Real)
(declare-fun x695 () Real)
(declare-fun x290 () Bool)
(declare-fun x1437 () Real)
(declare-fun x1493 () Bool)
(declare-fun x1190 () Real)
(declare-fun x767 () x1338)
(declare-fun x1238 () Bool)
(declare-fun x251 () x1338)
(declare-fun x1267 () Real)
(declare-fun x384 () Real)
(declare-fun x472 () Real)
(declare-fun x1240 () Bool)
(declare-fun x260 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x28 () Real)
(declare-fun x517 () x1338)
(declare-fun x321 () Real)
(declare-fun x1206 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x69 () Real)
(declare-fun x271 () Bool)
(declare-fun x930 () Real)
(declare-fun x86 () x1338)
(declare-fun x675 () Real)
(declare-fun x233 (Real) Real)
(declare-fun x476 () x1338)
(declare-fun x864 () Bool)
(declare-fun x1295 () x1338)
(declare-fun x431 () Real)
(declare-fun x1327 () Bool)
(declare-fun x1181 (x1338) Real)
(declare-fun x951 () x1338)
(declare-fun x1041 (Real) Real)
(declare-fun x683 (Real) Real)
(declare-fun x558 (Real) Real)
(declare-fun x829 () x1338)
(declare-fun x301 () Bool)
(declare-fun x1189 () x1338)
(declare-fun x1524 () Bool)
(declare-fun x177 () Bool)
(declare-fun x661 () Real)
(declare-fun x191 () Real)
(declare-fun x47 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x651 () Real)
(declare-fun x1060 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x1490 () Real)
(declare-fun x1456 (Real) Real)
(declare-fun x272 () Real)
(declare-fun x961 () Bool)
(declare-fun x181 () Real)
(declare-fun x1558 () Real)
(declare-fun x351 () Real)
(declare-fun x1148 () Real)
(declare-fun x697 () Bool)
(declare-fun x1122 () Real)
(declare-fun x1576 () Bool)
(declare-fun x1214 () Real)
(declare-fun x1266 () Real)
(declare-fun x1167 () x1338)
(declare-fun x1099 () Bool)
(declare-fun x906 () Real)
(declare-fun x501 () x1338)
(declare-fun x1371 () Bool)
(declare-fun x1477 () x1338)
(declare-fun x1091 () Real)
(declare-fun x140 () Real)
(declare-fun x1077 () Bool)
(declare-fun x713 () Real)
(declare-fun x1457 () Bool)
(declare-fun x116 () Real)
(declare-fun x946 () x1338)
(declare-fun x1233 () Real)
(declare-fun x389 () Real)
(declare-fun x397 () Real)
(declare-fun x280 () Bool)
(declare-fun x1050 () x1338)
(declare-fun x976 () Bool)
(declare-fun x936 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x469 () Bool)
(declare-fun x1288 () Real)
(declare-fun x455 () x1338)
(declare-fun x762 () Real)
(declare-fun x1096 () Bool)
(declare-fun x448 () Real)
(declare-fun x677 () Real)
(declare-fun x486 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x639 () Bool)
(declare-fun x821 () Real)
(declare-fun x724 () Real)
(declare-fun x382 () Bool)
(declare-fun x779 () Bool)
(declare-fun x334 () Bool)
(declare-fun x1052 () x1338)
(declare-fun x1425 () Real)
(declare-fun x1303 () Real)
(declare-fun x464 () Real)
(declare-fun x1072 () Real)
(declare-fun x663 () Real)
(declare-fun x1587 () x1338)
(declare-fun x529 () x1338)
(declare-fun x4 () Bool)
(declare-fun x57 () Bool)
(declare-fun x67 () Real)
(declare-fun x1454 () Real)
(declare-fun x1386 () Real)
(declare-fun x1120 () Real)
(declare-fun x553 () Real)
(declare-fun x592 () Real)
(declare-fun x530 () x1338)
(declare-fun x1253 () x1338)
(declare-fun x51 () Real)
(declare-fun x1310 () Real)
(declare-fun x139 () Real)
(declare-fun x150 () Bool)
(declare-fun x740 () x1338)
(declare-fun x1485 () Real)
(declare-fun x1030 () Real)
(declare-fun x288 () Bool)
(declare-fun x1337 () Real)
(declare-fun x994 (x1338) Real)
(declare-fun x960 () Real)
(declare-fun x579 () Real)
(declare-fun x1591 () Real)
(declare-fun x424 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x722 () Real)
(declare-fun x328 () x1338)
(declare-fun x1481 () Real)
(declare-fun x1554 () x1338)
(declare-fun x875 () Real)
(declare-fun x607 () Real)
(declare-fun x1044 () Real)
(declare-fun x1360 () Real)
(declare-fun x1242 () x1338)
(declare-fun x492 () Real)
(declare-fun x230 () Bool)
(declare-fun x1324 () Real)
(declare-fun x575 () Real)
(declare-fun x17 () Real)
(declare-fun x1387 () Real)
(declare-fun x923 () Bool)
(declare-fun x1230 () x1338)
(declare-fun x485 () Bool)
(declare-fun x369 () Bool)
(declare-fun x676 () Real)
(declare-fun x1399 () x1338)
(declare-fun x422 () Real)
(declare-fun x645 () Bool)
(declare-fun x58 () Real)
(declare-fun x81 () Real)
(declare-fun x889 () Bool)
(declare-fun x1382 () x1338)
(declare-fun x1207 () Real)
(declare-fun x763 () x1338)
(declare-fun x694 () Bool)
(declare-fun x215 () x1338)
(declare-fun x667 () Real)
(define-fun x1061 ((x1338 x1338) (x1111 Real)) x1338 (ite ((_ is x1133) x1338) (x1133 (x243 x1338) (+ (x316 x1338) x1111)) (ite ((_ is x355) x1338) (x355 (x466 x1338) (x300 x1338) (+ x1111 (x1381 x1338))) (x604 (+ (x73 x1338) x1111)))))
(define-fun x490 ((x358 Real)) Real (ite (and (>= x358 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x358)) x358 (- x358 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x548 ((x358 Real)) Real (ite (and (>= x358 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x358)) (+ x358 115792089237316195423570985008687907853269984665640564039457584007913129639936) x358))
(define-fun x333 ((x1368 Real)) Bool (and (< x1368 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1368)))
(define-fun x1443 ((x1368 Real)) Bool (and (= x1368 (x853 x1368 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x1368 (x853 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1368))))
(define-fun x536 ((x1368 Real)) Bool (and (= (x853 x1368 0) 0) (= (x853 0 x1368) 0)))
(define-fun x1307 ((x1368 Real)) Bool (= (x853 x1368 x1368) x1368))
(define-fun x1501 ((x1368 Real)) Bool (and (x536 x1368) (x1443 x1368) (x1307 x1368)))
(define-fun x1352 ((x1368 Real)) Bool (= (x853 1461501637330902918203684832716283019655932542975 x1368) (x853 1461501637330902918203684832716283019655932542975 (x853 1461501637330902918203684832716283019655932542975 x1368))))
(define-fun x1298 ((x1368 Real)) Bool (=> (and (< x1368 1461501637330902918203684832716283019655932542976) (<= 0 x1368)) (= (x853 1461501637330902918203684832716283019655932542975 x1368) x1368)))
(define-fun x1204 ((x1368 Real)) Bool (=> (= x1368 (x853 1461501637330902918203684832716283019655932542975 x1368)) (and (<= 0 x1368) (> 1461501637330902918203684832716283019655932542976 x1368))))
(define-fun x1179 ((x1368 Real)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x1368) (> 2923003274661805836407369665432566039311865085952 x1368)) (= (- x1368 1461501637330902918203684832716283019655932542976) (x853 1461501637330902918203684832716283019655932542975 x1368))))
(define-fun x1586 ((x1368 Real) (x198 Real)) Bool (and (<= 0 x198) (= (+ (* 1461501637330902918203684832716283019655932542976 x198) (x853 1461501637330902918203684832716283019655932542975 x1368)) x1368)))
(define-fun x1033 ((x1368 Real) (x1408 Real)) Bool (and (x1352 x1368) (x1179 x1368) (x1204 x1368) (x1586 x1368 x1408) (x1298 x1368)))
(define-fun x601 ((x1368 Real) (x198 Real)) Bool (= (x853 x1368 x198) (x853 x198 x1368)))
(define-fun x238 ((x1368 Real) (x198 Real)) Bool (and (=> (<= 0 x1368) (<= (x853 x1368 x198) x1368)) (>= (x853 x1368 x198) 0) (=> (>= x198 0) (<= (x853 x1368 x198) x198))))
(define-fun x1124 ((x1368 Real) (x198 Real)) Bool (and (x238 x1368 x198) (x601 x1368 x198)))
(define-fun x1418 ((x1368 Real) (x1408 Real)) Bool (and (x1124 x1368 1461501637330902918203684832716283019655932542975) (x1033 x1368 x1408)))
(define-fun x1293 ((x1368 Real)) Bool (= (x853 26959946667150639794667015087019630673637144422540572481103610249215 (x853 26959946667150639794667015087019630673637144422540572481103610249215 x1368)) (x853 26959946667150639794667015087019630673637144422540572481103610249215 x1368)))
(define-fun x54 ((x1368 Real)) Bool (=> (and (<= 0 x1368) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1368)) (= x1368 (x853 26959946667150639794667015087019630673637144422540572481103610249215 x1368))))
(define-fun x1533 ((x1368 Real)) Bool (=> (= x1368 (x853 26959946667150639794667015087019630673637144422540572481103610249215 x1368)) (and (< x1368 26959946667150639794667015087019630673637144422540572481103610249216) (>= x1368 0))))
(define-fun x1000 ((x1368 Real)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x1368) (> 53919893334301279589334030174039261347274288845081144962207220498432 x1368)) (= (x853 26959946667150639794667015087019630673637144422540572481103610249215 x1368) (- x1368 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x155 ((x1368 Real) (x198 Real)) Bool (and (<= 0 x198) (= x1368 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x198) (x853 26959946667150639794667015087019630673637144422540572481103610249215 x1368)))))
(define-fun x778 ((x1368 Real) (x1408 Real)) Bool (and (x1000 x1368) (x155 x1368 x1408) (x54 x1368) (x1293 x1368) (x1533 x1368)))
(define-fun x1209 ((x1368 Real) (x1408 Real)) Bool (and (x778 x1368 x1408) (x1124 x1368 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1578 ((x1368 Real)) Bool (= (x853 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1368) (x853 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x853 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1368))))
(define-fun x780 ((x1368 Real)) Bool (=> (and (<= 0 x1368) (> 32 x1368)) (= (x853 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1368) 0)))
(define-fun x802 ((x1368 Real) (x198 Real) (x1365 Real) (x83 Real)) Bool (and (<= 0 x1365) (= x1368 (+ x198 (* x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* x1365 32))) (>= x83 0) (< x83 1) (< x1365 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (x853 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1368) (* x1365 32)) (>= x198 0) (< x198 32)))
(define-fun x877 ((x1368 Real) (x137 Real) (x950 Real) (x1380 Real)) Bool (and (x802 x1368 x137 x950 x1380) (x1578 x1368) (x780 x1368)))
(define-fun x1169 ((x1368 Real) (x137 Real) (x950 Real) (x1380 Real)) Bool (and (x1124 x1368 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x877 x1368 x137 x950 x1380)))
(define-fun x873 ((x152 Real)) Real (x1246 x152))
(define-fun x269 ((x152 Real)) Real (ite (= x152 128) x631 (x1345 x152)))
(define-fun x642 ((x152 Real)) Real (ite (and (<= 160 x152) (> (+ x1441 160) x152)) (x1246 (+ (- x152 160) x55)) (x269 x152)))
(define-fun x353 ((x152 Real)) Real (ite (= x152 x17) 0 (x642 x152)))
(define-fun x258 ((x152 Real)) Real (ite (and (<= x1346 x152) (> (+ x1346 x321) x152)) (x1246 (+ x902 (- x152 x1346))) (x569 x152)))
(define-fun x283 ((x152 x1338)) Real (ite (= x152 x987) x1232 (x1322 x152)))
(define-fun x670 ((x152 x1338)) Real (ite (= x342 x152) x1232 (x1322 x152)))
(define-fun x1567 ((x152 x1338)) Real (ite (= x978 x152) x1232 (x1391 x152)))
(define-fun x1017 ((x152 x1338)) Real (ite (= x152 x346) x1232 (x1391 x152)))
(define-fun x887 ((x152 x1338)) Real (ite (and x1483 x1002) (x1391 x152) (ite (and x911 x904) (x1322 x152) (ite (and x217 (not x1216)) (x1567 x152) (x1017 x152)))))
(define-fun x1321 ((x152 x1338)) Real (ite (= x756 x152) x1232 (x994 x152)))
(define-fun x1003 ((x152 x1338)) Real (ite (= x655 x152) x1232 (x994 x152)))
(define-fun x701 ((x152 x1338)) Real (ite (= x152 x1512) x1232 (x994 x152)))
(define-fun x1146 ((x152 x1338)) Real (ite (= x1505 x152) x1232 (x1468 x152)))
(define-fun x1249 ((x152 x1338)) Real (ite (= x152 x1189) x1232 (x1468 x152)))
(define-fun x1157 ((x152 x1338)) Real (ite (= x152 x145) x1232 (x1468 x152)))
(define-fun x1110 ((x152 x1338)) Real (ite (and x1002 x1483) (x1468 x152) (ite (and x904 x911) (x994 x152) (ite (and (not x400) (not x908) x212) (x1146 x152) (ite (and x908 x212 (not x400)) (x1249 x152) (x1157 x152))))))
(define-fun x1047 ((x152 x1338)) Real (ite (= x152 x1161) x695 (x752 x152)))
(define-fun x484 ((x152 x1338)) Real (ite (= x152 x120) x995 (x774 x152)))
(define-fun x1305 ((x152 x1338)) Real (ite (and (not x1216) x217) (x484 x152) (x774 x152)))
(define-fun x1532 ((x152 x1338)) Real (ite (and x1002 x1483) (x774 x152) (ite (and x911 x904) (x752 x152) (x1305 x152))))
(define-fun x1117 ((x152 x1338)) Real (ite (= x286 x152) x566 (x919 x152)))
(define-fun x1388 ((x152 x1338)) Real (ite (= x745 x152) x688 (x1397 x152)))
(define-fun x586 ((x152 x1338)) Real (ite (and (not x908) (not x400) x212) (x1388 x152) (x1397 x152)))
(define-fun x795 ((x152 x1338)) Real (ite (and x1002 x1483) (x1397 x152) (ite (and x904 x911) (x919 x152) (x586 x152))))
(define-fun x602 ((x152 x1338)) Real (ite (= x152 x142) x1028 (x867 x152)))
(define-fun x1180 ((x152 x1338)) Real (ite (= x152 x89) x1188 (x1181 x152)))
(define-fun x154 ((x152 x1338)) Real (ite (and x1002 x1483) (x404 x152) (ite (and x911 x904) (x712 x152) (ite (and (not x1176) x217 (not x76) x673) (x1181 x152) (ite (and (not x1176) (not x673) x217) (x404 x152) (ite (and x1176 x217) (x404 x152) (x1180 x152)))))))
(define-fun x367 ((x152 Real)) Real (ite (= x152 x24) x594 (x558 x152)))
(define-fun x1113 ((x152 Real)) Real (ite (= x1410 x152) x869 (x367 x152)))
(define-fun x719 ((x152 Real)) Real (ite (and x1464 x1195) (x558 x152) (x1113 x152)))
(define-fun x971 ((x152 Real)) Real (ite (= x180 x152) x458 (x719 x152)))
(define-fun x711 ((x152 Real)) Real (ite (= x152 x1389) x259 (x78 x152)))
(define-fun x682 ((x152 Real)) Real (ite (= x370 x152) x659 (x228 x152)))
(define-fun x1392 ((x152 Real)) Real (ite (= x152 x361) x918 (x682 x152)))
(define-fun x1376 ((x152 Real)) Real (ite (and (not x400) (not x908) x212) (x1392 x152) (ite (and (not x400) x212 x908) (x1392 x152) (x228 x152))))
(define-fun x809 ((x152 x1338)) Real (ite (= x152 x197) x934 (x583 x152)))
(define-fun x378 ((x152 x1338)) Real (ite (and x630 x260) (x583 x152) (x809 x152)))
(define-fun x1145 ((x152 x1338)) Real (ite (= x314 x152) x1314 (x1482 x152)))
(define-fun x770 ((x152 x1338)) Real (ite (and x1464 x1024) (x1482 x152) (x1145 x152)))
(define-fun x580 ((x152 Real)) Real (ite (= x1034 x152) x1335 (x1376 x152)))
(define-fun x1116 ((x152 Real)) Real (ite (= x139 x152) x7 (x1073 x152)))
(define-fun x1593 ((x152 Real)) Real (ite (and x1002 x1483) (x228 x152) (ite (and x911 x904) (x558 x152) (ite (and x217 (not x1176) (not x76) x673) (x1073 x152) (ite (and (not x673) (not x1176) x217) (x1561 x152) (ite (and x1176 x217) (x1561 x152) (x1116 x152)))))))
(define-fun x445 ((x152 Real)) Real (ite (= x761 x152) x330 (x1593 x152)))
(define-fun x37 ((x152 Real)) Real (ite (= x303 x152) x1428 (x445 x152)))
(define-fun x1235 ((x152 Real)) Real (ite (= x1021 x152) x1557 (x37 x152)))
(define-fun x127 ((x152 Real)) Real (ite (= x152 x297) x1268 (x1235 x152)))
(define-fun x438 ((x152 Real)) Real (ite (= x152 x1226) 32 (x127 x152)))
(define-fun x327 ((x152 Real)) Real (ite (= x847 x152) x245 (x1119 x152)))
(define-fun x1001 ((x152 Real)) Real (ite (= x152 x1134) 0 (x233 x152)))
(define-fun x1136 ((x152 Real)) Real (ite (= x152 0) 1 (x72 x152)))
(define-fun x1097 ((x152 Real)) Real (ite (= 0 x152) 1 (x72 x152)))
(define-fun x1357 ((x152 Real)) Real (ite (and x1262 x1434) (x1136 x152) (x1097 x152)))
(define-fun x1271 ((x152 Real)) Real (ite (= x658 x152) x36 (x134 x152)))
(define-fun x46 ((x152 Real)) Real (ite (= x658 x152) x979 (x134 x152)))
(define-fun x874 ((x152 Real)) Real (ite (= x152 x658) x568 (x523 x152)))
(define-fun x114 ((x152 Real)) Real (ite (and (<= x1334 x152) (< x152 (+ x568 x1334))) (x1357 (+ (- x152 x1334) 0)) (x874 x152)))
(define-fun x1353 ((x152 Real)) Real (ite (and (not x1234) x213) (x114 x152) (x523 x152)))
(define-fun x1105 ((x152 Real)) Real (ite (= x152 x885) x56 (x1353 x152)))
(define-fun x647 ((x152 Real)) Real (ite (= x152 x410) x1088 (x1105 x152)))
(define-fun x570 ((x152 Real)) Real (ite (= x1490 x152) x140 (x647 x152)))
(define-fun x38 ((x152 Real)) Real (ite (= x152 x1040) x513 (x570 x152)))
(define-fun x161 ((x152 Real)) Real (ite (= x261 x152) 32 (x38 x152)))
(define-fun x1356 ((x152 Real)) Real (ite (= x1386 x152) x922 (x147 x152)))
(define-fun x77 ((x152 Real)) Real (ite (= x1538 x152) 0 (x997 x152)))
(define-fun x1074 ((x152 x1338)) Real (ite (= x152 (x1138 274184521717934524641157099916833587206)) x64 (x884 x152)))
(define-fun x627 ((x152 x1338)) Real (ite (= x152 (x1138 x223)) x394 (x1074 x152)))
(define-fun x975 ((x152 x1338)) Real (ite (= x152 (x1138 x223)) x336 (x627 x152)))
(define-fun x545 ((x152 x1338)) Real (ite (= x152 (x1138 274184521717934524641157099916833587206)) x1573 (x975 x152)))
(define-fun x1435 ((x152 x1338)) Real (ite (= x152 (x1138 274184521717934524641157099916833587206)) x1523 (x545 x152)))
(define-fun x496 ((x152 x1338)) Real (ite (= (x1138 x1465) x152) x1540 (x1435 x152)))
(define-fun x729 ((x152 x1338)) Real (ite (= x152 x310) x896 (x1318 x152)))
(define-fun x912 ((x152 x1338)) Real (ite (= x152 x455) x930 (x729 x152)))
(define-fun x309 ((x152 x1338)) Real (ite (and x1434 x1262) (x912 x152) (x1318 x152)))
(define-fun x868 ((x152 x1338)) Real (ite (= x1035 x152) x1289 (x309 x152)))
(define-fun x39 ((x152 Real)) Real (ite (= x152 0) 1 (x683 x152)))
(define-fun x830 ((x152 Real)) Real (ite (= x1048 x152) x882 (x841 x152)))
(define-fun x1103 ((x152 x1338)) Real (ite (= x859 x152) x1071 (x240 x152)))
(define-fun x1470 ((x152 x1338)) Real (ite (= x152 x1553) x377 (x1103 x152)))
(define-fun x637 ((x152 x1338)) Real (ite (and x1434 x1262) (x240 x152) (x1470 x152)))
(define-fun x1084 ((x152 x1338)) Real (ite (= x152 x1070) x733 (x637 x152)))
(define-fun x1059 ((x152 Real)) Real (ite (= 0 x152) 1 (x683 x152)))
(define-fun x1342 ((x152 Real)) Real (ite (= x152 x1048) x576 (x841 x152)))
(define-fun x1378 ((x152 Real)) Real (ite (and x281 x870) (x39 x152) (x1059 x152)))
(define-fun x707 ((x152 x1338)) Real (ite (= x152 (x1138 x1465)) x1503 (x496 x152)))
(define-fun x1361 ((x152 Real)) Real (ite (= x1048 x152) x671 (x132 x152)))
(define-fun x1031 ((x152 Real)) Real (ite (and (< x152 (+ x1485 x671)) (>= x152 x1485)) (x1378 (+ 0 (- x152 x1485))) (x1361 x152)))
(define-fun x991 ((x152 Real)) Real (ite (and x369 x735) (x132 x152) (x1031 x152)))
(define-fun x232 ((x1368 Real)) Bool (=> (and (not (= x1368 2868243304)) (not (= 1889567281 x1368)) (not (= x1368 2418364589)) (not (= x1368 2939843472)) (not (= x1368 142201243)) (not (= x1368 274184521717934524641157099916833587206)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1368)) (not (= 911411945 x1368)) (not (= 759532456 x1368)) (not (= 2211524764 x1368)) (not (= x1368 1968616202)) (not (= x1368 649617121)) (not (= 2690754053 x1368)) (not (= x1368 468353030)) (not (= x1368 115792089237316195423570985008687907853269984665640564039457)) (not (= x1368 2258409472)) (not (= x1368 18446744073709551615)) (not (= 2764855426 x1368)) (not (= x1368 69947311)) (not (= 1986467848 x1368)) (< 10000 x1368) (not (= 2514000705 x1368)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1368)) (not (= 2743102681 x1368)) (not (= x1368 87118632)) (not (= x1368 274184521717934524641157099916833587218)) (not (= x1368 1000000000000000000)) (not (= x1368 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x1368 274184521717934524641157099916833587214)) (not (= x1368 604800)) (not (= x1368 2293535753)) (not (= 826074471 x1368)) (not (= 2061678023 x1368)) (not (= x1368 2960351575)) (not (= 2532887486 x1368)) (not (= 2512682246 x1368)) (not (= x1368 635128645)) (not (= 1461501637330902918203684832716283019655932542975 x1368)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1368)) (not (= 2798343961 x1368)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x1368)) (not (= x1368 2835717307))) (not ((_ is x604) (x1138 x1368)))))
(assert (axiom_frac_bound (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x665 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x631 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1082 1000000000000000000 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x111 x938 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x124 x1259 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1259 x747 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1314 x644 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1390 x60 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x60 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1525 x934 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1537 x163 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x163 x1537 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x60 x1390 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x631 32 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x644 x1314 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x747 x1259 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1525 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x111 (uninterp_frac (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x665 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x631 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1082 1000000000000000000 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x111 x938 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x124 x1259 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1259 x747 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1314 x644 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1390 x60 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x60 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1525 x934 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1537 x163 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x163 x1537 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x60 x1390 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x631 32 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x644 x1314 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x747 x1259 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1525 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x111 (uninterp_frac (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x665 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x631 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1082 1000000000000000000 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x111 x938 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x124 x1259 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1259 x747 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1314 x644 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1390 x60 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x60 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1525 x934 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1537 x163 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x163 x1537 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x60 x1390 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x631 32 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x644 x1314 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x747 x1259 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1525 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x111 (uninterp_frac (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x665 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x631 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1082 1000000000000000000 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x111 x938 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x124 x1259 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1259 x747 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1314 x644 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1390 x60 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x60 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1525 x934 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1537 x163 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x163 x1537 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x60 x1390 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x631 32 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x644 x1314 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x747 x1259 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1525 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x111 (uninterp_frac (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1135 1000000000000000000))
(assert (axiom_frac_zero x1135 1000000000000000000 1000000000000000000 x665 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 32 x631 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x1082 1000000000000000000 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x111 x938 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x124 x1259 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x1259 x747 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x1314 x644 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x1390 x60 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x1450 x60 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x1525 x934 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x1537 x163 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x163 x1537 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x60 x1390 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x631 32 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x644 x1314 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x747 x1259 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x934 x1525 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_zero x1135 1000000000000000000 x938 x111 (uninterp_frac x1135 1000000000000000000)))
(assert (axiom_frac_bound x123 1000000000000000000))
(assert (axiom_frac_zero x123 1000000000000000000 1000000000000000000 x665 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 32 x631 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x1082 1000000000000000000 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x111 x938 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x124 x1259 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x1259 x747 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x1314 x644 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x1390 x60 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x1450 x60 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x1525 x934 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x1537 x163 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x163 x1537 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x60 x1390 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x631 32 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x644 x1314 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x747 x1259 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x934 x1525 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_zero x123 1000000000000000000 x938 x111 (uninterp_frac x123 1000000000000000000)))
(assert (axiom_frac_bound x1315 x430))
(assert (axiom_frac_zero x1315 x430 1000000000000000000 x665 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 32 x631 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x1082 1000000000000000000 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x111 x938 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x124 x1259 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x1259 x747 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x1314 x644 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x1390 x60 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x1450 x60 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x1525 x934 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x1537 x163 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x163 x1537 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x60 x1390 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x631 32 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x644 x1314 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x747 x1259 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x934 x1525 (uninterp_frac x1315 x430)))
(assert (axiom_frac_zero x1315 x430 x938 x111 (uninterp_frac x1315 x430)))
(assert (axiom_frac_bound x1545 x1247))
(assert (axiom_frac_zero x1545 x1247 1000000000000000000 x665 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 32 x631 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x1082 1000000000000000000 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x111 x938 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x124 x1259 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x1259 x747 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x1314 x644 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x1390 x60 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x1450 x60 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x1525 x934 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x1537 x163 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x163 x1537 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x60 x1390 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x631 32 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x644 x1314 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x747 x1259 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x934 x1525 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_zero x1545 x1247 x938 x111 (uninterp_frac x1545 x1247)))
(assert (axiom_frac_bound x560 1000000000000000000))
(assert (axiom_frac_zero x560 1000000000000000000 1000000000000000000 x665 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 32 x631 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x1082 1000000000000000000 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x111 x938 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x124 x1259 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x1259 x747 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x1314 x644 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x1390 x60 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x1450 x60 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x1525 x934 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x1537 x163 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x163 x1537 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x60 x1390 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x631 32 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x644 x1314 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x747 x1259 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x934 x1525 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_zero x560 1000000000000000000 x938 x111 (uninterp_frac x560 1000000000000000000)))
(assert (axiom_frac_bound x677 1000000000000000000))
(assert (axiom_frac_zero x677 1000000000000000000 1000000000000000000 x665 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 32 x631 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x1082 1000000000000000000 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x111 x938 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x124 x1259 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x1259 x747 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x1314 x644 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x1390 x60 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x1450 x60 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x1525 x934 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x1537 x163 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x163 x1537 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x60 x1390 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x631 32 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x644 x1314 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x747 x1259 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x934 x1525 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_frac_zero x677 1000000000000000000 x938 x111 (uninterp_frac x677 1000000000000000000)))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1008))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1027))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1044))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1056))
(assert (axiom_int_approximation x1057))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x1063))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x107))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1085))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x1090))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1109))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1120))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1123))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1134))
(assert (axiom_int_approximation x1135))
(assert (axiom_int_approximation x1139))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1166))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1175))
(assert (axiom_int_approximation x1177))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x1190))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1207))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1210))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1226))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1247))
(assert (axiom_int_approximation x1248))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x1264))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1267))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x128))
(assert (axiom_int_approximation x1280))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1308))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1313))
(assert (axiom_int_approximation x1314))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1326))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1335))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1341))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1346))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x1351))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1360))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1366))
(assert (axiom_int_approximation x1370))
(assert (axiom_int_approximation x1372))
(assert (axiom_int_approximation x1373))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1377))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1395))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1401))
(assert (axiom_int_approximation x1405))
(assert (axiom_int_approximation x1410))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1413))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1416))
(assert (axiom_int_approximation x1417))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1425))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1436))
(assert (axiom_int_approximation x1437))
(assert (axiom_int_approximation x1438))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1447))
(assert (axiom_int_approximation x1448))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1454))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x146))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1461))
(assert (axiom_int_approximation x1465))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x1471))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1476))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x1481))
(assert (axiom_int_approximation x1484))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1488))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1494))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x1500))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x1508))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1513))
(assert (axiom_int_approximation x1519))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1523))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x1528))
(assert (axiom_int_approximation x1530))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x1538))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1541))
(assert (axiom_int_approximation x1543))
(assert (axiom_int_approximation x1544))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1571))
(assert (axiom_int_approximation x1572))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1575))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1582))
(assert (axiom_int_approximation x1583))
(assert (axiom_int_approximation x1588))
(assert (axiom_int_approximation x1589))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x1590))
(assert (axiom_int_approximation x1591))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1596))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x1599))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1601))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1603))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1607))
(assert (axiom_int_approximation x1609))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1613))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x170))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x189))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x211))
(assert (axiom_int_approximation x216))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x242))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x31))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x321))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x343))
(assert (axiom_int_approximation x347))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x472))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x477))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x516))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x554))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x560))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x631))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x65))
(assert (axiom_int_approximation x651))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x699))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x715))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x721))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x747))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x808))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x820))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x827))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x880))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x907))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x913))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x922))
(assert (axiom_int_approximation x925))
(assert (axiom_int_approximation x926))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x952))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x963))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x965))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x970))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x977))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x989))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x998))
(assert (axiom_int_approximation x999))
(assert (= (x543 (x1138 x61)) x61))
(assert (x333 x451))
(assert (= (ite (= x598 x789) x562 (x971 x789)) (x751 x789)))
(assert (x333 x56))
(assert (=> (< (- x372 1) 10000) (= (x604 x372) (x1138 x372))))
(assert (x333 x513))
(assert (= x1483 x260))
(assert (x232 x730))
(assert (x232 x340))
(assert (=> (< (- x801 1) 10000) (= (x1138 x801) (x604 x801))))
(assert (x333 x146))
(assert (x333 x429))
(assert (=> (> (+ 10000 1) x550) (= (x604 x550) (x1138 x550))))
(assert (= (=> (and (= x1299 (x355 (x1138 x1248) (x604 9) 0)) (= (x1482 x823) x1530) (= (x355 (x1138 x1319) x1299 0) x348) (= x823 (x355 (x1138 x883) x348 0)) (<= x1319 1461501637330902918203684832716283019655932542975) (<= x1530 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1530 x827) (<= 0 x1530) (> x814 0) (= 142201243 x442) (= (x263 (x1138 274184521717934524641157099916833587206)) x814) (>= 1461501637330902918203684832716283019655932542975 x883) (< x442 468353030) (not (= 87118632 x442)) (< x442 2293535753) (not (= 69947311 x442)) (< x442 911411945)) (=> (and (= (and x59 x141) x1185) (= x136 x984) (= x1107 x739) (= x59 (>= x1486 x387)) (= x714 x855) (= x827 x387)) x982)) x2))
(assert (= (x543 (x1138 x675)) x675))
(assert (x333 x619))
(assert (=> (< (- x464 1) 10000) (= (x604 x464) (x1138 x464))))
(assert (x232 x1175))
(assert (= x1326 (x543 (x1138 x1326))))
(assert (= 0 (x1345 x836)))
(assert (= (x569 x156) (ite (= x156 x1221) x631 (x353 x156))))
(assert (= (ite (= x1192 x625) x1158 (x824 x625)) (x1041 x625)))
(assert (= (ite (= x1484 x1233) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x1233)) (x824 x1233)))
(assert (x232 x159))
(assert (= (ite (= x625 x684) x143 (x1291 x625)) (x1119 x625)))
(assert (= (x1138 2512682246) (x604 2512682246)))
(assert (x333 x1134))
(assert (= (x543 (x1138 x211)) x211))
(assert (x1501 x786))
(assert (x333 x1090))
(assert (=> (> (+ 10000 1) x392) (= (x1138 x392) (x604 x392))))
(assert (x333 x1334))
(assert (= (ite (and x260 x1064 (not x1273) (not x1316)) (x78 x1519) (ite (and (not x1064) (not x1316) x260) (x751 x1519) (ite (and x1316 x260) (x751 x1519) (x711 x1519)))) (x228 x1519)))
(assert (x333 x1385))
(assert (x333 x1485))
(assert (= (x558 x546) (ite (and x572 x905) (x569 x546) (x258 x546))))
(assert (x333 x1417))
(assert (x232 x493))
(assert (x333 x1414))
(assert (x333 x460))
(assert (= (x558 x169) (ite (and x905 x572) (x569 x169) (x258 x169))))
(assert (=> (< (- x1107 1) 10000) (= (x1138 x1107) (x604 x1107))))
(assert (x333 x1326))
(assert (x333 x1590))
(assert (= (x569 x1221) x631))
(assert (x333 x932))
(assert (x333 x244))
(assert (x333 x489))
(assert (= (x233 x894) (ite (and x704 (not x923) x947 x118 x1077 x1093) (x1119 x894) (ite (and (not x1093) x947 x704 x118 x1077) (x1291 x894) (ite (and x118 (not x1077) x947 x704) (x1041 x894) (ite (and (not x704) x947 x118) (x824 x894) (x327 x894)))))))
(assert (= (ite (= x598 x1519) x562 (x971 x1519)) (x751 x1519)))
(assert (= x945 x1332))
(assert (x1501 x1085))
(assert (= 0 (x1345 192)))
(assert (x333 x1387))
(assert (x232 x1476))
(assert (x333 x820))
(assert (= x1038 x344))
(assert (= (x134 x1519) (ite (and x118 x947 (not x1433)) (x233 x1519) (x1001 x1519))))
(assert (x333 x1405))
(assert (= x974 (x543 (x1138 x974))))
(assert (x232 x573))
(assert (= x891 (x543 (x1138 x891))))
(assert (x333 x827))
(assert (= (and x904 (not x911)) x225))
(assert (= (x997 x508) (ite (and x1099 x1046 x1520 x417 (not x95) x467) (x147 x508) (ite (and x417 x467 x1046 x1520 (not x1099)) (x1456 x508) (ite (and x417 x467 (not x1520) x1046) (x807 x508) (ite (and (not x1046) x417 x467) (x772 x508) (x1356 x508)))))))
(assert (= (ite (= x156 x598) x562 (x971 x156)) (x751 x156)))
(assert (= true x749))
(assert (x333 x937))
(assert (= (x604 2764855426) (x1138 2764855426)))
(assert (x232 x587))
(assert (x232 x1594))
(assert (x333 x1221))
(assert (= (ite (= x955 x297) x8 (x580 x297)) (x1561 x297)))
(assert (= (x543 (x1138 x574)) x574))
(assert (x232 x1460))
(assert (x333 x1439))
(assert (=> (< (- x573 1) 10000) (= (x604 x573) (x1138 x573))))
(assert (=> (> (+ 10000 1) x181) (= (x604 x181) (x1138 x181))))
(assert (x333 x8))
(assert (x232 x220))
(assert (x1501 1461501637330902918203684832716283019655932542975))
(assert (= (x1119 x1519) (ite (= x684 x1519) x143 (x1291 x1519))))
(assert (= x1360 (x543 (x1138 x1360))))
(assert (= (x604 759532456) (x1138 759532456)))
(assert (x333 x341))
(assert (x333 x1245))
(assert (x333 x1359))
(assert (= (x543 (x1138 x821)) x821))
(assert (x333 x998))
(assert (=> (< (- x1579 1) 10000) (= (x604 x1579) (x1138 x1579))))
(assert (x333 x1244))
(assert (x333 x549))
(assert (= (x604 2835717307) (x1138 2835717307)))
(assert (= (ite (= x1221 x274) x631 (x353 x274)) (x569 x274)))
(assert (= (x543 (x1138 x332)) x332))
(assert (= (x543 (x1138 x906)) x906))
(assert (= x1170 (and x656 x1577)))
(assert (x333 x1600))
(assert (x232 x93))
(assert (= (x1119 x575) (ite (= x684 x575) x143 (x1291 x575))))
(assert (x232 x352))
(assert (= x82 (x543 (x1138 x82))))
(assert (x232 x652))
(assert (x232 x273))
(assert (= x1585 (=> (= x1350 x407) x194)))
(assert (x232 x796))
(assert (= x423 (and (not x1434) x1262)))
(assert (x232 x718))
(assert (= (ite (and x1434 x1262) (x1271 x894) (x46 x894)) (x523 x894)))
(assert (= (x78 x1519) (ite (= x1519 x456) x1245 (x751 x1519))))
(assert (x333 x1044))
(assert (x232 x1326))
(assert (= (x1138 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x604 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x333 x1398))
(assert (x333 x541))
(assert (= x1572 (x543 (x1138 x1572))))
(assert (x333 x1008))
(assert (x333 x1190))
(assert (= (ite (= x1221 x625) x631 (x353 x625)) (x569 x625)))
(assert (x232 x447))
(assert (= x796 (x543 (x1138 x796))))
(assert (= (ite (= x508 x456) x1245 (x751 x508)) (x78 x508)))
(assert (= x315 (=> (and (= x727 (= 0 x291)) (>= x291 0) (<= x291 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x355 (x1138 x796) (x604 6) 0) x440) (= x826 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x291 (x1391 x1354)) (= x1354 (x355 (x1138 x826) x440 0))) (and (=> (and (= x1130 (> x276 0)) (not x1130) (= (x548 (- x796 1)) x276) x727) x1404) (=> (and (not x727) (= x796 x472)) x41)))))
(assert (= x1534 (x543 (x1138 x1534))))
(assert (x333 x550))
(assert (= (x134 x169) (ite (and x947 (not x1433) x118) (x233 x169) (x1001 x169))))
(assert (= (or x697 (and x825 x237)) x212))
(assert (x333 x718))
(assert (x333 x410))
(assert (x333 x1465))
(assert (x333 x211))
(assert (x333 x1214))
(assert (x333 x192))
(assert (x333 x933))
(assert (x333 x1310))
(assert (x333 x254))
(assert (x333 x186))
(assert (x333 x1396))
(assert (= (x543 (x1138 x612)) x612))
(assert (= (and (not x1236) x423) x527))
(assert (=> (< (- x607 1) 10000) (= (x604 x607) (x1138 x607))))
(assert (= x905 x851))
(assert (=> (> (+ 10000 1) x819) (= (x1138 x819) (x604 x819))))
(assert (= x464 (x543 (x1138 x464))))
(assert (x232 x784))
(assert (=> (> (+ 10000 1) x796) (= (x604 x796) (x1138 x796))))
(assert (x333 x879))
(assert (x333 x156))
(assert (x333 x98))
(assert (x333 x1511))
(assert (x333 x847))
(assert (x333 x1344))
(assert (= (x1345 x1040) 0))
(assert (x333 x133))
(assert (= (x558 x1233) (ite (and x905 x572) (x569 x1233) (x258 x1233))))
(assert (x333 x1572))
(assert (x232 x640))
(assert (= x993 (=> (and (or (and (not x1176) (= x1266 1) (< 0 x430) (= x60 (- (/ x1315 x430) (uninterp_frac x1315 x430))) (= x110 0) (= (ite (> x665 115792089237316195423570985008687907853269984665640564039457) 1 0) x786) (or (and (= (x853 1461501637330902918203684832716283019655932542975 x465) x246) (<= x1417 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x665 x1132)) (= (x355 (x1138 x989) x1285 0) x1514) (= (x1561 x789) x477) (= (x853 1461501637330902918203684832716283019655932542975 x465) x1066) x673 (= (x355 (x1138 x664) x277 0) x1125) (= x801 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (x355 (x1138 x981) (x604 4) 0) x1285) (= x88 (x355 (x1138 x273) x1255 0)) (= x477 x1488) (= x277 (x355 (x1138 x801) x408 0)) (= x989 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x408 (x355 (x1138 x246) x450 0)) (= (x490 (+ x204 160)) x789) (= (x355 (x1138 x211) x1514 0) x13) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x211) (= x395 x55) (= x172 x1132) (= (+ x798 x172) x1548) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x477 x1341)) (> x631 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1450) (>= 1461501637330902918203684832716283019655932542975 x273) (<= 0 x1450) (= x798 x665) (> x631 0) (= (* x1450 x60) x123) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1450 x60)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1132) (= (x355 (x1138 x101) x13 0) x803) (= x101 (x1246 x395)) (< 0 x235) (= x1417 0) (= x450 (x355 (x1138 x981) (x604 4) 0)) (= x273 (x1246 x395)) (= x668 x1341) (<= 0 x1132) (= x1417 (x404 x1125)) (<= x101 1461501637330902918203684832716283019655932542975) (= x1341 (- (/ x123 1000000000000000000) (uninterp_frac x123 1000000000000000000))) (= (> x631 1) x76) (= x304 (x355 (x1138 x981) (x604 11) 0)) (or (and (< 1 x631) (= x1011 x532) (= x848 (x853 1461501637330902918203684832716283019655932542975 x465)) (= (x355 (x1138 x365) x1052 0) x219) (< 1 x638) (= x25 (x355 (x1138 x332) x1552 0)) (= x560 (* x1390 x60)) (not x1213) (= x1373 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x1188 (+ x1313 x1602)) (= x532 (- (/ x560 1000000000000000000) (uninterp_frac x560 1000000000000000000))) (< 1 x631) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x532 x33)) (= x665 x1602) (< (* x60 x1390) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1150 (x355 (x1138 x1373) x1208 0)) (= x332 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= x1390 (x1339 x1151)) (= x1052 (x355 (x1138 x82) x6 0)) (> x631 1) (= x1151 (x355 (x1138 x891) x1150 0)) (<= x253 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x490 (+ 64 x1302)) x1163) (= x1528 (x1246 x1163)) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x365) (= (x1246 x1163) x891) (= x139 (x490 (+ 192 x204))) (= x7 (+ x838 x1011)) (= (< 2 x631) x1213) (= x253 (x1181 x89)) (<= 0 x253) x76 (= (x355 (x1138 x1528) x25 0) x89) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x665 x253)) (>= x325 0) (>= x1390 0) (= x275 (x355 (x1138 x981) (x604 4) 0)) (<= x1528 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x325) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1390) (= x33 x838) (= (x355 (x1138 x632) x219 0) x781) (= (x853 1461501637330902918203684832716283019655932542975 x465) x82) (= x33 (x1073 x139)) (<= x632 1461501637330902918203684832716283019655932542975) (= x1208 (x355 (x1138 x981) (x604 11) 0)) (= x325 (x1181 x781)) (= x325 0) (= x6 (x355 (x1138 x981) (x604 4) 0)) (= (x1246 x1163) x632) (= (x1073 x1221) x638) (<= x891 1461501637330902918203684832716283019655932542975) (= x1552 (x355 (x1138 x848) x275 0)) (= x253 x1313)) (not x76)) (= (x404 x803) x1132) (= (+ x668 x1488) x578) (= x664 (x1246 x395)) (<= 0 x1417) (< 0 x631) (= (x355 (x1138 x1066) x304 0) x1255) (= x1450 (x1339 x88)) (>= 1461501637330902918203684832716283019655932542975 x664) (= x235 (x1561 x1221))) (not x673)) (= x110 (x853 x1266 x786)) (= (> x631 0) x673) (= x1315 (uninterp_mod (* 1000000000000000000 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1176) (= (x355 (x1138 x981) (x604 3) 0) x1295) (= x1021 x1466) (>= x8 0) (= (x853 1461501637330902918203684832716283019655932542975 x465) x1355) (= x955 (x490 (+ 32 x1034))) (= x495 (x355 (x1138 x30) x63 0)) (= x501 (x355 (x1138 x913) x1295 0)) (= (x355 (x1138 x981) (x604 5) 0) x63) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x665) (not (= x981 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (<= 0 x430) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8) (>= x1335 0) (or x617 (and (not x617) (= x402 (x853 1461501637330902918203684832716283019655932542975 x465)))) (<= 0 x1027) (= x665 (x586 x1562)) (= (x1391 x205) x1027) (= (x1061 x1065 1) x224) (= (x853 1461501637330902918203684832716283019655932542975 x465) x30) (= (x943 x1065) x1335) (= x1415 (x853 1461501637330902918203684832716283019655932542975 x1120)) (or (and (= (x1561 x955) x983) (= x1421 (< x983 x1232)) (or (and (= x710 (x1561 x955)) x1421 (= x710 x1364)) (and (not x1421) (= x1364 x1232))) x643 (or (and (= 604800 x764) (= (ite (< x1128 604800) x1128 604800) x1212) (not x469) (= x1212 x938) (= (x548 (- x1364 x1027)) x1128) (not (> x1027 x1364))) (and x469 (not (< x1364 x1543)) (= (x548 (- x1364 x1543)) x1446) (= (x1561 x1034) x1543) (= x938 x1446))) (= (= x1027 0) x469)) (and (= x938 0) (not x643))) (or (and (= (x853 1461501637330902918203684832716283019655932542975 x465) x1413) (= x669 (x355 (x1138 x981) (x604 6) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x111 x938)) (= x476 (x355 (x1138 x981) (x604 5) 0)) (= x1425 x384) (= (+ x1448 x384) x995) (= x48 (x774 x120)) (= x978 (x355 (x1138 x663) x669 0)) (= x663 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x48 x1448) (<= 0 x48) (= x1425 x92) (= x120 (x355 (x1138 x1413) x476 0)) (not x1216) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x48) (= (* x938 x111) x92) (< (+ x48 x1425) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and x1216 (= (x355 (x1138 x573) x100 0) x346) (= (x853 1461501637330902918203684832716283019655932542975 x465) x573) (= x100 (x355 (x1138 x981) (x604 6) 0)))) (<= x1027 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x355 (x1138 x981) (x604 1) 0) x1065) (< x672 x777) (= x913 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x643 (< x1027 x593)) (>= x665 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x430) (<= x1335 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8 (x515 x224)) (= x1216 (= x938 0)) (= x205 (x355 (x1138 x1355) x685 0)) (= x593 (x1561 x955)) (= x1176 (= 0 x665)) (= x430 (x1305 x495)) (= (x355 (x1138 x981) (x604 6) 0) x685) (= x1466 (x490 (+ x1034 64))) (= x1562 (x355 (x1138 x1415) x501 0)) (= (x490 (+ 2 x1036)) x777) (= x617 (= x998 0))) x944)))
(assert (=> (> (+ 10000 1) x1319) (= (x604 x1319) (x1138 x1319))))
(assert (= (x1119 x953) (ite (= x953 x684) x143 (x1291 x953))))
(assert (= (ite (and x905 x572) (x569 x575) (x258 x575)) (x558 x575)))
(assert (= (ite (and x1195 x1464) (x1321 x871) (ite (and x1464 (not x1195) x366) (x1003 x871) (x701 x871))) (x1468 x871)))
(assert (= (ite (and x1434 x1262) (x1271 x546) (x46 x546)) (x523 x546)))
(assert (= x447 (x543 (x1138 x447))))
(assert (=> (< (- x1109 1) 10000) (= (x604 x1109) (x1138 x1109))))
(assert (x333 x298))
(assert (x333 x699))
(assert (= (=> (and (= x1190 (x1391 x174)) (= x468 (x355 (x1138 x981) (x604 6) 0)) (= (= 0 x1190) x1577) (<= 0 x1190) (= (x853 1461501637330902918203684832716283019655932542975 x465) x102) (= (x355 (x1138 x102) x468 0) x174) (<= x1190 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x157) (not (> x981 x157)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x157)) (and (=> x1577 x1282) (=> (and (= x429 (x378 x32)) (= x429 x111) (<= 0 x429) (not x1577) (= x618 (x355 (x1138 x981) (x604 10) 0)) (= x819 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x998 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x429) (= x32 (x355 (x1138 x819) x618 0))) x993))) x609))
(assert (x333 x491))
(assert (x232 x1572))
(assert (= (x1456 x1519) (ite (= x759 x1519) x305 (x807 x1519))))
(assert (x333 x638))
(assert (x232 x1109))
(assert (= x771 (=> (and (= x1300 (= 0 x619)) (or (and (= x126 (x355 (x1138 x619) (x604 10) 0)) (<= x698 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x355 (x1138 x612) x126 0) x1347) (not x1300) (or (and (not x547) (= x998 1) (= x111 x698)) (and (= 0 x998) x547 (= x111 0))) (= x547 (= x698 0)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x612) (= (x378 x1347) x698) (>= x698 0)) (and (= x111 0) (= 0 x998) x1300))) x993)))
(assert (= (x543 (x1138 x1579)) x1579))
(assert (x1501 x785))
(assert (= (ite (= x169 x955) x8 (x580 x169)) (x1561 x169)))
(assert (x232 x621))
(assert (= (or (and (not x1277) x939) (and x1170 (not x1211)) (and x727 x403)) x1328))
(assert (= (x228 x1201) (ite (and x260 (not x1316) x1064 (not x1273)) (x78 x1201) (ite (and x260 (not x1316) (not x1064)) (x751 x1201) (ite (and x260 x1316) (x751 x1201) (x711 x1201))))))
(assert (x333 x113))
(assert (x333 x926))
(assert (= (x543 (x1138 x1439)) x1439))
(assert (x333 x430))
(assert (=> (< (- x30 1) 10000) (= (x1138 x30) (x604 x30))))
(assert (x333 x665))
(assert (=> (> (+ 10000 1) x652) (= (x1138 x652) (x604 x652))))
(assert (= (x751 x274) (ite (= x598 x274) x562 (x971 x274))))
(assert (= (x543 (x1138 x1006)) x1006))
(assert (= (ite (= x836 x955) x8 (x580 x836)) (x1561 x836)))
(assert (x333 x442))
(assert (x333 x979))
(assert (x333 x248))
(assert (x333 x1128))
(assert (x333 x1458))
(assert (x333 x1153))
(assert (=> (> (+ 10000 1) x9) (= (x604 x9) (x1138 x9))))
(assert (= x331 x409))
(assert (=> (> (+ 10000 1) x974) (= (x604 x974) (x1138 x974))))
(assert (x333 x30))
(assert (x333 x1499))
(assert (x333 x929))
(assert (x333 x848))
(assert (x232 x1043))
(assert (x333 x121))
(assert (=> (> (+ 10000 1) x989) (= (x604 x989) (x1138 x989))))
(assert (= (x1561 x955) x8))
(assert (= (x1561 x508) (ite (= x955 x508) x8 (x580 x508))))
(assert (= x223 (x543 (x1138 x223))))
(assert (= (x147 x894) (ite (= x820 x894) x968 (x1456 x894))))
(assert (= (ite (and (not x1433) x947 x118) (x233 x508) (x1001 x508)) (x134 x508)))
(assert (x333 x1486))
(assert (= (x543 (x1138 x460)) x460))
(assert (x333 x184))
(assert (x333 x287))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x543 (x604 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (x333 x528))
(assert (= x808 (x543 (x1138 x808))))
(assert (= x587 (x543 (x1138 x587))))
(assert (x333 x969))
(assert (x333 x1447))
(assert (= (x543 (x1138 x1016)) x1016))
(assert (= (x543 (x1138 x1081)) x1081))
(assert (x232 x1373))
(assert (= (ite (and x1434 x1262) (x1271 x625) (x46 x625)) (x523 x625)))
(assert (= (x543 (x1138 x136)) x136))
(assert (= (ite (and x1093 x1077 (not x923) x118 x704 x947) (x1119 x953) (ite (and x1077 x704 x118 (not x1093) x947) (x1291 x953) (ite (and x118 (not x1077) x947 x704) (x1041 x953) (ite (and x118 (not x704) x947) (x824 x953) (x327 x953))))) (x233 x953)))
(assert (=> (> (+ 10000 1) x211) (= (x1138 x211) (x604 x211))))
(assert (x333 x55))
(assert (= (ite (and x905 x572) (x569 x139) (x258 x139)) (x558 x139)))
(assert (x333 x502))
(assert (= (x543 (x604 2418364589)) 2418364589))
(assert (x333 x234))
(assert (x333 x1199))
(assert (x333 x981))
(assert (x333 x401))
(assert (x333 x48))
(assert (= x281 (and x417 x467)))
(assert (x333 x516))
(assert (x333 x1122))
(assert (= x202 (and x470 x1610)))
(assert (= (x604 2293535753) (x1138 2293535753)))
(assert (=> (< (- x985 1) 10000) (= (x604 x985) (x1138 x985))))
(assert (= (x543 (x1138 x663)) x663))
(assert (= (x1073 x836) (ite (= x836 x789) x578 (x1561 x836))))
(assert (= (x78 x575) (ite (= x456 x575) x1245 (x751 x575))))
(assert (= (x543 (x604 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x232 x420))
(assert (x333 x1395))
(assert (x333 x1005))
(assert (= (x1561 x953) (ite (= x953 x955) x8 (x580 x953))))
(assert (x333 x49))
(assert (= (=> (and (= (x548 (- x1036 1)) x1600) (= x927 (< 0 x1600))) (and (=> (not x927) x481) (=> x927 x788))) x565))
(assert (x232 x1502))
(assert (= (x543 (x1138 x819)) x819))
(assert (x232 x709))
(assert (x232 x1528))
(assert (= (x543 (x1138 x420)) x420))
(assert (= (ite (= x1221 x575) x631 (x353 x575)) (x569 x575)))
(assert (x333 x422))
(assert (= (x543 (x1138 x895)) x895))
(assert (x333 x532))
(assert (= (=> (and (= x886 (> x1058 0)) (= (x548 (- x981 1)) x1058)) (and (=> (not x886) x864) (=> x886 x1183))) x162))
(assert (= (x543 (x604 2532887486)) 2532887486))
(assert (= (x543 (x1138 x1284)) x1284))
(assert (x333 x1172))
(assert (x333 x50))
(assert (= (ite (and x260 x1472) (x752 x1278) (x1047 x1278)) (x774 x1278)))
(assert (x333 x1303))
(assert (=> (> (+ 10000 1) x663) (= (x1138 x663) (x604 x663))))
(assert (x333 x1428))
(assert (=> (< (- x553 1) 10000) (= (x604 x553) (x1138 x553))))
(assert (x333 x1474))
(assert (x333 x377))
(assert (x333 x185))
(assert (= (ite (and (not x1273) (not x1316) x260 x1064) (x78 x508) (ite (and (not x1316) x260 (not x1064)) (x751 x508) (ite (and x1316 x260) (x751 x508) (x711 x508)))) (x228 x508)))
(assert (x333 x738))
(assert (=> (> (+ 10000 1) x443) (= (x604 x443) (x1138 x443))))
(assert (= (x1138 1461501637330902918203684832716283019655932542975) (x604 1461501637330902918203684832716283019655932542975)))
(assert (x333 x1598))
(assert (= (x1073 x953) (ite (= x953 x789) x578 (x1561 x953))))
(assert (x333 x922))
(assert (x232 x783))
(assert (x333 x660))
(assert (=> (> (+ 10000 1) x93) (= (x604 x93) (x1138 x93))))
(assert (= (=> (and (= x1006 (x853 1461501637330902918203684832716283019655932542975 x465)) (<= x666 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x553 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= x270 (x355 (x1138 x1006) x195 0)) (= x195 (x355 (x1138 x1036) (x604 7) 0)) (>= x666 0) (= x1581 (x355 (x1138 x553) x270 0)) (= x666 (x994 x1581)) (= (= x666 0) x1419)) (and (=> (and (not x1419) (= x1036 x80)) x1595) (=> x1419 x4))) x1329))
(assert (x333 x1217))
(assert (= (x543 (x1138 x93)) x93))
(assert (= (x543 (x604 911411945)) 911411945))
(assert (= (x543 (x1138 x897)) x897))
(assert (x1169 x148 x1288 x1491 x1010))
(assert (= (ite (= x803 x1518) x1548 (x404 x1518)) (x1181 x1518)))
(assert (x333 x360))
(assert (= x81 (x543 (x1138 x81))))
(assert (x333 x1016))
(assert (x333 x1360))
(assert (=> (> (+ 10000 1) x525) (= (x1138 x525) (x604 x525))))
(assert (= x1160 (and x237 (not x825))))
(assert (x333 x1264))
(assert (= (ite (= x508 x598) x562 (x971 x508)) (x751 x508)))
(assert (= (ite (and x1064 (not x1316) x260 (not x1273)) (x867 x1125) (ite (and (not x1064) x260 (not x1316)) (x712 x1125) (ite (and x260 x1316) (x712 x1125) (x602 x1125)))) (x404 x1125)))
(assert (=> (< (- x999 1) 10000) (= (x1138 x999) (x604 x999))))
(assert (x1501 x244))
(assert (x333 x1521))
(assert (= (x543 (x1138 x554)) x554))
(assert (x333 x352))
(assert (x333 x632))
(assert (= (x543 (x1138 x664)) x664))
(assert (= (x543 (x1138 x159)) x159))
(assert (x333 x386))
(assert (x333 x165))
(assert (x333 x1424))
(assert (x232 x428))
(assert (x333 x888))
(assert (x333 x754))
(assert (x232 x1058))
(assert (x333 x1072))
(assert (= (ite (and x260 (not x1316) (not x1273) x1064) (x78 x1233) (ite (and (not x1316) x260 (not x1064)) (x751 x1233) (ite (and x260 x1316) (x751 x1233) (x711 x1233)))) (x228 x1233)))
(assert (x333 x955))
(assert (=> (> (+ 10000 1) x223) (= (x604 x223) (x1138 x223))))
(assert (x232 x954))
(assert (= x916 (=> (and (or (and (= x907 (x1482 x606)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x907) (= x907 x1314) (= x488 (x355 (x1138 x554) x1423 0)) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x808) (= 1 x520) (= (x853 1461501637330902918203684832716283019655932542975 x465) x554) (= (x355 (x1138 x159) (x604 9) 0) x1423) (<= 0 x907) (not x535) (= x606 (x355 (x1138 x808) x488 0))) (and (= x520 0) (= 0 x1314) x535)) (= x535 (= x159 0))) x322)))
(assert (= (x543 (x1138 x30)) x30))
(assert (x333 x1544))
(assert (x333 x448))
(assert (x333 x1055))
(assert (= (x1468 x16) (ite (and x1195 x1464) (x1321 x16) (ite (and x1464 (not x1195) x366) (x1003 x16) (x701 x16)))))
(assert (x333 x1377))
(assert (x232 x900))
(assert (x232 x806))
(assert (x333 x75))
(assert (= (x1138 2258409472) (x604 2258409472)))
(assert (x333 x58))
(assert (= x1225 (x543 (x1138 x1225))))
(assert (= x1066 (x543 (x1138 x1066))))
(assert (= (=> (and (= x1019 x984) (= x999 x739)) x177) x567))
(assert (x232 x112))
(assert (= (x1138 1000000000000000000) (x604 1000000000000000000)))
(assert (x333 x1308))
(assert (x333 x1019))
(assert (x333 x688))
(assert (= (x1138 2690754053) (x604 2690754053)))
(assert (= (x543 (x1138 x883)) x883))
(assert (= (x543 (x1138 x428)) x428))
(assert (x232 x289))
(assert (x232 x1319))
(assert (= x506 (x543 (x1138 x506))))
(assert (x333 x661))
(assert (= (x867 x1518) (ite (= x1518 x768) x725 (x712 x1518))))
(assert (x232 x431))
(assert (x232 x181))
(assert (= (x543 (x1138 x1413)) x1413))
(assert (= (x1291 x508) (ite (= x551 x508) x1469 (x1041 x508))))
(assert (= (x824 x1201) (ite (= x1201 x1484) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x1201))))
(assert (= (ite (= x551 x1519) x1469 (x1041 x1519)) (x1291 x1519)))
(assert (x333 x1079))
(assert (x333 x578))
(assert (=> (< (- x1091 1) 10000) (= (x1138 x1091) (x604 x1091))))
(assert (=> (< (- x587 1) 10000) (= (x1138 x587) (x604 x587))))
(assert (= x1396 (x543 (x1138 x1396))))
(assert (=> (< (- x612 1) 10000) (= (x604 x612) (x1138 x612))))
(assert (x232 x1141))
(assert (= x1404 (=> (= 0 x619) x771)))
(assert (x232 x632))
(assert (= 2835717307 (x543 (x604 2835717307))))
(assert (= (x543 (x1138 x112)) x112))
(assert (x333 x1083))
(assert (= (x523 x1519) (ite (and x1434 x1262) (x1271 x1519) (x46 x1519))))
(assert (= (x404 x893) (ite (and x260 (not x1273) (not x1316) x1064) (x867 x893) (ite (and (not x1064) x260 (not x1316)) (x712 x893) (ite (and x1316 x260) (x712 x893) (x602 x893))))))
(assert (x232 x1019))
(assert (x333 x425))
(assert (= 0 (x1345 x508)))
(assert (x333 x497))
(assert (x333 x1484))
(assert (= x640 (x543 (x1138 x640))))
(assert (= (x404 x1518) (ite (and x260 x1064 (not x1273) (not x1316)) (x867 x1518) (ite (and (not x1316) (not x1064) x260) (x712 x1518) (ite (and x260 x1316) (x712 x1518) (x602 x1518))))))
(assert (= (x543 (x1138 x632)) x632))
(assert (x333 x1415))
(assert (= (x543 (x604 2293535753)) 2293535753))
(assert (x333 x1558))
(assert (= (x543 (x604 1986467848)) 1986467848))
(assert (x333 x554))
(assert (x333 x1401))
(assert (= (x228 x957) (ite (and x260 (not x1316) x1064 (not x1273)) (x78 x957) (ite (and (not x1316) (not x1064) x260) (x751 x957) (ite (and x1316 x260) (x751 x957) (x711 x957))))))
(assert (x333 x143))
(assert (= (x1138 468353030) (x604 468353030)))
(assert (= x1056 (x543 (x1138 x1056))))
(assert (x333 x447))
(assert (= (or (and x599 (not x318)) (and x149 x881) (and (not x334) x793)) x487))
(assert (= x1594 (x543 (x1138 x1594))))
(assert (= (ite (= x1233 x955) x8 (x580 x1233)) (x1561 x1233)))
(assert (x232 x1006))
(assert (x333 x593))
(assert (=> (< (- x690 1) 10000) (= (x604 x690) (x1138 x690))))
(assert (=> (< (- x431 1) 10000) (= (x604 x431) (x1138 x431))))
(assert (x333 x907))
(assert (x333 x1156))
(assert (x333 x747))
(assert (x333 x1173))
(assert (= x19 (=> (and (= false x1515) (= x186 (x884 (x1138 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x1292) (= false x1086) x702 (= x984 x550) (= false x988) (>= 1461501637330902918203684832716283019655932542975 x738) x485 (= x1258 2939843472) (= x1478 (x884 (x1138 274184521717934524641157099916833587218))) (= x1194 false) (<= 0 x739) x1270 (= (< 0 (x263 (x1138 274184521717934524641157099916833587214))) x702) (>= x855 0) (= x739 x1534) (= x1292 x368) (= x103 5) (<= 0 x1292) (= (x884 (x1138 274184521717934524641157099916833587214)) x1200) (>= 1461501637330902918203684832716283019655932542975 x855) (= (< 0 (x263 (x1138 274184521717934524641157099916833587206))) x485) (>= x186 0) (>= x738 0) (>= x1200 0) (<= 0 x1613) (>= 1461501637330902918203684832716283019655932542975 x739) (= (< 0 (x263 (x1138 274184521717934524641157099916833587218))) x1270) (<= x1613 1461501637330902918203684832716283019655932542975) (>= x1478 0) (= x738 x1351)) x288)))
(assert (x333 x329))
(assert (x333 x1141))
(assert (x232 x1579))
(assert (= x538 (x543 (x1138 x538))))
(assert (x333 x1543))
(assert (x232 x895))
(assert (= x409 x792))
(assert (= x553 (x543 (x1138 x553))))
(assert (= (=> (and (= x28 (x154 x1518)) (< 0 x861) (>= 1461501637330902918203684832716283019655932542975 x447) (<= x506 1461501637330902918203684832716283019655932542975) (= x595 2532887486) (= (x263 (x1138 274184521717934524641157099916833587206)) x861) (= (x355 (x1138 x447) x529 0) x418) (= x529 (x355 (x1138 x754) (x604 4) 0)) (not (= x595 2512682246)) (= x1518 (x355 (x1138 x506) x1362 0)) (= x1362 (x355 (x1138 x690) x418 0)) (not (> 2293535753 x595)) (< x595 2960351575) (not (= x595 2418364589)) (not (= x595 2293535753)) (= x28 x925) (<= 0 x28) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x28) (<= x690 1461501637330902918203684832716283019655932542975) (< x595 2690754053)) x150) x1403))
(assert (= (x558 x789) (ite (and x905 x572) (x569 x789) (x258 x789))))
(assert (= (x134 x953) (ite (and x118 (not x1433) x947) (x233 x953) (x1001 x953))))
(assert (= (x824 x953) (ite (= x1484 x953) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x953))))
(assert (x232 x690))
(assert (= (x558 x953) (ite (and x572 x905) (x569 x953) (x258 x953))))
(assert (= (ite (= x1519 x955) x8 (x580 x1519)) (x1561 x1519)))
(assert (= (x1345 x456) 0))
(assert (= (or (and x904 x911) (and x1483 x1002) x217) x118))
(assert (= x1570 x1331))
(assert (x333 x80))
(assert (x232 x136))
(assert (= true x416))
(assert (= (x1138 826074471) (x604 826074471)))
(assert (x232 x819))
(assert (x333 x1254))
(assert (=> (< (- x365 1) 10000) (= (x1138 x365) (x604 x365))))
(assert (= (=> (and (= x1524 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1435 (x1138 x1465)))) (= x74 (< x758 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1524 x641 (= x1165 x399) (= (= 274184521717934524641157099916833587218 x1465) x870) (= (x545 (x1138 274184521717934524641157099916833587206)) x256) (= x1540 (x1435 (x1138 x1465))) (= x758 (x545 (x1138 x1465))) (= (<= 0 x256) x641) x74 (= (x545 (x1138 274184521717934524641157099916833587206)) x1523)) (and (=> (and (= x168 (x309 x577)) (= x1609 (+ x91 x1494)) (= x1289 (x548 (- x168 x880))) (not x1053) (= x965 (x868 x138)) (>= x965 0) (= x544 68) (= (x548 (- x544 4)) x1199) (not (= 2514000705 x1474)) (= 2835717307 x1474) (= x965 x91) (not x494) (< 0 x117) (= x1215 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 32 x671) (= 1 x977) (= x762 x1494) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x965) (not (= x1474 649617121)) (<= x168 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x762 x168) x385) (= x544 x1165) (= x880 x1088) (= (x263 (x1138 274184521717934524641157099916833587218)) x117) (= (>= (+ x762 x965) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x494) (= (x355 (x1138 274184521717934524641157099916833587206) (x604 1) 0) x577) x870 (<= x734 1461501637330902918203684832716283019655932542975) (= x56 x734) (not x1051) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x762 x965)) (not (> 4 x544)) (= 274184521717934524641157099916833587206 x505) (not x385) (= x734 x51) (not (= 826074471 x1474)) (= (x355 (x1138 274184521717934524641157099916833587206) (x604 1) 0) x1035) (= (x355 (x1138 x734) (x604 1) 0) x138) (= (> x880 x168) x1051) (= x882 x1118) (not (> 649617121 x1474)) (not (= 1889567281 x1474)) (= x1053 (or (> x1199 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1199 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1199)))) (= x880 x762) (= 274184521717934524641157099916833587206 x956) (>= x168 0)) x1340) (=> (not x870) x1100))) x210))
(assert (x333 x395))
(assert (x333 x61))
(assert (=> (< (- x826 1) 10000) (= (x604 x826) (x1138 x826))))
(assert (x333 x69))
(assert (= (x543 (x604 2798343961)) 2798343961))
(assert (= (x1561 x546) (ite (= x546 x955) x8 (x580 x546))))
(assert (= (x1073 x575) (ite (= x789 x575) x578 (x1561 x575))))
(assert (x333 x289))
(assert (x333 x902))
(assert (= (or x382 (and x656 (not x1577))) x217))
(assert (= (x772 x1490) (ite (= x1490 x20) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x161 x1490))))
(assert (= (x1345 160) 0))
(assert (x333 x124))
(assert (x333 x1582))
(assert (x1501 x676))
(assert (x333 x962))
(assert (=> (> (+ 10000 1) x1439) (= (x604 x1439) (x1138 x1439))))
(assert (x232 x714))
(assert (x232 x826))
(assert (= (ite (= x684 x546) x143 (x1291 x546)) (x1119 x546)))
(assert (x333 x746))
(assert (= (x751 x169) (ite (= x169 x598) x562 (x971 x169))))
(assert (= (ite (= x575 x1484) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x575)) (x824 x575)))
(assert (= (x543 (x1138 x1591)) x1591))
(assert (=> (< (- x420 1) 10000) (= (x604 x420) (x1138 x420))))
(assert (= x607 (x543 (x1138 x607))))
(assert (x333 x797))
(assert (= x1281 (=> (and (= x600 (x355 (x1138 x69) (x604 6) 0)) (< 0 x750) (not (< x444 1968616202)) (<= x265 1461501637330902918203684832716283019655932542975) (= (x355 (x1138 x265) x600 0) x835) (not (< x444 911411945)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1508) (not (= 1968616202 x444)) (< x444 2293535753) (= (x1322 x835) x1508) (>= x1508 0) (= x1005 x1508) (not (= 2211524764 x444)) (not (= 1986467848 x444)) (not (= 2061678023 x444)) (= x750 (x263 (x1138 274184521717934524641157099916833587206))) (= 2258409472 x444)) (=> (and (= x739 x372) (= x363 x984) (= x1005 x422) (= x1455 0) x359 (= (not (= x422 0)) x359)) x843))))
(assert (x232 x306))
(assert (x1501 x135))
(assert (= x273 (x543 (x1138 x273))))
(assert (x333 x1497))
(assert (x333 x256))
(assert (x333 x33))
(assert (x333 x1373))
(assert (= (x543 (x1138 x1366)) x1366))
(assert (= x247 (=> (and (or (and (= 1 x903) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x1156) (>= x1398 0) (= (x355 (x1138 x850) x1516 0) x740) (= x1398 (x770 x1075)) (not x504) (= x163 x1398) (= x1075 (x355 (x1138 x1156) x740 0)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x850) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1398) (= x1516 (x355 (x1138 x895) (x604 9) 0))) (and (= 0 x903) (= 0 x163) x504)) (= (= 0 x895) x504)) x85)))
(assert (x232 x1591))
(assert (x333 x1175))
(assert (x333 x708))
(assert (x232 x107))
(assert (x333 x407))
(assert (x333 x204))
(assert (=> (< (- x754 1) 10000) (= (x604 x754) (x1138 x754))))
(assert (x232 x246))
(assert (x333 x157))
(assert (x333 x995))
(assert (x333 x1140))
(assert (x333 x1042))
(assert (x232 x1056))
(assert (x232 x61))
(assert (=> (< (- x1528 1) 10000) (= (x1138 x1528) (x604 x1528))))
(assert (x333 x128))
(assert (= (ite (= x836 x1221) x631 (x353 x836)) (x569 x836)))
(assert (=> (> (+ 10000 1) x675) (= (x1138 x675) (x604 x675))))
(assert (= x390 x792))
(assert (=> (< (- x61 1) 10000) (= (x604 x61) (x1138 x61))))
(assert (x1418 x1120 x1144))
(assert (= x679 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x157) (= x1554 (x355 (x1138 x717) x1317 0)) (<= 0 x75) (= x75 (x1322 x1554)) (not (> x1522 x157)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x717) (= (= x75 0) x959) (>= x157 0) (= x1317 (x355 (x1138 x1036) (x604 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x75)) (and (=> (and (not x959) (= 0 x164) (= x511 x934) (= (x853 1461501637330902918203684832716283019655932542975 x465) x93) (<= 0 x511) (= (x355 (x1138 x1036) (x604 10) 0) x87) (= (x355 (x1138 x93) x87 0) x863) (= x511 (x583 x863)) (<= x511 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x437) (=> x959 x349)))))
(assert (x232 x883))
(assert (x333 x321))
(assert (= (ite (= x894 x175) x451 (x772 x894)) (x807 x894)))
(assert (=> (< (- x201 1) 10000) (= (x604 x201) (x1138 x201))))
(assert (= (x1073 x546) (ite (= x789 x546) x578 (x1561 x546))))
(assert (x232 x211))
(assert (=> (> (+ 10000 1) x1122) (= (x604 x1122) (x1138 x1122))))
(assert (= (x543 (x604 18446744073709551615)) 18446744073709551615))
(assert (x333 x733))
(assert (x333 x1280))
(assert (x333 x1537))
(assert (= (x997 x836) (ite (and x417 x467 (not x95) x1099 x1520 x1046) (x147 x836) (ite (and (not x1099) x467 x417 x1046 x1520) (x1456 x836) (ite (and (not x1520) x467 x1046 x417) (x807 x836) (ite (and x467 (not x1046) x417) (x772 x836) (x1356 x836)))))))
(assert (x333 x1212))
(assert (=> (< (- x493 1) 10000) (= (x1138 x493) (x604 x493))))
(assert (x232 x974))
(assert (=> (< (- x363 1) 10000) (= (x604 x363) (x1138 x363))))
(assert (=> (< (- x632 1) 10000) (= (x604 x632) (x1138 x632))))
(assert (x232 x808))
(assert (= (x147 x836) (ite (= x836 x820) x968 (x1456 x836))))
(assert (=> (< (- x159 1) 10000) (= (x604 x159) (x1138 x159))))
(assert (= (x233 x836) (ite (and x1093 x947 x118 x1077 (not x923) x704) (x1119 x836) (ite (and x947 (not x1093) x704 x118 x1077) (x1291 x836) (ite (and x947 (not x1077) x704 x118) (x1041 x836) (ite (and (not x704) x118 x947) (x824 x836) (x327 x836)))))))
(assert (= x181 (x543 (x1138 x181))))
(assert (= (x1345 x297) 0))
(assert (= (x543 (x1138 x1319)) x1319))
(assert (x333 x433))
(assert (x333 x925))
(assert (x333 x1082))
(assert (x333 x459))
(assert (x333 x552))
(assert (= (ite (and x1262 x1434) (x1271 x169) (x46 x169)) (x523 x169)))
(assert (x333 x1575))
(assert (= (x558 x1040) (ite (and x572 x905) (x569 x1040) (x258 x1040))))
(assert (x232 x191))
(assert (= (=> (= x1236 (= 274184521717934524641157099916833587214 x223)) (and (=> (and (< 0 x323) (= x1094 x1148) (= x377 (+ x992 x1148)) (<= x292 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x773 x1582) (<= 0 x292) (= (x263 (x1138 274184521717934524641157099916833587214)) x323) (= x1326 x1324) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1094 x292)) x856) (not x299) (= x285 274184521717934524641157099916833587206) (not (= x1241 826074471)) (= x330 x1326) (= x568 32) (= x854 (x355 (x1138 274184521717934524641157099916833587206) (x604 1) 0)) (= x1079 (x548 (- x773 4))) (= 68 x773) (not x856) (<= x1568 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1241 1889567281)) (= x1187 76450787359836037641860180984291677749980919077056822294353438043884394381312) x1236 (= x1454 1) (= x1241 2835717307) (= x292 (x1103 x62)) (= (x355 (x1138 274184521717934524641157099916833587206) (x604 1) 0) x859) (= (< x1568 x1385) x1330) (= x1428 x1385) (not x1238) (= (< x1568 x1094) x299) (= x1238 (or (> x1079 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1079 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1079)))) (not (= 2514000705 x1241)) (= x528 274184521717934524641157099916833587206) (= x62 (x355 (x1138 x1326) (x604 1) 0)) (not x1330) (not (> 4 x773)) (< (+ x1094 x292) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1094 x1385) (= (x240 x854) x1568) (not (> 649617121 x1241)) (<= 0 x1568) (= x1071 (x548 (- x1568 x1385))) (= x992 x292) (not (= 649617121 x1241)) (<= x1326 1461501637330902918203684832716283019655932542975) (= x979 x990) (= (x355 (x1138 x1326) (x604 1) 0) x1553)) x765) (=> (not x1236) x749))) x388))
(assert (= (x543 (x1138 x1373)) x1373))
(assert (x333 x1259))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x543 (x604 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= (x228 x836) (ite (and x1064 (not x1316) x260 (not x1273)) (x78 x836) (ite (and (not x1064) (not x1316) x260) (x751 x836) (ite (and x1316 x260) (x751 x836) (x711 x836))))))
(assert (x232 x506))
(assert (x333 x965))
(assert (=> (< (- x1175 1) 10000) (= (x604 x1175) (x1138 x1175))))
(assert (x333 x783))
(assert (= (ite (= x1519 x789) x578 (x1561 x1519)) (x1073 x1519)))
(assert (=> (< (- x554 1) 10000) (= (x1138 x554) (x604 x554))))
(assert (x232 x619))
(assert (= (x78 x789) (ite (= x789 x456) x1245 (x751 x789))))
(assert (x333 x136))
(assert (=> (< (- x1415 1) 10000) (= (x604 x1415) (x1138 x1415))))
(assert (x333 x934))
(assert (= (and x318 x599) x1432))
(assert (= (x543 (x1138 x954)) x954))
(assert (x333 x834))
(assert (= (x233 x546) (ite (and (not x923) x704 x947 x1093 x118 x1077) (x1119 x546) (ite (and x118 x1077 x704 (not x1093) x947) (x1291 x546) (ite (and x118 x947 (not x1077) x704) (x1041 x546) (ite (and x947 x118 (not x704)) (x824 x546) (x327 x546)))))))
(assert (x333 x1603))
(assert (x333 x725))
(assert (x333 x775))
(assert (= x1589 (x543 (x1138 x1589))))
(assert (= x1415 (x543 (x1138 x1415))))
(assert (=> (> (+ 10000 1) x721) (= (x604 x721) (x1138 x721))))
(assert (x333 x1056))
(assert (= (ite (and (not x1316) x260 (not x1273) x1064) (x78 x625) (ite (and x260 (not x1064) (not x1316)) (x751 x625) (ite (and x260 x1316) (x751 x625) (x711 x625)))) (x228 x625)))
(assert (x333 x1400))
(assert (= (x543 (x1138 x35)) x35))
(assert (x333 x732))
(assert (x333 x811))
(assert (x333 x265))
(assert (= (x1456 x894) (ite (= x759 x894) x305 (x807 x894))))
(assert (x333 x836))
(assert (x333 x721))
(assert (= (=> (and (= (x355 (x1138 x1036) (x604 6) 0) x951) (>= x458 0) (= x370 (x490 (+ x180 64))) (or (and (= x357 (x355 (x1138 x1036) (x604 6) 0)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x1166) x1472 (= x987 (x355 (x1138 x1166) x357 0))) (and (= x1161 (x355 (x1138 x1069) x1230 0)) (<= x99 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x695 (+ x272 x439)) (= x1571 x116) (>= x99 0) (= (x355 (x1138 x1366) x183 0) x342) (= x183 (x355 (x1138 x1036) (x604 6) 0)) (< (* x934 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x99 x116)) (= x1230 (x355 (x1138 x1036) (x604 5) 0)) (not x1472) (= x99 x439) (= x1366 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x99 (x752 x1161)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x1069) (= x272 x116) (= (* x1525 x934) x1571))) (= x471 (x355 (x1138 x181) x166 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1247) (= (x355 (x1138 x414) x951 0) x1407) (= (= x1082 0) x1316) (<= x562 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x166 (x355 (x1138 x1036) (x604 5) 0)) (or (and (= x244 1) (= x1259 (- (/ x1545 x1247) (uninterp_frac x1545 x1247))) (= (< 0 x631) x1064) (= x239 0) (< 0 x1247) (not x1316) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x1082) 1 0) x1085) (= (uninterp_mod (* x1082 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1545) (or (not x1064) (and (= x1245 (+ x964 x206)) (= (+ x1416 x1068) x725) (= x1068 x1082) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x121) (>= 1461501637330902918203684832716283019655932542975 x1214) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x769) x1064 (= (x712 x768) x121) (> x350 0) (< (* x124 x1259) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x131 (x355 (x1138 x1370) x1218 0)) (= (> x631 1) x1273) (<= x124 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x525 (x853 1461501637330902918203684832716283019655932542975 x465)) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x514) (<= 0 x124) (= 0 x769) (= x298 (x751 x456)) (= x94 (x355 (x1138 x392) x626 0)) (<= 0 x121) (= (x1246 x1414) x1344) (= (x355 (x1138 x1349) x507 0) x379) (= (x490 (+ 160 x204)) x456) (= x268 (x355 (x1138 x514) x131 0)) (= (x355 (x1138 x1122) x379 0) x1237) (< (+ x298 x1042) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x257 (x355 (x1138 x1036) (x604 11) 0)) (or (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x747 x1259)) (= x142 (x355 (x1138 x538) x319 0)) (>= x128 0) (= (x853 1461501637330902918203684832716283019655932542975 x465) x910) (= (x490 (+ x204 192)) x1389) (= x23 (x490 (+ 64 x1302))) (= (x355 (x1138 x1036) (x604 4) 0) x221) (= (x1339 x731) x747) (= (x867 x142) x1018) (<= x538 1461501637330902918203684832716283019655932542975) (= (x355 (x1138 x81) x214 0) x319) (= 0 x128) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x747) (= (x355 (x1138 x574) x221 0) x818) (= x980 (x355 (x1138 x1603) x818 0)) (= x1018 x742) (= x214 (x355 (x1138 x721) x757 0)) (= x130 (x355 (x1138 x1036) (x604 11) 0)) (= x574 (x853 1461501637330902918203684832716283019655932542975 x465)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x128) (= x510 (x355 (x1138 x910) x130 0)) (= x1135 (* x1259 x747)) (<= x493 1461501637330902918203684832716283019655932542975) (= x1607 x1082) (= (x355 (x1138 x1067) x510 0) x731) (= x241 (x78 x1389)) (= x1067 (x1246 x23)) (> x631 1) (= x81 (x853 1461501637330902918203684832716283019655932542975 x1120)) (< (+ x241 x1580) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x555 x500) x259) (= (x355 (x1138 x493) x980 0) x591) (= (x1246 x23) x493) (>= x1018 0) (= (+ x742 x1607) x1028) (= (x1246 x23) x538) (= x721 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x757 (x355 (x1138 x1036) (x604 4) 0)) (= x1203 (< 2 x631)) (>= x747 0) (= (x867 x591) x128) (> x681 1) (<= x1018 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x555 x241) (= x681 (x78 x1221)) (= x1580 x500) (< 1 x631) (<= x1067 1461501637330902918203684832716283019655932542975) (= x1580 (- (/ x1135 1000000000000000000) (uninterp_frac x1135 1000000000000000000))) x1273 (not x1203) (= x1603 (x853 1461501637330902918203684832716283019655932542975 x1120)) (> x631 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1082 x1018))) (not x1273)) (= (* x124 x1259) x677) (= (x355 (x1138 x1344) x1237 0) x768) (= (x355 (x1138 x1036) (x604 4) 0) x507) (= (- (/ x677 1000000000000000000) (uninterp_frac x677 1000000000000000000)) x1042) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1082 x121)) (= x55 x1414) (> x631 0) (= x1122 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (x1246 x1414) x392) (> x631 0) (= (x712 x1336) x769) (= (x1339 x94) x124) (= x1042 x964) (= x1218 (x355 (x1138 x1036) (x604 4) 0)) (= x1370 (x853 1461501637330902918203684832716283019655932542975 x465)) (= (x1246 x1414) x1214) (= x1336 (x355 (x1138 x1214) x268 0)) (= x1416 x121) (>= x769 0) (<= x392 1461501637330902918203684832716283019655932542975) (< 0 x631) (= x350 (x751 x1221)) (= x626 (x355 (x1138 x525) x257 0)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x1349) (= x298 x206) (<= x1344 1461501637330902918203684832716283019655932542975))) (= (x853 x244 x1085) x239)) x1316) (= x414 (x853 1461501637330902918203684832716283019655932542975 x465)) (<= x1082 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1555 (x355 (x1138 x1036) (x604 3) 0)) (= x1082 (x1397 x1089)) (>= x1247 0) (= (x355 (x1138 x675) x1555 0) x822) (= x458 (x943 x833)) (= x929 (x1322 x1407)) (= (x355 (x1138 x1360) x822 0) x1089) (= (x355 (x1138 x1036) (x604 1) 0) x833) (= x1583 (x751 x598)) (or (and (or (and (not x1459) (= x1458 x1232)) (and (= x1440 x1458) x1459 (= x1440 (x751 x598)))) (= (x751 x598) x537) x1422 (or (and (= 604800 x597) (not (< x1458 x929)) (= (x548 (- x1458 x929)) x165) (= x234 (ite (> 604800 x165) x165 604800)) (= x1525 x234) (not x815)) (and (not (> x1374 x1458)) x815 (= x888 (x548 (- x1458 x1374))) (= (x751 x180) x1374) (= x888 x1525))) (= x815 (= 0 x929)) (= (< x537 x1232) x1459)) (and (= x1525 0) (not x1422))) (= x630 (= x164 0)) (>= x929 0) (= (x515 x252) x562) (= x1422 (> x1583 x929)) (= x181 (x853 1461501637330902918203684832716283019655932542975 x465)) (<= 0 x1082) (= x1247 (x774 x471)) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x1360) (= (x1061 x833 1) x252) (= x598 (x490 (+ x180 32))) (<= x458 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x929) (= (= x1525 0) x1472) (= x675 (x853 1461501637330902918203684832716283019655932542975 x465)) (>= x562 0) (or (and (not x630) (= x197 (x355 (x1138 x115) x509 0)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x115) (= (x355 (x1138 x1036) (x604 10) 0) x509)) x630)) x613) x437))
(assert (x333 x819))
(assert (x232 x1122))
(assert (=> (> (+ 10000 1) x963) (= (x604 x963) (x1138 x963))))
(assert (=> (> (+ 10000 1) x397) (= (x1138 x397) (x604 x397))))
(assert (x333 x1058))
(assert (= (x543 (x1138 x431)) x431))
(assert (x333 x761))
(assert (x333 x477))
(assert (= x1274 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x231) (= x1476 (x853 1461501637330902918203684832716283019655932542975 x465)) (= (x355 (x1138 x981) (x604 6) 0) x1253) (= x1015 (x355 (x1138 x1476) x1253 0)) (= x231 (x1391 x1015)) (= x539 (= 0 x231)) (>= x231 0)) (and (=> (and (= x472 x981) (not x539)) x41) (=> x539 x635)))))
(assert (x333 x245))
(assert (x333 x705))
(assert (= (x543 (x604 635128645)) 635128645))
(assert (= (x543 (x1138 x794)) x794))
(assert (= (x569 x789) (ite (= x789 x1221) x631 (x353 x789))))
(assert (= (x543 (x1138 x363)) x363))
(assert (= 2960351575 (x543 (x604 2960351575))))
(assert (x333 x1091))
(assert (=> (> (+ 10000 1) x723) (= (x604 x723) (x1138 x723))))
(assert (x333 x990))
(assert (= (x751 x598) x562))
(assert (= (x1468 x324) (ite (and x1464 x1195) (x1321 x324) (ite (and (not x1195) x1464 x366) (x1003 x324) (x701 x324)))))
(assert (=> (< (- x1326 1) 10000) (= (x1138 x1326) (x604 x1326))))
(assert (= (ite (and x905 x572) (x569 x274) (x258 x274)) (x558 x274)))
(assert (= (ite (= x1192 x169) x1158 (x824 x169)) (x1041 x169)))
(assert (=> (> (+ 10000 1) x447) (= (x1138 x447) (x604 x447))))
(assert (=> (> (+ 10000 1) x1476) (= (x1138 x1476) (x604 x1476))))
(assert (x333 x1028))
(assert (x333 x117))
(assert (x333 x953))
(assert (= x734 (x543 (x1138 x734))))
(assert (= (ite (= x1233 x1221) x631 (x353 x1233)) (x569 x1233)))
(assert (x232 x794))
(assert (x232 x999))
(assert (x232 x1248))
(assert (x333 x1057))
(assert (x333 x1609))
(assert (x333 x762))
(assert (x333 x684))
(assert (= (x1345 224) 0))
(assert (x333 x1054))
(assert (x333 x1425))
(assert (x333 x436))
(assert (=> (< (- x1056 1) 10000) (= (x1138 x1056) (x604 x1056))))
(assert (x333 x1163))
(assert (x333 x1366))
(assert (x232 x223))
(assert (x333 x1579))
(assert (x333 x140))
(assert (= (ite (= x684 x1201) x143 (x1291 x1201)) (x1119 x1201)))
(assert (x333 x1107))
(assert (=> (< (- x865 1) 10000) (= (x1138 x865) (x604 x865))))
(assert (x333 x1390))
(assert (x333 x722))
(assert (=> (< (- x492 1) 10000) (= (x604 x492) (x1138 x492))))
(assert (x232 x82))
(assert (x1501 x189))
(assert (x232 x525))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x157) (= x1244 (x994 x203)) (>= x157 0) (= (x355 (x1138 x1036) (x604 7) 0) x27) (>= x1244 0) (not (< x157 x1522)) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x1594) (<= x1244 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x813 (x355 (x1138 x1572) x27 0)) (= (> x1244 0) x1510) (= (x853 1461501637330902918203684832716283019655932542975 x465) x1572) (= x203 (x355 (x1138 x1594) x813 0))) (and (=> (not x1510) x1462) (=> (and (= x312 x1314) (= x763 (x355 (x1138 x1036) (x604 9) 0)) (= (x355 (x1138 x1083) x251 0) x1479) x1510 (= (x355 (x1138 x621) x763 0) x251) (= x312 (x1482 x1479)) (<= 0 x312) (<= x312 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x520) (= x1083 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= x621 (x853 1461501637330902918203684832716283019655932542975 x465))) x322))) x1231))
(assert (x333 x67))
(assert (= (ite (= x297 x1221) x631 (x353 x297)) (x569 x297)))
(assert (= (+ (x543 x833) 1) (x543 (x1061 x833 1))))
(assert (= (ite (= x625 x456) x1245 (x751 x625)) (x78 x625)))
(assert (x333 x1513))
(assert (x232 x464))
(assert (= (and x1483 (not x1002)) x237))
(assert (= (ite (= x1221 x1192) x1158 (x824 x1221)) (x1041 x1221)))
(assert (x333 x1043))
(assert (= (x543 (x1138 x1349)) x1349))
(assert (x333 x710))
(assert (x333 x657))
(assert (x333 x984))
(assert (x333 x1539))
(assert (x333 x562))
(assert (= x340 (x543 (x1138 x340))))
(assert (=> (> (+ 10000 1) x1036) (= (x1138 x1036) (x604 x1036))))
(assert (x333 x179))
(assert (=> (> (+ 10000 1) x460) (= (x1138 x460) (x604 x460))))
(assert (x232 x910))
(assert (x333 x1152))
(assert (= x417 x213))
(assert (= (and x1363 x539) x939))
(assert (x333 x1036))
(assert (x333 x1351))
(assert (x333 x568))
(assert (x232 x332))
(assert (x333 x695))
(assert (= x905 x904))
(assert (= (=> (and (= x1502 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x587) (= (x355 (x1138 x1439) (x604 7) 0) x335) (>= x343 0) (= (= 0 x343) x149) (= (x355 (x1138 x587) x335 0) x373) (<= x343 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x343 (x994 x767)) (= x767 (x355 (x1138 x1502) x373 0))) (and (=> (and (not x149) (= x80 x1439)) x1595) (=> (and (= (x548 (- x1439 1)) x1224) (not x866) x149 (= (> x1224 0) x866)) x1379))) x236))
(assert (= (x543 (x1138 x1344)) x1344))
(assert (x333 x1284))
(assert (x333 x1536))
(assert (x333 x432))
(assert (x333 x90))
(assert (x232 x550))
(assert (x333 x1471))
(assert (= (=> (and (= (x355 (x1138 x340) x610 0) x480) (= x852 (= 0 x502)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x340) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x502) (= (x1322 x480) x502) (<= 0 x502) (= x610 (x355 (x1138 x1600) (x604 6) 0))) (and (=> (and (= x105 (x548 (- x1600 1))) (not x779) (= x779 (> x105 0)) x852) x481) (=> (and (not x852) (= x1350 x1600)) x1585))) x788))
(assert (=> (< (- x619 1) 10000) (= (x1138 x619) (x604 x619))))
(assert (x1209 x189 x1372))
(assert (= (x543 (x1138 x1177)) x1177))
(assert (= (x543 (x1138 x1091)) x1091))
(assert (= (ite (= x456 x156) x1245 (x751 x156)) (x78 x156)))
(assert (x333 x1078))
(assert (= (=> (and (= x400 (= 0 x163)) (= (= 0 x903) x354) (or (and (not x354) (= x713 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x657 (x853 1461501637330902918203684832716283019655932542975 x1120))) x354) (or (and (= x311 (x355 (x1138 x981) (x604 7) 0)) (= (x355 (x1138 x806) x1584 0) x145) (= (x355 (x1138 x722) x311 0) x1584) (= x806 (x853 1461501637330902918203684832716283019655932542975 x1120)) x400 (= x1034 x370) (= x722 (x853 1461501637330902918203684832716283019655932542975 x465))) (and (<= 0 x918) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x918) (<= x659 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x306 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x659 (x943 x1560)) (<= 0 x659) (= x918 (x515 x958)) (= (x355 (x1138 x981) (x604 1) 0) x1560) (= (x1392 x361) x478) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1022) (= (= 0 x1537) x908) (= x582 (x355 (x1138 x306) x909 0)) (= (x355 (x1138 x981) (x604 7) 0) x909) (= x816 (< x1022 x478)) (= x906 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (x355 (x1138 x906) x582 0) x946) (= (x490 (+ x180 128)) x374) (not x400) (= x958 (x1061 x1560 1)) (= x361 (x490 (+ x180 96))) (>= x1022 0) (= (x1468 x946) x1022) (or (and (< (* x163 x1537) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x158 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (+ x1049 x1451) x688) (= x446 x1049) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x723) (= (x1397 x745) x564) (= (x355 (x1138 x158) x1550 0) x745) (<= x564 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x374 x1034) (< (+ x446 x564) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x1537 x163) x317) (= x86 (x355 (x1138 x981) (x604 7) 0)) (= x1109 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x1550 (x355 (x1138 x1396) x302 0)) (= x1396 (x853 1461501637330902918203684832716283019655932542975 x465)) (not x908) (<= 0 x564) (= (x355 (x1138 x723) x1020 0) x1505) (= x317 x446) (= x1451 x564) (= (x355 (x1138 x1109) x86 0) x1020) (= (x355 (x1138 x981) (x604 3) 0) x302)) (and (= x443 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x1499) (= x1034 x374) (= (x355 (x1138 x1499) x1369 0) x1290) (= x1189 (x355 (x1138 x443) x1290 0)) (= (x355 (x1138 x981) (x604 7) 0) x1369) x908)) (or (and x816 (or (and x1240 (= x255 (x1392 x361)) (= x3 x255)) (and (= x1232 x3) (not x1240))) (or (and (not x914) (not (< x3 x1022)) (= x1309 (ite (< x1395 604800) x1395 604800)) (= x1395 (x548 (- x3 x1022))) (= x680 604800) (= x1309 x1537)) (and x914 (= x1057 (x1392 x370)) (= x146 (x548 (- x3 x1057))) (not (> x1057 x3)) (= x1537 x146))) (= x1511 (x1392 x361)) (= (< x1511 x1232) x1240) (= x914 (= 0 x1022))) (and (= 0 x1537) (not x816)))))) x609) x85))
(assert (= x921 x581))
(assert (x333 x255))
(assert (x333 x139))
(assert (x1501 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (=> (and (<= x949 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x999) (not (= 2061678023 x295)) (= x949 (x887 x1529)) (>= x949 0) (= x949 x1513) (= 2258409472 x295) (= x1529 (x355 (x1138 x999) x608 0)) (not (< x295 911411945)) (not (< x295 1968616202)) (not (= x295 2211524764)) (< x295 2293535753) (= x133 (x263 (x1138 274184521717934524641157099916833587206))) (= x608 (x355 (x1138 x1019) (x604 6) 0)) (not (= x295 1968616202)) (> x133 0) (not (= x295 1986467848))) (=> (and (= x984 x220) (= x739 x107) (= x61 x855) (= x1513 x1228)) x1605)) x177))
(assert (= (x543 (x1061 x1065 1)) (+ 1 (x543 x1065))))
(assert (x232 x1360))
(assert (= (ite (= x1201 x1221) x631 (x353 x1201)) (x569 x1201)))
(assert (x333 x1127))
(assert (x333 x1224))
(assert (= (ite (= x768 x591) x725 (x712 x591)) (x867 x591)))
(assert (x333 x938))
(assert (x232 x584))
(assert (x333 x365))
(assert (= (ite (= x789 x156) x578 (x1561 x156)) (x1073 x156)))
(assert (x232 x9))
(assert (= 2512682246 (x543 (x604 2512682246))))
(assert (x333 x794))
(assert (x333 x690))
(assert (= (x1345 x546) 0))
(assert (= (x1041 x546) (ite (= x1192 x546) x1158 (x824 x546))))
(assert (=> (> (+ 10000 1) x1370) (= (x1138 x1370) (x604 x1370))))
(assert (x232 x891))
(assert (x232 x1225))
(assert (= (x132 x836) (ite (and x281 x870) (x830 x836) (x1342 x836))))
(assert (x232 x1196))
(assert (x333 x387))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x812) (= x307 (x355 (x1138 x783) x1608 0)) (not (= x1287 2418364589)) (<= x289 1461501637330902918203684832716283019655932542975) (= (x355 (x1138 x459) (x604 4) 0) x227) (= x812 x715) (<= x1460 1461501637330902918203684832716283019655932542975) (>= x812 0) (<= x783 1461501637330902918203684832716283019655932542975) (< x1287 2690754053) (= (x355 (x1138 x289) x328 0) x1608) (= 2532887486 x1287) (= (x355 (x1138 x1460) x227 0) x328) (= x812 (x712 x307)) (> x1078 0) (> 2960351575 x1287) (not (= x1287 2512682246)) (not (> 2293535753 x1287)) (not (= 2293535753 x1287)) (= (x263 (x1138 274184521717934524641157099916833587206)) x1078)) (=> (and (= x465 x651) (<= x185 1461501637330902918203684832716283019655932542975) (< x360 2960351575) (= x1232 x222) (= (x490 (+ 160 x1441)) x17) (<= x157 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x875 x1120) (= x1522 x1036) (= x1302 (x490 (+ x43 4))) (not (= 2764855426 x360)) (not (> x879 x902)) (= x1536 (x263 (x1138 274184521717934524641157099916833587206))) (= x700 (x548 (- x902 4))) (not (< x360 2690754053)) (not (< x401 1)) (= (< 0 x556) x799) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x700) true) (> 160 x700)) (> x700 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (uninterp_mod (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x108) (= x634 x931) (or (and (<= x902 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x519 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x902 x519) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x519) (<= x902 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (<= 0 x157) (= (x490 (+ x65 x55)) x879) (= x1507 x287) (not (= 2743102681 x360)) (= x65 (uninterp_mod (* x631 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x902)) (= (= 0 x631) x572) (= x519 (x490 (+ x43 35))) (= 128 x497) (= x129 x672) (>= x699 0) (or x572 (and (= x321 (uninterp_mod (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1346 (x490 (+ 160 x204))) (not x572))) (>= 1461501637330902918203684832716283019655932542975 x287) (= x1153 x1507) (< 163 x902) (= x1351 x699) (<= x1120 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x465) (= (x490 (+ 160 x108)) x1221) (= x1575 x715) (>= x185 0) (not (< x902 4)) (= (x1246 x1302) x631) (not (> x1036 x129)) (= 2939843472 x360) (> x1536 0) (= 0 x931) (= x556 (x548 (- x401 1))) (= x97 x1120) (>= 1461501637330902918203684832716283019655932542975 x699) (not (> 2293535753 x360)) (= x1442 (and x890 x196)) (= x1280 x129) (= (x490 (+ 32 x1441)) x1604) (= x55 (x490 (+ x43 36))) (= x1036 x926) (= x1601 x465) (= x1441 (uninterp_mod (* 32 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (not x799) (and (not (< x401 1)) (= x475 (> x401 1)) (or (and (= (x353 128) x960) (< 1 x1025) (> x960 0) (not (= x633 x524)) (or (and (= (x353 128) x1223) (= (x353 128) x928) (not (= x489 x433)) (= x676 (x353 224)) (= x785 (x353 160)) (< 2 x928) x1164 (= x433 (x853 1461501637330902918203684832716283019655932542975 x676)) (= x489 (x853 1461501637330902918203684832716283019655932542975 x785)) (= (> x401 3) x1) (> x1223 0) (not x1)) (not x1164)) (= x1164 (< 2 x401)) (= x1025 (x353 128)) x475 (= (x353 160) x592) (= (x353 192) x1254) (= x524 (x853 1461501637330902918203684832716283019655932542975 x1254)) (= (x853 1461501637330902918203684832716283019655932542975 x592) x633)) (not x475)) (not (> x1401 1)) (= (x548 (- x401 1)) x1401) x799)) (not (= x360 2868243304)) (not (= 2690754053 x360)) (= (x490 (+ x1604 x1221)) x24) (not (< 18446744073709551615 x661)) (not (> x631 18446744073709551615)) (= x661 x43) x1442 (= x401 (x353 128)) (not (> x129 x157)) (= (x490 (+ 32 x108)) x204) (not (= x360 2798343961)) (= (>= x386 x1575) x196) (<= 0 x287)) x393)) x301))
(assert (x333 x1118))
(assert (= (x841 x836) (ite (and (not x743) x467 x417) (x997 x836) (x77 x836))))
(assert (= (x774 x495) (ite (and x260 x1472) (x752 x495) (x1047 x495))))
(assert (x232 x612))
(assert (x232 x1083))
(assert (x333 x1025))
(assert (x333 x276))
(assert (= x1332 x1331))
(assert (= x1175 (x543 (x1138 x1175))))
(assert (x333 x621))
(assert (= (x604 2743102681) (x1138 2743102681)))
(assert (x333 x1604))
(assert (= (ite (= x953 x1192) x1158 (x824 x953)) (x1041 x953)))
(assert (=> (> (+ 10000 1) x714) (= (x1138 x714) (x604 x714))))
(assert (x232 x574))
(assert (x333 x1223))
(assert (x333 x285))
(assert (= (x558 x456) (ite (and x905 x572) (x569 x456) (x258 x456))))
(assert (x333 x652))
(assert (x232 x1349))
(assert (= (x1138 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x604 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x333 x1177))
(assert (x232 x1066))
(assert (x333 x715))
(assert (x333 x629))
(assert (=> (> (+ 10000 1) x808) (= (x1138 x808) (x604 x808))))
(assert (x232 x101))
(assert (x232 x226))
(assert (= (x807 x508) (ite (= x175 x508) x451 (x772 x508))))
(assert (=> (< (- x1541 1) 10000) (= (x1138 x1541) (x604 x1541))))
(assert (x333 x525))
(assert (=> (< (- x1156 1) 10000) (= (x1138 x1156) (x604 x1156))))
(assert (x232 x1016))
(assert (x333 x36))
(assert (= (ite (and x260 x1472) (x283 x1529) (x670 x1529)) (x1391 x1529)))
(assert (x333 x1440))
(assert (= x1038 x845))
(assert (x333 x478))
(assert (x333 x700))
(assert (= (x1181 x893) (ite (= x893 x803) x1548 (x404 x893))))
(assert (x333 x551))
(assert (=> (> (+ 10000 1) x1067) (= (x604 x1067) (x1138 x1067))))
(assert (= (x543 (x1138 x714)) x714))
(assert (= (ite (= x274 x456) x1245 (x751 x274)) (x78 x274)))
(assert (= (x233 x1519) (ite (and (not x923) x118 x704 x1077 x947 x1093) (x1119 x1519) (ite (and x704 x947 (not x1093) x118 x1077) (x1291 x1519) (ite (and x118 x704 x947 (not x1077)) (x1041 x1519) (ite (and x118 (not x704) x947) (x824 x1519) (x327 x1519)))))))
(assert (= x158 (x543 (x1138 x158))))
(assert (= (=> (and (= (x853 1461501637330902918203684832716283019655932542975 x465) x1526) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1054) (= x924 (x355 (x1138 x1526) x26 0)) (= (x355 (x1138 x1058) (x604 7) 0) x26) (<= 0 x1054) (= (x1468 x16) x1054) (= (x355 (x1138 x1275) x924 0) x16) (= x1275 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (= x1054 0) x1184)) (and (=> (and (= x1497 x1058) (not x1184)) x1272) (=> (and (= x40 (> x1063 0)) x1184 (not x40) (= (x548 (- x1058 1)) x1063)) x864))) x1183))
(assert (=> (< (- x806 1) 10000) (= (x1138 x806) (x604 x806))))
(assert (= (ite (and x118 x947 (not x1433)) (x233 x836) (x1001 x836)) (x134 x836)))
(assert (= (x543 (x604 468353030)) 468353030))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x543 (x604 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x333 x278))
(assert (= (x543 (x1138 x459)) x459))
(assert (x333 x65))
(assert (= x1197 (and x935 x21)))
(assert (=> (> (+ 10000 1) x1366) (= (x604 x1366) (x1138 x1366))))
(assert (x333 x1247))
(assert (x1501 x148))
(assert (= x645 x1013))
(assert (=> (< (- x915 1) 10000) (= (x604 x915) (x1138 x915))))
(assert (= 87118632 (x543 (x604 87118632))))
(assert (x333 x636))
(assert (x333 x891))
(assert (= (x604 635128645) (x1138 635128645)))
(assert (x333 x303))
(assert (= (=> (and (= x940 (= 0 x407)) (or (and (= x164 0) (= 0 x934) x940) (and (or (and (= x164 0) (= x934 0) x1498) (and (not x1498) (= x1481 x934) (= 1 x164))) (= x1263 (x355 (x1138 x407) (x604 10) 0)) (= x1243 (x355 (x1138 x112) x1263 0)) (not x940) (= (= x1481 0) x1498) (>= x1481 0) (= (x583 x1243) x1481) (= (x853 1461501637330902918203684832716283019655932542975 x465) x112) (<= x1481 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) x437) x194))
(assert (= (x1041 x1201) (ite (= x1201 x1192) x1158 (x824 x1201))))
(assert (= (ite (and (not x1273) x1064 x260 (not x1316)) (x78 x169) (ite (and x260 (not x1316) (not x1064)) (x751 x169) (ite (and x1316 x260) (x751 x169) (x711 x169)))) (x228 x169)))
(assert (x232 x1366))
(assert (= (x543 (x1138 x981)) x981))
(assert (x333 x1508))
(assert (x333 x1478))
(assert (= (ite (= x1484 x1021) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x1021)) (x824 x1021)))
(assert (= x826 (x543 (x1138 x826))))
(assert (x333 x1225))
(assert (x1501 x1266))
(assert (not x19))
(assert (x333 x1411))
(assert (= (x78 x957) (ite (= x957 x456) x1245 (x751 x957))))
(assert (= x414 (x543 (x1138 x414))))
(assert (x333 x43))
(assert (= x1196 (x543 (x1138 x1196))))
(assert (x333 x821))
(assert (x333 x223))
(assert (= (x1561 x1034) (ite (= x955 x1034) x8 (x580 x1034))))
(assert (x333 x954))
(assert (x333 x1591))
(assert (x232 x850))
(assert (x333 x1355))
(assert (x333 x7))
(assert (=> (> (+ 10000 1) x848) (= (x1138 x848) (x604 x848))))
(assert (x333 x168))
(assert (x333 x441))
(assert (=> (> (+ 10000 1) x82) (= (x604 x82) (x1138 x82))))
(assert (= (x751 x297) (ite (= x297 x598) x562 (x971 x297))))
(assert (= (x543 (x1138 x865)) x865))
(assert (x333 x968))
(assert (x333 x511))
(assert (= (x1073 x894) (ite (= x789 x894) x578 (x1561 x894))))
(assert (= (x751 x139) (ite (= x139 x598) x562 (x971 x139))))
(assert (x232 x981))
(assert (= (x569 x546) (ite (= x546 x1221) x631 (x353 x546))))
(assert (x333 x444))
(assert (= (ite (and x1464 x1195) (x919 x1261) (ite (and x366 (not x1195) x1464) (x919 x1261) (x1117 x1261))) (x1397 x1261)))
(assert (x333 x913))
(assert (x333 x479))
(assert (x333 x1309))
(assert (x333 x164))
(assert (x333 x1039))
(assert (x232 x1413))
(assert (x232 x113))
(assert (x333 x1453))
(assert (x333 x1540))
(assert (x333 x1386))
(assert (x232 x102))
(assert (=> (> (+ 10000 1) x1600) (= (x604 x1600) (x1138 x1600))))
(assert (x232 x1370))
(assert (x333 x1210))
(assert (x333 x878))
(assert (x333 x963))
(assert (= (x134 x894) (ite (and x118 x947 (not x1433)) (x233 x894) (x1001 x894))))
(assert (= (x1345 x953) 0))
(assert (= (x543 (x1138 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (=> (< (- x717 1) 10000) (= (x1138 x717) (x604 x717))))
(assert (x333 x1450))
(assert (x333 x956))
(assert (= x967 (x543 (x1138 x967))))
(assert (= x1178 (x543 (x1138 x1178))))
(assert (= (x604 115792089237316195423570985008687907853269984665640564039457) (x1138 115792089237316195423570985008687907853269984665640564039457)))
(assert (x333 x553))
(assert (= (x1345 x139) 0))
(assert (= x288 (=> (and (not (= x1612 2061678023)) (>= 1461501637330902918203684832716283019655932542975 x1534) (< 0 x248) (= (x355 (x1138 x550) (x604 6) 0) x264) (not (= x1612 1968616202)) (<= x834 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x834 x179) (= x530 (x355 (x1138 x1534) x264 0)) (not (> 1968616202 x1612)) (= (x1322 x530) x834) (= x248 (x263 (x1138 274184521717934524641157099916833587206))) (> 2293535753 x1612) (not (> 911411945 x1612)) (not (= 1986467848 x1612)) (>= x834 0) (= 2258409472 x1612) (not (= x1612 2211524764))) (=> (and (= x579 x179) (= x739 x1591) (= x984 x963) (= x855 x915)) x171))))
(assert (=> (> (+ 10000 1) x734) (= (x604 x734) (x1138 x734))))
(assert (x1209 x135 x667))
(assert (x333 x1324))
(assert (= x985 (x543 (x1138 x985))))
(assert (= x525 (x543 (x1138 x525))))
(assert (x333 x952))
(assert (= (x604 2868243304) (x1138 2868243304)))
(assert (= (x543 (x1138 x718)) x718))
(assert (= (x604 274184521717934524641157099916833587206) (x1138 274184521717934524641157099916833587206)))
(assert (x333 x1155))
(assert (= x989 (x543 (x1138 x989))))
(assert (x333 x1029))
(assert (x333 x312))
(assert (= (x543 (x1138 x1248)) x1248))
(assert (x333 x361))
(assert (= (x543 (x1138 x1043)) x1043))
(assert (=> (< (- x340 1) 10000) (= (x604 x340) (x1138 x340))))
(assert (=> (> (+ 10000 1) x1225) (= (x604 x1225) (x1138 x1225))))
(assert (x333 x10))
(assert (= (x1138 2418364589) (x604 2418364589)))
(assert (x333 x105))
(assert (=> (> (+ 10000 1) x574) (= (x1138 x574) (x604 x574))))
(assert (x333 x68))
(assert (= x201 (x543 (x1138 x201))))
(assert (= (x1291 x957) (ite (= x551 x957) x1469 (x1041 x957))))
(assert (= (x1138 604800) (x604 604800)))
(assert (= (x1561 x274) (ite (= x955 x274) x8 (x580 x274))))
(assert (x333 x1596))
(assert (x333 x1314))
(assert (= (x1291 x169) (ite (= x169 x551) x1469 (x1041 x169))))
(assert (x232 x675))
(assert (x333 x472))
(assert (x333 x1228))
(assert (= (x1119 x508) (ite (= x508 x684) x143 (x1291 x508))))
(assert (x232 x754))
(assert (= (=> (and (<= x15 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1492 (= x15 0)) (= x15 (x1322 x362)) (= (x355 (x1138 x1036) (x604 6) 0) x692) (= (x853 1461501637330902918203684832716283019655932542975 x465) x1284) (= x362 (x355 (x1138 x1284) x692 0)) (<= 0 x15)) (and (=> x1492 x565) (=> (and (not x1492) (= x1036 x1350)) x1585))) x596))
(assert (= (ite (and x1195 x1464) (x919 x1089) (ite (and (not x1195) x366 x1464) (x919 x1089) (x1117 x1089))) (x1397 x1089)))
(assert (=> (> (+ 10000 1) x1396) (= (x604 x1396) (x1138 x1396))))
(assert (= x226 (x543 (x1138 x226))))
(assert (= (=> (and (<= 0 x1558) (not (= x1008 2418364589)) (> x31 0) (= (x355 (x1138 x967) x687 0) x1517) (= x687 (x355 (x1138 x226) x828 0)) (= (x712 x517) x1558) (= x1558 x797) (> 2960351575 x1008) (<= x226 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1558) (= x31 (x263 (x1138 274184521717934524641157099916833587206))) (= x517 (x355 (x1138 x464) x1517 0)) (not (< x1008 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x967) (= (x355 (x1138 x900) (x604 4) 0) x828) (= 2532887486 x1008) (<= x464 1461501637330902918203684832716283019655932542975) (not (= 2512682246 x1008)) (not (= 2293535753 x1008)) (> 2690754053 x1008)) (=> (and (= x890 (and x271 x160)) (= x428 x739) (= x709 x855) (= x271 (<= x1055 x1308)) (= x1055 x797) (= x984 x1589)) x1026)) x876))
(assert (x333 x883))
(assert (= (x772 x1519) (ite (= x20 x1519) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x161 x1519))))
(assert (= x382 (or x1328 x755)))
(assert (x232 x646))
(assert (x333 x769))
(assert (x232 x81))
(assert (= x621 (x543 (x1138 x621))))
(assert (= (ite (= x894 x684) x143 (x1291 x894)) (x1119 x894)))
(assert (x333 x1187))
(assert (= (x1181 x781) (ite (= x803 x781) x1548 (x404 x781))))
(assert (= (=> (= (< 1 x631) x467) (and (=> (and (or (and (= x451 (x772 x575)) (= x1040 x575) (or (and (not x1520) (= x187 32)) (and (or (and (= x95 (< 96 x399)) (or (and x95 (not x1256) (= x1386 (x490 (+ 160 x261))) (= 128 x187) (= (x490 (+ x1490 128)) x894) (= x1256 (< 128 x399)) (= (x147 x894) x922)) (and (not x95) (= x187 96))) (= x968 (x1456 x1519)) (= x1519 (x490 (+ 96 x1490))) (= x820 (x490 (+ 128 x261))) x1099) (and (= x187 64) (not x1099))) (= x759 (x490 (+ 96 x261))) (= (x807 x169) x305) (= x169 (x490 (+ x1490 64))) (= (> x399 64) x1099) x1520)) (= x175 x1048) (= (> x399 32) x1520) x1046) (and (not x1046) (= x187 0))) (>= 1461501637330902918203684832716283019655932542975 x1465) (= (x490 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x726)) x513) (= (x490 (+ x885 128)) x1048) (= (x548 (- x261 x1490)) x1377) (= (x1353 x546) x1088) (= x1030 (x1353 x1221)) (= x56 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= x885 (x490 (+ 36 x1490))) (= x399 (x772 x1490)) x736 (= (x853 26959946667150639794667015087019630673637144422540572481103610249215 x189) x726) (= (x490 (+ 96 x885)) x20) (= (x570 x1040) x189) (= x546 (x490 (+ x204 192))) (= x1046 (< 0 x399)) (= x351 (x263 (x1138 x1465))) (or (and (= (x490 (+ x399 x1048)) x1538) x743) (not x743)) (> x631 1) (= 0 x1411) (= (x1246 x254) x1465) (= x736 (> x351 0)) (= (x490 (+ x1490 68)) x410) (= (< x399 x187) x743) (= x261 (x490 (+ 100 x1490))) (= (x490 (+ 32 x1490)) x1040) (> x1030 1) (= x254 (x490 (+ 64 x1302))) x467 (= x140 (x548 (- x1377 32)))) x210) (=> (not x467) x567))) x84))
(assert (x232 x1526))
(assert (=> (< (- x1058 1) 10000) (= (x604 x1058) (x1138 x1058))))
(assert (x333 x492))
(assert (x333 x1188))
(assert (= (x1345 x894) 0))
(assert (x333 x730))
(assert (= (ite (= x1040 x598) x562 (x971 x1040)) (x751 x1040)))
(assert (=> (< (- x794 1) 10000) (= (x1138 x794) (x604 x794))))
(assert (= (=> (and (= x1323 x878) (= (x263 (x1138 274184521717934524641157099916833587206)) x703) (= x119 2798343961) (>= 1461501637330902918203684832716283019655932542975 x1081) (<= x1323 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x355 (x1138 x1081) x753 0) x1430) (>= x1323 0) (not (> 2690754053 x119)) (= x1323 (x752 x1430)) (not (= 2743102681 x119)) (< 0 x703) (not (= x119 2690754053)) (= (x355 (x1138 x1175) (x604 5) 0) x753) (> 2960351575 x119) (not (< x119 2293535753)) (not (= x119 2764855426))) (=> (and (= x967 x855) (= x226 x739) (= x464 x1613) (= x1308 x878) (= x900 x984)) x876)) x1449))
(assert (= (x78 x1389) (ite (= x1389 x456) x1245 (x751 x1389))))
(assert (x333 x1027))
(assert (= (x558 x894) (ite (and x905 x572) (x569 x894) (x258 x894))))
(assert (= x1489 (or (and (not x1492) x1197) (and (not x852) x415))))
(assert (x333 x454))
(assert (x333 x576))
(assert (x333 x915))
(assert (x333 x261))
(assert (x333 x372))
(assert (= (ite (= x1040 x1484) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x1040)) (x824 x1040)))
(assert (x333 x394))
(assert (x333 x1071))
(assert (= (=> (= (< 0 x981) x1076) (and (=> x1076 x1098) (=> (not x1076) x864))) x413))
(assert (= (ite (= x1221 x456) x1245 (x751 x1221)) (x78 x1221)))
(assert (= (ite (and x1064 (not x1273) x260 (not x1316)) (x78 x789) (ite (and x260 (not x1064) (not x1316)) (x751 x789) (ite (and x1316 x260) (x751 x789) (x711 x789)))) (x228 x789)))
(assert (= x656 x212))
(assert (= (x228 x297) (ite (and x1064 x260 (not x1316) (not x1273)) (x78 x297) (ite (and (not x1316) x260 (not x1064)) (x751 x297) (ite (and x1316 x260) (x751 x297) (x711 x297))))))
(assert (= (x543 (x1138 x722)) x722))
(assert (= (ite (= x169 x175) x451 (x772 x169)) (x807 x169)))
(assert (= (ite (and (not x1316) (not x1273) x260 x1064) (x867 x781) (ite (and (not x1316) x260 (not x1064)) (x712 x781) (ite (and x1316 x260) (x712 x781) (x602 x781)))) (x404 x781)))
(assert (= (x604 911411945) (x1138 911411945)))
(assert (= x1465 (x543 (x1138 x1465))))
(assert (= (x1073 x508) (ite (= x789 x508) x578 (x1561 x508))))
(assert (= (x543 (x604 2258409472)) 2258409472))
(assert (x333 x634))
(assert (=> (> (+ 10000 1) x352) (= (x604 x352) (x1138 x352))))
(assert (x333 x1500))
(assert (= (and x1432 x1419) x793))
(assert (= (x543 (x1138 x69)) x69))
(assert (= (or (and x1363 (not x539)) (and x403 (not x727))) x755))
(assert (= (x558 x508) (ite (and x572 x905) (x569 x508) (x258 x508))))
(assert (x333 x306))
(assert (x333 x726))
(assert (x333 x514))
(assert (x232 x1439))
(assert (x333 x253))
(assert (x333 x1437))
(assert (=> (> (+ 10000 1) x35) (= (x1138 x35) (x604 x35))))
(assert (x333 x493))
(assert (x333 x465))
(assert (= 274184521717934524641157099916833587206 (x543 (x1138 274184521717934524641157099916833587206))))
(assert (= x801 (x543 (x1138 x801))))
(assert (= (ite (= x789 x139) x578 (x1561 x139)) (x1073 x139)))
(assert (x232 x717))
(assert (= (x1138 69947311) (x604 69947311)))
(assert (x333 x508))
(assert (= x690 (x543 (x1138 x690))))
(assert (= (x543 (x1138 x1603)) x1603))
(assert (x333 x931))
(assert (= x220 (x543 (x1138 x220))))
(assert (x333 x680))
(assert (= x213 (or (and x1434 x1262) (and x1236 x423))))
(assert (x333 x796))
(assert (x333 x1034))
(assert (x333 x239))
(assert (=> (< (- x1083 1) 10000) (= (x604 x1083) (x1138 x1083))))
(assert (x232 x906))
(assert (=> (> (+ 10000 1) x1502) (= (x604 x1502) (x1138 x1502))))
(assert (= x1166 (x543 (x1138 x1166))))
(assert (x232 274184521717934524641157099916833587218))
(assert (= (x543 (x1138 x1083)) x1083))
(assert (=> (< (- x1081 1) 10000) (= (x604 x1081) (x1138 x1081))))
(assert (= x199 (or (and (not x149) x881) (and (not x1419) x1432))))
(assert (= (x1073 x957) (ite (= x957 x789) x578 (x1561 x957))))
(assert (x333 x325))
(assert (= (x774 x471) (ite (and x260 x1472) (x752 x471) (x1047 x471))))
(assert (= (x543 (x1138 x1019)) x1019))
(assert (x232 x1600))
(assert (x232 x1275))
(assert (= 274184521717934524641157099916833587206 (x543 (x604 274184521717934524641157099916833587206))))
(assert (x333 x750))
(assert (x333 x974))
(assert (x333 x241))
(assert (x333 x897))
(assert (= (and x1493 x927) x415))
(assert (x333 x1337))
(assert (= (x543 (x1138 x115)) x115))
(assert (= (ite (= x546 x1484) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x546)) (x824 x546)))
(assert (x333 x1350))
(assert (x333 x226))
(assert (= (ite (and x260 x1472) (x283 x205) (x670 x205)) (x1391 x205)))
(assert (= (x543 (x604 2868243304)) 2868243304))
(assert (= x1464 (or x1186 (and x1510 x225))))
(assert (x333 x579))
(assert (=> (> (+ 10000 1) x407) (= (x1138 x407) (x604 x407))))
(assert (= 604800 (x543 (x604 604800))))
(assert (= (x543 (x604 2514000705)) 2514000705))
(assert (=> (< (- x1360 1) 10000) (= (x604 x1360) (x1138 x1360))))
(assert (x333 x967))
(assert (x333 x1287))
(assert (= (=> (and (= (x884 (x1138 x223)) x192) x972 (= (= 274184521717934524641157099916833587218 x223) x1434) (= x184 x1582) (= (< (x1074 (x1138 x223)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1162) x889 (= x889 (< x192 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x394 (x1074 (x1138 x223))) (= x1438 (x884 (x1138 274184521717934524641157099916833587206))) (= (x884 (x1138 274184521717934524641157099916833587206)) x64) x1162 (= x972 (<= 0 x1438))) (and (=> (not x1434) x388) (=> (and (= (x729 x1154) x1159) (not x1060) (= x930 (+ x696 x463)) (>= x1217 0) (not (= 649617121 x746)) (= x479 x1173) (= x568 32) (= 274184521717934524641157099916833587206 x649) (= x1159 x463) (= x1072 68) (not (= 2514000705 x746)) (= (x548 (- x1217 x479)) x896) (= x1126 (> x1173 x1217)) (= (> x479 x1217) x1060) (= (x355 (x1138 274184521717934524641157099916833587206) (x604 1) 0) x310) (= x937 274184521717934524641157099916833587206) (not (= x746 1889567281)) (not x557) (= x1072 x1582) (>= x1159 0) (not x229) (= (x355 (x1138 x865) (x604 1) 0) x455) (not (> 4 x1072)) (= x842 (x548 (- x1072 4))) (= x229 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1173 x1159))) (= x479 x1428) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1217) x1434 (= x708 x36) (<= x1159 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x970 (x263 (x1138 274184521717934524641157099916833587218))) (= 1 x1454) (not x1126) (= x1154 (x355 (x1138 x865) (x604 1) 0)) (= x746 2835717307) (= x1173 x696) (= x865 x330) (not (> 649617121 x746)) (not (= x746 826074471)) (= x1382 (x355 (x1138 274184521717934524641157099916833587206) (x604 1) 0)) (= (or (> x842 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x842 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x842) true))) x557) (= x1217 (x1318 x1382)) (= x865 x516) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1159 x1173)) (>= 1461501637330902918203684832716283019655932542975 x865) (> x970 0) (= x1598 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x765))) x1102))
(assert (x333 x585))
(assert (x333 x1455))
(assert (= (ite (and x905 x572) (x569 x836) (x258 x836)) (x558 x836)))
(assert (=> (> (+ 10000 1) x1248) (= (x1138 x1248) (x604 x1248))))
(assert (=> (< (- x265 1) 10000) (= (x1138 x265) (x604 x265))))
(assert (x333 x1232))
(assert (x333 x1267))
(assert (x232 x1036))
(assert (= (ite (and x1195 x1464) (x919 x745) (ite (and x366 (not x1195) x1464) (x919 x745) (x1117 x745))) (x1397 x745)))
(assert (= x1595 (=> (= x159 x80) x916)))
(assert (= (ite (and x1064 x260 (not x1273) (not x1316)) (x78 x1040) (ite (and x260 (not x1316) (not x1064)) (x751 x1040) (ite (and x260 x1316) (x751 x1040) (x711 x1040)))) (x228 x1040)))
(assert (= x697 (or x1142 x1106)))
(assert (= (x867 x1125) (ite (= x1125 x768) x725 (x712 x1125))))
(assert (= (x543 (x604 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= x961 (and x886 x202)))
(assert (= (=> (and (= x796 (x548 (- x981 1))) (= x1277 (> x796 0))) (and (=> (not x1277) x1404) (=> x1277 x315))) x635))
(assert (x232 x1541))
(assert (= (x523 x575) (ite (and x1434 x1262) (x1271 x575) (x46 x575))))
(assert (x232 x414))
(assert (x333 x295))
(assert (= (x558 x625) (ite (and x905 x572) (x569 x625) (x258 x625))))
(assert (= (x1391 x1354) (ite (and x260 x1472) (x283 x1354) (x670 x1354))))
(assert (= x944 (=> (= (> x631 0) x947) (and (=> (not x947) x567) (=> (and (= x156 (x490 (+ 160 x204))) (= x1484 (x490 (+ x761 96))) (= x1433 (< x184 x1155)) (= 0 x805) (= x303 (x490 (+ x1021 68))) (= x761 (x490 (+ 36 x1021))) (= (x548 (- x1226 x1021)) x705) (= x658 (x490 (+ 128 x761))) (= (x1235 x297) x135) (= x704 (< 0 x184)) (= (x824 x1021) x184) (or (not x1433) (and (= x1134 (x490 (+ x658 x184))) x1433)) (= x1461 (x263 (x1138 x223))) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x330) (= x436 (x1593 x1221)) (= x1428 (x1593 x156)) (= x1268 (x490 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x49))) (> x631 0) (<= x223 1461501637330902918203684832716283019655932542975) (= (x490 (+ x1021 100)) x1226) (= x1557 (x548 (- x705 32))) (= (x1246 x66) x223) (= (x490 (+ x1021 32)) x297) (= x49 (x853 26959946667150639794667015087019630673637144422540572481103610249215 x135)) (= x55 x66) x947 (< 0 x436) (or (and (= x658 x1192) (= x1158 (x824 x1233)) (or (and (= x1155 32) (not x1077)) (and (or (and (= 64 x1155) (not x1093)) (and (= (< 96 x184) x923) (= (x1291 x957) x143) x1093 (= x957 (x490 (+ x1021 96))) (= (x490 (+ x1226 128)) x684) (or (and (not x923) (= x1155 96)) (and (= x1201 (x490 (+ 128 x1021))) (= x34 (> x184 128)) x923 (= x245 (x1119 x1201)) (= (x490 (+ 160 x1226)) x847) (not x34) (= x1155 128))))) (= x274 (x490 (+ x1021 64))) (= (x1041 x274) x1469) (= x1093 (> x184 64)) x1077 (= (x490 (+ 96 x1226)) x551))) (= x1077 (> x184 32)) x704 (= x297 x1233)) (and (= 0 x1155) (not x704))) x53 (= x53 (> x1461 0))) x1102)))))
(assert (= 2939843472 (x543 (x604 2939843472))))
(assert (x333 x1048))
(assert (= (x772 x169) (ite (= x169 x20) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x161 x169))))
(assert (= (x543 (x1138 x721)) x721))
(assert (= (x604 142201243) (x1138 142201243)))
(assert (x1124 x1266 x786))
(assert (x333 x1275))
(assert (x333 x875))
(assert (= (or (and x1160 (not x1076)) (and x961 x1184) (and (not x886) x202)) x1106))
(assert (x333 x574))
(assert (= x646 (x543 (x1138 x646))))
(assert (= x289 (x543 (x1138 x289))))
(assert (x232 x722))
(assert (= (ite (and x118 (not x1433) x947) (x233 x546) (x1001 x546)) (x134 x546)))
(assert (=> (> (+ 10000 1) x226) (= (x604 x226) (x1138 x226))))
(assert (= x1275 (x543 (x1138 x1275))))
(assert (x333 x640))
(assert (= (=> (= x1211 (> x981 0)) (and (=> (not x1211) x1404) (=> x1211 x1274))) x1282))
(assert (= (ite (= x1221 x1040) x631 (x353 x1040)) (x569 x1040)))
(assert (x333 x119))
(assert (=> (< (- x718 1) 10000) (= (x1138 x718) (x604 x718))))
(assert (x1501 x465))
(assert (x333 x957))
(assert (x333 x1030))
(assert (x333 x1528))
(assert (x333 x28))
(assert (x333 x363))
(assert (x333 x983))
(assert (= (x751 x1221) (ite (= x598 x1221) x562 (x971 x1221))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x543 (x604 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x333 x896))
(assert (= x1600 (x543 (x1138 x1600))))
(assert (= (x1561 x894) (ite (= x955 x894) x8 (x580 x894))))
(assert (= (x543 (x604 1000000000000000000)) 1000000000000000000))
(assert (x333 x1081))
(assert (x333 x1335))
(assert (x333 x1370))
(assert (= (ite (= x768 x803) x725 (x712 x803)) (x867 x803)))
(assert (= x652 (x543 (x1138 x652))))
(assert (x333 x169))
(assert (=> (< (- x891 1) 10000) (= (x604 x891) (x1138 x891))))
(assert (x333 x949))
(assert (x333 x292))
(assert (x333 x607))
(assert (= (x1468 x946) (ite (and x1464 x1195) (x1321 x946) (ite (and x1464 (not x1195) x366) (x1003 x946) (x701 x946)))))
(assert (= x403 (and x1277 x939)))
(assert (x333 x420))
(assert (x232 x538))
(assert (x232 x1344))
(assert (x333 x231))
(assert (= (ite (= x598 x1201) x562 (x971 x1201)) (x751 x1201)))
(assert (=> (< (- x850 1) 10000) (= (x604 x850) (x1138 x850))))
(assert (x333 x812))
(assert (x333 x840))
(assert (x333 x540))
(assert (x333 x663))
(assert (=> (< (- x1349 1) 10000) (= (x1138 x1349) (x604 x1349))))
(assert (x1501 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x333 x1063))
(assert (=> (> (+ 10000 1) x722) (= (x1138 x722) (x604 x722))))
(assert (=> (> (+ 10000 1) x1589) (= (x1138 x1589) (x604 x1589))))
(assert (x333 x906))
(assert (= (ite (= x1192 x274) x1158 (x824 x274)) (x1041 x274)))
(assert (= x407 (x543 (x1138 x407))))
(assert (x1418 x676 x1101))
(assert (x333 x842))
(assert (= x915 (x543 (x1138 x915))))
(assert (= (ite (and x905 x572) (x569 x1519) (x258 x1519)) (x558 x1519)))
(assert (x333 x681))
(assert (x232 274184521717934524641157099916833587214))
(assert (= (x751 x953) (ite (= x953 x598) x562 (x971 x953))))
(assert (= (x1181 x89) (ite (= x803 x89) x1548 (x404 x89))))
(assert (= (x543 (x604 69947311)) 69947311))
(assert (x333 x676))
(assert (x232 x1499))
(assert (x333 x566))
(assert (=> (> (+ 10000 1) x584) (= (x604 x584) (x1138 x584))))
(assert (= x573 (x543 (x1138 x573))))
(assert (x333 x1018))
(assert (x333 x1094))
(assert (x333 x122))
(assert (x333 x178))
(assert (= x492 (x543 (x1138 x492))))
(assert (= (ite (= x759 x508) x305 (x807 x508)) (x1456 x508)))
(assert (= (ite (= x598 x836) x562 (x971 x836)) (x751 x836)))
(assert (x333 x115))
(assert (x333 x587))
(assert (= (x604 649617121) (x1138 649617121)))
(assert (=> (> (+ 10000 1) x273) (= (x604 x273) (x1138 x273))))
(assert (=> (> (+ 10000 1) x1603) (= (x1138 x1603) (x604 x1603))))
(assert (x333 x180))
(assert (x333 x1438))
(assert (= (ite (and x118 x704 x947 x1093 x1077 (not x923)) (x1119 x575) (ite (and x704 (not x1093) x118 x947 x1077) (x1291 x575) (ite (and x704 x118 x947 (not x1077)) (x1041 x575) (ite (and (not x704) x947 x118) (x824 x575) (x327 x575))))) (x233 x575)))
(assert (x333 x129))
(assert (= (x604 2211524764) (x1138 2211524764)))
(assert (x333 x332))
(assert (x333 x93))
(assert (= (ite (and x905 x572) (x569 x297) (x258 x297)) (x558 x297)))
(assert (x333 x1241))
(assert (= (x543 (x1138 x365)) x365))
(assert (= (x543 (x1138 x1156)) x1156))
(assert (= x717 (x543 (x1138 x717))))
(assert (x333 x1040))
(assert (x333 x1460))
(assert (= x862 (=> (and (= x933 (x583 x218)) (<= x737 1461501637330902918203684832716283019655932542975) (= x218 (x355 (x1138 x737) x1147 0)) (= x1147 (x355 (x1138 x492) (x604 10) 0)) (< x216 468353030) (= x341 (x263 (x1138 274184521717934524641157099916833587206))) (< 0 x341) (> 2293535753 x216) (<= x933 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 911411945 x216) (= 69947311 x216) (= x660 x933) (<= 0 x933)) (=> (and (= x660 x1486) (= x883 x855) (= x1248 x984) (= x1319 x739)) x2))))
(assert (=> (> (+ 10000 1) x81) (= (x604 x81) (x1138 x81))))
(assert (= (ite (= x1233 x456) x1245 (x751 x1233)) (x78 x1233)))
(assert (=> (< (- x900 1) 10000) (= (x604 x900) (x1138 x900))))
(assert (x333 x370))
(assert (= x730 (x543 (x1138 x730))))
(assert (= x784 (x543 (x1138 x784))))
(assert (= (ite (and x1262 x1434) (x1271 x1221) (x46 x1221)) (x523 x1221)))
(assert (= (x543 (x604 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x232 x985))
(assert (x333 x1088))
(assert (= (x1468 x1409) (ite (and x1464 x1195) (x1321 x1409) (ite (and x366 (not x1195) x1464) (x1003 x1409) (x701 x1409)))))
(assert (= (or (and (not x935) x21) (and x415 x852) (and (not x927) x1493)) x653))
(assert (=> (> (+ 10000 1) x1591) (= (x1138 x1591) (x604 x1591))))
(assert (x333 x1413))
(assert (= (x147 x508) (ite (= x820 x508) x968 (x1456 x508))))
(assert (= (ite (= x957 x1221) x631 (x353 x957)) (x569 x957)))
(assert (=> (< (- x107 1) 10000) (= (x604 x107) (x1138 x107))))
(assert (x333 x246))
(assert (x333 x1166))
(assert (= (x1041 x575) (ite (= x1192 x575) x1158 (x824 x575))))
(assert (x333 x850))
(assert (x333 x625))
(assert (= x843 (=> (and (not (< x1539 2690754053)) (= (x355 (x1138 x363) (x604 5) 0) x419) (< 0 x811) (= x629 (x752 x337)) (not (> 2293535753 x1539)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x629) (not (= x1539 2690754053)) (= x337 (x355 (x1138 x372) x419 0)) (not (= 2743102681 x1539)) (= (x263 (x1138 274184521717934524641157099916833587206)) x811) (<= x372 1461501637330902918203684832716283019655932542975) (not (= x1539 2764855426)) (= x1539 2798343961) (> 2960351575 x1539) (>= x629 0) (= x629 x1348)) (=> (and (= x897 x984) (= x448 x1348) (= x855 x607) (= x739 x974)) x12))))
(assert (x333 x374))
(assert (x333 x446))
(assert (x333 x297))
(assert (x333 x1292))
(assert (x333 x356))
(assert (= (=> (= (> x1036 x129) x911) (and (=> (not x911) x1231) (=> (and (= x24 x1021) x911) x944))) x393))
(assert (=> (> (+ 10000 1) x910) (= (x1138 x910) (x604 x910))))
(assert (x333 x1215))
(assert (= (ite (and (not x1316) x1064 (not x1273) x260) (x78 x546) (ite (and (not x1064) x260 (not x1316)) (x751 x546) (ite (and x1316 x260) (x751 x546) (x711 x546)))) (x228 x546)))
(assert (=> (> (+ 10000 1) x1284) (= (x1138 x1284) (x604 x1284))))
(assert (= (and x225 (not x1510)) x599))
(assert (x333 x1476))
(assert (x333 x101))
(assert (= (+ 1 (x543 x837)) (x543 (x1061 x837 1))))
(assert (x232 x35))
(assert (x232 x1081))
(assert (=> (< (- x115 1) 10000) (= (x604 x115) (x1138 x115))))
(assert (= x397 (x543 (x1138 x397))))
(assert (=> (> (+ 10000 1) x102) (= (x1138 x102) (x604 x102))))
(assert (= (=> (and (= x1009 (x355 (x1138 x640) x986 0)) (not (< x157 x981)) (= x1597 (x1468 x324)) (<= 0 x1597) (= x825 (< 0 x1597)) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x1579) (<= 0 x157) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x157) (= x640 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x986 (x355 (x1138 x981) (x604 7) 0)) (<= x1597 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x324 (x355 (x1138 x1579) x1009 0))) (and (=> (not x825) x413) (=> (and (= (x770 x1452) x1436) (<= x1436 115792089237316195423570985008687907853269984665640564039457584007913129639935) x825 (= x1436 x163) (= x1452 (x355 (x1138 x584) x266 0)) (= x903 0) (= (x853 1461501637330902918203684832716283019655932542975 x465) x1091) (= (x355 (x1138 x1091) x901 0) x266) (= x584 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (x355 (x1138 x981) (x604 9) 0) x901) (<= 0 x1436)) x85))) x1431))
(assert (x333 x1021))
(assert (x333 x519))
(assert (x333 x474))
(assert (= (x1561 x789) (ite (= x789 x955) x8 (x580 x789))))
(assert (x333 x108))
(assert (x232 x460))
(assert (x333 x1165))
(assert (= (x1345 x1519) 0))
(assert (= (or (and x281 x870) (and x173 x1402)) x735))
(assert (x333 x209))
(assert (x333 x1109))
(assert (x333 x1522))
(assert (= (or x653 x1489) x948))
(assert (= (x558 x1201) (ite (and x905 x572) (x569 x1201) (x258 x1201))))
(assert (x333 x970))
(assert (x232 x1067))
(assert (x232 x363))
(assert (= (x604 1889567281) (x1138 1889567281)))
(assert (x333 x222))
(assert (x232 x607))
(assert (=> (< (- x332 1) 10000) (= (x604 x332) (x1138 x332))))
(assert (= (x1073 x1221) (ite (= x789 x1221) x578 (x1561 x1221))))
(assert (= (=> (and (<= 0 x10) (<= x10 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x1264) (= x10 (x795 x804)) (< x952 2960351575) (= x1264 (x263 (x1138 274184521717934524641157099916833587206))) (= x1447 x10) (not (< x952 2690754053)) (not (> 2293535753 x952)) (= x804 (x355 (x1138 x821) x45 0)) (<= x821 1461501637330902918203684832716283019655932542975) (<= x1178 1461501637330902918203684832716283019655932542975) (= (x355 (x1138 x646) (x604 3) 0) x860) (not (= x952 2690754053)) (= x952 2743102681) (= (x355 (x1138 x1178) x860 0) x45)) (=> (and (= x794 x1613) (= x585 x1447) (= x718 x739) (= x984 x191) (= x352 x855)) x11)) x5))
(assert (x333 x350))
(assert (= (x569 x894) (ite (= x894 x1221) x631 (x353 x894))))
(assert (x232 x1396))
(assert (x333 x107))
(assert (x232 x721))
(assert (= (ite (= x551 x625) x1469 (x1041 x625)) (x1291 x625)))
(assert (x333 x1178))
(assert (x333 x428))
(assert (x232 x737))
(assert (x333 x1545))
(assert (x232 x989))
(assert (= x1570 x1252))
(assert (= x1062 x1367))
(assert (= x1186 (or x199 x487)))
(assert (= 0 (x1345 x274)))
(assert (x333 x714))
(assert (=> (< (- x1066 1) 10000) (= (x604 x1066) (x1138 x1066))))
(assert (= (x841 x508) (ite (and x467 (not x743) x417) (x997 x508) (x77 x508))))
(assert (x333 x1201))
(assert (x333 x1196))
(assert (x333 x631))
(assert (= (x543 (x1138 x900)) x900))
(assert (x333 x985))
(assert (x333 x651))
(assert (x333 x698))
(assert (x333 x1158))
(assert (= 0 (x1345 x575)))
(assert (= (x78 x546) (ite (= x456 x546) x1245 (x751 x546))))
(assert (x333 x20))
(assert (x333 x170))
(assert (x333 x188))
(assert (=> (< (- x306 1) 10000) (= (x604 x306) (x1138 x306))))
(assert (x232 x365))
(assert (x1418 x785 x389))
(assert (x333 x371))
(assert (x333 x414))
(assert (= (ite (= x1221 x551) x1469 (x1041 x1221)) (x1291 x1221)))
(assert (= (x404 x89) (ite (and (not x1273) x260 x1064 (not x1316)) (x867 x89) (ite (and (not x1316) x260 (not x1064)) (x712 x89) (ite (and x1316 x260) (x712 x89) (x602 x89))))))
(assert (= x910 (x543 (x1138 x910))))
(assert (x333 x895))
(assert (x232 x913))
(assert (= x754 (x543 (x1138 x754))))
(assert (= x265 (x543 (x1138 x265))))
(assert (= (x1138 2514000705) (x604 2514000705)))
(assert (=> (< (- x906 1) 10000) (= (x604 x906) (x1138 x906))))
(assert true)
(assert (= (ite (= x169 x456) x1245 (x751 x169)) (x78 x169)))
(assert (x333 x741))
(assert (x333 x1583))
(assert (x333 x855))
(assert (x333 x1302))
(assert (x333 x1461))
(assert (x333 x1120))
(assert (= (x543 (x1138 x619)) x619))
(assert (= (x1345 x1201) 0))
(assert (= (x751 x456) (ite (= x456 x598) x562 (x971 x456))))
(assert (= (ite (= x957 x1192) x1158 (x824 x957)) (x1041 x957)))
(assert (x333 x399))
(assert (=> (< (- x459 1) 10000) (= (x604 x459) (x1138 x459))))
(assert (x232 x1177))
(assert (= (x867 x89) (ite (= x89 x768) x725 (x712 x89))))
(assert (x333 x9))
(assert (x333 x1132))
(assert (=> (> (+ 10000 1) x1196) (= (x604 x1196) (x1138 x1196))))
(assert (= (=> (and x52 (not (= x977 0)) (or (not x391) (and (= x836 (x490 (+ x508 32))) (< 0 x1544) (= (x991 x508) x329) x391 (= (ite x151 1 0) x356) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x329) true) (> 32 x329)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x329))) (= (= x1544 0) x678) (= x1544 x356) (= x1544 (x991 x836)) (= (not x678) x151))) (= x369 (= x671 0)) (or (and x369 (= 96 x508)) (and (= x1048 x508) (not x369) (= (x490 (+ x261 96)) x1485))) (not x1569) (= x1503 (x496 (x1138 x1465))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x707 (x1138 274184521717934524641157099916833587206))) x52) (= x1521 (x991 x508)) (= x391 (< 0 x1521)) (= x1569 (< 2 x631))) x567) x1340))
(assert (x333 x885))
(assert (=> (> (+ 10000 1) x1413) (= (x604 x1413) (x1138 x1413))))
(assert (= (ite (= x836 x1192) x1158 (x824 x836)) (x1041 x836)))
(assert (= x689 (=> (and (not (< x50 2293535753)) (not (= x50 2690754053)) (< 0 x1039) (= 2798343961 x50) (= (x263 (x1138 274184521717934524641157099916833587206)) x1039) (not (< x50 2690754053)) (not (= 2743102681 x50)) (<= x1196 1461501637330902918203684832716283019655932542975) (= x1278 (x355 (x1138 x1196) x650 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1599) (= x170 x1599) (> 2960351575 x50) (= (x355 (x1138 x730) (x604 5) 0) x650) (>= x1599 0) (not (= x50 2764855426)) (= x1599 (x1532 x1278))) (=> (and (= x170 x1012) (= x1225 x855) (= x739 x201) (= x984 x1016)) x776))))
(assert (= (ite (and x1434 x1262) (x1271 x508) (x46 x508)) (x523 x508)))
(assert (= x1069 (x543 (x1138 x1069))))
(assert (x333 x1613))
(assert (= x881 (and x334 x793)))
(assert (x333 x758))
(assert (= x1098 (=> (and (= x1509 (x355 (x1138 x35) x1279 0)) (= x35 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x420 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (x355 (x1138 x420) x1509 0) x1409) (= (= x741 0) x470) (= (x1468 x1409) x741) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x741) (>= x741 0) (= (x355 (x1138 x981) (x604 7) 0) x1279)) (and (=> x470 x162) (=> (and (not x470) (= x1497 x981)) x1272)))))
(assert (=> (< (- x709 1) 10000) (= (x1138 x709) (x604 x709))))
(assert (x333 x443))
(assert (= (x1138 2061678023) (x604 2061678023)))
(assert (x333 x1374))
(assert (= (=> (= 0 x407) x194) x481))
(assert (x232 x664))
(assert (x333 x1159))
(assert (=> (< (- x664 1) 10000) (= (x1138 x664) (x604 x664))))
(assert (x333 x99))
(assert (= (x824 x625) (ite (= x625 x1484) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x625))))
(assert (= x1058 (x543 (x1138 x1058))))
(assert (x232 x865))
(assert (= (x233 x169) (ite (and x1077 (not x923) x704 x1093 x947 x118) (x1119 x169) (ite (and x118 x947 x704 (not x1093) x1077) (x1291 x169) (ite (and x118 x704 (not x1077) x947) (x1041 x169) (ite (and (not x704) x118 x947) (x824 x169) (x327 x169)))))))
(assert (x333 x777))
(assert (x333 x1069))
(assert (= (x604 2798343961) (x1138 2798343961)))
(assert (= (ite (and x1464 x1195) (x919 x1562) (ite (and (not x1195) x1464 x366) (x919 x1562) (x1117 x1562))) (x1397 x1562)))
(assert (x333 x524))
(assert (= (x543 (x604 826074471)) 826074471))
(assert (= (ite (= x508 x1484) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x508)) (x824 x508)))
(assert (= 0 (x1345 x789)))
(assert (x333 x989))
(assert (= (ite (= x1389 x598) x562 (x971 x1389)) (x751 x1389)))
(assert (x333 x654))
(assert (x333 x51))
(assert (x333 x671))
(assert (x232 x1355))
(assert (= (ite (= x1519 x175) x451 (x772 x1519)) (x807 x1519)))
(assert (x333 x1454))
(assert (= x848 (x543 (x1138 x848))))
(assert (=> (> (+ 10000 1) x640) (= (x604 x640) (x1138 x640))))
(assert (x333 x330))
(assert (= (x134 x1221) (ite (and (not x1433) x118 x947) (x233 x1221) (x1001 x1221))))
(assert (= (x1119 x1040) (ite (= x684 x1040) x143 (x1291 x1040))))
(assert (= x1109 (x543 (x1138 x1109))))
(assert (x333 x148))
(assert (= (x543 (x1138 x963)) x963))
(assert (x333 x1557))
(assert (x333 x159))
(assert (= (=> (and (not (> 2690754053 x1210)) (= x846 (x263 (x1138 274184521717934524641157099916833587206))) (= x1080 x242) (not (= x1210 2690754053)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1080) (= (x355 (x1138 x201) x14 0) x1399) (< 0 x846) (> 2960351575 x1210) (= (x355 (x1138 x1016) (x604 3) 0) x14) (<= x1225 1461501637330902918203684832716283019655932542975) (not (< x1210 2293535753)) (= x1261 (x355 (x1138 x1225) x1399 0)) (= 2743102681 x1210) (>= 1461501637330902918203684832716283019655932542975 x201) (>= x1080 0) (= (x795 x1261) x1080)) (=> (and (= (>= x1012 x839) x518) (= x474 x739) (= x984 x652) (= x839 x242)) x1487)) x776))
(assert (= (=> (and (= x1439 (x548 (- x1036 1))) (= (> x1439 0) x334)) (and (=> x334 x236) (=> (not x334) x1379))) x4))
(assert (= true x921))
(assert (x333 x808))
(assert (x333 x737))
(assert (= (x558 x1221) (ite (and x905 x572) (x569 x1221) (x258 x1221))))
(assert (= (=> (and (= (> x981 x129) x1002) (= (x490 (+ x1036 1)) x981) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1522))) (and (=> (not x1002) x1431) (=> (and (= x1021 x370) x1002) x944))) x613))
(assert (x333 x1268))
(assert (x333 x308))
(assert (= (x1041 x894) (ite (= x894 x1192) x1158 (x824 x894))))
(assert (x333 x323))
(assert (= (x543 (x1138 x1502)) x1502))
(assert (x333 x1364))
(assert (= (ite (= x836 x684) x143 (x1291 x836)) (x1119 x836)))
(assert (= (x1561 x575) (ite (= x575 x955) x8 (x580 x575))))
(assert (x232 x1178))
(assert (x333 x109))
(assert (x333 x31))
(assert (x333 x1323))
(assert (= (x1138 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x604 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x333 x181))
(assert (x333 x785))
(assert (=> (> (+ 10000 1) x220) (= (x604 x220) (x1138 x220))))
(assert (=> (> (+ 10000 1) x1572) (= (x604 x1572) (x1138 x1572))))
(assert (= x230 x375))
(assert (= (ite (and x1195 x1464) (x919 x804) (ite (and x366 (not x1195) x1464) (x919 x804) (x1117 x804))) (x1397 x804)))
(assert (x333 x977))
(assert (x333 x903))
(assert (x333 x1502))
(assert (=> (< (- x730 1) 10000) (= (x604 x730) (x1138 x730))))
(assert (= (x1119 x1221) (ite (= x1221 x684) x143 (x1291 x1221))))
(assert (= (ite (= x1201 x955) x8 (x580 x1201)) (x1561 x1201)))
(assert (x333 x1490))
(assert (x333 x801))
(assert (x333 x1526))
(assert (= (x1291 x546) (ite (= x546 x551) x1469 (x1041 x546))))
(assert (= (x1345 x169) 0))
(assert (= (x824 x1519) (ite (= x1519 x1484) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x1519))))
(assert (x333 x405))
(assert (= (x751 x180) (ite (= x598 x180) x562 (x971 x180))))
(assert (=> (< (- x1526 1) 10000) (= (x1138 x1526) (x604 x1526))))
(assert (x333 x930))
(assert (x333 x1589))
(assert (x232 x848))
(assert (x333 x789))
(assert (= (and x173 (not x1402)) x920))
(assert (= x1462 (=> (= (> x1036 0) x318) (and (=> (not x318) x1379) (=> x318 x1329)))))
(assert (x333 x658))
(assert (=> (< (- x191 1) 10000) (= (x604 x191) (x1138 x191))))
(assert (=> (> (+ 10000 1) x1499) (= (x604 x1499) (x1138 x1499))))
(assert (x232 x553))
(assert (=> (> (+ 10000 1) x1594) (= (x1138 x1594) (x604 x1594))))
(assert (= (x1391 x174) (ite (and x260 x1472) (x283 x174) (x670 x174))))
(assert (= (x78 x894) (ite (= x894 x456) x1245 (x751 x894))))
(assert (x333 x66))
(assert (x333 x709))
(assert (=> (> (+ 10000 1) x1069) (= (x604 x1069) (x1138 x1069))))
(assert (= (x1138 87118632) (x604 87118632)))
(assert (x232 274184521717934524641157099916833587206))
(assert (= (ite (and x905 x572) (x569 x957) (x258 x957)) (x558 x957)))
(assert (= (x604 2960351575) (x1138 2960351575)))
(assert (x333 x1541))
(assert (x333 x846))
(assert (x333 x900))
(assert (= (ite (= x1040 x456) x1245 (x751 x1040)) (x78 x1040)))
(assert (x1501 x592))
(assert (x333 x1045))
(assert (= (ite (= x789 x1233) x578 (x1561 x1233)) (x1073 x1233)))
(assert (= x1036 (x543 (x1138 x1036))))
(assert (= x945 x1062))
(assert (x333 x505))
(assert (= x344 x331))
(assert (=> (> (+ 10000 1) x1178) (= (x1138 x1178) (x604 x1178))))
(assert (x333 x1436))
(assert (= x1067 (x543 (x1138 x1067))))
(assert (= (ite (= x551 x575) x1469 (x1041 x575)) (x1291 x575)))
(assert (x333 x544))
(assert (=> (> (+ 10000 1) x621) (= (x604 x621) (x1138 x621))))
(assert (x333 x397))
(assert (x333 x110))
(assert (= (x543 (x1138 x1355)) x1355))
(assert (x232 x915))
(assert (= (x1345 x957) 0))
(assert (= x322 (=> (and (= (= 0 x1314) x1195) (or (and (not x1024) (= x1480 (x355 (x1138 x1036) (x604 9) 0)) (= x1541 (x853 1461501637330902918203684832716283019655932542975 x465)) (= x314 (x355 (x1138 x431) x1556 0)) (= x431 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= x1556 (x355 (x1138 x1541) x1480 0))) x1024) (= (= x520 0) x1024) (or (and (= (x853 1461501637330902918203684832716283019655932542975 x1120) x460) (= (x355 (x1138 x9) x748 0) x892) (= x24 x180) (= x756 (x355 (x1138 x460) x892 0)) (= x748 (x355 (x1138 x1036) (x604 7) 0)) x1195 (= (x853 1461501637330902918203684832716283019655932542975 x465) x9)) (and (= (x515 x686) x869) (= x1141 (x853 1461501637330902918203684832716283019655932542975 x465)) (<= 0 x869) (= x339 (x355 (x1138 x1141) x215 0)) (<= 0 x1471) (= (x1061 x837 1) x686) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x869) (or (and (not x1129) (= x644 0)) (and (= x1207 (x1113 x1410)) (= (= x1471 0) x512) x1129 (or (and (= x1045 (x1113 x1410)) (= x29 x1045) x716) (and (= x29 x1232) (not x716))) (= x716 (< x1207 x1232)) (or (and (= x1267 x644) (not (> x1471 x29)) (= (ite (> 604800 x1453) x1453 604800) x1267) (not x512) (= x425 604800) (= (x548 (- x29 x1471)) x1453)) (and (= x654 x644) (= x1504 (x1113 x24)) (not (< x29 x1504)) (= x654 (x548 (- x29 x1504))) x512)))) (= (x943 x837) x594) (= x366 (= 0 x644)) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x1043) (not x1195) (= x215 (x355 (x1138 x1036) (x604 7) 0)) (= x1410 (x490 (+ 32 x24))) (= x267 (x1113 x1410)) (= (x490 (+ 64 x24)) x1090) (= x1471 (x994 x1050)) (or (and (not x366) (= (x355 (x1138 x1036) (x604 3) 0) x1444) (= x286 (x355 (x1138 x784) x1587 0)) (= x840 (x919 x286)) (= x1587 (x355 (x1138 x985) x1444 0)) (= x180 x1090) (<= x840 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1314 x644)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x985) (< (+ x840 x1032) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x784 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= x313 (x355 (x1138 x113) x1239 0)) (= x1512 (x355 (x1138 x1177) x313 0)) (= x566 (+ x483 x1283)) (= x347 (* x644 x1314)) (= x483 x840) (= (x853 1461501637330902918203684832716283019655932542975 x1120) x1177) (= (x853 1461501637330902918203684832716283019655932542975 x465) x113) (<= 0 x840) (= x1032 x347) (= x1032 x1283) (= (x355 (x1138 x1036) (x604 7) 0) x1239)) (and (= x1412 (x355 (x1138 x954) x1320 0)) (= x1056 (x853 1461501637330902918203684832716283019655932542975 x1120)) (= (x853 1461501637330902918203684832716283019655932542975 x465) x954) (= x1320 (x355 (x1138 x1036) (x604 7) 0)) (= x655 (x355 (x1138 x1056) x1412 0)) (= x180 x1090) x366)) (<= x1471 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x594 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x594) (= (> x267 x1471) x1129) (= (x355 (x1138 x1043) x339 0) x1050) (= (x355 (x1138 x1036) (x604 1) 0) x837)))) x679)))
(assert (= (and x281 (not x870)) x173))
(assert (= x306 (x543 (x1138 x306))))
(assert (= (ite (and x260 x1472) (x283 x1015) (x670 x1015)) (x1391 x1015)))
(assert (x232 x821))
(assert (= x845 x581))
(assert (x232 x115))
(assert (x232 x723))
(assert (x1501 x1120))
(assert (= (x751 x546) (ite (= x546 x598) x562 (x971 x546))))
(assert (x333 x1441))
(assert (x333 x1066))
(assert (= (x751 x575) (ite (= x598 x575) x562 (x971 x575))))
(assert (= (ite (= x456 x1201) x1245 (x751 x1201)) (x78 x1201)))
(assert (x333 x592))
(assert (x333 x612))
(assert (= (x604 2532887486) (x1138 2532887486)))
(assert (= (x543 (x1138 x1107)) x1107))
(assert (x333 x805))
(assert (= x1026 (=> (and (= (x355 (x1138 x1589) (x604 3) 0) x398) (= (x355 (x1138 x709) x561 0) x1167) (> x188 0) (= x188 (x263 (x1138 274184521717934524641157099916833587206))) (= (x355 (x1138 x428) x398 0) x561) (= x209 2743102681) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1301) (not (= 2690754053 x209)) (>= 1461501637330902918203684832716283019655932542975 x428) (= x1301 x98) (<= x709 1461501637330902918203684832716283019655932542975) (= (x919 x1167) x1301) (not (< x209 2293535753)) (not (< x209 2690754053)) (>= x1301 0) (< x209 2960351575)) (=> (and (= x984 x459) (= x855 x289) (= x1613 x783) (= x1460 x739) (= x98 x386)) x301))))
(assert (= (x78 x953) (ite (= x953 x456) x1245 (x751 x953))))
(assert (x232 x1156))
(assert (x333 x713))
(assert (x333 x880))
(assert (x333 x305))
(assert (x1418 x465 x1276))
(assert (=> (< (- x954 1) 10000) (= (x604 x954) (x1138 x954))))
(assert (= x392 (x543 (x1138 x392))))
(assert (= x11 (=> (and (not (= x932 2418364589)) (= (x355 (x1138 x352) x1095 0) x296) (< 0 x122) (= x1095 (x355 (x1138 x718) x693 0)) (= (x355 (x1138 x794) x296 0) x893) (< x932 2960351575) (not (< x932 2293535753)) (= 2532887486 x932) (not (= 2512682246 x932)) (<= x794 1461501637330902918203684832716283019655932542975) (= (x263 (x1138 274184521717934524641157099916833587206)) x122) (<= x352 1461501637330902918203684832716283019655932542975) (>= x182 0) (<= x718 1461501637330902918203684832716283019655932542975) (<= x182 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x932 2690754053) (= x182 (x154 x893)) (= x182 x90) (not (= 2293535753 x932)) (= x693 (x355 (x1138 x191) (x604 4) 0))) x1549)))
(assert (x333 x1266))
(assert (= (x604 274184521717934524641157099916833587214) (x1138 274184521717934524641157099916833587214)))
(assert (x333 x1410))
(assert (x333 x274))
(assert (= (x228 x1221) (ite (and (not x1273) x260 (not x1316) x1064) (x78 x1221) (ite (and (not x1064) x260 (not x1316)) (x751 x1221) (ite (and x260 x1316) (x751 x1221) (x711 x1221))))))
(assert (=> (< (- x1460 1) 10000) (= (x1138 x1460) (x604 x1460))))
(assert (x333 x82))
(assert (= (x543 (x604 2061678023)) 2061678023))
(assert (x333 x1473))
(assert (= (x824 x957) (ite (= x1484 x957) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x957))))
(assert (= (x1291 x953) (ite (= x551 x953) x1469 (x1041 x953))))
(assert (=> (> (+ 10000 1) x897) (= (x604 x897) (x1138 x897))))
(assert (= (ite (= x1484 x1221) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x1221)) (x824 x1221)))
(assert (= x390 x1191))
(assert (= (x1345 x1233) 0))
(assert (x333 x1319))
(assert (x333 x1248))
(assert (x333 x1525))
(assert (= x9 (x543 (x1138 x9))))
(assert (= x107 (x543 (x1138 x107))))
(assert (= (x543 (x1138 x783)) x783))
(assert (= (x824 x836) (ite (= x1484 x836) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x836))))
(assert (x232 x1214))
(assert (= (ite (= x139 x955) x8 (x580 x139)) (x1561 x139)))
(assert (= (x1138 2939843472) (x604 2939843472)))
(assert (x1418 x592 x787))
(assert (= (x543 (x1138 x191)) x191))
(assert (x232 x963))
(assert (=> (< (- x69 1) 10000) (= (x604 x69) (x1138 x69))))
(assert (= (=> (and (< 0 x426) (>= 1461501637330902918203684832716283019655932542975 x107) (< x1500 2293535753) (= x871 (x355 (x1138 x61) x1007 0)) (< x1500 911411945) (= x1310 x441) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x441) (not (> 468353030 x1500)) (= 759532456 x1500) (= x441 (x1110 x871)) (not (= 635128645 x1500)) (<= 0 x441) (= x1007 (x355 (x1138 x107) x1092 0)) (= (x355 (x1138 x220) (x604 7) 0) x1092) (not (= 468353030 x1500)) (<= x61 1461501637330902918203684832716283019655932542975) (= x426 (x263 (x1138 274184521717934524641157099916833587206)))) (=> (and (= x1112 (<= x1405 x1228)) (= x984 x730) (= x739 x1196) (= x1310 x1405)) x689)) x1605))
(assert (x333 x163))
(assert (x333 x844))
(assert (= x1013 x375))
(assert (x333 x646))
(assert (= (ite (and x1472 x260) (x752 x1297) (x1047 x1297)) (x774 x1297)))
(assert (x333 x431))
(assert (=> (< (- x506 1) 10000) (= (x604 x506) (x1138 x506))))
(assert (= (x543 (x604 2764855426)) 2764855426))
(assert (= (ite (and (not x1273) x1064 x260 (not x1316)) (x78 x953) (ite (and (not x1316) (not x1064) x260) (x751 x953) (ite (and x260 x1316) (x751 x953) (x711 x953)))) (x228 x953)))
(assert (x232 x1069))
(assert (= (ite (and x1064 (not x1273) (not x1316) x260) (x78 x274) (ite (and (not x1316) x260 (not x1064)) (x751 x274) (ite (and x1316 x260) (x751 x274) (x711 x274)))) (x228 x274)))
(assert (x333 x182))
(assert (x333 x584))
(assert (= x999 (x543 (x1138 x999))))
(assert (= (x558 x1389) (ite (and x572 x905) (x569 x1389) (x258 x1389))))
(assert (= (x558 x156) (ite (and x905 x572) (x569 x156) (x258 x156))))
(assert (= (x543 (x1061 x1560 1)) (+ (x543 x1560) 1)))
(assert (x333 x1389))
(assert (x232 x492))
(assert (x333 x633))
(assert (x333 x1080))
(assert (x232 x397))
(assert (x333 x506))
(assert (=> (< (- x895 1) 10000) (= (x604 x895) (x1138 x895))))
(assert (= (x1291 x1040) (ite (= x551 x1040) x1469 (x1041 x1040))))
(assert (= (x824 x274) (ite (= x274 x1484) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x274))))
(assert (x333 x456))
(assert (x333 x364))
(assert (x333 x703))
(assert (x232 x265))
(assert (x232 x407))
(assert (= (x604 1968616202) (x1138 1968616202)))
(assert (= x101 (x543 (x1138 x101))))
(assert (x232 x201))
(assert (= (or (and x118 (not x947)) (and (not x467) x417) x735) x230))
(assert (x333 x882))
(assert (x333 x1022))
(assert (= x1379 (=> (= x159 0) x916)))
(assert (x333 x1032))
(assert (x232 x1603))
(assert (= (x1073 x274) (ite (= x274 x789) x578 (x1561 x274))))
(assert (x333 x918))
(assert (=> (> (+ 10000 1) x136) (= (x1138 x136) (x604 x136))))
(assert (=> (< (- x913 1) 10000) (= (x1138 x913) (x604 x913))))
(assert (x333 x1534))
(assert (x232 x1589))
(assert (= (ite (= x957 x598) x562 (x971 x957)) (x751 x957)))
(assert (= (x751 x1233) (ite (= x1233 x598) x562 (x971 x1233))))
(assert (=> (< (- x784 1) 10000) (= (x1138 x784) (x604 x784))))
(assert (x333 x97))
(assert (x333 x739))
(assert (= (x1138 26959946667150639794667015087019630673637144422540572481103610249215) (x604 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (x228 x156) (ite (and x260 x1064 (not x1316) (not x1273)) (x78 x156) (ite (and x260 (not x1316) (not x1064)) (x751 x156) (ite (and x1316 x260) (x751 x156) (x711 x156))))))
(assert (= (x1138 18446744073709551615) (x604 18446744073709551615)))
(assert (x333 x201))
(assert (=> (> (+ 10000 1) x1355) (= (x604 x1355) (x1138 x1355))))
(assert (x333 x1601))
(assert (= (ite (= x625 x789) x578 (x1561 x625)) (x1073 x625)))
(assert (x333 x1507))
(assert (= x1549 (=> (and (= x453 x279) (= x1588 x90) (= x453 (<= x1588 x585))) x279)))
(assert (= (x1345 x1389) 0))
(assert (=> (> (+ 10000 1) x1141) (= (x1138 x1141) (x604 x1141))))
(assert (=> (> (+ 10000 1) x246) (= (x604 x246) (x1138 x246))))
(assert (x333 x1258))
(assert (x232 x30))
(assert (x232 x474))
(assert (= (ite (= x169 x1221) x631 (x353 x169)) (x569 x169)))
(assert (= (=> (and (= x540 2743102681) (not (= x540 2690754053)) (= x1574 (x355 (x1138 x897) (x604 3) 0)) (<= x969 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x540 2960351575) (<= 0 x969) (= x969 (x919 x831)) (= (x355 (x1138 x974) x1574 0) x1477) (<= x607 1461501637330902918203684832716283019655932542975) (= (x355 (x1138 x607) x1477 0) x831) (= x1424 x969) (not (< x540 2293535753)) (> x1029 0) (<= x974 1461501637330902918203684832716283019655932542975) (not (< x540 2690754053)) (= x1029 (x263 (x1138 274184521717934524641157099916833587206)))) (=> (and (= x737 x739) (= (>= x448 x636) x141) (= x636 x1424) (= x984 x492)) x862)) x12))
(assert (x333 x1568))
(assert (x333 x573))
(assert (x232 x1415))
(assert (= (x543 (x604 2211524764)) 2211524764))
(assert (= x765 (=> (and (not (= 0 x1454)) (= x1205 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x975 (x1138 274184521717934524641157099916833587206)))) (or (and (= x1490 x658) x1234 (= 96 x953)) (and (not x1234) (= (x490 (+ x658 x1303)) x70) (= x70 x1490) (= (x490 (+ x568 63)) x148) (= x953 x658) (= x1334 (x490 (+ x1226 96))) (= x1303 (x853 115792089237316195423570985008687907853269984665640564039457584007913129639904 x148)))) x1205 (= x1234 (= 0 x568)) (or (and (= x1359 x1400) (not (or (> x1337 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1337) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1337))))) (= (x1353 x625) x1359) (< 0 x1359) (= (x1353 x953) x1337) (= (not x1004) x290) (= x1004 (= 0 x1359)) x104 (= x625 (x490 (+ x953 32))) (= (ite x290 1 0) x1400)) (not x104)) (= x104 (> x1044 0)) (= (x1353 x953) x1044) (= (x627 (x1138 x223)) x336) (= (x975 (x1138 274184521717934524641157099916833587206)) x1573)) x84)))
(assert (= (x772 x836) (ite (= x836 x20) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x161 x836))))
(assert (=> (< (- x883 1) 10000) (= (x1138 x883) (x604 x883))))
(assert (x333 x235))
(assert (x232 x1534))
(assert (x232 x1091))
(assert (= (x543 (x1138 x709)) x709))
(assert (x333 x563))
(assert (x333 x112))
(assert (x333 x116))
(assert (= (ite (= x598 x625) x562 (x971 x625)) (x751 x625)))
(assert (x333 x1012))
(assert (x333 x1207))
(assert (= (x1345 x156) 0))
(assert (=> (> (+ 10000 1) x1016) (= (x604 x1016) (x1138 x1016))))
(assert (= (ite (and x1434 x1262) (x1271 x836) (x46 x836)) (x523 x836)))
(assert (= (ite (= x789 x1201) x578 (x1561 x1201)) (x1073 x1201)))
(assert (x333 x1006))
(assert (= (x604 274184521717934524641157099916833587218) (x1138 274184521717934524641157099916833587218)))
(assert (= x1363 (and x1170 x1211)))
(assert (= (x543 (x604 2743102681)) 2743102681))
(assert (= (ite (= x1519 x1221) x631 (x353 x1519)) (x569 x1519)))
(assert (= (x134 x1040) (ite (and (not x1433) x947 x118) (x233 x1040) (x1001 x1040))))
(assert (x333 x220))
(assert (x232 x514))
(assert (= (ite (and x260 x1064 (not x1316) (not x1273)) (x867 x803) (ite (and (not x1316) x260 (not x1064)) (x712 x803) (ite (and x1316 x260) (x712 x803) (x602 x803)))) (x404 x803)))
(assert (x333 x81))
(assert (= (x543 (x1138 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (x543 (x1138 x514)) x514))
(assert (x333 x839))
(assert (x333 x1594))
(assert (= x1375 x1191))
(assert (= (x824 x169) (ite (= x169 x1484) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x169))))
(assert (x333 x1548))
(assert (x232 x1465))
(assert (= (=> (= x1402 (= 274184521717934524641157099916833587214 x1465)) (and (=> (not x1402) x416) (=> (and (= x844 68) (= x671 32) (= x542 (< x541 x1473)) (not (= x1387 2514000705)) (= x966 (x355 (x1138 274184521717934524641157099916833587206) (x604 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x432) (= x541 (x637 x966)) (not x1171) (= x576 x371) (= x397 x44) (= (> x1590 x541) x1171) (= x364 274184521717934524641157099916833587206) (= x1070 (x355 (x1138 274184521717934524641157099916833587206) (x604 1) 0)) (= x1165 x844) x1402 (not (> 649617121 x1387)) (= x724 x432) (= x733 (x548 (- x541 x1590))) (> x308 0) (= x549 (x548 (- x844 4))) (not (= x1387 649617121)) (= x1473 x96) (= x56 x397) (not (= x1387 826074471)) (< (+ x1473 x432) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x977 1) (>= x432 0) (not x345) (>= x541 0) (<= x397 1461501637330902918203684832716283019655932542975) (= x432 (x1084 x1429)) (= (>= (+ x432 x1473) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x345) (= x962 (+ x724 x96)) (= x1088 x1590) (= x1535 (or (> x549 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x549) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x549) true)))) (= x1429 (x355 (x1138 x397) (x604 1) 0)) (not x1535) (= x563 274184521717934524641157099916833587206) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x178) (= x1473 x1590) (= (x263 (x1138 274184521717934524641157099916833587214)) x308) (= 2835717307 x1387) (not x542) (<= x541 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x844 4)) (not (= 1889567281 x1387))) x1340))) x1100))
(assert (x232 x69))
(assert (= (x867 x893) (ite (= x768 x893) x725 (x712 x893))))
(assert (=> (> (+ 10000 1) x821) (= (x604 x821) (x1138 x821))))
(assert (= (x543 (x1138 x737)) x737))
(assert (x333 x1348))
(assert (x333 x894))
(assert (x333 x291))
(assert (x333 x1504))
(assert (x232 x158))
(assert (x232 x1284))
(assert (x232 x554))
(assert (=> (> (+ 10000 1) x474) (= (x1138 x474) (x604 x474))))
(assert (x333 x564))
(assert (x333 x659))
(assert (= x851 x1375))
(assert (= x1214 (x543 (x1138 x1214))))
(assert (= (=> (and (<= x1596 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x915) (= x71 (x355 (x1138 x963) (x604 7) 0)) (= x1172 x1596) (= x1140 (x263 (x1138 274184521717934524641157099916833587206))) (= x1596 (x994 x249)) (>= x1596 0) (not (= 635128645 x68)) (= x249 (x355 (x1138 x915) x973 0)) (> 2293535753 x68) (not (= x68 468353030)) (< x68 911411945) (> x1140 0) (= 759532456 x68) (= (x355 (x1138 x1591) x71 0) x973) (not (> 468353030 x68)) (<= x1591 1461501637330902918203684832716283019655932542975)) (=> (and (= x739 x265) (= x69 x984) (= (<= x579 x1123) x22) (= x1123 x1172) x22) x1281)) x171))
(assert (x333 x17))
(assert (x333 x187))
(assert (= (x134 x575) (ite (and (not x1433) x118 x947) (x233 x575) (x1001 x575))))
(assert (= x41 (=> (= x472 x619) x771)))
(assert (=> (< (- x1534 1) 10000) (= (x1138 x1534) (x604 x1534))))
(assert (x333 x340))
(assert (=> (> (+ 10000 1) x783) (= (x604 x783) (x1138 x783))))
(assert (= (ite (= x953 x1221) x631 (x353 x953)) (x569 x953)))
(assert (x333 x814))
(assert (=> (> (+ 10000 1) x981) (= (x604 x981) (x1138 x981))))
(assert (x333 x546))
(assert (= (x772 x508) (ite (= x508 x20) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x161 x508))))
(assert (= (or (and x1610 (not x470)) (and (not x1184) x961)) x1142))
(assert (x333 x23))
(assert (= x150 (=> (and (= x732 x925) (= (and x1564 x518) x176) (= x1564 (>= x491 x732)) (= x694 (or (not x1112) x176))) (and x694 (=> (and (= 87118632 x552) (= x739 x1178) (= x984 x646) (= true x1427) (= x454 2939843472) (= x821 x855)) x5)))))
(assert (= (x543 (x604 759532456)) 759532456))
(assert (x333 x1233))
(assert (x333 x675))
(assert (x333 x1123))
(assert (x333 x960))
(assert (=> (< (- x737 1) 10000) (= (x1138 x737) (x604 x737))))
(assert (=> (> (+ 10000 1) x414) (= (x1138 x414) (x604 x414))))
(assert (=> (> (+ 10000 1) x646) (= (x604 x646) (x1138 x646))))
(assert (x333 x538))
(assert (=> (> (+ 10000 1) x1019) (= (x604 x1019) (x1138 x1019))))
(assert (=> (< (- x1344 1) 10000) (= (x1138 x1344) (x604 x1344))))
(assert (x333 x3))
(assert (= (x604 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1138 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (< (- x967 1) 10000) (= (x1138 x967) (x604 x967))))
(assert (x333 x60))
(assert (x333 x865))
(assert (= (ite (= x169 x684) x143 (x1291 x169)) (x1119 x169)))
(assert (x333 x786))
(assert (=> (< (- x113 1) 10000) (= (x1138 x113) (x604 x113))))
(assert (= (and x1197 x1492) x1493))
(assert (x333 x189))
(assert (x333 x191))
(assert (= (x233 x1221) (ite (and x1093 (not x923) x1077 x947 x704 x118) (x1119 x1221) (ite (and x704 x1077 x118 (not x1093) x947) (x1291 x1221) (ite (and x118 x704 x947 (not x1077)) (x1041 x1221) (ite (and (not x704) x118 x947) (x824 x1221) (x327 x1221)))))))
(assert (x333 x392))
(assert (x333 x597))
(assert (x333 x1530))
(assert (= (x1561 x1221) (ite (= x955 x1221) x8 (x580 x1221))))
(assert (= (x228 x139) (ite (and x260 (not x1273) x1064 (not x1316)) (x78 x139) (ite (and x260 (not x1064) (not x1316)) (x751 x139) (ite (and x260 x1316) (x751 x139) (x711 x139))))))
(assert (= (ite (= x139 x456) x1245 (x751 x139)) (x78 x139)))
(assert (= (ite (= x836 x456) x1245 (x751 x836)) (x78 x836)))
(assert (x333 x1466))
(assert (= (x543 (x1138 x1122)) x1122))
(assert (=> (> (+ 10000 1) x1465) (= (x1138 x1465) (x604 x1465))))
(assert (= (x1073 x1040) (ite (= x789 x1040) x578 (x1561 x1040))))
(assert (= (x867 x781) (ite (= x781 x768) x725 (x712 x781))))
(assert (x232 x372))
(assert (= (x1041 x1040) (ite (= x1040 x1192) x1158 (x824 x1040))))
(assert (x333 x1067))
(assert (= (x543 (x1138 x1526)) x1526))
(assert (= x372 (x543 (x1138 x372))))
(assert (x333 x759))
(assert (x333 x644))
(assert (x333 x1289))
(assert (= (x543 (x604 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x333 x1349))
(assert (x333 x1301))
(assert (= (x233 x508) (ite (and (not x923) x1093 x947 x118 x704 x1077) (x1119 x508) (ite (and x1077 x947 x704 x118 (not x1093)) (x1291 x508) (ite (and x118 (not x1077) x704 x947) (x1041 x508) (ite (and x947 x118 (not x704)) (x824 x508) (x327 x508)))))))
(assert (= (x543 (x1138 x1476)) x1476))
(assert (x333 x29))
(assert (= 142201243 (x543 (x604 142201243))))
(assert (x1501 x1254))
(assert (x333 x70))
(assert (=> (> (+ 10000 1) x112) (= (x604 x112) (x1138 x112))))
(assert (=> (> (+ 10000 1) x538) (= (x1138 x538) (x604 x538))))
(assert (x333 x861))
(assert (= (ite (and (not x1316) x1064 (not x1273) x260) (x78 x575) (ite (and (not x1064) (not x1316) x260) (x751 x575) (ite (and x1316 x260) (x751 x575) (x711 x575)))) (x228 x575)))
(assert (x333 x537))
(assert (= (ite (= x836 x551) x1469 (x1041 x836)) (x1291 x836)))
(assert (= (ite (= x1519 x1192) x1158 (x824 x1519)) (x1041 x1519)))
(assert (= (ite (= x789 x297) x578 (x1561 x297)) (x1073 x297)))
(assert (= (x772 x575) (ite (= x575 x20) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x161 x575))))
(assert (x232 x663))
(assert (x333 x35))
(assert (= (x1041 x508) (ite (= x1192 x508) x1158 (x824 x508))))
(assert (= (x543 (x1138 x723)) x723))
(assert (x333 x784))
(assert (x232 x443))
(assert (=> (> (+ 10000 1) x1043) (= (x1138 x1043) (x604 x1043))))
(assert (x333 x402))
(assert (x333 x273))
(assert (= (x867 x142) (ite (= x768 x142) x725 (x712 x142))))
(assert (= x1610 (and x1076 x1160)))
(assert (x333 x764))
(assert (x232 x392))
(assert (= (x543 (x1138 x246)) x246))
(assert (x333 x1597))
(assert (= (=> (and (<= x714 1461501637330902918203684832716283019655932542975) (> x849 0) (> 2293535753 x1139) (= 142201243 x1139) (= x1242 (x355 (x1138 x136) (x604 9) 0)) (= x531 (x355 (x1138 x1107) x1242 0)) (= (x1482 x829) x58) (not (= x1139 87118632)) (= (x355 (x1138 x714) x531 0) x829) (= x849 (x263 (x1138 274184521717934524641157099916833587206))) (> 911411945 x1139) (not (= x1139 69947311)) (<= x58 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x278 x58) (> 468353030 x1139) (<= x1107 1461501637330902918203684832716283019655932542975) (<= 0 x58)) (=> (and (= x278 x1127) (= (and x193 x1185) x160) (= (< 0 x1127) x193) (= x984 x1175) (= 0 x109) (= x1081 x739)) x1449)) x982))
(assert (= (x78 x297) (ite (= x297 x456) x1245 (x751 x297))))
(assert (= (ite (= x1484 x894) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x438 x894)) (x824 x894)))
(assert (= (and x118 x947) x1262))
(assert (= x913 (x543 (x1138 x913))))
(assert (x333 x869))
(assert (x333 x649))
(assert (= (x1456 x836) (ite (= x759 x836) x305 (x807 x836))))
(assert (= (ite (= x1221 x508) x631 (x353 x508)) (x569 x508)))
(assert (x1418 x1254 x526))
(assert (= (x543 (x1138 x443)) x443))
(assert (=> (< (- x1006 1) 10000) (= (x1138 x1006) (x604 x1006))))
(assert (= (ite (= x957 x955) x8 (x580 x957)) (x1561 x957)))
(assert (x333 x24))
(assert (= (x1291 x1201) (ite (= x1201 x551) x1469 (x1041 x1201))))
(assert (= x113 (x543 (x1138 x113))))
(assert (=> (> (+ 10000 1) x101) (= (x1138 x101) (x604 x101))))
(assert (= (ite (= x894 x598) x562 (x971 x894)) (x751 x894)))
(assert (= (x604 1986467848) (x1138 1986467848)))
(assert (= x260 (or (and x1087 (not x959)) x948)))
(assert (x333 x1519))
(assert (= 2690754053 (x543 (x604 2690754053))))
(assert (x333 x723))
(assert (x333 x672))
(assert (=> (< (- x1166 1) 10000) (= (x1138 x1166) (x604 x1166))))
(assert (x333 x928))
(assert (x333 x666))
(assert (= (x1345 x625) 0))
(assert (x333 x1573))
(assert (= (x543 (x1138 x493)) x493))
(assert (= x349 (=> (= x935 (> x1036 0)) (and (=> x935 x596) (=> (not x935) x481)))))
(assert (=> (> (+ 10000 1) x289) (= (x1138 x289) (x604 x289))))
(assert (x333 x595))
(assert (= x474 (x543 (x1138 x474))))
(assert (x333 x102))
(assert (=> (< (- x1214 1) 10000) (= (x604 x1214) (x1138 x1214))))
(assert (= 274184521717934524641157099916833587218 (x543 (x604 274184521717934524641157099916833587218))))
(assert (= (ite (and x870 x281) (x830 x508) (x1342 x508)) (x132 x508)))
(assert (= (x543 (x1138 x1528)) x1528))
(assert (x1124 x244 x1085))
(assert (x333 x999))
(assert (= (x1561 x156) (ite (= x156 x955) x8 (x580 x156))))
(assert (x333 x368))
(assert (= (x543 (x1138 x584)) x584))
(assert (x333 x594))
(assert (x333 x1580))
(assert (x333 x175))
(assert (x232 x801))
(assert (= (x807 x836) (ite (= x836 x175) x451 (x772 x836))))
(assert (x333 x1341))
(assert (x333 x717))
(assert (x333 x1599))
(assert (= x102 (x543 (x1138 x102))))
(assert (=> (< (- x1373 1) 10000) (= (x1138 x1373) (x604 x1373))))
(assert (= (x543 (x1138 x352)) x352))
(assert (x333 x1085))
(assert (x333 x464))
(assert (=> (< (- x1275 1) 10000) (= (x1138 x1275) (x604 x1275))))
(assert (x333 x1446))
(assert (x333 x910))
(assert (x333 x1481))
(assert (x333 x1346))
(assert (= x1541 (x543 (x1138 x1541))))
(assert (x333 x1315))
(assert (= 649617121 (x543 (x604 649617121))))
(assert (= x864 (=> (= 0 x895) x247)))
(assert (= (ite (= x456 x1221) x631 (x353 x456)) (x569 x456)))
(assert (x333 x111))
(assert (= (x774 x120) (ite (and x260 x1472) (x752 x120) (x1047 x120))))
(assert (x333 x135))
(assert (= x1087 x1464))
(assert (= x806 (x543 (x1138 x806))))
(assert (x333 x1226))
(assert (= x1487 (=> (and (<= 0 x775) (> x67 0) (not (> 2690754053 x405)) (not (= x405 2690754053)) (= x503 (x355 (x1138 x652) (x604 5) 0)) (= x1152 x775) (= (x355 (x1138 x474) x503 0) x1297) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x775) (not (= x405 2743102681)) (<= x474 1461501637330902918203684832716283019655932542975) (not (= x405 2764855426)) (= (x263 (x1138 274184521717934524641157099916833587206)) x67) (> 2960351575 x405) (= x775 (x1532 x1297)) (= 2798343961 x405) (not (> 2293535753 x405))) (=> (and (= x447 x739) (= x855 x690) (= x1613 x506) (= x491 x1152) (= x754 x984)) x1403))))
(assert (x232 x967))
(assert (= (x543 (x1138 x1141)) x1141))
(assert (= x1272 (=> (= x1497 x895) x247)))
(assert (= x1499 (x543 (x1138 x1499))))
(assert (= (x233 x625) (ite (and x704 (not x923) x947 x1077 x1093 x118) (x1119 x625) (ite (and (not x1093) x704 x1077 x118 x947) (x1291 x625) (ite (and x704 x118 x947 (not x1077)) (x1041 x625) (ite (and x947 x118 (not x704)) (x824 x625) (x327 x625)))))))
(assert (= (x543 (x1138 x850)) x850))
(assert (= x1367 x645))
(assert (x232 x1166))
(assert (x333 x1469))
(assert (x333 x556))
(assert (x333 x1192))
(assert (= (ite (= x1221 x139) x631 (x353 x139)) (x569 x139)))
(assert (x333 x773))
(assert (x333 x520))
(assert (x333 x343))
(assert (x333 x1200))
(assert (= (x569 x1389) (ite (= x1389 x1221) x631 (x353 x1389))))
(assert (= (x543 (x604 1968616202)) 1968616202))
(assert (x333 x664))
(assert (x333 x216))
(assert (= (x543 (x1138 x1370)) x1370))
(assert (= (ite (= x625 x955) x8 (x580 x625)) (x1561 x625)))
(assert (x333 x158))
(assert (= (ite (and x1262 x1434) (x1271 x1040) (x46 x1040)) (x523 x1040)))
(assert (x333 x267))
(assert (x333 x242))
(assert (= (and x1087 x959) x21))
(assert (= x1460 (x543 (x1138 x1460))))
(assert (x232 x459))
(assert (=> (< (- x514 1) 10000) (= (x604 x514) (x1138 x514))))
(assert (x232 x1107))
(assert (x333 x575))
(assert (= (ite (= x955 x1040) x8 (x580 x1040)) (x1561 x1040)))
(assert (=> (< (- x158 1) 10000) (= (x604 x158) (x1138 x158))))
(assert (x333 x458))
(assert (= (x523 x953) (ite (and x1434 x1262) (x1271 x953) (x46 x953))))
(assert (= (x543 (x1138 x550)) x550))
(assert (x333 x1538))
(assert (= (x134 x625) (ite (and x947 (not x1433) x118) (x233 x625) (x1001 x625))))
(assert (x333 x103))
(assert (=> (> (+ 10000 1) x1177) (= (x604 x1177) (x1138 x1177))))
(assert (x333 x826))
(assert (= (x772 x894) (ite (= x20 x894) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x161 x894))))
(assert (x333 x806))
(assert (x232 x897))
(assert (x333 x426))
(assert (=> (< (- x428 1) 10000) (= (x1138 x428) (x604 x428))))
(assert (x333 x44))
(assert (x333 x1612))
(assert (x333 x351))
(assert (= (x233 x1040) (ite (and x704 (not x923) x118 x1093 x1077 x947) (x1119 x1040) (ite (and (not x1093) x118 x704 x1077 x947) (x1291 x1040) (ite (and x118 x704 (not x1077) x947) (x1041 x1040) (ite (and (not x704) x947 x118) (x824 x1040) (x327 x1040)))))))
(assert (x333 x734))
(assert (= (x543 (x604 1889567281)) 1889567281))
(assert (= (ite (= x894 x551) x1469 (x1041 x894)) (x1291 x894)))
(assert (= (x228 x894) (ite (and x260 (not x1273) (not x1316) x1064) (x78 x894) (ite (and (not x1316) (not x1064) x260) (x751 x894) (ite (and x260 x1316) (x751 x894) (x711 x894))))))
(assert (x333 x1588))
(assert (x333 x259))
(assert (x333 x849))
(assert (x333 x598))
(assert (= (ite (= x789 x169) x578 (x1561 x169)) (x1073 x169)))
(assert (x333 x1139))
(assert (x232 x734))
(assert (x333 x15))
(check-sat)
