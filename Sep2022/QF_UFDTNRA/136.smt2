(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x6 0)) (((x439 (x210 Real)) (x894 (x23 x6) (x678 Real)) (x287 (x325 x6) (x738 x6) (x222 Real)))))
(declare-fun x42 () Real)
(declare-fun x356 () Real)
(declare-fun x721 () Real)
(declare-fun x628 () Real)
(declare-fun x306 () Real)
(declare-fun x256 () Real)
(declare-fun x173 () Real)
(declare-fun x46 (x6) Real)
(declare-fun x576 () Real)
(declare-fun x224 () Bool)
(declare-fun x377 () Real)
(declare-fun x757 () Real)
(declare-fun x510 () Real)
(declare-fun x491 () Real)
(declare-fun x390 () Bool)
(declare-fun x315 (Real) Real)
(declare-fun x308 () Real)
(declare-fun x654 () Real)
(declare-fun x371 () Real)
(declare-fun x360 () Real)
(declare-fun x25 () Real)
(declare-fun x60 () Bool)
(declare-fun x194 () Real)
(declare-fun x454 () Bool)
(declare-fun x822 () Bool)
(declare-fun x180 () Real)
(declare-fun x746 () Real)
(declare-fun x260 () Real)
(declare-fun x253 () Real)
(declare-fun x226 () Real)
(declare-fun x611 () Real)
(declare-fun x535 () Bool)
(declare-fun x401 () Real)
(declare-fun x575 () Real)
(declare-fun x124 () Bool)
(declare-fun x797 () Bool)
(declare-fun x160 () Real)
(declare-fun x855 () Bool)
(declare-fun x593 () Real)
(declare-fun x237 () Real)
(declare-fun x622 (Real) Real)
(declare-fun x27 () x6)
(declare-fun x416 () Bool)
(declare-fun x336 () Real)
(declare-fun x255 () Real)
(declare-fun x463 () Real)
(declare-fun x706 () x6)
(declare-fun x862 () Real)
(declare-fun x34 () Real)
(declare-fun x752 () Bool)
(declare-fun x750 (Real) Real)
(declare-fun x193 () Real)
(declare-fun x565 () Real)
(declare-fun x892 () Real)
(declare-fun x63 () Bool)
(declare-fun x83 () Real)
(declare-fun x366 () Real)
(declare-fun x845 () Real)
(declare-fun x399 () Bool)
(declare-fun x644 () Real)
(declare-fun x103 () Bool)
(declare-fun x747 () Real)
(declare-fun x11 () Real)
(declare-fun x606 () Real)
(declare-fun x895 () Real)
(declare-fun x935 () Real)
(declare-fun x503 () Bool)
(declare-fun x766 () Bool)
(declare-fun x551 () Real)
(declare-fun x458 () Real)
(declare-fun x102 () Real)
(declare-fun x898 () Real)
(declare-fun x165 () Real)
(declare-fun x161 () Bool)
(declare-fun x643 (Real) Real)
(declare-fun x846 (Real Real) Real)
(declare-fun x424 () Real)
(declare-fun x558 () Real)
(declare-fun x689 () Real)
(declare-fun x876 () Real)
(declare-fun x814 (Real Real) Real)
(declare-fun x674 () Bool)
(declare-fun x811 (x6) Real)
(declare-fun x808 () Bool)
(declare-fun x574 () Real)
(declare-fun x493 () Real)
(declare-fun x68 () Real)
(declare-fun x447 () Bool)
(declare-fun x398 () Bool)
(declare-fun x316 () Real)
(declare-fun x298 () Real)
(declare-fun x265 () Bool)
(declare-fun x119 () Real)
(declare-fun x309 () Bool)
(declare-fun x259 () Real)
(declare-fun x788 () Real)
(declare-fun x840 () Real)
(declare-fun x847 () Bool)
(declare-fun x65 () Real)
(declare-fun x730 () Real)
(declare-fun x283 () Real)
(declare-fun x141 () Real)
(declare-fun x601 () Real)
(declare-fun x19 () Real)
(declare-fun x733 () Real)
(declare-fun x314 () Real)
(declare-fun x418 () Real)
(declare-fun x344 () Bool)
(declare-fun x359 () Real)
(declare-fun x163 (Real) Real)
(declare-fun x122 () Bool)
(declare-fun x543 () Bool)
(declare-fun x243 () Real)
(declare-fun x329 () Real)
(declare-fun x483 () Real)
(declare-fun x627 () Real)
(declare-fun x518 () Bool)
(declare-fun x792 () Real)
(declare-fun x82 () Real)
(declare-fun x451 () Real)
(declare-fun x481 () Bool)
(declare-fun x890 () Bool)
(declare-fun x686 () Real)
(declare-fun x632 () Bool)
(declare-fun x79 () Real)
(declare-fun x755 () Real)
(declare-fun x138 () Real)
(declare-fun x239 () Real)
(declare-fun x213 () Real)
(declare-fun x540 () Real)
(declare-fun x610 () Real)
(declare-fun x791 () Real)
(declare-fun x470 () Real)
(declare-fun x562 () Real)
(declare-fun x350 (Real) Real)
(declare-fun x299 () Real)
(declare-fun x615 () Real)
(declare-fun x753 () Real)
(declare-fun x126 () Real)
(declare-fun x669 () Real)
(declare-fun x116 () Real)
(declare-fun x677 () x6)
(declare-fun x850 () Real)
(declare-fun x829 () Real)
(declare-fun x43 () Real)
(declare-fun x426 () Real)
(declare-fun x72 () Real)
(declare-fun x751 () Real)
(declare-fun x587 () Real)
(declare-fun x781 () Bool)
(declare-fun x584 () Real)
(declare-fun x896 () Bool)
(declare-fun x880 () Bool)
(declare-fun x378 () Real)
(declare-fun x856 () Real)
(declare-fun x158 () Bool)
(declare-fun x109 () Real)
(declare-fun x768 () Bool)
(declare-fun x604 () Real)
(declare-fun x70 () Real)
(declare-fun x585 () Real)
(declare-fun x335 () Bool)
(declare-fun x149 () Real)
(declare-fun x425 () Real)
(declare-fun x172 () Real)
(declare-fun x347 (Real) Real)
(declare-fun x5 (Real) Real)
(declare-fun x128 () Real)
(declare-fun x16 () Real)
(declare-fun x303 () Real)
(declare-fun x206 () Real)
(declare-fun x771 () Bool)
(declare-fun x145 () Real)
(declare-fun x365 () Real)
(declare-fun x387 (Real) Real)
(declare-fun x887 () Real)
(declare-fun x115 (Real) Real)
(declare-fun x777 () Real)
(declare-fun x793 () Real)
(declare-fun x566 () Bool)
(declare-fun x462 () Real)
(declare-fun x137 () Real)
(declare-fun x515 () Real)
(declare-fun x807 () Bool)
(declare-fun x667 () Real)
(declare-fun x74 () Real)
(declare-fun x254 () Real)
(declare-fun x567 (Real) Real)
(declare-fun x189 () Real)
(declare-fun x434 () Bool)
(declare-fun x596 () x6)
(declare-fun x687 () Real)
(declare-fun x414 () Real)
(declare-fun x428 () Bool)
(declare-fun x464 () Real)
(declare-fun x286 () Bool)
(declare-fun x758 () Real)
(declare-fun x844 () Bool)
(declare-fun x650 () Bool)
(declare-fun x859 (Real) Real)
(declare-fun x564 () Real)
(declare-fun x906 () Real)
(declare-fun x659 () Real)
(declare-fun x514 () Real)
(declare-fun x536 () Real)
(declare-fun x929 () Real)
(declare-fun x232 () Bool)
(declare-fun x369 () Real)
(declare-fun x291 () Real)
(declare-fun x934 () Real)
(declare-fun x142 () Bool)
(declare-fun x64 () Real)
(declare-fun x269 () Real)
(declare-fun x459 (Real) Real)
(declare-fun x105 () Real)
(declare-fun x489 () Real)
(declare-fun x204 () Real)
(declare-fun x497 () Real)
(declare-fun x714 () Bool)
(declare-fun x694 () Real)
(declare-fun x429 (Real) Real)
(declare-fun x672 () Real)
(declare-fun x485 () Real)
(declare-fun x731 () Real)
(declare-fun x66 () Real)
(declare-fun x301 () Real)
(declare-fun x278 () Bool)
(declare-fun x153 () Bool)
(declare-fun x281 () Real)
(declare-fun x367 () Bool)
(declare-fun x854 () Real)
(declare-fun x605 () Real)
(declare-fun x759 () Real)
(declare-fun x594 () Bool)
(declare-fun x646 () Bool)
(declare-fun x212 () Real)
(declare-fun x412 () Bool)
(declare-fun x176 () Real)
(declare-fun x728 (Real) Real)
(declare-fun x101 () Real)
(declare-fun x182 () Real)
(declare-fun x582 () Bool)
(declare-fun x616 () Real)
(declare-fun x427 (Real) Real)
(declare-fun x858 () Real)
(declare-fun x89 () Real)
(declare-fun x92 (x6) Real)
(declare-fun x787 () Real)
(declare-fun x305 () Real)
(declare-fun x289 () Real)
(declare-fun x55 () Real)
(declare-fun x691 () Real)
(declare-fun x550 () Real)
(declare-fun x307 () Real)
(declare-fun x266 () Bool)
(declare-fun x135 () Real)
(declare-fun x684 () Bool)
(declare-fun x716 () Real)
(declare-fun x343 () Bool)
(declare-fun x608 (x6) Real)
(declare-fun x184 () Real)
(declare-fun x919 () Real)
(declare-fun x508 () Bool)
(declare-fun x544 () Real)
(declare-fun x494 () Real)
(declare-fun x900 () Bool)
(declare-fun x294 () Bool)
(declare-fun x296 () Real)
(declare-fun x132 () Real)
(declare-fun x897 () Real)
(declare-fun x521 () Real)
(declare-fun x803 () Real)
(declare-fun x69 () Real)
(declare-fun x852 () Real)
(declare-fun x38 () Real)
(declare-fun x52 () x6)
(declare-fun x357 () Real)
(declare-fun x13 () Bool)
(declare-fun x649 () Bool)
(declare-fun x277 () x6)
(declare-fun x240 () Real)
(declare-fun x430 () Real)
(declare-fun x637 () Real)
(declare-fun x799 (Real) Real)
(declare-fun x442 () Real)
(declare-fun x290 () Real)
(declare-fun x740 () Real)
(declare-fun x268 () Real)
(declare-fun x438 () Real)
(declare-fun x926 (Real) Real)
(declare-fun x455 () Real)
(declare-fun x81 () Real)
(declare-fun x238 () Bool)
(declare-fun x41 () Real)
(declare-fun x188 () Real)
(declare-fun x274 () Real)
(declare-fun x310 () Real)
(declare-fun x417 () Real)
(declare-fun x67 (Real) Real)
(declare-fun x531 () x6)
(declare-fun x264 () Real)
(declare-fun x931 () Real)
(declare-fun x603 () Real)
(declare-fun x512 () Bool)
(declare-fun x529 () Bool)
(declare-fun x382 () Real)
(declare-fun x45 () Real)
(declare-fun x215 (Real) Real)
(declare-fun x863 () Real)
(declare-fun x484 () Real)
(declare-fun x732 () Bool)
(declare-fun x332 () Real)
(declare-fun x715 () Bool)
(declare-fun x571 () Real)
(declare-fun x496 () Real)
(declare-fun x904 () x6)
(declare-fun x385 () Real)
(declare-fun x118 () Bool)
(declare-fun x15 () Real)
(declare-fun x883 () Bool)
(declare-fun x635 (Real) Real)
(declare-fun x783 () Real)
(declare-fun x868 () Real)
(declare-fun x710 () Real)
(declare-fun x211 () Real)
(declare-fun x30 () Real)
(declare-fun x653 () Bool)
(declare-fun x381 () Real)
(declare-fun x284 () Bool)
(declare-fun x473 () Bool)
(declare-fun x762 () Real)
(declare-fun x810 (Real) Real)
(declare-fun x875 () Real)
(declare-fun x404 () Real)
(declare-fun x790 () Real)
(declare-fun x86 (Real) Real)
(declare-fun x372 () Bool)
(declare-fun x33 (Real) Real)
(declare-fun x668 () Real)
(declare-fun x581 () Bool)
(declare-fun x229 (Real) Real)
(declare-fun x235 () x6)
(declare-fun x522 () Real)
(declare-fun x490 () Real)
(declare-fun x613 () Real)
(declare-fun x197 () Real)
(declare-fun x903 () Real)
(declare-fun x698 () Real)
(declare-fun x673 () Bool)
(declare-fun x146 () Real)
(declare-fun x541 () Real)
(declare-fun x112 () Bool)
(declare-fun x619 () Real)
(declare-fun x349 () Real)
(declare-fun x10 () Real)
(declare-fun x500 () Real)
(declare-fun x889 () Real)
(declare-fun x685 () Real)
(declare-fun x486 () Real)
(declare-fun x695 () Real)
(declare-fun x661 (x6) Real)
(declare-fun x832 () Bool)
(declare-fun x923 () Bool)
(declare-fun x827 (Real) Real)
(declare-fun x681 (Real) Real)
(declare-fun x317 () Real)
(declare-fun x775 () Bool)
(declare-fun x282 () Bool)
(declare-fun x409 () Real)
(declare-fun x300 () Bool)
(declare-fun x835 () Real)
(declare-fun x507 () Real)
(declare-fun x337 () Bool)
(declare-fun x472 () Real)
(declare-fun x192 () Bool)
(declare-fun x683 () Real)
(declare-fun x607 () Real)
(declare-fun x469 () Real)
(declare-fun x456 () Bool)
(declare-fun x796 () Real)
(declare-fun x561 () Bool)
(declare-fun x918 () Real)
(declare-fun x174 () Real)
(declare-fun x600 () Real)
(declare-fun x261 () Bool)
(declare-fun x538 () Real)
(declare-fun x656 () Bool)
(declare-fun x123 () Real)
(declare-fun x597 () Bool)
(declare-fun x389 () x6)
(declare-fun x933 () Bool)
(declare-fun x207 () Real)
(declare-fun x545 () Bool)
(declare-fun x910 () Real)
(declare-fun x877 () Real)
(declare-fun x598 () Bool)
(declare-fun x871 () Real)
(declare-fun x693 () Bool)
(declare-fun x319 (Real) Real)
(declare-fun x44 () Real)
(declare-fun x671 () Bool)
(declare-fun x327 () Real)
(declare-fun x881 () Real)
(declare-fun x448 () Real)
(declare-fun x789 () Real)
(declare-fun x107 () Bool)
(declare-fun x113 () Real)
(declare-fun x927 () Real)
(declare-fun x220 () Real)
(declare-fun x410 () Real)
(declare-fun x802 () Real)
(declare-fun x563 () Real)
(declare-fun x31 () Real)
(declare-fun x133 () Real)
(declare-fun x134 () Real)
(declare-fun x724 (Real) Real)
(declare-fun x40 () Bool)
(declare-fun x834 () Real)
(declare-fun x249 () Bool)
(declare-fun x437 () Real)
(declare-fun x364 () Real)
(declare-fun x509 () Real)
(declare-fun x711 () Bool)
(declare-fun x773 () Real)
(declare-fun x443 (x6) Real)
(declare-fun x838 () Real)
(declare-fun x121 () Real)
(declare-fun x321 () Real)
(declare-fun x384 () Bool)
(declare-fun x432 () Real)
(declare-fun x798 (Real) Real)
(declare-fun x227 () Real)
(declare-fun x50 () Real)
(declare-fun x311 () Bool)
(declare-fun x218 () Real)
(declare-fun x785 () Bool)
(declare-fun x916 (Real Real) Real)
(declare-fun x495 () Bool)
(declare-fun x725 () Real)
(declare-fun x813 () Real)
(declare-fun x720 () Real)
(declare-fun x800 () Real)
(declare-fun x866 () Real)
(declare-fun x707 () Real)
(declare-fun x761 () Real)
(declare-fun x823 () Bool)
(declare-fun x675 () Bool)
(declare-fun x111 () Real)
(declare-fun x764 () Real)
(declare-fun x440 () Real)
(declare-fun x833 () Real)
(declare-fun x899 () Real)
(declare-fun x375 (Real) Real)
(declare-fun x170 () Bool)
(declare-fun x579 () Bool)
(declare-fun x99 () Bool)
(declare-fun x18 () Real)
(declare-fun x338 () Real)
(declare-fun x54 () Bool)
(declare-fun x12 () Real)
(declare-fun x26 () Real)
(declare-fun x420 () Bool)
(declare-fun x148 () Real)
(declare-fun x241 () Real)
(declare-fun x175 () Real)
(declare-fun x660 () Real)
(declare-fun x110 () Real)
(declare-fun x633 () Bool)
(declare-fun x621 () Real)
(declare-fun x47 () Real)
(declare-fun x354 () Real)
(declare-fun x552 () Real)
(declare-fun x884 () Bool)
(declare-fun x358 () Bool)
(declare-fun x709 () Bool)
(declare-fun x223 () Real)
(declare-fun x273 () Bool)
(declare-fun x76 () Real)
(declare-fun x251 () x6)
(declare-fun x735 () Real)
(declare-fun x51 () Real)
(declare-fun x774 () Real)
(declare-fun x723 () Real)
(declare-fun x190 () Real)
(declare-fun x461 () Bool)
(declare-fun x513 () Real)
(declare-fun x901 () Real)
(declare-fun x769 () Real)
(declare-fun x131 () x6)
(declare-fun x14 () Real)
(declare-fun x422 () Bool)
(declare-fun x506 () Real)
(declare-fun x861 () Bool)
(declare-fun x517 () Real)
(declare-fun x276 () Real)
(declare-fun x93 () Real)
(declare-fun x408 () Real)
(declare-fun x280 (Real) Real)
(declare-fun x917 () Real)
(declare-fun x688 () Bool)
(declare-fun x641 () Bool)
(declare-fun x419 () Bool)
(declare-fun x713 () Real)
(declare-fun x748 () Real)
(declare-fun x828 (Real) Real)
(declare-fun x701 () Real)
(declare-fun x595 () Real)
(declare-fun x157 () Real)
(declare-fun x90 () Real)
(declare-fun x634 () Real)
(declare-fun x230 () Real)
(declare-fun x9 () Real)
(declare-fun x94 () x6)
(declare-fun x905 () Real)
(declare-fun x217 () Real)
(declare-fun x322 () Bool)
(declare-fun x511 () Real)
(declare-fun x205 () Real)
(declare-fun x849 () Real)
(declare-fun x203 () Real)
(declare-fun x209 () Bool)
(declare-fun x532 () Real)
(declare-fun x465 () Bool)
(declare-fun x809 () Real)
(declare-fun x73 () Bool)
(declare-fun x922 () Real)
(declare-fun x88 () Real)
(declare-fun x928 () x6)
(declare-fun x423 () Real)
(declare-fun x397 () Real)
(declare-fun x247 () Bool)
(declare-fun x352 () Real)
(declare-fun x383 () Real)
(declare-fun x826 () Real)
(declare-fun x819 () Real)
(declare-fun x78 () Real)
(declare-fun x754 () Real)
(declare-fun x599 () Real)
(declare-fun x323 () Real)
(declare-fun x84 (Real) Real)
(declare-fun x592 () Bool)
(declare-fun x912 () Real)
(declare-fun x97 () Real)
(declare-fun x741 () Real)
(declare-fun x37 () Real)
(declare-fun x370 () Real)
(declare-fun x530 () Real)
(declare-fun x433 () Real)
(declare-fun x2 () Real)
(declare-fun x885 () Real)
(declare-fun x85 (x6) Real)
(declare-fun x214 (Real Real) Real)
(declare-fun x330 (Real) x6)
(declare-fun x35 () Bool)
(declare-fun x4 () Bool)
(declare-fun x373 () Bool)
(declare-fun x815 () Bool)
(declare-fun x772 () Bool)
(declare-fun x231 () Bool)
(declare-fun x830 () Real)
(declare-fun x452 () Real)
(declare-fun x108 () Bool)
(declare-fun x125 () Bool)
(declare-fun x293 () Real)
(declare-fun x636 () Real)
(declare-fun x441 () Real)
(declare-fun x888 () Real)
(declare-fun x664 () Real)
(declare-fun x168 () Real)
(declare-fun x804 () Real)
(declare-fun x244 () Real)
(declare-fun x171 () Real)
(declare-fun x756 () Real)
(declare-fun x662 () Real)
(declare-fun x556 () Real)
(declare-fun x8 () Real)
(declare-fun x391 () Real)
(declare-fun x7 (Real Real) Real)
(declare-fun x642 () Real)
(declare-fun x202 () Bool)
(declare-fun x295 () Real)
(declare-fun x704 () Real)
(declare-fun x482 () Bool)
(declare-fun x505 (Real) Real)
(declare-fun x403 () Real)
(declare-fun x1 () Bool)
(declare-fun x475 () Real)
(declare-fun x340 () Bool)
(declare-fun x129 () Real)
(declare-fun x98 () Real)
(declare-fun x304 () Real)
(declare-fun x765 () Real)
(declare-fun x178 (Real) Real)
(declare-fun x341 () Bool)
(declare-fun x435 () Bool)
(declare-fun x219 () Real)
(declare-fun x583 () Real)
(declare-fun x61 () Real)
(declare-fun x841 () Bool)
(declare-fun x542 () Bool)
(declare-fun x651 () Bool)
(declare-fun x626 () Real)
(declare-fun x812 (Real Real) Real)
(declare-fun x379 () Real)
(declare-fun x106 () Real)
(declare-fun x386 () Real)
(declare-fun x183 () Bool)
(declare-fun x487 () Real)
(declare-fun x891 () Real)
(declare-fun x719 () Real)
(declare-fun x150 () Real)
(declare-fun x702 () Real)
(declare-fun x49 (Real) Real)
(declare-fun x196 () Real)
(declare-fun x400 () x6)
(declare-fun x117 () Bool)
(declare-fun x476 () Real)
(declare-fun x857 () Real)
(declare-fun x831 () Real)
(declare-fun x257 () Real)
(declare-fun x56 () Real)
(declare-fun x436 () Real)
(declare-fun x620 () Real)
(declare-fun x480 () Bool)
(declare-fun x795 () Real)
(declare-fun x776 () Real)
(declare-fun x806 () Real)
(declare-fun x658 (x6) Real)
(declare-fun x860 () Real)
(declare-fun x57 () Bool)
(declare-fun x334 () Bool)
(declare-fun x648 () Real)
(declare-fun x873 () Bool)
(declare-fun x167 () Real)
(declare-fun x479 () Real)
(declare-fun x62 () Real)
(declare-fun x700 (Real) Real)
(declare-fun x59 () Real)
(declare-fun x104 () Real)
(declare-fun x609 () Real)
(declare-fun x527 () Real)
(declare-fun x95 () Real)
(declare-fun x351 (Real) Real)
(declare-fun x820 () Bool)
(declare-fun x450 () Real)
(declare-fun x328 () Real)
(declare-fun x402 () Bool)
(declare-fun x794 () Real)
(declare-fun x100 () Bool)
(declare-fun x638 () Real)
(declare-fun x782 () Real)
(declare-fun x376 () Real)
(declare-fun x488 () Real)
(declare-fun x843 () Real)
(declare-fun x749 () Real)
(declare-fun x374 () Real)
(declare-fun x640 () Bool)
(declare-fun x248 () Real)
(declare-fun x560 () Real)
(declare-fun x524 () Bool)
(declare-fun x779 () Real)
(declare-fun x21 () Real)
(declare-fun x837 () Real)
(declare-fun x457 () Real)
(declare-fun x663 () Real)
(declare-fun x572 () Real)
(declare-fun x874 () Real)
(declare-fun x474 () Bool)
(declare-fun x623 (Real) Real)
(declare-fun x22 () Bool)
(declare-fun x3 () Real)
(declare-fun x676 () Real)
(declare-fun x297 () Bool)
(declare-fun x164 () Real)
(declare-fun x549 () Real)
(declare-fun x618 () Real)
(declare-fun x200 () Real)
(declare-fun x528 () Real)
(declare-fun x744 () Real)
(declare-fun x801 () x6)
(declare-fun x75 () Real)
(declare-fun x313 () Real)
(declare-fun x737 () Real)
(declare-fun x547 () Real)
(declare-fun x186 () Real)
(declare-fun x91 () Real)
(declare-fun x39 () Real)
(declare-fun x199 () Real)
(declare-fun x407 () Real)
(declare-fun x320 () Real)
(declare-fun x413 () Real)
(declare-fun x363 () Real)
(declare-fun x553 () Real)
(declare-fun x573 () Real)
(declare-fun x742 () Real)
(declare-fun x393 () Real)
(declare-fun x233 () Real)
(declare-fun x285 (Real) Real)
(declare-fun x120 () Bool)
(declare-fun x778 () Real)
(declare-fun x908 () Real)
(declare-fun x415 () Real)
(declare-fun x925 () Bool)
(declare-fun x893 () Bool)
(declare-fun x236 () Real)
(declare-fun x380 () Real)
(declare-fun x924 () Bool)
(declare-fun x534 () Real)
(declare-fun x878 () Real)
(declare-fun x533 () Bool)
(declare-fun x784 () Real)
(declare-fun x460 () Real)
(declare-fun x712 () Real)
(declare-fun x722 () Real)
(declare-fun x557 () Bool)
(declare-fun x162 () Real)
(declare-fun x554 () Bool)
(declare-fun x467 () Real)
(declare-fun x195 () Real)
(declare-fun x127 (Real) Real)
(declare-fun x333 () Real)
(declare-fun x466 () Real)
(declare-fun x736 () Real)
(declare-fun x501 () Real)
(declare-fun x361 () Real)
(declare-fun x727 () Real)
(declare-fun x865 () Real)
(declare-fun x872 () Real)
(declare-fun x29 () Real)
(define-fun x639 ((x6 x6) (x312 Real)) x6 (ite ((_ is x894) x6) (x894 (x23 x6) (+ x312 (x678 x6))) (ite ((_ is x287) x6) (x287 (x325 x6) (x738 x6) (+ x312 (x222 x6))) (x439 (+ x312 (x210 x6))))))
(define-fun x767 ((x139 Real)) Real (ite (and (>= x139 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x139)) x139 (- x139 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x864 ((x139 Real)) Real (ite (and (< x139 0) (>= x139 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x139 115792089237316195423570985008687907853269984665640564039457584007913129639936) x139))
(define-fun x882 ((x477 Real)) Bool (and (>= x477 0) (< x477 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x612 ((x477 Real)) Bool (and (= x477 (x812 x477 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x812 115792089237316195423570985008687907853269984665640564039457584007913129639935 x477) x477)))
(define-fun x546 ((x477 Real)) Bool (and (= (x812 0 x477) 0) (= 0 (x812 x477 0))))
(define-fun x699 ((x477 Real)) Bool (= (x812 x477 x477) x477))
(define-fun x342 ((x477 Real)) Bool (and (x612 x477) (x546 x477) (x699 x477)))
(define-fun x821 ((x477 Real)) Bool (= (x812 20282409603651670423947251286015 x477) (x812 20282409603651670423947251286015 (x812 20282409603651670423947251286015 x477))))
(define-fun x932 ((x477 Real)) Bool (=> (and (<= 0 x477) (> 20282409603651670423947251286016 x477)) (= x477 (x812 20282409603651670423947251286015 x477))))
(define-fun x690 ((x477 Real)) Bool (=> (= (x812 20282409603651670423947251286015 x477) x477) (and (< x477 20282409603651670423947251286016) (<= 0 x477))))
(define-fun x216 ((x477 Real)) Bool (=> (and (< x477 40564819207303340847894502572032) (>= x477 20282409603651670423947251286016)) (= (- x477 20282409603651670423947251286016) (x812 20282409603651670423947251286015 x477))))
(define-fun x302 ((x477 Real) (x362 Real)) Bool (and (= x477 (+ (* 20282409603651670423947251286016 x362) (x812 20282409603651670423947251286015 x477))) (<= 0 x362)))
(define-fun x471 ((x477 Real) (x271 Real)) Bool (and (x216 x477) (x932 x477) (x690 x477) (x821 x477) (x302 x477 x271)))
(define-fun x468 ((x477 Real) (x362 Real)) Bool (= (x812 x362 x477) (x812 x477 x362)))
(define-fun x909 ((x477 Real) (x362 Real)) Bool (and (=> (>= x477 0) (<= (x812 x477 x362) x477)) (<= 0 (x812 x477 x362)) (=> (<= 0 x362) (>= x362 (x812 x477 x362)))))
(define-fun x144 ((x477 Real) (x362 Real)) Bool (and (x909 x477 x362) (x468 x477 x362)))
(define-fun x696 ((x477 Real) (x271 Real)) Bool (and (x144 x477 20282409603651670423947251286015) (x471 x477 x271)))
(define-fun x177 ((x477 Real)) Bool (= (ite (> 10141204801825835211973625643008 (x812 x477 20282409603651670423947251286015)) (x812 x477 20282409603651670423947251286015) (+ (x812 x477 20282409603651670423947251286015) 115792089237316195423570985008687907853269984645358154435805913583965878353920)) (x681 x477)))
(define-fun x198 ((x477 Real)) Bool (= (x812 1 x477) (x812 1 (x812 1 x477))))
(define-fun x388 ((x477 Real)) Bool (=> (and (< x477 2) (>= x477 0)) (= x477 (x812 1 x477))))
(define-fun x780 ((x477 Real)) Bool (=> (= x477 (x812 1 x477)) (and (< x477 2) (<= 0 x477))))
(define-fun x187 ((x477 Real)) Bool (=> (and (> 4 x477) (<= 2 x477)) (= (x812 1 x477) (- x477 2))))
(define-fun x590 ((x477 Real) (x362 Real)) Bool (and (>= x362 0) (= (+ (x812 1 x477) (* x362 2)) x477)))
(define-fun x526 ((x477 Real) (x271 Real)) Bool (and (x198 x477) (x187 x477) (x388 x477) (x590 x477 x271) (x780 x477)))
(define-fun x717 ((x477 Real) (x271 Real)) Bool (and (x144 x477 1) (x526 x477 x271)))
(define-fun x353 ((x477 Real)) Bool (= (x812 255 (x812 255 x477)) (x812 255 x477)))
(define-fun x568 ((x477 Real)) Bool (=> (and (<= 0 x477) (< x477 256)) (= x477 (x812 255 x477))))
(define-fun x539 ((x477 Real)) Bool (=> (= x477 (x812 255 x477)) (and (> 256 x477) (>= x477 0))))
(define-fun x181 ((x477 Real)) Bool (=> (and (<= 256 x477) (< x477 512)) (= (- x477 256) (x812 255 x477))))
(define-fun x705 ((x477 Real) (x362 Real)) Bool (and (= (+ (x812 255 x477) (* x362 256)) x477) (<= 0 x362)))
(define-fun x36 ((x477 Real) (x271 Real)) Bool (and (x353 x477) (x539 x477) (x705 x477 x271) (x181 x477) (x568 x477)))
(define-fun x614 ((x477 Real) (x271 Real)) Bool (and (x144 x477 255) (x36 x477 x271)))
(define-fun x718 ((x477 Real)) Bool (= (x812 1461501637330902918203684832716283019655932542975 x477) (x812 1461501637330902918203684832716283019655932542975 (x812 1461501637330902918203684832716283019655932542975 x477))))
(define-fun x786 ((x477 Real)) Bool (=> (and (<= 0 x477) (< x477 1461501637330902918203684832716283019655932542976)) (= x477 (x812 1461501637330902918203684832716283019655932542975 x477))))
(define-fun x589 ((x477 Real)) Bool (=> (= (x812 1461501637330902918203684832716283019655932542975 x477) x477) (and (> 1461501637330902918203684832716283019655932542976 x477) (>= x477 0))))
(define-fun x208 ((x477 Real)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x477) (< x477 2923003274661805836407369665432566039311865085952)) (= (x812 1461501637330902918203684832716283019655932542975 x477) (- x477 1461501637330902918203684832716283019655932542976))))
(define-fun x348 ((x477 Real) (x362 Real)) Bool (and (<= 0 x362) (= x477 (+ (* x362 1461501637330902918203684832716283019655932542976) (x812 1461501637330902918203684832716283019655932542975 x477)))))
(define-fun x586 ((x477 Real) (x271 Real)) Bool (and (x589 x477) (x208 x477) (x786 x477) (x718 x477) (x348 x477 x271)))
(define-fun x523 ((x477 Real) (x271 Real)) Bool (and (x586 x477 x271) (x144 x477 1461501637330902918203684832716283019655932542975)))
(define-fun x569 ((x477 Real)) Bool (= (x812 65535 x477) (x812 65535 (x812 65535 x477))))
(define-fun x185 ((x477 Real)) Bool (=> (and (> 65536 x477) (<= 0 x477)) (= (x812 65535 x477) x477)))
(define-fun x805 ((x477 Real)) Bool (=> (= (x812 65535 x477) x477) (and (> 65536 x477) (>= x477 0))))
(define-fun x578 ((x477 Real)) Bool (=> (and (>= x477 65536) (> 131072 x477)) (= (x812 65535 x477) (- x477 65536))))
(define-fun x492 ((x477 Real) (x362 Real)) Bool (and (>= x362 0) (= x477 (+ (* x362 65536) (x812 65535 x477)))))
(define-fun x657 ((x477 Real) (x271 Real)) Bool (and (x578 x477) (x185 x477) (x569 x477) (x805 x477) (x492 x477 x271)))
(define-fun x267 ((x477 Real) (x271 Real)) Bool (and (x657 x477 x271) (x144 x477 65535)))
(define-fun x708 ((x477 Real)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x214 x477 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x214 115792089237316195423570985008687907853269984665640564039457584007913129639935 x477))))
(define-fun x670 ((x477 Real)) Bool (and (= (x214 0 x477) x477) (= (x214 x477 0) x477)))
(define-fun x525 ((x477 Real)) Bool (= (x214 x477 x477) x477))
(define-fun x818 ((x477 Real)) Bool (and (x525 x477) (x708 x477) (x670 x477)))
(define-fun x914 ((x477 Real) (x362 Real)) Bool (= (x214 x477 x362) (x214 x362 x477)))
(define-fun x516 ((x477 Real) (x362 Real)) Bool (and (>= (+ x362 x477) (x214 x477 x362)) (=> (<= 0 x362) (<= x362 (x214 x477 x362))) (=> (>= x477 0) (<= x477 (x214 x477 x362)))))
(define-fun x697 ((x477 Real) (x362 Real)) Bool (and (x914 x477 x362) (x516 x477 x362)))
(define-fun x24 ((x477 Real)) Bool (= (x812 18446744073709551615 x477) (x812 18446744073709551615 (x812 18446744073709551615 x477))))
(define-fun x682 ((x477 Real)) Bool (=> (and (>= x477 0) (< x477 18446744073709551616)) (= x477 (x812 18446744073709551615 x477))))
(define-fun x275 ((x477 Real)) Bool (=> (= x477 (x812 18446744073709551615 x477)) (and (>= x477 0) (< x477 18446744073709551616))))
(define-fun x907 ((x477 Real)) Bool (=> (and (<= 18446744073709551616 x477) (> 36893488147419103232 x477)) (= (x812 18446744073709551615 x477) (- x477 18446744073709551616))))
(define-fun x625 ((x477 Real) (x362 Real)) Bool (and (= (+ (* x362 18446744073709551616) (x812 18446744073709551615 x477)) x477) (>= x362 0)))
(define-fun x692 ((x477 Real) (x271 Real)) Bool (and (x625 x477 x271) (x24 x477) (x682 x477) (x907 x477) (x275 x477)))
(define-fun x28 ((x477 Real) (x271 Real)) Bool (and (x144 x477 18446744073709551615) (x692 x477 x271)))
(define-fun x666 ((x477 Real)) Bool (= (x812 340282366920938463463374607431768211455 x477) (x812 340282366920938463463374607431768211455 (x812 340282366920938463463374607431768211455 x477))))
(define-fun x151 ((x477 Real)) Bool (=> (and (<= 0 x477) (> 340282366920938463463374607431768211456 x477)) (= x477 (x812 340282366920938463463374607431768211455 x477))))
(define-fun x760 ((x477 Real)) Bool (=> (= x477 (x812 340282366920938463463374607431768211455 x477)) (and (< x477 340282366920938463463374607431768211456) (>= x477 0))))
(define-fun x570 ((x477 Real)) Bool (=> (and (< x477 680564733841876926926749214863536422912) (>= x477 340282366920938463463374607431768211456)) (= (x812 340282366920938463463374607431768211455 x477) (- x477 340282366920938463463374607431768211456))))
(define-fun x326 ((x477 Real) (x362 Real)) Bool (and (<= 0 x362) (= (+ (* x362 340282366920938463463374607431768211456) (x812 340282366920938463463374607431768211455 x477)) x477)))
(define-fun x915 ((x477 Real) (x271 Real)) Bool (and (x326 x477 x271) (x570 x477) (x760 x477) (x151 x477) (x666 x477)))
(define-fun x504 ((x477 Real) (x271 Real)) Bool (and (x915 x477 x271) (x144 x477 340282366920938463463374607431768211455)))
(define-fun x339 ((x477 Real)) Bool (= (x163 x477) (ite (> 170141183460469231731687303715884105728 (x812 x477 340282366920938463463374607431768211455)) (x812 x477 340282366920938463463374607431768211455) (+ (x812 x477 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480))))
(define-fun x53 ((x817 Real)) Real (ite (= 128 x817) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x728 x817)))
(define-fun x763 ((x817 Real)) Real (ite (= x817 128) x217 (x750 x817)))
(define-fun x629 ((x817 Real)) Real (ite (= 160 x817) x146 (x763 x817)))
(define-fun x665 ((x817 Real)) Real (ite (= x817 192) x513 (x629 x817)))
(define-fun x87 ((x817 Real)) Real (ite (= 224 x817) x484 (x665 x817)))
(define-fun x411 ((x817 Real)) Real (ite (= 256 x817) x196 (x87 x817)))
(define-fun x770 ((x817 Real)) Real (ite (= x817 128) x663 (x53 x817)))
(define-fun x406 ((x817 Real)) Real (ite (= 160 x817) x779 (x770 x817)))
(define-fun x58 ((x817 Real)) Real (ite (= 192 x817) x455 (x406 x817)))
(define-fun x498 ((x817 Real)) Real (ite (= 224 x817) x496 (x58 x817)))
(define-fun x825 ((x817 Real)) Real (ite (= 256 x817) x736 (x498 x817)))
(define-fun x921 ((x817 Real)) Real (ite (= 0 x817) x16 (x623 x817)))
(define-fun x445 ((x817 Real)) Real (ite (= 32 x817) x408 (x921 x817)))
(define-fun x588 ((x817 Real)) Real (ite (= x817 64) x787 (x445 x817)))
(define-fun x537 ((x817 Real)) Real (ite (= x817 96) x466 (x588 x817)))
(define-fun x221 ((x817 Real)) Real (ite (= x817 128) x88 (x537 x817)))
(define-fun x624 ((x817 Real)) Real (ite (= x817 640) 0 (x5 x817)))
(define-fun x262 ((x817 Real)) Real (ite (= x817 672) x487 (x799 x817)))
(define-fun x292 ((x817 Real)) Real (ite (= x817 704) x404 (x375 x817)))
(define-fun x879 ((x817 Real)) Real (ite (= x817 736) x538 (x427 x817)))
(define-fun x499 ((x817 Real)) Real (ite (= x817 768) x506 (x280 x817)))
(define-fun x279 ((x817 Real)) Real (ite (= 800 x817) x862 (x49 x817)))
(define-fun x867 ((x817 Real)) Real (ite (= 832 x817) x634 (x127 x817)))
(define-fun x679 ((x817 Real)) Real (ite (= 864 x817) x190 (x347 x817)))
(define-fun x631 ((x817 x6)) Real (ite (= x277 x817) x316 (x661 x817)))
(define-fun x270 ((x817 x6)) Real (ite (= x400 x817) x184 (x661 x817)))
(define-fun x851 ((x817 x6)) Real (ite (and x447 (not x161)) (ite (and x447 (not x161) (not x797)) (x661 x817) (x270 x817)) (x631 x817)))
(define-fun x853 ((x817 Real)) Real (ite (= x817 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x350 x817)))
(define-fun x32 ((x817 Real)) Real (ite (= x817 128) x217 (x33 x817)))
(define-fun x453 ((x817 Real)) Real (ite (= 160 x817) x148 (x32 x817)))
(define-fun x405 ((x817 Real)) Real (ite (= 192 x817) x513 (x453 x817)))
(define-fun x577 ((x817 Real)) Real (ite (= 224 x817) x484 (x405 x817)))
(define-fun x680 ((x817 Real)) Real (ite (= x817 256) x196 (x577 x817)))
(define-fun x147 ((x817 Real)) Real (ite (= 128 x817) x182 (x853 x817)))
(define-fun x179 ((x817 Real)) Real (ite (= x817 160) x536 (x147 x817)))
(define-fun x245 ((x817 Real)) Real (ite (= 192 x817) x50 (x179 x817)))
(define-fun x152 ((x817 Real)) Real (ite (= x817 224) x464 (x245 x817)))
(define-fun x71 ((x817 Real)) Real (ite (= 256 x817) x385 (x152 x817)))
(define-fun x368 ((x817 Real)) Real (ite (= 0 x817) x876 (x810 x817)))
(define-fun x394 ((x817 Real)) Real (ite (= x817 32) x11 (x368 x817)))
(define-fun x48 ((x817 Real)) Real (ite (= 64 x817) x695 (x394 x817)))
(define-fun x734 ((x817 Real)) Real (ite (= x817 96) x934 (x48 x817)))
(define-fun x143 ((x817 Real)) Real (ite (= x817 128) x72 (x734 x817)))
(define-fun x703 ((x817 Real)) Real (ite (= 544 x817) 0 (x567 x817)))
(define-fun x431 ((x817 Real)) Real (ite (= 576 x817) x51 (x315 x817)))
(define-fun x155 ((x817 Real)) Real (ite (= x817 608) x572 (x229 x817)))
(define-fun x159 ((x817 Real)) Real (ite (= 640 x817) x376 (x635 x817)))
(define-fun x234 ((x817 Real)) Real (ite (= 672 x817) x290 (x859 x817)))
(define-fun x201 ((x817 Real)) Real (ite (= x817 704) x218 (x215 x817)))
(define-fun x331 ((x817 Real)) Real (ite (= x817 736) x790 (x700 x817)))
(define-fun x902 ((x817 Real)) Real (ite (= x817 768) x356 (x67 x817)))
(define-fun x745 ((x817 Real)) Real (ite (= 128 x817) x383 (x505 x817)))
(define-fun x930 ((x817 Real)) Real (ite (= 160 x817) x742 (x745 x817)))
(define-fun x80 ((x817 Real)) Real (ite (= 192 x817) x450 (x930 x817)))
(define-fun x739 ((x817 Real)) Real (ite (= 224 x817) x574 (x80 x817)))
(define-fun x630 ((x817 Real)) Real (ite (= 256 x817) x756 (x739 x817)))
(define-fun x548 ((x817 Real)) Real (ite (= 800 x817) x723 (x724 x817)))
(define-fun x130 ((x817 Real)) Real (ite (= x817 832) x31 (x548 x817)))
(define-fun x228 ((x817 Real)) Real (ite (= 864 x817) x868 (x130 x817)))
(define-fun x824 ((x817 Real)) Real (ite (= x817 896) x386 (x228 x817)))
(define-fun x355 ((x817 Real)) Real (ite (= x817 928) x240 (x824 x817)))
(define-fun x580 ((x817 Real)) Real (ite (= x817 0) x239 (x459 x817)))
(define-fun x346 ((x817 Real)) Real (ite (= 32 x817) x783 (x580 x817)))
(define-fun x836 ((x817 Real)) Real (ite (= 64 x817) x329 (x346 x817)))
(define-fun x870 ((x817 Real)) Real (ite (= 96 x817) x687 (x836 x817)))
(define-fun x263 ((x817 Real)) Real (ite (= x817 128) x713 (x870 x817)))
(define-fun x848 ((x817 Real)) Real (ite (= x817 544) 0 (x827 x817)))
(define-fun x242 ((x817 Real)) Real (ite (= x817 576) x30 (x178 x817)))
(define-fun x559 ((x817 Real)) Real (ite (= 608 x817) x167 (x319 x817)))
(define-fun x647 ((x817 Real)) Real (ite (= 640 x817) x858 (x285 x817)))
(define-fun x225 ((x817 Real)) Real (ite (= x817 672) x197 (x798 x817)))
(define-fun x591 ((x817 Real)) Real (ite (= x817 704) x39 (x622 x817)))
(define-fun x288 ((x817 Real)) Real (ite (= 736 x817) x871 (x86 x817)))
(define-fun x449 ((x817 Real)) Real (ite (= 768 x817) x248 (x926 x817)))
(define-fun x913 ((x817 Real)) Real (ite (= 128 x817) x383 (x828 x817)))
(define-fun x502 ((x817 Real)) Real (ite (= x817 160) x415 (x913 x817)))
(define-fun x166 ((x817 Real)) Real (ite (= x817 192) x450 (x502 x817)))
(define-fun x555 ((x817 Real)) Real (ite (= x817 224) x574 (x166 x817)))
(define-fun x395 ((x817 Real)) Real (ite (= x817 256) x756 (x555 x817)))
(define-fun x743 ((x817 Real)) Real (ite (= x817 800) x95 (x351 x817)))
(define-fun x345 ((x817 Real)) Real (ite (= 832 x817) x826 (x743 x817)))
(define-fun x169 ((x817 Real)) Real (ite (= 864 x817) x74 (x345 x817)))
(define-fun x478 ((x817 Real)) Real (ite (= x817 896) x573 (x169 x817)))
(define-fun x154 ((x817 Real)) Real (ite (= x817 928) x268 (x478 x817)))
(define-fun x17 ((x817 Real)) Real (ite (= 0 x817) x128 (x387 x817)))
(define-fun x655 ((x817 Real)) Real (ite (= x817 32) x8 (x17 x817)))
(define-fun x421 ((x817 Real)) Real (ite (= 64 x817) x59 (x655 x817)))
(define-fun x729 ((x817 Real)) Real (ite (= 96 x817) x26 (x421 x817)))
(define-fun x519 ((x817 Real)) Real (ite (= 128 x817) x648 (x729 x817)))
(define-fun x156 ((x817 Real)) Real (ite (= x817 128) x217 (x84 x817)))
(define-fun x20 ((x817 Real)) Real (ite (= x817 160) x304 (x156 x817)))
(define-fun x839 ((x817 Real)) Real (ite (= x817 192) x513 (x20 x817)))
(define-fun x140 ((x817 Real)) Real (ite (= 224 x817) x484 (x839 x817)))
(define-fun x726 ((x817 Real)) Real (ite (= 256 x817) x196 (x140 x817)))
(define-fun x842 ((x817 Real)) Real (ite (= 800 x817) x349 (x724 x817)))
(define-fun x114 ((x817 Real)) Real (ite (= x817 832) x370 (x842 x817)))
(define-fun x96 ((x817 Real)) Real (ite (= 864 x817) x659 (x114 x817)))
(define-fun x272 ((x817 Real)) Real (ite (= x817 896) x919 (x96 x817)))
(define-fun x602 ((x817 Real)) Real (ite (= 928 x817) x393 (x272 x817)))
(define-fun x886 ((x817 Real)) Real (ite (= 0 x817) x686 (x459 x817)))
(define-fun x324 ((x817 Real)) Real (ite (= 32 x817) x834 (x886 x817)))
(define-fun x444 ((x817 Real)) Real (ite (= x817 64) x289 (x324 x817)))
(define-fun x446 ((x817 Real)) Real (ite (= x817 96) x906 (x444 x817)))
(define-fun x617 ((x817 Real)) Real (ite (= x817 128) x129 (x446 x817)))
(define-fun x645 ((x817 Real)) Real (ite (= x817 128) x217 (x115 x817)))
(define-fun x252 ((x817 Real)) Real (ite (= 160 x817) x551 (x645 x817)))
(define-fun x520 ((x817 Real)) Real (ite (= x817 192) x513 (x252 x817)))
(define-fun x911 ((x817 Real)) Real (ite (= x817 224) x484 (x520 x817)))
(define-fun x318 ((x817 Real)) Real (ite (= x817 256) x196 (x911 x817)))
(define-fun x652 ((x817 Real)) Real (ite (= 800 x817) x500 (x351 x817)))
(define-fun x392 ((x817 Real)) Real (ite (= x817 832) x132 (x652 x817)))
(define-fun x816 ((x817 Real)) Real (ite (= x817 864) x441 (x392 x817)))
(define-fun x920 ((x817 Real)) Real (ite (= x817 896) x615 (x816 x817)))
(define-fun x869 ((x817 Real)) Real (ite (= 928 x817) x236 (x920 x817)))
(define-fun x250 ((x817 Real)) Real (ite (= 0 x817) x104 (x387 x817)))
(define-fun x396 ((x817 Real)) Real (ite (= x817 32) x301 (x250 x817)))
(define-fun x936 ((x817 Real)) Real (ite (= x817 64) x660 (x396 x817)))
(define-fun x258 ((x817 Real)) Real (ite (= x817 96) x895 (x936 x817)))
(define-fun x77 ((x817 Real)) Real (ite (= x817 128) x636 (x258 x817)))
(define-fun x246 ((x817 Real)) Real (ite (and x671 x480) (x355 x817) (x602 x817)))
(define-fun x191 ((x817 Real)) Real (ite (and x653 x632) (x154 x817) (x869 x817)))
(define-fun x136 ((x477 Real)) Bool (=> (and (not (= 274184521717934524641157099916833587223 x477)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x477)) (not (= x477 274184521717934524641157099916833587244)) (not (= 20282409603651670423947251286016 x477)) (not (= 274184521717934524641157099916833587231 x477)) (not (= x477 18446744073709551615)) (not (= 98097205 x477)) (not (= x477 340282366920938463463374607431768211456)) (not (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x477)) (not (= x477 1208925819614629174706175)) (not (= 4062139261 x477)) (not (= x477 1099511627775)) (not (= 10141204801825835211973625643007 x477)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x477)) (not (= 170141183460469231731687303715884105727 x477)) (not (= x477 2068668150)) (not (= 65535 x477)) (not (= x477 274184521717934524641157099916833587211)) (not (= x477 2362581449)) (not (= x477 274184521717934524641157099916833587233)) (not (= 3257672857 x477)) (not (= 11269569 x477)) (not (= x477 340282366920938463463374607431768211455)) (not (= x477 1110625635)) (not (= x477 4272920204)) (not (= x477 70124239)) (not (= 204737060 x477)) (not (= x477 950698303)) (not (= 274184521717934524641157099916833587227 x477)) (not (= 1208925819614629174706176 x477)) (not (= x477 20282409603651670423947251286015)) (not (= x477 274184521717934524641157099916833587235)) (not (= x477 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (not (= x477 1168994686)) (not (= 480214969 x477)) (not (= x477 1461501637330902918203684832716283019655932542975)) (not (= 18446744073709551616 x477)) (not (= x477 65536)) (not (= x477 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (> x477 10000)) (not ((_ is x439) (x330 x477)))))
(assert (axiom_frac_bound (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x163 x793) x722 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x244 x541 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x260 x849 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x295 x744 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x323 x610 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x171 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x552 (x163 x338) (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x611 x476 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x295 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x306 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x782 x849 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833 x788 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x260 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x782 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x872 x897 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x908 x762 (uninterp_frac (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x163 x793) x722 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x244 x541 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x260 x849 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x295 x744 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x323 x610 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x171 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x552 (x163 x338) (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x611 x476 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x295 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x306 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x782 x849 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833 x788 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x260 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x782 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x872 x897 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x908 x762 (uninterp_frac (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x163 x793) x722 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x244 x541 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x260 x849 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x295 x744 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x323 x610 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x171 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x552 (x163 x338) (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x611 x476 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x295 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x306 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x782 x849 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833 x788 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x260 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x782 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x872 x897 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x908 x762 (uninterp_frac (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x163 x793) x722 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x244 x541 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x260 x849 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x295 x744 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x323 x610 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x171 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x552 (x163 x338) (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x611 x476 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x295 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x306 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x782 x849 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833 x788 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x260 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x782 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x872 x897 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x908 x762 (uninterp_frac (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x163 x793) x722 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x244 x541 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x260 x849 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x295 x744 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x323 x610 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x171 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x552 (x163 x338) (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x611 x476 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x295 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x306 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x782 x849 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833 x788 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x260 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x782 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x872 x897 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x908 x762 (uninterp_frac (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x163 x793) x722 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x244 x541 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x260 x849 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x295 x744 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x323 x610 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x171 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x552 (x163 x338) (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x611 x476 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x295 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x306 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x782 x849 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833 x788 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x260 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x782 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x872 x897 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x908 x762 (uninterp_frac (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x163 x793) x722 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x244 x541 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x260 x849 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x295 x744 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x323 x610 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x171 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x552 (x163 x338) (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x611 x476 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x295 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x306 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x782 x849 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833 x788 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x260 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x782 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x872 x897 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x908 x762 (uninterp_frac (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x163 x793) x722 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x244 x541 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x260 x849 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x295 x744 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x323 x610 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x171 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x552 (x163 x338) (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x611 x476 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x295 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x306 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x782 x849 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833 x788 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x260 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x782 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x872 x897 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x908 x762 (uninterp_frac (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x163 x793) x722 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x244 x541 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x260 x849 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x295 x744 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x323 x610 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x171 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x552 (x163 x338) (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x611 x476 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x295 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744 x306 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x782 x849 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833 x788 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x260 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x849 x782 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x872 x897 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x908 x762 (uninterp_frac (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 (x163 x793) x722 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x244 x541 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x260 x849 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x295 x744 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x323 x610 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x458 x171 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x552 (x163 x338) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x611 x476 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x744 x295 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x744 x306 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x782 x849 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x833 x788 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x849 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x849 x782 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x872 x897 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458 x908 x762 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 (x163 x793) x722 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x244 x541 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x260 x849 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x295 x744 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x323 x610 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x458 x171 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x552 (x163 x338) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x611 x476 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x744 x295 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x744 x306 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x782 x849 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x833 x788 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x849 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x849 x782 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x872 x897 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762 x908 x762 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 (x163 x793) x722 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x244 x541 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x260 x849 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x295 x744 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x323 x610 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x458 x171 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x552 (x163 x338) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x611 x476 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x744 x295 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x744 x306 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x782 x849 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x833 x788 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x849 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x849 x782 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x872 x897 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872 x908 x762 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872)))
(assert (axiom_frac_bound x186 2))
(assert (axiom_frac_zero x186 2 (x163 x793) x722 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x244 x541 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x260 x849 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x295 x744 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x323 x610 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x458 x171 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x552 (x163 x338) (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x611 x476 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x744 x295 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x744 x306 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x782 x849 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x833 x788 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x849 x260 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x849 x782 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x872 x897 (uninterp_frac x186 2)))
(assert (axiom_frac_zero x186 2 x908 x762 (uninterp_frac x186 2)))
(assert (axiom_frac_bound x204 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 (x163 x793) x722 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x244 x541 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x260 x849 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x295 x744 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x323 x610 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x458 x171 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x552 (x163 x338) (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x611 x476 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x744 x295 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x744 x306 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x782 x849 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x833 x788 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x849 x260 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x849 x782 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x872 x897 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x204 1461501637330902918203684832716283019655932542976 x908 x762 (uninterp_frac x204 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x204 374144419156711147060143317175368453031918731001856))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 (x163 x793) x722 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x244 x541 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x260 x849 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x295 x744 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x323 x610 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x458 x171 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x552 (x163 x338) (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x611 x476 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x744 x295 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x744 x306 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x782 x849 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x833 x788 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x849 x260 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x849 x782 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x872 x897 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x204 374144419156711147060143317175368453031918731001856 x908 x762 (uninterp_frac x204 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_bound x256 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 (x163 x793) x722 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x244 x541 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x260 x849 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x295 x744 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x323 x610 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x458 x171 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x552 (x163 x338) (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x611 x476 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x744 x295 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x744 x306 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x782 x849 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x833 x788 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x849 x260 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x849 x782 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x872 x897 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x256 1461501637330902918203684832716283019655932542976 x908 x762 (uninterp_frac x256 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x256 6277101735386680763835789423207666416102355444464034512896))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 (x163 x793) x722 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x244 x541 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x260 x849 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x295 x744 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x323 x610 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x458 x171 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x552 (x163 x338) (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x611 x476 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x744 x295 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x744 x306 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x782 x849 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x833 x788 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x849 x260 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x849 x782 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x872 x897 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x256 6277101735386680763835789423207666416102355444464034512896 x908 x762 (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_bound x256 95780971304118053647396689196894323976171195136475136))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 (x163 x793) x722 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x244 x541 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x260 x849 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x295 x744 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x323 x610 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x458 x171 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x552 (x163 x338) (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x611 x476 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x744 x295 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x744 x306 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x782 x849 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x833 x788 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x849 x260 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x849 x782 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x872 x897 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x256 95780971304118053647396689196894323976171195136475136 x908 x762 (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_bound x765 2))
(assert (axiom_frac_zero x765 2 (x163 x793) x722 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x244 x541 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x260 x849 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x295 x744 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x323 x610 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x458 x171 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x552 (x163 x338) (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x611 x476 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x744 x295 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x744 x306 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x782 x849 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x833 x788 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x849 x260 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x849 x782 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x872 x897 (uninterp_frac x765 2)))
(assert (axiom_frac_zero x765 2 x908 x762 (uninterp_frac x765 2)))
(assert (axiom_frac_bound x927 2))
(assert (axiom_frac_zero x927 2 (x163 x793) x722 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x244 x541 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x260 x849 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x295 x744 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x323 x610 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x458 x171 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x552 (x163 x338) (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x611 x476 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x744 x295 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x744 x306 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x782 x849 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x833 x788 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x849 x260 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x849 x782 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x872 x897 (uninterp_frac x927 2)))
(assert (axiom_frac_zero x927 2 x908 x762 (uninterp_frac x927 2)))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x128))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x138))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x146))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x189))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x2))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x211))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x227))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x236))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x264))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x31))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x321))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x472))
(assert (axiom_int_approximation x475))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x507))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x530))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x560))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x605))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x62))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x628))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x65))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x689))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x721))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x731))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x736))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x747))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x755))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x765))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x788))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x793))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x802))
(assert (axiom_int_approximation x803))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x843))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x866))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x872))
(assert (axiom_int_approximation x874))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x877))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x922))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x935))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x98))
(assert (x882 x306))
(assert (x267 x42 x563))
(assert (x882 x573))
(assert (x882 x716))
(assert (x882 x560))
(assert (x882 x403))
(assert (= (=> (and (>= 1208925819614629174706175 x78) (= x788 (x812 18446744073709551615 x380)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x833 x788)) (= (x767 (+ x433 x778)) x860) (= x403 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x433) (and (> 0 x433) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x433)))) 1 0)) (= x380 (x225 672)) (not (ite x771 x771 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x565)) (< 170141183460469231731687303715884105727 x565)))) (= (x191 832) x565) (= x833 (uninterp_mod (* x323 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (or (and (> 160 x901) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x901))) (> x901 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x507 (ite (or (and (> x534 x778) (= (<= x778 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x534 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x534) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x778))) 1 0)) (= (x191 928) x47) (= x323 (x812 340282366920938463463374607431768211455 x565)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x433) (and (> 0 x433) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x433)))) x582) (= 0 x587) (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x565) true) (> x565 0)) x224) (= (x864 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x433)) x534) (= x778 x522) (= (not x224) x771) (= x174 (ite (or (and (> x854 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x778)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x778) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x854)) (< x854 x778))) 1 0)) (= x587 (x812 x403 x507)) (= (x812 x694 x174) x935) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x778)) (= x694 (ite (not x582) 1 0)) (<= x47 1208925819614629174706175) (= (* x833 x788) x522) (= x106 (x647 640)) (= 0 x935) (= (x864 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x433)) x854) (not (= 0 x303)) (= x860 x180) (= x78 (x191 800))) x309) x592))
(assert (x882 x599))
(assert (x882 x564))
(assert (x342 x75))
(assert (=> (< (- x437 1) 10000) (= (x330 x437) (x439 x437))))
(assert (= (x811 (x439 18446744073709551616)) 18446744073709551616))
(assert (x504 x493 x274))
(assert (x882 x929))
(assert (x882 x305))
(assert (x882 x31))
(assert (= (x439 18446744073709551615) (x330 18446744073709551615)))
(assert (x882 x935))
(assert (x614 x784 x912))
(assert (x882 x721))
(assert (x342 x819))
(assert (= x673 (or (and (not x880) x120) x4)))
(assert (= x495 (or x183 (and x675 (not x454)))))
(assert (= (=> (and (= (x812 1 x549) x746) (= x454 (not (= 0 x746)))) (and (=> (and (not x454) (= x180 x433)) x309) (=> x454 x108))) x334))
(assert (x136 x321))
(assert (x882 x606))
(assert (x882 x199))
(assert (= x632 (and x880 x120)))
(assert (x342 x137))
(assert (x882 x172))
(assert (x342 x200))
(assert (x136 274184521717934524641157099916833587227))
(assert (x882 x424))
(assert (x136 x227))
(assert (x882 x197))
(assert (x882 x3))
(assert (x267 x887 x479))
(assert (x342 x374))
(assert (x882 x888))
(assert (x717 x549 x702))
(assert (= (x811 (x439 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (x504 x194 x430))
(assert (x882 x299))
(assert (x882 x713))
(assert (x882 x686))
(assert (x882 x233))
(assert (x882 x386))
(assert (x882 x119))
(assert (x882 x496))
(assert (x342 x507))
(assert (x882 x323))
(assert (x342 x576))
(assert (x342 x14))
(assert (x696 x223 x796))
(assert (x342 x194))
(assert (x882 x230))
(assert (x882 x329))
(assert (x882 x712))
(assert (x882 x476))
(assert (x882 x160))
(assert (x882 x755))
(assert (x882 x106))
(assert (x882 x184))
(assert (x882 x927))
(assert (x882 x74))
(assert (x882 x532))
(assert (x882 x189))
(assert (and (= (x916 2 63) 9223372036854775808) (= (x916 2 56) 72057594037927936) (= 34359738368 (x916 2 35)) (= 19807040628566084398385987584 (x916 2 94)) (= (x916 2 191) 3138550867693340381917894711603833208051177722232017256448) (= 83076749736557242056487941267521536 (x916 2 116)) (= 144115188075855872 (x916 2 57)) (= 47890485652059026823698344598447161988085597568237568 (x916 2 175)) (= 633825300114114700748351602688 (x916 2 99)) (= 2475880078570760549798248448 (x916 2 91)) (= 73786976294838206464 (x916 2 66)) (= (x916 2 205) 51422017416287688817342786954917203280710495801049370729644032) (= 356811923176489970264571492362373784095686656 (x916 2 148)) (= (x916 2 132) 5444517870735015415413993718908291383296) (= 95780971304118053647396689196894323976171195136475136 (x916 2 176)) (= 1645504557321206042154969182557350504982735865633579863348609024 (x916 2 210)) (= 2147483648 (x916 2 31)) (= (x916 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= (x916 2 151) 2854495385411919762116571938898990272765493248) (= (x916 2 85) 38685626227668133590597632) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x916 2 245)) (= (x916 2 80) 1208925819614629174706176) (= (x916 2 12) 4096) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x916 2 235)) (= (x916 2 102) 5070602400912917605986812821504) (= (x916 2 96) 79228162514264337593543950336) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x916 2 240)) (= (x916 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= 4503599627370496 (x916 2 52)) (= (x916 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= (x916 2 28) 268435456) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x916 2 252)) (= (x916 2 170) 1496577676626844588240573268701473812127674924007424) (= (x916 2 222) 6739986666787659948666753771754907668409286105635143120275902562304) (= 8388608 (x916 2 23)) (= (x916 2 193) 12554203470773361527671578846415332832204710888928069025792) (= (x916 2 180) 1532495540865888858358347027150309183618739122183602176) (= 20282409603651670423947251286016 (x916 2 104)) (= (x916 2 154) 22835963083295358096932575511191922182123945984) (= 131072 (x916 2 17)) (= 10141204801825835211973625643008 (x916 2 103)) (= (x916 2 157) 182687704666362864775460604089535377456991567872) (= (x916 2 88) 309485009821345068724781056) (= (x916 2 141) 2787593149816327892691964784081045188247552) (= (x916 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= (x916 2 130) 1361129467683753853853498429727072845824) (= (x916 2 53) 9007199254740992) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x916 2 255)) (= (x916 2 107) 162259276829213363391578010288128) (= (x916 2 219) 842498333348457493583344221469363458551160763204392890034487820288) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x916 2 244)) (= (x916 2 186) 98079714615416886934934209737619787751599303819750539264) (= (x916 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= 12855504354071922204335696738729300820177623950262342682411008 (x916 2 203)) (= (x916 2 39) 549755813888) (= (x916 2 139) 696898287454081973172991196020261297061888) (= (x916 2 206) 102844034832575377634685573909834406561420991602098741459288064) (= 4294967296 (x916 2 32)) (= (x916 2 8) 256) (= 178405961588244985132285746181186892047843328 (x916 2 147)) (= 9903520314283042199192993792 (x916 2 93)) (= (x916 2 168) 374144419156711147060143317175368453031918731001856) (= (x916 2 113) 10384593717069655257060992658440192) (= (x916 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= (x916 2 150) 1427247692705959881058285969449495136382746624) (= 4194304 (x916 2 22)) (= (x916 2 36) 68719476736) (= (x916 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= (x916 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= (x916 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= 862718293348820473429344482784628181556388621521298319395315527974912 (x916 2 229)) (= 1393796574908163946345982392040522594123776 (x916 2 140)) (= 2199023255552 (x916 2 41)) (= (x916 2 15) 32768) (= 166153499473114484112975882535043072 (x916 2 117)) (= (x916 2 231) 3450873173395281893717377931138512726225554486085193277581262111899648) (= 33554432 (x916 2 25)) (= (x916 2 10) 1024) (= (x916 2 169) 748288838313422294120286634350736906063837462003712) (= 5192296858534827628530496329220096 (x916 2 112)) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x916 2 226)) (= (x916 2 40) 1099511627776) (= 281474976710656 (x916 2 48)) (= 4951760157141521099596496896 (x916 2 92)) (= 100433627766186892221372630771322662657637687111424552206336 (x916 2 196)) (= (x916 2 237) 220855883097298041197912187592864814478435487109452369765200775161577472) (= 4835703278458516698824704 (x916 2 82)) (= 2 (x916 2 1)) (= (x916 2 70) 1180591620717411303424) (= 8 (x916 2 3)) (= (x916 2 190) 1569275433846670190958947355801916604025588861116008628224) (= 12259964326927110866866776217202473468949912977468817408 (x916 2 183)) (= (x916 2 184) 24519928653854221733733552434404946937899825954937634816) (= 154742504910672534362390528 (x916 2 87)) (= 2361183241434822606848 (x916 2 71)) (= 16384 (x916 2 14)) (= (x916 2 177) 191561942608236107294793378393788647952342390272950272) (= 81129638414606681695789005144064 (x916 2 106)) (= (x916 2 51) 2251799813685248) (= (x916 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x916 2 122) 5316911983139663491615228241121378304) (= 26328072917139296674479506920917608079723773850137277813577744384 (x916 2 214)) (= (x916 2 83) 9671406556917033397649408) (= (x916 2 164) 23384026197294446691258957323460528314494920687616) (= (x916 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= (x916 2 126) 85070591730234615865843651857942052864) (= 524288 (x916 2 19)) (= 140737488355328 (x916 2 47)) (= 210624583337114373395836055367340864637790190801098222508621955072 (x916 2 217)) (= 200867255532373784442745261542645325315275374222849104412672 (x916 2 197)) (= 3618502788666131106986593281521497120414687020801267626233049500247285301248 (x916 2 251)) (= (x916 2 120) 1329227995784915872903807060280344576) (= 340282366920938463463374607431768211456 (x916 2 128)) (= (x916 2 129) 680564733841876926926749214863536422912) (= (x916 2 192) 6277101735386680763835789423207666416102355444464034512896) (= 562949953421312 (x916 2 49)) (= (x916 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x916 2 155) 45671926166590716193865151022383844364247891968) (= (x916 2 58) 288230376151711744) (= 1237940039285380274899124224 (x916 2 90)) (= (x916 2 86) 77371252455336267181195264) (= 332306998946228968225951765070086144 (x916 2 118)) (= (x916 2 236) 110427941548649020598956093796432407239217743554726184882600387580788736) (= 2097152 (x916 2 21)) (= 4398046511104 (x916 2 42)) (= 411376139330301510538742295639337626245683966408394965837152256 (x916 2 208)) (= (x916 2 108) 324518553658426726783156020576256) (= (x916 2 111) 2596148429267413814265248164610048) (= 274877906944 (x916 2 38)) (= 42535295865117307932921825928971026432 (x916 2 125)) (= (x916 2 109) 649037107316853453566312041152512) (= 36893488147419103232 (x916 2 65)) (= 32 (x916 2 5)) (= 618970019642690137449562112 (x916 2 89)) (= 5846006549323611672814739330865132078623730171904 (x916 2 162)) (= 13164036458569648337239753460458804039861886925068638906788872192 (x916 2 213)) (= (x916 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= 205688069665150755269371147819668813122841983204197482918576128 (x916 2 207)) (= (x916 2 73) 9444732965739290427392) (= (x916 2 135) 43556142965880123323311949751266331066368) (= (x916 2 101) 2535301200456458802993406410752) (= (x916 2 55) 36028797018963968) (= (x916 2 199) 803469022129495137770981046170581301261101496891396417650688) (= 64 (x916 2 6)) (= (x916 2 124) 21267647932558653966460912964485513216) (= 6129982163463555433433388108601236734474956488734408704 (x916 2 182)) (= 5575186299632655785383929568162090376495104 (x916 2 142)) (= 11692013098647223345629478661730264157247460343808 (x916 2 163)) (= 147573952589676412928 (x916 2 67)) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x916 2 228)) (= (x916 2 98) 316912650057057350374175801344) (= 158456325028528675187087900672 (x916 2 97)) (= (x916 2 27) 134217728) (= 2305843009213693952 (x916 2 61)) (= 2417851639229258349412352 (x916 2 81)) (= (x916 2 149) 713623846352979940529142984724747568191373312) (= (x916 2 59) 576460752303423488) (= (x916 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= (x916 2 223) 13479973333575319897333507543509815336818572211270286240551805124608) (= 37778931862957161709568 (x916 2 75)) (= (x916 2 74) 18889465931478580854784) (= (x916 2 69) 590295810358705651712) (= (x916 2 95) 39614081257132168796771975168) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x916 2 225)) (= 25108406941546723055343157692830665664409421777856138051584 (x916 2 194)) (= (x916 2 195) 50216813883093446110686315385661331328818843555712276103168) (= (x916 2 174) 23945242826029513411849172299223580994042798784118784) (= (x916 2 152) 5708990770823839524233143877797980545530986496) (= 4 (x916 2 2)) (= 87112285931760246646623899502532662132736 (x916 2 136)) (= (x916 2 11) 2048) (= (x916 2 7) 128) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x916 2 232)) (= (x916 2 68) 295147905179352825856) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x916 2 246)) (= 302231454903657293676544 (x916 2 78)) (= (x916 2 181) 3064991081731777716716694054300618367237478244367204352) (= (x916 2 159) 730750818665451459101842416358141509827966271488) (= (x916 2 144) 22300745198530623141535718272648361505980416) (= (x916 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= (x916 2 172) 5986310706507378352962293074805895248510699696029696) (= 2658455991569831745807614120560689152 (x916 2 121)) (= (x916 2 0) 1) (= (x916 2 173) 11972621413014756705924586149611790497021399392059392) (= 75557863725914323419136 (x916 2 76)) (= (x916 2 43) 8796093022208) (= 512 (x916 2 9)) (= (x916 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= 4722366482869645213696 (x916 2 72)) (= 262144 (x916 2 18)) (= (x916 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= 91343852333181432387730302044767688728495783936 (x916 2 156)) (= 392318858461667547739736838950479151006397215279002157056 (x916 2 188)) (= (x916 2 133) 10889035741470030830827987437816582766592) (= 151115727451828646838272 (x916 2 77)) (= (x916 2 185) 49039857307708443467467104868809893875799651909875269632) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x916 2 247)) (= 536870912 (x916 2 29)) (= 93536104789177786765035829293842113257979682750464 (x916 2 166)) (= 19342813113834066795298816 (x916 2 84)) (= (x916 2 137) 174224571863520493293247799005065324265472) (= (x916 2 100) 1267650600228229401496703205376) (= (x916 2 60) 1152921504606846976) (= 604462909807314587353088 (x916 2 79)) (= 196159429230833773869868419475239575503198607639501078528 (x916 2 187)) (= 18014398509481984 (x916 2 54)) (= (x916 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= (x916 2 20) 1048576) (= (x916 2 160) 1461501637330902918203684832716283019655932542976) (= (x916 2 44) 17592186044416) (= 40564819207303340847894502572032 (x916 2 105)) (= 365375409332725729550921208179070754913983135744 (x916 2 158)) (= (x916 2 34) 17179869184) (= (x916 2 62) 4611686018427387904) (= (x916 2 233) 13803492693581127574869511724554050904902217944340773110325048447598592) (= 70368744177664 (x916 2 46)) (= 2993155353253689176481146537402947624255349848014848 (x916 2 171)) (= 1125899906842624 (x916 2 50)) (= 18446744073709551616 (x916 2 64)) (= 16 (x916 2 4)) (= 41538374868278621028243970633760768 (x916 2 115)) (= 822752278660603021077484591278675252491367932816789931674304512 (x916 2 209)) (= 383123885216472214589586756787577295904684780545900544 (x916 2 178)) (= (x916 2 215) 52656145834278593348959013841835216159447547700274555627155488768) (= (x916 2 30) 1073741824) (= (x916 2 114) 20769187434139310514121985316880384) (= (x916 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= (x916 2 242) 7067388259113537318333190002971674063309935587502475832486424805170479104) (= 21778071482940061661655974875633165533184 (x916 2 134)) (= 137438953472 (x916 2 37)) (= (x916 2 165) 46768052394588893382517914646921056628989841375232) (= 89202980794122492566142873090593446023921664 (x916 2 146)) (= 16777216 (x916 2 24)) (= 11150372599265311570767859136324180752990208 (x916 2 143)) (= 170141183460469231731687303715884105728 (x916 2 127)) (= 65536 (x916 2 16)) (= (x916 2 145) 44601490397061246283071436545296723011960832) (= 1684996666696914987166688442938726917102321526408785780068975640576 (x916 2 220)) (= (x916 2 167) 187072209578355573530071658587684226515959365500928) (= (x916 2 131) 2722258935367507707706996859454145691648) (= (x916 2 161) 2923003274661805836407369665432566039311865085952) (= (x916 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= (x916 2 243) 14134776518227074636666380005943348126619871175004951664972849610340958208) (= (x916 2 110) 1298074214633706907132624082305024) (= 784637716923335095479473677900958302012794430558004314112 (x916 2 189)) (= 11417981541647679048466287755595961091061972992 (x916 2 153)) (= 766247770432944429179173513575154591809369561091801088 (x916 2 179)) (= 8192 (x916 2 13)) (= (x916 2 198) 401734511064747568885490523085290650630550748445698208825344) (= (x916 2 45) 35184372088832) (= (x916 2 138) 348449143727040986586495598010130648530944) (= 67108864 (x916 2 26)) (= (x916 2 33) 8589934592) (= (x916 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= (x916 2 123) 10633823966279326983230456482242756608) (= 664613997892457936451903530140172288 (x916 2 119)) (= 105312291668557186697918027683670432318895095400549111254310977536 (x916 2 216))))
(assert (x882 x212))
(assert (= (x439 3257672857) (x330 3257672857)))
(assert (x882 x774))
(assert (x882 x521))
(assert (x342 x213))
(assert (x882 x359))
(assert (x342 x490))
(assert (x882 x391))
(assert (x882 x236))
(assert (x882 x338))
(assert (x882 x891))
(assert (x717 x927 x293))
(assert (x882 x676))
(assert (x882 x38))
(assert (x882 x489))
(assert (x882 x417))
(assert (x882 x829))
(assert (x342 x42))
(assert (x882 x55))
(assert (x504 x885 x806))
(assert (x28 x751 x102))
(assert (x882 x167))
(assert (x696 x910 x220))
(assert (x882 x514))
(assert (= (x330 274184521717934524641157099916833587244) (x439 274184521717934524641157099916833587244)))
(assert (x882 x90))
(assert (x882 x899))
(assert (= (- (/ x204 1461501637330902918203684832716283019655932542976) (uninterp_frac x204 1461501637330902918203684832716283019655932542976)) (x7 x204 160)))
(assert (x882 x527))
(assert (x882 x887))
(assert (x882 x50))
(assert (x523 x576 x731))
(assert (x342 x164))
(assert (x882 x611))
(assert (x697 x494 x654))
(assert (x882 x769))
(assert (x144 x195 x424))
(assert (x882 x469))
(assert (x342 x927))
(assert (x342 x64))
(assert (= (=> (= x646 (or (and (< x607 0) (= (<= x607 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x607))) (and (=> (and (= (x7 x256 176) x583) (= x364 (x7 x204 160)) (> x757 0) (= (x812 255 x89) x757) (= (> x765 0) x402) (= (x812 65535 x42) x290) (= x264 (x7 x256 192)) (= x218 (x812 65535 x583)) (= x42 (x7 x256 160)) (= (x812 1461501637330902918203684832716283019655932542975 x256) x51) (= x572 (x812 1461501637330902918203684832716283019655932542975 x204)) (= x765 (x812 255 x364)) (= x790 (x812 65535 x264)) x646 (or (and (= x199 1) (= 1 x511) x402 (= (ite (> 78 x765) 1 0) x233) (= x212 (x812 x199 x233)) (= x669 (x812 x511 x200)) (= x529 (= (x214 x212 x669) 0)) (= x200 (ite (< x765 32) 1 0)) (or (and (= (x916 10 x765) x755) (not x529)) (and (= x808 (< 1 x765)) (= x168 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458))) x529 (= x755 x305) (not (< x168 x171)) (= x305 (uninterp_mod (* x458 x171) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (not x808) (= 10 x458) (= 1 x171)) (and (= x458 100) (= x758 (x7 x765 1)) (= (> x758 1) x893) (= (x812 1 x765) x333) (not x893) (= x422 (= x333 0)) x808 (= x171 (ite x422 1 10))))))) (and (= 1 x755) (not x402)))) x63) (=> (and (= 1 x219) (not x646)) x768))) x815))
(assert (x882 x843))
(assert (= 65535 (x811 (x439 65535))))
(assert (x882 x240))
(assert (x882 x663))
(assert (x696 x819 x91))
(assert (x342 x877))
(assert (x696 x613 x898))
(assert (x882 x733))
(assert (x144 x403 x507))
(assert (= (=> (and (= x194 (x71 160)) (>= 1208925819614629174706175 x716) (= x1 (and (> x194 0) (= (<= x194 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= (x812 255 x89) x850) (>= 1208925819614629174706175 x357) (= (uninterp_mod (* (x163 x793) x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x433) (= x716 (x71 128)) (= (> x850 0) x294) (= (x812 340282366920938463463374607431768211455 x194) x722) (= x25 0) (= (not x1) x474) (not (ite x474 x474 (and (> x194 170141183460469231731687303715884105727) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x194))))) (= (x71 256) x357)) (and (=> (and (= x433 x903) (not x294)) x247) (=> x294 x334))) x524))
(assert (x882 x837))
(assert (x882 x290))
(assert (x882 x534))
(assert (= 20282409603651670423947251286016 (x811 (x439 20282409603651670423947251286016))))
(assert (x339 x338))
(assert (x882 x361))
(assert (x882 x607))
(assert (= x273 (or (and (not x420) x284) x752)))
(assert (x136 x437))
(assert (x882 x552))
(assert (= 3257672857 (x811 (x439 3257672857))))
(assert (= (x439 1168994686) (x330 1168994686)))
(assert (x882 x735))
(assert (x882 x437))
(assert (x882 x70))
(assert (=> (> (+ 10000 1) x227) (= (x330 x227) (x439 x227))))
(assert (x882 x268))
(assert (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 (x811 (x439 115792089237316195423570985008687907853269984655499359237631748795939503996928))))
(assert (= x120 (and x675 x454)))
(assert (x339 x793))
(assert (x882 x93))
(assert (x882 x126))
(assert (x717 x765 x162))
(assert (x342 x776))
(assert (x144 x440 x803))
(assert (x144 x327 x490))
(assert (x342 x565))
(assert (= x183 (or (and x632 x653) (and x823 x192))))
(assert (x882 x878))
(assert (x882 x19))
(assert (x342 x725))
(assert (x342 x910))
(assert (x342 x199))
(assert (x882 x865))
(assert (not x249))
(assert (x882 x556))
(assert (x882 x866))
(assert (x882 x906))
(assert (x28 x840 x241))
(assert (x882 x466))
(assert (x882 x472))
(assert (x614 x813 x740))
(assert (x882 x871))
(assert (x882 x720))
(assert (x717 x186 x809))
(assert (= (- (/ x927 2) (uninterp_frac x927 2)) (x7 x927 1)))
(assert (x882 x26))
(assert (x882 x551))
(assert (x882 x787))
(assert (x342 x892))
(assert (x28 x425 x470))
(assert (x882 x303))
(assert (=> (> (+ 10000 1) x321) (= (x330 x321) (x439 x321))))
(assert (= 274184521717934524641157099916833587235 (x811 (x330 274184521717934524641157099916833587235))))
(assert (x342 x460))
(assert (x882 x486))
(assert (x882 x196))
(assert (x342 x593))
(assert (x342 x803))
(assert (x882 x704))
(assert (x882 x753))
(assert (x882 x918))
(assert (= (=> (and (= x261 (> x359 1)) (= x359 (x812 255 x89)) (= x903 x180) (not x261)) x247) x309))
(assert (= (x811 (x439 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (= (x439 274184521717934524641157099916833587235) (x330 274184521717934524641157099916833587235)))
(assert (x882 x464))
(assert (x882 x72))
(assert (x177 x725))
(assert (x882 x509))
(assert (x342 x712))
(assert (x882 x576))
(assert (= x650 (and (not x823) x192)))
(assert (x882 x872))
(assert (x882 x874))
(assert (x696 x426 x12))
(assert (x882 x195))
(assert (x342 x205))
(assert (x882 x193))
(assert (x882 x587))
(assert (x882 x132))
(assert (x342 x583))
(assert (x342 x707))
(assert (x882 x854))
(assert (= (x330 274184521717934524641157099916833587227) (x439 274184521717934524641157099916833587227)))
(assert (x818 x664))
(assert (x342 x493))
(assert (x882 x575))
(assert (x342 x694))
(assert (x882 x409))
(assert (= x435 x640))
(assert (= x64 (x811 (x330 x64))))
(assert (x882 x803))
(assert (x696 x618 x332))
(assert (x882 x66))
(assert (x342 x174))
(assert (x342 x440))
(assert (x882 x304))
(assert (x882 x610))
(assert (x882 x621))
(assert (= (x330 170141183460469231731687303715884105727) (x439 170141183460469231731687303715884105727)))
(assert (x882 x379))
(assert (x144 x213 x460))
(assert (x882 x145))
(assert (x882 x174))
(assert (x136 274184521717934524641157099916833587233))
(assert (x882 x95))
(assert (x523 x230 x800))
(assert (= (x811 (x439 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (= (x439 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x330 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x882 x857))
(assert (x882 x789))
(assert (x882 x764))
(assert (x342 x338))
(assert (=> (> (+ 10000 1) x483) (= (x439 x483) (x330 x483))))
(assert (x342 x173))
(assert (x882 x385))
(assert (x523 x256 x881))
(assert (x882 x289))
(assert (x882 x528))
(assert (x882 x749))
(assert (= (and x481 x900) x284))
(assert (x342 x618))
(assert (x882 x895))
(assert (x882 x413))
(assert (x882 x762))
(assert (x882 x585))
(assert (x342 x436))
(assert (x882 x88))
(assert (= x576 (x811 (x330 x576))))
(assert (x882 x194))
(assert (x882 x513))
(assert (x882 x105))
(assert (x882 x128))
(assert (= (x330 204737060) (x439 204737060)))
(assert (= (x330 950698303) (x439 950698303)))
(assert (= (x330 480214969) (x439 480214969)))
(assert (x882 x357))
(assert (x267 x264 x15))
(assert (x136 x604))
(assert (x882 x182))
(assert (= (- (/ x256 95780971304118053647396689196894323976171195136475136) (uninterp_frac x256 95780971304118053647396689196894323976171195136475136)) (x7 x256 176)))
(assert (x342 x840))
(assert (x882 x226))
(assert (x882 x493))
(assert (x882 x18))
(assert (= (and x632 (not x653)) x192))
(assert (x342 x365))
(assert (x882 x885))
(assert (x882 x414))
(assert (x882 x380))
(assert (x882 x239))
(assert (x882 x790))
(assert (= (x811 (x439 1208925819614629174706175)) 1208925819614629174706175))
(assert (x882 x141))
(assert (x696 x725 x176))
(assert (= (x811 (x439 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x882 x727))
(assert (x28 x380 x363))
(assert (= 1168994686 (x811 (x439 1168994686))))
(assert (x882 x558))
(assert (x28 x755 x689))
(assert (x177 x618))
(assert (x882 x133))
(assert (x882 x644))
(assert (x882 x269))
(assert (x267 x877 x638))
(assert (= x822 (=> (and (= x597 (not x508)) (not (ite x597 x597 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x773) true) (> x773 170141183460469231731687303715884105727)))) (= 0 x55) (= (> x452 0) x481) (>= 1208925819614629174706175 x874) (= x269 (x825 256)) (= x874 (x825 128)) (= (x812 340282366920938463463374607431768211455 x773) x552) (= x607 (uninterp_mod (* x552 (x163 x338)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x773 (x825 160)) (= (x812 255 x89) x452) (>= 1208925819614629174706175 x269) (= x508 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x773) true) (> x773 0)))) (and (=> x481 x124) (=> (and (= x837 x607) (not x481)) x57)))))
(assert (x818 x654))
(assert (= (- (/ x186 2) (uninterp_frac x186 2)) (x7 x186 1)))
(assert (x342 x426))
(assert (x882 x849))
(assert (x882 x863))
(assert (= (x7 x256 192) (- (/ x256 6277101735386680763835789423207666416102355444464034512896) (uninterp_frac x256 6277101735386680763835789423207666416102355444464034512896))))
(assert (x136 274184521717934524641157099916833587231))
(assert (= (x330 274184521717934524641157099916833587211) (x439 274184521717934524641157099916833587211)))
(assert (= (x439 274184521717934524641157099916833587233) (x330 274184521717934524641157099916833587233)))
(assert (x696 x606 x845))
(assert (x882 x725))
(assert (x882 x852))
(assert (x882 x16))
(assert (x882 x497))
(assert (=> (< (- x604 1) 10000) (= (x330 x604) (x439 x604))))
(assert (x882 x260))
(assert (x882 x698))
(assert (= (uninterp_mod (x916 2 x414) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x846 1 x414)))
(assert (x882 x660))
(assert (x882 x436))
(assert (x697 x664 x307))
(assert (x882 x47))
(assert true)
(assert (=> (< (- x576 1) 10000) (= (x330 x576) (x439 x576))))
(assert (= (x811 (x330 x320)) x320))
(assert (x696 x707 x291))
(assert (x882 x370))
(assert (x342 x472))
(assert (x882 x813))
(assert (x523 x365 x281))
(assert (= (x439 20282409603651670423947251286016) (x330 20282409603651670423947251286016)))
(assert (x342 x606))
(assert (= (x811 (x439 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (= (=> (and (= (x812 18446744073709551615 x840) x858) (= 800 x753) (= x599 (x242 576)) (= (x287 (x330 x604) (x439 6) 0) x801) (= x79 544) (= (x812 18446744073709551615 x425) x248) (= x610 (x658 x928)) (= (x812 1461501637330902918203684832716283019655932542975 x599) x595) (>= 340282366920938463463374607431768211455 x610) (= (x812 1461501637330902918203684832716283019655932542975 x64) x604) (= (= 274184521717934524641157099916833587235 x486) x653) (= x486 (x812 1461501637330902918203684832716283019655932542975 x442)) (<= 0 x610) (= x442 (x559 608)) (= x928 (x287 (x330 x595) x801 0)) (< x610 340282366920938463463374607431768211456) (= x425 (x7 x204 168))) (and (=> (not x653) x73) (=> (and (= x573 (x395 224)) (= (x395 256) x648) (<= 0 x415) (= 4 x485) (= (x395 160) x8) (>= x574 0) (< 0 x463) (= (x395 192) x59) (not (= 2362581449 x571)) (= (x395 256) x268) (= 4272920204 x571) (not (> 2362581449 x571)) (<= 0 x756) (= x415 (x85 x27)) (= x485 4) (>= x383 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x415) (< x383 1208925819614629174706176) (= (x395 128) x128) x653 (<= x574 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1208925819614629174706175 x383) (= x901 160) (= x95 (x395 128)) (> 1208925819614629174706176 x756) (= x27 (x287 (x330 x227) (x439 1) 0)) (not (= 4062139261 x571)) (<= x756 1208925819614629174706175) (= (x395 160) x826) (>= x450 0) (= (x395 224) x26) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x253) (= (x92 (x330 274184521717934524641157099916833587235)) x463) (not (< x485 4)) (not (= 3257672857 x571)) (= x303 1) (= x74 (x395 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x450)) x592))) x512))
(assert (x342 x613))
(assert (= 274184521717934524641157099916833587211 (x811 (x330 274184521717934524641157099916833587211))))
(assert (x882 x283))
(assert (x882 x51))
(assert (x882 x404))
(assert (x342 x195))
(assert (x882 x819))
(assert (x136 x483))
(assert (=> (< (- x64 1) 10000) (= (x439 x64) (x330 x64))))
(assert (x177 x426))
(assert (= x124 (=> (and (= x420 (not (= x409 0))) (= (x812 1 x377) x409)) (and (=> x420 x815) (=> (and (not x420) (= x607 x691)) x231)))))
(assert (= x122 (and x561 (not x732))))
(assert (= (x811 (x439 4272920204)) 4272920204))
(assert (x882 x669))
(assert (x882 x776))
(assert (x882 x487))
(assert (x882 x298))
(assert (= (x7 x765 1) (- (/ x765 2) (uninterp_frac x765 2))))
(assert (x882 x687))
(assert (x882 x8))
(assert (x267 x899 x475))
(assert (x882 x722))
(assert (x882 x29))
(assert (= x480 (and x54 x646)))
(assert (x882 x494))
(assert (x342 x186))
(assert (x882 x754))
(assert (= 274184521717934524641157099916833587223 (x811 (x439 274184521717934524641157099916833587223))))
(assert (= 1099511627775 (x811 (x439 1099511627775))))
(assert (x882 x730))
(assert (x882 x746))
(assert (x882 x840))
(assert (x342 340282366920938463463374607431768211455))
(assert (x882 x838))
(assert (x342 x233))
(assert (x882 x868))
(assert (x882 x213))
(assert (x342 65535))
(assert (= (x330 11269569) (x439 11269569)))
(assert (= (x439 4062139261) (x330 4062139261)))
(assert (x882 x506))
(assert (x523 x442 x802))
(assert (x144 x199 x233))
(assert (x882 x636))
(assert (x504 x773 x791))
(assert (x144 x852 x205))
(assert (x882 x438))
(assert (= (x811 (x439 480214969)) 480214969))
(assert (x342 x264))
(assert (x882 x369))
(assert (x882 x917))
(assert (= x265 x900))
(assert (x882 x264))
(assert (x882 x188))
(assert (x342 x887))
(assert (x882 x460))
(assert (x882 x313))
(assert (x342 x256))
(assert (x882 x831))
(assert (x882 x129))
(assert (x882 x257))
(assert (x882 x433))
(assert (x882 x64))
(assert (x882 x723))
(assert (x882 x788))
(assert (x882 x349))
(assert (x882 x381))
(assert (x136 274184521717934524641157099916833587223))
(assert (x882 x41))
(assert (= (x330 1099511627775) (x439 1099511627775)))
(assert (x882 x203))
(assert (x882 x76))
(assert (x882 x78))
(assert (= (x330 4272920204) (x439 4272920204)))
(assert (x882 x157))
(assert (x342 x364))
(assert (x882 x583))
(assert (x342 x765))
(assert (x882 x719))
(assert (= (x811 (x330 x595)) x595))
(assert (x523 x599 x501))
(assert (x882 x180))
(assert (x882 x664))
(assert (x504 x436 x310))
(assert (x614 x89 x530))
(assert (x882 x549))
(assert (x882 x314))
(assert (x882 x37))
(assert (x882 x462))
(assert (x523 x593 x931))
(assert (x882 x572))
(assert (x136 274184521717934524641157099916833587211))
(assert (x882 x595))
(assert (x882 x483))
(assert (x882 x455))
(assert (x882 x101))
(assert (x882 x536))
(assert (x882 x795))
(assert (= 170141183460469231731687303715884105727 (x811 (x439 170141183460469231731687303715884105727))))
(assert (x882 x778))
(assert (x342 x852))
(assert (= (x811 (x330 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (x614 x364 x627))
(assert (x882 x307))
(assert (x882 x327))
(assert (x342 x835))
(assert (= (x811 (x439 274184521717934524641157099916833587211)) 274184521717934524641157099916833587211))
(assert (x882 x442))
(assert (x882 x919))
(assert (x882 x618))
(assert (x882 x308))
(assert (x882 x876))
(assert (x882 x328))
(assert (x342 x755))
(assert (and (= 1000000000000000000000000 (x916 10 24)) (= 10000 (x916 10 4)) (= 1000 (x916 10 3)) (= (x916 10 25) 10000000000000000000000000) (= (x916 10 8) 100000000) (= 10000000000000000 (x916 10 16)) (= 10000000000000 (x916 10 13)) (= (x916 10 12) 1000000000000) (= (x916 10 0) 1) (= (x916 10 14) 100000000000000) (= (x916 10 15) 1000000000000000) (= (x916 10 11) 100000000000) (= 10000000000000000000000 (x916 10 22)) (= 1000000000000000000000000000 (x916 10 27)) (= (x916 10 5) 100000) (= 100000000000000000 (x916 10 17)) (= 100000000000000000000 (x916 10 20)) (= 1000000000000000000000 (x916 10 21)) (= (x916 10 18) 1000000000000000000) (= (x916 10 6) 1000000) (= 100000000000000000000000 (x916 10 23)) (= (x916 10 2) 100) (= (x916 10 26) 100000000000000000000000000) (= 10000000000000000000000000000 (x916 10 28)) (= 1000000000 (x916 10 9)) (= 10000000 (x916 10 7)) (= 1000000000000000000000000000000 (x916 10 30)) (= (x916 10 1) 10) (= 100000000000000000000000000000 (x916 10 29)) (= 10000000000 (x916 10 10)) (= (x916 10 19) 10000000000000000000)))
(assert (x342 x813))
(assert (x818 x795))
(assert (x882 x792))
(assert (x882 x376))
(assert (x882 x104))
(assert (x882 x619))
(assert (x177 x707))
(assert (x342 x145))
(assert (= x437 (x811 (x330 x437))))
(assert (= (=> (= (or (> x433 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x433 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x433))) x880) (and (=> (and x880 (= x142 (> x927 0)) (= (x812 65535 x877) x197) (= x469 (x7 x256 192)) (or (and (= 1 x840) (not x142)) (and (or (and (= x840 (x916 10 x927)) (not x924)) (and x924 (= x857 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x762))) (or (and (not x844) (= 10 x762) (= 1 x908)) (and (= x438 (x812 1 x927)) (= x352 (x7 x927 1)) x844 (= (ite x554 1 10) x908) (= x641 (< 1 x352)) (= x554 (= x438 0)) (= 100 x762) (not x641))) (not (< x857 x908)) (= (< 1 x927) x844) (= x38 (uninterp_mod (* x908 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x38 x840))) x142 (= (x812 x195 x424) x413) (= (x812 x440 x803) x795) (= x924 (= 0 (x214 x413 x795))) (= (ite (> 32 x927) 1 0) x803) (= x424 (ite (> 78 x927) 1 0)) (= x195 1) (= 1 x440))) (= x39 (x812 65535 x899)) (= x30 (x812 1461501637330902918203684832716283019655932542975 x256)) (= (x7 x256 160) x877) (= x899 (x7 x256 176)) (= (x812 255 x89) x794) (< 0 x794) (= x784 (x7 x204 160)) (= (x812 65535 x469) x871) (= (x812 1461501637330902918203684832716283019655932542975 x204) x167) (= x927 (x812 255 x784))) x512) (=> (and (not x880) (= 1 x727)) x170))) x108))
(assert (x882 x276))
(assert (x882 x365))
(assert (x882 x830))
(assert (x818 x413))
(assert (= x4 (or (and (not x294) x399) x495)))
(assert (x882 x793))
(assert (x882 x616))
(assert (x882 x98))
(assert (x882 x81))
(assert (x342 x793))
(assert (x882 x759))
(assert (x136 274184521717934524641157099916833587235))
(assert (x882 x11))
(assert (x342 1461501637330902918203684832716283019655932542975))
(assert (x882 x150))
(assert (x882 x553))
(assert (x267 x14 x317))
(assert (x818 x307))
(assert (x882 x603))
(assert (= (- (/ x256 1461501637330902918203684832716283019655932542976) (uninterp_frac x256 1461501637330902918203684832716283019655932542976)) (x7 x256 160)))
(assert (x882 x248))
(assert (x882 x244))
(assert (x882 x207))
(assert (x818 x669))
(assert (x696 x712 x672))
(assert (x882 x683))
(assert (x882 x452))
(assert (x882 x254))
(assert (x882 x889))
(assert (x882 x451))
(assert (= (x330 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x439 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x882 x744))
(assert (x882 x410))
(assert (x882 x604))
(assert (x818 x212))
(assert (x882 x500))
(assert (x882 x547))
(assert (x882 x694))
(assert (x136 x576))
(assert (x882 x237))
(assert (x504 x565 x875))
(assert (= (x811 (x439 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x882 x423))
(assert (= (x439 274184521717934524641157099916833587223) (x330 274184521717934524641157099916833587223)))
(assert (x267 x469 x366))
(assert (x882 x642))
(assert (x882 x137))
(assert (x882 x425))
(assert (x882 x835))
(assert (x882 x356))
(assert (x342 x223))
(assert (x177 x910))
(assert (= 18446744073709551615 (x811 (x439 18446744073709551615))))
(assert (x882 x701))
(assert (x882 x593))
(assert (x882 x628))
(assert (x882 x850))
(assert (= (x330 70124239) (x439 70124239)))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x811 (x439 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (x882 x79))
(assert (x523 x237 x544))
(assert (x882 x707))
(assert (x882 x877))
(assert (= (x330 1208925819614629174706175) (x439 1208925819614629174706175)))
(assert (x882 x757))
(assert (x882 x541))
(assert (x882 x751))
(assert (x882 x164))
(assert (x882 x710))
(assert (= (x330 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x439 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x882 x45))
(assert (x882 x256))
(assert (x882 x138))
(assert (x696 x381 x804))
(assert (x882 x901))
(assert (= (=> (and (>= 20282409603651670423947251286015 x134) (= x531 (x287 (x330 x576) (x439 5) 0)) (>= x725 0) (= x45 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x105 (x443 (x330 274184521717934524641157099916833587244))) (= x601 (x92 (x330 274184521717934524641157099916833587233))) (> 65536 x377) (>= x123 0) (= x37 4) (<= 0 x44) (<= 0 x189) (<= 0 x730) (<= x135 1099511627775) (not (> 2362581449 x283)) (<= 0 x157) (<= x605 18446744073709551615) (= x428 (> (x92 (x330 274184521717934524641157099916833587223)) 0)) (>= x193 0) (>= x863 0) (>= x918 0) (= x674 (< 0 (x92 (x330 274184521717934524641157099916833587227)))) (>= x744 0) (>= 1208925819614629174706175 x196) (= (x443 (x330 274184521717934524641157099916833587235)) x44) (= 274184521717934524641157099916833587233 x710) (or (and (not x340) (<= 0 x849) (>= 18446744073709551615 x849) (not (or (> x613 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x613 0) (= true (<= x613 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (> x619 10141204801825835211973625643007)) (= x619 (x812 20282409603651670423947251286015 x819)) (< (* x849 x782) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x668 x819) (= x819 x426) (= (x812 20282409603651670423947251286015 x613) x782) (< x849 18446744073709551616) (= x668 (* x782 x849))) (and (> 18446744073709551616 x744) x340 (< (* x744 x306) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x812 20282409603651670423947251286015 x712) x306) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x613)) (not (= x109 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x618 x407) (= x426 x532) (= (x681 x618) x109) (= (x812 20282409603651670423947251286015 x618) x748) (= x407 (* x744 x306)) (>= 18446744073709551615 x744) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712) (and (> 0 x712) (= true (<= x712 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (< 10141204801825835211973625643007 x748)) (= (x864 (- 0 x613)) x712) (= x532 (x864 (- 0 x109))) (<= 0 x744))) (= 4 x299) (= x133 274184521717934524641157099916833587233) (not (> 4 x299)) (= x787 (x411 192)) (<= x918 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x101) (<= 0 x849) (not (= x283 4062139261)) (= false x390) (= (< 0 (x92 (x330 274184521717934524641157099916833587235))) x896) (>= x119 0) (= (> (x92 (x330 274184521717934524641157099916833587233)) 0) x60) (>= x90 0) (<= x863 1461501637330902918203684832716283019655932542975) (>= x149 0) (= 4272920204 x283) (not (= 2362581449 x283)) (<= 0 x150) (not (= 3257672857 x283)) (= 98097205 x735) (>= 1461501637330902918203684832716283019655932542975 x576) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x146) (> 1208925819614629174706176 x196) (<= 0 x105) (<= 0 x605) (<= 0 x550) (= (x287 (x330 x227) (x439 1) 0) x94) x456 (= (x411 256) x736) (= (x92 (x330 274184521717934524641157099916833587211)) x93) (not (< x313 950698303)) (> 1208925819614629174706176 x217) (= x550 x576) (= x830 128) (<= x193 18446744073709551615) (>= x377 0) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x613) true) (< x613 0)) (> x613 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x340) (>= 1461501637330902918203684832716283019655932542975 x730) (>= 1461501637330902918203684832716283019655932542975 x189) x60 (= (x661 x677) x377) (>= 18446744073709551615 x744) (= x861 false) (<= x725 20282409603651670423947251286015) (<= 0 x196) (= x558 x584) (>= x217 0) (>= 255 x226) (>= x620 0) (= x584 x676) (<= 0 x134) (= (x46 x531) x725) (>= x135 0) (<= x149 255) (= x338 (x681 x426)) (= (x411 160) x408) (>= 1208925819614629174706175 x196) (>= x789 0) (>= x378 0) (= (x411 128) x16) (<= 0 x756) (= 0 x188) (>= x121 0) (<= 0 x484) (<= x550 1461501637330902918203684832716283019655932542975) (>= x676 0) (< x313 2068668150) (= 4 x299) (= (x443 (x330 274184521717934524641157099916833587231)) x157) (>= 1099511627775 x165) x322 (= x3 x863) (>= x101 0) (>= x792 0) (<= 0 x489) (<= 0 x165) (<= x217 1208925819614629174706175) (= x613 (x681 x725)) (>= 18446744073709551615 x123) (= false x100) (= x13 (< 0 (x92 (x330 274184521717934524641157099916833587231)))) (= (x411 128) x663) (<= x489 20282409603651670423947251286015) x13 (<= x484 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x849 18446744073709551615) (> 1110625635 x313) (= x807 false) (<= 0 x217) (>= 1208925819614629174706175 x217) (= x456 (> (x92 (x330 274184521717934524641157099916833587244)) 0)) (= x146 (x608 x94)) x896 (= x88 (x411 256)) (< x313 1168994686) (<= x119 255) (>= x513 0) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1208925819614629174706175 x383) (>= x383 0) (> x601 0) x428 (= x313 950698303) x674 (= x496 (x411 224)) (= (x411 192) x455) (<= x150 18446744073709551615) (= x466 (x411 224)) (<= x789 20282409603651670423947251286015) (>= 18446744073709551615 x61) (<= 0 x146) (= x90 (x443 (x330 274184521717934524641157099916833587223))) (>= x196 0) (<= x620 20282409603651670423947251286015) (= x779 (x411 160)) (>= x61 0) (<= 0 x226) (<= x756 1208925819614629174706175) (>= x564 0) (> 20282409603651670423947251286016 x725) (= x521 x188) (>= 1461501637330902918203684832716283019655932542975 x676) (= x322 (> (x92 (x330 274184521717934524641157099916833587211)) 0)) (>= 255 x564) (= (x443 (x330 274184521717934524641157099916833587227)) x792) (> x93 0) (= x19 x730) (>= 65535 x377) (= (x443 (x330 274184521717934524641157099916833587233)) x378) (= x677 (x287 (x330 x576) (x439 5) 0)) (= x121 (x443 (x330 274184521717934524641157099916833587211))) (= x227 x462) (= x3 x101)) x822) x249))
(assert (x342 x469))
(assert (x882 x25))
(assert (x342 x843))
(assert (= (x439 18446744073709551616) (x330 18446744073709551616)))
(assert (x882 x782))
(assert (x136 x64))
(assert (x882 x123))
(assert (x136 x595))
(assert (x882 x320))
(assert (= (x330 340282366920938463463374607431768211455) (x439 340282366920938463463374607431768211455)))
(assert (x342 x204))
(assert (x882 x301))
(assert (x882 x510))
(assert (x882 x484))
(assert (x342 x230))
(assert (x882 x491))
(assert (= (or x343 (and x54 (not x646))) x447))
(assert (= (x330 10141204801825835211973625643007) (x439 10141204801825835211973625643007)))
(assert (x882 x75))
(assert (x342 x89))
(assert (= (=> (and (= (or (and (> 0 x903) (= (<= x903 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x903 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x649) (= x266 (not x649)) (= x727 (ite x266 1 0))) x170) x247))
(assert (= (x811 (x330 x604)) x604))
(assert (x882 x97))
(assert (x342 x549))
(assert (x882 x662))
(assert (x882 x2))
(assert (= x321 (x811 (x330 x321))))
(assert (x882 x204))
(assert (= x518 (=> (= (= x41 274184521717934524641157099916833587233) x732) (and (=> (not x732) x412) (=> (and (>= 1208925819614629174706175 x196) (= x706 (x287 (x330 x227) (x439 1) 0)) (= (x726 128) x349) (>= x217 0) (= x865 4) (> 1208925819614629174706176 x196) (= x370 (x726 160)) (<= 0 x196) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x304) (= x865 4) (not (= 3257672857 x628)) (not (= x628 2362581449)) (= (x726 224) x919) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x513) (= x304 (x608 x706)) (= x289 (x726 192)) (not (= 4062139261 x628)) (>= 1208925819614629174706175 x217) (> x856 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x484) (not (< x865 4)) (= x856 (x92 (x330 274184521717934524641157099916833587233))) (= x659 (x726 192)) (= x113 1) (> 1208925819614629174706176 x217) (= x129 (x726 256)) (= 160 x259) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x18) (>= x513 0) (= (x726 224) x906) (= (x726 160) x834) (= (x726 256) x393) x732 (not (> 2362581449 x628)) (= 4272920204 x628) (= (x726 128) x686) (>= x484 0) (>= x304 0)) x158)))))
(assert (= (x811 (x330 x483)) x483))
(assert (x882 x68))
(assert (x882 x168))
(assert (x136 274184521717934524641157099916833587244))
(assert (x342 x751))
(assert (x882 x121))
(assert (= x54 (and x284 x420)))
(assert (x882 x82))
(assert (= (x439 274184521717934524641157099916833587231) (x330 274184521717934524641157099916833587231)))
(assert (x882 x748))
(assert (x144 x511 x200))
(assert (= (x811 (x439 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x882 x219))
(assert (x342 x380))
(assert (= (or x273 (and (not x481) x900)) x343))
(assert (x882 x109))
(assert (x882 x352))
(assert (= (x330 1208925819614629174706176) (x439 1208925819614629174706176)))
(assert (x882 x756))
(assert (= (and (not x671) x480) x561))
(assert (x882 x364))
(assert (x882 x784))
(assert (x882 x905))
(assert (x882 x165))
(assert (x882 x856))
(assert (x882 x903))
(assert (x267 x145 x637))
(assert (x882 x609))
(assert (x882 x562))
(assert (x523 x204 x467))
(assert (x882 x783))
(assert (x882 x507))
(assert (= x227 (x811 (x330 x227))))
(assert (x342 255))
(assert (x144 x776 x843))
(assert (x342 x773))
(assert (= (x330 65536) (x439 65536)))
(assert (x882 x61))
(assert (x882 x833))
(assert (= (x330 340282366920938463463374607431768211456) (x439 340282366920938463463374607431768211456)))
(assert (x882 x426))
(assert (x882 x758))
(assert (x882 x383))
(assert (x882 x659))
(assert (x342 x425))
(assert (= 1110625635 (x811 (x439 1110625635))))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x811 (x439 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x882 x89))
(assert (x882 x374))
(assert (x882 x116))
(assert (x882 x217))
(assert (= (x439 65535) (x330 65535)))
(assert (= (x811 (x439 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x882 x205))
(assert (x882 x200))
(assert (x882 x897))
(assert (x882 x218))
(assert (x882 x56))
(assert (= (x330 2068668150) (x439 2068668150)))
(assert (x882 x186))
(assert (x882 x634))
(assert (x882 x765))
(assert (= (and x399 x294) x675))
(assert (x882 x457))
(assert (x882 x648))
(assert (x882 x39))
(assert (x882 x110))
(assert (x882 x834))
(assert (x882 x59))
(assert (x882 x295))
(assert (x882 x620))
(assert (x882 x490))
(assert (x882 x10))
(assert (x882 x30))
(assert (x882 x190))
(assert (x882 x540))
(assert (x882 x741))
(assert (x342 x511))
(assert (x882 x393))
(assert (= x57 (=> (and (= (not x855) x503) (= x219 (ite x503 1 0)) (= x855 (or (> x837 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x837) (= true (<= x837 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) x768)))
(assert (= true x412))
(assert (= (x811 (x439 70124239)) 70124239))
(assert (= (x811 (x439 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (x717 x377 x21))
(assert (= (x439 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x330 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x523 x64 x626))
(assert (x342 x424))
(assert (x882 x371))
(assert (=> (> (+ 10000 1) x595) (= (x439 x595) (x330 x595))))
(assert (x882 x336))
(assert (x882 x146))
(assert (x882 x858))
(assert (= (x811 (x439 950698303)) 950698303))
(assert (x882 x691))
(assert (x342 x899))
(assert (x882 x171))
(assert (= (x811 (x439 204737060)) 204737060))
(assert (x882 x574))
(assert (x696 x835 x83))
(assert (x882 x773))
(assert (x882 x565))
(assert (x882 x149))
(assert (x882 x223))
(assert (= 4062139261 (x811 (x439 4062139261))))
(assert (= 274184521717934524641157099916833587233 (x811 (x330 274184521717934524641157099916833587233))))
(assert (x342 x885))
(assert (= (=> (= x823 (= 274184521717934524641157099916833587233 x486)) (and (=> (not x823) x883) (=> (and (= x389 (x287 (x330 x227) (x439 1) 0)) (not (= 2362581449 x29)) (= x236 (x318 256)) (= (x318 128) x104) (<= 0 x551) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x70) (= (x318 192) x441) (>= x513 0) (= x551 (x608 x389)) (>= 1208925819614629174706175 x217) (>= 1208925819614629174706175 x196) (= 4 x336) (<= x484 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x662) (= x901 160) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x551) (= (x318 160) x132) (= x660 (x318 192)) (<= 0 x484) (= x336 4) (not (= 4062139261 x29)) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 3257672857 x29)) (= x301 (x318 160)) (>= x217 0) (= (x318 224) x615) (= (x318 256) x636) (not (< x29 2362581449)) x823 (>= x196 0) (> 1208925819614629174706176 x217) (not (< x336 4)) (= (x318 128) x500) (< x196 1208925819614629174706176) (= x895 (x318 224)) (= x29 4272920204) (= (x92 (x330 274184521717934524641157099916833587233)) x662) (= 1 x303)) x592))) x73))
(assert (x504 x793 x747))
(assert (x882 x794))
(assert (x28 x472 x65))
(assert (x882 x613))
(assert (x882 x550))
(assert (= true x883))
(assert (x342 x560))
(assert (x882 x777))
(assert (x882 x892))
(assert (x614 x75 x69))
(assert (= 274184521717934524641157099916833587231 (x811 (x439 274184521717934524641157099916833587231))))
(assert (x882 x779))
(assert (x342 x237))
(assert (x882 x485))
(assert (x342 1))
(assert (x882 x259))
(assert (x614 x892 x397))
(assert (= (x811 (x439 2068668150)) 2068668150))
(assert (x882 x173))
(assert (x882 x401))
(assert (x882 x333))
(assert (x342 x381))
(assert (x342 x377))
(assert (= 2362581449 (x811 (x439 2362581449))))
(assert (x342 x403))
(assert (= 274184521717934524641157099916833587231 (x811 (x330 274184521717934524641157099916833587231))))
(assert (x882 x517))
(assert (x882 x605))
(assert (x882 x667))
(assert (x882 x378))
(assert (x882 x44))
(assert (x882 x360))
(assert (= x752 (or (and x671 x480) (and x561 x732))))
(assert (= (x439 1461501637330902918203684832716283019655932542975) (x330 1461501637330902918203684832716283019655932542975)))
(assert (x882 x908))
(assert (x882 x826))
(assert (x882 x14))
(assert (= (=> (and (<= x611 340282366920938463463374607431768211455) (= (x812 1461501637330902918203684832716283019655932542975 x576) x320) (= x593 (x431 576)) (= x596 (x287 (x330 x320) (x439 6) 0)) (= x611 (x658 x52)) (= 544 x379) (= x41 (x812 1461501637330902918203684832716283019655932542975 x230)) (= x356 (x812 18446744073709551615 x164)) (= x164 (x7 x204 168)) (= (= x41 274184521717934524641157099916833587235) x671) (= x52 (x287 (x330 x321) x596 0)) (= x376 (x812 18446744073709551615 x755)) (= x418 800) (= (x155 608) x230) (= (x812 1461501637330902918203684832716283019655932542975 x593) x321) (> 340282366920938463463374607431768211456 x611) (>= x611 0)) (and (=> (and (not (< x683 2362581449)) (not (= 3257672857 x683)) (= x9 4) (= x251 (x287 (x330 x227) (x439 1) 0)) (= x386 (x630 224)) (<= x742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x630 256) x240) (<= x756 1208925819614629174706175) (= x783 (x630 160)) (not (< x9 4)) (= x9 4) (>= x383 0) (>= x450 0) x671 (= 1 x113) (= (x630 128) x723) (> x769 0) (<= 0 x756) (= (x85 x251) x742) (= x687 (x630 224)) (= (x630 192) x868) (not (= x683 4062139261)) (= x517 115197700812830431890159100217698998050002284567939525164234024451216521560064) (< x383 1208925819614629174706176) (= 160 x259) (> 1208925819614629174706176 x756) (<= 0 x574) (= x769 (x92 (x330 274184521717934524641157099916833587235))) (= x31 (x630 160)) (= (x630 256) x713) (= x239 (x630 128)) (<= 0 x742) (>= 1208925819614629174706175 x383) (= 4272920204 x683) (not (= 2362581449 x683)) (<= x574 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x450) (= x329 (x630 192))) x158) (=> (not x671) x518))) x63))
(assert (x882 x134))
(assert (= (x811 (x439 65536)) 65536))
(assert (= (x439 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x330 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x656 x673))
(assert (x144 x137 x328))
(assert (x697 x212 x669))
(assert (x882 x860))
(assert (x882 x418))
(assert (x882 x382))
(assert (= (=> (and (= x933 (and (< 0 x436) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x436)))) (not (ite x579 x579 (and (< 170141183460469231731687303715884105727 x436) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x436) true)))) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x259) true) (< x259 160)) (> x259 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x812 340282366920938463463374607431768211455 x436) x476) (= (x159 640) x829) (= x81 (x246 928)) (= x490 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x391) (> x509 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x391 x509) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x509) (<= x391 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (<= x891 1208925819614629174706175) (= (x812 18446744073709551615 x751) x244) (= (ite (or (and (< x719 x509) (= (<= x509 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x719 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x719) (<= x509 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x843) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x244 x541)) (= x719 (x864 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x607))) (>= 1208925819614629174706175 x81) (= (x246 832) x436) (= (x246 800) x891) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x607) (and (> 0 x607) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x607) true))) 1 0) x327) (= (x864 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x607)) x391) (= x579 (not x933)) (= x691 x733) (= x509 x737) (= x2 0) (= x776 (ite (not x925) 1 0)) (= (uninterp_mod (* x611 x476) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x541) (= x751 (x234 672)) (not (> x509 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (x812 x776 x843) x172) (not (= 0 x113)) (= x925 (or (> x607 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x607) true) (> 0 x607)))) (= x737 (* x244 x541)) (= (x812 x327 x490) x2) (= x733 (x767 (+ x607 x509))) (= x172 0)) x231) x158))
(assert (= x170 (=> (and (= x202 (not x335)) (= (ite x202 1 0) x905) (= (= x727 0) x335)) (=> (= (not (= x905 0)) x640) x435))))
(assert (= (x811 (x439 10141204801825835211973625643007)) 10141204801825835211973625643007))
(assert (x882 x253))
(assert (x882 x571))
(assert (= (x439 20282409603651670423947251286015) (x330 20282409603651670423947251286015)))
(assert (= (uninterp_mod (x916 2 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x846 1 x562)))
(assert (x882 x9))
(assert (x144 x694 x174))
(assert (x882 x736))
(assert (x342 x442))
(assert (x882 x206))
(assert (= (x7 x204 168) (- (/ x204 374144419156711147060143317175368453031918731001856) (uninterp_frac x204 374144419156711147060143317175368453031918731001856))))
(assert (x882 x296))
(assert (x882 x408))
(assert (x882 x922))
(assert (x882 x695))
(assert (= x768 (=> (and (= x917 (ite x693 1 0)) (= (not x99) x693) (= x99 (= x219 0))) (=> (and (= (x7 x204 160) x892) (= x521 x382) (= (x680 256) x385) (>= x910 0) (<= x207 1461501637330902918203684832716283019655932542975) (= 4 x203) (>= 1461501637330902918203684832716283019655932542975 x451) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x484) (= x72 (x680 256)) (not (= x749 70124239)) (= x634 (x812 65535 x887)) (= (x812 18446744073709551615 x560) x538) (= x793 (x681 x707)) (= x64 x550) (= (< 0 x186) x238) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x207) (= (ite (= x497 0) (not (= 0 (x812 340282366920938463463374607431768211455 x885))) (= x497 0)) x161) (< x749 2068668150) (= x66 x558) (= (x7 x204 168) x472) (> x432 0) (= x506 (x812 65535 x173)) (= x3 x76) (= x432 (x92 (x330 274184521717934524641157099916833587233))) x651 (>= 340282366920938463463374607431768211455 x493) (< x217 1208925819614629174706176) (<= x148 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (or (> x701 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 128 x701) (= true (<= x701 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (< x910 20282409603651670423947251286016) (= (x851 x235) x549) (= x695 (x680 192)) (not (= 4062139261 x34)) (= x497 (x812 340282366920938463463374607431768211455 x493)) (= x148 (x608 x904)) (<= 0 x196) (= 98097205 x749) (= x369 274184521717934524641157099916833587233) (= (x812 1461501637330902918203684832716283019655932542975 x374) x888) (< 131 x553) (= (x812 255 x892) x186) (= x14 (x7 x256 176)) (= (x680 128) x876) (>= 1461501637330902918203684832716283019655932542975 x237) (= x211 x237) (>= 1461501637330902918203684832716283019655932542975 x64) (< x749 480214969) (>= 1461501637330902918203684832716283019655932542975 x410) (>= x410 0) (= (x681 x910) x223) (= (x262 672) x374) (> 204737060 x749) (>= 65535 x549) (= x365 x600) (= (x92 (x330 274184521717934524641157099916833587211)) x361) (< 0 x361) (<= 0 x451) (= (x812 255 x89) x254) (= true (<= x553 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x651 (not (= 0 x917))) (= (x812 1461501637330902918203684832716283019655932542975 x256) x487) (= x141 (x92 (x330 274184521717934524641157099916833587211))) (= 4272920204 x34) (= x904 (x287 (x330 x227) (x439 1) 0)) (= x558 x308) (= x934 (x680 224)) (< 0 x141) (= x365 x838) (= x493 x68) (= x536 (x680 160)) (= x451 x66) (= (x812 65535 x14) x862) (> 1208925819614629174706176 x196) (>= x76 0) (<= x138 1461501637330902918203684832716283019655932542975) (not (> 2362581449 x34)) (= x764 950698303) (= 274184521717934524641157099916833587233 x741) (>= x510 0) (<= x217 1208925819614629174706175) (= x493 x401) (= x404 (x812 1461501637330902918203684832716283019655932542975 x204)) (= x296 x888) (not (= x34 3257672857)) (= x82 x885) (= (x287 (x330 x64) (x439 5) 0) x131) (= x547 640) (= x545 (or (and (> 0 x223) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x223))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x223))) (not (> 4 x203)) (>= x217 0) (>= x549 0) (= x720 x885) (> x43 0) (= (x46 x131) x910) (not (< x553 4)) (> x254 0) (= x410 x308) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x878) (not (< x764 950698303)) (= (x812 1461501637330902918203684832716283019655932542975 x237) x296) (> 950698303 x749) (= (x7 x256 192) x887) (= x237 x457) (= x110 x227) (<= 0 x484) (<= x885 340282366920938463463374607431768211455) (<= x76 1461501637330902918203684832716283019655932542975) (= x423 0) (not (= 2362581449 x34)) (= x182 (x680 128)) (<= x196 1208925819614629174706175) (or (and (not x161) (= (= 0 x667) x781) (= x667 (x812 340282366920938463463374607431768211455 x493)) (or (and (= x400 (x287 (x330 x483) (x439 5) 0)) (> 65536 x213) (= x562 (x812 255 x75)) (= (x812 x213 x460) x184) x797 (= x460 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x846 1 x562))) (>= 65535 x213) (<= 0 x213) (= x75 (x624 640)) (= (x661 x400) x213) (= x483 (x812 1461501637330902918203684832716283019655932542975 x365))) (not x797)) (= x797 (ite (not x781) (= 0 (x812 340282366920938463463374607431768211455 x885)) (not x781)))) (and (<= 0 x664) (= (x661 x277) x664) (= x437 (x812 1461501637330902918203684832716283019655932542975 x365)) (= x813 (x624 640)) (= (x287 (x330 x437) (x439 5) 0) x277) (= x316 (x812 65535 x145)) (= x414 (x812 255 x813)) (= (x846 1 x414) x307) (< x664 65536) (<= x664 65535) x161 (= x145 (x214 x664 x307)))) (< x764 1110625635) (or (and x238 (= x205 (ite (> 32 x186) 1 0)) (= x297 (= 0 (x214 x494 x654))) (= x654 (x812 x852 x205)) (= (x812 x137 x328) x494) (or (and x297 (= (uninterp_mod (* x872 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x609) (not (< x491 x897)) (= x609 x560) (= x491 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x872))) (or (and (not x434) (= x35 (= x754 0)) x103 (= x872 100) (= (x812 1 x186) x754) (= x434 (> x126 1)) (= x126 (x7 x186 1)) (= (ite x35 1 10) x897)) (and (= x872 10) (= 1 x897) (not x103))) (= (< 1 x186) x103)) (and (not x297) (= x560 (x916 10 x186)))) (= 1 x852) (= x328 (ite (> 78 x186) 1 0)) (= 1 x137)) (and (= 1 x560) (not x238))) (< x549 65536) (> 2068668150 x764) (>= 1461501637330902918203684832716283019655932542975 x510) (= (x680 192) x50) (= x3 x138) (= 640 x889) (= (x812 255 x89) x43) (= x235 (x287 (x330 x64) (x439 5) 0)) (or (and (= (* x260 x849) x448) (not (or (and (> 0 x223) (= true (<= x223 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x223 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x849 18446744073709551616) (< (* x849 x260) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x448 x835) (= x707 x835) (>= x849 0) (not (< 10141204801825835211973625643007 x354)) (= x354 (x812 20282409603651670423947251286015 x835)) (= (x812 20282409603651670423947251286015 x223) x260) (<= x849 18446744073709551615) (not x545)) (and (< (* x744 x295) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x864 (- 0 x276)) x585) (= x295 (x812 20282409603651670423947251286015 x381)) (= x707 x585) (>= x744 0) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x276)) (= x255 x606) (not (< 10141204801825835211973625643007 x556)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x381) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x381) true) (< x381 0)))) x545 (>= 18446744073709551615 x744) (= x556 (x812 20282409603651670423947251286015 x606)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x223)) (= x255 (* x295 x744)) (> 18446744073709551616 x744) (= x276 (x681 x606)) (= (x864 (- 0 x223)) x381))) (>= 1461501637330902918203684832716283019655932542975 x365) (= x173 (x7 x256 160)) (= 0 x721) (= (x864 (- x553 4)) x701) (>= 20282409603651670423947251286015 x910) (= x97 128) (= x11 (x680 160)) (>= x513 0) (<= 0 x148) (<= 0 x138) (= 0 x382) (not (= 11269569 x749)) (= x190 (x812 18446744073709551615 x472)) (= x521 x423) (= x203 4) (> 1168994686 x764) (= x464 (x680 224))) x524))))
(assert (x697 x413 x795))
(assert (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x811 (x439 115197700812830431890159100217698998050002284567939525164234024451216521560064))))
(assert (x882 x211))
(assert (= 274184521717934524641157099916833587223 (x811 (x330 274184521717934524641157099916833587223))))
(assert (x342 x328))
(assert (x882 x321))
(assert (= (x439 2362581449) (x330 2362581449)))
(assert (x882 x463))
(assert (x523 x374 x761))
(assert (x882 x377))
(assert (= (x439 1110625635) (x330 1110625635)))
(assert (= (x330 98097205) (x439 98097205)))
(assert (x882 x458))
(assert (x177 x606))
(assert (x28 x164 x175))
(assert (x882 x862))
(assert (x882 x354))
(assert (x882 x450))
(assert (x882 x148))
(assert (x818 x494))
(assert (x882 x440))
(assert (x504 x338 x685))
(assert (x882 x601))
(assert (x882 x511))
(assert (x882 x615))
(assert (x882 x113))
(assert (x267 x173 x515))
(assert (x342 x327))
(assert (x882 x316))
(assert (x342 18446744073709551615))
(assert (x882 x432))
(assert (x136 x320))
(assert (x882 x243))
(assert (= x231 (=> (and (= (x812 255 x89) x603) (= x691 x837) (= x633 (< 1 x603)) (not x633)) x57)))
(assert (x342 20282409603651670423947251286015))
(assert (= x265 true))
(assert (x882 x488))
(assert (x882 x441))
(assert (x882 x34))
(assert (x882 x43))
(assert (x28 x560 x111))
(assert (= 274184521717934524641157099916833587227 (x811 (x330 274184521717934524641157099916833587227))))
(assert (x882 x42))
(assert (x267 x583 x62))
(assert (= (x811 (x439 98097205)) 98097205))
(assert (x882 x538))
(assert (x882 x742))
(assert (=> (> (+ 10000 1) x320) (= (x439 x320) (x330 x320))))
(assert (x882 x135))
(assert (x882 x910))
(assert (= (x811 (x439 1208925819614629174706176)) 1208925819614629174706176))
(assert (x882 x415))
(assert (x882 x600))
(assert (x342 x599))
(assert (= x399 x447))
(assert (x882 x654))
(assert (x342 x784))
(assert (x882 x934))
(assert (= 11269569 (x811 (x439 11269569))))
(assert (x882 x584))
(assert (x882 x227))
(check-sat)
