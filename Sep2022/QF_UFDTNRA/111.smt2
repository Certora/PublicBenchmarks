(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x1129 0)) (((x405 (x397 x1129) (x404 Real)) (x1221 (x170 Real)) (x27 (x839 x1129) (x1295 x1129) (x913 Real)))))
(declare-fun x787 () x1129)
(declare-fun x616 () Real)
(declare-fun x595 () Real)
(declare-fun x879 () Bool)
(declare-fun x529 () Real)
(declare-fun x1324 () Bool)
(declare-fun x51 () Real)
(declare-fun x1451 () Real)
(declare-fun x1527 () Real)
(declare-fun x452 () Real)
(declare-fun x1136 () Bool)
(declare-fun x501 () Real)
(declare-fun x327 () x1129)
(declare-fun x1097 () Bool)
(declare-fun x1122 () Real)
(declare-fun x661 () Bool)
(declare-fun x420 () Real)
(declare-fun x1548 () Bool)
(declare-fun x95 () Real)
(declare-fun x899 () Bool)
(declare-fun x1473 () Real)
(declare-fun x1005 () Real)
(declare-fun x890 () Real)
(declare-fun x593 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x1267 () Real)
(declare-fun x638 () x1129)
(declare-fun x245 () Real)
(declare-fun x1347 () Real)
(declare-fun x770 () Real)
(declare-fun x533 () x1129)
(declare-fun x780 () Real)
(declare-fun x984 () Real)
(declare-fun x1013 () Bool)
(declare-fun x1252 () Real)
(declare-fun x1055 () Bool)
(declare-fun x946 () Real)
(declare-fun x299 () Real)
(declare-fun x497 () Real)
(declare-fun x1242 () Bool)
(declare-fun x458 () Real)
(declare-fun x914 () Real)
(declare-fun x1427 () x1129)
(declare-fun x74 () Bool)
(declare-fun x544 () x1129)
(declare-fun x50 () Real)
(declare-fun x543 () Bool)
(declare-fun x987 () Bool)
(declare-fun x636 () Bool)
(declare-fun x746 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1342 () x1129)
(declare-fun x324 () Bool)
(declare-fun x97 () Real)
(declare-fun x92 () x1129)
(declare-fun x1449 () Real)
(declare-fun x848 () Real)
(declare-fun x191 () Real)
(declare-fun x255 () Bool)
(declare-fun x481 () Real)
(declare-fun x1349 () x1129)
(declare-fun x3 () Bool)
(declare-fun x599 () x1129)
(declare-fun x1266 () x1129)
(declare-fun x566 () Real)
(declare-fun x15 () Real)
(declare-fun x1377 () Bool)
(declare-fun x669 () Real)
(declare-fun x532 () Real)
(declare-fun x1525 () x1129)
(declare-fun x76 () Real)
(declare-fun x1143 () Bool)
(declare-fun x1339 () Real)
(declare-fun x721 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x16 (Real) Real)
(declare-fun x1093 () Bool)
(declare-fun x1247 () x1129)
(declare-fun x1075 () Bool)
(declare-fun x477 () x1129)
(declare-fun x1296 () Real)
(declare-fun x364 () Bool)
(declare-fun x694 () x1129)
(declare-fun x1386 () Bool)
(declare-fun x989 () Bool)
(declare-fun x132 () Real)
(declare-fun x407 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1574 () Real)
(declare-fun x640 () Real)
(declare-fun x417 () Bool)
(declare-fun x482 () Real)
(declare-fun x663 () Real)
(declare-fun x1205 () x1129)
(declare-fun x1479 () Real)
(declare-fun x1027 () x1129)
(declare-fun x54 () Bool)
(declare-fun x965 () Bool)
(declare-fun x241 () Bool)
(declare-fun x102 () Bool)
(declare-fun x586 () Real)
(declare-fun x872 () x1129)
(declare-fun x1465 () Bool)
(declare-fun x769 () Bool)
(declare-fun x367 () Real)
(declare-fun x1067 () Real)
(declare-fun x461 () x1129)
(declare-fun x1583 () Bool)
(declare-fun x506 () Real)
(declare-fun x1250 () Real)
(declare-fun x845 () Real)
(declare-fun x652 () Real)
(declare-fun x1103 () Real)
(declare-fun x701 () x1129)
(declare-fun x737 () Real)
(declare-fun x1278 () Bool)
(declare-fun x39 () Real)
(declare-fun x788 () Real)
(declare-fun x80 () Real)
(declare-fun x391 () Real)
(declare-fun x273 () Bool)
(declare-fun x1197 () Real)
(declare-fun x388 () Real)
(declare-fun x1524 () Bool)
(declare-fun x696 () Real)
(declare-fun x603 () Bool)
(declare-fun x406 () Real)
(declare-fun x906 () Real)
(declare-fun x1269 () x1129)
(declare-fun x1356 () x1129)
(declare-fun x219 () Real)
(declare-fun x413 () x1129)
(declare-fun x986 () Real)
(declare-fun x356 () Real)
(declare-fun x1091 () Real)
(declare-fun x1224 () Real)
(declare-fun x874 () Real)
(declare-fun x781 () Real)
(declare-fun x72 () Bool)
(declare-fun x372 () Bool)
(declare-fun x195 () x1129)
(declare-fun x1177 () Real)
(declare-fun x176 () x1129)
(declare-fun x469 () Real)
(declare-fun x210 () Real)
(declare-fun x841 () Real)
(declare-fun x475 () Real)
(declare-fun x604 () Bool)
(declare-fun x65 () x1129)
(declare-fun x558 () x1129)
(declare-fun x727 () x1129)
(declare-fun x385 () Bool)
(declare-fun x254 () Real)
(declare-fun x357 () Real)
(declare-fun x178 () Bool)
(declare-fun x1044 () Real)
(declare-fun x766 () x1129)
(declare-fun x228 () Real)
(declare-fun x18 () Bool)
(declare-fun x660 () Bool)
(declare-fun x261 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1317 () Real)
(declare-fun x674 (x1129) Real)
(declare-fun x160 () Real)
(declare-fun x937 () Real)
(declare-fun x1127 () Bool)
(declare-fun x733 () Real)
(declare-fun x46 () Real)
(declare-fun x146 () Real)
(declare-fun x698 () Real)
(declare-fun x897 () Real)
(declare-fun x1584 (Real) Real)
(declare-fun x34 () Bool)
(declare-fun x578 () x1129)
(declare-fun x700 () Bool)
(declare-fun x570 () Bool)
(declare-fun x798 () Bool)
(declare-fun x1046 () x1129)
(declare-fun x517 () Real)
(declare-fun x247 () Real)
(declare-fun x585 () Real)
(declare-fun x173 () Bool)
(declare-fun x1084 () x1129)
(declare-fun x185 () Real)
(declare-fun x174 () Bool)
(declare-fun x622 () Bool)
(declare-fun x1516 (Real) Real)
(declare-fun x1105 () x1129)
(declare-fun x1165 () Real)
(declare-fun x1003 () Bool)
(declare-fun x1351 () Real)
(declare-fun x876 () x1129)
(declare-fun x1293 () x1129)
(declare-fun x1208 () Bool)
(declare-fun x1493 () Real)
(declare-fun x756 () Real)
(declare-fun x590 () x1129)
(declare-fun x1133 () x1129)
(declare-fun x1397 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x514 () Real)
(declare-fun x1312 () Real)
(declare-fun x762 () Bool)
(declare-fun x704 () Real)
(declare-fun x1056 (x1129) Real)
(declare-fun x1124 () Bool)
(declare-fun x429 () Real)
(declare-fun x632 () Bool)
(declare-fun x435 () Bool)
(declare-fun x591 () Real)
(declare-fun x5 () Bool)
(declare-fun x449 () Real)
(declare-fun x1393 () Real)
(declare-fun x1060 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x714 () Real)
(declare-fun x1359 () x1129)
(declare-fun x1025 () Real)
(declare-fun x1024 () Real)
(declare-fun x331 () Real)
(declare-fun x537 () Bool)
(declare-fun x1474 () x1129)
(declare-fun x941 () Real)
(declare-fun x546 () Bool)
(declare-fun x795 () Real)
(declare-fun x571 () Bool)
(declare-fun x1437 () Real)
(declare-fun x695 () Bool)
(declare-fun x316 () Bool)
(declare-fun x425 () Real)
(declare-fun x665 () Bool)
(declare-fun x1301 () Real)
(declare-fun x249 () Real)
(declare-fun x1017 (Real) x1129)
(declare-fun x1014 () x1129)
(declare-fun x753 () Bool)
(declare-fun x304 () Real)
(declare-fun x206 () Real)
(declare-fun x633 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x843 () Real)
(declare-fun x71 () Bool)
(declare-fun x966 () Real)
(declare-fun x1547 () Real)
(declare-fun x1380 () Real)
(declare-fun x1577 () Bool)
(declare-fun x181 (x1129) Real)
(declare-fun x668 () Bool)
(declare-fun x472 () Real)
(declare-fun x1104 () Real)
(declare-fun x325 () Bool)
(declare-fun x612 () Real)
(declare-fun x988 () Bool)
(declare-fun x1057 (Real) Real)
(declare-fun x1181 () Bool)
(declare-fun x1407 () x1129)
(declare-fun x1134 () Real)
(declare-fun x908 () Real)
(declare-fun x1432 () Real)
(declare-fun x340 () Bool)
(declare-fun x1431 () Real)
(declare-fun x1378 () Real)
(declare-fun x1169 () x1129)
(declare-fun x933 () Bool)
(declare-fun x549 (Real) Real)
(declare-fun x579 () Real)
(declare-fun x667 () Bool)
(declare-fun x732 () x1129)
(declare-fun x983 (Real) Real)
(declare-fun x213 () x1129)
(declare-fun x601 () x1129)
(declare-fun x91 () Bool)
(declare-fun x747 () Real)
(declare-fun x158 () Real)
(declare-fun x211 () Bool)
(declare-fun x504 () Real)
(declare-fun x554 () Bool)
(declare-fun x1192 () Real)
(declare-fun x1039 () Bool)
(declare-fun x479 (x1129) Real)
(declare-fun x238 (Real) Real)
(declare-fun x545 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1471 () Real)
(declare-fun x1015 () Bool)
(declare-fun x538 () Bool)
(declare-fun x1468 () x1129)
(declare-fun x32 () x1129)
(declare-fun x258 () Real)
(declare-fun x1049 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x415 () Real)
(declare-fun x1335 () Real)
(declare-fun x70 (x1129) Real)
(declare-fun x96 () Real)
(declare-fun x465 () Real)
(declare-fun x1459 () Real)
(declare-fun x945 (x1129) Real)
(declare-fun x1249 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x114 () Real)
(declare-fun x1362 () Real)
(declare-fun x598 () Real)
(declare-fun x702 () Real)
(declare-fun x1382 () Bool)
(declare-fun x748 () Real)
(declare-fun x1118 () x1129)
(declare-fun x430 (Real) Real)
(declare-fun x555 () Real)
(declare-fun x1458 () Real)
(declare-fun x1138 () Real)
(declare-fun x1543 () x1129)
(declare-fun x862 () x1129)
(declare-fun x672 () Real)
(declare-fun x829 () Bool)
(declare-fun x47 () x1129)
(declare-fun x1036 () Real)
(declare-fun x1487 () Real)
(declare-fun x1030 () Bool)
(declare-fun x270 () Bool)
(declare-fun x318 () Bool)
(declare-fun x957 () Bool)
(declare-fun x785 () Real)
(declare-fun x896 () Real)
(declare-fun x1225 () x1129)
(declare-fun x978 () x1129)
(declare-fun x915 () Real)
(declare-fun x274 () Real)
(declare-fun x754 () x1129)
(declare-fun x901 () Bool)
(declare-fun x817 () Real)
(declare-fun x894 () Real)
(declare-fun x1020 () Real)
(declare-fun x892 () x1129)
(declare-fun x1355 () x1129)
(declare-fun x301 (Real) Real)
(declare-fun x654 () Real)
(declare-fun x88 () x1129)
(declare-fun x306 () x1129)
(declare-fun x912 () Real)
(declare-fun x416 () Real)
(declare-fun x1447 () Bool)
(declare-fun x509 () Bool)
(declare-fun x1337 () x1129)
(declare-fun x14 () Bool)
(declare-fun x1052 () x1129)
(declare-fun x12 () Bool)
(declare-fun x574 () Bool)
(declare-fun x342 () Real)
(declare-fun x1211 () Bool)
(declare-fun x860 () x1129)
(declare-fun x991 () Real)
(declare-fun x528 () Real)
(declare-fun x85 () x1129)
(declare-fun x719 () x1129)
(declare-fun x1270 () Bool)
(declare-fun x883 () Real)
(declare-fun x1480 () x1129)
(declare-fun x635 () Real)
(declare-fun x498 () Real)
(declare-fun x332 (Real) Real)
(declare-fun x462 () Real)
(declare-fun x1564 () Real)
(declare-fun x490 () Real)
(declare-fun x436 () Bool)
(declare-fun x750 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1553 () Real)
(declare-fun x1568 () Real)
(declare-fun x59 (Real) Real)
(declare-fun x1415 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x1591 (x1129) Real)
(declare-fun x1022 () Real)
(declare-fun x350 () Real)
(declare-fun x1381 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x81 () x1129)
(declare-fun x969 () Bool)
(declare-fun x182 () x1129)
(declare-fun x542 () Real)
(declare-fun x742 () Real)
(declare-fun x1077 () Real)
(declare-fun x793 () Bool)
(declare-fun x931 () Real)
(declare-fun x1150 () x1129)
(declare-fun x374 (Real) Real)
(declare-fun x834 () Bool)
(declare-fun x1405 () Real)
(declare-fun x37 () Real)
(declare-fun x1542 () Bool)
(declare-fun x953 () Real)
(declare-fun x994 () Bool)
(declare-fun x309 () x1129)
(declare-fun x1216 () x1129)
(declare-fun x1430 () Real)
(declare-fun x572 () x1129)
(declare-fun x1065 () x1129)
(declare-fun x1578 () Real)
(declare-fun x605 () x1129)
(declare-fun x1401 () x1129)
(declare-fun x1448 () Real)
(declare-fun x297 () Real)
(declare-fun x1367 () Bool)
(declare-fun x878 () Bool)
(declare-fun x239 () Real)
(declare-fun x1087 () Real)
(declare-fun x460 () x1129)
(declare-fun x1454 () Bool)
(declare-fun x513 () Real)
(declare-fun x947 () x1129)
(declare-fun x208 () Real)
(declare-fun x1481 () Real)
(declare-fun x459 () x1129)
(declare-fun x354 () x1129)
(declare-fun x1114 () Real)
(declare-fun x1413 () Real)
(declare-fun x525 () x1129)
(declare-fun x1304 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x610 () Real)
(declare-fun x1475 () x1129)
(declare-fun x165 () Real)
(declare-fun x168 () Real)
(declare-fun x1232 () Real)
(declare-fun x813 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x680 (Real) Real)
(declare-fun x1245 () Real)
(declare-fun x411 () Bool)
(declare-fun x1565 () Real)
(declare-fun x1063 () Real)
(declare-fun x512 () Real)
(declare-fun x783 () Real)
(declare-fun x224 () Real)
(declare-fun x724 () x1129)
(declare-fun x184 () x1129)
(declare-fun x457 () Real)
(declare-fun x11 () Bool)
(declare-fun x396 () Bool)
(declare-fun x712 () x1129)
(declare-fun x1204 () x1129)
(declare-fun x720 () x1129)
(declare-fun x371 () x1129)
(declare-fun x1416 () Real)
(declare-fun x1387 () Real)
(declare-fun x1079 () Real)
(declare-fun x684 () Real)
(declare-fun x177 () Bool)
(declare-fun x922 () Real)
(declare-fun x248 () x1129)
(declare-fun x441 () Real)
(declare-fun x1325 () x1129)
(declare-fun x838 () x1129)
(declare-fun x64 () Real)
(declare-fun x1419 () Real)
(declare-fun x1502 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x414 () Bool)
(declare-fun x1072 () Real)
(declare-fun x375 () Real)
(declare-fun x1095 () Real)
(declare-fun x162 () Real)
(declare-fun x1273 (x1129) Real)
(declare-fun x442 () Bool)
(declare-fun x1580 () Real)
(declare-fun x722 () Real)
(declare-fun x410 () Real)
(declare-fun x898 () Real)
(declare-fun x611 () Real)
(declare-fun x1214 () Real)
(declare-fun x1139 () Bool)
(declare-fun x550 () Real)
(declare-fun x1100 () Bool)
(declare-fun x272 () Real)
(declare-fun x726 () x1129)
(declare-fun x1309 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x1090 () Real)
(declare-fun x902 () Real)
(declare-fun x1255 () Real)
(declare-fun x383 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x33 () Bool)
(declare-fun x313 () Bool)
(declare-fun x1076 () Real)
(declare-fun x369 () x1129)
(declare-fun x1470 () Bool)
(declare-fun x924 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x628 () x1129)
(declare-fun x1227 () x1129)
(declare-fun x290 () Real)
(declare-fun x148 () Real)
(declare-fun x1442 () Real)
(declare-fun x796 () Real)
(declare-fun x349 () x1129)
(declare-fun x94 () Bool)
(declare-fun x1500 () Real)
(declare-fun x1385 () Real)
(declare-fun x1071 () Bool)
(declare-fun x1173 () x1129)
(declare-fun x1299 () Real)
(declare-fun x266 () x1129)
(declare-fun x607 () Real)
(declare-fun x62 () x1129)
(declare-fun x455 () x1129)
(declare-fun x1571 () Real)
(declare-fun x1444 () x1129)
(declare-fun x1350 () Real)
(declare-fun x454 () Bool)
(declare-fun x343 (x1129) Real)
(declare-fun x708 () Bool)
(declare-fun x24 () Real)
(declare-fun x729 () Bool)
(declare-fun x1327 () Real)
(declare-fun x1294 () Real)
(declare-fun x154 () Bool)
(declare-fun x1264 () Real)
(declare-fun x169 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x1170 () Real)
(declare-fun x573 () Bool)
(declare-fun x889 () Real)
(declare-fun x1113 () Bool)
(declare-fun x138 () Real)
(declare-fun x341 () Real)
(declare-fun x1455 () Real)
(declare-fun x1283 () Real)
(declare-fun x1519 () x1129)
(declare-fun x1412 () Bool)
(declare-fun x938 () Real)
(declare-fun x577 () Bool)
(declare-fun x682 () x1129)
(declare-fun x831 () x1129)
(declare-fun x253 () Real)
(declare-fun x377 () Bool)
(declare-fun x686 () Real)
(declare-fun x835 () Real)
(declare-fun x1235 () x1129)
(declare-fun x485 () Bool)
(declare-fun x204 () Real)
(declare-fun x402 () Real)
(declare-fun x1272 () Real)
(declare-fun x799 () Real)
(declare-fun x264 () Bool)
(declare-fun x243 () Real)
(declare-fun x905 () Real)
(declare-fun x1051 () x1129)
(declare-fun x1154 () x1129)
(declare-fun x1484 () x1129)
(declare-fun x296 () Real)
(declare-fun x792 () Bool)
(declare-fun x1589 () Real)
(declare-fun x809 () Real)
(declare-fun x157 () Real)
(declare-fun x382 () Real)
(declare-fun x285 () Bool)
(declare-fun x802 () x1129)
(declare-fun x828 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x958 () x1129)
(declare-fun x38 () Bool)
(declare-fun x881 () Bool)
(declare-fun x1016 () x1129)
(declare-fun x1263 () Bool)
(declare-fun x1 () Real)
(declare-fun x1226 () Real)
(declare-fun x943 () Bool)
(declare-fun x220 () x1129)
(declare-fun x1343 () Real)
(declare-fun x1157 () Real)
(declare-fun x688 () Real)
(declare-fun x467 () Real)
(declare-fun x1171 () Bool)
(declare-fun x1560 () Real)
(declare-fun x1004 () Real)
(declare-fun x221 () Bool)
(declare-fun x60 () Bool)
(declare-fun x589 () Real)
(declare-fun x426 () Bool)
(declare-fun x916 () Real)
(declare-fun x624 () Real)
(declare-fun x478 () Real)
(declare-fun x827 () Real)
(declare-fun x1107 () Real)
(declare-fun x259 () Bool)
(declare-fun x882 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x1082 () Real)
(declare-fun x691 () Bool)
(declare-fun x964 () Bool)
(declare-fun x1365 () x1129)
(declare-fun x267 () Bool)
(declare-fun x122 () Real)
(declare-fun x749 (Real) Real)
(declare-fun x1358 () Real)
(declare-fun x826 () Real)
(declare-fun x1563 () Real)
(declare-fun x531 () Bool)
(declare-fun x666 () Real)
(declare-fun x671 (Real) Real)
(declare-fun x90 () x1129)
(declare-fun x1490 () Real)
(declare-fun x1182 () x1129)
(declare-fun x1031 () Real)
(declare-fun x637 () Bool)
(declare-fun x453 () Real)
(declare-fun x1315 () Real)
(declare-fun x923 () Bool)
(declare-fun x484 () Real)
(declare-fun x1106 () x1129)
(declare-fun x956 () x1129)
(declare-fun x276 () Bool)
(declare-fun x468 () Bool)
(declare-fun x744 () Real)
(declare-fun x312 () Real)
(declare-fun x928 () Real)
(declare-fun x217 () Real)
(declare-fun x888 () Real)
(declare-fun x863 () Real)
(declare-fun x1341 () Bool)
(declare-fun x214 () Real)
(declare-fun x322 () Bool)
(declare-fun x803 () Real)
(declare-fun x1305 (x1129) Real)
(declare-fun x907 () Bool)
(declare-fun x677 () Real)
(declare-fun x348 () Real)
(declare-fun x685 () Real)
(declare-fun x1199 () Real)
(declare-fun x1316 () x1129)
(declare-fun x1402 () Real)
(declare-fun x337 () Real)
(declare-fun x1268 () Bool)
(declare-fun x1492 () Real)
(declare-fun x1556 () Real)
(declare-fun x499 () Bool)
(declare-fun x678 () Bool)
(declare-fun x657 () Real)
(declare-fun x565 () Bool)
(declare-fun x307 () x1129)
(declare-fun x1472 () x1129)
(declare-fun x376 () Real)
(declare-fun x1374 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x1476 () x1129)
(declare-fun x1021 () Real)
(declare-fun x139 () x1129)
(declare-fun x1366 () Bool)
(declare-fun x790 () x1129)
(declare-fun x1372 () x1129)
(declare-fun x1363 () Real)
(declare-fun x1058 () Real)
(declare-fun x1369 () Real)
(declare-fun x1477 () x1129)
(declare-fun x952 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x557 () Real)
(declare-fun x1191 () Real)
(declare-fun x483 () Real)
(declare-fun x246 () Real)
(declare-fun x1219 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x515 () Real)
(declare-fun x338 () Real)
(declare-fun x223 () Real)
(declare-fun x675 () Real)
(declare-fun x1344 () Real)
(declare-fun x250 () Bool)
(declare-fun x1277 () Real)
(declare-fun x1321 () Real)
(declare-fun x84 () Real)
(declare-fun x1050 () Real)
(declare-fun x1506 () Bool)
(declare-fun x602 () Bool)
(declare-fun x982 () Real)
(declare-fun x779 () Real)
(declare-fun x265 () Bool)
(declare-fun x932 () Real)
(declare-fun x390 () Real)
(declare-fun x118 () Bool)
(declare-fun x21 () x1129)
(declare-fun x730 (x1129) Real)
(declare-fun x155 () Bool)
(declare-fun x1251 () Real)
(declare-fun x920 (Real) Real)
(declare-fun x424 () Real)
(declare-fun x1054 () x1129)
(declare-fun x105 () Real)
(declare-fun x765 () Real)
(declare-fun x1555 () Bool)
(declare-fun x205 () x1129)
(declare-fun x736 () Bool)
(declare-fun x1260 () Real)
(declare-fun x625 () Real)
(declare-fun x575 () Real)
(declare-fun x474 () Bool)
(declare-fun x1174 () Real)
(declare-fun x142 () Real)
(declare-fun x844 () Real)
(declare-fun x1440 () x1129)
(declare-fun x1009 () x1129)
(declare-fun x1228 () Real)
(declare-fun x180 () Real)
(declare-fun x1234 () x1129)
(declare-fun x1068 (x1129) Real)
(declare-fun x45 () Real)
(declare-fun x438 () Real)
(declare-fun x153 () x1129)
(declare-fun x709 () Bool)
(declare-fun x885 () Real)
(declare-fun x1275 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x541 () Bool)
(declare-fun x560 () x1129)
(declare-fun x1185 () x1129)
(declare-fun x1180 () Real)
(declare-fun x884 () Real)
(declare-fun x670 () x1129)
(declare-fun x57 () Real)
(declare-fun x855 () Real)
(declare-fun x681 () x1129)
(declare-fun x491 () Bool)
(declare-fun x101 () Real)
(declare-fun x1361 () x1129)
(declare-fun x687 () Bool)
(declare-fun x466 () Real)
(declare-fun x815 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x1532 () Real)
(declare-fun x1597 () Bool)
(declare-fun x476 () Bool)
(declare-fun x493 () Bool)
(declare-fun x1446 () Real)
(declare-fun x503 () Real)
(declare-fun x252 () Bool)
(declare-fun x156 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x256 () Real)
(declare-fun x823 () Real)
(declare-fun x1289 () Bool)
(declare-fun x1585 () Real)
(declare-fun x619 (Real Real) Real)
(declare-fun x244 () Bool)
(declare-fun x903 () Bool)
(declare-fun x464 () Real)
(declare-fun x302 () Bool)
(declare-fun x936 () Real)
(declare-fun x1001 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x511 () Bool)
(declare-fun x1537 () Real)
(declare-fun x370 () Real)
(declare-fun x1376 () Real)
(declare-fun x1328 () Real)
(declare-fun x1231 () Real)
(declare-fun x433 () Real)
(declare-fun x61 () Bool)
(declare-fun x495 () Real)
(declare-fun x778 () Bool)
(declare-fun x93 () x1129)
(declare-fun x1514 () Real)
(declare-fun x171 () Bool)
(declare-fun x1130 () Real)
(declare-fun x144 () Bool)
(declare-fun x683 () x1129)
(declare-fun x41 () x1129)
(declare-fun x1504 () Real)
(declare-fun x620 () Bool)
(declare-fun x613 () Real)
(declare-fun x1145 () Real)
(declare-fun x1018 () Bool)
(declare-fun x866 () Bool)
(declare-fun x143 () Bool)
(declare-fun x1112 () Real)
(declare-fun x968 () Real)
(declare-fun x1085 () Bool)
(declare-fun x569 () Real)
(declare-fun x1320 () Real)
(declare-fun x1450 () Bool)
(declare-fun x832 () Real)
(declare-fun x120 (Real) Real)
(declare-fun x861 () Real)
(declare-fun x576 () x1129)
(declare-fun x13 () Real)
(declare-fun x1121 () x1129)
(declare-fun x362 () Bool)
(declare-fun x764 () Bool)
(declare-fun x895 () x1129)
(declare-fun x365 () Real)
(declare-fun x552 () Bool)
(declare-fun x179 () Real)
(declare-fun x1507 () Bool)
(declare-fun x656 () Real)
(declare-fun x432 () Real)
(declare-fun x869 () Real)
(declare-fun x1364 () x1129)
(declare-fun x917 () Bool)
(declare-fun x751 () Bool)
(declare-fun x782 () Real)
(declare-fun x1271 () Real)
(declare-fun x893 () Real)
(declare-fun x269 () Real)
(declare-fun x1098 () Real)
(declare-fun x358 () Bool)
(declare-fun x1426 () Real)
(declare-fun x1311 () Bool)
(declare-fun x597 () x1129)
(declare-fun x1229 () Real)
(declare-fun x1533 () x1129)
(declare-fun x448 () Bool)
(declare-fun x294 () Real)
(declare-fun x36 () Real)
(declare-fun x55 () Real)
(declare-fun x1313 () Real)
(declare-fun x1179 () x1129)
(declare-fun x507 () Real)
(declare-fun x1371 () Bool)
(declare-fun x997 () x1129)
(declare-fun x743 () Real)
(declare-fun x98 () Real)
(declare-fun x649 () Bool)
(declare-fun x73 () Real)
(declare-fun x335 () Bool)
(declare-fun x8 () Real)
(declare-fun x818 () Real)
(declare-fun x40 () Real)
(declare-fun x1314 () x1129)
(declare-fun x1495 () Real)
(declare-fun x582 () Bool)
(declare-fun x222 () Bool)
(declare-fun x289 () Real)
(declare-fun x627 () Real)
(declare-fun x492 () Real)
(declare-fun x167 () Real)
(declare-fun x463 () Real)
(declare-fun x115 () Bool)
(declare-fun x1032 () Real)
(declare-fun x584 () Real)
(declare-fun x583 () x1129)
(declare-fun x1101 () Real)
(declare-fun x446 () x1129)
(declare-fun x242 () Real)
(declare-fun x1070 () Real)
(declare-fun x1045 () Bool)
(declare-fun x757 () Real)
(declare-fun x745 () Bool)
(declare-fun x1338 () Real)
(declare-fun x1418 () Real)
(declare-fun x626 () Real)
(declare-fun x1066 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x1594 () x1129)
(declare-fun x553 () Real)
(declare-fun x308 () Real)
(declare-fun x140 () Bool)
(declare-fun x1592 () x1129)
(declare-fun x43 () Real)
(declare-fun x1319 () Real)
(declare-fun x1513 () x1129)
(declare-fun x110 () Real)
(declare-fun x387 () Bool)
(declare-fun x66 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x849 () x1129)
(declare-fun x44 () Real)
(declare-fun x251 (Real) Real)
(declare-fun x295 () Real)
(declare-fun x710 () Real)
(declare-fun x1526 () Real)
(declare-fun x977 (Real) Real)
(declare-fun x1284 () Real)
(declare-fun x1187 () Bool)
(declare-fun x1417 () x1129)
(declare-fun x193 () Bool)
(declare-fun x1297 () Real)
(declare-fun x705 () Real)
(declare-fun x53 () x1129)
(declare-fun x87 () x1129)
(declare-fun x868 () Real)
(declare-fun x1420 () Real)
(declare-fun x522 () Real)
(declare-fun x642 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x119 () Real)
(declare-fun x381 () Bool)
(declare-fun x1203 () Real)
(declare-fun x262 () Real)
(declare-fun x934 () Real)
(declare-fun x1587 () Bool)
(declare-fun x1010 () Real)
(declare-fun x816 () Real)
(declare-fun x1116 () Bool)
(declare-fun x188 () Real)
(declare-fun x621 () Bool)
(declare-fun x606 () Bool)
(declare-fun x975 () Real)
(declare-fun x644 () Real)
(declare-fun x67 () Real)
(declare-fun x1048 () Real)
(declare-fun x918 () Real)
(declare-fun x548 () Real)
(declare-fun x1398 () Real)
(declare-fun x650 () Bool)
(declare-fun x592 () Bool)
(declare-fun x887 () Real)
(declare-fun x187 () Real)
(declare-fun x1282 () Bool)
(declare-fun x303 () Real)
(declare-fun x1567 () Real)
(declare-fun x526 () Real)
(declare-fun x734 () Bool)
(declare-fun x740 () Real)
(declare-fun x1198 () Real)
(declare-fun x1000 () Bool)
(declare-fun x1265 () Real)
(declare-fun x1064 () Real)
(declare-fun x955 (Real) Real)
(declare-fun x1186 () Real)
(declare-fun x86 () Bool)
(declare-fun x1528 () Real)
(declare-fun x1166 () Bool)
(declare-fun x951 () Bool)
(declare-fun x403 () x1129)
(declare-fun x707 () Bool)
(declare-fun x1595 () x1129)
(declare-fun x163 () Real)
(declare-fun x108 () Real)
(declare-fun x263 () Real)
(declare-fun x124 (Real) Real)
(declare-fun x75 () Real)
(declare-fun x634 (Real) Real)
(declare-fun x186 () Real)
(declare-fun x1148 () Bool)
(declare-fun x1582 () Real)
(declare-fun x875 () Real)
(declare-fun x121 () x1129)
(declare-fun x556 () Bool)
(declare-fun x280 () Bool)
(declare-fun x1238 () Real)
(declare-fun x822 () Real)
(declare-fun x434 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x279 () Real)
(declare-fun x939 () Real)
(declare-fun x786 () Real)
(declare-fun x392 () Bool)
(declare-fun x1109 () x1129)
(declare-fun x268 () Real)
(declare-fun x137 () Bool)
(declare-fun x134 () Bool)
(declare-fun x111 () Bool)
(declare-fun x1511 () Real)
(declare-fun x1300 () Real)
(declare-fun x149 () x1129)
(declare-fun x1207 () Real)
(declare-fun x717 () Bool)
(declare-fun x1503 () Real)
(declare-fun x395 () Real)
(declare-fun x851 () Real)
(declare-fun x428 () Bool)
(declare-fun x967 () x1129)
(declare-fun x962 () Real)
(declare-fun x344 () Real)
(declare-fun x319 () Real)
(declare-fun x201 () Real)
(declare-fun x1306 () Real)
(declare-fun x450 () x1129)
(declare-fun x439 () Bool)
(declare-fun x363 () Real)
(declare-fun x808 (x1129) Real)
(declare-fun x919 () Real)
(declare-fun x519 () x1129)
(declare-fun x1019 () x1129)
(declare-fun x731 () x1129)
(declare-fun x226 (Real) Real)
(declare-fun x1581 () Real)
(declare-fun x505 () Real)
(declare-fun x145 () x1129)
(declare-fun x79 () Real)
(declare-fun x741 () Bool)
(declare-fun x1140 () Real)
(declare-fun x1383 () Real)
(declare-fun x1375 () Real)
(declare-fun x1159 () Bool)
(declare-fun x1518 () x1129)
(declare-fun x1586 () Bool)
(declare-fun x277 () Real)
(declare-fun x1334 () Real)
(declare-fun x1453 () Bool)
(declare-fun x847 () Real)
(declare-fun x739 () x1129)
(declare-fun x1041 () Real)
(declare-fun x981 () Bool)
(declare-fun x1298 () x1129)
(declare-fun x804 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x641 () Real)
(declare-fun x990 () Bool)
(declare-fun x63 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x711 () Bool)
(declare-fun x334 () Bool)
(declare-fun x293 () Real)
(declare-fun x271 () Bool)
(declare-fun x275 () Real)
(declare-fun x42 () Real)
(declare-fun x1551 () Bool)
(declare-fun x443 () Real)
(declare-fun x1262 () Real)
(declare-fun x198 () Real)
(declare-fun x494 () Bool)
(declare-fun x820 () x1129)
(declare-fun x202 () x1129)
(declare-fun x1074 () Real)
(declare-fun x659 () Bool)
(declare-fun x1184 () x1129)
(declare-fun x865 () x1129)
(declare-fun x594 () Real)
(declare-fun x2 () Real)
(declare-fun x231 (Real) Real)
(declare-fun x77 () Real)
(declare-fun x679 () Real)
(declare-fun x1274 () Real)
(declare-fun x539 () x1129)
(declare-fun x1336 () Bool)
(declare-fun x339 () Real)
(declare-fun x1391 () Real)
(declare-fun x1142 () x1129)
(declare-fun x979 () Real)
(declare-fun x207 () Bool)
(declare-fun x547 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x1394 () Real)
(declare-fun x806 () Real)
(declare-fun x1137 () Bool)
(declare-fun x814 () Real)
(declare-fun x824 () Bool)
(declare-fun x534 () Real)
(declare-fun x1193 () Real)
(declare-fun x445 () Real)
(declare-fun x1570 () x1129)
(declare-fun x825 () Bool)
(declare-fun x1509 () x1129)
(declare-fun x614 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x412 () Bool)
(declare-fun x1256 () Real)
(declare-fun x164 () Real)
(declare-fun x317 () Real)
(declare-fun x960 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x1435 () Real)
(declare-fun x52 () Real)
(declare-fun x1510 () Real)
(declare-fun x190 () Real)
(declare-fun x713 () Real)
(declare-fun x1236 () Real)
(declare-fun x840 () Real)
(declare-fun x1404 () Real)
(declare-fun x1354 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x1353 () x1129)
(declare-fun x58 () Real)
(declare-fun x384 () Real)
(declare-fun x836 () Real)
(declare-fun x113 (Real) Real)
(declare-fun x1152 () Real)
(declare-fun x853 () Real)
(declare-fun x716 () Real)
(declare-fun x284 () Real)
(declare-fun x1212 () Real)
(declare-fun x1436 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x1011 () Real)
(declare-fun x1360 () Bool)
(declare-fun x1163 () Real)
(declare-fun x1156 () Real)
(declare-fun x1092 () Real)
(declare-fun x646 () Real)
(declare-fun x48 () Bool)
(declare-fun x580 () Bool)
(declare-fun x125 () Real)
(declare-fun x536 () Real)
(declare-fun x199 () Bool)
(declare-fun x1200 () Real)
(declare-fun x323 () Real)
(declare-fun x1218 () Bool)
(declare-fun x1131 () Real)
(declare-fun x859 () Bool)
(declare-fun x133 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x662 () Real)
(declare-fun x763 () Real)
(declare-fun x647 () Bool)
(declare-fun x447 () Real)
(declare-fun x1488 () Bool)
(declare-fun x643 () x1129)
(declare-fun x488 () Bool)
(declare-fun x1059 () Real)
(declare-fun x776 () Bool)
(declare-fun x1026 () Real)
(declare-fun x1562 () x1129)
(declare-fun x1081 () Real)
(declare-fun x789 () Bool)
(declare-fun x393 () Bool)
(declare-fun x209 () Real)
(declare-fun x854 () Real)
(declare-fun x886 () Real)
(declare-fun x904 () Real)
(declare-fun x1213 () Real)
(declare-fun x880 () Bool)
(declare-fun x1178 () x1129)
(declare-fun x1403 () Real)
(declare-fun x166 () Real)
(declare-fun x408 () Bool)
(declare-fun x353 () x1129)
(declare-fun x623 (x1129) Real)
(declare-fun x136 () Real)
(declare-fun x1423 () Real)
(declare-fun x1346 () Real)
(declare-fun x431 () Real)
(declare-fun x1230 () Real)
(declare-fun x998 () Real)
(declare-fun x725 () Real)
(declare-fun x959 () Bool)
(declare-fun x524 () Real)
(declare-fun x588 () Bool)
(declare-fun x399 () Real)
(declare-fun x282 () Real)
(declare-fun x380 () Bool)
(declare-fun x1379 () Real)
(declare-fun x288 () x1129)
(declare-fun x631 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x759 () Bool)
(declare-fun x49 () Real)
(declare-fun x106 () Real)
(declare-fun x315 () Real)
(declare-fun x345 () Bool)
(declare-fun x1281 () Real)
(declare-fun x22 () Real)
(declare-fun x1323 () x1129)
(declare-fun x949 () Bool)
(declare-fun x298 () Real)
(declare-fun x444 () Real)
(declare-fun x1575 (x1129) Real)
(declare-fun x409 () x1129)
(declare-fun x78 () Real)
(declare-fun x99 () x1129)
(declare-fun x1408 () Bool)
(declare-fun x950 () Bool)
(declare-fun x333 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x235 () Real)
(declare-fun x400 () Real)
(declare-fun x229 () Real)
(declare-fun x999 () Real)
(declare-fun x1223 () Bool)
(declare-fun x921 () Real)
(declare-fun x1410 () Real)
(declare-fun x1053 () x1129)
(declare-fun x587 () Bool)
(declare-fun x805 () Real)
(declare-fun x850 () Real)
(declare-fun x200 () Bool)
(declare-fun x100 () Bool)
(declare-fun x980 () Bool)
(declare-fun x480 () x1129)
(declare-fun x877 () Real)
(declare-fun x699 () Real)
(declare-fun x564 () Bool)
(declare-fun x852 () x1129)
(declare-fun x286 () Real)
(declare-fun x437 () x1129)
(declare-fun x189 (x1129) Real)
(declare-fun x562 () Real)
(declare-fun x676 () Real)
(declare-fun x651 () Bool)
(declare-fun x1576 () Real)
(declare-fun x1188 () x1129)
(declare-fun x1512 () x1129)
(declare-fun x1452 () Real)
(declare-fun x1406 () Real)
(declare-fun x320 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x768 () Real)
(declare-fun x944 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x985 () Bool)
(declare-fun x1028 () Real)
(declare-fun x10 () Real)
(declare-fun x1037 () Real)
(declare-fun x1146 () Real)
(declare-fun x618 () x1129)
(declare-fun x723 () Real)
(declare-fun x1040 () x1129)
(declare-fun x1086 () Real)
(declare-fun x1544 () Bool)
(declare-fun x609 () Real)
(declare-fun x772 () Real)
(declare-fun x230 () x1129)
(declare-fun x1409 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x1276 () x1129)
(declare-fun x1460 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x422 () Real)
(declare-fun x1390 () Bool)
(declare-fun x151 () Real)
(declare-fun x310 () Real)
(declare-fun x1505 () x1129)
(declare-fun x1035 () Real)
(declare-fun x328 () Real)
(declare-fun x639 () Real)
(declare-fun x1348 () Real)
(declare-fun x1248 () Bool)
(declare-fun x1498 () Real)
(declare-fun x1340 () Bool)
(declare-fun x1522 () Real)
(declare-fun x1302 () Bool)
(declare-fun x718 () Real)
(declare-fun x109 () x1129)
(declare-fun x1096 () Real)
(declare-fun x596 () Bool)
(declare-fun x1508 () x1129)
(declare-fun x1042 () Real)
(declare-fun x1329 () Bool)
(declare-fun x152 () Real)
(declare-fun x1183 () Real)
(declare-fun x856 () Real)
(declare-fun x1141 () x1129)
(declare-fun x1110 () Bool)
(declare-fun x697 () x1129)
(declare-fun x326 () Bool)
(declare-fun x240 () Bool)
(declare-fun x1421 () Real)
(declare-fun x423 () Real)
(declare-fun x972 () Bool)
(declare-fun x500 () Bool)
(declare-fun x1523 () Real)
(declare-fun x846 () Real)
(declare-fun x797 () Real)
(declare-fun x563 () Real)
(declare-fun x305 () x1129)
(declare-fun x123 () x1129)
(declare-fun x1552 () Real)
(declare-fun x1240 () Bool)
(declare-fun x1463 () Real)
(declare-fun x456 () x1129)
(declare-fun x1400 () Bool)
(declare-fun x1429 () Real)
(declare-fun x128 () x1129)
(declare-fun x361 () Bool)
(declare-fun x471 () Real)
(declare-fun x379 () Real)
(declare-fun x761 () Real)
(declare-fun x1538 () Real)
(declare-fun x1258 () Bool)
(declare-fun x175 () Real)
(declare-fun x1384 () Real)
(declare-fun x811 () Real)
(declare-fun x1291 () Bool)
(declare-fun x961 () Bool)
(declare-fun x1088 () Real)
(declare-fun x212 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x752 () Real)
(declare-fun x26 () Bool)
(declare-fun x1593 () Real)
(declare-fun x225 () Bool)
(declare-fun x1246 () Real)
(declare-fun x858 () Bool)
(declare-fun x942 () Bool)
(declare-fun x1034 () Real)
(declare-fun x900 () x1129)
(declare-fun x218 () Bool)
(declare-fun x378 () Real)
(declare-fun x1494 () Bool)
(declare-fun x993 () Real)
(declare-fun x1073 () Real)
(declare-fun x864 () Real)
(declare-fun x690 () Bool)
(declare-fun x1292 () Real)
(declare-fun x470 () Real)
(declare-fun x715 () Real)
(declare-fun x518 () x1129)
(declare-fun x1257 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x129 () Real)
(declare-fun x281 () Real)
(declare-fun x774 () Bool)
(declare-fun x1345 () Real)
(declare-fun x6 () x1129)
(declare-fun x767 () Bool)
(declare-fun x116 () Real)
(declare-fun x559 () x1129)
(declare-fun x257 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x1424 () x1129)
(declare-fun x1078 () Real)
(declare-fun x615 () x1129)
(declare-fun x1126 () Real)
(declare-fun x355 () Real)
(declare-fun x1569 () x1129)
(declare-fun x870 () Real)
(declare-fun x703 () x1129)
(declare-fun x1579 () Real)
(declare-fun x292 (x1129) Real)
(declare-fun x1153 () Real)
(declare-fun x1373 () x1129)
(declare-fun x807 () Real)
(declare-fun x1411 () Bool)
(declare-fun x1167 () x1129)
(declare-fun x735 () Bool)
(declare-fun x287 () Real)
(declare-fun x1497 () Real)
(declare-fun x346 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x664 () Real)
(declare-fun x1062 () Bool)
(declare-fun x1279 () Real)
(declare-fun x183 () Real)
(declare-fun x1119 () Bool)
(declare-fun x347 () Bool)
(declare-fun x35 () Real)
(declare-fun x871 () Real)
(declare-fun x1357 () Bool)
(declare-fun x974 () Bool)
(declare-fun x1007 () x1129)
(declare-fun x1061 () Bool)
(declare-fun x520 () x1129)
(declare-fun x508 () Bool)
(declare-fun x954 () Real)
(declare-fun x775 () Bool)
(declare-fun x278 () Real)
(declare-fun x1083 () Real)
(declare-fun x755 () Bool)
(declare-fun x1469 () Real)
(declare-fun x1520 () Real)
(declare-fun x801 () Real)
(declare-fun x568 () Real)
(declare-fun x451 () Bool)
(declare-fun x1540 () Real)
(declare-fun x30 (x1129) Real)
(declare-fun x1539 () Bool)
(declare-fun x1189 () Real)
(declare-fun x502 () Bool)
(declare-fun x20 () Real)
(declare-fun x25 () Real)
(declare-fun x1128 () Real)
(declare-fun x126 () Real)
(declare-fun x1253 () Bool)
(declare-fun x112 () Real)
(declare-fun x658 () Real)
(declare-fun x1499 () x1129)
(declare-fun x336 () x1129)
(declare-fun x1557 () Real)
(declare-fun x1023 () Bool)
(declare-fun x368 () x1129)
(declare-fun x127 () Bool)
(declare-fun x1445 () Real)
(declare-fun x487 () Real)
(declare-fun x976 () Real)
(declare-fun x821 () Real)
(declare-fun x489 () Bool)
(declare-fun x1195 (x1129) Real)
(declare-fun x857 () Real)
(declare-fun x909 () Bool)
(declare-fun x291 () Real)
(declare-fun x771 () Bool)
(declare-fun x196 () Real)
(declare-fun x1536 () Real)
(declare-fun x527 () x1129)
(declare-fun x728 () x1129)
(declare-fun x232 () Bool)
(declare-fun x330 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x1158 () x1129)
(declare-fun x608 () Bool)
(declare-fun x1464 () Real)
(declare-fun x617 () Real)
(declare-fun x1196 (Real) Real)
(declare-fun x192 () Real)
(declare-fun x351 () Real)
(declare-fun x161 () Real)
(declare-fun x31 () Bool)
(declare-fun x1117 () Real)
(declare-fun x1006 () Real)
(declare-fun x103 () Bool)
(declare-fun x398 () Bool)
(declare-fun x1259 () x1129)
(declare-fun x1561 () Real)
(declare-fun x1501 () Real)
(declare-fun x321 () Real)
(declare-fun x283 () Real)
(declare-fun x926 (Real Real) Real)
(declare-fun x629 () x1129)
(declare-fun x773 () Real)
(declare-fun x19 () Real)
(declare-fun x530 () Bool)
(declare-fun x995 (x1129) Real)
(declare-fun x1352 () Real)
(declare-fun x910 () Real)
(declare-fun x830 () Real)
(declare-fun x427 (x1129) Real)
(declare-fun x1331 () x1129)
(declare-fun x89 () Real)
(declare-fun x510 () x1129)
(declare-fun x812 () Real)
(declare-fun x1115 () Bool)
(declare-fun x1425 () Real)
(declare-fun x873 () Real)
(declare-fun x1254 () Real)
(declare-fun x1172 (x1129) Real)
(declare-fun x791 () Bool)
(declare-fun x197 () Real)
(declare-fun x521 () x1129)
(declare-fun x963 () x1129)
(declare-fun x68 () Real)
(declare-fun x970 () Real)
(declare-fun x135 () x1129)
(declare-fun x1290 () Real)
(declare-fun x141 () Real)
(declare-fun x389 () Bool)
(declare-fun x1457 () Real)
(declare-fun x692 () Real)
(declare-fun x486 () Bool)
(declare-fun x4 () Real)
(declare-fun x689 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x925 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x421 () Real)
(declare-fun x535 () Bool)
(declare-fun x69 () Real)
(declare-fun x738 () Bool)
(declare-fun x1456 () Real)
(declare-fun x1120 () Real)
(declare-fun x516 () Bool)
(declare-fun x203 () x1129)
(declare-fun x234 () Bool)
(declare-fun x194 () x1129)
(declare-fun x581 () x1129)
(declare-fun x948 () Real)
(declare-fun x930 () Real)
(declare-fun x1125 () Real)
(declare-fun x147 () Real)
(declare-fun x1241 () Bool)
(declare-fun x819 () Bool)
(define-fun x1162 ((x1129 x1129) (x1572 Real)) x1129 (ite ((_ is x405) x1129) (x405 (x397 x1129) (+ x1572 (x404 x1129))) (ite ((_ is x27) x1129) (x27 (x839 x1129) (x1295 x1129) (+ x1572 (x913 x1129))) (x1221 (+ x1572 (x170 x1129))))))
(define-fun x130 ((x1414 Real)) Real (ite (and (>= x1414 0) (< x1414 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1414 (- x1414 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x760 ((x1414 Real)) Real (ite (and (< x1414 0) (>= x1414 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1414) x1414))
(define-fun x1433 ((x777 Real)) Bool (and (< x777 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x777 0)))
(define-fun x329 ((x777 Real)) Bool (and (= (x619 115792089237316195423570985008687907853269984665640564039457584007913129639935 x777) x777) (= (x619 x777 115792089237316195423570985008687907853269984665640564039457584007913129639935) x777)))
(define-fun x630 ((x777 Real)) Bool (and (= 0 (x619 x777 0)) (= (x619 0 x777) 0)))
(define-fun x473 ((x777 Real)) Bool (= (x619 x777 x777) x777))
(define-fun x1303 ((x777 Real)) Bool (and (x329 x777) (x630 x777) (x473 x777)))
(define-fun x366 ((x777 Real)) Bool (= (x619 1461501637330902918203684832716283019655932542975 (x619 1461501637330902918203684832716283019655932542975 x777)) (x619 1461501637330902918203684832716283019655932542975 x777)))
(define-fun x1483 ((x777 Real)) Bool (=> (and (>= x777 0) (< x777 1461501637330902918203684832716283019655932542976)) (= (x619 1461501637330902918203684832716283019655932542975 x777) x777)))
(define-fun x842 ((x777 Real)) Bool (=> (= x777 (x619 1461501637330902918203684832716283019655932542975 x777)) (and (> 1461501637330902918203684832716283019655932542976 x777) (<= 0 x777))))
(define-fun x1217 ((x777 Real)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x777) (>= x777 1461501637330902918203684832716283019655932542976)) (= (- x777 1461501637330902918203684832716283019655932542976) (x619 1461501637330902918203684832716283019655932542975 x777))))
(define-fun x1190 ((x777 Real) (x386 Real)) Bool (and (>= x386 0) (= (+ (* 1461501637330902918203684832716283019655932542976 x386) (x619 1461501637330902918203684832716283019655932542975 x777)) x777)))
(define-fun x1194 ((x777 Real) (x28 Real)) Bool (and (x1483 x777) (x1217 x777) (x366 x777) (x842 x777) (x1190 x777 x28)))
(define-fun x1280 ((x777 Real) (x386 Real)) Bool (= (x619 x777 x386) (x619 x386 x777)))
(define-fun x373 ((x777 Real) (x386 Real)) Bool (and (=> (>= x386 0) (<= (x619 x777 x386) x386)) (>= (x619 x777 x386) 0) (=> (>= x777 0) (>= x777 (x619 x777 x386)))))
(define-fun x1517 ((x777 Real) (x386 Real)) Bool (and (x1280 x777 x386) (x373 x777 x386)))
(define-fun x1554 ((x777 Real) (x28 Real)) Bool (and (x1194 x777 x28) (x1517 x777 1461501637330902918203684832716283019655932542975)))
(define-fun x56 ((x777 Real)) Bool (= (x619 26959946667150639794667015087019630673637144422540572481103610249215 (x619 26959946667150639794667015087019630673637144422540572481103610249215 x777)) (x619 26959946667150639794667015087019630673637144422540572481103610249215 x777)))
(define-fun x567 ((x777 Real)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x777) (<= 0 x777)) (= x777 (x619 26959946667150639794667015087019630673637144422540572481103610249215 x777))))
(define-fun x260 ((x777 Real)) Bool (=> (= x777 (x619 26959946667150639794667015087019630673637144422540572481103610249215 x777)) (and (>= x777 0) (< x777 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x940 ((x777 Real)) Bool (=> (and (< x777 53919893334301279589334030174039261347274288845081144962207220498432) (>= x777 26959946667150639794667015087019630673637144422540572481103610249216)) (= (- x777 26959946667150639794667015087019630673637144422540572481103610249216) (x619 26959946667150639794667015087019630673637144422540572481103610249215 x777))))
(define-fun x83 ((x777 Real) (x386 Real)) Bool (and (>= x386 0) (= x777 (+ (x619 26959946667150639794667015087019630673637144422540572481103610249215 x777) (* x386 26959946667150639794667015087019630673637144422540572481103610249216)))))
(define-fun x810 ((x777 Real) (x28 Real)) Bool (and (x260 x777) (x567 x777) (x83 x777 x28) (x56 x777) (x940 x777)))
(define-fun x150 ((x777 Real) (x28 Real)) Bool (and (x810 x777 x28) (x1517 x777 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1215 ((x777 Real)) Bool (= (x619 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x619 115792089237316195423570985008687907853269984665640564039457584007913129639904 x777)) (x619 115792089237316195423570985008687907853269984665640564039457584007913129639904 x777)))
(define-fun x82 ((x777 Real)) Bool (=> (and (>= x777 0) (< x777 32)) (= (x619 115792089237316195423570985008687907853269984665640564039457584007913129639904 x777) 0)))
(define-fun x655 ((x777 Real) (x386 Real) (x1233 Real) (x973 Real)) Bool (and (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1233) (<= 0 x973) (> 32 x386) (> 1 x973) (>= x386 0) (<= 0 x1233) (= x777 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x973) x386 (* 32 x1233))) (= (* x1233 32) (x619 115792089237316195423570985008687907853269984665640564039457584007913129639904 x777))))
(define-fun x23 ((x777 Real) (x172 Real) (x837 Real) (x600 Real)) Bool (and (x1215 x777) (x655 x777 x172 x837 x600) (x82 x777)))
(define-fun x1332 ((x777 Real) (x172 Real) (x837 Real) (x600 Real)) Bool (and (x1517 x777 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x23 x777 x172 x837 x600)))
(define-fun x1210 ((x784 Real)) Real (x1516 x784))
(define-fun x1485 ((x784 Real)) Real (ite (= 128 x784) x999 (x16 x784)))
(define-fun x800 ((x784 Real)) Real (ite (and (> (+ x557 160) x784) (<= 160 x784)) (x1516 (+ (- x784 160) x1301)) (x1485 x784)))
(define-fun x1549 ((x784 Real)) Real (ite (= x303 x784) 0 (x800 x784)))
(define-fun x1149 ((x784 Real)) Real (ite (and (<= x44 x784) (> (+ x857 x44) x784)) (x1516 (+ x1457 (- x784 x44))) (x955 x784)))
(define-fun x1550 ((x784 x1129)) Real (ite (= x1179 x784) x1514 (x945 x784)))
(define-fun x236 ((x784 x1129)) Real (ite (= x784 x220) x1514 (x945 x784)))
(define-fun x1546 ((x784 x1129)) Real (ite (= x1054 x784) x1514 (x70 x784)))
(define-fun x540 ((x784 x1129)) Real (ite (= x820 x784) x1514 (x70 x784)))
(define-fun x419 ((x784 x1129)) Real (ite (and x442 x882) (x70 x784) (ite (and x899 x207) (x945 x784) (ite (and (not x1135) x1450) (x1546 x784) (x540 x784)))))
(define-fun x7 ((x784 x1129)) Real (ite (= x1007 x784) x1514 (x995 x784)))
(define-fun x1123 ((x784 x1129)) Real (ite (= x1173 x784) x1514 (x995 x784)))
(define-fun x1307 ((x784 x1129)) Real (ite (= x1141 x784) x1514 (x995 x784)))
(define-fun x867 ((x784 x1129)) Real (ite (= x784 x997) x1514 (x730 x784)))
(define-fun x561 ((x784 x1129)) Real (ite (= x1484 x784) x1514 (x730 x784)))
(define-fun x1099 ((x784 x1129)) Real (ite (= x1417 x784) x1514 (x730 x784)))
(define-fun x551 ((x784 x1129)) Real (ite (and x442 x882) (x730 x784) (ite (and x207 x899) (x995 x784) (ite (and (not x500) x137 (not x156)) (x867 x784) (ite (and x137 (not x156) x500) (x561 x784) (x1099 x784))))))
(define-fun x891 ((x784 x1129)) Real (ite (= x784 x450) x513 (x1195 x784)))
(define-fun x1388 ((x784 x1129)) Real (ite (= x784 x176) x95 (x479 x784)))
(define-fun x314 ((x784 x1129)) Real (ite (and x1450 (not x1135)) (x1388 x784) (x479 x784)))
(define-fun x227 ((x784 x1129)) Real (ite (and x882 x442) (x479 x784) (ite (and x207 x899) (x1195 x784) (x314 x784))))
(define-fun x1588 ((x784 x1129)) Real (ite (= x784 x327) x1313 (x808 x784)))
(define-fun x1155 ((x784 x1129)) Real (ite (= x123 x784) x158 (x1273 x784)))
(define-fun x394 ((x784 x1129)) Real (ite (and x137 (not x500) (not x156)) (x1155 x784) (x1273 x784)))
(define-fun x929 ((x784 x1129)) Real (ite (and x442 x882) (x1273 x784) (ite (and x899 x207) (x808 x784) (x394 x784))))
(define-fun x1147 ((x784 x1129)) Real (ite (= x784 x590) x1140 (x30 x784)))
(define-fun x1008 ((x784 x1129)) Real (ite (= x194 x784) x1487 (x1056 x784)))
(define-fun x1012 ((x784 x1129)) Real (ite (and x442 x882) (x189 x784) (ite (and x899 x207) (x674 x784) (ite (and (not x759) (not x969) x530 x1450) (x1056 x784) (ite (and x1450 (not x969) (not x530)) (x189 x784) (ite (and x1450 x969) (x189 x784) (x1008 x784)))))))
(define-fun x706 ((x784 Real)) Real (ite (= x784 x1299) x1320 (x59 x784)))
(define-fun x1438 ((x784 Real)) Real (ite (= x568 x784) x894 (x706 x784)))
(define-fun x1160 ((x784 Real)) Real (ite (and x177 x633) (x59 x784) (x1438 x784)))
(define-fun x359 ((x784 Real)) Real (ite (= x784 x355) x1180 (x1160 x784)))
(define-fun x401 ((x784 Real)) Real (ite (= x191 x784) x1532 (x1057 x784)))
(define-fun x29 ((x784 Real)) Real (ite (= x196 x784) x1101 (x124 x784)))
(define-fun x935 ((x784 Real)) Real (ite (= x1032 x784) x1252 (x29 x784)))
(define-fun x496 ((x784 Real)) Real (ite (and (not x156) (not x500) x137) (x935 x784) (ite (and (not x156) x137 x500) (x935 x784) (x124 x784))))
(define-fun x1102 ((x784 x1129)) Real (ite (= x784 x520) x699 (x1068 x784)))
(define-fun x1461 ((x784 x1129)) Real (ite (and x987 x380) (x1068 x784) (x1102 x784)))
(define-fun x911 ((x784 x1129)) Real (ite (= x784 x559) x1031 (x623 x784)))
(define-fun x1033 ((x784 x1129)) Real (ite (and x221 x177) (x623 x784) (x911 x784)))
(define-fun x1285 ((x784 Real)) Real (ite (= x10 x784) x1522 (x496 x784)))
(define-fun x360 ((x784 Real)) Real (ite (= x1238 x784) x1564 (x430 x784)))
(define-fun x1395 ((x784 Real)) Real (ite (and x442 x882) (x124 x784) (ite (and x207 x899) (x59 x784) (ite (and (not x969) x1450 x530 (not x759)) (x430 x784) (ite (and (not x530) x1450 (not x969)) (x226 x784) (ite (and x1450 x969) (x226 x784) (x360 x784)))))))
(define-fun x418 ((x784 Real)) Real (ite (= x784 x1413) x214 (x1395 x784)))
(define-fun x673 ((x784 Real)) Real (ite (= x341 x784) x497 (x418 x784)))
(define-fun x1111 ((x784 Real)) Real (ite (= x784 x390) x400 (x673 x784)))
(define-fun x1326 ((x784 Real)) Real (ite (= x784 x167) x348 (x1111 x784)))
(define-fun x352 ((x784 Real)) Real (ite (= x1096 x784) 32 (x1326 x784)))
(define-fun x1531 ((x784 Real)) Real (ite (= x784 x617) x328 (x749 x784)))
(define-fun x104 ((x784 Real)) Real (ite (= x656 x784) 0 (x120 x784)))
(define-fun x1392 ((x784 Real)) Real (ite (= x784 0) 1 (x634 x784)))
(define-fun x117 ((x784 Real)) Real (ite (= 0 x784) 1 (x634 x784)))
(define-fun x693 ((x784 Real)) Real (ite (and x1357 x989) (x1392 x784) (x117 x784)))
(define-fun x927 ((x784 Real)) Real (ite (= x1473 x784) x1262 (x680 x784)))
(define-fun x1201 ((x784 Real)) Real (ite (= x784 x1473) x98 (x680 x784)))
(define-fun x996 ((x784 Real)) Real (ite (= x1473 x784) x827 (x1196 x784)))
(define-fun x992 ((x784 Real)) Real (ite (and (< x784 (+ x827 x312)) (>= x784 x312)) (x693 (+ 0 (- x784 x312))) (x996 x784)))
(define-fun x1396 ((x784 Real)) Real (ite (and x1409 (not x1218)) (x992 x784) (x1196 x784)))
(define-fun x1144 ((x784 Real)) Real (ite (= x229 x784) x1214 (x1396 x784)))
(define-fun x653 ((x784 Real)) Real (ite (= x784 x190) x698 (x1144 x784)))
(define-fun x107 ((x784 Real)) Real (ite (= x784 x1527) x953 (x653 x784)))
(define-fun x1089 ((x784 Real)) Real (ite (= x1345 x784) x138 (x107 x784)))
(define-fun x971 ((x784 Real)) Real (ite (= x784 x483) 32 (x1089 x784)))
(define-fun x1175 ((x784 Real)) Real (ite (= x784 x861) x855 (x251 x784)))
(define-fun x1478 ((x784 Real)) Real (ite (= x1064 x784) 0 (x920 x784)))
(define-fun x300 ((x784 x1129)) Real (ite (= (x1017 274184521717934524641157099916833587206) x784) x677 (x343 x784)))
(define-fun x216 ((x784 x1129)) Real (ite (= x784 (x1017 x141)) x1567 (x300 x784)))
(define-fun x1176 ((x784 x1129)) Real (ite (= (x1017 x141) x784) x801 (x216 x784)))
(define-fun x645 ((x784 x1129)) Real (ite (= x784 (x1017 274184521717934524641157099916833587206)) x447 (x1176 x784)))
(define-fun x1566 ((x784 x1129)) Real (ite (= x784 (x1017 274184521717934524641157099916833587206)) x399 (x645 x784)))
(define-fun x794 ((x784 x1129)) Real (ite (= (x1017 x664) x784) x299 (x1566 x784)))
(define-fun x9 ((x784 x1129)) Real (ite (= x784 x99) x64 (x1172 x784)))
(define-fun x311 ((x784 x1129)) Real (ite (= x784 x1109) x1098 (x9 x784)))
(define-fun x1441 ((x784 x1129)) Real (ite (and x989 x1357) (x311 x784) (x1172 x784)))
(define-fun x237 ((x784 x1129)) Real (ite (= x784 x533) x253 (x1441 x784)))
(define-fun x648 ((x784 Real)) Real (ite (= 0 x784) 1 (x1584 x784)))
(define-fun x1161 ((x784 Real)) Real (ite (= x421 x784) x50 (x549 x784)))
(define-fun x1047 ((x784 x1129)) Real (ite (= x1508 x784) x1429 (x427 x784)))
(define-fun x159 ((x784 x1129)) Real (ite (= x1040 x784) x1448 (x1047 x784)))
(define-fun x523 ((x784 x1129)) Real (ite (and x1357 x989) (x427 x784) (x159 x784)))
(define-fun x215 ((x784 x1129)) Real (ite (= x597 x784) x938 (x523 x784)))
(define-fun x1467 ((x784 Real)) Real (ite (= x784 0) 1 (x1584 x784)))
(define-fun x1288 ((x784 Real)) Real (ite (= x784 x421) x887 (x549 x784)))
(define-fun x1559 ((x784 Real)) Real (ite (and x280 x1496) (x648 x784) (x1467 x784)))
(define-fun x833 ((x784 x1129)) Real (ite (= x784 (x1017 x664)) x1393 (x794 x784)))
(define-fun x1590 ((x784 Real)) Real (ite (= x784 x421) x844 (x977 x784)))
(define-fun x17 ((x784 Real)) Real (ite (and (> (+ x844 x247) x784) (>= x784 x247)) (x1559 (+ 0 (- x784 x247))) (x1590 x784)))
(define-fun x1462 ((x784 Real)) Real (ite (and x385 x1368) (x977 x784) (x17 x784)))
(define-fun x1094 ((x777 Real)) Bool (=> (and (> x777 10000) (not (= 1889567281 x777)) (not (= x777 604800)) (not (= 911411945 x777)) (not (= 2868243304 x777)) (not (= 2211524764 x777)) (not (= x777 115792089237316195423570985008687907853269984665640564039457)) (not (= 1986467848 x777)) (not (= x777 2258409472)) (not (= 1000000000000000000 x777)) (not (= 2512682246 x777)) (not (= 274184521717934524641157099916833587206 x777)) (not (= x777 2743102681)) (not (= 274184521717934524641157099916833587214 x777)) (not (= 2293535753 x777)) (not (= x777 649617121)) (not (= x777 2960351575)) (not (= 2418364589 x777)) (not (= x777 69947311)) (not (= x777 18446744073709551615)) (not (= 2532887486 x777)) (not (= 2764855426 x777)) (not (= 1461501637330902918203684832716283019655932542975 x777)) (not (= 2939843472 x777)) (not (= 1968616202 x777)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x777)) (not (= x777 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x777 2061678023)) (not (= 2835717307 x777)) (not (= 274184521717934524641157099916833587218 x777)) (not (= x777 468353030)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x777)) (not (= x777 826074471)) (not (= 635128645 x777)) (not (= x777 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x777 2514000705)) (not (= x777 142201243)) (not (= 87118632 x777)) (not (= x777 2690754053)) (not (= x777 2798343961)) (not (= 759532456 x777)) (not (= x777 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (not ((_ is x1221) (x1017 x777)))))
(assert (axiom_frac_bound (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1487 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x999 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1031 x1451 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 1000000000000000000 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1197 x185 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x278 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1451 x1031 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1576 x67 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x278 x1410 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67 x1260 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67 x1576 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x84 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x817 x1197 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x84 x780 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x932 x699 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x999 32 (uninterp_frac (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1487 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x999 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1031 x1451 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 1000000000000000000 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1197 x185 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x278 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1451 x1031 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1576 x67 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x278 x1410 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67 x1260 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67 x1576 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x84 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x817 x1197 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x84 x780 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x932 x699 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x999 32 (uninterp_frac (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1487 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x999 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1031 x1451 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 1000000000000000000 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1197 x185 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x278 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1451 x1031 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1576 x67 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x278 x1410 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67 x1260 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67 x1576 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x84 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x817 x1197 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x84 x780 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x932 x699 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x999 32 (uninterp_frac (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1487 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x999 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1031 x1451 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 1000000000000000000 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1197 x185 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1410 x278 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1451 x1031 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1576 x67 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x278 x1410 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67 x1260 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67 x1576 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x84 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x817 x1197 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x84 x780 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x932 x699 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x999 32 (uninterp_frac (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1152 1000000000000000000))
(assert (axiom_frac_zero x1152 1000000000000000000 1000000000000000000 x1487 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 32 x999 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x1031 x1451 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x1140 1000000000000000000 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x1197 x185 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x1410 x278 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x1451 x1031 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x1576 x67 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x278 x1410 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x67 x1260 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x67 x1576 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x780 x84 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x817 x1197 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x84 x780 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x932 x699 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_zero x1152 1000000000000000000 x999 32 (uninterp_frac x1152 1000000000000000000)))
(assert (axiom_frac_bound x1228 x1006))
(assert (axiom_frac_zero x1228 x1006 1000000000000000000 x1487 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 32 x999 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x1031 x1451 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x1140 1000000000000000000 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x1197 x185 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x1410 x278 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x1451 x1031 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x1576 x67 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x278 x1410 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x67 x1260 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x67 x1576 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x780 x84 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x817 x1197 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x84 x780 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x932 x699 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_zero x1228 x1006 x999 32 (uninterp_frac x1228 x1006)))
(assert (axiom_frac_bound x317 x585))
(assert (axiom_frac_zero x317 x585 1000000000000000000 x1487 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 32 x999 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x1031 x1451 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x1140 1000000000000000000 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x1197 x185 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x1410 x278 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x1451 x1031 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x1576 x67 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x278 x1410 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x67 x1260 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x67 x1576 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x780 x84 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x817 x1197 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x84 x780 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x932 x699 (uninterp_frac x317 x585)))
(assert (axiom_frac_zero x317 x585 x999 32 (uninterp_frac x317 x585)))
(assert (axiom_frac_bound x589 1000000000000000000))
(assert (axiom_frac_zero x589 1000000000000000000 1000000000000000000 x1487 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 32 x999 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x1031 x1451 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x1140 1000000000000000000 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x1197 x185 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x1410 x278 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x1451 x1031 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x1576 x67 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x278 x1410 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x67 x1260 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x67 x1576 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x780 x84 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x817 x1197 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x84 x780 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x932 x699 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_zero x589 1000000000000000000 x999 32 (uninterp_frac x589 1000000000000000000)))
(assert (axiom_frac_bound x68 1000000000000000000))
(assert (axiom_frac_zero x68 1000000000000000000 1000000000000000000 x1487 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 32 x999 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x1031 x1451 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x1140 1000000000000000000 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x1197 x185 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x1410 x278 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x1451 x1031 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x1576 x67 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x278 x1410 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x67 x1260 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x67 x1576 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x780 x84 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x817 x1197 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x84 x780 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x932 x699 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_zero x68 1000000000000000000 x999 32 (uninterp_frac x68 1000000000000000000)))
(assert (axiom_frac_bound x874 1000000000000000000))
(assert (axiom_frac_zero x874 1000000000000000000 1000000000000000000 x1487 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 32 x999 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x1031 x1451 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x1140 1000000000000000000 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x1197 x185 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x1410 x278 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x1451 x1031 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x1576 x67 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x278 x1410 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x67 x1260 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x67 x1576 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x780 x84 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x817 x1197 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x84 x780 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x932 x699 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_frac_zero x874 1000000000000000000 x999 32 (uninterp_frac x874 1000000000000000000)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1024))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1026))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1041))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1044))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x1059))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1063))
(assert (axiom_int_approximation x1064))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x1090))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1095))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1112))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1120))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1125))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1134))
(assert (axiom_int_approximation x1138))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1145))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x1177))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x1189))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1193))
(assert (axiom_int_approximation x1197))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1207))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1226))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x1229))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1231))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1262))
(assert (axiom_int_approximation x1264))
(assert (axiom_int_approximation x1265))
(assert (axiom_int_approximation x1267))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1274))
(assert (axiom_int_approximation x1277))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x1281))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1313))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1320))
(assert (axiom_int_approximation x1321))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x1328))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1335))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x1339))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1346))
(assert (axiom_int_approximation x1347))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x1351))
(assert (axiom_int_approximation x1352))
(assert (axiom_int_approximation x1358))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1363))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1376))
(assert (axiom_int_approximation x1378))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x138))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1393))
(assert (axiom_int_approximation x1394))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1403))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1405))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x1410))
(assert (axiom_int_approximation x1413))
(assert (axiom_int_approximation x1416))
(assert (axiom_int_approximation x1418))
(assert (axiom_int_approximation x1419))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x1420))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1425))
(assert (axiom_int_approximation x1426))
(assert (axiom_int_approximation x1429))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1437))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1448))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1456))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x146))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1464))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1471))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1479))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x1481))
(assert (axiom_int_approximation x1487))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1492))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1495))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1498))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x1500))
(assert (axiom_int_approximation x1501))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x151))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1514))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1520))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1523))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x1527))
(assert (axiom_int_approximation x1528))
(assert (axiom_int_approximation x1532))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x1538))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x1552))
(assert (axiom_int_approximation x1553))
(assert (axiom_int_approximation x1556))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1561))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1565))
(assert (axiom_int_approximation x1567))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1571))
(assert (axiom_int_approximation x1574))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x1578))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1581))
(assert (axiom_int_approximation x1582))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1589))
(assert (axiom_int_approximation x1593))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x198))
(assert (axiom_int_approximation x2))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x210))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x242))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x247))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x262))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x279))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x282))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x321))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x348))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x388))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x40))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x453))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x472))
(assert (axiom_int_approximation x475))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x482))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x503))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x507))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x57))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x641))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x699))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x715))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x73))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x747))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x763))
(assert (axiom_int_approximation x765))
(assert (axiom_int_approximation x768))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x788))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x803))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x817))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x822))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x827))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x843))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x851))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x870))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x874))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x877))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x884))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x886))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x890))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x922))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x939))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x970))
(assert (axiom_int_approximation x975))
(assert (axiom_int_approximation x976))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x991))
(assert (axiom_int_approximation x993))
(assert (axiom_int_approximation x998))
(assert (axiom_int_approximation x999))
(assert (= x1120 (x292 (x1017 x1120))))
(assert (x1433 x1226))
(assert (x1433 x1363))
(assert (=> (< (- x126 1) 10000) (= (x1017 x126) (x1221 x126))))
(assert (x1433 x295))
(assert (x1433 x1571))
(assert (x1433 x1076))
(assert (= x636 (=> (and (= (x619 1461501637330902918203684832716283019655932542975 x1145) x8) (<= x657 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x811 0) x736) (<= x811 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1472 (x27 (x1017 x8) x1105 0)) (= (x70 x1472) x811) (<= 0 x811) (not (< x657 x441)) (<= 0 x657) (= x1105 (x27 (x1017 x441) (x1221 6) 0))) (and (=> (and (= x84 x291) (= x615 (x27 (x1017 x441) (x1221 10) 0)) (= x282 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x291 (x1461 x456)) (>= x291 0) (not x736) (= x456 (x27 (x1017 x282) x615 0)) (= 0 x429) (<= x291 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x273) (=> x736 x476)))))
(assert (= (ite (= x704 x388) x415 (x226 x388)) (x430 x388)))
(assert (x1433 x1300))
(assert (= (ite (= x906 x1363) x458 (x231 x1363)) (x374 x1363)))
(assert (x1433 x1306))
(assert (= (x226 x51) (ite (= x78 x51) x748 (x1285 x51))))
(assert (x1094 x1072))
(assert (x1433 x481))
(assert (= (x292 (x1017 x290)) x290))
(assert (x1433 x873))
(assert (= (ite (and (not x606) x380 (not x63) x1422) (x1057 x167) (ite (and (not x606) (not x1422) x380) (x983 x167) (ite (and x380 x606) (x983 x167) (x401 x167)))) (x124 x167)))
(assert (= x160 (x292 (x1017 x160))))
(assert (x1433 x223))
(assert (x1433 x1315))
(assert (=> (> (+ 10000 1) x209) (= (x1017 x209) (x1221 x209))))
(assert (= (ite (and x538 x1115) (x955 x363) (x1149 x363)) (x59 x363)))
(assert (x1094 x1520))
(assert (x1433 x1114))
(assert (= x442 x380))
(assert (x1433 x765))
(assert (= x898 (x292 (x1017 x898))))
(assert (x1433 x1294))
(assert (= (or x385 (and x1113 (not x620)) (and x396 (not x1223))) x1202))
(assert (x1433 x1351))
(assert (= x434 (=> (= (= 274184521717934524641157099916833587214 x664) x1360) (and (=> (not x1360) x1454) (=> (and (= x304 68) (= x970 x1279) (not (= x921 826074471)) (= x1403 x640) (not (< x304 4)) (= x1081 x887) (= x938 (x760 (- x1083 x356))) (= (> x512 x1083) x834) (> x517 0) (not x834) (= x19 274184521717934524641157099916833587206) (= (x1591 (x1017 274184521717934524641157099916833587214)) x517) (<= x1403 1461501637330902918203684832716283019655932542975) (not (= 649617121 x921)) (= 2835717307 x921) (= (>= (+ x512 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x901) (= (+ x112 x970) x713) (= x1214 x1403) (not x901) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1083) (= x676 1) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x224) true) (< x224 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x224)) x1558) (not (< x921 649617121)) (= x224 (x760 (- x304 4))) (= x951 (< x1083 x356)) (= x698 x356) (<= x1279 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1360 (not (= 1889567281 x921)) (= x1083 (x523 x1235)) (= x1379 x304) (= 274184521717934524641157099916833587206 x982) (<= 0 x1083) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x512 x1279)) (= x1279 (x215 x1027)) (not (= 2514000705 x921)) (not x951) (= 32 x844) (= x1027 (x27 (x1017 x1403) (x1221 1) 0)) (= x597 (x27 (x1017 274184521717934524641157099916833587206) (x1221 1) 0)) (= (x27 (x1017 274184521717934524641157099916833587206) (x1221 1) 0) x1235) (= x512 x356) (= x112 x512) (>= x1279 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1122) (not x1558)) x1023)))))
(assert (x1433 x1398))
(assert (= (x292 (x1017 x1232)) x1232))
(assert (= x420 (x292 (x1017 x420))))
(assert (= (ite (and x380 x1422 (not x606) (not x63)) (x1057 x725) (ite (and (not x1422) (not x606) x380) (x983 x725) (ite (and x606 x380) (x983 x725) (x401 x725)))) (x124 x725)))
(assert (= (ite (= x198 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x198)) (x332 x198)))
(assert (x1433 x410))
(assert (x1433 x585))
(assert (=> (> (+ 10000 1) x1058) (= (x1017 x1058) (x1221 x1058))))
(assert (x1433 x610))
(assert (= (x1017 26959946667150639794667015087019630673637144422540572481103610249215) (x1221 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= 468353030 (x292 (x1221 468353030))))
(assert (x1433 x912))
(assert (= (x292 (x1017 x269)) x269))
(assert (x1094 x1231))
(assert (=> (< (- x1251 1) 10000) (= (x1221 x1251) (x1017 x1251))))
(assert (x1433 x186))
(assert (x1433 x25))
(assert (= (ite (and x1115 x538) (x955 x1193) (x1149 x1193)) (x59 x1193)))
(assert (x1433 x1344))
(assert (x1433 x204))
(assert (= x180 (x292 (x1017 x180))))
(assert (= (x59 x43) (ite (and x538 x1115) (x955 x43) (x1149 x43))))
(assert (= (ite (= x388 x183) x786 (x359 x388)) (x983 x388)))
(assert (x1433 x1265))
(assert (=> (< (- x441 1) 10000) (= (x1221 x441) (x1017 x441))))
(assert (= x1493 (x292 (x1017 x1493))))
(assert (x1433 x1581))
(assert (=> (> (+ 10000 1) x1383) (= (x1221 x1383) (x1017 x1383))))
(assert (x1433 x870))
(assert (= (ite (= x294 x51) x492 (x238 x51)) (x113 x51)))
(assert (x1433 x1538))
(assert (= (x292 (x1017 x1571)) x1571))
(assert (x1433 x893))
(assert (= x773 (x292 (x1017 x773))))
(assert (= (x430 x624) (ite (= x704 x624) x415 (x226 x624))))
(assert (= (x749 x624) (ite (= x624 x1026) x714 (x113 x624))))
(assert (x1433 x1547))
(assert (x1433 x157))
(assert (x1094 x1431))
(assert (= x688 (x292 (x1017 x688))))
(assert (= x1520 (x292 (x1017 x1520))))
(assert (= x476 (=> (= x1261 (< 0 x441)) (and (=> x1261 x407) (=> (not x1261) x1137)))))
(assert (=> (< (- x1213 1) 10000) (= (x1221 x1213) (x1017 x1213))))
(assert (= (x70 x583) (ite (and x380 x933) (x1550 x583) (x236 x583))))
(assert (= (or (and x907 (not x602)) x488) x380))
(assert (= (ite (= x1536 x1363) x796 (x671 x1363)) (x231 x1363)))
(assert (= x1399 (=> (and x516 (= (x645 (x1017 x664)) x1582) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1582) x1069) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1566 (x1017 x664))) x100) (= (<= 0 x351) x516) x1069 x100 (= (x1566 (x1017 x664)) x299) (= (x645 (x1017 274184521717934524641157099916833587206)) x399) (= x280 (= x664 274184521717934524641157099916833587218)) (= x1469 x1379) (= x351 (x645 (x1017 274184521717934524641157099916833587206)))) (and (=> (and (= x676 1) (not x474) (= (x1591 (x1017 274184521717934524641157099916833587218)) x1327) (= x422 x1379) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x45 x187)) (> x1327 0) (= x253 (x760 (- x289 x1435))) (not (> 649617121 x1406)) (= x1406 2835717307) (= x844 32) (= x1184 (x27 (x1017 274184521717934524641157099916833587206) (x1221 1) 0)) (= (> x1435 x289) x924) x280 (>= 1461501637330902918203684832716283019655932542975 x164) (= x698 x1435) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x45 x187)) x474) (= x1214 x164) (= (x237 x703) x45) (= (+ x686 x287) x816) (not (< x422 4)) (= 274184521717934524641157099916833587206 x1547) (= x287 x45) (>= x45 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x289) (not x924) (= x533 (x27 (x1017 274184521717934524641157099916833587206) (x1221 1) 0)) (not x143) (not (= x1406 826074471)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x45) (= x1435 x187) (= x289 (x1441 x1184)) (= (x760 (- x422 4)) x168) (= x1542 (or (> x168 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x168) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x168) true)))) (= x143 (< x289 x187)) (= x703 (x27 (x1017 x164) (x1221 1) 0)) (not (= 1889567281 x1406)) (= 274184521717934524641157099916833587206 x1183) (= x164 x1500) (not (= 649617121 x1406)) (not (= x1406 2514000705)) (= x686 x187) (not x1542) (= x310 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x50 x58) (= 68 x422) (>= x289 0)) x1023) (=> (not x280) x434)))))
(assert (x1433 x806))
(assert (= (x1017 1889567281) (x1221 1889567281)))
(assert (= (or (and x280 x1496) (and x1360 x1486)) x385))
(assert (=> (> (+ 10000 1) x773) (= (x1017 x773) (x1221 x773))))
(assert (x1433 x826))
(assert (x1433 x268))
(assert (x1433 x1063))
(assert (=> (> (+ 10000 1) x779) (= (x1221 x779) (x1017 x779))))
(assert (x1433 x851))
(assert (=> (> (+ 10000 1) x722) (= (x1221 x722) (x1017 x722))))
(assert (x1433 x855))
(assert (= (x1273 x560) (ite (and x177 x633) (x808 x560) (ite (and x177 (not x633) x387) (x808 x560) (x1588 x560)))))
(assert (= x1130 (x292 (x1017 x1130))))
(assert (= (ite (= x1193 x294) x492 (x238 x1193)) (x113 x1193)))
(assert (= (ite (and x633 x177) (x808 x1293) (ite (and x177 x387 (not x633)) (x808 x1293) (x1588 x1293))) (x1273 x1293)))
(assert (x1433 x1284))
(assert (x1094 x77))
(assert (x1433 x1565))
(assert (x1094 x563))
(assert (x1433 x1180))
(assert (=> (> (+ 10000 1) x290) (= (x1017 x290) (x1221 x290))))
(assert (= (x292 (x1017 x1005)) x1005))
(assert (x1433 x756))
(assert (x1554 x765 x1165))
(assert (= x131 (=> (= x896 x342) x509)))
(assert (x1433 x569))
(assert (=> (< (- x853 1) 10000) (= (x1017 x853) (x1221 x853))))
(assert (x1433 x663))
(assert (x1303 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x1057 x1238) (ite (= x1238 x1036) x323 (x983 x1238))))
(assert (= x73 (x292 (x1017 x73))))
(assert (x1433 x598))
(assert (=> (> (+ 10000 1) x423) (= (x1017 x423) (x1221 x423))))
(assert (x1433 x328))
(assert (= (ite (and x1357 x989) (x927 x198) (x1201 x198)) (x1196 x198)))
(assert (= (ite (= x725 x1036) x323 (x983 x725)) (x1057 x725)))
(assert (x1433 x1189))
(assert (= (ite (= x1036 x1265) x999 (x1549 x1036)) (x955 x1036)))
(assert (x1433 x747))
(assert (x1433 x1481))
(assert (=> (> (+ 10000 1) x161) (= (x1017 x161) (x1221 x161))))
(assert (= x1115 x199))
(assert (x1433 x514))
(assert (x1433 x662))
(assert (x1433 x1452))
(assert (=> (< (- x495 1) 10000) (= (x1221 x495) (x1017 x495))))
(assert (= (=> (and (not (= x1455 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (> x441 x357) x882) (= x441 (x130 (+ x1571 1)))) (and (=> (and (= x196 x390) x882) x347) (=> (not x882) x981))) x708))
(assert (x1433 x702))
(assert (x1094 x1048))
(assert (x1433 x928))
(assert (= (ite (= x1265 x1292) x999 (x1549 x1292)) (x955 x1292)))
(assert (= (x1221 1000000000000000000) (x1017 1000000000000000000)))
(assert (x1433 x391))
(assert (=> (< (- x1523 1) 10000) (= (x1221 x1523) (x1017 x1523))))
(assert (x1094 x1281))
(assert (x1433 x505))
(assert (= (x59 x704) (ite (and x1115 x538) (x955 x704) (x1149 x704))))
(assert (x1094 x1317))
(assert (= (ite (= x78 x167) x748 (x1285 x167)) (x226 x167)))
(assert (= (ite (and x538 x1115) (x955 x1565) (x1149 x1565)) (x59 x1565)))
(assert (= (ite (and x1115 x538) (x955 x388) (x1149 x388)) (x59 x388)))
(assert (= (=> (= x1377 (> x1571 0)) (and (=> x1377 x1386) (=> (not x1377) x1119))) x1412))
(assert (x1433 x1022))
(assert (x1433 x646))
(assert (x1094 x939))
(assert (=> (> (+ 10000 1) x296) (= (x1221 x296) (x1017 x296))))
(assert (=> (> (+ 10000 1) x52) (= (x1017 x52) (x1221 x52))))
(assert (= (x955 x704) (ite (= x1265 x704) x999 (x1549 x704))))
(assert (x1433 x1213))
(assert (x1433 x478))
(assert (= (ite (and x177 x633) (x808 x123) (ite (and x177 x387 (not x633)) (x808 x123) (x1588 x123))) (x1273 x123)))
(assert (x1094 x722))
(assert (= (and x1486 (not x1360)) x711))
(assert (x1094 x1050))
(assert (x1094 x675))
(assert (x1433 x1523))
(assert (x1433 x1260))
(assert (x1433 x1320))
(assert (= x622 x792))
(assert (= (or (and x241 (not x1370)) (and x1206 (not x949)) (and x574 x1304)) x364))
(assert (=> (< (- x1010 1) 10000) (= (x1017 x1010) (x1221 x1010))))
(assert (= (or (and x990 x111) (and x989 x1357)) x1409))
(assert (= (ite (and x620 (not x690) x1113) (x120 x1345) (x104 x1345)) (x680 x1345)))
(assert (x1094 x466))
(assert (= (x430 x504) (ite (= x704 x504) x415 (x226 x504))))
(assert (x1433 x229))
(assert (x1094 x716))
(assert (x1433 x424))
(assert (x1433 x1317))
(assert (x1433 x472))
(assert (= (x749 x1292) (ite (= x1292 x1026) x714 (x113 x1292))))
(assert (=> (< (- x850 1) 10000) (= (x1221 x850) (x1017 x850))))
(assert (x1433 x274))
(assert (x1433 x388))
(assert (= x776 x486))
(assert (x1433 x8))
(assert (=> (< (- x875 1) 10000) (= (x1017 x875) (x1221 x875))))
(assert (x1433 x58))
(assert (= (and (not x1357) x989) x111))
(assert (= (x292 (x1017 x1346)) x1346))
(assert (= (ite (and x396 x1223 (not x408)) (x920 x1363) (x1478 x1363)) (x549 x1363)))
(assert (= x389 (and x608 x554)))
(assert (x1094 x471))
(assert (= (x70 x1016) (ite (and x933 x380) (x1550 x1016) (x236 x1016))))
(assert (x1433 x1493))
(assert (= 0 (x16 x672)))
(assert (=> (< (- x449 1) 10000) (= (x1221 x449) (x1017 x449))))
(assert (x1433 x1095))
(assert (= x1226 (x292 (x1017 x1226))))
(assert (= (x16 x1363) 0))
(assert (x1554 x742 x715))
(assert (x1433 x612))
(assert (x1433 x938))
(assert (= (x1221 2258409472) (x1017 2258409472)))
(assert (= x1042 (x292 (x1017 x1042))))
(assert (= (x292 (x1017 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (=> (> (+ 10000 1) x723) (= (x1221 x723) (x1017 x723))))
(assert (x1094 x163))
(assert (x1094 x277))
(assert (=> (< (- x737 1) 10000) (= (x1221 x737) (x1017 x737))))
(assert (= x1058 (x292 (x1017 x1058))))
(assert (= 274184521717934524641157099916833587218 (x292 (x1017 274184521717934524641157099916833587218))))
(assert (x1433 x308))
(assert (= (x1221 2532887486) (x1017 2532887486)))
(assert (x1433 x217))
(assert (= (x749 x725) (ite (= x725 x1026) x714 (x113 x725))))
(assert (= 0 (x16 x1238)))
(assert (x1433 x1490))
(assert (= (x292 (x1221 2211524764)) 2211524764))
(assert (= x441 (x292 (x1017 x441))))
(assert (= x115 (=> (and (<= 0 x639) (<= x639 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x70 x872) x639) (= (x27 (x1017 x308) x47 0) x872) (= x34 (= 0 x639)) (= x308 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x47 (x27 (x1017 x1104) (x1221 6) 0))) (and (=> (and (not x34) (= x896 x1104)) x131) (=> (and (= x1186 (x760 (- x1104 1))) x34 (= (> x1186 0) x961) (not x961)) x1137)))))
(assert (= (=> (and (= x1398 (x343 (x1017 x141))) x667 (= (x343 (x1017 274184521717934524641157099916833587206)) x677) x1257 (= x1498 (x343 (x1017 274184521717934524641157099916833587206))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x300 (x1017 x141))) x741) (= x1567 (x300 (x1017 x141))) (= x1199 x1557) (= x1257 (< x1398 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1357 (= x141 274184521717934524641157099916833587218)) x741 (= (<= 0 x1498) x667)) (and (=> (not x1357) x1491) (=> (and (not (= 826074471 x1156)) (= (x9 x1019) x1421) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x904) (<= 0 x505) (not (= x1156 649617121)) (= (x27 (x1017 274184521717934524641157099916833587206) (x1221 1) 0) x99) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1421 x501)) (= x1130 x625) (not (= x1156 2514000705)) (not x1270) (= x1019 (x27 (x1017 x1130) (x1221 1) 0)) (< 0 x821) (= (x27 (x1017 x1130) (x1221 1) 0) x1109) (= (or (and (= (<= x627 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x627)) (> x627 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x541) (= x1098 (+ x1117 x350)) (= (x1172 x1053) x505) (= x1557 x1059) (= x753 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x501 x1421))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x505) (>= x1421 0) (not x541) (= (x27 (x1017 274184521717934524641157099916833587206) (x1221 1) 0) x1053) (not (> 4 x1059)) (not (= 1889567281 x1156)) (= x1156 2835717307) (= x821 (x1591 (x1017 274184521717934524641157099916833587218))) (= x799 x1262) (= x501 x13) (<= x1421 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1130 1461501637330902918203684832716283019655932542975) (not (> 649617121 x1156)) (not x753) (= x1421 x350) (= 32 x827) (= 274184521717934524641157099916833587206 x743) (= x64 (x760 (- x505 x13))) (= x1130 x214) (= x1059 68) (= (< x505 x501) x140) (= x984 1) (= 274184521717934524641157099916833587206 x1578) (= (> x13 x505) x1270) x1357 (not x140) (= x1117 x501) (= (x760 (- x1059 4)) x627) (= x13 x497)) x1382))) x570))
(assert (x1433 x45))
(assert (= (ite (and (not x606) x380 x1422 (not x63)) (x30 x694) (ite (and (not x606) x380 (not x1422)) (x674 x694) (ite (and x380 x606) (x674 x694) (x1147 x694)))) (x189 x694)))
(assert (= (x292 (x1017 x910)) x910))
(assert (x1433 x827))
(assert (= x1092 (x292 (x1017 x1092))))
(assert (=> (> (+ 10000 1) x870) (= (x1017 x870) (x1221 x870))))
(assert (x1094 x875))
(assert (=> (> (+ 10000 1) x1231) (= (x1017 x1231) (x1221 x1231))))
(assert (= x1450 (or x565 (and (not x736) x250))))
(assert (x1433 x1350))
(assert (= (x1017 759532456) (x1221 759532456)))
(assert (= (ite (= x78 x1565) x748 (x1285 x1565)) (x226 x1565)))
(assert (= (x120 x388) (ite (and (not x1371) x1460 x1329 x620 x1113 x660) (x749 x388) (ite (and x620 x1329 x1460 x1113 (not x660)) (x113 x388) (ite (and x620 (not x1329) x1460 x1113) (x238 x388) (ite (and x1113 (not x1460) x620) (x332 x388) (x1531 x388)))))))
(assert (= x1239 (=> (and (= x629 (x27 (x1017 x1004) (x1221 6) 0)) (= x148 x402) (= x1174 2258409472) (not (= x1174 1968616202)) (>= x402 0) (< x1174 2293535753) (<= x402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x402 (x945 x1182)) (not (> 911411945 x1174)) (not (= 2211524764 x1174)) (= x295 (x1591 (x1017 274184521717934524641157099916833587206))) (not (= x1174 1986467848)) (not (= x1174 2061678023)) (= (x27 (x1017 x1272) x629 0) x1182) (not (> 1968616202 x1174)) (> x295 0) (>= 1461501637330902918203684832716283019655932542975 x1272)) (=> (and x985 (= x105 x1335) (= x985 (not (= x846 0))) (= x846 x148) (= x536 0) (= x1042 x884)) x537))))
(assert (= (=> (and (< x410 2960351575) (= (x27 (x1017 x928) x205 0) x135) (= (x674 x1188) x298) (= (x1591 (x1017 274184521717934524641157099916833587206)) x97) (not (= 2418364589 x410)) (<= x1050 1461501637330902918203684832716283019655932542975) (<= x1213 1461501637330902918203684832716283019655932542975) (= x1188 (x27 (x1017 x1213) x135 0)) (<= 0 x298) (= 2532887486 x410) (not (= x410 2293535753)) (<= x928 1461501637330902918203684832716283019655932542975) (= x1475 (x27 (x1017 x1404) (x1221 4) 0)) (= x298 x166) (> 2690754053 x410) (= x205 (x27 (x1017 x1050) x1475 0)) (> x97 0) (not (> 2293535753 x410)) (not (= 2512682246 x410)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x298)) (=> (and (<= 0 x462) (not (= x1070 2690754053)) (= x166 x487) (or (and (<= x1457 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1593 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1593) (<= x1457 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1457 x1593))) (< x357 x657) (= x847 x1145) (= (x130 (+ 160 x557)) x303) (= x752 x591) (= (x1549 128) x1585) (= x1145 x162) (= x579 (uninterp_mod (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1571 x1455) (not (< x1585 1)) (< x1070 2960351575) (>= 1461501637330902918203684832716283019655932542975 x528) (= 2939843472 x1070) (= x752 x830) (= x1514 x1391) (not (> 2293535753 x1070)) (= 128 x1319) (= x1024 x1571) (not (< x1070 2690754053)) (< 163 x1457) (= x275 x357) (= true (<= x1457 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (>= x528 0) (= x1593 (x130 (+ 35 x635))) (= x550 (x130 (+ x579 x1301))) (not (= x1070 2764855426)) (or (not x1116) (and (not (< x1585 1)) (= (< 1 x1585) x1263) (or (and (> x1126 0) (not (= x1348 x666)) (or (and (= x818 (x619 1461501637330902918203684832716283019655932542975 x742)) (= x782 (x1549 128)) (not x72) (= x742 (x1549 160)) (= x72 (> x1585 3)) (> x782 0) (not (= x555 x818)) (= (x619 1461501637330902918203684832716283019655932542975 x42) x555) (= (x1549 128) x1020) x755 (< 2 x1020) (= x42 (x1549 224))) (not x755)) (= x57 (x1549 128)) x1263 (= (x619 1461501637330902918203684832716283019655932542975 x765) x666) (= (x1549 192) x890) (= (> x1585 2) x755) (> x57 1) (= (x1549 128) x1126) (= (x1549 160) x765) (= x1348 (x619 1461501637330902918203684832716283019655932542975 x890))) (not x1263)) (not (< 1 x1456)) (= (x760 (- x1585 1)) x1456) x1116)) (>= 1461501637330902918203684832716283019655932542975 x752) (or (and (= (x130 (+ 160 x807)) x44) (= x857 (uninterp_mod (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x538)) x538) (= x1073 (x760 (- x1585 1))) (= x484 x626) (not (< 18446744073709551615 x1091)) (= x841 (x130 (+ x635 4))) x439 (= x528 x781) (not (< x1457 x550)) (= (x130 (+ x740 x1265)) x1299) (= (= x999 0) x538) (= x439 (and x468 x451)) (not (or (> x1090 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 x1090) (= true (<= x1090 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x863 x1511) (= (x1591 (x1017 274184521717934524641157099916833587206)) x514) (= x999 (x1516 x841)) (= x626 0) (<= x462 1461501637330902918203684832716283019655932542975) (>= x1511 0) (= x635 x1091) (< 0 x514) (= (< 0 x1073) x1116) (= x557 (uninterp_mod (* x999 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1265 (x130 (+ 160 x1107))) (not (= x1070 2798343961)) (not (= x1070 2868243304)) (= x357 x1077) (>= 1461501637330902918203684832716283019655932542975 x1145) (= (x760 (- x1457 4)) x1090) (<= 0 x657) (= x740 (x130 (+ 32 x557))) (= (x130 (+ 36 x635)) x1301) (not (< x357 x1571)) (not (< 18446744073709551615 x999)) (<= x657 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1107 (uninterp_mod (* 32 x999) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> 4 x1457)) (= x1556 x781) (not (= x1070 2743102681)) (= x807 (x130 (+ x1107 32))) (= x468 (<= x487 x1245)) (<= x1511 1461501637330902918203684832716283019655932542975)) x1237)) x411))
(assert (x1433 x483))
(assert (= (=> (and (= x1499 (x27 (x1017 x595) x739 0)) (not (= x1426 2690754053)) (= x1044 x1369) (<= 0 x1369) (not (> 2690754053 x1426)) (not (> 2293535753 x1426)) (>= 1461501637330902918203684832716283019655932542975 x773) (= (x1591 (x1017 274184521717934524641157099916833587206)) x482) (= (x808 x1499) x1369) (>= 1461501637330902918203684832716283019655932542975 x595) (= (x27 (x1017 x269) (x1221 3) 0) x81) (< 0 x482) (= x739 (x27 (x1017 x773) x81 0)) (> 2960351575 x1426) (= x1426 2743102681) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1369)) (=> (and (= x1431 x884) (= x875 x1335) (= x1044 x279) (= x564 (<= x279 x367))) x1330)) x1447))
(assert (x1433 x1130))
(assert (x1094 x993))
(assert (x1094 x186))
(assert (x1433 x1536))
(assert (= (or (and x389 (not x603)) (and (not x1340) x91)) x31))
(assert (x1433 x716))
(assert (x1094 x1571))
(assert (x1094 x948))
(assert (=> (> (+ 10000 1) x1004) (= (x1017 x1004) (x1221 x1004))))
(assert (x1433 x304))
(assert (x1433 x1037))
(assert (= x1010 (x292 (x1017 x1010))))
(assert (x1094 x873))
(assert (x1094 x495))
(assert (x1094 x1503))
(assert (x1094 x1362))
(assert (= (x292 (x1017 x843)) x843))
(assert (= (ite (and x989 x1357) (x927 x672) (x1201 x672)) (x1196 x672)))
(assert (x1433 x243))
(assert (= x937 (x292 (x1017 x937))))
(assert (= (x479 x369) (ite (and x380 x933) (x1195 x369) (x891 x369))))
(assert (x1433 x1429))
(assert (x1433 x471))
(assert (= (ite (= x268 x1363) x444 (x374 x1363)) (x251 x1363)))
(assert (x1094 x1437))
(assert (= (x292 (x1017 x851)) x851))
(assert (x1433 x871))
(assert (x1433 x1091))
(assert (x1433 x1203))
(assert (= (ite (and x620 x1113 (not x690)) (x120 x1193) (x104 x1193)) (x680 x1193)))
(assert (= (x226 x198) (ite (= x78 x198) x748 (x1285 x198))))
(assert (x1094 x1058))
(assert (x1094 x192))
(assert (x1433 x365))
(assert (x1433 x146))
(assert (= x1420 (x292 (x1017 x1420))))
(assert (= (ite (and x1357 x989) (x927 x1265) (x1201 x1265)) (x1196 x1265)))
(assert (= (ite (= x1345 x704) x415 (x226 x1345)) (x430 x1345)))
(assert (x1433 x843))
(assert (= (x292 (x1221 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (= (x292 (x1017 x308)) x308))
(assert (=> (> (+ 10000 1) x684) (= (x1221 x684) (x1017 x684))))
(assert (x1433 x1492))
(assert (x1094 x157))
(assert (=> (> (+ 10000 1) x1561) (= (x1017 x1561) (x1221 x1561))))
(assert (= (x1221 2764855426) (x1017 2764855426)))
(assert (x1433 x272))
(assert (x150 x1114 x783))
(assert (= true x1408))
(assert (x1303 x641))
(assert (x1433 x438))
(assert (= (x1221 911411945) (x1017 911411945)))
(assert (= 1986467848 (x292 (x1221 1986467848))))
(assert (= (=> (= x457 x4) x18) x1164))
(assert (= (ite (and x1329 x620 x660 x1113 x1460 (not x1371)) (x749 x672) (ite (and x1329 (not x660) x1460 x620 x1113) (x113 x672) (ite (and x620 x1460 (not x1329) x1113) (x238 x672) (ite (and (not x1460) x1113 x620) (x332 x672) (x1531 x672))))) (x120 x672)))
(assert (= (x120 x1265) (ite (and x1329 x660 x1460 x620 x1113 (not x1371)) (x749 x1265) (ite (and x1113 x1329 x620 x1460 (not x660)) (x113 x1265) (ite (and x1460 x1113 (not x1329) x620) (x238 x1265) (ite (and (not x1460) x1113 x620) (x332 x1265) (x1531 x1265)))))))
(assert (= (ite (= x883 x198) x503 (x332 x198)) (x238 x198)))
(assert (x1303 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1094 x1504))
(assert (x1094 x1574))
(assert (x1433 x1122))
(assert (= (x292 (x1221 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (=> (and (= x157 (x619 1461501637330902918203684832716283019655932542975 x752)) (= (x995 x956) x20) (= (x27 (x1017 x986) x1474 0) x1323) (not (> x1455 x657)) (<= x657 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x20 0) (= (x27 (x1017 x157) x1323 0) x956) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x20) (<= 0 x657) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x986) (= (x27 (x1017 x1571) (x1221 7) 0) x1474) (= x1286 (> x20 0))) (and (=> (not x1286) x1412) (=> (and (= x814 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x1449 (x619 1461501637330902918203684832716283019655932542975 x752)) (= 0 x1553) (= x371 (x27 (x1017 x1449) x41 0)) (>= x339 0) (= x309 (x27 (x1017 x1571) (x1221 9) 0)) (<= x339 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x339 x1031) (= (x623 x371) x339) (= x41 (x27 (x1017 x814) x309 0)) x1286) x134))) x485))
(assert (= x134 (=> (and (= (= x1031 0) x633) (or (and (= (x27 (x1017 x1571) (x1221 9) 0) x1178) (= x860 (x27 (x1017 x692) x1178 0)) (not x221) (= (x619 1461501637330902918203684832716283019655932542975 x752) x445) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x692) (= (x27 (x1017 x445) x860 0) x559)) x221) (or (and (= (x1438 x568) x378) (= (x27 (x1017 x192) x601 0) x213) (= (x995 x862) x55) (= (x27 (x1017 x1571) (x1221 7) 0) x601) (or (and (= x379 x262) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x835) (= x871 x856) (= (x27 (x1017 x835) x354 0) x153) (= (x808 x327) x871) (= x823 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (+ x315 x856) x1313) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x871) (= x36 x355) (= (* x1451 x1031) x379) (= (x619 1461501637330902918203684832716283019655932542975 x752) x1383) (= x327 (x27 (x1017 x1479) x153 0)) (= x581 (x27 (x1017 x1571) (x1221 7) 0)) (= x128 (x27 (x1017 x823) x581 0)) (= (x27 (x1017 x1383) x128 0) x1141) (= x315 x262) (>= x871 0) (< (+ x871 x262) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x619 1461501637330902918203684832716283019655932542975 x752) x1479) (not x387) (= x354 (x27 (x1017 x1571) (x1221 3) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1031 x1451))) (and (= x1065 (x27 (x1017 x1571) (x1221 7) 0)) (= (x27 (x1017 x877) x1065 0) x32) x387 (= x1173 (x27 (x1017 x425) x32 0)) (= x355 x36) (= (x619 1461501637330902918203684832716283019655932542975 x752) x425) (= x877 (x619 1461501637330902918203684832716283019655932542975 x1145)))) (= x1320 (x181 x1051)) (<= x1320 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x387 (= 0 x1451)) (>= x55 0) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x192) (= x1402 (x619 1461501637330902918203684832716283019655932542975 x752)) (= x894 (x1305 x182)) (= x36 (x130 (+ x1299 64))) (= (x1162 x1051 1) x182) (= x568 (x130 (+ x1299 32))) (= x862 (x27 (x1017 x1402) x213 0)) (not x633) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x55) (= (< x55 x378) x774) (= x1051 (x27 (x1017 x1571) (x1221 1) 0)) (>= x1320 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x894) (or (and (not x774) (= 0 x1451)) (and (= (> x1514 x1229) x154) (= x588 (= x55 0)) x774 (= x1229 (x1438 x568)) (or (and (= x424 (x1438 x568)) x154 (= x179 x424)) (and (not x154) (= x1514 x179))) (or (and (= (x760 (- x179 x55)) x1290) (not (> x55 x179)) (= x1343 x1451) (= (ite (> 604800 x1290) x1290 604800) x1343) (= x1297 604800) (not x588)) (and x588 (= x1451 x125) (not (> x197 x179)) (= (x1438 x1299) x197) (= (x760 (- x179 x197)) x125))))) (>= x894 0)) (and (= x1537 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x355 x1299) x633 (= (x27 (x1017 x1072) x544 0) x1007) (= (x27 (x1017 x1571) (x1221 7) 0) x1444) (= x544 (x27 (x1017 x1537) x1444 0)) (= (x619 1461501637330902918203684832716283019655932542975 x752) x1072))) (= (= x1553 0) x221)) x903)))
(assert (= (ite (and x1113 x620 (not x690)) (x120 x51) (x104 x51)) (x680 x51)))
(assert (x1433 x894))
(assert (= (ite (= x1026 x1265) x714 (x113 x1265)) (x749 x1265)))
(assert (x1433 x857))
(assert (x1094 x1384))
(assert (x1433 x465))
(assert (= x960 x1001))
(assert (=> (< (- x1146 1) 10000) (= (x1017 x1146) (x1221 x1146))))
(assert (x1433 x934))
(assert (x1094 x1213))
(assert (= 1461501637330902918203684832716283019655932542975 (x292 (x1221 1461501637330902918203684832716283019655932542975))))
(assert (x1433 x341))
(assert (x1433 x976))
(assert (x1433 x1343))
(assert (= (x479 x728) (ite (and x380 x933) (x1195 x728) (x891 x728))))
(assert (x1433 x1138))
(assert (= (ite (= x1363 x1112) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x971 x1363)) (x671 x1363)))
(assert (x1094 x658))
(assert (= x972 (=> (and (= (x27 (x1017 x1574) (x1221 7) 0) x21) (= x507 (x619 1461501637330902918203684832716283019655932542975 x752)) (= x1340 (= x1200 0)) (= x1200 (x730 x459)) (= x1346 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (x27 (x1017 x1346) x21 0) x349) (<= 0 x1200) (= x459 (x27 (x1017 x507) x349 0)) (<= x1200 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x1574 x80) (not x1340)) x1397) (=> (and (= (x760 (- x1574 1)) x274) x1340 (= (> x274 0) x1488) (not x1488)) x3)))))
(assert (= x423 (x292 (x1017 x423))))
(assert (=> (< (- x1385 1) 10000) (= (x1221 x1385) (x1017 x1385))))
(assert (=> (< (- x475 1) 10000) (= (x1017 x475) (x1221 x475))))
(assert (=> (> (+ 10000 1) x147) (= (x1017 x147) (x1221 x147))))
(assert (x1433 x1532))
(assert (x1433 x105))
(assert (x1094 x1251))
(assert (= x18 (=> (and (or (and x813 (= 0 x1031) (= x1553 0)) (and (= x1247 (x27 (x1017 x688) x849 0)) (= x1553 1) (= (x623 x701) x822) (not x813) (= (x27 (x1017 x4) (x1221 9) 0) x849) (<= x822 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x822) (= x701 (x27 (x1017 x1306) x1247 0)) (= x1031 x822) (= x688 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (x619 1461501637330902918203684832716283019655932542975 x752) x1306))) (= x813 (= x4 0))) x134)))
(assert (=> (< (- x249 1) 10000) (= (x1221 x249) (x1017 x249))))
(assert (x1094 x1011))
(assert (x1433 x1501))
(assert (x1433 x421))
(assert (x1433 x310))
(assert (x1433 x740))
(assert (= (ite (= x704 x1036) x323 (x983 x704)) (x1057 x704)))
(assert (= (=> (and (or (and (= 0 x84) x26 (= 0 x429)) (and (= (x27 (x1017 x342) (x1221 10) 0) x1121) (= x108 (x619 1461501637330902918203684832716283019655932542975 x1145)) (or (and x1308 (= 0 x84) (= 0 x429)) (and (= x429 1) (= x84 x217) (not x1308))) (= (= 0 x217) x1308) (= x1594 (x27 (x1017 x108) x1121 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x217) (= x217 (x1461 x1594)) (not x26) (<= 0 x217))) (= x26 (= x342 0))) x273) x509))
(assert (=> (> (+ 10000 1) x1315) (= (x1017 x1315) (x1221 x1315))))
(assert (x1303 x2))
(assert (x1433 x1376))
(assert (= x1115 x207))
(assert (= (ite (and (not x606) x380 x1422 (not x63)) (x1057 x672) (ite (and (not x1422) (not x606) x380) (x983 x672) (ite (and x380 x606) (x983 x672) (x401 x672)))) (x124 x672)))
(assert (x1433 x101))
(assert (= (x430 x1363) (ite (= x1363 x704) x415 (x226 x1363))))
(assert (x1433 x607))
(assert (x1094 x532))
(assert (x1433 x1255))
(assert (x1433 x1448))
(assert (x1433 x948))
(assert (x1094 x877))
(assert (= (x1017 2798343961) (x1221 2798343961)))
(assert (x1433 x742))
(assert (=> (< (- x1537 1) 10000) (= (x1017 x1537) (x1221 x1537))))
(assert (x1433 x639))
(assert (x1433 x883))
(assert (= (ite (= x704 x78) x748 (x1285 x704)) (x226 x704)))
(assert (x1433 x161))
(assert (=> (< (- x277 1) 10000) (= (x1221 x277) (x1017 x277))))
(assert (= x1490 (x292 (x1017 x1490))))
(assert (x1433 x1431))
(assert (= (x59 x284) (ite (and x1115 x538) (x955 x284) (x1149 x284))))
(assert (= (x292 (x1017 x281)) x281))
(assert (= x786 (x983 x183)))
(assert (= x632 x661))
(assert (= (ite (= x672 x883) x503 (x332 x672)) (x238 x672)))
(assert (= (x292 (x1017 x25)) x25))
(assert (x1433 x20))
(assert (= x709 (=> (and (not (= 2690754053 x1103)) (= (x27 (x1017 x910) (x1221 3) 0) x1154) (= x1359 (x27 (x1017 x465) x521 0)) (> x96 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250) (= x1250 (x808 x1359)) (not (> 2293535753 x1103)) (= x1568 x1250) (<= x465 1461501637330902918203684832716283019655932542975) (= 2743102681 x1103) (<= x716 1461501637330902918203684832716283019655932542975) (= (x27 (x1017 x716) x1154 0) x521) (not (< x1103 2690754053)) (>= x1250 0) (= x96 (x1591 (x1017 274184521717934524641157099916833587206))) (< x1103 2960351575)) (=> (and (= x1213 x1224) (= x204 x928) (= x884 x1050) (= x1245 x1568) (= x1404 x1335)) x411))))
(assert (x1433 x984))
(assert (= (ite (= x1345 x1265) x999 (x1549 x1345)) (x955 x1345)))
(assert (= (x292 (x1221 2868243304)) 2868243304))
(assert (x1433 x1252))
(assert (x1094 x122))
(assert (x1433 x141))
(assert (= (x16 x1565) 0))
(assert (x1433 x110))
(assert (x1433 x467))
(assert (x1433 x1250))
(assert (x1433 x1067))
(assert (x1094 x1277))
(assert (x1433 x1413))
(assert (= x614 (=> (and (= (x27 (x1017 x441) (x1221 7) 0) x109) (= (x730 x203) x1351) (= x712 (x27 (x1017 x805) x109 0)) (<= x1351 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x1351 0) x603) (>= x1351 0) (= x1490 (x619 1461501637330902918203684832716283019655932542975 x752)) (= x805 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (x27 (x1017 x1490) x712 0) x203)) (and (=> x603 x1151) (=> (and (not x603) (= x80 x441)) x1397)))))
(assert (= (x59 x191) (ite (and x1115 x538) (x955 x191) (x1149 x191))))
(assert (= (ite (= x1345 x78) x748 (x1285 x1345)) (x226 x1345)))
(assert (= x1446 (x292 (x1017 x1446))))
(assert (= (or (and x1333 x1075) x193) x137))
(assert (=> (< (- x157 1) 10000) (= (x1017 x157) (x1221 x157))))
(assert (x1433 x1383))
(assert (= (ite (= x607 x672) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x672)) (x332 x672)))
(assert (= (x292 (x1017 x466)) x466))
(assert (= (x292 (x1221 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x1433 x968))
(assert (= (=> (and (= (x1195 x1158) x1267) (not (< x562 2690754053)) (not (> 2293535753 x562)) (= (x27 (x1017 x1042) x1052 0) x1158) (not (= 2690754053 x562)) (= (x1591 (x1017 274184521717934524641157099916833587206)) x646) (<= 0 x1267) (= 2798343961 x562) (= (x27 (x1017 x105) (x1221 5) 0) x1052) (= x522 x1267) (< x562 2960351575) (not (= 2743102681 x562)) (<= x1267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x562 2764855426)) (< 0 x646) (>= 1461501637330902918203684832716283019655932542975 x1042)) (=> (and (= x773 x884) (= x204 x595) (= x522 x367) (= x1335 x269)) x1447)) x537))
(assert (=> (> (+ 10000 1) x1589) (= (x1221 x1589) (x1017 x1589))))
(assert (x1433 x1170))
(assert (= x1315 (x292 (x1017 x1315))))
(assert (x1433 x167))
(assert (= (or (and (not x608) x554) (and x1340 x91) (and (not x668) x729)) x12))
(assert (x1433 x249))
(assert (= (x226 x504) (ite (= x78 x504) x748 (x1285 x504))))
(assert (x1433 x1231))
(assert (= (x59 x167) (ite (and x1115 x538) (x955 x167) (x1149 x167))))
(assert (x1433 x116))
(assert (x1094 x723))
(assert (x1433 x464))
(assert (= (x1196 x1363) (ite (and x1357 x989) (x927 x1363) (x1201 x1363))))
(assert (= (x292 (x1221 2960351575)) 2960351575))
(assert (= (x1017 142201243) (x1221 142201243)))
(assert (= (ite (= x883 x51) x503 (x332 x51)) (x238 x51)))
(assert (x1433 x1459))
(assert (= (x1221 2061678023) (x1017 2061678023)))
(assert (x1094 x73))
(assert (x1433 x10))
(assert (x1433 x586))
(assert (= (=> (and (= x119 x1041) (> 468353030 x391) (= (x1068 x605) x1041) (<= x1041 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x1552) (< x391 2293535753) (> 911411945 x391) (= (x27 (x1017 x1431) x726 0) x605) (<= 0 x1041) (<= x1431 1461501637330902918203684832716283019655932542975) (= x726 (x27 (x1017 x875) (x1221 10) 0)) (= x391 69947311) (= (x1591 (x1017 274184521717934524641157099916833587206)) x1552)) (=> (and (= x163 x1335) (= x263 x119) (= x52 x204) (= x979 x884)) x1291)) x1330))
(assert (= (x1056 x336) (ite (= x336 x413) x1487 (x189 x336))))
(assert (x1517 x79 x2))
(assert (x1433 x425))
(assert (= (x59 x1345) (ite (and x1115 x538) (x955 x1345) (x1149 x1345))))
(assert (x1433 x807))
(assert (x1433 x1200))
(assert (= (x1017 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1221 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (< (- x160 1) 10000) (= (x1221 x160) (x1017 x160))))
(assert (= (x430 x672) (ite (= x672 x704) x415 (x226 x672))))
(assert (= (x292 (x1017 x803)) x803))
(assert (= (x955 x1265) x999))
(assert (x1554 x1145 x1405))
(assert (= (x955 x198) (ite (= x198 x1265) x999 (x1549 x198))))
(assert (=> (> (+ 10000 1) x598) (= (x1221 x598) (x1017 x598))))
(assert (x1094 x1130))
(assert (x1433 x50))
(assert (= (ite (= x1363 x183) x786 (x359 x1363)) (x983 x1363)))
(assert (= (ite (= x1112 x1527) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x971 x1527)) (x671 x1527)))
(assert (x1094 x979))
(assert (= (x332 x1565) (ite (= x607 x1565) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x1565))))
(assert (=> (> (+ 10000 1) x1571) (= (x1221 x1571) (x1017 x1571))))
(assert (x1433 x1070))
(assert (x1094 x1004))
(assert (x1433 x835))
(assert (x1433 x1384))
(assert (x1433 x152))
(assert (= (x16 x388) 0))
(assert (x1094 x1420))
(assert (x1433 x351))
(assert (= (x1017 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1221 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (ite (and x1422 x380 (not x63) (not x606)) (x1057 x624) (ite (and x380 (not x1422) (not x606)) (x983 x624) (ite (and x606 x380) (x983 x624) (x401 x624)))) (x124 x624)))
(assert (=> (< (- x948 1) 10000) (= (x1221 x948) (x1017 x948))))
(assert (= (and x1496 (not x280)) x1486))
(assert (= (x16 x1036) 0))
(assert (= x814 (x292 (x1017 x814))))
(assert (x1433 x1419))
(assert (=> (> (+ 10000 1) x4) (= (x1017 x4) (x1221 x4))))
(assert (= (ite (and x177 x633) (x808 x519) (ite (and (not x633) x387 x177) (x808 x519) (x1588 x519))) (x1273 x519)))
(assert (= (x1017 2835717307) (x1221 2835717307)))
(assert (x1094 x814))
(assert (= x1277 (x292 (x1017 x1277))))
(assert (x1433 x1495))
(assert (x1433 x49))
(assert (x1433 x1426))
(assert (x1433 x609))
(assert (x1094 x1387))
(assert (=> (> (+ 10000 1) x524) (= (x1221 x524) (x1017 x524))))
(assert (x1433 x1048))
(assert (x1433 x1107))
(assert (x1094 x915))
(assert (x1094 x850))
(assert (= 0 (x16 x1345)))
(assert (=> (< (- x1306 1) 10000) (= (x1017 x1306) (x1221 x1306))))
(assert (x1433 x1090))
(assert (= x478 (x292 (x1017 x478))))
(assert (x1433 x282))
(assert (= (x292 (x1017 x209)) x209))
(assert (x1094 x1232))
(assert (= x1404 (x292 (x1017 x1404))))
(assert (= (x292 (x1221 759532456)) 759532456))
(assert (x1433 x1186))
(assert (x1433 x69))
(assert (=> (< (- x1232 1) 10000) (= (x1017 x1232) (x1221 x1232))))
(assert (= (x292 (x1017 x1479)) x1479))
(assert (x1094 x1490))
(assert (x1433 x1404))
(assert (x1433 x1006))
(assert (x1094 x308))
(assert (=> (< (- x1095 1) 10000) (= (x1221 x1095) (x1017 x1095))))
(assert (x1433 x284))
(assert (= (x955 x167) (ite (= x1265 x167) x999 (x1549 x167))))
(assert (x1094 x1226))
(assert (x1433 x1589))
(assert (= 142201243 (x292 (x1221 142201243))))
(assert (x1433 x515))
(assert (= (x292 (x1017 x532)) x532))
(assert (= x1048 (x292 (x1017 x1048))))
(assert (=> (< (- x1048 1) 10000) (= (x1017 x1048) (x1221 x1048))))
(assert (= (ite (= x1363 x883) x503 (x332 x1363)) (x238 x1363)))
(assert (= (x292 (x1017 x165)) x165))
(assert (= 0 (x16 x51)))
(assert (= (x983 x624) (ite (= x624 x183) x786 (x359 x624))))
(assert (=> (> (+ 10000 1) x914) (= (x1017 x914) (x1221 x914))))
(assert (x1433 x84))
(assert (x1433 x710))
(assert (x1433 x242))
(assert (= (ite (= x694 x461) x1140 (x674 x694)) (x30 x694)))
(assert (= true x1454))
(assert (x1433 x1421))
(assert (x1433 x142))
(assert (= (ite (= x1036 x363) x323 (x983 x363)) (x1057 x363)))
(assert (= (ite (and x1113 x620 (not x690)) (x120 x725) (x104 x725)) (x680 x725)))
(assert (x1094 x664))
(assert (x1433 x641))
(assert (=> (> (+ 10000 1) x342) (= (x1221 x342) (x1017 x342))))
(assert (=> (< (- x308 1) 10000) (= (x1017 x308) (x1221 x308))))
(assert (=> (< (- x939 1) 10000) (= (x1221 x939) (x1017 x939))))
(assert (x1433 x809))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x998) (= 142201243 x1086) (> 468353030 x1086) (= x998 x1074) (> 2293535753 x1086) (= x469 (x1591 (x1017 274184521717934524641157099916833587206))) (= (x27 (x1017 x979) x1513 0) x409) (> x469 0) (>= x998 0) (< x1086 911411945) (<= x979 1461501637330902918203684832716283019655932542975) (not (= 87118632 x1086)) (<= x52 1461501637330902918203684832716283019655932542975) (= x998 (x623 x618)) (= (x27 (x1017 x52) x409 0) x618) (not (= 69947311 x1086)) (= x1513 (x27 (x1017 x163) (x1221 9) 0))) (=> (and (= x524 x1335) (= x204 x126) (= x1074 x151) (= x1208 (and x564 x721)) (= x779 x884) (= (<= x151 x263) x721)) x178)) x1291))
(assert (x1433 x1567))
(assert (x1094 x282))
(assert (= (ite (and x633 x177) (x7 x203) (ite (and x177 (not x633) x387) (x1123 x203) (x1307 x203))) (x730 x203)))
(assert (x1433 x799))
(assert (= (ite (and x989 x1357) (x927 x624) (x1201 x624)) (x1196 x624)))
(assert (x1433 x162))
(assert (x1433 x548))
(assert (= x584 (x292 (x1017 x584))))
(assert (x1094 x1120))
(assert (= (or (and x1545 (not x398)) (and x491 (not x34))) x1400))
(assert (= (ite (= x1345 x1026) x714 (x113 x1345)) (x749 x1345)))
(assert (x1433 x998))
(assert (= x1397 (=> (= x722 x80) x417)))
(assert (x1433 x919))
(assert (x1332 x918 x344 x575 x245))
(assert (= x106 (x292 (x1017 x106))))
(assert (x1433 x1403))
(assert (x1433 x725))
(assert (= (x238 x504) (ite (= x883 x504) x503 (x332 x504))))
(assert (= (or (and (not x944) x751) (and x1304 (not x574))) x1411))
(assert (= x778 x622))
(assert (x1433 x247))
(assert (= (x292 (x1017 x1581)) x1581))
(assert (= (x1057 x198) (ite (= x1036 x198) x323 (x983 x198))))
(assert (=> (< (- x1449 1) 10000) (= (x1017 x1449) (x1221 x1449))))
(assert (not x1548))
(assert (= (x292 (x1221 69947311)) 69947311))
(assert (x1433 x1563))
(assert (=> (< (- x25 1) 10000) (= (x1017 x25) (x1221 x25))))
(assert (x1094 x1561))
(assert (x1094 x249))
(assert (= x751 (and x241 x1370)))
(assert (= (x1017 2514000705) (x1221 2514000705)))
(assert (x1433 x850))
(assert (x1433 x1487))
(assert (= (x1221 274184521717934524641157099916833587206) (x1017 274184521717934524641157099916833587206)))
(assert (= (ite (and x620 x1113 (not x690)) (x120 x1363) (x104 x1363)) (x680 x1363)))
(assert (= x1318 (=> (and (not (= 2690754053 x1464)) (<= x610 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x184 (x27 (x1017 x209) (x1221 3) 0)) (not (> 2690754053 x1464)) (= x744 x610) (not (< x1464 2293535753)) (< 0 x936) (= x936 (x1591 (x1017 274184521717934524641157099916833587206))) (= x578 (x27 (x1017 x1048) x184 0)) (>= 1461501637330902918203684832716283019655932542975 x1048) (= (x27 (x1017 x1362) x578 0) x560) (<= x1362 1461501637330902918203684832716283019655932542975) (<= 0 x610) (= 2743102681 x1464) (< x1464 2960351575) (= (x929 x560) x610)) (=> (and (= x884 x1563) (= x204 x77) (= x1224 x1317) (= x1335 x941) (= x744 x1430)) x879))))
(assert (x1433 x1463))
(assert (= (=> (and (= x631 (or (not x340) x678)) (= x272 x902) (= x678 (and x531 x86)) (= (>= x1192 x272) x531)) (and (=> (and (= x1048 x884) (= x1362 x204) (= x1506 true) (= x1335 x209) (= x1423 87118632) (= 2939843472 x319)) x1318) x631)) x1381))
(assert (x1433 x1197))
(assert (= (ite (= x624 x294) x492 (x238 x624)) (x113 x624)))
(assert (x1433 x805))
(assert (x1433 x624))
(assert (x1094 274184521717934524641157099916833587206))
(assert (= (x1017 87118632) (x1221 87118632)))
(assert (= (x920 x1363) (ite (and (not x1244) x1223 x499 x1127 x396 x38) (x251 x1363) (ite (and (not x499) x396 x1223 x38 x1127) (x374 x1363) (ite (and x1223 x38 (not x1127) x396) (x231 x1363) (ite (and x1223 (not x38) x396) (x671 x1363) (x1175 x1363)))))))
(assert (x1433 x1112))
(assert (=> (< (- x669 1) 10000) (= (x1221 x669) (x1017 x669))))
(assert (x1433 x501))
(assert (=> (< (- x142 1) 10000) (= (x1017 x142) (x1221 x142))))
(assert (= (x292 (x1221 2798343961)) 2798343961))
(assert (x1094 x870))
(assert (= (ite (= x355 x183) x786 (x359 x355)) (x983 x355)))
(assert (x1433 x299))
(assert (= (x292 (x1017 x986)) x986))
(assert (x1433 x183))
(assert (x1433 x1034))
(assert (= (x1196 x51) (ite (and x1357 x989) (x927 x51) (x1201 x51))))
(assert (= (x292 (x1017 x948)) x948))
(assert (x1094 x1010))
(assert (x1094 x1272))
(assert (=> (< (- x1362 1) 10000) (= (x1017 x1362) (x1221 x1362))))
(assert (= (x332 x1345) (ite (= x1345 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x1345))))
(assert (x1094 x8))
(assert (x1094 x1306))
(assert (x1094 x1452))
(assert (= (x292 (x1017 x432)) x432))
(assert (=> (< (- x910 1) 10000) (= (x1017 x910) (x1221 x910))))
(assert (=> (> (+ 10000 1) x675) (= (x1221 x675) (x1017 x675))))
(assert (= x147 (x292 (x1017 x147))))
(assert (x1433 x13))
(assert (= x105 (x292 (x1017 x105))))
(assert (x1094 x342))
(assert (x1433 x863))
(assert (= (=> (and (= x437 (x27 (x1017 x1281) x1331 0)) (= x498 (x1591 (x1017 274184521717934524641157099916833587206))) (not (> 2293535753 x1538)) (= (x674 x518) x526) (>= 1461501637330902918203684832716283019655932542975 x160) (= x1142 (x27 (x1017 x152) x437 0)) (<= x1281 1461501637330902918203684832716283019655932542975) (= (x27 (x1017 x475) (x1221 4) 0) x1331) (= x1538 2532887486) (<= x526 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x1538 2690754053) (> x498 0) (not (= x1538 2512682246)) (>= x526 0) (not (= x1538 2418364589)) (<= x152 1461501637330902918203684832716283019655932542975) (not (= x1538 2293535753)) (= x1207 x526) (= x518 (x27 (x1017 x160) x1142 0)) (> 2960351575 x1538)) (=> (and (= x451 (and x592 x325)) (= x1335 x910) (= x465 x204) (= (<= x201 x1125) x325) (= x1207 x201) (= x884 x716)) x709)) x798))
(assert (= (=> (= x342 0) x509) x1137))
(assert (x1433 x932))
(assert (= (x1221 2939843472) (x1017 2939843472)))
(assert (= (ite (and (not x63) (not x606) x1422 x380) (x1057 x504) (ite (and (not x1422) (not x606) x380) (x983 x504) (ite (and x606 x380) (x983 x504) (x401 x504)))) (x124 x504)))
(assert (=> (< (- x916 1) 10000) (= (x1221 x916) (x1017 x916))))
(assert (x1094 x449))
(assert (= (+ (x292 x1533) 1) (x292 (x1162 x1533 1))))
(assert (x1433 x44))
(assert (= (or x1400 x412) x565))
(assert (= (x332 x43) (ite (= x607 x43) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x43))))
(assert (x1433 x179))
(assert (x1433 x443))
(assert (= (ite (and x1115 x538) (x955 x1238) (x1149 x1238)) (x59 x1238)))
(assert (= (x430 x1565) (ite (= x704 x1565) x415 (x226 x1565))))
(assert (=> (< (- x1050 1) 10000) (= (x1221 x1050) (x1017 x1050))))
(assert (= (x113 x388) (ite (= x388 x294) x492 (x238 x388))))
(assert (x1433 x1036))
(assert (x1433 x482))
(assert (x1094 x937))
(assert (x1094 x142))
(assert (x1094 x910))
(assert (= (x1017 69947311) (x1221 69947311)))
(assert (x1433 x768))
(assert (x1433 x1520))
(assert (= x122 (x292 (x1017 x122))))
(assert (x1433 x513))
(assert (= (ite (and x633 x177) (x808 x572) (ite (and x387 (not x633) x177) (x808 x572) (x1588 x572))) (x1273 x572)))
(assert (= (x749 x388) (ite (= x1026 x388) x714 (x113 x388))))
(assert (= x692 (x292 (x1017 x692))))
(assert (=> (< (- x465 1) 10000) (= (x1221 x465) (x1017 x465))))
(assert (= x877 (x292 (x1017 x877))))
(assert (= (ite (= x883 x624) x503 (x332 x624)) (x238 x624)))
(assert (x1433 x656))
(assert (=> (< (- x1404 1) 10000) (= (x1221 x1404) (x1017 x1404))))
(assert (x1433 x993))
(assert (= (=> (and (= x1368 (= 0 x844)) (= (x1462 x51) x594) x793 (or (and (not x1368) (= x247 (x130 (+ 96 x483))) (= x51 x421)) (and (= 96 x51) x1368)) (= (> x594 0) x952) (or (and (= (not x233) x271) (< 0 x1063) (= (x1462 x51) x848) (= (ite x271 1 0) x1037) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x848) (and (> 32 x848) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x848) true)))) (= x233 (= x1063 0)) x952 (= x1063 x1037) (= (x130 (+ x51 32)) x1363) (= x1063 (x1462 x1363))) (not x952)) (not (= 0 x676)) (= (x794 (x1017 x664)) x1393) (= (< (x833 (x1017 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x793) (= x1248 (< 2 x999)) (not x1248)) x1443) x1023))
(assert (= (x189 x336) (ite (and x1422 (not x606) (not x63) x380) (x30 x336) (ite (and (not x1422) (not x606) x380) (x674 x336) (ite (and x380 x606) (x674 x336) (x1147 x336))))))
(assert (= (x983 x198) (ite (= x183 x198) x786 (x359 x198))))
(assert (x1433 x1585))
(assert (x1433 x1024))
(assert (x1433 x423))
(assert (= (ite (= x607 x1363) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x1363)) (x332 x1363)))
(assert (= (x113 x1292) (ite (= x1292 x294) x492 (x238 x1292))))
(assert (= (x1221 2418364589) (x1017 2418364589)))
(assert (x1433 x1031))
(assert (x1433 x1456))
(assert (x1433 x293))
(assert (x1433 x1345))
(assert (x1433 x1503))
(assert (= (x16 x1193) 0))
(assert (x1094 x161))
(assert (=> (< (- x8 1) 10000) (= (x1221 x8) (x1017 x8))))
(assert (x1433 x277))
(assert (x1433 x785))
(assert (x1433 x1005))
(assert (= (ite (and x538 x1115) (x955 x672) (x1149 x672)) (x59 x672)))
(assert (x1433 x1073))
(assert (x1433 x848))
(assert (x1433 x1564))
(assert (=> (< (- x105 1) 10000) (= (x1017 x105) (x1221 x105))))
(assert (x1094 x141))
(assert (x1433 x1406))
(assert (= (ite (= x1026 x198) x714 (x113 x198)) (x749 x198)))
(assert (= (x730 x459) (ite (and x177 x633) (x7 x459) (ite (and x387 x177 (not x633)) (x1123 x459) (x1307 x459)))))
(assert (= (ite (and x1460 (not x1371) x660 x1113 x620 x1329) (x749 x725) (ite (and x1460 (not x660) x1329 x1113 x620) (x113 x725) (ite (and (not x1329) x1460 x1113 x620) (x238 x725) (ite (and x620 x1113 (not x1460)) (x332 x725) (x1531 x725))))) (x120 x725)))
(assert (=> (> (+ 10000 1) x986) (= (x1221 x986) (x1017 x986))))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x292 (x1221 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x1094 x823))
(assert (x1433 x1464))
(assert (x1433 x644))
(assert (x1433 x692))
(assert (x1433 x321))
(assert (= (ite (and x177 x633) (x7 x831) (ite (and x387 x177 (not x633)) (x1123 x831) (x1307 x831))) (x730 x831)))
(assert (= (=> (and (= x763 x770) (<= x873 1461501637330902918203684832716283019655932542975) (not (> 2293535753 x768)) (= (x27 (x1017 x684) (x1221 3) 0) x1133) (>= x763 0) (>= 1461501637330902918203684832716283019655932542975 x466) (not (< x768 2690754053)) (= (x27 (x1017 x873) x1133 0) x697) (< x768 2960351575) (= (x1591 (x1017 274184521717934524641157099916833587206)) x718) (<= x763 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x768 2690754053)) (= x572 (x27 (x1017 x466) x697 0)) (= x763 (x929 x572)) (= 2743102681 x768) (< 0 x718)) (=> (and (= x770 x785) (= (<= x785 x1212) x86) (= x884 x850) (= x1335 x723)) x994)) x60))
(assert (= 274184521717934524641157099916833587218 (x292 (x1221 274184521717934524641157099916833587218))))
(assert (= (x292 (x1017 x157)) x157))
(assert (= (ite (and x1115 x538) (x955 x725) (x1149 x725)) (x59 x725)))
(assert (= (x226 x363) (ite (= x78 x363) x748 (x1285 x363))))
(assert (= (ite (= x1292 x883) x503 (x332 x1292)) (x238 x1292)))
(assert (x1433 x1212))
(assert (x1094 x914))
(assert (= (or x31 x12) x193))
(assert (=> (< (- x420 1) 10000) (= (x1221 x420) (x1017 x420))))
(assert (= (x1017 1461501637330902918203684832716283019655932542975) (x1221 1461501637330902918203684832716283019655932542975)))
(assert (x1433 x384))
(assert (= (=> (and (= (x995 x683) x586) (= x249 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x1523 (x619 1461501637330902918203684832716283019655932542975 x752)) (<= x586 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1269 (x27 (x1017 x249) x802 0)) (= (= x586 0) x764) (<= 0 x586) (= (x27 (x1017 x76) (x1221 7) 0) x802) (= (x27 (x1017 x1523) x1269 0) x683)) (and (=> (and (not x957) (= (x760 (- x76 1)) x433) x764 (= (> x433 0) x957)) x1119) (=> (and (= x76 x457) (not x764)) x1164))) x1110))
(assert (=> (< (- x445 1) 10000) (= (x1017 x445) (x1221 x445))))
(assert (= (x120 x198) (ite (and x1329 x1460 (not x1371) x660 x620 x1113) (x749 x198) (ite (and (not x660) x620 x1113 x1329 x1460) (x113 x198) (ite (and x1113 x620 x1460 (not x1329)) (x238 x198) (ite (and (not x1460) x620 x1113) (x332 x198) (x1531 x198)))))))
(assert (=> (< (- x658 1) 10000) (= (x1017 x658) (x1221 x658))))
(assert (x1433 x1540))
(assert (= (x332 x388) (ite (= x388 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x388))))
(assert (x1433 x395))
(assert (x1433 x1469))
(assert (= (x292 (x1017 x1537)) x1537))
(assert (= x1251 (x292 (x1017 x1251))))
(assert (= (x680 x1265) (ite (and (not x690) x1113 x620) (x120 x1265) (x104 x1265))))
(assert (= x914 (x292 (x1017 x914))))
(assert (= (ite (= x1345 x883) x503 (x332 x1345)) (x238 x1345)))
(assert (=> (< (- x1520 1) 10000) (= (x1221 x1520) (x1017 x1520))))
(assert (x1433 x163))
(assert (=> (< (- x563 1) 10000) (= (x1221 x563) (x1017 x563))))
(assert (x1303 x42))
(assert (x1433 x279))
(assert (=> (> (+ 10000 1) x851) (= (x1017 x851) (x1221 x851))))
(assert (= x77 (x292 (x1017 x77))))
(assert (x1094 x702))
(assert (x1433 x1254))
(assert (= (ite (= x294 x672) x492 (x238 x672)) (x113 x672)))
(assert (= x1231 (x292 (x1017 x1231))))
(assert (x1433 x888))
(assert (= (x332 x504) (ite (= x504 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x504))))
(assert (x1433 x214))
(assert (= (ite (= x1036 x1565) x323 (x983 x1565)) (x1057 x1565)))
(assert (x1433 x462))
(assert (= (ite (and x380 x1422 (not x606) (not x63)) (x30 x1169) (ite (and (not x606) (not x1422) x380) (x674 x1169) (ite (and x380 x606) (x674 x1169) (x1147 x1169)))) (x189 x1169)))
(assert (x1433 x954))
(assert (= (x1017 635128645) (x1221 635128645)))
(assert (x1433 x164))
(assert (x1433 x466))
(assert (x1433 x626))
(assert (x1433 x449))
(assert (x1094 x445))
(assert (x1433 x180))
(assert (x1433 x337))
(assert (x1433 x812))
(assert (= (ite (and (not x690) x1113 x620) (x120 x198) (x104 x198)) (x680 x198)))
(assert (= (x983 x1265) (ite (= x183 x1265) x786 (x359 x1265))))
(assert (= (x238 x1565) (ite (= x883 x1565) x503 (x332 x1565))))
(assert (= x316 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x210) (<= 0 x210) (= 2258409472 x37) (>= 1461501637330902918203684832716283019655932542975 x256) (not (= 1968616202 x37)) (not (= x37 2211524764)) (> x1134 0) (= (x27 (x1017 x15) (x1221 6) 0) x731) (= x638 (x27 (x1017 x256) x731 0)) (= (x1591 (x1017 274184521717934524641157099916833587206)) x1134) (= x210 (x945 x638)) (= x1082 x210) (< x37 2293535753) (not (> 911411945 x37)) (not (= 2061678023 x37)) (not (= 1986467848 x37)) (not (< x37 1968616202))) (=> (and (= x669 x884) (= x1082 x321) (= x204 x1495) (= x1146 x1335)) x771))))
(assert (x1433 x1313))
(assert (= (x292 (x1017 x1574)) x1574))
(assert (x1433 x845))
(assert (x1433 x190))
(assert (= (x113 x198) (ite (= x294 x198) x492 (x238 x198))))
(assert (=> (> (+ 10000 1) x507) (= (x1221 x507) (x1017 x507))))
(assert (= x993 (x292 (x1017 x993))))
(assert (x1433 x1050))
(assert (x1433 x684))
(assert (= (x292 (x1017 x939)) x939))
(assert (=> (< (- x269 1) 10000) (= (x1017 x269) (x1221 x269))))
(assert (x1433 x918))
(assert (x1094 x180))
(assert (x1433 x1312))
(assert (x1433 x52))
(assert (x1433 x210))
(assert (x1433 x1026))
(assert (= (x120 x1345) (ite (and x1113 (not x1371) x1460 x1329 x660 x620) (x749 x1345) (ite (and x1460 x620 (not x660) x1113 x1329) (x113 x1345) (ite (and (not x1329) x1113 x620 x1460) (x238 x1345) (ite (and x620 x1113 (not x1460)) (x332 x1345) (x1531 x1345)))))))
(assert (x1433 x323))
(assert (x1433 x1418))
(assert (= x1306 (x292 (x1017 x1306))))
(assert (= (x292 (x1017 x192)) x192))
(assert (= 911411945 (x292 (x1221 911411945))))
(assert (= (ite (= x51 x1112) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x971 x51)) (x671 x51)))
(assert (= x1072 (x292 (x1017 x1072))))
(assert (= (x113 x1265) (ite (= x294 x1265) x492 (x238 x1265))))
(assert (= (x1221 2211524764) (x1017 2211524764)))
(assert (x1094 x106))
(assert (= 0 (x16 x43)))
(assert (x1094 x465))
(assert (x1433 x1256))
(assert (= x178 (=> (and (> x1034 0) (not (= 69947311 x611)) (= (x27 (x1017 x126) x1372 0) x1234) (<= 0 x1256) (= x1300 x1256) (= (x27 (x1017 x779) x477 0) x1372) (= x1256 (x623 x1234)) (<= x779 1461501637330902918203684832716283019655932542975) (> 911411945 x611) (not (= x611 87118632)) (= x477 (x27 (x1017 x524) (x1221 9) 0)) (<= x1256 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x611 142201243) (<= x126 1461501637330902918203684832716283019655932542975) (= (x1591 (x1017 274184521717934524641157099916833587206)) x1034) (> 468353030 x611) (> 2293535753 x611)) (=> (and (= x1335 x1231) (= x592 (and x738 x1208)) (= x738 (> x382 0)) (= x106 x884) (= x966 0) (= x1300 x382)) x1466))))
(assert (= x1113 (or (and x442 x882) (and x207 x899) x1450)))
(assert (x1433 x1230))
(assert (= (x59 x1265) (ite (and x538 x1115) (x955 x1265) (x1149 x1265))))
(assert (=> (> (+ 10000 1) x1011) (= (x1221 x1011) (x1017 x1011))))
(assert (x1433 x616))
(assert (= (x292 (x1017 x445)) x445))
(assert (=> (< (- x893 1) 10000) (= (x1221 x893) (x1017 x893))))
(assert (x1433 x125))
(assert (=> (< (- x1042 1) 10000) (= (x1221 x1042) (x1017 x1042))))
(assert (x1433 x1582))
(assert (= (ite (= x725 x1265) x999 (x1549 x725)) (x955 x725)))
(assert (x1433 x910))
(assert (= x771 (=> (and (= x307 (x27 (x1017 x1146) (x1221 7) 0)) (>= 1461501637330902918203684832716283019655932542975 x669) (= x788 (x1591 (x1017 274184521717934524641157099916833587206))) (not (< x1021 468353030)) (>= 1461501637330902918203684832716283019655932542975 x1495) (<= 0 x223) (not (= x1021 635128645)) (= x223 x840) (= x223 (x995 x65)) (= 759532456 x1021) (not (= x1021 468353030)) (> 2293535753 x1021) (> 911411945 x1021) (= (x27 (x1017 x1495) x90 0) x65) (= (x27 (x1017 x669) x307 0) x90) (> x788 0) (<= x223 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x1004 x1335) (= x884 x1272) x1482 (= x1497 x840) (= x1482 (>= x1497 x321))) x1239))))
(assert (x1433 x1177))
(assert (= (x671 x388) (ite (= x1112 x388) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x971 x388))))
(assert (= (ite (= x704 x183) x786 (x359 x704)) (x983 x704)))
(assert (= (x292 (x1221 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (=> (= x1501 x423) x493) x1555))
(assert (x1433 x339))
(assert (x1094 x108))
(assert (= (x120 x1292) (ite (and x1329 (not x1371) x1460 x660 x620 x1113) (x749 x1292) (ite (and x620 x1113 x1460 (not x660) x1329) (x113 x1292) (ite (and x620 x1460 x1113 (not x1329)) (x238 x1292) (ite (and (not x1460) x1113 x620) (x332 x1292) (x1531 x1292)))))))
(assert (x1433 x1290))
(assert (=> (< (- x1028 1) 10000) (= (x1221 x1028) (x1017 x1028))))
(assert (= (x292 (x1017 x277)) x277))
(assert (x1433 x743))
(assert (= (ite (= x1525 x461) x1140 (x674 x1525)) (x30 x1525)))
(assert (x1433 x1078))
(assert (= (x120 x51) (ite (and x660 x1113 x1329 (not x1371) x620 x1460) (x749 x51) (ite (and x1329 x1113 x1460 x620 (not x660)) (x113 x51) (ite (and x620 (not x1329) x1460 x1113) (x238 x51) (ite (and x1113 x620 (not x1460)) (x332 x51) (x1531 x51)))))))
(assert (=> (< (- x1504 1) 10000) (= (x1017 x1504) (x1221 x1504))))
(assert (x1094 x296))
(assert (= x66 (=> (= (> x441 0) x608) (and (=> x608 x614) (=> (not x608) x3)))))
(assert (= (x113 x725) (ite (= x725 x294) x492 (x238 x725))))
(assert (=> (> (+ 10000 1) x1104) (= (x1017 x1104) (x1221 x1104))))
(assert (x1433 x191))
(assert (= (=> (and (= (= 0 x1328) x944) (= (x945 x1543) x1328) (= x1294 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (x27 (x1017 x1294) x1512 0) x1543) (<= 0 x1328) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1328) (= x1512 (x27 (x1017 x1571) (x1221 6) 0))) (and (=> x944 x335) (=> (and (= x1501 x1571) (not x944)) x1555))) x735))
(assert (= (+ (x292 x1051) 1) (x292 (x1162 x1051 1))))
(assert (x1433 x1369))
(assert (= (x1057 x167) (ite (= x167 x1036) x323 (x983 x167))))
(assert (x1433 x1514))
(assert (x1433 x1580))
(assert (x1433 x770))
(assert (x1433 x908))
(assert (x1433 x705))
(assert (x1433 x1232))
(assert (x1433 x239))
(assert (= (x955 x51) (ite (= x51 x1265) x999 (x1549 x51))))
(assert (x1433 x1236))
(assert (x1094 x110))
(assert (= (x238 x43) (ite (= x883 x43) x503 (x332 x43))))
(assert (x1094 x1146))
(assert (x1433 x941))
(assert (x1433 x1402))
(assert (= x177 (or (and x1286 x1507) x1211)))
(assert (=> (< (- x471 1) 10000) (= (x1017 x471) (x1221 x471))))
(assert (x1433 x1035))
(assert (x1433 x817))
(assert (= (x292 (x1017 x779)) x779))
(assert (x1433 x1446))
(assert (= (x226 x1292) (ite (= x1292 x78) x748 (x1285 x1292))))
(assert (x1433 x931))
(assert (x1094 x1005))
(assert (= (ite (= x725 x78) x748 (x1285 x725)) (x226 x725)))
(assert (= x879 (=> (and (<= 0 x1284) (= x1284 (x1012 x336)) (= x1480 (x27 (x1017 x1563) x1266 0)) (not (> 2293535753 x1492)) (= x1046 (x27 (x1017 x77) x1480 0)) (>= 1461501637330902918203684832716283019655932542975 x1563) (not (= x1492 2512682246)) (= 2532887486 x1492) (= x1266 (x27 (x1017 x941) (x1221 4) 0)) (> x175 0) (= x336 (x27 (x1017 x1317) x1046 0)) (<= x1284 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2418364589 x1492)) (< x1492 2690754053) (= x1284 x534) (not (= 2293535753 x1492)) (< x1492 2960351575) (= (x1591 (x1017 274184521717934524641157099916833587206)) x175) (>= 1461501637330902918203684832716283019655932542975 x77) (<= x1317 1461501637330902918203684832716283019655932542975)) x1187)))
(assert (x1433 x390))
(assert (=> (< (- x1277 1) 10000) (= (x1017 x1277) (x1221 x1277))))
(assert (=> (< (- x908 1) 10000) (= (x1221 x908) (x1017 x908))))
(assert (= x1385 (x292 (x1017 x1385))))
(assert (x1433 x51))
(assert (x1433 x904))
(assert (= (x1017 274184521717934524641157099916833587218) (x1221 274184521717934524641157099916833587218)))
(assert (=> (< (- x1402 1) 10000) (= (x1221 x1402) (x1017 x1402))))
(assert (x1433 x444))
(assert (x1094 x826))
(assert (x1433 x498))
(assert (x1433 x378))
(assert (x1433 x1126))
(assert (x1433 x617))
(assert (x1433 x914))
(assert (= (x1017 649617121) (x1221 649617121)))
(assert (= (ite (= x183 x1193) x786 (x359 x1193)) (x983 x1193)))
(assert (= (x292 (x1017 x1095)) x1095))
(assert (=> (< (- x110 1) 10000) (= (x1017 x110) (x1221 x110))))
(assert (x1433 x402))
(assert (= (x120 x1363) (ite (and x620 (not x1371) x1113 x1329 x660 x1460) (x749 x1363) (ite (and x620 x1460 x1329 (not x660) x1113) (x113 x1363) (ite (and x1113 (not x1329) x1460 x620) (x238 x1363) (ite (and (not x1460) x1113 x620) (x332 x1363) (x1531 x1363)))))))
(assert (x1433 x1552))
(assert (x1433 x1579))
(assert (x1433 x841))
(assert (=> (> (+ 10000 1) x1495) (= (x1221 x1495) (x1017 x1495))))
(assert (x1433 x158))
(assert (x1303 1461501637330902918203684832716283019655932542975))
(assert (x1433 x625))
(assert (x1433 x658))
(assert (= (x292 (x1017 x1561)) x1561))
(assert (x1433 x206))
(assert (=> (< (- x1272 1) 10000) (= (x1017 x1272) (x1221 x1272))))
(assert (= (x251 x51) (ite (= x268 x51) x444 (x374 x51))))
(assert (=> (< (- x1463 1) 10000) (= (x1221 x1463) (x1017 x1463))))
(assert (= (x1221 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1017 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x292 (x1017 x163)) x163))
(assert (= (ite (= x78 x284) x748 (x1285 x284)) (x226 x284)))
(assert (= (x292 (x1017 x684)) x684))
(assert (x1303 x742))
(assert (x1433 x495))
(assert (x1433 x148))
(assert (= 0 (x16 x363)))
(assert (x1433 x1346))
(assert (x1433 x235))
(assert (= (x955 x388) (ite (= x1265 x388) x999 (x1549 x388))))
(assert (= (ite (and x1422 (not x63) x380 (not x606)) (x1057 x363) (ite (and (not x1422) x380 (not x606)) (x983 x363) (ite (and x606 x380) (x983 x363) (x401 x363)))) (x124 x363)))
(assert (x1433 x896))
(assert (= 2939843472 (x292 (x1221 2939843472))))
(assert (= x1548 (=> (and (>= x685 0) x494 (= x884 x256) (= x863 x1067) (<= 0 x1224) (<= 0 x22) (>= x884 0) (>= x869 0) x535 (>= x204 0) (>= x1274 0) (>= 1461501637330902918203684832716283019655932542975 x884) (= x15 x1335) (<= x1067 1461501637330902918203684832716283019655932542975) (= x494 (> (x1591 (x1017 274184521717934524641157099916833587206)) 0)) (= false x1100) (>= 1461501637330902918203684832716283019655932542975 x1224) x267 (= x869 (x343 (x1017 274184521717934524641157099916833587218))) (= (x343 (x1017 274184521717934524641157099916833587206)) x22) (= x1274 x569) (= false x392) (= 5 x1526) (<= x204 1461501637330902918203684832716283019655932542975) (= x261 false) (= (x343 (x1017 274184521717934524641157099916833587214)) x685) (>= 1461501637330902918203684832716283019655932542975 x1274) (>= x1067 0) (= 2939843472 x246) (= (< 0 (x1591 (x1017 274184521717934524641157099916833587214))) x535) (= x267 (> (x1591 (x1017 274184521717934524641157099916833587218)) 0)) (= x878 false)) x316)))
(assert (x1433 x78))
(assert (= (x730 x480) (ite (and x633 x177) (x7 x480) (ite (and x387 x177 (not x633)) (x1123 x480) (x1307 x480)))))
(assert (x1433 x1561))
(assert (= (x292 (x1017 x465)) x465))
(assert (= (x292 (x1017 x1004)) x1004))
(assert (x1433 x192))
(assert (x1433 x714))
(assert (= (ite (= x1265 x704) x415 (x226 x1265)) (x430 x1265)))
(assert (=> (> (+ 10000 1) x584) (= (x1017 x584) (x1221 x584))))
(assert (= x915 (x292 (x1017 x915))))
(assert (x1433 x613))
(assert (x1433 x185))
(assert (= (x292 (x1017 x644)) x644))
(assert (= x511 x372))
(assert (=> (> (+ 10000 1) x1403) (= (x1017 x1403) (x1221 x1403))))
(assert (x1433 x1457))
(assert (x1433 x1553))
(assert (=> (> (+ 10000 1) x432) (= (x1221 x432) (x1017 x432))))
(assert (x1433 x1375))
(assert (x1433 x80))
(assert (x1433 x640))
(assert (x1094 x432))
(assert (x1433 x982))
(assert (= (ite (= x672 x78) x748 (x1285 x672)) (x226 x672)))
(assert (=> (< (- x1437 1) 10000) (= (x1221 x1437) (x1017 x1437))))
(assert (x1433 x1430))
(assert (x1433 x761))
(assert (= (x226 x78) x748))
(assert (x1433 x95))
(assert (=> (> (+ 10000 1) x1560) (= (x1017 x1560) (x1221 x1560))))
(assert (= (ite (and (not x606) (not x63) x380 x1422) (x1057 x198) (ite (and x380 (not x606) (not x1422)) (x983 x198) (ite (and x380 x606) (x983 x198) (x401 x198)))) (x124 x198)))
(assert (x1433 x356))
(assert (= (x292 (x1017 x495)) x495))
(assert (x1433 x1593))
(assert (x1433 x1004))
(assert (x1433 x1146))
(assert (x1303 x1145))
(assert (x1433 x1086))
(assert (x1303 x293))
(assert (x1433 x953))
(assert (= (x430 x363) (ite (= x704 x363) x415 (x226 x363))))
(assert (= 0 (x16 x704)))
(assert (=> (< (- x164 1) 10000) (= (x1017 x164) (x1221 x164))))
(assert (x1433 x906))
(assert (= 0 (x16 192)))
(assert (x1433 x1277))
(assert (= (x430 x43) (ite (= x43 x704) x415 (x226 x43))))
(assert (=> (> (+ 10000 1) x77) (= (x1221 x77) (x1017 x77))))
(assert (=> (> (+ 10000 1) x1479) (= (x1221 x1479) (x1017 x1479))))
(assert (x1433 x1224))
(assert (= (ite (= x725 x704) x415 (x226 x725)) (x430 x725)))
(assert (x1303 x1114))
(assert (x1433 x382))
(assert (= (x292 (x1017 x126)) x126))
(assert (x1433 x1072))
(assert (x1433 x1380))
(assert (= (x749 x672) (ite (= x1026 x672) x714 (x113 x672))))
(assert (x1433 x1556))
(assert (= (x955 x624) (ite (= x1265 x624) x999 (x1549 x624))))
(assert (= (x292 (x1017 x152)) x152))
(assert (x1433 x294))
(assert (x1094 x928))
(assert (= (x1017 826074471) (x1221 826074471)))
(assert (= x691 (and x1038 x758)))
(assert (= (ite (= x1193 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x1193)) (x332 x1193)))
(assert (x1433 x532))
(assert (= (ite (= x1036 x191) x323 (x983 x191)) (x1057 x191)))
(assert (x1433 x1498))
(assert (x1433 x119))
(assert (x1433 x718))
(assert (x1094 x986))
(assert (x1433 x1074))
(assert (x1433 x1281))
(assert (=> (> (+ 10000 1) x49) (= (x1221 x49) (x1017 x49))))
(assert (= (x16 x167) 0))
(assert (= 649617121 (x292 (x1221 649617121))))
(assert (= (x59 x1292) (ite (and x1115 x538) (x955 x1292) (x1149 x1292))))
(assert (=> (> (+ 10000 1) x937) (= (x1221 x937) (x1017 x937))))
(assert (= (ite (and x380 x933) (x1550 x1472) (x236 x1472)) (x70 x1472)))
(assert (= (x292 (x1017 x595)) x595))
(assert (= (x955 x1565) (ite (= x1265 x1565) x999 (x1549 x1565))))
(assert (= (ite (= x1112 x624) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x971 x624)) (x671 x624)))
(assert (= (ite (= x1193 x1036) x323 (x983 x1193)) (x1057 x1193)))
(assert (x1094 x147))
(assert (= (x292 (x1221 1889567281)) 1889567281))
(assert (x1433 x19))
(assert (= (x292 (x1221 2835717307)) 2835717307))
(assert (x1433 x1082))
(assert (x1433 x357))
(assert (= (x955 x672) (ite (= x672 x1265) x999 (x1549 x672))))
(assert (x1433 x562))
(assert (=> (> (+ 10000 1) x928) (= (x1221 x928) (x1017 x928))))
(assert (= 0 (x16 160)))
(assert (= (x292 (x1017 x916)) x916))
(assert (x1094 x441))
(assert (= 2764855426 (x292 (x1221 2764855426))))
(assert (x1433 x846))
(assert (= (x292 (x1017 x669)) x669))
(assert (x1433 x429))
(assert (x1094 x269))
(assert (= (x1057 x624) (ite (= x624 x1036) x323 (x983 x624))))
(assert (= (ite (= x1265 x883) x503 (x332 x1265)) (x238 x1265)))
(assert (= 2418364589 (x292 (x1221 2418364589))))
(assert (x1433 x744))
(assert (x1094 x76))
(assert (= x1382 (=> (and (not (= x984 0)) (= x1240 (< 0 x101)) (or (and (not x1218) (= x206 (x619 115792089237316195423570985008687907853269984665640564039457584007913129639904 x918)) (= x472 (x130 (+ x206 x1473))) (= x472 x1527) (= (x130 (+ x1096 96)) x312) (= x1292 x1473) (= (x130 (+ x827 63)) x918)) (and (= 96 x1292) (= x1527 x1473) x1218)) x659 (= (x216 (x1017 x141)) x801) (= (x1396 x1292) x101) (= x659 (< (x1176 (x1017 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1218 (= x827 0)) (= x447 (x1176 (x1017 274184521717934524641157099916833587206))) (or (and (= (= 0 x258) x508) x1240 (= (x130 (+ 32 x1292)) x1193) (= x756 x258) (= (x1396 x1193) x258) (= (not x508) x974) (= (x1396 x1292) x35) (= x756 (ite x974 1 0)) (< 0 x258) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x35) (and (< x35 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x35)))))) (not x1240))) x324)))
(assert (= (x59 x504) (ite (and x538 x1115) (x955 x504) (x1149 x504))))
(assert (x1433 x939))
(assert (= (x292 (x1017 x1281)) x1281))
(assert (x1094 x584))
(assert (= x545 x1049))
(assert (x1433 x840))
(assert (= x1243 (and x736 x250)))
(assert (x1433 x1092))
(assert (x1094 x152))
(assert (=> (> (+ 10000 1) x1420) (= (x1221 x1420) (x1017 x1420))))
(assert (= x52 (x292 (x1017 x52))))
(assert (x1433 x584))
(assert (= x988 (or (and (not x689) x1502) (and x691 (not x764)))))
(assert (x1433 x652))
(assert (= x1466 (=> (and (not (= 2764855426 x1163)) (= x1163 2798343961) (< 0 x1131) (= x139 (x27 (x1017 x106) x724 0)) (>= x188 0) (= (x27 (x1017 x1231) (x1221 5) 0) x724) (not (= x1163 2690754053)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x188) (= x1344 x188) (<= x106 1461501637330902918203684832716283019655932542975) (not (< x1163 2690754053)) (= (x1591 (x1017 274184521717934524641157099916833587206)) x1131) (= x188 (x1195 x139)) (not (< x1163 2293535753)) (not (= x1163 2743102681)) (> 2960351575 x1163)) (=> (and (= x1335 x475) (= x152 x204) (= x1224 x160) (= x884 x1281) (= x1125 x1344)) x798))))
(assert (x1433 x946))
(assert (= (ite (= x1363 x1036) x323 (x983 x1363)) (x1057 x1363)))
(assert (= (ite (and x396 x1223 (not x408)) (x920 x51) (x1478 x51)) (x549 x51)))
(assert (= (ite (and x1460 x1329 x620 x660 (not x1371) x1113) (x749 x624) (ite (and x620 x1113 x1329 x1460 (not x660)) (x113 x624) (ite (and x1460 x620 (not x1329) x1113) (x238 x624) (ite (and x1113 (not x1460) x620) (x332 x624) (x1531 x624))))) (x120 x624)))
(assert (x1433 x1083))
(assert (= (x292 (x1017 x737)) x737))
(assert (x1433 x503))
(assert (x1433 x814))
(assert (= (x292 (x1017 x1463)) x1463))
(assert (x1094 x737))
(assert (x1433 x1328))
(assert (x1094 x1563))
(assert (x1433 x1156))
(assert (x1433 x166))
(assert (x1433 x291))
(assert (= 826074471 (x292 (x1221 826074471))))
(assert (= x208 (x292 (x1017 x208))))
(assert (x1433 x1101))
(assert (= (ite (and x380 (not x606) (not x63) x1422) (x1057 x1193) (ite (and (not x1422) x380 (not x606)) (x983 x1193) (ite (and x606 x380) (x983 x1193) (x401 x1193)))) (x124 x1193)))
(assert (x1303 x752))
(assert (x1433 x348))
(assert (x1433 x75))
(assert (x1094 x1537))
(assert (x1094 x475))
(assert (x1433 x208))
(assert (x1094 x1495))
(assert (x1433 x811))
(assert (x1094 x669))
(assert (= x637 (=> (and (= x931 759532456) (not (< x931 468353030)) (= x1025 x506) (< x931 911411945) (> 2293535753 x931) (= x506 (x551 x121)) (not (= 635128645 x931)) (= x1373 (x27 (x1017 x843) x1401 0)) (<= x1420 1461501637330902918203684832716283019655932542975) (= (x1591 (x1017 274184521717934524641157099916833587206)) x705) (>= x506 0) (= (x27 (x1017 x1520) (x1221 7) 0) x1401) (<= x506 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 468353030 x931)) (>= 1461501637330902918203684832716283019655932542975 x843) (> x705 0) (= x121 (x27 (x1017 x1420) x1373 0))) (=> (and (= x613 x1025) (= x1335 x208) (= x340 (<= x613 x836)) (= x1446 x884)) x965))))
(assert (= x76 (x292 (x1017 x76))))
(assert (x1433 x1568))
(assert (x1433 x1058))
(assert (x1433 x991))
(assert (x1433 x779))
(assert (x1433 x672))
(assert (x1433 x512))
(assert (x1094 x916))
(assert (x1433 x664))
(assert (= (x920 x51) (ite (and x499 x396 x1127 x1223 x38 (not x1244)) (x251 x51) (ite (and x396 (not x499) x38 x1223 x1127) (x374 x51) (ite (and (not x1127) x1223 x38 x396) (x231 x51) (ite (and x1223 (not x38) x396) (x671 x51) (x1175 x51)))))))
(assert (x1094 x1028))
(assert (x1433 x847))
(assert (x1433 x975))
(assert (x1433 x400))
(assert (x1094 x25))
(assert (= (x430 x51) (ite (= x704 x51) x415 (x226 x51))))
(assert (x1094 x1479))
(assert (x1433 x669))
(assert (x1433 x803))
(assert (x1094 x912))
(assert (= (ite (= x183 x191) x786 (x359 x191)) (x983 x191)))
(assert (x1433 x836))
(assert (x1433 x763))
(assert (x1433 x1394))
(assert (x1433 x1267))
(assert (= x1403 (x292 (x1017 x1403))))
(assert (x1433 x64))
(assert (x1303 x765))
(assert (= x1384 (x292 (x1017 x1384))))
(assert (x1433 x797))
(assert (= (x430 x284) (ite (= x704 x284) x415 (x226 x284))))
(assert (= x1213 (x292 (x1017 x1213))))
(assert (x1433 x37))
(assert (= (x30 x681) (ite (= x461 x681) x1140 (x674 x681))))
(assert (= x826 (x292 (x1017 x826))))
(assert (x1433 x312))
(assert (x1094 x1402))
(assert (x1433 x1059))
(assert (x1433 x529))
(assert (x1433 x355))
(assert (x1433 x201))
(assert (x1433 x447))
(assert (= x853 (x292 (x1017 x853))))
(assert (x1433 x1299))
(assert (x1094 x644))
(assert (= x507 (x292 (x1017 x507))))
(assert (= 274184521717934524641157099916833587214 (x292 (x1221 274184521717934524641157099916833587214))))
(assert (x1554 x890 x490))
(assert (x1433 x342))
(assert (= x110 (x292 (x1017 x110))))
(assert (x1094 x692))
(assert (= (=> (= x4 0) x18) x1119))
(assert (x1433 x269))
(assert (= (x292 (x1017 x702)) x702))
(assert (= (ite (= x294 x504) x492 (x238 x504)) (x113 x504)))
(assert (=> (< (- x1203 1) 10000) (= (x1221 x1203) (x1017 x1203))))
(assert (= (x292 (x1017 x239)) x239))
(assert (x1433 x666))
(assert (x1094 x478))
(assert (= x850 (x292 (x1017 x850))))
(assert (x1433 x296))
(assert (x1433 x132))
(assert (=> (< (- x823 1) 10000) (= (x1221 x823) (x1017 x823))))
(assert (x1433 x196))
(assert (= (ite (and x1115 x538) (x955 x1036) (x1149 x1036)) (x59 x1036)))
(assert (=> (> (+ 10000 1) x282) (= (x1221 x282) (x1017 x282))))
(assert (= (x1017 2868243304) (x1221 2868243304)))
(assert (=> (> (+ 10000 1) x1317) (= (x1017 x1317) (x1221 x1317))))
(assert (=> (< (- x73 1) 10000) (= (x1221 x73) (x1017 x73))))
(assert (= (x292 (x1017 x598)) x598))
(assert (x1433 x1379))
(assert (= (ite (= x1363 x1026) x714 (x113 x1363)) (x749 x1363)))
(assert (x1433 x1064))
(assert (x1433 x67))
(assert (x1433 x1504))
(assert (x1433 x688))
(assert (x1433 x1103))
(assert (x1433 x22))
(assert (x1433 x868))
(assert (= (=> (and (= (= x423 0) x1108) (or (and (= x1222 (= 0 x654)) (= (x1068 x1150) x654) (= (x27 (x1017 x423) (x1221 10) 0) x1009) (= x1315 (x619 1461501637330902918203684832716283019655932542975 x1145)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x654) (<= 0 x654) (not x1108) (= (x27 (x1017 x1315) x1009 0) x1150) (or (and (= 0 x235) x1222 (= 0 x699)) (and (= x235 1) (not x1222) (= x654 x699)))) (and (= 0 x699) x1108 (= x235 0)))) x1577) x493))
(assert (x1433 x433))
(assert (= (x292 (x1221 2743102681)) 2743102681))
(assert (x1433 x864))
(assert (=> (> (+ 10000 1) x644) (= (x1017 x644) (x1221 x644))))
(assert (x1433 x796))
(assert (= x524 (x292 (x1017 x524))))
(assert (x1433 x1297))
(assert (x1433 x258))
(assert (= x1104 (x292 (x1017 x1104))))
(assert (x1433 x699))
(assert (= (x374 x198) (ite (= x198 x906) x458 (x231 x198))))
(assert (= (ite (and x380 x933) (x1195 x88) (x891 x88)) (x479 x88)))
(assert (= x155 (=> (and (= (> x1104 0) x265) (= (x760 (- x441 1)) x1104)) (and (=> x265 x115) (=> (not x265) x1137)))))
(assert (=> (> (+ 10000 1) x15) (= (x1221 x15) (x1017 x15))))
(assert (x1433 x432))
(assert (=> (< (- x915 1) 10000) (= (x1221 x915) (x1017 x915))))
(assert (x1433 x1125))
(assert (= (x292 (x1017 x805)) x805))
(assert (x1433 x1279))
(assert (= (ite (and x380 x933) (x1195 x1205) (x891 x1205)) (x479 x1205)))
(assert (x1433 x898))
(assert (= x1324 (=> (= 0 x423) x493)))
(assert (x1094 x420))
(assert (= x116 (x292 (x1017 x116))))
(assert (x1433 x197))
(assert (x1433 x303))
(assert (x1433 x1028))
(assert (= (ite (and x1115 x538) (x955 x1363) (x1149 x1363)) (x59 x1363)))
(assert (=> (> (+ 10000 1) x1503) (= (x1221 x1503) (x1017 x1503))))
(assert (x1094 x1385))
(assert (=> (< (- x1563 1) 10000) (= (x1221 x1563) (x1017 x1563))))
(assert (x1433 x504))
(assert (= (x292 (x1221 2690754053)) 2690754053))
(assert (= (and x907 x602) x241))
(assert (= 0 (x16 x1292)))
(assert (x1094 x1589))
(assert (x1433 x441))
(assert (= (ite (= x1292 x1036) x323 (x983 x1292)) (x1057 x1292)))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x292 (x1221 115792089237316195423570985008687907853269984665640564039457))))
(assert (x1433 x675))
(assert (= (ite (= x1292 x704) x415 (x226 x1292)) (x430 x1292)))
(assert (x1094 x15))
(assert (x1433 x1077))
(assert (= x1187 (=> (and (= (<= x114 x1430) x33) (= x33 x218) (= x114 x534)) x218)))
(assert (=> (> (+ 10000 1) x331) (= (x1017 x331) (x1221 x331))))
(assert (x1094 x684))
(assert (= (x292 (x1017 x912)) x912))
(assert (x1433 x507))
(assert (= x675 (x292 (x1017 x675))))
(assert (= (x955 x363) (ite (= x363 x1265) x999 (x1549 x363))))
(assert (x1094 x898))
(assert (x1433 x1264))
(assert (= (x983 x1565) (ite (= x1565 x183) x786 (x359 x1565))))
(assert (= (ite (= x1536 x624) x796 (x671 x624)) (x231 x624)))
(assert (= (x1017 2293535753) (x1221 2293535753)))
(assert (x1433 x492))
(assert (= x596 (=> (and (< x1170 2293535753) (not (= x1170 1986467848)) (= x1254 x854) (= x1316 (x27 (x1017 x563) (x1221 6) 0)) (not (= 1968616202 x1170)) (= (x1591 (x1017 274184521717934524641157099916833587206)) x886) (not (= x1170 2061678023)) (<= x851 1461501637330902918203684832716283019655932542975) (not (< x1170 911411945)) (>= x854 0) (not (= x1170 2211524764)) (= x1170 2258409472) (<= x854 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1016 (x27 (x1017 x851) x1316 0)) (= (x419 x1016) x854) (> x886 0) (not (< x1170 1968616202))) (=> (and (= x204 x1420) (= x1254 x836) (= x1335 x1520) (= x843 x884)) x637))))
(assert (x1433 x1020))
(assert (x1094 x1581))
(assert (x1303 x79))
(assert (= x1258 (and x111 (not x990))))
(assert (x1433 x1526))
(assert (= x941 (x292 (x1017 x941))))
(assert (= (x1017 604800) (x1221 604800)))
(assert (x1094 x1463))
(assert (x1433 x679))
(assert (=> (< (- x1493 1) 10000) (= (x1017 x1493) (x1221 x1493))))
(assert (x1433 x55))
(assert (= x1545 (and x1261 x1243)))
(assert (x1433 x224))
(assert (= (ite (= x694 x413) x1487 (x189 x694)) (x1056 x694)))
(assert (x1433 x887))
(assert (= x8 (x292 (x1017 x8))))
(assert (=> (< (- x877 1) 10000) (= (x1017 x877) (x1221 x877))))
(assert (x1433 x36))
(assert (x1433 x422))
(assert (=> (> (+ 10000 1) x803) (= (x1017 x803) (x1221 x803))))
(assert (= (=> (and (or (and (= (x619 1461501637330902918203684832716283019655932542975 x1145) x296) (< (+ x1177 x806) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1 (* x84 x780)) (not x1135) (= x1054 (x27 (x1017 x296) x1562 0)) (= x1509 (x27 (x1017 x441) (x1221 5) 0)) (= (x27 (x1017 x441) (x1221 6) 0) x1562) (= (x27 (x1017 x1092) x1509 0) x176) (= (+ x1338 x1283) x95) (>= x806 0) (= (x479 x176) x806) (= x1338 x1177) (= x1177 x1) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x1092) (= x806 x1283) (< (* x780 x84) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x806)) (and x1135 (= x948 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x820 (x27 (x1017 x948) x790 0)) (= (x27 (x1017 x441) (x1221 6) 0) x790))) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x908) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1487) (= x1167 (x27 (x1017 x908) x93 0)) (or (and x1586 (= x276 (< x376 x1514)) (or (and (not (< x431 x919)) (= (ite (> 604800 x772) x772 604800) x797) (= x780 x797) (not x1453) (= (x760 (- x431 x919)) x772) (= 604800 x1230)) (and (not (> x889 x431)) (= (x760 (- x431 x889)) x1579) (= x1579 x780) x1453 (= (x226 x10) x889))) (or (and (not x276) (= x1514 x431)) (and (= x431 x1246) (= x1246 (x226 x78)) x276)) (= (x226 x78) x376) (= (= 0 x919) x1453)) (and (= 0 x780) (not x1586))) (= (x70 x967) x919) (or (and (= (x619 1461501637330902918203684832716283019655932542975 x1145) x384) (not x552)) x552) (not (= x441 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (< x919 x954) x1586) (>= x1006 0) (<= 0 x748) (= (x27 (x1017 x161) x1167 0) x1293) (>= x1487 0) (= (x27 (x1017 x1560) x599 0) x1205) (= x1006 (x314 x1205)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1006) (= x78 (x130 (+ 32 x10))) (= x1189 (x130 (+ 2 x1571))) (= x552 (= 0 x429)) (<= x1522 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x969 (= x1487 0)) (< x1077 x1189) (= x599 (x27 (x1017 x441) (x1221 5) 0)) (= x161 (x619 1461501637330902918203684832716283019655932542975 x752)) (= (x27 (x1017 x441) (x1221 3) 0) x93) (= (x394 x1293) x1487) (= x1560 (x619 1461501637330902918203684832716283019655932542975 x1145)) (<= x919 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x130 (+ 64 x10)) x1153) (>= x919 0) (= x967 (x27 (x1017 x803) x1592 0)) (= x1153 x390) (or x969 (and (not x969) (or (not x530) (and (= (x619 1461501637330902918203684832716283019655932542975 x1145) x49) (= x922 x1352) (> x999 0) (= x704 (x130 (+ x807 160))) (= (x27 (x1017 x110) x510 0) x1337) (> x999 0) (= x598 (x619 1461501637330902918203684832716283019655932542975 x752)) (= x110 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (x1516 x297) x1232) (= (x27 (x1017 x826) x1337 0) x732) (> x999 0) (= (x1516 x297) x73) (<= 0 x817) x530 (= (- (/ x589 1000000000000000000) (uninterp_frac x589 1000000000000000000)) x922) (= (x619 1461501637330902918203684832716283019655932542975 x752) x826) (= x817 (x1575 x353)) (= x759 (> x999 1)) (<= x817 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x226 x1265) x1394) (or (not x759) (and (= (x619 1461501637330902918203684832716283019655932542975 x1145) x1493) (>= 1461501637330902918203684832716283019655932542975 x1005) (= x1445 (x430 x1265)) (= (x619 1461501637330902918203684832716283019655932542975 x752) x420) (not x1030) (= x449 (x1516 x452)) (<= 0 x185) (= (x27 (x1017 x283) x539 0) x194) (= x946 0) (= (x1516 x452) x1005) (<= x449 1461501637330902918203684832716283019655932542975) (= x85 (x27 (x1017 x420) x1353 0)) (= (x27 (x1017 x441) (x1221 11) 0) x1276) (= (x1516 x452) x283) (= (x27 (x1017 x441) (x1221 4) 0) x525) (= x870 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (* x1197 x185) x1152) (= x885 (- (/ x1152 1000000000000000000) (uninterp_frac x1152 1000000000000000000))) (= (x27 (x1017 x1581) x1361 0) x539) (<= x185 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x946 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 1 x999) (= x1564 (+ x1347 x1334)) (<= x283 1461501637330902918203684832716283019655932542975) (<= 0 x946) (= (x27 (x1017 x916) x525 0) x1353) (= x885 x1334) (= (x27 (x1017 x1005) x85 0) x1169) (= x460 (x27 (x1017 x449) x145 0)) (< (+ x885 x832) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1238 (x130 (+ 192 x807))) (= x1361 (x27 (x1017 x1493) x1505 0)) (> x1445 1) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x916) (= x145 (x27 (x1017 x870) x1276 0)) (= (x1575 x460) x185) (< 1 x999) (= x946 (x1056 x1169)) (> x999 1) (= (x130 (+ 64 x841)) x452) (= (< 2 x999) x1030) (= (x430 x1238) x832) (= x1347 x832) (< (* x1197 x185) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x759 (= (x619 1461501637330902918203684832716283019655932542975 x752) x1581) (= (x27 (x1017 x441) (x1221 4) 0) x1505))) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x675) (= x1035 x463) (= x1355 (x27 (x1017 x598) x1342 0)) (= x1157 (x189 x681)) (<= x73 1461501637330902918203684832716283019655932542975) (<= x180 1461501637330902918203684832716283019655932542975) (= (+ x1352 x463) x415) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157) (>= x1157 0) (= (x27 (x1017 x675) x900 0) x1342) (> x1394 0) (= x353 (x27 (x1017 x180) x92 0)) (< (+ x1035 x922) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x817 x1197)) (= (x27 (x1017 x49) x1407 0) x92) (= (x27 (x1017 x441) (x1221 4) 0) x900) (= x180 (x1516 x297)) (= x1301 x297) (= (x27 (x1017 x441) (x1221 4) 0) x510) (= x1035 (x226 x704)) (= x681 (x27 (x1017 x73) x1355 0)) (= x413 (x27 (x1017 x1232) x732 0)) (>= 1461501637330902918203684832716283019655932542975 x1232) (= x1407 (x27 (x1017 x441) (x1221 11) 0)) (= (* x817 x1197) x589) (= 0 x1157))) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x1487) 1 0) x2) (= x79 1) (= (- (/ x1228 x1006) (uninterp_frac x1228 x1006)) x1197) (= (x619 x79 x2) x75) (= x1228 (uninterp_mod (* 1000000000000000000 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x530 (> x999 0)) (= 0 x75) (> x1006 0))) (>= x1522 0) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x803) (= (x27 (x1017 x441) (x1221 6) 0) x1592) (= x748 (x1305 x1118)) (<= x748 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x181 x1356) x1522) (= x954 (x226 x78)) (= x1356 (x27 (x1017 x441) (x1221 1) 0)) (= (= 0 x780) x1135) (= (x1162 x1356 1) x1118)) x347) x273))
(assert (= 2512682246 (x292 (x1221 2512682246))))
(assert (x1094 x843))
(assert (= (x292 (x1017 x1523)) x1523))
(assert (x1433 x209))
(assert (x1094 x1294))
(assert (= (x226 x1363) (ite (= x1363 x78) x748 (x1285 x1363))))
(assert (= (ite (= x183 x363) x786 (x359 x363)) (x983 x363)))
(assert (x1094 x853))
(assert (= (ite (and x380 x933) (x1195 x176) (x891 x176)) (x479 x176)))
(assert (= (ite (= x883 x725) x503 (x332 x725)) (x238 x725)))
(assert (x1433 x1511))
(assert (= (x30 x336) (ite (= x336 x461) x1140 (x674 x336))))
(assert (x1433 x922))
(assert (= (and x1206 x949) x1304))
(assert (x1094 x507))
(assert (= (x292 (x1221 635128645)) 635128645))
(assert (= x1294 (x292 (x1017 x1294))))
(assert (= (or x364 x1411) x488))
(assert (x1433 x936))
(assert (x1433 x187))
(assert (x1433 x832))
(assert (x1433 x526))
(assert (x1433 x506))
(assert (= (and x944 x751) x1206))
(assert (= (x292 (x1017 x142)) x142))
(assert (x1433 x1560))
(assert (x1433 x905))
(assert (= x1589 (x292 (x1017 x1589))))
(assert (= (x1221 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1017 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x1433 x999))
(assert (= x161 (x292 (x1017 x161))))
(assert (x1094 x1560))
(assert (=> (> (+ 10000 1) x1281) (= (x1221 x1281) (x1017 x1281))))
(assert (= (ite (and x1422 (not x606) (not x63) x380) (x1057 x704) (ite (and (not x1422) x380 (not x606)) (x983 x704) (ite (and x380 x606) (x983 x704) (x401 x704)))) (x124 x704)))
(assert (= x1080 x580))
(assert (= (ite (= x191 x1265) x999 (x1549 x191)) (x955 x191)))
(assert (x1094 x779))
(assert (= (x59 x198) (ite (and x538 x1115) (x955 x198) (x1149 x198))))
(assert (= (x124 x1345) (ite (and (not x63) x380 (not x606) x1422) (x1057 x1345) (ite (and x380 (not x1422) (not x606)) (x983 x1345) (ite (and x380 x606) (x983 x1345) (x401 x1345))))))
(assert (= 2258409472 (x292 (x1221 2258409472))))
(assert (x1433 x884))
(assert (x1433 x484))
(assert (x1094 x281))
(assert (= (x292 (x1017 x716)) x716))
(assert (= x324 (=> (= x1223 (< 1 x999)) (and (=> (not x1223) x1443) (=> (and (= (x671 x1527) x1469) (= x664 (x1516 x438)) (= x483 (x130 (+ x1527 100))) (or (and (= 0 x905) (not x38)) (and (= x1127 (> x1469 32)) (or (and (= x458 (x231 x388)) (or (and (or (and (= 128 x905) (not x1311) (= (x251 x624) x855) x1244 (= (x130 (+ x483 160)) x861) (= (> x1469 128) x1311) (= x624 (x130 (+ 128 x1527)))) (and (= x905 96) (not x1244))) (= x444 (x374 x198)) x499 (= x198 (x130 (+ 96 x1527))) (= x1244 (< 96 x1469)) (= x268 (x130 (+ 128 x483)))) (and (not x499) (= 64 x905))) (= x499 (< 64 x1469)) (= x906 (x130 (+ x483 96))) x1127 (= (x130 (+ 64 x1527)) x388)) (and (not x1127) (= 32 x905))) x38 (= x796 (x671 x672)) (= x421 x1536) (= x1345 x672))) (= x38 (< 0 x1469)) (= (x619 26959946667150639794667015087019630673637144422540572481103610249215 x1114) x1580) (= (x1396 x725) x698) (= x953 (x760 (- x286 32))) (= x1345 (x130 (+ 32 x1527))) (= x1112 (x130 (+ 96 x229))) x1223 (= (x130 (+ 192 x807)) x725) (= (x130 (+ x841 64)) x438) (= (x130 (+ 36 x1527)) x229) (or (not x408) (and x408 (= (x130 (+ x421 x1469)) x1064))) (= x1214 (x619 1461501637330902918203684832716283019655932542975 x752)) (= 0 x1255) x1544 (>= 1461501637330902918203684832716283019655932542975 x664) (= x408 (> x905 x1469)) (> x1076 1) (= x1544 (> x662 0)) (= x421 (x130 (+ x229 128))) (= (x130 (+ x1580 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x138) (= x1114 (x107 x1345)) (= (x1396 x1265) x1076) (= (x760 (- x483 x1527)) x286) (= x190 (x130 (+ 68 x1527))) (> x999 1) (= (x1591 (x1017 x664)) x662)) x1399)))))
(assert (= (x983 x1292) (ite (= x183 x1292) x786 (x359 x1292))))
(assert (= x256 (x292 (x1017 x256))))
(assert (x1433 x517))
(assert (x1433 x1574))
(assert (x1433 x168))
(assert (x1433 x594))
(assert (x1094 x243))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x292 (x1221 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (x292 (x1017 x1503)) x1503))
(assert (x1433 x1079))
(assert (x1094 x524))
(assert (= (=> (= (< 0 x999) x620) (and (=> (not x620) x1443) (=> (and (= x690 (> x679 x1199)) (= (x130 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1418)) x348) (= x747 x1301) (= (x760 (- x1358 32)) x400) (= x641 (x1111 x167)) (= x1015 (< 0 x962)) (= x962 (x1591 (x1017 x141))) (= x167 (x130 (+ x390 32))) (= x141 (x1516 x747)) (= x284 (x130 (+ 160 x807))) (= x809 0) (= x341 (x130 (+ x390 68))) (= (x130 (+ 36 x390)) x1413) (< 0 x40) (= x1460 (> x1199 0)) (or (and (= (> x1199 32) x1329) (= x1473 x883) (or (and (= x43 (x130 (+ x390 64))) (= (x130 (+ x1096 96)) x294) (= x660 (< 64 x1199)) (or (and (= x679 64) (not x660)) (and (= x1026 (x130 (+ x1096 128))) (= (x113 x1565) x714) x660 (or (and (= x679 96) (not x1371)) (and (= (x130 (+ 160 x1096)) x617) x1371 (not x1541) (= (x130 (+ 128 x390)) x504) (= (x749 x504) x328) (= x679 128) (= x1541 (> x1199 128)))) (= x1565 (x130 (+ 96 x390))) (= x1371 (> x1199 96)))) (= x492 (x238 x43)) x1329) (and (= 32 x679) (not x1329))) (= x363 x167) x1460 (= (x332 x363) x503)) (and (= x679 0) (not x1460))) (= x40 (x1395 x1265)) (= x607 (x130 (+ 96 x1413))) (= x1199 (x332 x390)) (> x999 0) (= x1358 (x760 (- x1096 x390))) (= (x619 1461501637330902918203684832716283019655932542975 x752) x214) (= x497 (x1395 x284)) (= x1418 (x619 26959946667150639794667015087019630673637144422540572481103610249215 x641)) x1015 (= x1473 (x130 (+ x1413 128))) (or (and (= (x130 (+ x1473 x1199)) x656) x690) (not x690)) (= x1096 (x130 (+ x390 100))) x620 (>= 1461501637330902918203684832716283019655932542975 x141)) x570))) x347))
(assert true)
(assert (x1433 x1432))
(assert (= (and x1377 x127) x1502))
(assert (= x425 (x292 (x1017 x425))))
(assert (=> (> (+ 10000 1) x208) (= (x1017 x208) (x1221 x208))))
(assert (= x661 x545))
(assert (= x1452 (x292 (x1017 x1452))))
(assert (=> (> (+ 10000 1) x898) (= (x1017 x898) (x1221 x898))))
(assert (x1433 x1292))
(assert (x1094 x1346))
(assert (= (x680 x1292) (ite (and x1113 (not x690) x620) (x120 x1292) (x104 x1292))))
(assert (= (x16 224) 0))
(assert (x1433 x1021))
(assert (= x1443 (=> (and (= x884 x851) (= x563 x1335)) x596)))
(assert (=> (< (- x1092 1) 10000) (= (x1017 x1092) (x1221 x1092))))
(assert (x1433 x1437))
(assert (x1094 274184521717934524641157099916833587214))
(assert (= (ite (and x1422 x380 (not x63) (not x606)) (x1057 x1292) (ite (and (not x1422) (not x606) x380) (x983 x1292) (ite (and x380 x606) (x983 x1292) (x401 x1292)))) (x124 x1292)))
(assert (= (x983 x672) (ite (= x183 x672) x786 (x359 x672))))
(assert (= x835 (x292 (x1017 x835))))
(assert (x1433 x138))
(assert (= (+ (x292 x1356) 1) (x292 (x1162 x1356 1))))
(assert (x1433 x1192))
(assert (= x249 (x292 (x1017 x249))))
(assert (x1433 x752))
(assert (x1433 x966))
(assert (= (x292 (x1017 x658)) x658))
(assert (x1433 x635))
(assert (x1303 x918))
(assert (= x511 x859))
(assert (x1303 x612))
(assert (x1433 x73))
(assert (= x791 x717))
(assert (x1433 x1327))
(assert (x1433 x1435))
(assert (= (x113 x1345) (ite (= x294 x1345) x492 (x238 x1345))))
(assert (= (=> (and (= x1574 (x760 (- x441 1))) (= x668 (> x1574 0))) (and (=> x668 x972) (=> (not x668) x3))) x1151))
(assert (= (x292 (x1017 x243)) x243))
(assert (= x491 (and x265 x225)))
(assert (x1433 x1387))
(assert (x1094 x425))
(assert (x1433 x1153))
(assert (x1433 x818))
(assert (=> (< (- x1387 1) 10000) (= (x1017 x1387) (x1221 x1387))))
(assert (x1433 x1145))
(assert (= x722 (x292 (x1017 x722))))
(assert (x1094 x256))
(assert (x1433 x853))
(assert (= x186 (x292 (x1017 x186))))
(assert (=> (< (- x1294 1) 10000) (= (x1017 x1294) (x1221 x1294))))
(assert (x1433 x1128))
(assert (= (ite (= x390 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x390)) (x332 x390)))
(assert (x1433 x297))
(assert (x1433 x89))
(assert (= (x292 (x1017 x15)) x15))
(assert (= (x292 (x1221 87118632)) 87118632))
(assert (x1433 x246))
(assert (= (x1057 x672) (ite (= x1036 x672) x323 (x983 x672))))
(assert (x1433 x1497))
(assert (x1433 x654))
(assert (x1433 x733))
(assert (x1433 x563))
(assert (= (x292 (x1017 x296)) x296))
(assert (= x49 (x292 (x1017 x49))))
(assert (x1094 x239))
(assert (= (x292 (x1017 x875)) x875))
(assert (x1433 x1358))
(assert (x1433 x962))
(assert (x1433 x457))
(assert (= x1560 (x292 (x1017 x1560))))
(assert (= x1049 x792))
(assert (x1433 x524))
(assert (= (x292 (x1017 x563)) x563))
(assert (= (x680 x672) (ite (and x620 x1113 (not x690)) (x120 x672) (x104 x672))))
(assert (x1433 x1228))
(assert (x1433 x611))
(assert (= (ite (= x1112 x672) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x971 x672)) (x671 x672)))
(assert (x1433 x844))
(assert (x1094 x1446))
(assert (= (x1057 x1265) (ite (= x1265 x1036) x323 (x983 x1265))))
(assert (= x804 x632))
(assert (= (x749 x504) (ite (= x1026 x504) x714 (x113 x504))))
(assert (x1433 x921))
(assert (x1433 x915))
(assert (x1433 x1410))
(assert (x1433 x877))
(assert (= x91 (and x668 x729)))
(assert (= (ite (and x1496 x280) (x1161 x51) (x1288 x51)) (x977 x51)))
(assert (=> (< (- x283 1) 10000) (= (x1221 x283) (x1017 x283))))
(assert (x1433 x788))
(assert (=> (< (- x595 1) 10000) (= (x1017 x595) (x1221 x595))))
(assert (=> (> (+ 10000 1) x826) (= (x1017 x826) (x1221 x826))))
(assert (= (x124 x1265) (ite (and (not x606) x380 x1422 (not x63)) (x1057 x1265) (ite (and (not x606) (not x1422) x380) (x983 x1265) (ite (and x606 x380) (x983 x1265) (x401 x1265))))))
(assert (x1433 x786))
(assert (= (x955 x1193) (ite (= x1193 x1265) x999 (x1549 x1193))))
(assert (= (x292 (x1017 x164)) x164))
(assert (=> (< (- x425 1) 10000) (= (x1221 x425) (x1017 x425))))
(assert (x1094 x1449))
(assert (x1094 x803))
(assert (=> (> (+ 10000 1) x1346) (= (x1221 x1346) (x1017 x1346))))
(assert (= (=> (= (= x141 274184521717934524641157099916833587214) x990) (and (=> (and (= (< x1350 x1459) x1000) (= (+ x553 x1378) x1448) (= 274184521717934524641157099916833587206 x1419) (= x553 x1459) (not (= 649617121 x46)) (= x146 (x1047 x248)) (= x214 x277) (= x696 x1557) (not x270) (= x1378 x146) (>= x146 0) (not (= x46 826074471)) (= (x27 (x1017 274184521717934524641157099916833587206) (x1221 1) 0) x149) (= x827 32) (= (x27 (x1017 274184521717934524641157099916833587206) (x1221 1) 0) x1508) (<= x1350 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x146) (= x984 1) (= x69 x98) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x991) (= x46 2835717307) (= x1040 (x27 (x1017 x277) (x1221 1) 0)) (= x270 (> x1458 x1350)) (= x277 x542) (not (< x46 649617121)) (not (= 1889567281 x46)) (not x1000) (not x448) (= x497 x1458) (= (x760 (- x696 4)) x1416) (< 0 x1425) x990 (= x1459 x1458) (<= 0 x1350) (= x1350 (x427 x149)) (= x1429 (x760 (- x1350 x1458))) (= x248 (x27 (x1017 x277) (x1221 1) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1459 x146)) (= (x1591 (x1017 274184521717934524641157099916833587214)) x1425) (not x762) (>= 1461501637330902918203684832716283019655932542975 x277) (= x448 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x146 x1459))) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1416) true) (< x1416 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1416)) x762) (= 68 x696) (not (= 2514000705 x46)) (= 274184521717934524641157099916833587206 x1198) (not (< x696 4))) x1382) (=> (not x990) x1408))) x1491))
(assert (x1433 x256))
(assert (= (ite (= x883 x1193) x503 (x332 x1193)) (x238 x1193)))
(assert (= (ite (= x607 x1292) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x1292)) (x332 x1292)))
(assert (=> (< (- x688 1) 10000) (= (x1017 x688) (x1221 x688))))
(assert (x1433 x1391))
(assert (= (x1017 115792089237316195423570985008687907853269984665640564039457) (x1221 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (x113 x1565) (ite (= x1565 x294) x492 (x238 x1565))))
(assert (= (x292 (x1017 x928)) x928))
(assert (= (x113 x1363) (ite (= x1363 x294) x492 (x238 x1363))))
(assert (x1094 x160))
(assert (x1433 x1163))
(assert (x1433 x889))
(assert (= (ite (and x989 x1357) (x927 x1345) (x1201 x1345)) (x1196 x1345)))
(assert (x1433 x1473))
(assert (= x994 (=> (and (= (x27 (x1017 x723) (x1221 5) 0) x1204) (not (= 2764855426 x370)) (not (= 2743102681 x370)) (= x369 (x27 (x1017 x850) x1204 0)) (= x1087 (x227 x369)) (< x370 2960351575) (= x1079 x1087) (>= x1087 0) (= x1088 (x1591 (x1017 274184521717934524641157099916833587206))) (<= x850 1461501637330902918203684832716283019655932542975) (< 0 x1088) (not (> 2293535753 x370)) (not (= x370 2690754053)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1087) (= x370 2798343961) (not (> 2690754053 x370))) (=> (and (= x204 x471) (= x1224 x478) (= x1192 x1079) (= x1335 x331) (= x1277 x884)) x815))))
(assert (x1433 x129))
(assert (= (ite (and (not x63) x380 (not x606) x1422) (x1057 x1238) (ite (and (not x1422) (not x606) x380) (x983 x1238) (ite (and x606 x380) (x983 x1238) (x401 x1238)))) (x124 x1238)))
(assert (= x1563 (x292 (x1017 x1563))))
(assert (x1433 x1157))
(assert (= (ite (= x78 x10) x748 (x1285 x10)) (x226 x10)))
(assert (x1433 x1455))
(assert (= (ite (and x1115 x538) (x955 x624) (x1149 x624)) (x59 x624)))
(assert (= x960 x789))
(assert (= x1577 (=> (and (= (< x864 x733) x171) (or (and (= (x1195 x450) x548) (= x122 (x619 1461501637330902918203684832716283019655932542975 x1145)) (>= x548 0) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x495) (not x933) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x932 x699)) (= x513 (+ x228 x1471)) (= x1570 (x27 (x1017 x1571) (x1221 6) 0)) (= x39 x1528) (= x39 x1471) (< (+ x548 x39) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x27 (x1017 x495) x1570 0) x220) (= x403 (x27 (x1017 x1571) (x1221 5) 0)) (= x548 x228) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x548) (= (* x932 x699) x1528) (= (x27 (x1017 x122) x403 0) x450)) (and (= (x619 1461501637330902918203684832716283019655932542975 x1145) x147) x933 (= (x27 (x1017 x1571) (x1221 6) 0) x963) (= (x27 (x1017 x147) x963 0) x1179))) (= (x1305 x368) x786) (<= 0 x585) (or (and (or (not x1422) (and (< 0 x845) (= (x27 (x1017 x658) x1427 0) x958) (= x1387 (x619 1461501637330902918203684832716283019655932542975 x752)) (= x1022 (x983 x1036)) (= x53 (x27 (x1017 x1387) x1424 0)) (> x999 0) (= x1576 (x1575 x958)) (< (* x1576 x67) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1516 x1339) x658) (= (x27 (x1017 x1011) x62 0) x1424) (<= x1463 1461501637330902918203684832716283019655932542975) (>= x1576 0) (= x63 (> x999 1)) (<= 0 x1128) (= x1011 (x619 1461501637330902918203684832716283019655932542975 x1145)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1576) (= (- (/ x874 1000000000000000000) (uninterp_frac x874 1000000000000000000)) x443) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x893) (= x338 x1022) (= x845 (x983 x1265)) (< 0 x999) (<= x1028 1461501637330902918203684832716283019655932542975) (= x1036 (x130 (+ 160 x807))) (= 0 x1128) (< 0 x999) (= x116 (x619 1461501637330902918203684832716283019655932542975 x1145)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1128) (= (x1516 x1339) x1028) (= x62 (x27 (x1017 x1571) (x1221 4) 0)) (< (+ x443 x1022) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 1461501637330902918203684832716283019655932542975 x658) (= (x27 (x1017 x1028) x1476 0) x461) x1422 (= x1227 (x27 (x1017 x116) x852 0)) (= x702 (x619 1461501637330902918203684832716283019655932542975 x752)) (or (not x63) (and (= x895 (x27 (x1017 x243) x787 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x67 x1260)) (= (x27 (x1017 x1384) x1349 0) x590) (= x89 (x130 (+ 64 x841))) (= (x27 (x1017 x937) x195 0) x838) (>= x129 0) (<= x1384 1461501637330902918203684832716283019655932542975) (= x937 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x1078 x757) (= x243 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x868 x1296) (= (x27 (x1017 x1589) x628 0) x1525) (= x1589 (x1516 x89)) (<= x129 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1078 x868)) (= (x130 (+ x807 192)) x191) (= x923 (> x999 2)) (= x1349 (x27 (x1017 x1058) x288 0)) (= x1518 (x27 (x1017 x1571) (x1221 4) 0)) (= x195 (x27 (x1017 x1571) (x1221 4) 0)) (> x652 1) (= 0 x129) (>= 1461501637330902918203684832716283019655932542975 x25) (not x923) (= x129 (x30 x1525)) (= (x1057 x1265) x652) (> x999 1) (= x628 (x27 (x1017 x1010) x838 0)) x63 (= x787 (x27 (x1017 x1571) (x1221 11) 0)) (= x1058 (x619 1461501637330902918203684832716283019655932542975 x752)) (= (x1516 x89) x25) (= (- (/ x68 1000000000000000000) (uninterp_frac x68 1000000000000000000)) x868) (<= x1260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1589) (= (x1516 x89) x1384) (= (x27 (x1017 x1251) x1518 0) x288) (>= x1260 0) (= x1260 (x1575 x670)) (< 1 x999) (= (x1057 x191) x1078) (= x1010 (x619 1461501637330902918203684832716283019655932542975 x752)) (= x1251 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (* x67 x1260) x68) (= (+ x1296 x757) x1532) (> x999 1) (= x670 (x27 (x1017 x25) x895 0)))) (= (x27 (x1017 x1571) (x1221 11) 0) x1314) (= (+ x338 x795) x323) (= (x674 x1084) x1128) (= (x1516 x1339) x1463) (= (x27 (x1017 x1463) x53 0) x1084) (= x1427 (x27 (x1017 x893) x1314 0)) (= x795 x443) (= x874 (* x67 x1576)) (= x1339 x1301) (= (x27 (x1017 x1571) (x1221 4) 0) x852) (= (x27 (x1017 x702) x1227 0) x1476))) (not x606) (= x67 (- (/ x317 x585) (uninterp_frac x317 x585))) (> x585 0) (= x293 (ite (> x1140 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= (uninterp_mod (* x1140 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x317) (= x1376 0) (= x1422 (< 0 x999)) (= x612 1) (= x1376 (x619 x612 x293))) x606) (= x898 (x619 1461501637330902918203684832716283019655932542975 x752)) (= (x27 (x1017 x281) x1364 0) x728) (or (and (= x932 0) (not x171)) (and (= x1287 (< x464 x1514)) (= (= x864 0) x642) (= x464 (x983 x183)) (or (and (= x254 (ite (> 604800 x1481) x1481 604800)) (not x642) (= x254 x932) (= x365 604800) (not (< x616 x864)) (= (x760 (- x616 x864)) x1481)) (and (= (x760 (- x616 x219)) x1312) (= x1312 x932) (not (< x616 x219)) (= (x983 x355) x219) x642)) (or (and (not x1287) (= x616 x1514)) (and (= x616 x968) x1287 (= x968 (x983 x183)))) x171)) (= x1533 (x27 (x1017 x1571) (x1221 1) 0)) (= (x1273 x519) x1140) (= x987 (= 0 x235)) (= x606 (= 0 x1140)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x585) (<= 0 x786) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x290) (= (x27 (x1017 x165) x1477 0) x202) (= (x479 x728) x585) (= x733 (x983 x183)) (= x1477 (x27 (x1017 x1571) (x1221 6) 0)) (= (x130 (+ 64 x355)) x196) (= x1180 (x181 x1533)) (or x987 (and (= (x619 1461501637330902918203684832716283019655932542975 x1145) x186) (not x987) (= x520 (x27 (x1017 x186) x527 0)) (= (x27 (x1017 x1571) (x1221 10) 0) x527))) (= (x130 (+ x355 32)) x183) (= x933 (= 0 x932)) (= x1364 (x27 (x1017 x1571) (x1221 5) 0)) (= x519 (x27 (x1017 x898) x1185 0)) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x165) (<= 0 x1180) (>= x864 0) (<= x1140 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x368 (x1162 x1533 1)) (= x864 (x945 x202)) (<= x864 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1140) (= x1185 (x27 (x1017 x290) x230 0)) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x281) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x786) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1180) (= x230 (x27 (x1017 x1571) (x1221 3) 0))) x708)))
(assert (= x1374 (=> (and (= (x760 (- x1571 1)) x76) (= (> x76 0) x758)) (and (=> (not x758) x1119) (=> x758 x1110)))))
(assert (x1094 x1042))
(assert (= (x292 (x1017 x823)) x823))
(assert (x1433 x1191))
(assert (= (ite (= x1536 x388) x796 (x671 x388)) (x231 x388)))
(assert (= x372 x1080))
(assert (x1094 x1523))
(assert (= (ite (= x388 x1036) x323 (x983 x388)) (x1057 x388)))
(assert (x1094 x423))
(assert (x1433 x1348))
(assert (=> (< (- x192 1) 10000) (= (x1017 x192) (x1221 x192))))
(assert (x1433 x367))
(assert (x1094 x598))
(assert (x1433 x370))
(assert (x1433 x278))
(assert (= (x292 (x1017 x1317)) x1317))
(assert (x1433 x96))
(assert (= (ite (= x183 x1238) x786 (x359 x1238)) (x983 x1238)))
(assert (= (ite (and x1422 x380 (not x63) (not x606)) (x1057 x1363) (ite (and x380 (not x606) (not x1422)) (x983 x1363) (ite (and x380 x606) (x983 x1363) (x401 x1363)))) (x124 x1363)))
(assert (x1433 x930))
(assert (= x907 x177))
(assert (x1433 x2))
(assert (= (ite (and x380 (not x606) x1422 (not x63)) (x1057 x388) (ite (and x380 (not x1422) (not x606)) (x983 x388) (ite (and x380 x606) (x983 x388) (x401 x388)))) (x124 x388)))
(assert (x1094 x805))
(assert (= (x292 (x1017 x1028)) x1028))
(assert (= (ite (= x51 x906) x458 (x231 x51)) (x374 x51)))
(assert (x1433 x627))
(assert (x1433 x1214))
(assert (= (x1057 x1345) (ite (= x1345 x1036) x323 (x983 x1345))))
(assert (= (ite (= x704 x1238) x415 (x226 x1238)) (x430 x1238)))
(assert (= (x671 x198) (ite (= x1112 x198) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x971 x198))))
(assert (= (ite (= x624 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x624)) (x332 x624)))
(assert (x1433 x685))
(assert (= (x16 x624) 0))
(assert (x1433 x1229))
(assert (x1433 x42))
(assert (x1433 x165))
(assert (x1433 x595))
(assert (x1433 x79))
(assert (x1094 x1095))
(assert (=> (> (+ 10000 1) x108) (= (x1017 x108) (x1221 x108))))
(assert (= (x983 x725) (ite (= x183 x725) x786 (x359 x725))))
(assert (x1433 x1251))
(assert (= (ite (and x1113 x660 x1329 x620 x1460 (not x1371)) (x749 x1193) (ite (and x1113 x1460 (not x660) x1329 x620) (x113 x1193) (ite (and x1113 (not x1329) x620 x1460) (x238 x1193) (ite (and (not x1460) x1113 x620) (x332 x1193) (x1531 x1193))))) (x120 x1193)))
(assert (= (x292 (x1017 x471)) x471))
(assert (x1433 x773))
(assert (= (ite (= x183 x43) x786 (x359 x43)) (x983 x43)))
(assert (x1433 x286))
(assert (= (=> (and (<= 0 x1138) (= (x619 1461501637330902918203684832716283019655932542975 x752) x1226) (= x1120 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x689 (= x1138 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1138) (= x1138 (x995 x1225)) (= x719 (x27 (x1017 x1120) x1440 0)) (= x1225 (x27 (x1017 x1226) x719 0)) (= x1440 (x27 (x1017 x1571) (x1221 7) 0))) (and (=> (and (= x457 x1571) (not x689)) x1164) (=> x689 x1374))) x1386))
(assert (=> (< (- x1072 1) 10000) (= (x1017 x1072) (x1221 x1072))))
(assert (x1433 x1449))
(assert (= x582 (=> (= x1370 (> x1571 0)) (and (=> x1370 x735) (=> (not x1370) x1324)))))
(assert (x1094 x1104))
(assert (x1433 x151))
(assert (= x664 (x292 (x1017 x664))))
(assert (x1433 x737))
(assert (x1433 x1335))
(assert (=> (> (+ 10000 1) x243) (= (x1221 x243) (x1017 x243))))
(assert (=> (> (+ 10000 1) x702) (= (x1221 x702) (x1017 x702))))
(assert (x1094 274184521717934524641157099916833587218))
(assert (x1094 x908))
(assert (= (x292 (x1017 x1203)) x1203))
(assert (x1433 x219))
(assert (= x789 x199))
(assert (= 0 (x16 x504)))
(assert (=> (> (+ 10000 1) x116) (= (x1017 x116) (x1221 x116))))
(assert (= (x292 (x1017 x893)) x893))
(assert (x1433 x875))
(assert (= x1504 (x292 (x1017 x1504))))
(assert (x1433 x869))
(assert (= (ite (= x183 x1345) x786 (x359 x1345)) (x983 x1345)))
(assert (= (ite (and x380 (not x606) x1422 (not x63)) (x30 x681) (ite (and x380 (not x606) (not x1422)) (x674 x681) (ite (and x380 x606) (x674 x681) (x1147 x681)))) (x189 x681)))
(assert (x1433 x416))
(assert (x1433 x1238))
(assert (x1433 x487))
(assert (= (x1057 x284) (ite (= x284 x1036) x323 (x983 x284))))
(assert (x1433 x1131))
(assert (= (x292 (x1017 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x1433 x1527))
(assert (x1433 x1451))
(assert (=> (> (+ 10000 1) x979) (= (x1221 x979) (x1017 x979))))
(assert (x1433 x1522))
(assert (= x1038 (and x1502 x689)))
(assert (x1433 x1274))
(assert (= x1146 (x292 (x1017 x1146))))
(assert (=> (< (- x1130 1) 10000) (= (x1017 x1130) (x1221 x1130))))
(assert (= (x292 (x1221 18446744073709551615)) 18446744073709551615))
(assert (x1094 x1493))
(assert (= x3 (=> (= 0 x722) x417)))
(assert (= x1001 x791))
(assert (x1433 x1081))
(assert (= (ite (and x380 x933) (x1550 x872) (x236 x872)) (x70 x872)))
(assert (x1433 x1442))
(assert (= (x124 x51) (ite (and x380 x1422 (not x63) (not x606)) (x1057 x51) (ite (and (not x1422) x380 (not x606)) (x983 x51) (ite (and x380 x606) (x983 x51) (x401 x51))))))
(assert (x1433 x497))
(assert (=> (< (- x141 1) 10000) (= (x1221 x141) (x1017 x141))))
(assert (x1433 x676))
(assert (= x717 x1085))
(assert (= (x977 x1363) (ite (and x280 x1496) (x1161 x1363) (x1288 x1363))))
(assert (x1433 x528))
(assert (x1433 x536))
(assert (x1433 x780))
(assert (= (x749 x1193) (ite (= x1026 x1193) x714 (x113 x1193))))
(assert (x1517 x612 x293))
(assert (= x729 (and x603 x389)))
(assert (= (x231 x198) (ite (= x198 x1536) x796 (x671 x198))))
(assert (=> (< (- x1490 1) 10000) (= (x1221 x1490) (x1017 x1490))))
(assert (= (x292 (x1221 604800)) 604800))
(assert (x1433 x830))
(assert (= x554 (and x1333 (not x1075))))
(assert (x1433 x657))
(assert (x1094 x1403))
(assert (x1433 x1245))
(assert (x1433 x452))
(assert (x1433 x108))
(assert (x1433 x557))
(assert (x1094 x1404))
(assert (= x486 x778))
(assert (x1433 x723))
(assert (x1433 x986))
(assert (= x804 x1202))
(assert (x1433 x254))
(assert (= x137 x250))
(assert (= (=> (and (= x566 x710) (= x88 (x27 (x1017 x1446) x1014 0)) (= (x1591 (x1017 274184521717934524641157099916833587206)) x481) (= (x227 x88) x710) (not (= 2743102681 x609)) (>= x710 0) (not (> 2293535753 x609)) (= x1014 (x27 (x1017 x208) (x1221 5) 0)) (not (= x609 2764855426)) (not (< x609 2690754053)) (<= x1446 1461501637330902918203684832716283019655932542975) (not (= x609 2690754053)) (< x609 2960351575) (= x609 2798343961) (> x481 0) (<= x710 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x204 x466) (= x684 x1335) (= x884 x873) (= x566 x1212)) x60)) x965))
(assert (x1094 x105))
(assert (x1433 x1339))
(assert (= x1449 (x292 (x1017 x1449))))
(assert (= x407 (=> (and (>= x663 0) (= x914 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x682 (x27 (x1017 x441) (x1221 6) 0)) (= (= 0 x663) x398) (= x583 (x27 (x1017 x914) x682 0)) (= x663 (x70 x583)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x663)) (and (=> (and (not x398) (= x441 x896)) x131) (=> x398 x155)))))
(assert (= 1968616202 (x292 (x1221 1968616202))))
(assert (x1433 x1010))
(assert (x1433 x363))
(assert (x1433 x1174))
(assert (x1433 x76))
(assert (x1433 x534))
(assert (= 2293535753 (x292 (x1221 2293535753))))
(assert (x1433 x886))
(assert (x1433 x1193))
(assert (= x1237 (=> (= x899 (> x1571 x357)) (and (=> (and x899 (= x390 x1299)) x347) (=> (not x899) x485)))))
(assert (x1433 x160))
(assert (=> (< (- x1120 1) 10000) (= (x1017 x1120) (x1221 x1120))))
(assert (= x1495 (x292 (x1017 x1495))))
(assert (x1433 x175))
(assert (=> (< (- x805 1) 10000) (= (x1017 x805) (x1221 x805))))
(assert (= (x983 x1036) (ite (= x183 x1036) x786 (x359 x1036))))
(assert (= x283 (x292 (x1017 x283))))
(assert (x1303 x890))
(assert (x1433 x1096))
(assert (= (ite (= x78 x1265) x748 (x1285 x1265)) (x226 x1265)))
(assert (= x870 (x292 (x1017 x870))))
(assert (= (x16 x191) 0))
(assert (= (x955 x1363) (ite (= x1363 x1265) x999 (x1549 x1363))))
(assert (= (x226 x388) (ite (= x78 x388) x748 (x1285 x388))))
(assert (x1433 x46))
(assert (x1433 x122))
(assert (x1094 x595))
(assert (x1433 x283))
(assert (x1433 x1120))
(assert (x1433 x445))
(assert (x1433 x822))
(assert (x1433 x902))
(assert (x1433 x722))
(assert (= (x1017 1968616202) (x1221 1968616202)))
(assert (x1433 x1207))
(assert (= x1402 (x292 (x1017 x1402))))
(assert (= x1085 x580))
(assert (= x979 (x292 (x1017 x979))))
(assert (x1433 x937))
(assert (= (x226 x1193) (ite (= x1193 x78) x748 (x1285 x1193))))
(assert (x1433 x1011))
(assert (x1433 x39))
(assert (x1094 x773))
(assert (= x1362 (x292 (x1017 x1362))))
(assert (x1094 x116))
(assert (=> (< (- x835 1) 10000) (= (x1017 x835) (x1221 x835))))
(assert (x1433 x782))
(assert (= (=> (and (= x949 (> x532 0)) (= x532 (x760 (- x1571 1)))) (and (=> (not x949) x1324) (=> x949 x232))) x335))
(assert (= (x430 x167) (ite (= x704 x167) x415 (x226 x167))))
(assert (x1433 x1042))
(assert (x1433 x253))
(assert (=> (< (- x993 1) 10000) (= (x1221 x993) (x1017 x993))))
(assert (x1433 x1272))
(assert (= x1011 (x292 (x1017 x1011))))
(assert (x1433 x522))
(assert (x1433 x15))
(assert (x1433 x281))
(assert (= (and (not x882) x442) x1333))
(assert (x1433 x77))
(assert (= (ite (= x413 x1169) x1487 (x189 x1169)) (x1056 x1169)))
(assert (x1433 x1104))
(assert (= x475 (x292 (x1017 x475))))
(assert (= (ite (= x1265 x43) x999 (x1549 x43)) (x955 x43)))
(assert (x1094 x1092))
(assert (= (x16 x198) 0))
(assert (x1433 x275))
(assert (= x393 (=> (and (or x1551 (and (= x1380 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (x619 1461501637330902918203684832716283019655932542975 x752) x242) (not x1551))) (or (and x156 (= x6 (x27 (x1017 x441) (x1221 7) 0)) (= x142 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (x27 (x1017 x1095) x727 0) x1417) (= x727 (x27 (x1017 x142) x6 0)) (= x10 x196) (= x1095 (x619 1461501637330902918203684832716283019655932542975 x752))) (and (= (x181 x892) x1101) (= (= x278 0) x500) (>= x337 0) (or (and (= (* x1410 x278) x375) (= (x27 (x1017 x1504) x978 0) x1595) (= x888 x1271) (= (x619 1461501637330902918203684832716283019655932542975 x752) x644) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x853) (>= x515 0) (= x158 (+ x136 x1271)) (= (x619 1461501637330902918203684832716283019655932542975 x752) x993) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x515) (= (x27 (x1017 x853) x1569 0) x1365) (= (x27 (x1017 x993) x1365 0) x997) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x278 x1410)) (= x375 x888) (= x10 x1236) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x515 x888)) (= (x27 (x1017 x644) x1595 0) x123) (not x500) (= (x27 (x1017 x441) (x1221 3) 0) x978) (= x515 (x1273 x123)) (= x1569 (x27 (x1017 x441) (x1221 7) 0)) (= x1504 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x136 x515)) (and (= (x27 (x1017 x441) (x1221 7) 0) x1298) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x239) (= x1484 (x27 (x1017 x915) x643 0)) x500 (= x915 (x619 1461501637330902918203684832716283019655932542975 x752)) (= (x27 (x1017 x239) x1298 0) x643) (= x1236 x10))) (= (x1305 x558) x1252) (not x156) (= x446 (x27 (x1017 x737) x754 0)) (= (x935 x1032) x930) (or (and (= x556 (> x1514 x1264)) (= x1341 (= x337 0)) (= (x935 x1032) x1264) x362 (or (and (= x1375 x976) (= x1375 (x935 x1032)) x556) (and (= x976 x1514) (not x556))) (or (and x1341 (= x416 (x935 x196)) (= x453 (x760 (- x976 x416))) (= x278 x453) (not (> x416 x976))) (and (not (> x337 x976)) (= x278 x975) (= x975 (ite (> 604800 x812) x812 604800)) (= (x760 (- x976 x337)) x812) (not x1341) (= x406 604800)))) (and (not x362) (= 0 x278))) (<= 0 x1101) (= (x1162 x892 1) x558) (<= 0 x1252) (= (x130 (+ 128 x355)) x1236) (<= x1101 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x27 (x1017 x441) (x1221 7) 0) x754) (= (x619 1461501637330902918203684832716283019655932542975 x1145) x737) (= (x27 (x1017 x441) (x1221 1) 0) x892) (= (x730 x831) x337) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x337) (= x1032 (x130 (+ 96 x355))) (= (< x337 x930) x362) (= (x619 1461501637330902918203684832716283019655932542975 x752) x1437) (= x831 (x27 (x1017 x1437) x446 0)) (<= x1252 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= x1551 (= 0 x761)) (= x156 (= x1410 0))) x636)))
(assert (= (ite (and x538 x1115) (x955 x51) (x1149 x51)) (x59 x51)))
(assert (x1433 x97))
(assert (=> (< (- x664 1) 10000) (= (x1221 x664) (x1017 x664))))
(assert (x1433 x696))
(assert (x1094 x164))
(assert (x1433 x821))
(assert (x1433 x114))
(assert (= (and x1113 x620) x989))
(assert (x1433 x331))
(assert (x1094 x331))
(assert (x1433 x415))
(assert (x1433 x772))
(assert (x1554 x752 x897))
(assert (= (x983 x51) (ite (= x183 x51) x786 (x359 x51))))
(assert (x1433 x431))
(assert (x1433 x4))
(assert (=> (> (+ 10000 1) x912) (= (x1221 x912) (x1017 x912))))
(assert (=> (< (- x1452 1) 10000) (= (x1017 x1452) (x1221 x1452))))
(assert (x1433 x298))
(assert (x1094 x688))
(assert (x1433 x566))
(assert (x1433 x1420))
(assert (= (x1017 2743102681) (x1221 2743102681)))
(assert (x1433 x188))
(assert (x1433 x1423))
(assert (= x903 (=> (and (= (x619 1461501637330902918203684832716283019655932542975 x1145) x912) (>= x657 0) (<= 0 x1432) (= x602 (= x1432 0)) (not (> x1455 x657)) (= (x27 (x1017 x1571) (x1221 6) 0) x876) (= x1432 (x945 x1325)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1432) (= x1325 (x27 (x1017 x912) x876 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x657)) (and (=> x602 x582) (=> (and (= x1203 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= (x1068 x1519) x1540) (= x1519 (x27 (x1017 x1203) x455 0)) (= x455 (x27 (x1017 x1571) (x1221 10) 0)) (<= 0 x1540) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1540) (not x602) (= x1540 x699) (= x235 0)) x1577)))))
(assert (x1433 x1510))
(assert (x1433 x262))
(assert (= x127 (and (not x1286) x1507)))
(assert (= (x124 x284) (ite (and (not x606) (not x63) x380 x1422) (x1057 x284) (ite (and (not x1422) (not x606) x380) (x983 x284) (ite (and x380 x606) (x983 x284) (x401 x284))))))
(assert (x1094 x1383))
(assert (x1433 x861))
(assert (x1094 x941))
(assert (= x396 x1409))
(assert (= (ite (and x989 x1357) (x927 x1193) (x1201 x1193)) (x1196 x1193)))
(assert (x1433 x317))
(assert (= (ite (= x78 x43) x748 (x1285 x43)) (x226 x43)))
(assert (x1433 x43))
(assert (x1433 x1301))
(assert (x1094 x4))
(assert (x1433 x57))
(assert (= (x1221 18446744073709551615) (x1017 18446744073709551615)))
(assert (x1433 x147))
(assert (x1433 x885))
(assert (= (ite (= x78 x1238) x748 (x1285 x1238)) (x226 x1238)))
(assert (=> (< (- x814 1) 10000) (= (x1221 x814) (x1017 x814))))
(assert (x1433 x748))
(assert (x1433 x35))
(assert (= (x1221 2512682246) (x1017 2512682246)))
(assert (= (and x1223 x396) x1496))
(assert (= x4 (x292 (x1017 x4))))
(assert (x1433 x1098))
(assert (=> (< (- x941 1) 10000) (= (x1221 x941) (x1017 x941))))
(assert (x1433 x420))
(assert (= (x292 (x1017 x282)) x282))
(assert (x1433 x458))
(assert (x1433 x40))
(assert (x1433 x1044))
(assert (= 2061678023 (x292 (x1221 2061678023))))
(assert (x1094 x165))
(assert (= x232 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1442) (= x576 (x27 (x1017 x432) x865 0)) (= x1442 (x945 x576)) (= x865 (x27 (x1017 x532) (x1221 6) 0)) (= x574 (= x1442 0)) (= x432 (x619 1461501637330902918203684832716283019655932542975 x1145)) (<= 0 x1442)) (and (=> (and (= x532 x1501) (not x574)) x1555) (=> (and (= x1002 (< 0 x529)) x574 (= x529 (x760 (- x532 1))) (not x1002)) x1324)))))
(assert (x1433 x550))
(assert (x1094 x851))
(assert (= x981 (=> (and (= (x27 (x1017 x939) x266 0) x480) (not (< x657 x441)) (= (x27 (x1017 x441) (x1221 7) 0) x305) (= (x27 (x1017 x584) x305 0) x266) (= x470 (x730 x480)) (<= x470 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x584 (x619 1461501637330902918203684832716283019655932542975 x1145)) (<= 0 x470) (= (x619 1461501637330902918203684832716283019655932542975 x752) x939) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x657) (= (< 0 x470) x1075) (<= 0 x657)) (and (=> (and (= x1503 (x619 1461501637330902918203684832716283019655932542975 x752)) (= x1385 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x306 (x27 (x1017 x441) (x1221 9) 0)) (= (x27 (x1017 x1503) x1259 0) x947) (= x395 x1410) (= (x1033 x947) x395) (= (x27 (x1017 x1385) x306 0) x1259) (= x761 0) (<= 0 x395) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x395) x1075) x393) (=> (not x1075) x66)))))
(assert (x1433 x453))
(assert (x1433 x1557))
(assert (x1433 x1319))
(assert (= (x292 (x1221 2532887486)) 2532887486))
(assert (= (x1221 274184521717934524641157099916833587214) (x1017 274184521717934524641157099916833587214)))
(assert (= (x292 (x1162 x892 1)) (+ (x292 x892) 1)))
(assert (= (ite (= x1536 x51) x796 (x671 x51)) (x231 x51)))
(assert (= (x292 (x1017 x1431)) x1431))
(assert (x1554 x42 x1321))
(assert (= (ite (= x183 x504) x786 (x359 x504)) (x983 x504)))
(assert (x1094 x52))
(assert (=> (> (+ 10000 1) x1431) (= (x1017 x1431) (x1221 x1431))))
(assert (= (x292 (x1017 x1437)) x1437))
(assert (x1433 x1416))
(assert (x1433 x198))
(assert (= x1211 (or x1018 x988)))
(assert (x1433 x1246))
(assert (x1094 x893))
(assert (= (ite (and x620 (not x690) x1113) (x120 x624) (x104 x624)) (x680 x624)))
(assert (x1433 x1500))
(assert (= (ite (and x989 x1357) (x927 x388) (x1201 x388)) (x1196 x388)))
(assert (=> (< (- x1226 1) 10000) (= (x1221 x1226) (x1017 x1226))))
(assert (x1433 x1198))
(assert (x1094 x208))
(assert (= (ite (= x461 x1169) x1140 (x674 x1169)) (x30 x1169)))
(assert (= (x1221 1986467848) (x1017 1986467848)))
(assert (x1433 x289))
(assert (x1094 x283))
(assert (x1433 x1362))
(assert (x1433 x263))
(assert (x1433 x1041))
(assert (= (x955 x504) (ite (= x504 x1265) x999 (x1549 x504))))
(assert (= (ite (= x43 x1036) x323 (x983 x43)) (x1057 x43)))
(assert (= (x1017 2960351575) (x1221 2960351575)))
(assert (= (ite (and x177 x633) (x7 x121) (ite (and x177 (not x633) x387) (x1123 x121) (x1307 x121))) (x730 x121)))
(assert (x1094 x1203))
(assert (=> (< (- x1574 1) 10000) (= (x1221 x1574) (x1017 x1574))))
(assert (=> (> (+ 10000 1) x532) (= (x1221 x532) (x1017 x532))))
(assert (x1433 x579))
(assert (= x412 (or (and x1243 (not x1261)) (and x34 x491) (and x225 (not x265)))))
(assert (x1433 x704))
(assert (x1433 x470))
(assert (=> (> (+ 10000 1) x1384) (= (x1221 x1384) (x1017 x1384))))
(assert (x1433 x469))
(assert (= (ite (and (not x606) x380 x1422 (not x63)) (x1057 x43) (ite (and (not x606) x380 (not x1422)) (x983 x43) (ite (and x380 x606) (x983 x43) (x401 x43)))) (x124 x43)))
(assert (=> (< (- x692 1) 10000) (= (x1017 x692) (x1221 x692))))
(assert (x1433 x1425))
(assert (x1433 x1262))
(assert (x1094 x1315))
(assert (x1433 x1576))
(assert (=> (< (- x239 1) 10000) (= (x1221 x239) (x1017 x239))))
(assert (x1094 x835))
(assert (= x815 (=> (and (< 0 x1191) (not (> 2293535753 x1510)) (= x1106 (x27 (x1017 x471) x87 0)) (= x87 (x27 (x1017 x1277) x1468 0)) (>= 1461501637330902918203684832716283019655932542975 x1277) (>= 1461501637330902918203684832716283019655932542975 x478) (< x1510 2690754053) (= x902 x132) (>= x132 0) (>= 1461501637330902918203684832716283019655932542975 x471) (> 2960351575 x1510) (not (= x1510 2293535753)) (= x1510 2532887486) (not (= x1510 2418364589)) (= (x1012 x694) x132) (= (x27 (x1017 x478) x1106 0) x694) (= (x27 (x1017 x331) (x1221 4) 0) x1468) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x132) (not (= x1510 2512682246)) (= x1191 (x1591 (x1017 274184521717934524641157099916833587206)))) x1381)))
(assert (=> (> (+ 10000 1) x76) (= (x1221 x76) (x1017 x76))))
(assert (= (ite (= x607 x1265) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x1265)) (x332 x1265)))
(assert (x1433 x1385))
(assert (= (x430 x1193) (ite (= x704 x1193) x415 (x226 x1193))))
(assert (= (ite (and x620 (not x690) x1113) (x120 x388) (x104 x388)) (x680 x388)))
(assert (=> (< (- x478 1) 10000) (= (x1017 x478) (x1221 x478))))
(assert (=> (> (+ 10000 1) x843) (= (x1221 x843) (x1017 x843))))
(assert (= (x292 (x1017 x1272)) x1272))
(assert (= (x292 (x1017 x1050)) x1050))
(assert (= (ite (and x1357 x989) (x927 x725) (x1201 x725)) (x1196 x725)))
(assert (= (x292 (x1221 1000000000000000000)) 1000000000000000000))
(assert (= (x1057 x51) (ite (= x1036 x51) x323 (x983 x51))))
(assert (x1433 x1458))
(assert (= (ite (= x51 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x51)) (x332 x51)))
(assert (=> (< (- x1446 1) 10000) (= (x1221 x1446) (x1017 x1446))))
(assert (x1433 x854))
(assert (x1433 x1134))
(assert (=> (> (+ 10000 1) x466) (= (x1221 x466) (x1017 x466))))
(assert (= (x292 (x1017 x908)) x908))
(assert (= 0 (x16 x725)))
(assert (= (ite (= x51 x1026) x714 (x113 x51)) (x749 x51)))
(assert (x1433 x1088))
(assert (x1433 x542))
(assert (x1433 x823))
(assert (x1433 x1140))
(assert (x1433 x1537))
(assert (x1433 x591))
(assert (x1433 x816))
(assert (x1433 x979))
(assert (= (x238 x388) (ite (= x883 x388) x503 (x332 x388))))
(assert (= (ite (= x284 x1265) x999 (x1549 x284)) (x955 x284)))
(assert (= (x292 (x1017 x1387)) x1387))
(assert (= (x1221 2690754053) (x1017 2690754053)))
(assert (x1433 x568))
(assert (= x1018 (or (and x691 x764) (and x127 (not x1377)) (and (not x758) x1038))))
(assert (x1433 x713))
(assert (= x873 (x292 (x1017 x873))))
(assert (=> (> (+ 10000 1) x1581) (= (x1221 x1581) (x1017 x1581))))
(assert (x1433 x1183))
(assert (= (ite (= x624 x268) x444 (x374 x624)) (x251 x624)))
(assert (x1433 x1032))
(assert (= (and x398 x1545) x225))
(assert (= (x1221 468353030) (x1017 468353030)))
(assert (x1433 x1479))
(assert (x1433 x290))
(assert (=> (< (- x281 1) 10000) (= (x1017 x281) (x1221 x281))))
(assert (= (x226 x624) (ite (= x78 x624) x748 (x1285 x624))))
(assert (x1094 x290))
(assert (x1433 x106))
(assert (= (x292 (x1017 x1383)) x1383))
(assert (= (ite (= x183 x167) x786 (x359 x167)) (x983 x167)))
(assert (x1433 x1578))
(assert (x1433 x475))
(assert (= (ite (= x906 x624) x458 (x231 x624)) (x374 x624)))
(assert (x1433 x555))
(assert (x1433 x781))
(assert (x1094 x126))
(assert (=> (> (+ 10000 1) x163) (= (x1017 x163) (x1221 x163))))
(assert (x1433 x406))
(assert (= (ite (and x989 x1357) (x927 x1292) (x1201 x1292)) (x1196 x1292)))
(assert (x1433 x890))
(assert (x1433 x1087))
(assert (x1433 x698))
(assert (x1094 x209))
(assert (x1433 x98))
(assert (=> (< (- x1005 1) 10000) (= (x1017 x1005) (x1221 x1005))))
(assert (=> (< (- x180 1) 10000) (= (x1017 x180) (x1221 x180))))
(assert (x1094 x49))
(assert (= (ite (= x363 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x363)) (x332 x363)))
(assert (=> (< (- x873 1) 10000) (= (x1017 x873) (x1221 x873))))
(assert (= (x124 x1565) (ite (and (not x63) x380 (not x606) x1422) (x1057 x1565) (ite (and (not x606) x380 (not x1422)) (x983 x1565) (ite (and x606 x380) (x983 x1565) (x401 x1565))))))
(assert (x1433 x1445))
(assert (x1433 x376))
(assert (= x723 (x292 (x1017 x723))))
(assert (x1433 x1199))
(assert (x1433 x126))
(assert (x1433 x319))
(assert (=> (> (+ 10000 1) x106) (= (x1017 x106) (x1221 x106))))
(assert (= x449 (x292 (x1017 x449))))
(assert (x1433 x916))
(assert (=> (< (- x165 1) 10000) (= (x1017 x165) (x1221 x165))))
(assert (= x108 (x292 (x1017 x108))))
(assert (= x331 (x292 (x1017 x331))))
(assert (=> (< (- x256 1) 10000) (= (x1017 x256) (x1221 x256))))
(assert (x150 x641 x24))
(assert (= (ite (= x704 x198) x415 (x226 x198)) (x430 x198)))
(assert (= (x292 (x1221 2514000705)) 2514000705))
(assert (= (x16 x284) 0))
(assert (=> (< (- x186 1) 10000) (= (x1221 x186) (x1017 x186))))
(assert (= x141 (x292 (x1017 x141))))
(assert (= (ite (= x504 x1036) x323 (x983 x504)) (x1057 x504)))
(assert (= (x955 x1238) (ite (= x1265 x1238) x999 (x1549 x1238))))
(assert (= (x983 x284) (ite (= x284 x183) x786 (x359 x284))))
(assert (= x859 true))
(assert (=> (< (- x152 1) 10000) (= (x1221 x152) (x1017 x152))))
(assert (= x1507 (and x207 (not x899))))
(assert (x1433 x1025))
(assert (= x342 (x292 (x1017 x342))))
(assert (= (x332 x725) (ite (= x725 x607) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x352 x725))))
(assert (=> (< (- x122 1) 10000) (= (x1221 x122) (x1017 x122))))
(assert (= (x70 x967) (ite (and x380 x933) (x1550 x967) (x236 x967))))
(assert (=> (< (- x716 1) 10000) (= (x1221 x716) (x1017 x716))))
(assert (= x417 (=> (and (= x244 (= x722 0)) (or (and (= (x27 (x1017 x1561) x766 0) x1216) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x467) (not x244) (= (x1033 x1216) x467) (= x467 x1410) (= x1452 (x619 1461501637330902918203684832716283019655932542975 x1145)) (= x766 (x27 (x1017 x1452) x720 0)) (= 1 x761) (>= x467 0) (= (x619 1461501637330902918203684832716283019655932542975 x752) x1561) (= x720 (x27 (x1017 x722) (x1221 9) 0))) (and x244 (= 0 x1410) (= 0 x761)))) x393)))
(check-sat)
