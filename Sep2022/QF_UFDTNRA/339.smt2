(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x2506 0)) (((x4651 (x405 x2506) (x2323 x2506) (x1045 Real)) (x715 (x1509 x2506) (x622 Real)) (x1228 (x3839 Real)))))
(declare-fun x5176 () Bool)
(declare-fun x1396 () Real)
(declare-fun x2459 () Bool)
(declare-fun x2889 () Real)
(declare-fun x3873 (Real) Real)
(declare-fun x3185 () Real)
(declare-fun x2757 () Bool)
(declare-fun x78 () Real)
(declare-fun x3508 () Real)
(declare-fun x3423 () Real)
(declare-fun x1543 () Real)
(declare-fun x1471 () Bool)
(declare-fun x4515 () Real)
(declare-fun x2463 () Real)
(declare-fun x2250 () Real)
(declare-fun x36 () Bool)
(declare-fun x276 () Bool)
(declare-fun x2739 () Real)
(declare-fun x2752 () Real)
(declare-fun x5188 () Real)
(declare-fun x2850 () Bool)
(declare-fun x1043 () Real)
(declare-fun x2173 () Bool)
(declare-fun x4189 () Real)
(declare-fun x1450 () Real)
(declare-fun x1278 () Real)
(declare-fun x3259 () Bool)
(declare-fun x3755 () Real)
(declare-fun x4658 () Real)
(declare-fun x1987 () Real)
(declare-fun x4731 () Bool)
(declare-fun x2567 () Real)
(declare-fun x4635 () Real)
(declare-fun x1793 () Real)
(declare-fun x3156 () Bool)
(declare-fun x5118 () Real)
(declare-fun x3276 () Real)
(declare-fun x849 () Real)
(declare-fun x2501 () Real)
(declare-fun x4787 () Real)
(declare-fun x3772 () Real)
(declare-fun x5237 () Real)
(declare-fun x3281 (Real) Real)
(declare-fun x750 () Real)
(declare-fun x1939 () Real)
(declare-fun x3920 () Real)
(declare-fun x4075 () Real)
(declare-fun x269 () Bool)
(declare-fun x569 () Real)
(declare-fun x514 () Real)
(declare-fun x1736 () Real)
(declare-fun x2721 () Real)
(declare-fun x3396 () Real)
(declare-fun x2622 () Bool)
(declare-fun x4118 () Real)
(declare-fun x2877 () Bool)
(declare-fun x4298 () Real)
(declare-fun x4465 () Bool)
(declare-fun x2520 () Bool)
(declare-fun x153 () Real)
(declare-fun x573 () x2506)
(declare-fun x2000 () Real)
(declare-fun x3876 () Real)
(declare-fun x2588 () Real)
(declare-fun x2839 () Bool)
(declare-fun x1850 () Real)
(declare-fun x4417 () Real)
(declare-fun x1392 () x2506)
(declare-fun x3785 () Real)
(declare-fun x986 () Real)
(declare-fun x4528 () Bool)
(declare-fun x3341 () Real)
(declare-fun x4860 () Real)
(declare-fun x4660 (Real) Real)
(declare-fun x4905 () Real)
(declare-fun x1292 () x2506)
(declare-fun x4048 () Real)
(declare-fun x1138 () Bool)
(declare-fun x2826 () Bool)
(declare-fun x765 () Bool)
(declare-fun x3607 () Real)
(declare-fun x3136 () Real)
(declare-fun x1579 () Real)
(declare-fun x3295 () x2506)
(declare-fun x4699 () Real)
(declare-fun x2350 () Bool)
(declare-fun x2639 () Bool)
(declare-fun x2469 () Real)
(declare-fun x343 () Bool)
(declare-fun x1256 () Real)
(declare-fun x169 () Real)
(declare-fun x3999 () x2506)
(declare-fun x2922 () Real)
(declare-fun x341 () Real)
(declare-fun x2779 () Real)
(declare-fun x1582 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x3399 () Bool)
(declare-fun x4608 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x4112 () Real)
(declare-fun x5083 () Real)
(declare-fun x3832 () Real)
(declare-fun x692 () Real)
(declare-fun x1097 () Real)
(declare-fun x278 () Bool)
(declare-fun x1181 (Real) Real)
(declare-fun x3812 () Bool)
(declare-fun x4389 () Bool)
(declare-fun x1302 () Real)
(declare-fun x614 () Real)
(declare-fun x4363 () Real)
(declare-fun x2376 () Real)
(declare-fun x4395 () x2506)
(declare-fun x2642 () Real)
(declare-fun x5201 () Real)
(declare-fun x3094 () Bool)
(declare-fun x1064 (Real) Real)
(declare-fun x1606 () Real)
(declare-fun x220 () x2506)
(declare-fun x1288 () Real)
(declare-fun x5069 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x4086 () Real)
(declare-fun x4490 () Real)
(declare-fun x2370 () Real)
(declare-fun x1614 () Real)
(declare-fun x308 (x2506) Real)
(declare-fun x1625 () Real)
(declare-fun x424 () Real)
(declare-fun x2269 () Real)
(declare-fun x1753 () Bool)
(declare-fun x4943 () Bool)
(declare-fun x3407 () Real)
(declare-fun x2098 () Real)
(declare-fun x1282 () Bool)
(declare-fun x2471 () Real)
(declare-fun x4113 () Real)
(declare-fun x500 () Real)
(declare-fun x2410 () Real)
(declare-fun x2641 () Real)
(declare-fun x2348 () Bool)
(declare-fun x3148 () Real)
(declare-fun x2975 () Real)
(declare-fun x1381 () Bool)
(declare-fun x821 () Real)
(declare-fun x1244 () Bool)
(declare-fun x244 () Real)
(declare-fun x4360 () Bool)
(declare-fun x2073 () Real)
(declare-fun x1345 () Real)
(declare-fun x72 () Real)
(declare-fun x1162 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x5149 () x2506)
(declare-fun x3975 () Real)
(declare-fun x551 () Real)
(declare-fun x4147 () Bool)
(declare-fun x3583 () Real)
(declare-fun x552 () Real)
(declare-fun x881 () Real)
(declare-fun x4339 () Real)
(declare-fun x4953 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x4170 () Bool)
(declare-fun x527 () Bool)
(declare-fun x1166 () Real)
(declare-fun x2076 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x4445 () Bool)
(declare-fun x3529 () Real)
(declare-fun x2868 () Real)
(declare-fun x299 () Real)
(declare-fun x4142 () Real)
(declare-fun x1593 () Bool)
(declare-fun x301 () Real)
(declare-fun x2912 () Real)
(declare-fun x2613 (Real) Real)
(declare-fun x1056 () Real)
(declare-fun x430 () Real)
(declare-fun x4547 () Bool)
(declare-fun x564 () Bool)
(declare-fun x3840 () Real)
(declare-fun x1516 () Real)
(declare-fun x836 () Real)
(declare-fun x2814 () Bool)
(declare-fun x2477 () Real)
(declare-fun x3152 () Real)
(declare-fun x2362 () Bool)
(declare-fun x2243 () Real)
(declare-fun x3869 () Real)
(declare-fun x4951 () Bool)
(declare-fun x2764 () Bool)
(declare-fun x1918 () Real)
(declare-fun x3724 () Real)
(declare-fun x3283 () Real)
(declare-fun x4813 () Real)
(declare-fun x3000 () Real)
(declare-fun x1252 () Real)
(declare-fun x3777 () Bool)
(declare-fun x5163 () Bool)
(declare-fun x4102 () Real)
(declare-fun x3967 () Real)
(declare-fun x4312 () Real)
(declare-fun x3400 () Real)
(declare-fun x4542 () Bool)
(declare-fun x3054 () Bool)
(declare-fun x3803 () Real)
(declare-fun x1013 () Real)
(declare-fun x1839 () Bool)
(declare-fun x777 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x4406 () Real)
(declare-fun x3836 () Real)
(declare-fun x3044 () Real)
(declare-fun x1417 () Real)
(declare-fun x934 () Real)
(declare-fun x1095 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x357 () Real)
(declare-fun x457 () Real)
(declare-fun x1700 () Bool)
(declare-fun x3957 () Real)
(declare-fun x1594 () Real)
(declare-fun x1678 () Bool)
(declare-fun x3099 () Real)
(declare-fun x145 () Real)
(declare-fun x3272 () Bool)
(declare-fun x3215 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x3774 () Real)
(declare-fun x4571 () Bool)
(declare-fun x5002 () Bool)
(declare-fun x3846 () Real)
(declare-fun x3487 () Real)
(declare-fun x2573 () Real)
(declare-fun x5122 () Real)
(declare-fun x2147 (x2506) Real)
(declare-fun x5126 () Real)
(declare-fun x2358 () Real)
(declare-fun x4159 () Bool)
(declare-fun x705 () Real)
(declare-fun x4622 () Bool)
(declare-fun x4821 () Real)
(declare-fun x2339 () Real)
(declare-fun x748 () Real)
(declare-fun x2512 () Real)
(declare-fun x3450 () Real)
(declare-fun x1487 () x2506)
(declare-fun x1427 (Real) Real)
(declare-fun x4224 () Bool)
(declare-fun x2375 () Real)
(declare-fun x2416 () x2506)
(declare-fun x548 () Real)
(declare-fun x3150 () Real)
(declare-fun x2581 () Real)
(declare-fun x716 () Real)
(declare-fun x4829 () Bool)
(declare-fun x1917 (Real) Real)
(declare-fun x2193 () Real)
(declare-fun x2914 () Real)
(declare-fun x1506 () Real)
(declare-fun x1767 () Real)
(declare-fun x3528 () x2506)
(declare-fun x1970 () Bool)
(declare-fun x668 () Bool)
(declare-fun x912 () Real)
(declare-fun x2106 () Real)
(declare-fun x2042 (Real) Real)
(declare-fun x1502 () Real)
(declare-fun x4983 () Bool)
(declare-fun x3111 () Real)
(declare-fun x731 () Real)
(declare-fun x1238 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x1390 () Real)
(declare-fun x1677 () Real)
(declare-fun x4560 () Real)
(declare-fun x5068 () Real)
(declare-fun x1368 () Bool)
(declare-fun x2698 () Real)
(declare-fun x1469 () Bool)
(declare-fun x4866 (Real) Real)
(declare-fun x4149 () Bool)
(declare-fun x2614 () Real)
(declare-fun x5166 () Bool)
(declare-fun x3662 () Real)
(declare-fun x5132 () Real)
(declare-fun x1065 () Bool)
(declare-fun x2301 () Real)
(declare-fun x4003 () Bool)
(declare-fun x817 () Real)
(declare-fun x4817 () Bool)
(declare-fun x4084 () Real)
(declare-fun x441 () Real)
(declare-fun x2774 (x2506) Real)
(declare-fun x2519 () Real)
(declare-fun x5148 () Real)
(declare-fun x4838 () Real)
(declare-fun x4709 () x2506)
(declare-fun x2738 () Real)
(declare-fun x667 () Bool)
(declare-fun x2239 () Real)
(declare-fun x4222 () Bool)
(declare-fun x4930 () Real)
(declare-fun x2260 () Real)
(declare-fun x4642 () Bool)
(declare-fun x976 () Real)
(declare-fun x2188 () Bool)
(declare-fun x1848 () Real)
(declare-fun x5243 () Real)
(declare-fun x2283 (Real) Real)
(declare-fun x925 () Real)
(declare-fun x3077 () Bool)
(declare-fun x3675 () Real)
(declare-fun x288 () Real)
(declare-fun x649 () Real)
(declare-fun x4081 (Real) Real)
(declare-fun x5019 () Bool)
(declare-fun x5074 () Real)
(declare-fun x417 () Real)
(declare-fun x5133 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x798 () Bool)
(declare-fun x4090 () Real)
(declare-fun x316 () Bool)
(declare-fun x2933 () Real)
(declare-fun x1599 () Real)
(declare-fun x3874 () Real)
(declare-fun x1565 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x872 () Real)
(declare-fun x1747 () Real)
(declare-fun x3601 () Real)
(declare-fun x4814 () Real)
(declare-fun x2742 () Real)
(declare-fun x1575 () Real)
(declare-fun x2874 () Real)
(declare-fun x454 () Real)
(declare-fun x3189 (Real) Real)
(declare-fun x5152 () Bool)
(declare-fun x2943 () Real)
(declare-fun x2777 () Real)
(declare-fun x613 () Bool)
(declare-fun x2821 () Real)
(declare-fun x3781 (Real) Real)
(declare-fun x290 () Real)
(declare-fun x1515 () Real)
(declare-fun x626 () Bool)
(declare-fun x783 () Bool)
(declare-fun x39 () Bool)
(declare-fun x1996 () Real)
(declare-fun x2505 () Real)
(declare-fun x2226 () Bool)
(declare-fun x4584 () Bool)
(declare-fun x2576 () Real)
(declare-fun x186 () Bool)
(declare-fun x2267 () x2506)
(declare-fun x3241 () Real)
(declare-fun x416 (Real) Real)
(declare-fun x2154 () x2506)
(declare-fun x2804 () Real)
(declare-fun x556 () Real)
(declare-fun x525 () Real)
(declare-fun x1712 () Bool)
(declare-fun x3710 () x2506)
(declare-fun x4626 () Real)
(declare-fun x2124 () Real)
(declare-fun x1216 () Real)
(declare-fun x4393 () Real)
(declare-fun x4060 () Bool)
(declare-fun x942 () x2506)
(declare-fun x1927 () Real)
(declare-fun x5192 () Real)
(declare-fun x3698 () x2506)
(declare-fun x2571 (Real) Real)
(declare-fun x2802 () Real)
(declare-fun x199 () Real)
(declare-fun x3546 () Real)
(declare-fun x1160 () Real)
(declare-fun x2981 () Real)
(declare-fun x3793 () Bool)
(declare-fun x1688 () Real)
(declare-fun x3547 () Bool)
(declare-fun x4351 () Real)
(declare-fun x262 () Bool)
(declare-fun x426 () Real)
(declare-fun x3970 () Real)
(declare-fun x4034 () Bool)
(declare-fun x1796 () Real)
(declare-fun x2964 () Real)
(declare-fun x1032 () Real)
(declare-fun x34 () Real)
(declare-fun x137 () Bool)
(declare-fun x1589 () Real)
(declare-fun x1799 () Bool)
(declare-fun x2592 () Real)
(declare-fun x4376 () x2506)
(declare-fun x4994 () Real)
(declare-fun x4611 () Real)
(declare-fun x2151 () Real)
(declare-fun x4091 () Real)
(declare-fun x1971 () Real)
(declare-fun x980 () Real)
(declare-fun x3357 () Real)
(declare-fun x2035 () Bool)
(declare-fun x3353 () Real)
(declare-fun x2381 () Bool)
(declare-fun x587 () Bool)
(declare-fun x4924 () Real)
(declare-fun x5162 () Real)
(declare-fun x947 () Real)
(declare-fun x5249 () Real)
(declare-fun x1366 () Real)
(declare-fun x1054 () Real)
(declare-fun x1755 () Bool)
(declare-fun x3064 () Bool)
(declare-fun x4009 () Real)
(declare-fun x421 () Real)
(declare-fun x4825 () Real)
(declare-fun x2048 () Real)
(declare-fun x4470 () Real)
(declare-fun x648 () Bool)
(declare-fun x409 () Bool)
(declare-fun x4180 () Real)
(declare-fun x3011 () x2506)
(declare-fun x3904 () Real)
(declare-fun x4759 () Bool)
(declare-fun x5017 () Real)
(declare-fun x842 () Real)
(declare-fun x1263 () Bool)
(declare-fun x3075 () Real)
(declare-fun x4369 () Real)
(declare-fun x1693 () Real)
(declare-fun x1066 (Real) Real)
(declare-fun x4074 () x2506)
(declare-fun x4394 () Bool)
(declare-fun x599 (Real) Real)
(declare-fun x3977 () x2506)
(declare-fun x4137 () Real)
(declare-fun x2070 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x2652 () Bool)
(declare-fun x2029 () Real)
(declare-fun x1635 () Real)
(declare-fun x5048 () Real)
(declare-fun x682 (Real) Real)
(declare-fun x3477 () Real)
(declare-fun x4168 () Real)
(declare-fun x1268 () Bool)
(declare-fun x1315 () Real)
(declare-fun x2422 () Bool)
(declare-fun x4208 () Real)
(declare-fun x3455 () Real)
(declare-fun x4702 () Bool)
(declare-fun x2849 (x2506) Real)
(declare-fun x1549 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x3826 () Real)
(declare-fun x4250 () Real)
(declare-fun x4182 (Real) Real)
(declare-fun x729 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x3540 () Bool)
(declare-fun x863 () Real)
(declare-fun x1312 () Real)
(declare-fun x2386 () Bool)
(declare-fun x3464 () Real)
(declare-fun x21 () Real)
(declare-fun x423 () Bool)
(declare-fun x339 () Real)
(declare-fun x1146 () Real)
(declare-fun x3518 () Bool)
(declare-fun x963 () Bool)
(declare-fun x4164 () Real)
(declare-fun x5235 () Real)
(declare-fun x284 () Real)
(declare-fun x4097 () x2506)
(declare-fun x419 () Real)
(declare-fun x1648 () Bool)
(declare-fun x1626 () Real)
(declare-fun x1041 () Bool)
(declare-fun x1332 () Real)
(declare-fun x4426 () x2506)
(declare-fun x2906 () Real)
(declare-fun x513 () Real)
(declare-fun x3696 () Bool)
(declare-fun x2157 () Real)
(declare-fun x2684 () Real)
(declare-fun x1218 () Real)
(declare-fun x4077 () Real)
(declare-fun x1875 () Real)
(declare-fun x3134 () Real)
(declare-fun x1655 () Real)
(declare-fun x1622 () Bool)
(declare-fun x3345 () Real)
(declare-fun x1501 () Bool)
(declare-fun x2162 () Real)
(declare-fun x3504 () Real)
(declare-fun x3627 () Bool)
(declare-fun x2559 () Real)
(declare-fun x3886 () Real)
(declare-fun x982 () Bool)
(declare-fun x3103 () Real)
(declare-fun x4460 () Real)
(declare-fun x4629 () Real)
(declare-fun x3419 () Bool)
(declare-fun x618 () Real)
(declare-fun x2627 () Bool)
(declare-fun x1393 () Real)
(declare-fun x2544 () Real)
(declare-fun x4273 () Bool)
(declare-fun x376 () Real)
(declare-fun x1938 () Real)
(declare-fun x620 () Real)
(declare-fun x2901 () Real)
(declare-fun x1670 () Real)
(declare-fun x4533 () Real)
(declare-fun x462 () Real)
(declare-fun x4957 () Bool)
(declare-fun x432 () Real)
(declare-fun x4007 (x2506) Real)
(declare-fun x4752 () Real)
(declare-fun x973 () Real)
(declare-fun x928 () Real)
(declare-fun x4058 () Real)
(declare-fun x1474 () Real)
(declare-fun x2289 () Bool)
(declare-fun x5020 () Real)
(declare-fun x204 (Real) Real)
(declare-fun x3216 () Real)
(declare-fun x77 () Real)
(declare-fun x1836 () Real)
(declare-fun x1327 () Real)
(declare-fun x4130 (Real) Real)
(declare-fun x670 () Bool)
(declare-fun x3742 () Real)
(declare-fun x4938 () x2506)
(declare-fun x4269 () Real)
(declare-fun x3578 () Real)
(declare-fun x4718 () Bool)
(declare-fun x79 () Real)
(declare-fun x2999 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x1781 () Real)
(declare-fun x2009 () Bool)
(declare-fun x3403 () Real)
(declare-fun x3223 () Real)
(declare-fun x1898 () Real)
(declare-fun x1604 () x2506)
(declare-fun x4521 () Bool)
(declare-fun x1620 () Real)
(declare-fun x2297 () Real)
(declare-fun x3505 () Bool)
(declare-fun x2616 () Real)
(declare-fun x93 () Real)
(declare-fun x640 () Real)
(declare-fun x3958 () Real)
(declare-fun x700 () Real)
(declare-fun x2369 () Real)
(declare-fun x1229 () Real)
(declare-fun x2623 () Bool)
(declare-fun x5073 () Bool)
(declare-fun x880 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x3564 () Bool)
(declare-fun x3642 () Bool)
(declare-fun x702 () Bool)
(declare-fun x4409 () x2506)
(declare-fun x3608 () Bool)
(declare-fun x2812 () Bool)
(declare-fun x1271 () Real)
(declare-fun x3649 () Real)
(declare-fun x3743 () Real)
(declare-fun x1365 () Bool)
(declare-fun x2557 () Real)
(declare-fun x2403 () Real)
(declare-fun x3135 () Real)
(declare-fun x239 () Real)
(declare-fun x4055 () Bool)
(declare-fun x4413 () Bool)
(declare-fun x2497 () Real)
(declare-fun x1446 () Real)
(declare-fun x3708 () Real)
(declare-fun x2019 () Bool)
(declare-fun x4732 () Bool)
(declare-fun x5100 () Real)
(declare-fun x1378 () Real)
(declare-fun x2974 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x4052 () Real)
(declare-fun x5214 () Real)
(declare-fun x1980 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x4198 () Bool)
(declare-fun x280 () Real)
(declare-fun x5205 () Real)
(declare-fun x2481 () Bool)
(declare-fun x797 () Real)
(declare-fun x4895 () Real)
(declare-fun x3681 () Bool)
(declare-fun x3155 () Real)
(declare-fun x2426 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x140 () Bool)
(declare-fun x5016 () Bool)
(declare-fun x1707 () x2506)
(declare-fun x5043 () Bool)
(declare-fun x371 () Real)
(declare-fun x3004 () Real)
(declare-fun x4078 () Real)
(declare-fun x329 () Real)
(declare-fun x3674 () x2506)
(declare-fun x1750 () Real)
(declare-fun x643 () Real)
(declare-fun x3888 () Real)
(declare-fun x3393 () Real)
(declare-fun x1867 () Real)
(declare-fun x3173 () Real)
(declare-fun x3101 () Bool)
(declare-fun x4745 () Real)
(declare-fun x5159 () Real)
(declare-fun x1585 () Real)
(declare-fun x2862 () Real)
(declare-fun x688 () Real)
(declare-fun x4803 () x2506)
(declare-fun x1314 () Real)
(declare-fun x468 () Real)
(declare-fun x3944 () Real)
(declare-fun x1118 () Real)
(declare-fun x3250 () Real)
(declare-fun x4634 () Real)
(declare-fun x3314 () Real)
(declare-fun x603 () Bool)
(declare-fun x3490 () x2506)
(declare-fun x2797 () Bool)
(declare-fun x3019 () Real)
(declare-fun x1835 () Real)
(declare-fun x440 () Real)
(declare-fun x4899 () Bool)
(declare-fun x4061 () Real)
(declare-fun x2907 () Real)
(declare-fun x2494 () Real)
(declare-fun x1059 () Real)
(declare-fun x3017 () Bool)
(declare-fun x4045 () x2506)
(declare-fun x1270 () Real)
(declare-fun x4507 () Real)
(declare-fun x1531 () Real)
(declare-fun x4703 (Real) Real)
(declare-fun x3003 (Real) Real)
(declare-fun x3236 () Real)
(declare-fun x1311 () Real)
(declare-fun x1265 () Real)
(declare-fun x1285 () Real)
(declare-fun x3361 () Real)
(declare-fun x5095 () Bool)
(declare-fun x4368 () Bool)
(declare-fun x524 () Bool)
(declare-fun x116 () Bool)
(declare-fun x4444 () Real)
(declare-fun x938 () Real)
(declare-fun x3367 () Bool)
(declare-fun x448 () Bool)
(declare-fun x4220 () Bool)
(declare-fun x4500 () Bool)
(declare-fun x3524 () Bool)
(declare-fun x1949 (Real) Real)
(declare-fun x4422 () Bool)
(declare-fun x5231 (Real) Real)
(declare-fun x5018 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x1224 () Real)
(declare-fun x1627 () Bool)
(declare-fun x2843 () Bool)
(declare-fun x3343 (Real) Real)
(declare-fun x2094 () Bool)
(declare-fun x931 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x4082 () x2506)
(declare-fun x5209 () Real)
(declare-fun x2202 () Real)
(declare-fun x1912 () Bool)
(declare-fun x58 (Real) Real)
(declare-fun x3010 () Real)
(declare-fun x1728 () Real)
(declare-fun x1782 (Real) Real)
(declare-fun x685 () Bool)
(declare-fun x1905 () Real)
(declare-fun x2829 () Real)
(declare-fun x1628 () Real)
(declare-fun x3422 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x589 () Real)
(declare-fun x4011 () Bool)
(declare-fun x4023 () Bool)
(declare-fun x2718 (Real) Real)
(declare-fun x3762 () Real)
(declare-fun x3192 () Real)
(declare-fun x2788 () Real)
(declare-fun x3602 () Real)
(declare-fun x15 () x2506)
(declare-fun x3894 () Real)
(declare-fun x929 () x2506)
(declare-fun x193 (x2506) Real)
(declare-fun x4331 (Real) Real)
(declare-fun x289 () Bool)
(declare-fun x108 () Real)
(declare-fun x1294 () Real)
(declare-fun x1096 () Real)
(declare-fun x4754 () Real)
(declare-fun x2597 () Real)
(declare-fun x370 () Real)
(declare-fun x4738 () Real)
(declare-fun x2068 () Real)
(declare-fun x98 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x1489 () Real)
(declare-fun x3779 () Bool)
(declare-fun x143 () Bool)
(declare-fun x1584 () Real)
(declare-fun x4740 () Real)
(declare-fun x1974 () Real)
(declare-fun x2977 () Real)
(declare-fun x4153 () Real)
(declare-fun x99 () Real)
(declare-fun x3274 () Real)
(declare-fun x721 (x2506) Real)
(declare-fun x3587 () Real)
(declare-fun x1686 () Real)
(declare-fun x1179 () Real)
(declare-fun x786 () Real)
(declare-fun x4296 () Real)
(declare-fun x2911 () Real)
(declare-fun x3210 () Real)
(declare-fun x3519 () Bool)
(declare-fun x5121 () Real)
(declare-fun x4880 () Bool)
(declare-fun x652 () Real)
(declare-fun x785 () Real)
(declare-fun x2303 () Real)
(declare-fun x253 () Bool)
(declare-fun x3929 (Real) Real)
(declare-fun x4103 () Real)
(declare-fun x4141 () Bool)
(declare-fun x4006 () Real)
(declare-fun x537 () Real)
(declare-fun x3246 () Real)
(declare-fun x1337 () Real)
(declare-fun x580 () Bool)
(declare-fun x4309 () Bool)
(declare-fun x348 () Real)
(declare-fun x4076 () Real)
(declare-fun x4280 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x805 () Bool)
(declare-fun x2701 () x2506)
(declare-fun x2259 () Real)
(declare-fun x4410 () Bool)
(declare-fun x636 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x4672 () Real)
(declare-fun x1107 () Real)
(declare-fun x3172 () Real)
(declare-fun x3255 (x2506) Real)
(declare-fun x1613 () Bool)
(declare-fun x3877 () Real)
(declare-fun x4883 () Bool)
(declare-fun x4601 () Bool)
(declare-fun x62 () Bool)
(declare-fun x1706 () Real)
(declare-fun x526 () Bool)
(declare-fun x4089 () Bool)
(declare-fun x3081 () Real)
(declare-fun x3143 (Real) Real)
(declare-fun x3951 () Real)
(declare-fun x2888 () Real)
(declare-fun x3641 () Real)
(declare-fun x3972 () Bool)
(declare-fun x3159 () Real)
(declare-fun x523 () Real)
(declare-fun x101 () Real)
(declare-fun x722 () Bool)
(declare-fun x742 () Bool)
(declare-fun x2397 () Real)
(declare-fun x596 () Real)
(declare-fun x4119 () Real)
(declare-fun x3670 () Bool)
(declare-fun x3073 () Real)
(declare-fun x4203 () Real)
(declare-fun x4333 () Bool)
(declare-fun x4697 () Real)
(declare-fun x756 () x2506)
(declare-fun x2499 () Bool)
(declare-fun x2878 () Real)
(declare-fun x4781 () Bool)
(declare-fun x2478 () Real)
(declare-fun x535 () Bool)
(declare-fun x915 () Real)
(declare-fun x3863 () Real)
(declare-fun x1734 (Real) Real)
(declare-fun x4321 () Real)
(declare-fun x2006 () Real)
(declare-fun x4042 () Real)
(declare-fun x3956 () Bool)
(declare-fun x5196 () Real)
(declare-fun x1973 () Real)
(declare-fun x581 () Real)
(declare-fun x2608 () Real)
(declare-fun x2249 () Bool)
(declare-fun x835 () Real)
(declare-fun x1180 () Real)
(declare-fun x3061 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x4402 () Bool)
(declare-fun x2248 () Real)
(declare-fun x5128 () Real)
(declare-fun x347 () Bool)
(declare-fun x4950 () x2506)
(declare-fun x3356 () Real)
(declare-fun x2032 () Real)
(declare-fun x2092 () Bool)
(declare-fun x230 () Real)
(declare-fun x2252 () Real)
(declare-fun x307 () Real)
(declare-fun x2560 () Real)
(declare-fun x1775 () Real)
(declare-fun x4291 () Bool)
(declare-fun x1661 () x2506)
(declare-fun x2927 () x2506)
(declare-fun x1086 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x3552 () Bool)
(declare-fun x1391 () Real)
(declare-fun x3033 () Real)
(declare-fun x3661 () Bool)
(declare-fun x3502 () Real)
(declare-fun x2771 () Real)
(declare-fun x3279 () Real)
(declare-fun x1280 () Real)
(declare-fun x120 () Real)
(declare-fun x1984 () Real)
(declare-fun x4216 () Bool)
(declare-fun x2227 () Real)
(declare-fun x4295 () Real)
(declare-fun x1832 () Real)
(declare-fun x529 () Real)
(declare-fun x2992 () Bool)
(declare-fun x4881 () Real)
(declare-fun x3034 () Bool)
(declare-fun x561 () Real)
(declare-fun x2190 () Bool)
(declare-fun x3719 () Real)
(declare-fun x4888 () Real)
(declare-fun x2174 () Real)
(declare-fun x180 () Bool)
(declare-fun x4892 () Bool)
(declare-fun x1727 () Real)
(declare-fun x2291 () Real)
(declare-fun x945 () Real)
(declare-fun x2128 () Real)
(declare-fun x368 () Real)
(declare-fun x1708 () Real)
(declare-fun x3237 () Bool)
(declare-fun x669 () Real)
(declare-fun x1969 () Real)
(declare-fun x2196 () Real)
(declare-fun x1587 () Real)
(declare-fun x1771 () x2506)
(declare-fun x4715 () Real)
(declare-fun x903 () Real)
(declare-fun x5190 () Real)
(declare-fun x3483 () Bool)
(declare-fun x746 () Real)
(declare-fun x2025 () Real)
(declare-fun x387 () Bool)
(declare-fun x9 () Real)
(declare-fun x4846 () Bool)
(declare-fun x4742 () x2506)
(declare-fun x2418 () Bool)
(declare-fun x2479 () Real)
(declare-fun x3512 () Real)
(declare-fun x443 () Real)
(declare-fun x1465 () Bool)
(declare-fun x1795 () Real)
(declare-fun x4977 () Bool)
(declare-fun x216 (Real) Real)
(declare-fun x1005 () Real)
(declare-fun x2625 () x2506)
(declare-fun x919 () Real)
(declare-fun x1137 () Bool)
(declare-fun x2578 () Real)
(declare-fun x1742 () Bool)
(declare-fun x317 () Bool)
(declare-fun x3979 () Real)
(declare-fun x2749 () Bool)
(declare-fun x2591 () Bool)
(declare-fun x5080 () Real)
(declare-fun x2773 () Real)
(declare-fun x550 () Real)
(declare-fun x3614 () Bool)
(declare-fun x434 () Real)
(declare-fun x2263 () Real)
(declare-fun x4235 () Bool)
(declare-fun x3120 () Real)
(declare-fun x342 () Real)
(declare-fun x1639 () Bool)
(declare-fun x4415 () Real)
(declare-fun x1819 () Real)
(declare-fun x650 () Bool)
(declare-fun x2689 () Bool)
(declare-fun x3340 () x2506)
(declare-fun x1049 () Real)
(declare-fun x1663 () Real)
(declare-fun x828 () Real)
(declare-fun x3752 () Bool)
(declare-fun x3475 () Real)
(declare-fun x3799 () Bool)
(declare-fun x4383 () Bool)
(declare-fun x4155 () Real)
(declare-fun x4260 () Bool)
(declare-fun x344 () Real)
(declare-fun x988 () x2506)
(declare-fun x4984 () Real)
(declare-fun x3381 () Real)
(declare-fun x3183 () Real)
(declare-fun x2867 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x1119 () x2506)
(declare-fun x2695 () Real)
(declare-fun x210 () Bool)
(declare-fun x4563 () Bool)
(declare-fun x229 () Real)
(declare-fun x741 () Real)
(declare-fun x4199 () Bool)
(declare-fun x1735 (Real) Real)
(declare-fun x2615 () Bool)
(declare-fun x4648 () Real)
(declare-fun x1498 () Bool)
(declare-fun x5090 () Bool)
(declare-fun x321 () Bool)
(declare-fun x2947 () Real)
(declare-fun x4770 () Bool)
(declare-fun x913 () Real)
(declare-fun x991 () Real)
(declare-fun x1988 () Bool)
(declare-fun x1993 () x2506)
(declare-fun x3765 () Bool)
(declare-fun x3024 () Real)
(declare-fun x2606 () Real)
(declare-fun x3107 () Real)
(declare-fun x1841 () Real)
(declare-fun x1906 () Bool)
(declare-fun x3433 () Real)
(declare-fun x2942 () x2506)
(declare-fun x4526 () Bool)
(declare-fun x3791 () Bool)
(declare-fun x3415 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x479 () Real)
(declare-fun x351 () Real)
(declare-fun x1352 () Real)
(declare-fun x4753 (Real) Real)
(declare-fun x2586 () Real)
(declare-fun x3302 () Real)
(declare-fun x488 () Real)
(declare-fun x1899 () Real)
(declare-fun x2798 () Real)
(declare-fun x2937 () Bool)
(declare-fun x4579 () Real)
(declare-fun x4998 () Real)
(declare-fun x3472 () Real)
(declare-fun x1317 () Real)
(declare-fun x4600 () Real)
(declare-fun x91 () Real)
(declare-fun x5232 () Bool)
(declare-fun x2272 () Real)
(declare-fun x63 () Bool)
(declare-fun x24 () Real)
(declare-fun x1389 () Real)
(declare-fun x142 () Real)
(declare-fun x2072 () Real)
(declare-fun x1143 () Real)
(declare-fun x3089 () Real)
(declare-fun x2316 () Real)
(declare-fun x4307 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x4374 () Real)
(declare-fun x2594 () Bool)
(declare-fun x362 () x2506)
(declare-fun x3085 () Real)
(declare-fun x2965 () Real)
(declare-fun x1849 () Real)
(declare-fun x3985 () Real)
(declare-fun x730 () x2506)
(declare-fun x3766 () Real)
(declare-fun x138 () Real)
(declare-fun x123 () Real)
(declare-fun x2123 () Bool)
(declare-fun x4855 () Real)
(declare-fun x3496 () Real)
(declare-fun x4028 () Real)
(declare-fun x2817 () Real)
(declare-fun x3776 () Real)
(declare-fun x181 () Bool)
(declare-fun x2972 () Real)
(declare-fun x1174 () Real)
(declare-fun x633 () Real)
(declare-fun x2904 () Real)
(declare-fun x2275 () Real)
(declare-fun x3029 () Real)
(declare-fun x4254 () Bool)
(declare-fun x4979 () Real)
(declare-fun x1504 () Bool)
(declare-fun x3734 () Bool)
(declare-fun x2324 () Bool)
(declare-fun x477 () Real)
(declare-fun x1201 () Real)
(declare-fun x3471 () x2506)
(declare-fun x3110 () Bool)
(declare-fun x1904 () Real)
(declare-fun x794 () Real)
(declare-fun x4609 () Real)
(declare-fun x3479 () Bool)
(declare-fun x755 () Bool)
(declare-fun x1891 () Real)
(declare-fun x3177 () Real)
(declare-fun x3581 () Bool)
(declare-fun x602 () Real)
(declare-fun x2181 () Bool)
(declare-fun x1470 () Real)
(declare-fun x1325 () Real)
(declare-fun x1144 () Real)
(declare-fun x2647 () Real)
(declare-fun x994 () Bool)
(declare-fun x2041 () Real)
(declare-fun x2871 () Bool)
(declare-fun x3534 () Bool)
(declare-fun x3414 () Real)
(declare-fun x2683 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x3930 () Real)
(declare-fun x2315 () Real)
(declare-fun x2036 () Real)
(declare-fun x1093 () x2506)
(declare-fun x4085 () Bool)
(declare-fun x995 () Real)
(declare-fun x1551 () x2506)
(declare-fun x2338 () Real)
(declare-fun x4758 () Bool)
(declare-fun x5199 () Bool)
(declare-fun x1901 () Real)
(declare-fun x4068 () Real)
(declare-fun x3880 () Real)
(declare-fun x32 () Real)
(declare-fun x4 () x2506)
(declare-fun x5097 () Real)
(declare-fun x5164 () Real)
(declare-fun x3377 () Real)
(declare-fun x2569 () Bool)
(declare-fun x3867 () Real)
(declare-fun x3197 () Real)
(declare-fun x3744 () x2506)
(declare-fun x1985 () Real)
(declare-fun x1008 () Real)
(declare-fun x377 () Real)
(declare-fun x4335 () Bool)
(declare-fun x5189 () Real)
(declare-fun x893 () x2506)
(declare-fun x1245 () Bool)
(declare-fun x4707 () Real)
(declare-fun x1206 () Real)
(declare-fun x46 () Bool)
(declare-fun x1669 () Real)
(declare-fun x3211 () Bool)
(declare-fun x5153 () Real)
(declare-fun x2596 () x2506)
(declare-fun x2676 () Bool)
(declare-fun x222 () Real)
(declare-fun x4297 () Real)
(declare-fun x1108 () Real)
(declare-fun x3277 () Bool)
(declare-fun x4487 () Real)
(declare-fun x1953 () Real)
(declare-fun x5096 () Real)
(declare-fun x5077 () Real)
(declare-fun x1259 () Real)
(declare-fun x2491 () Real)
(declare-fun x2894 () Real)
(declare-fun x3068 () Real)
(declare-fun x3730 () Real)
(declare-fun x2408 () x2506)
(declare-fun x1754 () Real)
(declare-fun x1527 () Bool)
(declare-fun x864 () Real)
(declare-fun x4024 () Real)
(declare-fun x3469 () Bool)
(declare-fun x2681 () Real)
(declare-fun x1561 () Real)
(declare-fun x267 () Real)
(declare-fun x957 () Real)
(declare-fun x2069 () Bool)
(declare-fun x3516 () Real)
(declare-fun x2940 () Real)
(declare-fun x635 () Real)
(declare-fun x534 () Real)
(declare-fun x1295 () Bool)
(declare-fun x2893 () Real)
(declare-fun x2122 () Bool)
(declare-fun x1151 () Real)
(declare-fun x1234 () Real)
(declare-fun x2055 () Bool)
(declare-fun x3344 () Real)
(declare-fun x2096 (Real) Real)
(declare-fun x5072 () Real)
(declare-fun x1505 () Real)
(declare-fun x2714 () x2506)
(declare-fun x1338 () Real)
(declare-fun x1528 () Bool)
(declare-fun x595 () Real)
(declare-fun x296 () Real)
(declare-fun x1785 () Real)
(declare-fun x4704 () Real)
(declare-fun x3859 () Real)
(declare-fun x4824 () Real)
(declare-fun x1812 () Real)
(declare-fun x13 () Real)
(declare-fun x1654 () Real)
(declare-fun x3369 () Bool)
(declare-fun x364 () Real)
(declare-fun x3707 () Real)
(declare-fun x2921 () Real)
(declare-fun x3301 (Real) Real)
(declare-fun x4666 () Bool)
(declare-fun x774 () Bool)
(declare-fun x3199 () Bool)
(declare-fun x2657 () Real)
(declare-fun x4592 () Bool)
(declare-fun x146 () Bool)
(declare-fun x5157 () Real)
(declare-fun x5111 () Real)
(declare-fun x3625 () Real)
(declare-fun x1523 () x2506)
(declare-fun x2984 () Bool)
(declare-fun x4625 () Real)
(declare-fun x67 () Bool)
(declare-fun x1009 () x2506)
(declare-fun x2088 () Bool)
(declare-fun x1194 () Real)
(declare-fun x3260 () Real)
(declare-fun x568 () Real)
(declare-fun x4441 () x2506)
(declare-fun x4963 () Bool)
(declare-fun x4911 () Real)
(declare-fun x2796 () x2506)
(declare-fun x2971 () Real)
(declare-fun x3486 () Bool)
(declare-fun x3032 () Real)
(declare-fun x1729 () Bool)
(declare-fun x1752 () Real)
(declare-fun x1316 () Bool)
(declare-fun x4343 () Real)
(declare-fun x892 () Real)
(declare-fun x292 () Bool)
(declare-fun x3351 () Bool)
(declare-fun x3966 () Bool)
(declare-fun x2047 () Real)
(declare-fun x3689 () x2506)
(declare-fun x806 () Bool)
(declare-fun x1217 () Real)
(declare-fun x5203 () Real)
(declare-fun x1815 () Bool)
(declare-fun x5207 () x2506)
(declare-fun x1473 (Real) Real)
(declare-fun x3683 () Real)
(declare-fun x914 () Bool)
(declare-fun x136 () Bool)
(declare-fun x3788 () Real)
(declare-fun x2051 () Bool)
(declare-fun x3626 () Bool)
(declare-fun x4228 () Real)
(declare-fun x29 () Real)
(declare-fun x2531 () Real)
(declare-fun x5124 () Real)
(declare-fun x3663 () Real)
(declare-fun x3146 () Real)
(declare-fun x5000 () Real)
(declare-fun x2419 () Real)
(declare-fun x3862 () Real)
(declare-fun x3379 () Real)
(declare-fun x3890 () Bool)
(declare-fun x1748 () Real)
(declare-fun x1615 () Real)
(declare-fun x4831 () Real)
(declare-fun x207 () Real)
(declare-fun x2113 () Bool)
(declare-fun x467 () Real)
(declare-fun x1116 () Real)
(declare-fun x804 () Real)
(declare-fun x902 () Real)
(declare-fun x3052 () Bool)
(declare-fun x106 () Real)
(declare-fun x3506 () Bool)
(declare-fun x1202 () Real)
(declare-fun x4797 () Bool)
(declare-fun x4847 () Bool)
(declare-fun x4157 () Bool)
(declare-fun x4523 () Real)
(declare-fun x2365 () Real)
(declare-fun x4670 () Real)
(declare-fun x3918 () Real)
(declare-fun x4708 () Bool)
(declare-fun x2367 () Real)
(declare-fun x4008 () Real)
(declare-fun x5204 () Real)
(declare-fun x3090 () Real)
(declare-fun x3418 () Real)
(declare-fun x951 () Real)
(declare-fun x3949 () Real)
(declare-fun x3510 () Bool)
(declare-fun x482 () Bool)
(declare-fun x491 () Real)
(declare-fun x4146 () Real)
(declare-fun x2351 () Real)
(declare-fun x4928 () Real)
(declare-fun x658 () Bool)
(declare-fun x4435 () Real)
(declare-fun x3435 () Real)
(declare-fun x65 () Real)
(declare-fun x2028 () Real)
(declare-fun x3289 () Real)
(declare-fun x486 () Real)
(declare-fun x4115 () Real)
(declare-fun x5045 () Real)
(declare-fun x4261 () Real)
(declare-fun x4274 () Real)
(declare-fun x1965 () Bool)
(declare-fun x203 () Real)
(declare-fun x265 () Real)
(declare-fun x28 () Real)
(declare-fun x2368 () Bool)
(declare-fun x607 () Real)
(declare-fun x445 () Real)
(declare-fun x5094 () Real)
(declare-fun x2401 () Bool)
(declare-fun x4018 () Bool)
(declare-fun x4154 () Bool)
(declare-fun x3651 () Real)
(declare-fun x221 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x961 () Bool)
(declare-fun x506 () Real)
(declare-fun x5082 () Real)
(declare-fun x591 () Real)
(declare-fun x4736 () Real)
(declare-fun x2776 () Real)
(declare-fun x1036 () Bool)
(declare-fun x3639 () Bool)
(declare-fun x1239 () Real)
(declare-fun x3261 () Real)
(declare-fun x1520 () Real)
(declare-fun x3553 () Bool)
(declare-fun x2342 () Real)
(declare-fun x1586 () Real)
(declare-fun x4654 () Real)
(declare-fun x4975 () Real)
(declare-fun x3488 () Bool)
(declare-fun x1999 (Real Real) Real)
(declare-fun x4020 () Real)
(declare-fun x577 () Bool)
(declare-fun x999 (Real) Real)
(declare-fun x3473 () Real)
(declare-fun x3091 () Real)
(declare-fun x3039 () x2506)
(declare-fun x3459 () Real)
(declare-fun x1171 () Real)
(declare-fun x680 () Bool)
(declare-fun x1507 () Real)
(declare-fun x5079 () Bool)
(declare-fun x2754 () Bool)
(declare-fun x773 () x2506)
(declare-fun x4486 () Real)
(declare-fun x1558 () Real)
(declare-fun x2242 () Real)
(declare-fun x1514 () Bool)
(declare-fun x5161 () Real)
(declare-fun x5135 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x2117 () Real)
(declare-fun x888 () Real)
(declare-fun x1947 () Bool)
(declare-fun x3447 () Bool)
(declare-fun x3385 () x2506)
(declare-fun x1629 () Real)
(declare-fun x696 () Real)
(declare-fun x311 () Real)
(declare-fun x4863 () x2506)
(declare-fun x1114 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x2908 () Real)
(declare-fun x4520 () Real)
(declare-fun x2635 () Real)
(declare-fun x747 () Bool)
(declare-fun x170 () x2506)
(declare-fun x3350 () Real)
(declare-fun x2305 () Real)
(declare-fun x2702 () Bool)
(declare-fun x2731 () Real)
(declare-fun x4607 () Real)
(declare-fun x3280 () Bool)
(declare-fun x45 () Bool)
(declare-fun x3481 () x2506)
(declare-fun x439 () Real)
(declare-fun x845 (Real) Real)
(declare-fun x565 (Real) Real)
(declare-fun x2205 () Real)
(declare-fun x4775 () Real)
(declare-fun x1573 () Real)
(declare-fun x2679 (Real) Real)
(declare-fun x2553 () Bool)
(declare-fun x5052 () Real)
(declare-fun x1240 () Real)
(declare-fun x3157 () Real)
(declare-fun x3801 () Bool)
(declare-fun x1052 () Real)
(declare-fun x4897 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x1512 (Real) Real)
(declare-fun x5160 () Bool)
(declare-fun x2518 (Real) Real)
(declare-fun x5036 () Real)
(declare-fun x452 () Real)
(declare-fun x3038 () Real)
(declare-fun x5030 () Real)
(declare-fun x4779 () Bool)
(declare-fun x4926 () Real)
(declare-fun x1440 () Real)
(declare-fun x3193 () Real)
(declare-fun x4647 () Real)
(declare-fun x3162 () x2506)
(declare-fun x4355 () Real)
(declare-fun x3850 () Bool)
(declare-fun x2474 () Real)
(declare-fun x2589 () Bool)
(declare-fun x3922 () Real)
(declare-fun x3360 () Real)
(declare-fun x1803 () Real)
(declare-fun x3247 () Real)
(declare-fun x3263 () Real)
(declare-fun x843 () Bool)
(declare-fun x4811 () Real)
(declare-fun x2091 () Real)
(declare-fun x873 () Bool)
(declare-fun x673 () Real)
(declare-fun x478 () Real)
(declare-fun x3169 () Real)
(declare-fun x209 () Real)
(declare-fun x615 () Real)
(declare-fun x2744 () Real)
(declare-fun x5194 () Real)
(declare-fun x158 () Real)
(declare-fun x752 () Bool)
(declare-fun x1342 () Real)
(declare-fun x225 () Real)
(declare-fun x4815 () Real)
(declare-fun x1481 (Real) Real)
(declare-fun x3946 () Real)
(declare-fun x1409 () Real)
(declare-fun x4937 () Real)
(declare-fun x5141 () Real)
(declare-fun x886 (x2506) Real)
(declare-fun x313 () Real)
(declare-fun x4072 () Real)
(declare-fun x4834 () Bool)
(declare-fun x318 () Real)
(declare-fun x2180 () Real)
(declare-fun x3229 () Bool)
(declare-fun x2424 () Real)
(declare-fun x2163 () Bool)
(declare-fun x800 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x920 () Real)
(declare-fun x4844 () Bool)
(declare-fun x4120 () Real)
(declare-fun x2593 () Bool)
(declare-fun x4300 () Real)
(declare-fun x4716 () Real)
(declare-fun x403 () Bool)
(declare-fun x2572 () Bool)
(declare-fun x3176 () Real)
(declare-fun x2737 () Real)
(declare-fun x2490 () Bool)
(declare-fun x4004 () Bool)
(declare-fun x1173 (Real) Real)
(declare-fun x4698 () Real)
(declare-fun x1057 () x2506)
(declare-fun x2308 () Real)
(declare-fun x4188 () Real)
(declare-fun x2378 () Real)
(declare-fun x3723 () Bool)
(declare-fun x909 () Real)
(declare-fun x1284 () Bool)
(declare-fun x3658 () Bool)
(declare-fun x460 () Real)
(declare-fun x4734 () Real)
(declare-fun x4183 () Bool)
(declare-fun x2924 () Bool)
(declare-fun x809 () Real)
(declare-fun x2583 () Real)
(declare-fun x1495 () Real)
(declare-fun x1418 () Bool)
(declare-fun x1539 () Real)
(declare-fun x2100 () Bool)
(declare-fun x1948 () Real)
(declare-fun x1931 () Real)
(declare-fun x3521 () Real)
(declare-fun x2004 () Real)
(declare-fun x4420 (Real) Real)
(declare-fun x5167 () Real)
(declare-fun x4586 (Real) Real)
(declare-fun x4475 () Real)
(declare-fun x3104 (Real) Real)
(declare-fun x2198 () Bool)
(declare-fun x4247 () Bool)
(declare-fun x1716 () x2506)
(declare-fun x3205 () Bool)
(declare-fun x4436 (Real) Real)
(declare-fun x1050 (x2506) Real)
(declare-fun x616 () Real)
(declare-fun x2329 () Bool)
(declare-fun x4725 () Real)
(declare-fun x149 () Real)
(declare-fun x4214 () Real)
(declare-fun x1705 () Real)
(declare-fun x1837 () Real)
(declare-fun x1388 () x2506)
(declare-fun x389 () Bool)
(declare-fun x2864 () Bool)
(declare-fun x827 () Bool)
(declare-fun x894 () Real)
(declare-fun x1631 () Bool)
(declare-fun x3830 () Real)
(declare-fun x3507 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x1895 () Real)
(declare-fun x4167 () Real)
(declare-fun x4970 () Real)
(declare-fun x4150 () Real)
(declare-fun x4401 () Real)
(declare-fun x4786 () Bool)
(declare-fun x2246 (x2506) Real)
(declare-fun x5251 () Real)
(declare-fun x2044 () Real)
(declare-fun x1646 () Real)
(declare-fun x1680 () Bool)
(declare-fun x3368 () Real)
(declare-fun x2535 () Real)
(declare-fun x2783 () Real)
(declare-fun x5123 () Real)
(declare-fun x4616 () Real)
(declare-fun x2010 () Real)
(declare-fun x5252 () Real)
(declare-fun x1777 () Bool)
(declare-fun x3468 () Real)
(declare-fun x1519 () Bool)
(declare-fun x40 () Real)
(declare-fun x3849 (Real) Real)
(declare-fun x4887 () Real)
(declare-fun x1508 (Real) Real)
(declare-fun x4768 () Real)
(declare-fun x5165 () Real)
(declare-fun x1039 () Real)
(declare-fun x1518 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x4000 () Bool)
(declare-fun x447 () Real)
(declare-fun x4810 () Bool)
(declare-fun x4663 () Bool)
(declare-fun x1740 () Real)
(declare-fun x4177 () Real)
(declare-fun x250 () Real)
(declare-fun x875 () Real)
(declare-fun x4576 () Bool)
(declare-fun x1616 () Real)
(declare-fun x3992 () Real)
(declare-fun x2688 () Real)
(declare-fun x4757 () Real)
(declare-fun x2595 () Real)
(declare-fun x922 () Real)
(declare-fun x4655 (Real) Real)
(declare-fun x4379 () Real)
(declare-fun x2626 () Bool)
(declare-fun x2371 () Real)
(declare-fun x273 () Real)
(declare-fun x3030 () Real)
(declare-fun x497 () Real)
(declare-fun x2298 (Real) Real)
(declare-fun x3950 () Real)
(declare-fun x3329 () Real)
(declare-fun x1269 () Real)
(declare-fun x4944 (Real) Real)
(declare-fun x2790 (Real) Real)
(declare-fun x3828 () x2506)
(declare-fun x4423 () Bool)
(declare-fun x1764 () Real)
(declare-fun x3881 () Bool)
(declare-fun x4710 () Bool)
(declare-fun x2086 () Real)
(declare-fun x3441 () Real)
(declare-fun x4772 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x1020 () Real)
(declare-fun x1724 () Real)
(declare-fun x4835 () Real)
(declare-fun x2628 () Real)
(declare-fun x162 () Real)
(declare-fun x3693 () Bool)
(declare-fun x2882 () Real)
(declare-fun x2685 () Real)
(declare-fun x703 () Bool)
(declare-fun x3484 () Bool)
(declare-fun x1266 () Real)
(declare-fun x2063 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x4356 () Real)
(declare-fun x3140 () Real)
(declare-fun x739 () Bool)
(declare-fun x390 () Real)
(declare-fun x228 () x2506)
(declare-fun x2861 () Bool)
(declare-fun x3559 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x4088 () Real)
(declare-fun x4559 (Real) Real)
(declare-fun x5151 () Real)
(declare-fun x4494 () Real)
(declare-fun x4448 () Real)
(declare-fun x2087 () Real)
(declare-fun x1099 () Real)
(declare-fun x3634 () Bool)
(declare-fun x631 () Bool)
(declare-fun x3342 () Bool)
(declare-fun x3430 () Real)
(declare-fun x4532 () Bool)
(declare-fun x1318 () Real)
(declare-fun x2031 () Real)
(declare-fun x4701 () Real)
(declare-fun x4301 () Real)
(declare-fun x2294 () Real)
(declare-fun x1405 () Real)
(declare-fun x3376 () Real)
(declare-fun x799 () Real)
(declare-fun x2700 () Real)
(declare-fun x4920 () Real)
(declare-fun x4800 () x2506)
(declare-fun x5028 (Real) Real)
(declare-fun x5250 () Real)
(declare-fun x1784 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x266 () Real)
(declare-fun x1422 () Real)
(declare-fun x5031 () Bool)
(declare-fun x4245 () Real)
(declare-fun x223 () Real)
(declare-fun x1028 () Bool)
(declare-fun x3555 () Real)
(declare-fun x3792 () Real)
(declare-fun x4463 () Real)
(declare-fun x1807 () Real)
(declare-fun x2038 () Real)
(declare-fun x998 () Bool)
(declare-fun x3685 () Real)
(declare-fun x2633 () Real)
(declare-fun x610 () x2506)
(declare-fun x2159 () Real)
(declare-fun x2018 () Real)
(declare-fun x740 () Real)
(declare-fun x3087 () Real)
(declare-fun x112 () Real)
(declare-fun x2568 () Real)
(declare-fun x4946 () Real)
(declare-fun x4639 () Real)
(declare-fun x1251 () Real)
(declare-fun x297 () Bool)
(declare-fun x4481 () Real)
(declare-fun x1060 () Bool)
(declare-fun x59 () Real)
(declare-fun x2256 () Bool)
(declare-fun x3991 () Real)
(declare-fun x3544 () Real)
(declare-fun x3739 () x2506)
(declare-fun x3296 () x2506)
(declare-fun x4484 () Real)
(declare-fun x1525 () Real)
(declare-fun x3053 () Real)
(declare-fun x4392 () Bool)
(declare-fun x4956 () Real)
(declare-fun x847 () Real)
(declare-fun x3492 () x2506)
(declare-fun x3025 () Real)
(declare-fun x2402 () Real)
(declare-fun x3271 () Real)
(declare-fun x4179 (Real) Real)
(declare-fun x2944 () Real)
(declare-fun x2430 () Real)
(declare-fun x743 () Bool)
(declare-fun x2529 () Bool)
(declare-fun x4650 () Real)
(declare-fun x3284 () Real)
(declare-fun x563 () Bool)
(declare-fun x4053 () Real)
(declare-fun x2630 () Bool)
(declare-fun x173 () Real)
(declare-fun x3906 () x2506)
(declare-fun x2711 () Real)
(declare-fun x2466 () Real)
(declare-fun x4046 () x2506)
(declare-fun x5098 () Real)
(declare-fun x751 () Bool)
(declare-fun x4012 () Bool)
(declare-fun x3352 () Real)
(declare-fun x532 () Bool)
(declare-fun x796 () Bool)
(declare-fun x3728 () Real)
(declare-fun x1961 () Bool)
(declare-fun x822 () Real)
(declare-fun x3411 () x2506)
(declare-fun x5001 () Real)
(declare-fun x2132 () Real)
(declare-fun x2785 () Real)
(declare-fun x4748 () Bool)
(declare-fun x1865 () Real)
(declare-fun x3598 () Bool)
(declare-fun x530 () Real)
(declare-fun x119 () Bool)
(declare-fun x1950 () Real)
(declare-fun x763 (Real) Real)
(declare-fun x3833 (Real) Real)
(declare-fun x2089 () Bool)
(declare-fun x2149 () Real)
(declare-fun x1792 () Real)
(declare-fun x701 () Real)
(declare-fun x4364 () Real)
(declare-fun x4227 () Real)
(declare-fun x3458 () Bool)
(declare-fun x1307 () Real)
(declare-fun x4694 () Real)
(declare-fun x4185 () Bool)
(declare-fun x1357 () Real)
(declare-fun x3993 () Real)
(declare-fun x1607 () Bool)
(declare-fun x305 () Real)
(declare-fun x3382 () Real)
(declare-fun x3117 () x2506)
(declare-fun x2563 () Real)
(declare-fun x5230 () Bool)
(declare-fun x2265 () x2506)
(declare-fun x50 () Real)
(declare-fun x770 () Real)
(declare-fun x778 () Real)
(declare-fun x4544 () Real)
(declare-fun x4450 () Real)
(declare-fun x1197 (Real) Real)
(declare-fun x2547 () Real)
(declare-fun x5195 () Real)
(declare-fun x2896 () Real)
(declare-fun x294 () Real)
(declare-fun x4197 () Bool)
(declare-fun x314 () Real)
(declare-fun x3764 () Real)
(declare-fun x1377 (Real) Real)
(declare-fun x1255 () Real)
(declare-fun x384 () Real)
(declare-fun x4178 () Bool)
(declare-fun x5158 (Real) Real)
(declare-fun x2236 () Real)
(declare-fun x2169 () Real)
(declare-fun x4726 () Bool)
(declare-fun x3556 (Real) Real)
(declare-fun x232 () Real)
(declare-fun x1497 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x950 () Real)
(declare-fun x853 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x1923 () Real)
(declare-fun x1077 () Bool)
(declare-fun x1383 () Real)
(declare-fun x248 () Real)
(declare-fun x1521 () Real)
(declare-fun x654 () Real)
(declare-fun x3637 () Real)
(declare-fun x3692 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x3726 () x2506)
(declare-fun x574 () Bool)
(declare-fun x3232 () Real)
(declare-fun x2495 () Real)
(declare-fun x97 () Real)
(declare-fun x5065 () Real)
(declare-fun x4700 () Real)
(declare-fun x183 () Real)
(declare-fun x2732 () Real)
(declare-fun x3980 () Bool)
(declare-fun x4808 () Real)
(declare-fun x4288 () Real)
(declare-fun x160 () Real)
(declare-fun x515 () Real)
(declare-fun x2653 () Real)
(declare-fun x2648 () Bool)
(declare-fun x519 () Real)
(declare-fun x275 () Real)
(declare-fun x2708 () Real)
(declare-fun x4737 () Bool)
(declare-fun x1745 () x2506)
(declare-fun x1062 () Bool)
(declare-fun x1423 () Real)
(declare-fun x3207 () Real)
(declare-fun x4939 (Real) Real)
(declare-fun x5222 () Real)
(declare-fun x2537 () Real)
(declare-fun x1869 () Real)
(declare-fun x68 () Bool)
(declare-fun x4519 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x4231 () Real)
(declare-fun x728 () Bool)
(declare-fun x4618 () Real)
(declare-fun x2887 () x2506)
(declare-fun x25 () Real)
(declare-fun x3154 () x2506)
(declare-fun x3112 () Bool)
(declare-fun x3256 () Real)
(declare-fun x254 (x2506) Real)
(declare-fun x1209 (Real) Real)
(declare-fun x3226 () Real)
(declare-fun x4960 () Bool)
(declare-fun x834 () Real)
(declare-fun x989 () Real)
(declare-fun x213 () Real)
(declare-fun x3878 () Bool)
(declare-fun x5050 () Real)
(declare-fun x4156 () Real)
(declare-fun x4744 () Real)
(declare-fun x3174 () Real)
(declare-fun x1789 () x2506)
(declare-fun x2143 () Real)
(declare-fun x5229 () Bool)
(declare-fun x661 () Bool)
(declare-fun x3969 () Bool)
(declare-fun x3429 () Bool)
(declare-fun x49 () Real)
(declare-fun x4405 () Bool)
(declare-fun x2816 () x2506)
(declare-fun x2717 () Bool)
(declare-fun x3590 () Real)
(declare-fun x4517 () Real)
(declare-fun x927 () Real)
(declare-fun x4217 () Real)
(declare-fun x3962 () Bool)
(declare-fun x4839 () Bool)
(declare-fun x788 () Bool)
(declare-fun x5091 () Bool)
(declare-fun x4538 () Real)
(declare-fun x484 () Real)
(declare-fun x1058 () Real)
(declare-fun x3794 () x2506)
(declare-fun x212 () Real)
(declare-fun x3096 () Real)
(declare-fun x4314 (x2506) Real)
(declare-fun x4958 () Real)
(declare-fun x5248 () Real)
(declare-fun x350 () Real)
(declare-fun x850 () Real)
(declare-fun x4872 () Real)
(declare-fun x4186 () Real)
(declare-fun x501 () Real)
(declare-fun x579 () Real)
(declare-fun x1183 () Real)
(declare-fun x1896 () Bool)
(declare-fun x3603 (x2506) Real)
(declare-fun x3230 () Real)
(declare-fun x2211 () Real)
(declare-fun x695 () x2506)
(declare-fun x1542 () x2506)
(declare-fun x3733 () Real)
(declare-fun x4241 () Real)
(declare-fun x1691 () Real)
(declare-fun x4242 () Real)
(declare-fun x1580 () Real)
(declare-fun x1219 () Real)
(declare-fun x394 () Bool)
(declare-fun x576 () Bool)
(declare-fun x4877 () Real)
(declare-fun x2442 () Real)
(declare-fun x2598 () Real)
(declare-fun x4318 () Bool)
(declare-fun x3864 () Real)
(declare-fun x429 () x2506)
(declare-fun x4323 () Bool)
(declare-fun x792 () Bool)
(declare-fun x2809 () Real)
(declare-fun x3436 () Real)
(declare-fun x3326 () Real)
(declare-fun x1804 () Bool)
(declare-fun x3714 () Real)
(declare-fun x1656 () Bool)
(declare-fun x974 () Real)
(declare-fun x92 () Bool)
(declare-fun x3998 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x1801 () Real)
(declare-fun x404 () Bool)
(declare-fun x325 () Real)
(declare-fun x3141 () Real)
(declare-fun x1253 () Real)
(declare-fun x3114 () Real)
(declare-fun x4249 () Real)
(declare-fun x260 () Real)
(declare-fun x4336 () Bool)
(declare-fun x5181 () Bool)
(declare-fun x3224 () Bool)
(declare-fun x3144 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x5217 () Real)
(declare-fun x1649 () Real)
(declare-fun x1818 () Real)
(declare-fun x4116 () Real)
(declare-fun x3139 () x2506)
(declare-fun x2976 () Real)
(declare-fun x3892 () Real)
(declare-fun x1182 () Real)
(declare-fun x2525 () Real)
(declare-fun x4743 (Real Real) Real)
(declare-fun x883 () Real)
(declare-fun x1673 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x3824 () Real)
(declare-fun x5258 () Real)
(declare-fun x4922 () Real)
(declare-fun x3841 () Real)
(declare-fun x2791 () Bool)
(declare-fun x2148 () Real)
(declare-fun x164 () Bool)
(declare-fun x877 () Real)
(declare-fun x3778 () Real)
(declare-fun x5170 () Real)
(declare-fun x2792 () Bool)
(declare-fun x2543 () Real)
(declare-fun x1733 () Real)
(declare-fun x1290 () Bool)
(declare-fun x4087 () Real)
(declare-fun x2033 () x2506)
(declare-fun x2393 () Real)
(declare-fun x3763 () Real)
(declare-fun x3557 () Bool)
(declare-fun x4878 () Real)
(declare-fun x2067 () Real)
(declare-fun x3218 () Bool)
(declare-fun x309 () x2506)
(declare-fun x43 () Bool)
(declare-fun x372 () Bool)
(declare-fun x5081 () Real)
(declare-fun x1448 (Real) Real)
(declare-fun x2049 () Real)
(declare-fun x2709 () Real)
(declare-fun x3009 () Real)
(declare-fun x2078 () Real)
(declare-fun x4919 () Real)
(declare-fun x121 () Bool)
(declare-fun x1962 () Real)
(declare-fun x2763 () Real)
(declare-fun x5055 () x2506)
(declare-fun x3425 () Bool)
(declare-fun x645 () Real)
(declare-fun x2445 (Real) Real)
(declare-fun x1437 () Bool)
(declare-fun x5005 () Real)
(declare-fun x3088 () Real)
(declare-fun x134 () Real)
(declare-fun x2879 () Real)
(declare-fun x2806 () Real)
(declare-fun x3709 () Real)
(declare-fun x5063 () Bool)
(declare-fun x5239 () Real)
(declare-fun x1709 () Real)
(declare-fun x3115 () Real)
(declare-fun x3538 () Real)
(declare-fun x1412 () Bool)
(declare-fun x2961 () Real)
(declare-fun x2353 () Real)
(declare-fun x2020 (Real) Real)
(declare-fun x5144 () Bool)
(declare-fun x5198 () Real)
(declare-fun x2165 () Real)
(declare-fun x4014 () Real)
(declare-fun x1930 () Real)
(declare-fun x4910 () Real)
(declare-fun x1157 () Real)
(declare-fun x1011 () Real)
(declare-fun x723 () Real)
(declare-fun x3050 () x2506)
(declare-fun x1908 () Real)
(declare-fun x2331 () Real)
(declare-fun x295 () Real)
(declare-fun x4165 () Bool)
(declare-fun x2435 () Bool)
(declare-fun x206 () Real)
(declare-fun x2040 () Bool)
(declare-fun x226 () Real)
(declare-fun x1662 () Real)
(declare-fun x463 () x2506)
(declare-fun x5245 () Real)
(declare-fun x4096 () Bool)
(declare-fun x2919 () Real)
(declare-fun x1545 () Real)
(declare-fun x754 (Real) Real)
(declare-fun x4530 () Real)
(declare-fun x4313 () Real)
(declare-fun x3412 () Real)
(declare-fun x2451 () Real)
(declare-fun x531 (Real) Real)
(declare-fun x2237 () Bool)
(declare-fun x3404 () Real)
(declare-fun x1079 (x2506) Real)
(declare-fun x505 () Bool)
(declare-fun x397 (Real) Real)
(declare-fun x5169 () Real)
(declare-fun x1533 (Real) Real)
(declare-fun x5009 () Real)
(declare-fun x3427 () Bool)
(declare-fun x1555 () Real)
(declare-fun x4842 () Real)
(declare-fun x1926 () Real)
(declare-fun x1083 () Bool)
(declare-fun x436 () Bool)
(declare-fun x5051 () Real)
(declare-fun x2928 () Bool)
(declare-fun x520 () Bool)
(declare-fun x2870 (Real) Real)
(declare-fun x3125 () Bool)
(declare-fun x2191 () Real)
(declare-fun x231 () Real)
(declare-fun x2582 () Bool)
(declare-fun x2135 () Real)
(declare-fun x4995 () Real)
(declare-fun x664 () Bool)
(declare-fun x2321 () Real)
(declare-fun x3612 () Real)
(declare-fun x4550 () Real)
(declare-fun x2835 () Real)
(declare-fun x156 () Real)
(declare-fun x2171 (Real) Real)
(declare-fun x1264 () Real)
(declare-fun x825 () Bool)
(declare-fun x3647 () Real)
(declare-fun x1326 () x2506)
(declare-fun x617 () Bool)
(declare-fun x2729 () Real)
(declare-fun x2950 () Real)
(declare-fun x1769 () Real)
(declare-fun x1127 () Real)
(declare-fun x2516 () Bool)
(declare-fun x2450 () Real)
(declare-fun x185 () x2506)
(declare-fun x286 () Real)
(declare-fun x508 () Bool)
(declare-fun x2517 () Bool)
(declare-fun x5220 () Real)
(declare-fun x4908 () Real)
(declare-fun x4396 () Real)
(declare-fun x2649 () Bool)
(declare-fun x4491 () Bool)
(declare-fun x795 () Bool)
(declare-fun x3820 () Real)
(declare-fun x1805 () Bool)
(declare-fun x5064 () Real)
(declare-fun x3926 () Real)
(declare-fun x2621 () Real)
(declare-fun x1813 () Bool)
(declare-fun x4040 () Real)
(declare-fun x2219 () Real)
(declare-fun x4352 () Bool)
(declare-fun x3690 () Real)
(declare-fun x2150 () Bool)
(declare-fun x240 (Real) Real)
(declare-fun x1963 () Real)
(declare-fun x3394 () Real)
(declare-fun x3767 () Real)
(declare-fun x3541 () Bool)
(declare-fun x2118 () Real)
(declare-fun x1981 () Real)
(declare-fun x178 () x2506)
(declare-fun x4400 () Bool)
(declare-fun x1105 () Real)
(declare-fun x923 () Real)
(declare-fun x242 () Bool)
(declare-fun x5200 () Bool)
(declare-fun x3536 () x2506)
(declare-fun x1033 () Bool)
(declare-fun x3996 () Real)
(declare-fun x5108 () Real)
(declare-fun x3 () Real)
(declare-fun x1840 () Bool)
(declare-fun x18 () Real)
(declare-fun x3854 () Bool)
(declare-fun x3745 () Real)
(declare-fun x3654 () Real)
(declare-fun x2828 (Real) Real)
(declare-fun x4613 () Bool)
(declare-fun x4714 () Real)
(declare-fun x1567 () Bool)
(declare-fun x428 () Real)
(declare-fun x2320 () Real)
(declare-fun x4275 () Real)
(declare-fun x2441 () Real)
(declare-fun x2704 () Real)
(declare-fun x1668 () Real)
(declare-fun x3757 () Bool)
(declare-fun x471 () Bool)
(declare-fun x4657 () Bool)
(declare-fun x458 () Real)
(declare-fun x956 () Real)
(declare-fun x1933 () Real)
(declare-fun x2050 () Real)
(declare-fun x12 () Real)
(declare-fun x1189 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x5015 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x1743 () Real)
(declare-fun x349 () Bool)
(declare-fun x3316 () Bool)
(declare-fun x37 () Real)
(declare-fun x141 () Real)
(declare-fun x4783 () Real)
(declare-fun x2388 () Bool)
(declare-fun x3186 () Real)
(declare-fun x474 () x2506)
(declare-fun x2258 () Real)
(declare-fun x1811 () Bool)
(declare-fun x4791 (Real) Real)
(declare-fun x2687 () Bool)
(declare-fun x4974 () Real)
(declare-fun x3907 () Real)
(declare-fun x1133 () Real)
(declare-fun x2446 () Real)
(declare-fun x2206 () Real)
(declare-fun x4391 () Real)
(declare-fun x2172 () Real)
(declare-fun x2699 () Real)
(declare-fun x4407 () Bool)
(declare-fun x30 () Bool)
(declare-fun x2304 () Real)
(declare-fun x5156 () Bool)
(declare-fun x4101 () Real)
(declare-fun x4459 () Real)
(declare-fun x4359 () Bool)
(declare-fun x1021 () Real)
(declare-fun x435 () Real)
(declare-fun x375 () Real)
(declare-fun x586 () Real)
(declare-fun x3848 () Real)
(declare-fun x2866 () Real)
(declare-fun x4739 () Bool)
(declare-fun x2085 () Real)
(declare-fun x2414 () Real)
(declare-fun x1610 () Real)
(declare-fun x3122 () Real)
(declare-fun x410 () Real)
(declare-fun x3190 () Bool)
(declare-fun x1249 (Real) Real)
(declare-fun x3535 () Bool)
(declare-fun x4567 () Real)
(declare-fun x1544 () Real)
(declare-fun x1952 () Real)
(declare-fun x2344 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x4875 () x2506)
(declare-fun x5004 () Real)
(declare-fun x5226 () Real)
(declare-fun x4961 (x2506) Real)
(declare-fun x1671 () Real)
(declare-fun x3579 (Real) Real)
(declare-fun x5150 () Real)
(declare-fun x2195 () Real)
(declare-fun x4675 () Real)
(declare-fun x766 () Real)
(declare-fun x3195 () Real)
(declare-fun x3069 () Bool)
(declare-fun x94 () Real)
(declare-fun x4868 () Real)
(declare-fun x5206 () Bool)
(declare-fun x3937 () Real)
(declare-fun x3735 () Real)
(declare-fun x2793 () Real)
(declare-fun x1468 () Real)
(declare-fun x4063 () Real)
(declare-fun x3092 () Real)
(declare-fun x4640 () Real)
(declare-fun x3386 () Bool)
(declare-fun x5223 () Bool)
(declare-fun x899 () Bool)
(declare-fun x1164 () Real)
(declare-fun x1104 () x2506)
(declare-fun x3913 () Real)
(declare-fun x1195 () Real)
(declare-fun x1882 () Bool)
(declare-fun x2761 () Real)
(declare-fun x4098 () Real)
(declare-fun x737 () Real)
(declare-fun x3228 () Real)
(declare-fun x4992 () Bool)
(declare-fun x3242 () Real)
(declare-fun x1954 () Real)
(declare-fun x4454 () Bool)
(declare-fun x2400 () Real)
(declare-fun x369 () Real)
(declare-fun x1672 () Real)
(declare-fun x5023 () Real)
(declare-fun x383 () x2506)
(declare-fun x3591 () Real)
(declare-fun x3402 () Real)
(declare-fun x559 () Real)
(declare-fun x1485 (Real) Real)
(declare-fun x4306 () Real)
(declare-fun x5040 () Real)
(declare-fun x1860 () Real)
(declare-fun x3161 () x2506)
(declare-fun x3936 () Real)
(declare-fun x159 () Real)
(declare-fun x1286 () Bool)
(declare-fun x3406 () Real)
(declare-fun x4317 () Real)
(declare-fun x2715 () Bool)
(declare-fun x2356 () Bool)
(declare-fun x1817 () Real)
(declare-fun x3055 () Real)
(declare-fun x338 () Real)
(declare-fun x5027 () Real)
(declare-fun x3362 () Bool)
(declare-fun x2603 () Real)
(declare-fun x2772 () Real)
(declare-fun x2542 () Real)
(declare-fun x584 () Real)
(declare-fun x4083 () Real)
(declare-fun x2996 () Bool)
(declare-fun x3576 () Real)
(declare-fun x5003 () Bool)
(declare-fun x238 () Real)
(declare-fun x4964 () Real)
(declare-fun x1816 () Real)
(declare-fun x3293 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x1135 () Real)
(declare-fun x4416 () Real)
(declare-fun x776 () Bool)
(declare-fun x1780 () Real)
(declare-fun x4281 () Real)
(declare-fun x2003 () x2506)
(declare-fun x176 () Bool)
(declare-fun x5233 () x2506)
(declare-fun x2160 () Real)
(declare-fun x3882 () Real)
(declare-fun x1892 () Real)
(declare-fun x1657 () Real)
(declare-fun x781 () Real)
(declare-fun x14 (Real) Real)
(declare-fun x2139 () Real)
(declare-fun x4488 () Bool)
(declare-fun x2564 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x2364 () Real)
(declare-fun x4795 () Bool)
(declare-fun x4656 () Real)
(declare-fun x4397 () Bool)
(declare-fun x1411 () x2506)
(declare-fun x4495 (x2506) Real)
(declare-fun x4936 () Real)
(declare-fun x3914 () Real)
(declare-fun x214 () Bool)
(declare-fun x3021 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x2399 () Real)
(declare-fun x7 () Real)
(declare-fun x1779 () Real)
(declare-fun x1683 () Real)
(declare-fun x4013 () Real)
(declare-fun x1425 () Real)
(declare-fun x3202 () Real)
(declare-fun x326 (Real) Real)
(declare-fun x2765 () Real)
(declare-fun x4408 () Bool)
(declare-fun x2842 () Real)
(declare-fun x1172 () Real)
(declare-fun x966 () Real)
(declare-fun x3997 () Real)
(declare-fun x810 () Real)
(declare-fun x3078 () Real)
(declare-fun x566 () Real)
(declare-fun x4411 () Bool)
(declare-fun x411 () Real)
(declare-fun x848 () Bool)
(declare-fun x3465 () Real)
(declare-fun x1919 () Bool)
(declare-fun x3915 () Real)
(declare-fun x4901 () Real)
(declare-fun x4572 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x2347 () Bool)
(declare-fun x4859 () Real)
(declare-fun x1026 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x533 () Real)
(declare-fun x904 () Real)
(declare-fun x2394 () Real)
(declare-fun x5066 () Bool)
(declare-fun x5033 () Real)
(declare-fun x4851 () Real)
(declare-fun x4233 () Bool)
(declare-fun x2558 () Real)
(declare-fun x3939 () Real)
(declare-fun x1120 () Bool)
(declare-fun x3116 () x2506)
(declare-fun x4807 () Real)
(declare-fun x450 () Real)
(declare-fun x2361 () Real)
(declare-fun x2822 () Real)
(declare-fun x2434 () Real)
(declare-fun x1369 () Real)
(declare-fun x2966 () Real)
(declare-fun x4614 () Bool)
(declare-fun x3806 (Real) Real)
(declare-fun x1966 () Bool)
(declare-fun x2008 () Real)
(declare-fun x3746 () Real)
(declare-fun x775 () Real)
(declare-fun x3311 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x277 () Real)
(declare-fun x4305 () Bool)
(declare-fun x4746 () Real)
(declare-fun x4138 () Bool)
(declare-fun x2587 () Real)
(declare-fun x3551 () Real)
(declare-fun x1621 () Real)
(declare-fun x3149 () Real)
(declare-fun x291 () Real)
(declare-fun x1384 () Real)
(declare-fun x1029 () Real)
(declare-fun x3932 () Real)
(declare-fun x2782 () Real)
(declare-fun x4371 () Real)
(declare-fun x3570 () Bool)
(declare-fun x1964 () Real)
(declare-fun x4223 () x2506)
(declare-fun x844 () Real)
(declare-fun x1666 () Real)
(declare-fun x1773 () Real)
(declare-fun x1861 () Real)
(declare-fun x3456 () Real)
(declare-fun x1651 () Real)
(declare-fun x2760 () Real)
(declare-fun x4504 () Bool)
(declare-fun x4665 () x2506)
(declare-fun x3593 () Bool)
(declare-fun x83 () Real)
(declare-fun x2650 () Real)
(declare-fun x4108 () Bool)
(declare-fun x5021 () Real)
(declare-fun x1853 () Bool)
(declare-fun x3816 () Real)
(declare-fun x2794 () Real)
(declare-fun x2286 () Bool)
(declare-fun x3245 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x653 () Bool)
(declare-fun x4583 () Real)
(declare-fun x125 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x4001 () Bool)
(declare-fun x2665 () Bool)
(declare-fun x3823 () Real)
(declare-fun x328 () Real)
(declare-fun x2669 () Real)
(declare-fun x4482 () Real)
(declare-fun x3331 () Real)
(declare-fun x5038 () Bool)
(declare-fun x3567 () Real)
(declare-fun x2178 () Real)
(declare-fun x4499 () Bool)
(declare-fun x1072 (Real) Real)
(declare-fun x4181 () Real)
(declare-fun x1674 () Real)
(declare-fun x713 () Bool)
(declare-fun x1500 () Real)
(declare-fun x3098 () Real)
(declare-fun x4518 () Bool)
(declare-fun x2247 () Real)
(declare-fun x4234 () Bool)
(declare-fun x3187 () Real)
(declare-fun x481 () Real)
(declare-fun x1025 () Real)
(declare-fun x2778 () Bool)
(declare-fun x4602 () Real)
(declare-fun x1488 () Real)
(declare-fun x399 () Real)
(declare-fun x671 () Real)
(declare-fun x1299 (Real) Real)
(declare-fun x4741 () x2506)
(declare-fun x1444 () x2506)
(declare-fun x4253 () Bool)
(declare-fun x3432 () Real)
(declare-fun x4621 () Real)
(declare-fun x5253 () Real)
(declare-fun x3731 () Real)
(declare-fun x3355 () Real)
(declare-fun x3124 (Real) Real)
(declare-fun x1140 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x3128 () Bool)
(declare-fun x2743 () Real)
(declare-fun x3453 () Bool)
(declare-fun x5093 () Real)
(declare-fun x2982 () x2506)
(declare-fun x3725 () Real)
(declare-fun x3298 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x1184 () Real)
(declare-fun x4691 () Real)
(declare-fun x2618 () x2506)
(declare-fun x151 () Real)
(declare-fun x1069 () Real)
(declare-fun x75 () Bool)
(declare-fun x4841 () Real)
(declare-fun x1493 () Bool)
(declare-fun x1413 () Real)
(declare-fun x147 () Real)
(declare-fun x4016 () Real)
(declare-fun x4661 () Real)
(declare-fun x3220 () Real)
(declare-fun x4302 () Bool)
(declare-fun x3058 () Bool)
(declare-fun x5185 () Real)
(declare-fun x4037 () Real)
(declare-fun x3669 () Real)
(declare-fun x567 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x1106 () Real)
(declare-fun x363 () Bool)
(declare-fun x444 () Real)
(declare-fun x64 () Bool)
(declare-fun x4350 () Real)
(declare-fun x1889 () Real)
(declare-fun x4176 () Real)
(declare-fun x3366 () x2506)
(declare-fun x446 () Real)
(declare-fun x245 (Real) Real)
(declare-fun x2682 () Bool)
(declare-fun x1187 (Real) Real)
(declare-fun x977 (Real) Real)
(declare-fun x1650 () Real)
(declare-fun x1711 () Bool)
(declare-fun x4132 () x2506)
(declare-fun x4057 () x2506)
(declare-fun x4689 () Bool)
(declare-fun x4375 () Bool)
(declare-fun x851 () Bool)
(declare-fun x3106 () Real)
(declare-fun x2960 () Real)
(declare-fun x5067 () Real)
(declare-fun x760 () Bool)
(declare-fun x3582 () Bool)
(declare-fun x1300 () Real)
(declare-fun x400 () Real)
(declare-fun x2224 () Real)
(declare-fun x165 () Bool)
(declare-fun x1178 () Real)
(declare-fun x3562 () Real)
(declare-fun x1410 () Bool)
(declare-fun x52 () x2506)
(declare-fun x1051 () Real)
(declare-fun x1590 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x2836 () Real)
(declare-fun x718 () Real)
(declare-fun x1275 () Real)
(declare-fun x1310 () Real)
(declare-fun x3905 () Real)
(declare-fun x3428 () Bool)
(declare-fun x1946 () Real)
(declare-fun x3759 () Real)
(declare-fun x541 () Bool)
(declare-fun x3995 () x2506)
(declare-fun x2464 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x5024 () Real)
(declare-fun x4967 () Real)
(declare-fun x2954 () Real)
(declare-fun x865 () Real)
(declare-fun x2522 () Bool)
(declare-fun x3870 () Real)
(declare-fun x2292 () Real)
(declare-fun x538 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x2860 () Real)
(declare-fun x6 () Real)
(declare-fun x3633 () Bool)
(declare-fun x4404 () Real)
(declare-fun x465 () Real)
(declare-fun x2532 () Real)
(declare-fun x5061 () Bool)
(declare-fun x4649 () Bool)
(declare-fun x1623 () Real)
(declare-fun x2585 () Bool)
(declare-fun x2934 () Real)
(declare-fun x3014 () Real)
(declare-fun x3138 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x3231 () Real)
(declare-fun x802 () Real)
(declare-fun x1071 () Real)
(declare-fun x1808 () Real)
(declare-fun x3282 () Real)
(declare-fun x2145 () Real)
(declare-fun x2420 () Real)
(declare-fun x2119 () Real)
(declare-fun x44 () Bool)
(declare-fun x4857 () Real)
(declare-fun x2012 () Bool)
(declare-fun x4954 () Bool)
(declare-fun x4236 () Bool)
(declare-fun x2521 () Real)
(declare-fun x5106 () Real)
(declare-fun x857 () Bool)
(declare-fun x2951 () Real)
(declare-fun x2493 () x2506)
(declare-fun x4631 () Real)
(declare-fun x3676 () Real)
(declare-fun x499 () Real)
(declare-fun x2444 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x4192 (Real) Real)
(declare-fun x3548 () Real)
(declare-fun x485 () Real)
(declare-fun x726 () Real)
(declare-fun x2328 () Bool)
(declare-fun x1123 (x2506) Real)
(declare-fun x5238 () Bool)
(declare-fun x4158 () x2506)
(declare-fun x4428 () Bool)
(declare-fun x3834 () Bool)
(declare-fun x4215 () Bool)
(declare-fun x4573 () Real)
(declare-fun x1414 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x3837 () Bool)
(declare-fun x2271 () Real)
(declare-fun x4879 () Real)
(declare-fun x4474 () Real)
(declare-fun x3768 (Real) Real)
(declare-fun x3499 () Real)
(declare-fun x3711 () Bool)
(declare-fun x712 () Bool)
(declare-fun x1100 () x2506)
(declare-fun x1272 () Bool)
(declare-fun x1910 () Real)
(declare-fun x1548 () Real)
(declare-fun x3006 () Real)
(declare-fun x717 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x4134 () Real)
(declare-fun x2600 () Bool)
(declare-fun x3963 () Bool)
(declare-fun x3424 (Real) x2506)
(declare-fun x2164 () x2506)
(declare-fun x312 (Real) Real)
(declare-fun x3291 () Bool)
(declare-fun x2920 () Real)
(declare-fun x854 () Bool)
(declare-fun x1168 () Real)
(declare-fun x2745 () Real)
(declare-fun x3638 () Real)
(declare-fun x4782 () Real)
(declare-fun x2212 () Bool)
(declare-fun x378 () Real)
(declare-fun x941 () Bool)
(declare-fun x3814 () Real)
(declare-fun x2081 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x4457 () Real)
(declare-fun x655 () Real)
(declare-fun x4638 () Real)
(declare-fun x2963 () Real)
(declare-fun x2071 () Real)
(declare-fun x2865 () x2506)
(declare-fun x949 () x2506)
(declare-fun x3233 () Real)
(declare-fun x3498 () Real)
(declare-fun x2391 () Real)
(declare-fun x3042 () Bool)
(declare-fun x1842 () Real)
(declare-fun x1101 () Real)
(declare-fun x663 () Bool)
(declare-fun x3543 () x2506)
(declare-fun x1462 () Real)
(declare-fun x1603 () Real)
(declare-fun x2967 () Bool)
(declare-fun x5025 (Real) Real)
(declare-fun x2024 () Bool)
(declare-fun x2168 () Bool)
(declare-fun x2590 () Bool)
(declare-fun x2116 () Bool)
(declare-fun x4713 () Bool)
(declare-fun x1329 () Real)
(declare-fun x4681 () Real)
(declare-fun x355 () Bool)
(declare-fun x4673 () Real)
(declare-fun x838 () Bool)
(declare-fun x780 () Real)
(declare-fun x3945 () Bool)
(declare-fun x2216 () Real)
(declare-fun x846 () Real)
(declare-fun x2120 () Real)
(declare-fun x3901 () Real)
(declare-fun x3266 (Real) Real)
(declare-fun x1679 () Bool)
(declare-fun x3076 () Real)
(declare-fun x1190 () Real)
(declare-fun x2194 () Bool)
(declare-fun x84 () Bool)
(declare-fun x1457 () Real)
(declare-fun x4327 () Real)
(declare-fun x246 () Real)
(declare-fun x4380 () Real)
(declare-fun x2575 () Bool)
(declare-fun x2710 () Real)
(declare-fun x3727 () Real)
(declare-fun x3678 () Real)
(declare-fun x2326 () Real)
(declare-fun x4617 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x2427 () Real)
(declare-fun x4921 () Bool)
(declare-fun x4756 () Real)
(declare-fun x2895 () Real)
(declare-fun x346 () Real)
(declare-fun x637 () Bool)
(declare-fun x4480 () x2506)
(declare-fun x1374 () x2506)
(declare-fun x5086 () Bool)
(declare-fun x4347 () Bool)
(declare-fun x1023 () Real)
(declare-fun x3539 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x3043 () Real)
(declare-fun x2696 () Real)
(declare-fun x2395 () Real)
(declare-fun x4080 () Real)
(declare-fun x2949 () Real)
(declare-fun x2658 () Bool)
(declare-fun x3927 () Real)
(declare-fun x3619 () Real)
(declare-fun x4104 () Real)
(declare-fun x1273 () Bool)
(declare-fun x4263 () Real)
(declare-fun x4973 () Real)
(declare-fun x2346 () Real)
(declare-fun x1341 () Bool)
(declare-fun x4585 () Real)
(declare-fun x205 () Real)
(declare-fun x1109 () Bool)
(declare-fun x2114 () Real)
(declare-fun x860 () Real)
(declare-fun x2253 () Real)
(declare-fun x282 () Bool)
(declare-fun x2799 () Real)
(declare-fun x1915 () Bool)
(declare-fun x188 () Real)
(declare-fun x4646 () Real)
(declare-fun x331 () Real)
(declare-fun x3630 () Bool)
(declare-fun x819 () Real)
(declare-fun x2366 () Real)
(declare-fun x5014 () Bool)
(declare-fun x227 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x3716 () Real)
(declare-fun x789 () Bool)
(declare-fun x3986 () Bool)
(declare-fun x1887 () Real)
(declare-fun x2741 () Bool)
(declare-fun x4064 () Real)
(declare-fun x3401 () Real)
(declare-fun x632 () Real)
(declare-fun x1363 () Real)
(declare-fun x4996 () Real)
(declare-fun x2629 () Real)
(declare-fun x4430 () x2506)
(declare-fun x3339 () Bool)
(declare-fun x167 () Real)
(declare-fun x4282 () Real)
(declare-fun x3494 () Bool)
(declare-fun x2244 () Real)
(declare-fun x5197 () Real)
(declare-fun x882 () Real)
(declare-fun x1156 () Real)
(declare-fun x762 () Bool)
(declare-fun x1361 (Real) Real)
(declare-fun x2968 () Bool)
(declare-fun x3420 () Real)
(declare-fun x2762 () Real)
(declare-fun x4903 () Real)
(declare-fun x4793 () Real)
(declare-fun x1957 () Real)
(declare-fun x433 () Real)
(declare-fun x4439 () Bool)
(declare-fun x5075 () Real)
(declare-fun x522 () Real)
(declare-fun x2659 () Real)
(declare-fun x5070 () Real)
(declare-fun x2530 () Real)
(declare-fun x4316 (Real) Real)
(declare-fun x4054 () Real)
(declare-fun x3722 () Bool)
(declare-fun x782 () Real)
(declare-fun x3046 () Real)
(declare-fun x4784 () Real)
(declare-fun x1687 () Real)
(declare-fun x852 () Bool)
(declare-fun x3652 () Real)
(declare-fun x3027 () Real)
(declare-fun x1063 () Bool)
(declare-fun x4398 () Real)
(declare-fun x2810 () Real)
(declare-fun x4114 () Real)
(declare-fun x3959 () Real)
(declare-fun x3943 () Bool)
(declare-fun x604 () Real)
(declare-fun x2058 () Real)
(declare-fun x4620 () Real)
(declare-fun x588 () Bool)
(declare-fun x89 () Real)
(declare-fun x3108 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x1618 () Real)
(declare-fun x4172 () Bool)
(declare-fun x2334 () Real)
(declare-fun x1004 () Real)
(declare-fun x2052 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x3899 () Real)
(declare-fun x2460 () x2506)
(declare-fun x2808 () Real)
(declare-fun x878 () Real)
(declare-fun x1015 () Real)
(declare-fun x684 () Real)
(declare-fun x943 () Bool)
(declare-fun x2899 () Real)
(declare-fun x3212 () Real)
(declare-fun x1002 () Real)
(declare-fun x2061 () Bool)
(declare-fun x5228 () Bool)
(declare-fun x1340 () x2506)
(declare-fun x182 () Real)
(declare-fun x1556 () Bool)
(declare-fun x2983 () Real)
(declare-fun x3797 () Real)
(declare-fun x4122 () x2506)
(declare-fun x1447 () Bool)
(declare-fun x187 () Real)
(declare-fun x3756 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x3290 () Real)
(declare-fun x252 () Real)
(declare-fun x5056 () Real)
(declare-fun x5010 () Bool)
(declare-fun x258 () Real)
(declare-fun x1597 () Real)
(declare-fun x3127 () Bool)
(declare-fun x1732 () Real)
(declare-fun x1430 () x2506)
(declare-fun x3577 () Bool)
(declare-fun x3208 () Bool)
(declare-fun x4240 () Real)
(declare-fun x3584 () Bool)
(declare-fun x4110 () Bool)
(declare-fun x2910 () Real)
(declare-fun x2207 () Real)
(declare-fun x1301 () Real)
(declare-fun x900 () Bool)
(declare-fun x2363 () Real)
(declare-fun x2261 () Bool)
(declare-fun x638 () Real)
(declare-fun x826 () x2506)
(declare-fun x1022 () Real)
(declare-fun x1611 () Real)
(declare-fun x5119 () Real)
(declare-fun x2780 () Bool)
(declare-fun x3079 () Real)
(declare-fun x1870 () Real)
(declare-fun x3585 () Bool)
(declare-fun x2891 () Real)
(declare-fun x1089 () Real)
(declare-fun x3084 () Real)
(declare-fun x1684 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x1692 () Real)
(declare-fun x111 () Real)
(declare-fun x259 (Real) Real)
(declare-fun x1068 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x2176 () Real)
(declare-fun x3941 () Real)
(declare-fun x2959 () Bool)
(declare-fun x732 () Bool)
(declare-fun x1602 () Real)
(declare-fun x4477 (Real) Real)
(declare-fun x144 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x3682 () Real)
(declare-fun x5116 () Real)
(declare-fun x5236 () Real)
(declare-fun x3750 () Real)
(declare-fun x3001 () Real)
(declare-fun x4353 () Real)
(declare-fun x4575 () Real)
(declare-fun x1612 () Bool)
(declare-fun x4686 () Real)
(declare-fun x4370 () Real)
(declare-fun x735 () x2506)
(declare-fun x1726 () Bool)
(declare-fun x2938 () Real)
(declare-fun x303 () Bool)
(declare-fun x3244 () Real)
(declare-fun x2299 () Bool)
(declare-fun x3796 () Real)
(declare-fun x1434 () Real)
(declare-fun x174 () Bool)
(declare-fun x689 () Bool)
(declare-fun x2957 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x4747 () Bool)
(declare-fun x1355 () Real)
(declare-fun x4912 () x2506)
(declare-fun x1571 () Real)
(declare-fun x4652 () Bool)
(declare-fun x3421 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x1768 () Real)
(declare-fun x3531 () Real)
(declare-fun x2107 () Real)
(declare-fun x1766 () Real)
(declare-fun x869 () Real)
(declare-fun x2719 () Bool)
(declare-fun x2056 () Real)
(declare-fun x1772 () Real)
(declare-fun x3387 () x2506)
(declare-fun x1643 () Real)
(declare-fun x1246 () Real)
(declare-fun x3571 () Real)
(declare-fun x549 () Real)
(declare-fun x5084 () Real)
(declare-fun x720 () Real)
(declare-fun x2857 () Bool)
(declare-fun x5131 () Real)
(declare-fun x2468 () Real)
(declare-fun x4022 () Real)
(declare-fun x2554 () Real)
(declare-fun x3827 () Real)
(declare-fun x3887 () Real)
(declare-fun x4962 () Real)
(declare-fun x4425 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x2873 () Real)
(declare-fun x5117 () Real)
(declare-fun x965 () Bool)
(declare-fun x4440 () Bool)
(declare-fun x324 () Real)
(declare-fun x3163 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x4826 () Bool)
(declare-fun x889 () Real)
(declare-fun x1336 () Bool)
(declare-fun x179 (Real) Real)
(declare-fun x1150 () Bool)
(declare-fun x3747 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x283 () Bool)
(declare-fun x4094 () Real)
(declare-fun x862 () Bool)
(declare-fun x2848 () Bool)
(declare-fun x1399 () Real)
(declare-fun x4735 () Bool)
(declare-fun x103 () Real)
(declare-fun x388 () x2506)
(declare-fun x4760 () Bool)
(declare-fun x1254 (Real) Real)
(declare-fun x4125 () Bool)
(declare-fun x5130 () Bool)
(declare-fun x4669 () Real)
(declare-fun x4852 () Bool)
(declare-fun x2801 () Real)
(declare-fun x1940 () Real)
(declare-fun x5057 () Real)
(declare-fun x4706 () Real)
(declare-fun x3251 () Real)
(declare-fun x4446 () Real)
(declare-fun x3262 () Real)
(declare-fun x867 () Bool)
(declare-fun x27 () Real)
(declare-fun x2153 () Real)
(declare-fun x3758 () x2506)
(declare-fun x4765 () Real)
(declare-fun x1880 () Real)
(declare-fun x379 () Bool)
(declare-fun x4471 () Bool)
(declare-fun x132 () Real)
(declare-fun x4043 () Bool)
(declare-fun x2917 () Real)
(declare-fun x4036 () x2506)
(declare-fun x2083 () Real)
(declare-fun x3672 () Real)
(declare-fun x2288 () Bool)
(declare-fun x1243 () Real)
(declare-fun x4334 () x2506)
(declare-fun x2875 () Real)
(declare-fun x2360 () Real)
(declare-fun x1537 () Real)
(declare-fun x3514 (x2506) Real)
(declare-fun x4840 () Real)
(declare-fun x1358 () Real)
(declare-fun x4972 () Bool)
(declare-fun x2693 () Real)
(declare-fun x4548 () Real)
(declare-fun x4244 () Real)
(declare-fun x1007 () Real)
(declare-fun x3273 () x2506)
(declare-fun x4483 () Bool)
(declare-fun x88 (x2506) Real)
(declare-fun x4476 () Real)
(declare-fun x3572 () Real)
(declare-fun x5007 () Real)
(declare-fun x5177 () Real)
(declare-fun x3238 () Real)
(declare-fun x4232 () Real)
(declare-fun x1960 () Real)
(declare-fun x1435 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x502 () Real)
(declare-fun x1287 () Real)
(declare-fun x3761 () Real)
(declare-fun x5022 () Real)
(declare-fun x2527 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x235 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x4796 () Real)
(declare-fun x3434 () Real)
(declare-fun x23 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x3321 () Real)
(declare-fun x5182 () Real)
(declare-fun x2939 () Bool)
(declare-fun x2231 () Real)
(declare-fun x3258 () Bool)
(declare-fun x3580 (Real) Real)
(declare-fun x646 () Real)
(declare-fun x3810 () Real)
(declare-fun x791 () Bool)
(declare-fun x3478 () x2506)
(declare-fun x4597 () Real)
(declare-fun x42 () x2506)
(declare-fun x1019 () Real)
(declare-fun x4645 () Bool)
(declare-fun x1431 () Real)
(declare-fun x4794 () Real)
(declare-fun x2712 () Real)
(declare-fun x1281 () Real)
(declare-fun x4201 () Bool)
(declare-fun x2913 () Real)
(declare-fun x1524 () Bool)
(declare-fun x124 () x2506)
(declare-fun x1991 () Bool)
(declare-fun x4319 () Real)
(declare-fun x2846 () Real)
(declare-fun x3349 () Real)
(declare-fun x3550 (Real) Real)
(declare-fun x2656 () Real)
(declare-fun x1924 () Real)
(declare-fun x4991 () Bool)
(declare-fun x1103 () Real)
(declare-fun x3921 () x2506)
(declare-fun x1111 () Real)
(declare-fun x593 () Real)
(declare-fun x4971 () Bool)
(declare-fun x4680 () Bool)
(declare-fun x4766 () Real)
(declare-fun x4271 () x2506)
(declare-fun x133 () Bool)
(declare-fun x4293 () Bool)
(declare-fun x219 () Real)
(declare-fun x4002 () Real)
(declare-fun x4322 (Real) Real)
(declare-fun x1730 () Real)
(declare-fun x3622 () x2506)
(declare-fun x1581 () Real)
(declare-fun x1843 () Real)
(declare-fun x1078 () Real)
(declare-fun x2257 () Real)
(declare-fun x4251 () Real)
(declare-fun x841 () Real)
(declare-fun x47 () Real)
(declare-fun x5115 () Real)
(declare-fun x495 () Real)
(declare-fun x2241 () Real)
(declare-fun x4010 () Real)
(declare-fun x3574 () Real)
(declare-fun x381 () Real)
(declare-fun x4696 () Real)
(declare-fun x3180 () Bool)
(declare-fun x3825 () Bool)
(declare-fun x4029 () Bool)
(declare-fun x247 (Real) Real)
(declare-fun x3624 () Real)
(declare-fun x4719 () Bool)
(declare-fun x1786 () Real)
(declare-fun x256 () Real)
(declare-fun x129 () Real)
(declare-fun x4230 () Real)
(declare-fun x4221 () Real)
(declare-fun x3045 () x2506)
(declare-fun x2607 () Real)
(declare-fun x4677 () x2506)
(declare-fun x4187 () Real)
(declare-fun x3305 () Real)
(declare-fun x1421 () Real)
(declare-fun x2352 () Real)
(declare-fun x3439 () Real)
(declare-fun x4512 () Real)
(declare-fun x2057 () Real)
(declare-fun x3200 () Real)
(declare-fun x2429 () Real)
(declare-fun x51 () Real)
(declare-fun x2834 () Real)
(declare-fun x2285 () Bool)
(declare-fun x1844 () x2506)
(declare-fun x840 () Real)
(declare-fun x4667 (Real) Real)
(declare-fun x5183 () Bool)
(declare-fun x3264 () Real)
(declare-fun x4848 () Real)
(declare-fun x3786 () x2506)
(declare-fun x1074 (Real) Real)
(declare-fun x431 () x2506)
(declare-fun x5110 () Real)
(declare-fun x2179 () Real)
(declare-fun x1553 () Bool)
(declare-fun x1797 () Real)
(declare-fun x243 () Real)
(declare-fun x3409 () Real)
(declare-fun x3749 () Bool)
(declare-fun x3008 () x2506)
(declare-fun x858 () Real)
(declare-fun x281 () Real)
(declare-fun x3049 (Real) Real)
(declare-fun x157 () Real)
(declare-fun x1351 () Bool)
(declare-fun x3358 () Real)
(declare-fun x1653 () Real)
(declare-fun x107 () Real)
(declare-fun x1445 () Bool)
(declare-fun x114 () Real)
(declare-fun x335 () Real)
(declare-fun x2747 () Bool)
(declare-fun x4514 () Real)
(declare-fun x115 () Real)
(declare-fun x546 () Bool)
(declare-fun x2021 () x2506)
(declare-fun x4557 () Bool)
(declare-fun x1820 () Real)
(declare-fun x1945 () Real)
(declare-fun x4981 () Bool)
(declare-fun x1972 () Real)
(declare-fun x2853 () Real)
(declare-fun x2577 () Real)
(declare-fun x2318 () Bool)
(declare-fun x1806 () Real)
(declare-fun x1084 () x2506)
(declare-fun x3204 () Real)
(declare-fun x3248 () Real)
(declare-fun x605 () Real)
(declare-fun x5155 () Real)
(declare-fun x3307 () Real)
(declare-fun x4219 () Real)
(declare-fun x2431 () Real)
(declare-fun x1959 () Real)
(declare-fun x3338 () Real)
(declare-fun x686 () Real)
(declare-fun x4478 () Real)
(declare-fun x4479 () Real)
(declare-fun x1188 () Bool)
(declare-fun x4163 () Real)
(declare-fun x1479 () Real)
(declare-fun x76 () Real)
(declare-fun x96 () Real)
(declare-fun x1061 () Real)
(declare-fun x5139 () Real)
(declare-fun x3606 () x2506)
(declare-fun x1694 () Real)
(declare-fun x1320 () Real)
(declare-fun x3896 () Real)
(declare-fun x2958 (Real) Real)
(declare-fun x1941 () Real)
(declare-fun x1152 () Real)
(declare-fun x4225 () Real)
(declare-fun x380 () Real)
(declare-fun x4790 () Real)
(declare-fun x4434 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x3285 () x2506)
(declare-fun x3923 () Bool)
(declare-fun x557 () Real)
(declare-fun x2726 () Bool)
(declare-fun x16 () Real)
(declare-fun x3137 (Real) Real)
(declare-fun x708 () Bool)
(declare-fun x665 () Bool)
(declare-fun x710 () Real)
(declare-fun x4636 () Bool)
(declare-fun x320 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x2296 () Real)
(declare-fun x184 () Bool)
(declare-fun x4565 () Bool)
(declare-fun x4915 () Real)
(declare-fun x2492 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x536 () Real)
(declare-fun x979 () x2506)
(declare-fun x1788 () Real)
(declare-fun x2185 () Real)
(declare-fun x2439 () Real)
(declare-fun x1478 () Bool)
(declare-fun x148 () x2506)
(declare-fun x698 () Real)
(declare-fun x2612 () Real)
(declare-fun x4326 () Real)
(declare-fun x3974 () Bool)
(declare-fun x4304 () Bool)
(declare-fun x3380 () Real)
(declare-fun x4145 () Real)
(declare-fun x3012 () Real)
(declare-fun x2925 () Real)
(declare-fun x583 () Real)
(declare-fun x570 () Bool)
(declare-fun x606 () Real)
(declare-fun x3802 () Bool)
(declare-fun x1347 () x2506)
(declare-fun x2561 () Bool)
(declare-fun x2454 () Real)
(declare-fun x3130 () Bool)
(declare-fun x5125 () Real)
(declare-fun x921 () Bool)
(declare-fun x3857 () Real)
(declare-fun x4986 () Real)
(declare-fun x4976 () Real)
(declare-fun x4659 (Real) Real)
(declare-fun x3656 () Real)
(declare-fun x2672 () Real)
(declare-fun x3928 () Real)
(declare-fun x3181 (x2506) Real)
(declare-fun x2789 () Real)
(declare-fun x3170 () Bool)
(declare-fun x3741 () Bool)
(declare-fun x3917 () Real)
(declare-fun x3082 () Real)
(declare-fun x3016 () x2506)
(declare-fun x1024 () Bool)
(declare-fun x3431 () Real)
(declare-fun x4947 () Real)
(declare-fun x1998 () Real)
(declare-fun x4605 () Real)
(declare-fun x100 () Bool)
(declare-fun x451 () Real)
(declare-fun x5032 () Real)
(declare-fun x2851 () x2506)
(declare-fun x2136 () Bool)
(declare-fun x659 (Real) Real)
(declare-fun x3760 () x2506)
(declare-fun x4152 () Bool)
(declare-fun x4257 () Real)
(declare-fun x2837 () Bool)
(declare-fun x459 () Real)
(declare-fun x4026 () Bool)
(declare-fun x1098 () Real)
(declare-fun x3771 () Real)
(declare-fun x4820 () Real)
(declare-fun x2565 () Real)
(declare-fun x4537 () Bool)
(declare-fun x2998 () Real)
(declare-fun x87 () Real)
(declare-fun x4695 () Real)
(declare-fun x2129 () Real)
(declare-fun x2016 (Real) Real)
(declare-fun x3287 () Real)
(declare-fun x4641 () Bool)
(declare-fun x3374 () Bool)
(declare-fun x4184 () Bool)
(declare-fun x901 () Real)
(declare-fun x4969 () Real)
(declare-fun x4906 () Bool)
(declare-fun x542 () Real)
(declare-fun x1356 () Real)
(declare-fun x2624 () Real)
(declare-fun x4107 () Real)
(declare-fun x2511 () Real)
(declare-fun x5089 () Real)
(declare-fun x924 () Real)
(declare-fun x5210 () Real)
(declare-fun x2002 () Real)
(declare-fun x666 () Real)
(declare-fun x4900 () Real)
(declare-fun x3310 () Real)
(declare-fun x2354 () Real)
(declare-fun x270 () Real)
(declare-fun x3217 () Bool)
(declare-fun x1958 () Real)
(declare-fun x293 () Real)
(declare-fun x1600 () Bool)
(declare-fun x4540 (Real) Real)
(declare-fun x3203 () Real)
(declare-fun x4610 () Real)
(declare-fun x1379 (Real) Real)
(declare-fun x3537 () Real)
(declare-fun x2872 () Real)
(declare-fun x2155 () Real)
(declare-fun x3679 () Real)
(declare-fun x3891 () Real)
(declare-fun x4117 () Real)
(declare-fun x3989 () Real)
(declare-fun x1588 () x2506)
(declare-fun x634 () Real)
(declare-fun x395 () Real)
(declare-fun x4372 () Real)
(declare-fun x4131 () Real)
(declare-fun x20 () Real)
(declare-fun x907 () Bool)
(declare-fun x4467 () Real)
(declare-fun x4196 () Bool)
(declare-fun x4711 () Bool)
(declare-fun x5186 () Real)
(declare-fun x1737 () Real)
(declare-fun x1829 () Bool)
(declare-fun x2953 () Real)
(declare-fun x990 (Real) Real)
(declare-fun x2807 () Bool)
(declare-fun x386 () Bool)
(declare-fun x1978 () Real)
(declare-fun x572 () Real)
(declare-fun x4324 () Real)
(declare-fun x5168 () Bool)
(declare-fun x3485 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x2545 () x2506)
(declare-fun x4438 () Real)
(declare-fun x3924 () Real)
(declare-fun x1121 () Real)
(declare-fun x302 () Real)
(declare-fun x5140 () Real)
(declare-fun x90 () Bool)
(declare-fun x5244 () Bool)
(declare-fun x2551 () Real)
(declare-fun x3648 () Real)
(declare-fun x3371 () Bool)
(declare-fun x414 () Real)
(declare-fun x2156 () Real)
(declare-fun x820 () x2506)
(declare-fun x352 () Real)
(declare-fun x3065 () Real)
(declare-fun x4674 () Real)
(declare-fun x3048 () Real)
(declare-fun x511 () Bool)
(declare-fun x1279 () x2506)
(declare-fun x2295 (Real) Real)
(declare-fun x1012 () Bool)
(declare-fun x3712 () Real)
(declare-fun x1203 () Bool)
(declare-fun x1577 () Real)
(declare-fun x2820 () Real)
(declare-fun x890 (x2506) Real)
(declare-fun x675 () Real)
(declare-fun x1131 () Real)
(declare-fun x4925 () Real)
(declare-fun x271 () Real)
(declare-fun x690 () Bool)
(declare-fun x2447 () Real)
(declare-fun x5 () Real)
(declare-fun x736 () Real)
(declare-fun x2781 () Real)
(declare-fun x3057 () Bool)
(declare-fun x4805 () Real)
(declare-fun x1873 () Real)
(declare-fun x1872 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x4771 () Real)
(declare-fun x4458 () Real)
(declare-fun x285 () Real)
(declare-fun x3007 () Real)
(declare-fun x3066 () Real)
(declare-fun x4211 () Real)
(declare-fun x4778 () Bool)
(declare-fun x272 () Real)
(declare-fun x4377 () Bool)
(declare-fun x3815 () Real)
(declare-fun x345 () Real)
(declare-fun x5257 () x2506)
(declare-fun x528 () x2506)
(declare-fun x674 () Real)
(declare-fun x1574 () Bool)
(declare-fun x4509 () Bool)
(declare-fun x953 () Real)
(declare-fun x1535 () Bool)
(declare-fun x558 () Bool)
(declare-fun x3660 () Real)
(declare-fun x5120 () Bool)
(declare-fun x1935 () Real)
(declare-fun x2677 () Real)
(declare-fun x4687 () x2506)
(declare-fun x53 () Bool)
(declare-fun x3705 () Real)
(declare-fun x3041 () Real)
(declare-fun x4987 () x2506)
(declare-fun x2892 () Real)
(declare-fun x55 () Bool)
(declare-fun x3239 () x2506)
(declare-fun x2382 () Bool)
(declare-fun x968 () Real)
(declare-fun x709 () Real)
(declare-fun x1395 (Real) Real)
(declare-fun x2759 () Bool)
(declare-fun x2819 () Real)
(declare-fun x1759 () Real)
(declare-fun x3026 () Real)
(declare-fun x969 () Real)
(declare-fun x2863 () Real)
(declare-fun x1554 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x2991 () Real)
(declare-fun x623 () Real)
(declare-fun x2885 () Real)
(declare-fun x1044 () Real)
(declare-fun x287 () Real)
(declare-fun x1014 () Real)
(declare-fun x4832 () Real)
(declare-fun x5039 () Real)
(declare-fun x764 () Real)
(declare-fun x2609 () Bool)
(declare-fun x601 () Real)
(declare-fun x1956 () Bool)
(declare-fun x2133 () Real)
(declare-fun x687 () Real)
(declare-fun x3700 () Real)
(declare-fun x1406 () Bool)
(declare-fun x4194 () Real)
(declare-fun x171 () Real)
(declare-fun x1367 () Bool)
(declare-fun x4749 () Real)
(declare-fun x237 () Bool)
(declare-fun x1452 () Real)
(declare-fun x4720 () Real)
(declare-fun x3861 () Real)
(declare-fun x2390 () Bool)
(declare-fun x2233 () Real)
(declare-fun x1186 () Real)
(declare-fun x4190 () Real)
(declare-fun x2746 () Real)
(declare-fun x1210 () Bool)
(declare-fun x948 () Real)
(declare-fun x2384 () Real)
(declare-fun x2383 () Bool)
(declare-fun x978 () Real)
(declare-fun x3805 () Real)
(declare-fun x85 (Real) Real)
(declare-fun x4949 (Real) Real)
(declare-fun x4019 (Real) Real)
(declare-fun x4175 () Real)
(declare-fun x5211 (Real) Real)
(declare-fun x2099 () Real)
(declare-fun x1847 () Real)
(declare-fun x2062 () Bool)
(declare-fun x897 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x3773 () Real)
(declare-fun x4453 () Real)
(declare-fun x1291 () Bool)
(declare-fun x4927 () Real)
(declare-fun x1129 () Real)
(declare-fun x391 () Real)
(declare-fun x3051 () Real)
(declare-fun x4067 () Real)
(declare-fun x4032 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x3413 () Real)
(declare-fun x3618 () Real)
(declare-fun x1633 () Real)
(declare-fun x3737 () Real)
(declare-fun x1343 () Bool)
(declare-fun x554 () Bool)
(declare-fun x2989 () Real)
(declare-fun x2125 () Real)
(declare-fun x4367 () Real)
(declare-fun x3613 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x4100 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x3684 () Real)
(declare-fun x856 () Real)
(declare-fun x553 () Real)
(declare-fun x4935 () Real)
(declare-fun x4688 () Real)
(declare-fun x3225 () Real)
(declare-fun x1213 () Real)
(declare-fun x2102 () Bool)
(declare-fun x3994 () Bool)
(declare-fun x340 () Bool)
(declare-fun x4524 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x647 () Bool)
(declare-fun x2755 () Real)
(declare-fun x3188 () Real)
(declare-fun x2546 () Real)
(declare-fun x1914 () Bool)
(declare-fun x3093 () Bool)
(declare-fun x3489 () Real)
(declare-fun x374 () Bool)
(declare-fun x3527 () Real)
(declare-fun x2142 () x2506)
(declare-fun x4577 () Real)
(declare-fun x3523 () Bool)
(declare-fun x711 () Real)
(declare-fun x1053 () Real)
(declare-fun x4399 (x2506) Real)
(declare-fun x3062 () Real)
(declare-fun x4427 () Real)
(declare-fun x3253 () Real)
(declare-fun x408 (Real) Real)
(declare-fun x4988 () Bool)
(declare-fun x3645 () Real)
(declare-fun x1530 () x2506)
(declare-fun x2409 () Real)
(declare-fun x3775 () Bool)
(declare-fun x1828 () Real)
(declare-fun x1499 () Real)
(declare-fun x5047 () x2506)
(declare-fun x1541 () Real)
(declare-fun x3780 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x300 () Bool)
(declare-fun x126 () Real)
(declare-fun x4633 () Real)
(declare-fun x4311 () Bool)
(declare-fun x2601 () x2506)
(declare-fun x2023 () Real)
(declare-fun x2671 () Real)
(declare-fun x1442 () Real)
(declare-fun x1823 () Bool)
(declare-fun x2724 () Bool)
(declare-fun x4662 () Bool)
(declare-fun x4861 () Real)
(declare-fun x2636 () Bool)
(declare-fun x4999 () Bool)
(declare-fun x4761 () Real)
(declare-fun x2075 () Real)
(declare-fun x3898 () Bool)
(declare-fun x2644 () Real)
(declare-fun x56 () Bool)
(declare-fun x3925 () Real)
(declare-fun x4955 () Real)
(declare-fun x3268 () Real)
(declare-fun x1250 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x492 () Real)
(declare-fun x2510 () Bool)
(declare-fun x4466 () Bool)
(declare-fun x5011 () Bool)
(declare-fun x2101 () Real)
(declare-fun x3885 () Real)
(declare-fun x2208 () Real)
(declare-fun x4049 () Real)
(declare-fun x5260 (x2506) Real)
(declare-fun x611 () x2506)
(declare-fun x1398 () Real)
(declare-fun x2093 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x323 () Real)
(declare-fun x5247 (Real) Real)
(declare-fun x4502 () Real)
(declare-fun x3883 () Real)
(declare-fun x4005 () Real)
(declare-fun x1055 () Real)
(declare-fun x3594 () Bool)
(declare-fun x3589 () Real)
(declare-fun x425 () Real)
(declare-fun x4578 () Bool)
(declare-fun x3252 () Real)
(declare-fun x3686 (Real) Real)
(declare-fun x4162 () Real)
(declare-fun x2675 () Real)
(declare-fun x4874 () Bool)
(declare-fun x972 () Bool)
(declare-fun x4730 () Real)
(declare-fun x3080 () Real)
(declare-fun x3317 () Bool)
(declare-fun x4933 () Real)
(declare-fun x5241 () x2506)
(declare-fun x4346 () Real)
(declare-fun x5224 () Real)
(declare-fun x4284 () Real)
(declare-fun x1235 () Bool)
(declare-fun x442 () Real)
(declare-fun x818 () Bool)
(declare-fun x1888 () Real)
(declare-fun x3533 () Bool)
(declare-fun x3292 () Real)
(declare-fun x1233 () Real)
(declare-fun x4596 () Real)
(declare-fun x4773 () Real)
(declare-fun x3462 () Bool)
(declare-fun x3500 () Real)
(declare-fun x1859 () Bool)
(declare-fun x4818 () Bool)
(declare-fun x2502 () Real)
(declare-fun x787 () Real)
(declare-fun x839 () Real)
(declare-fun x672 () Real)
(declare-fun x3611 () Bool)
(declare-fun x476 () Bool)
(declare-fun x2127 () Real)
(declare-fun x3844 () x2506)
(declare-fun x1738 () Bool)
(declare-fun x1540 () Real)
(declare-fun x263 () Real)
(declare-fun x2632 () Real)
(declare-fun x2200 () Bool)
(declare-fun x4092 () Bool)
(declare-fun x2539 () Real)
(declare-fun x984 () Bool)
(declare-fun x837 () Bool)
(declare-fun x1800 () Real)
(declare-fun x2340 () Real)
(declare-fun x3586 () Bool)
(declare-fun x4468 () Real)
(declare-fun x3609 () Real)
(declare-fun x1419 () Real)
(declare-fun x2415 () Real)
(declare-fun x73 () Real)
(declare-fun x3715 () Real)
(declare-fun x264 () Bool)
(declare-fun x4516 () x2506)
(declare-fun x724 () Bool)
(declare-fun x4948 () Real)
(declare-fun x3807 () Bool)
(declare-fun x1699 () Real)
(declare-fun x2311 () Bool)
(declare-fun x4464 () Real)
(declare-fun x2838 () Real)
(declare-fun x676 () Bool)
(declare-fun x2548 () Real)
(declare-fun x3732 () Bool)
(declare-fun x5134 () Real)
(declare-fun x2349 () Bool)
(declare-fun x4856 () Real)
(declare-fun x1725 () Real)
(declare-fun x3336 () Real)
(declare-fun x4378 () Real)
(declare-fun x4907 () Real)
(declare-fun x905 () Real)
(declare-fun x2611 () Real)
(declare-fun x3395 () Real)
(declare-fun x4357 () Real)
(declare-fun x5042 () Real)
(declare-fun x4506 () Bool)
(declare-fun x4581 (Real) Real)
(declare-fun x1659 () Real)
(declare-fun x359 () Real)
(declare-fun x2317 () Real)
(declare-fun x1746 () Bool)
(declare-fun x1010 () Real)
(declare-fun x560 () x2506)
(declare-fun x110 () Bool)
(declare-fun x3971 () Real)
(declare-fun x358 () Real)
(declare-fun x4552 () Real)
(declare-fun x898 () Real)
(declare-fun x917 () Real)
(declare-fun x2753 () Real)
(declare-fun x3568 () Bool)
(declare-fun x967 () Real)
(declare-fun x4433 () Real)
(declare-fun x1637 () Bool)
(declare-fun x3697 () Bool)
(declare-fun x2787 () Real)
(declare-fun x4449 () Real)
(declare-fun x3071 () Bool)
(declare-fun x830 () Bool)
(declare-fun x4678 () Real)
(declare-fun x2993 () Real)
(declare-fun x910 () Real)
(declare-fun x1221 () Real)
(declare-fun x4804 () Real)
(declare-fun x2234 () Real)
(declare-fun x2214 () Real)
(declare-fun x1749 () Bool)
(declare-fun x3666 () Real)
(declare-fun x2674 () Real)
(declare-fun x4722 () Real)
(declare-fun x5179 () Real)
(declare-fun x3973 () Real)
(declare-fun x1477 () Real)
(declare-fun x415 () Bool)
(declare-fun x401 () Bool)
(declare-fun x2137 () Real)
(declare-fun x2223 () Real)
(declare-fun x2883 () Real)
(declare-fun x4299 () Real)
(declare-fun x4721 () Real)
(declare-fun x4447 () x2506)
(declare-fun x1276 () Real)
(declare-fun x113 () Real)
(declare-fun x4546 () Real)
(declare-fun x4171 () Real)
(declare-fun x3704 () Real)
(declare-fun x2270 () Bool)
(declare-fun x3022 () Real)
(declare-fun x2218 () Real)
(declare-fun x1416 () Real)
(declare-fun x4889 () Real)
(declare-fun x1454 () Real)
(declare-fun x1226 () Real)
(declare-fun x2199 () Bool)
(declare-fun x4798 () Bool)
(declare-fun x861 () Bool)
(declare-fun x5105 () Real)
(declare-fun x2412 () Real)
(declare-fun x3795 () Real)
(declare-fun x3831 () Real)
(declare-fun x461 () Bool)
(declare-fun x5184 () Real)
(declare-fun x2668 () Real)
(declare-fun x2935 () Real)
(declare-fun x3267 () Bool)
(declare-fun x3952 () Real)
(declare-fun x1877 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x4693 () Real)
(declare-fun x2278 () x2506)
(declare-fun x3308 () Real)
(declare-fun x3257 () Real)
(declare-fun x1864 () Real)
(declare-fun x2300 () Bool)
(declare-fun x592 () Real)
(declare-fun x3328 () Real)
(declare-fun x2027 () Real)
(declare-fun x2140 () Real)
(declare-fun x2503 () Real)
(declare-fun x625 () Real)
(declare-fun x908 () Real)
(declare-fun x2703 () Real)
(declare-fun x4755 () Real)
(declare-fun x1426 () Real)
(declare-fun x1380 () Real)
(declare-fun x4582 () Real)
(declare-fun x624 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x758 () Bool)
(declare-fun x2956 () Real)
(declare-fun x3808 () Real)
(declare-fun x1598 () Real)
(declare-fun x933 () Bool)
(declare-fun x1511 () Real)
(declare-fun x1838 () Real)
(declare-fun x937 () Real)
(declare-fun x4310 () Bool)
(declare-fun x4050 (x2506) Real)
(declare-fun x1632 () Real)
(declare-fun x81 () Bool)
(declare-fun x3132 () Real)
(declare-fun x4870 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x4624 () Bool)
(declare-fun x870 () Bool)
(declare-fun x3440 () Real)
(declare-fun x3635 () Real)
(declare-fun x190 (Real) Real)
(declare-fun x975 () Real)
(declare-fun x1751 () Real)
(declare-fun x4442 () x2506)
(declare-fun x4143 () Real)
(declare-fun x4017 () Real)
(declare-fun x3324 () x2506)
(declare-fun x2962 () Real)
(declare-fun x2869 () Bool)
(declare-fun x3354 () Real)
(declare-fun x1076 () Real)
(declare-fun x2970 () Bool)
(declare-fun x4934 () Real)
(declare-fun x1132 () Real)
(declare-fun x2472 () Real)
(declare-fun x3595 () Bool)
(declare-fun x2482 () Real)
(declare-fun x5037 () Bool)
(declare-fun x438 () Real)
(declare-fun x3526 () Real)
(declare-fun x2141 () x2506)
(declare-fun x697 () Real)
(declare-fun x4462 () Real)
(declare-fun x5107 () Real)
(declare-fun x1851 () Real)
(declare-fun x4750 () Real)
(declare-fun x2936 () Real)
(declare-fun x3153 () Real)
(declare-fun x3655 () Bool)
(declare-fun x3542 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x3738 () Real)
(declare-fun x3713 () Real)
(declare-fun x4982 () Real)
(declare-fun x2969 (Real) Real)
(declare-fun x4267 () Real)
(declare-fun x3664 () Real)
(declare-fun x1170 () Real)
(declare-fun x1902 () Real)
(declare-fun x4303 () Real)
(declare-fun x2201 () Real)
(declare-fun x208 () Real)
(declare-fun x2727 () Real)
(declare-fun x3318 () x2506)
(declare-fun x1309 () Real)
(declare-fun x4290 () Real)
(declare-fun x1370 () Bool)
(declare-fun x3196 () Bool)
(declare-fun x3070 () Real)
(declare-fun x1977 () Real)
(declare-fun x393 () Bool)
(declare-fun x2733 () Real)
(declare-fun x4598 () Real)
(declare-fun x4390 () Real)
(declare-fun x1605 () Real)
(declare-fun x2385 (Real) Real)
(declare-fun x2651 () Real)
(declare-fun x1929 () Real)
(declare-fun x4591 () Real)
(declare-fun x4966 () Bool)
(declare-fun x1455 () x2506)
(declare-fun x3853 () Bool)
(declare-fun x4212 () Real)
(declare-fun x4193 () Real)
(declare-fun x1758 () Real)
(declare-fun x4382 () Real)
(declare-fun x496 () Bool)
(declare-fun x2108 () Real)
(declare-fun x2059 () Real)
(declare-fun x1176 () Bool)
(declare-fun x2654 () x2506)
(declare-fun x3852 () Real)
(declare-fun x3623 () Real)
(declare-fun x1139 () x2506)
(declare-fun x1211 () Real)
(declare-fun x930 () Real)
(declare-fun x2769 () Real)
(declare-fun x3953 (Real) Real)
(declare-fun x200 (x2506) Real)
(declare-fun x3976 () Real)
(declare-fun x1323 () Bool)
(declare-fun x1617 () Real)
(declare-fun x4226 () Real)
(declare-fun x3931 () Real)
(declare-fun x3466 () Bool)
(declare-fun x382 () Real)
(declare-fun x4039 () Bool)
(declare-fun x2533 () Real)
(declare-fun x3214 () Real)
(declare-fun x996 () x2506)
(declare-fun x3303 () Bool)
(declare-fun x1547 () x2506)
(declare-fun x4531 () Bool)
(declare-fun x310 () Bool)
(declare-fun x3164 () Real)
(declare-fun x3511 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x5142 (Real) Real)
(declare-fun x1200 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x1349 () Real)
(declare-fun x683 () x2506)
(declare-fun x1718 () Real)
(declare-fun x5044 () Bool)
(declare-fun x4191 () Real)
(declare-fun x1092 () Real)
(declare-fun x1175 () Real)
(declare-fun x3702 () Real)
(declare-fun x2373 () Bool)
(declare-fun x17 () Bool)
(declare-fun x3987 () Bool)
(declare-fun x2528 () Bool)
(declare-fun x3665 () Real)
(declare-fun x1762 () Real)
(declare-fun x2898 () Bool)
(declare-fun x771 () Real)
(declare-fun x5187 () Real)
(declare-fun x2859 () Real)
(declare-fun x3691 () Real)
(declare-fun x3717 () Bool)
(declare-fun x3569 () Real)
(declare-fun x4366 () Real)
(declare-fun x4780 () Real)
(declare-fun x5218 () Real)
(declare-fun x2437 () Real)
(declare-fun x3736 () Real)
(declare-fun x3659 () Bool)
(declare-fun x779 () x2506)
(declare-fun x2730 () Real)
(declare-fun x413 () Real)
(declare-fun x1951 () Bool)
(declare-fun x540 () Real)
(declare-fun x4071 () Real)
(declare-fun x194 () Real)
(declare-fun x2811 () Bool)
(declare-fun x3388 () Real)
(declare-fun x3804 () Real)
(declare-fun x3497 () Real)
(declare-fun x2230 () Real)
(declare-fun x891 () Real)
(declare-fun x1883 () Bool)
(declare-fun x4279 () Real)
(declare-fun x1868 () Real)
(declare-fun x261 () Real)
(declare-fun x3981 () Real)
(declare-fun x1761 () Real)
(declare-fun x4139 () Real)
(declare-fun x122 () Bool)
(declare-fun x4292 () Real)
(declare-fun x2238 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x4580 () Real)
(declare-fun x66 () Real)
(declare-fun x4341 () Real)
(declare-fun x4066 () Real)
(declare-fun x4127 () Real)
(declare-fun x4792 () x2506)
(declare-fun x483 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x3410 () Real)
(declare-fun x2660 (Real) Real)
(declare-fun x3522 () x2506)
(declare-fun x714 () Real)
(declare-fun x992 () Bool)
(declare-fun x2584 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x4534 () Real)
(declare-fun x480 () Real)
(declare-fun x608 () Real)
(declare-fun x3166 (Real) Real)
(declare-fun x2663 () Real)
(declare-fun x211 () Bool)
(declare-fun x911 () Real)
(declare-fun x4330 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x4712 () Real)
(declare-fun x3835 () Bool)
(declare-fun x2610 () Real)
(declare-fun x3817 () Real)
(declare-fun x1400 () Bool)
(declare-fun x5129 (Real) Real)
(declare-fun x2307 () Bool)
(declare-fun x1831 () Real)
(declare-fun x1324 () Real)
(declare-fun x4498 () Real)
(declare-fun x3701 () Bool)
(declare-fun x691 () Real)
(declare-fun x5006 () Real)
(declare-fun x4619 () Bool)
(declare-fun x4968 () Real)
(declare-fun x4204 (x2506) Real)
(declare-fun x2602 () Real)
(declare-fun x1460 () Bool)
(declare-fun x1433 () Real)
(declare-fun x3530 () Real)
(declare-fun x3363 () Real)
(declare-fun x4916 () Bool)
(declare-fun x2131 () Real)
(declare-fun x3636 () Real)
(declare-fun x3769 () Real)
(declare-fun x1563 () Bool)
(declare-fun x3191 () Real)
(declare-fun x3789 () Real)
(declare-fun x2330 () Real)
(declare-fun x1774 () Real)
(declare-fun x4554 () Real)
(declare-fun x356 () Real)
(declare-fun x1608 () Real)
(declare-fun x4059 () Real)
(declare-fun x3384 () Real)
(declare-fun x3373 () Real)
(declare-fun x3178 () Real)
(declare-fun x4513 () Real)
(declare-fun x2680 () Real)
(declare-fun x2203 () Real)
(declare-fun x829 () x2506)
(declare-fun x5103 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x4025 () Bool)
(declare-fun x2264 () Real)
(declare-fun x4843 () Bool)
(declare-fun x3900 () Real)
(declare-fun x202 () Real)
(declare-fun x4493 () Real)
(declare-fun x3706 () Real)
(declare-fun x1770 () Real)
(declare-fun x1298 () Real)
(declare-fun x955 () Real)
(declare-fun x4403 () Real)
(declare-fun x4549 () Real)
(declare-fun x3457 () Real)
(declare-fun x4472 () Bool)
(declare-fun x4893 () Real)
(declare-fun x598 () Bool)
(declare-fun x1658 () Real)
(declare-fun x3028 () Real)
(declare-fun x1592 () Bool)
(declare-fun x4789 () Real)
(declare-fun x4328 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x4931 () Real)
(declare-fun x104 () Real)
(declare-fun x1640 () Real)
(declare-fun x1624 () Real)
(declare-fun x2556 () Real)
(declare-fun x4031 () Real)
(declare-fun x1675 () Real)
(declare-fun x793 (Real) Real)
(declare-fun x3911 () Real)
(declare-fun x1810 () Bool)
(declare-fun x2456 () Real)
(declare-fun x3984 () Bool)
(declare-fun x4806 () Bool)
(declare-fun x1714 () Real)
(declare-fun x1830 (Real) Real)
(declare-fun x504 () Real)
(declare-fun x4729 () Bool)
(declare-fun x1928 () Real)
(declare-fun x859 () Bool)
(declare-fun x2728 () Bool)
(declare-fun x4344 () Bool)
(declare-fun x2110 () x2506)
(declare-fun x385 () Real)
(declare-fun x3299 () Real)
(declare-fun x1881 () Real)
(declare-fun x2645 () x2506)
(declare-fun x4209 () Real)
(declare-fun x2413 () Real)
(declare-fun x1303 () x2506)
(declare-fun x4692 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x507 (x2506) Real)
(declare-fun x1695 () Real)
(declare-fun x3821 () Bool)
(declare-fun x3787 () Real)
(declare-fun x3121 () Real)
(declare-fun x824 () Real)
(declare-fun x1685 () Real)
(declare-fun x1976 () Bool)
(declare-fun x5078 () Real)
(declare-fun x3868 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x4595 () Real)
(declare-fun x166 () Real)
(declare-fun x1682 () Bool)
(declare-fun x1741 () Real)
(declare-fun x139 () Real)
(declare-fun x1885 () Real)
(declare-fun x4799 () Bool)
(declare-fun x1476 () Real)
(declare-fun x5076 () Real)
(declare-fun x4993 () Real)
(declare-fun x4277 () Bool)
(declare-fun x4047 () Bool)
(declare-fun x2287 () Real)
(declare-fun x3829 () Bool)
(declare-fun x629 () Bool)
(declare-fun x1722 () Real)
(declare-fun x3942 () Real)
(declare-fun x1937 () Real)
(declare-fun x3100 () Real)
(declare-fun x4473 () Bool)
(declare-fun x1760 () Real)
(declare-fun x3347 () Bool)
(declare-fun x4914 () Real)
(declare-fun x4828 () Real)
(declare-fun x3408 () x2506)
(declare-fun x86 () Real)
(declare-fun x1490 () Bool)
(declare-fun x4643 () Real)
(declare-fun x621 () Real)
(declare-fun x4329 () Bool)
(declare-fun x3818 () Real)
(declare-fun x4252 () Real)
(declare-fun x1322 () x2506)
(declare-fun x1085 () Real)
(declare-fun x2973 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x1215 () Real)
(declare-fun x3954 () Real)
(declare-fun x3558 () Real)
(declare-fun x155 () Real)
(declare-fun x4325 () Bool)
(declare-fun x2513 () Real)
(declare-fun x1353 () Real)
(declare-fun x2452 () Bool)
(declare-fun x1236 () Real)
(declare-fun x4148 () Real)
(declare-fun x896 () Real)
(declare-fun x1619 () Real)
(declare-fun x5240 () x2506)
(declare-fun x3306 () x2506)
(declare-fun x639 () Real)
(declare-fun x4385 () Real)
(declare-fun x2619 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x4202 () Real)
(declare-fun x4867 () Bool)
(declare-fun x3563 () Real)
(declare-fun x2015 () Real)
(declare-fun x4566 () Real)
(declare-fun x3721 () Real)
(declare-fun x1854 (Real) Real)
(declare-fun x33 () Real)
(declare-fun x1503 () Real)
(declare-fun x5175 () Real)
(declare-fun x74 () x2506)
(declare-fun x2552 () Bool)
(declare-fun x4276 () Real)
(declare-fun x1424 () Real)
(declare-fun x3517 () Real)
(declare-fun x2945 () Bool)
(declare-fun x2716 () Bool)
(declare-fun x5012 () Real)
(declare-fun x3990 () Bool)
(declare-fun x2138 () Real)
(declare-fun x2725 () Real)
(declare-fun x1647 () Real)
(declare-fun x1346 () Bool)
(declare-fun x3657 () Real)
(declare-fun x2065 () Bool)
(declare-fun x4035 () x2506)
(declare-fun x4909 () Real)
(declare-fun x1890 () Real)
(declare-fun x876 () Real)
(declare-fun x2109 () Real)
(declare-fun x4525 () Bool)
(declare-fun x1037 () Real)
(declare-fun x662 () x2506)
(declare-fun x2562 () Real)
(declare-fun x4133 () Real)
(declare-fun x1997 () Real)
(declare-fun x1038 () Real)
(declare-fun x3160 () Real)
(declare-fun x4166 () Real)
(declare-fun x2175 () Real)
(declare-fun x1968 () Real)
(declare-fun x2800 () Real)
(declare-fun x4836 () Real)
(declare-fun x5221 () Real)
(declare-fun x3650 () Real)
(declare-fun x3588 () Bool)
(declare-fun x2631 (Real) Real)
(declare-fun x4569 () Real)
(declare-fun x4849 () Bool)
(declare-fun x3596 () Bool)
(declare-fun x5112 () Real)
(declare-fun x2182 () Bool)
(declare-fun x4354 () Real)
(declare-fun x3565 () Bool)
(declare-fun x2666 () x2506)
(declare-fun x4270 () Bool)
(declare-fun x868 () Bool)
(declare-fun x3640 () Bool)
(declare-fun x2225 (x2506) Real)
(declare-fun x2423 () Real)
(declare-fun x4733 () Bool)
(declare-fun x5137 () x2506)
(declare-fun x657 () Real)
(declare-fun x1916 () Real)
(declare-fun x4044 () Real)
(declare-fun x1569 () Bool)
(declare-fun x241 () Real)
(declare-fun x5242 () Real)
(declare-fun x2290 () Real)
(declare-fun x4574 () Bool)
(declare-fun x4593 () Real)
(declare-fun x2723 () Bool)
(declare-fun x2852 (Real) Real)
(declare-fun x3600 () Real)
(declare-fun x3842 () Bool)
(declare-fun x175 () Bool)
(declare-fun x5035 () x2506)
(declare-fun x3790 () Real)
(declare-fun x2909 () Real)
(declare-fun x1721 () Real)
(declare-fun x4345 () Real)
(declare-fun x4727 () Real)
(declare-fun x4723 () Bool)
(declare-fun x5008 () Real)
(declare-fun x1304 () Real)
(declare-fun x725 () Real)
(declare-fun x1641 () Real)
(declare-fun x4348 () x2506)
(declare-fun x4637 () Bool)
(declare-fun x4286 () Real)
(declare-fun x2890 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x935 () Real)
(declare-fun x619 () Real)
(declare-fun x2333 () Real)
(declare-fun x4332 () Bool)
(declare-fun x54 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x757 () Real)
(declare-fun x2425 () Real)
(declare-fun x790 () Bool)
(declare-fun x1403 () Real)
(declare-fun x3961 () Real)
(declare-fun x704 () Real)
(declare-fun x5146 () Real)
(declare-fun x3056 () Real)
(declare-fun x3501 () Real)
(declare-fun x1858 () Real)
(declare-fun x453 (Real) Real)
(declare-fun x3871 () Real)
(declare-fun x2705 () Real)
(declare-fun x3653 () Real)
(declare-fun x1824 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x936 () Real)
(declare-fun x365 () Real)
(declare-fun x4443 (Real) Real)
(declare-fun x2823 () Real)
(declare-fun x1165 () Real)
(declare-fun x118 () Bool)
(declare-fun x3879 () Real)
(declare-fun x1125 () Real)
(declare-fun x1913 (Real) Real)
(declare-fun x1333 () Real)
(declare-fun x4615 () Bool)
(declare-fun x2014 () x2506)
(declare-fun x3083 () Real)
(declare-fun x4724 () Real)
(declare-fun x3838 () Real)
(declare-fun x3955 () Bool)
(declare-fun x4529 () Bool)
(declare-fun x3982 () Real)
(declare-fun x3783 () Real)
(declare-fun x1088 () x2506)
(declare-fun x4590 () Real)
(declare-fun x4837 () Real)
(declare-fun x3417 () Real)
(declare-fun x1153 () Bool)
(declare-fun x4923 () Bool)
(declare-fun x3968 () Real)
(declare-fun x981 () Real)
(declare-fun x1205 () Real)
(declare-fun x4630 () Bool)
(declare-fun x4151 () Real)
(declare-fun x4884 () Real)
(declare-fun x1517 () Real)
(declare-fun x4205 () Bool)
(declare-fun x437 () Real)
(declare-fun x2500 () Real)
(declare-fun x3629 () Real)
(declare-fun x3480 () Real)
(declare-fun x274 () Bool)
(declare-fun x4469 () Real)
(declare-fun x4129 () Bool)
(declare-fun x4570 () Real)
(declare-fun x4456 () Real)
(declare-fun x3800 () Bool)
(declare-fun x3036 () Real)
(declare-fun x4896 (Real) Real)
(declare-fun x1458 () Real)
(declare-fun x1385 () Real)
(declare-fun x3206 () Bool)
(declare-fun x5174 () Real)
(declare-fun x1922 () x2506)
(declare-fun x5136 () Bool)
(declare-fun x4535 () Real)
(declare-fun x2990 () Real)
(declare-fun x2268 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x127 () Bool)
(declare-fun x1492 () Real)
(declare-fun x1456 (Real) Real)
(declare-fun x3300 () Real)
(declare-fun x3254 () Real)
(declare-fun x590 () Real)
(declare-fun x102 () Real)
(declare-fun x3243 () Real)
(declare-fun x4684 () Real)
(declare-fun x4358 () Real)
(declare-fun x4124 () Bool)
(declare-fun x1846 () x2506)
(declare-fun x1141 () x2506)
(declare-fun x4561 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x3872 () Real)
(declare-fun x2775 () Real)
(declare-fun x1222 () Real)
(declare-fun x3240 () Real)
(declare-fun x4627 (Real) Real)
(declare-fun x4021 () Real)
(declare-fun x1075 () Real)
(declare-fun x4890 () Real)
(declare-fun x571 () Real)
(declare-fun x1857 () Real)
(declare-fun x609 () Real)
(declare-fun x5102 () Real)
(declare-fun x2026 () Real)
(declare-fun x4816 () Real)
(declare-fun x2217 (Real) Real)
(declare-fun x4527 () Bool)
(declare-fun x517 () Bool)
(declare-fun x946 () Real)
(declare-fun x3037 () Real)
(declare-fun x3031 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1697 () Real)
(declare-fun x257 () Real)
(declare-fun x4522 () x2506)
(declare-fun x1609 () Real)
(declare-fun x3286 (Real) Real)
(declare-fun x3175 () Bool)
(declare-fun x3748 () Real)
(declare-fun x3965 () Real)
(declare-fun x4429 () x2506)
(declare-fun x1466 () Bool)
(declare-fun x2448 () Real)
(declare-fun x2079 () Bool)
(declare-fun x4160 () Real)
(declare-fun x1876 () Bool)
(declare-fun x4886 () Real)
(declare-fun x322 () Bool)
(declare-fun x2345 () Real)
(declare-fun x1944 () Real)
(declare-fun x547 () Real)
(declare-fun x4801 () Real)
(declare-fun x2380 () x2506)
(declare-fun x2784 () Real)
(declare-fun x641 () Bool)
(declare-fun x3416 () Bool)
(declare-fun x4850 () Real)
(declare-fun x1897 () Real)
(declare-fun x1117 () Bool)
(declare-fun x418 () Real)
(declare-fun x3845 () Real)
(declare-fun x3851 () Bool)
(declare-fun x3234 () Real)
(declare-fun x1267 () Bool)
(declare-fun x2222 () Real)
(declare-fun x3605 () x2506)
(declare-fun x4682 () Real)
(declare-fun x4683 () Bool)
(declare-fun x5254 () Bool)
(declare-fun x1319 () Real)
(declare-fun x807 () Real)
(declare-fun x545 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x1834 () Real)
(declare-fun x4564 () Real)
(declare-fun x3875 () x2506)
(declare-fun x2411 () Real)
(declare-fun x2932 () Real)
(declare-fun x1040 () Real)
(declare-fun x2276 (Real) Real)
(declare-fun x2126 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x3813 () Bool)
(declare-fun x4492 () Bool)
(declare-fun x1334 () Real)
(declare-fun x3610 () Real)
(declare-fun x396 () Real)
(declare-fun x2060 () Bool)
(declare-fun x833 () Real)
(declare-fun x4272 () Real)
(declare-fun x2336 () Bool)
(declare-fun x2046 () Real)
(declare-fun x3133 () Bool)
(declare-fun x60 () x2506)
(declare-fun x360 () Real)
(declare-fun x469 () Real)
(declare-fun x456 () Bool)
(declare-fun x5026 () Bool)
(declare-fun x5191 () Real)
(declare-fun x582 () Real)
(declare-fun x2524 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x5054 () Real)
(declare-fun x4551 (x2506) Real)
(declare-fun x2314 () Real)
(declare-fun x4421 () Real)
(declare-fun x855 () Real)
(declare-fun x2540 () Real)
(declare-fun x1667 () Real)
(declare-fun x3573 () Real)
(declare-fun x48 () Real)
(declare-fun x2053 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x367 () Real)
(declare-fun x3398 () Bool)
(declare-fun x2209 () Real)
(declare-fun x2121 () Bool)
(declare-fun x407 () Bool)
(declare-fun x3474 () Real)
(declare-fun x4111 () x2506)
(declare-fun x1825 () Real)
(declare-fun x2662 () Real)
(declare-fun x4387 () Bool)
(declare-fun x1855 () Real)
(declare-fun x5213 () Bool)
(declare-fun x4769 () Real)
(declare-fun x562 () Real)
(declare-fun x4862 () Bool)
(declare-fun x3221 () Real)
(declare-fun x4362 () Bool)
(declare-fun x4315 () x2506)
(declare-fun x1196 () Real)
(declare-fun x4952 () Real)
(declare-fun x4386 () Real)
(declare-fun x1863 () Real)
(declare-fun x192 () Real)
(declare-fun x3375 () Real)
(declare-fun x2664 () Real)
(declare-fun x4671 () Bool)
(declare-fun x26 () Real)
(declare-fun x498 () Real)
(declare-fun x3718 () Bool)
(declare-fun x4123 () Real)
(declare-fun x4679 () Real)
(declare-fun x4553 () Real)
(declare-fun x2084 () Bool)
(declare-fun x3040 () Real)
(declare-fun x2926 () Real)
(declare-fun x131 () Real)
(declare-fun x1335 () Real)
(declare-fun x1665 () Real)
(declare-fun x2758 () Real)
(declare-fun x1696 () Bool)
(declare-fun x2240 () Real)
(declare-fun x3694 () Real)
(declare-fun x4121 () Real)
(declare-fun x5178 () Real)
(declare-fun x3858 () Real)
(declare-fun x4308 () Real)
(declare-fun x1791 () Real)
(declare-fun x2281 (Real) Real)
(declare-fun x3983 () Real)
(declare-fun x1185 () Bool)
(declare-fun x5060 () Real)
(declare-fun x249 () Bool)
(declare-fun x3628 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x3332 () Real)
(declare-fun x784 () Real)
(declare-fun x1415 () Real)
(declare-fun x1934 () Real)
(declare-fun x4062 () Bool)
(declare-fun x4940 () Bool)
(declare-fun x336 () Bool)
(declare-fun x2876 (Real) Real)
(declare-fun x2146 () Real)
(declare-fun x2064 () Bool)
(declare-fun x831 () Real)
(declare-fun x761 () Real)
(declare-fun x4918 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x2379 () Real)
(declare-fun x2480 () Real)
(declare-fun x4587 () Real)
(declare-fun x3015 () Real)
(declare-fun x3392 () Real)
(declare-fun x1676 () Real)
(declare-fun x4033 () Bool)
(declare-fun x4259 () Real)
(declare-fun x2915 () Real)
(declare-fun x38 (Real) Real)
(declare-fun x3532 () Real)
(declare-fun x5145 () Real)
(declare-fun x3525 () Bool)
(declare-fun x3520 () Real)
(declare-fun x2604 () Real)
(declare-fun x2579 () Real)
(declare-fun x2905 () Real)
(declare-fun x3912 () Real)
(declare-fun x1459 () Real)
(declare-fun x2475 () Real)
(declare-fun x3703 (x2506) Real)
(declare-fun x3198 () Real)
(declare-fun x4030 () Bool)
(declare-fun x1348 () Real)
(declare-fun x2074 () Real)
(declare-fun x3687 (Real) Real)
(declare-fun x3893 () Real)
(declare-fun x1154 () Real)
(declare-fun x4985 () Real)
(declare-fun x719 () Real)
(declare-fun x2090 () Real)
(declare-fun x585 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x330 () Real)
(declare-fun x2273 () Real)
(declare-fun x2690 () Bool)
(declare-fun x4864 () Bool)
(declare-fun x398 () Real)
(declare-fun x1443 () Real)
(declare-fun x3319 () Bool)
(declare-fun x2389 () Real)
(declare-fun x4109 () Bool)
(declare-fun x932 () x2506)
(declare-fun x1397 () Bool)
(declare-fun x3095 () Real)
(declare-fun x706 () Real)
(declare-fun x874 (Real) Real)
(declare-fun x197 () Real)
(declare-fun x2054 () Real)
(declare-fun x1975 () x2506)
(declare-fun x1404 () Real)
(declare-fun x2697 () Real)
(declare-fun x3988 () Real)
(declare-fun x2007 () Real)
(declare-fun x4668 () Real)
(declare-fun x2987 () Real)
(declare-fun x1986 () Real)
(declare-fun x518 () Real)
(declare-fun x2097 () x2506)
(declare-fun x3222 () Real)
(declare-fun x3934 () Real)
(declare-fun x195 () Real)
(declare-fun x2111 () Real)
(declare-fun x3309 () Real)
(declare-fun x168 () x2506)
(declare-fun x3960 () Bool)
(declare-fun x814 () Real)
(declare-fun x3910 () Bool)
(declare-fun x1559 () x2506)
(declare-fun x373 () x2506)
(declare-fun x2884 () Bool)
(declare-fun x681 () Real)
(declare-fun x61 () Bool)
(declare-fun x3145 () Real)
(declare-fun x2955 () Bool)
(declare-fun x2824 () Real)
(declare-fun x4777 () Bool)
(declare-fun x3072 () Real)
(declare-fun x3819 () Real)
(declare-fun x472 () Bool)
(declare-fun x3446 () Bool)
(declare-fun x1241 () Real)
(declare-fun x4239 () Real)
(declare-fun x2847 () Bool)
(declare-fun x4623 () Bool)
(declare-fun x35 () Real)
(declare-fun x2115 () Real)
(declare-fun x3855 () Real)
(declare-fun x5034 () Bool)
(declare-fun x1989 () Real)
(declare-fun x5088 () Real)
(declare-fun x315 () Bool)
(declare-fun x3102 () Real)
(declare-fun x1436 (x2506) Real)
(declare-fun x3147 () Real)
(declare-fun x539 () Real)
(declare-fun x944 (Real) Real)
(declare-fun x2830 () Real)
(declare-fun x2946 () Real)
(declare-fun x1475 () Real)
(declare-fun x5138 () Bool)
(declare-fun x4894 () Real)
(declare-fun x3227 () Real)
(declare-fun x2831 () x2506)
(declare-fun x727 () Real)
(declare-fun x3184 () Real)
(declare-fun x2538 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x2735 () Real)
(declare-fun x1087 () Real)
(declare-fun x1321 () Real)
(declare-fun x4349 () Bool)
(declare-fun x4904 () Real)
(declare-fun x3370 () Real)
(declare-fun x578 () Bool)
(declare-fun x4065 () Real)
(declare-fun x3334 () Real)
(declare-fun x1702 () Real)
(define-fun x656 ((x2506 x2506) (x4412 Real)) x2506 (ite ((_ is x715) x2506) (x715 (x1509 x2506) (+ (x622 x2506) x4412)) (ite ((_ is x4651) x2506) (x4651 (x405 x2506) (x2323 x2506) (+ x4412 (x1045 x2506))) (x1228 (+ x4412 (x3839 x2506))))))
(define-fun x2483 ((x3933 Real)) Real (ite (and (>= x3933 0) (< x3933 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3933 (- x3933 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x4965 ((x3933 Real)) Real (ite (and (< x3933 0) (>= x3933 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x3933 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3933))
(define-fun x3142 ((x4431 Real)) Bool (and (< x4431 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x4431 0)))
(define-fun x3617 ((x4431 Real)) Bool (and (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4431) x4431) (= x4431 (x1999 x4431 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x2620 ((x4431 Real)) Bool (and (= 0 (x1999 0 x4431)) (= (x1999 x4431 0) 0)))
(define-fun x1451 ((x4431 Real)) Bool (= x4431 (x1999 x4431 x4431)))
(define-fun x1438 ((x4431 Real)) Bool (and (x1451 x4431) (x3617 x4431) (x2620 x4431)))
(define-fun x3383 ((x4431 Real)) Bool (= (x1999 1461501637330902918203684832716283019655932542975 x4431) (x1999 1461501637330902918203684832716283019655932542975 (x1999 1461501637330902918203684832716283019655932542975 x4431))))
(define-fun x455 ((x4431 Real)) Bool (=> (and (< x4431 1461501637330902918203684832716283019655932542976) (<= 0 x4431)) (= x4431 (x1999 1461501637330902918203684832716283019655932542975 x4431))))
(define-fun x3860 ((x4431 Real)) Bool (=> (= x4431 (x1999 1461501637330902918203684832716283019655932542975 x4431)) (and (<= 0 x4431) (> 1461501637330902918203684832716283019655932542976 x4431))))
(define-fun x1739 ((x4431 Real)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x4431) (> 2923003274661805836407369665432566039311865085952 x4431)) (= (x1999 1461501637330902918203684832716283019655932542975 x4431) (- x4431 1461501637330902918203684832716283019655932542976))))
(define-fun x3729 ((x4431 Real) (x3889 Real)) Bool (and (= x4431 (+ (* 1461501637330902918203684832716283019655932542976 x3889) (x1999 1461501637330902918203684832716283019655932542975 x4431))) (<= 0 x3889)))
(define-fun x1482 ((x4431 Real) (x1821 Real)) Bool (and (x1739 x4431) (x455 x4431) (x3860 x4431) (x3729 x4431 x1821) (x3383 x4431)))
(define-fun x1798 ((x4431 Real) (x3889 Real)) Bool (= (x1999 x3889 x4431) (x1999 x4431 x3889)))
(define-fun x1192 ((x4431 Real) (x3889 Real)) Bool (and (=> (<= 0 x4431) (>= x4431 (x1999 x4431 x3889))) (=> (>= x3889 0) (<= (x1999 x4431 x3889) x3889)) (>= (x1999 x4431 x3889) 0)))
(define-fun x4568 ((x4431 Real) (x3889 Real)) Bool (and (x1798 x4431 x3889) (x1192 x4431 x3889)))
(define-fun x22 ((x4431 Real) (x1821 Real)) Bool (and (x1482 x4431 x1821) (x4568 x4431 1461501637330902918203684832716283019655932542975)))
(define-fun x3449 ((x4431 Real)) Bool (= (x1999 255 (x1999 255 x4431)) (x1999 255 x4431)))
(define-fun x3667 ((x4431 Real)) Bool (=> (and (<= 0 x4431) (> 256 x4431)) (= (x1999 255 x4431) x4431)))
(define-fun x5099 ((x4431 Real)) Bool (=> (= (x1999 255 x4431) x4431) (and (<= 0 x4431) (> 256 x4431))))
(define-fun x3467 ((x4431 Real)) Bool (=> (and (> 512 x4431) (<= 256 x4431)) (= (x1999 255 x4431) (- x4431 256))))
(define-fun x2686 ((x4431 Real) (x3889 Real)) Bool (and (= x4431 (+ (x1999 255 x4431) (* 256 x3889))) (<= 0 x3889)))
(define-fun x4173 ((x4431 Real) (x1821 Real)) Bool (and (x3667 x4431) (x3449 x4431) (x5099 x4431) (x3467 x4431) (x2686 x4431 x1821)))
(define-fun x1047 ((x4431 Real) (x1821 Real)) Bool (and (x4568 x4431 255) (x4173 x4431 x1821)))
(define-fun x1306 ((x4431 Real)) Bool (= (x1999 340282366920938463463374607431768211455 x4431) (x1999 340282366920938463463374607431768211455 (x1999 340282366920938463463374607431768211455 x4431))))
(define-fun x2210 ((x4431 Real)) Bool (=> (and (< x4431 340282366920938463463374607431768211456) (<= 0 x4431)) (= x4431 (x1999 340282366920938463463374607431768211455 x4431))))
(define-fun x759 ((x4431 Real)) Bool (=> (= (x1999 340282366920938463463374607431768211455 x4431) x4431) (and (<= 0 x4431) (< x4431 340282366920938463463374607431768211456))))
(define-fun x801 ((x4431 Real)) Bool (=> (and (> 680564733841876926926749214863536422912 x4431) (>= x4431 340282366920938463463374607431768211456)) (= (x1999 340282366920938463463374607431768211455 x4431) (- x4431 340282366920938463463374607431768211456))))
(define-fun x4822 ((x4431 Real) (x3889 Real)) Bool (and (= x4431 (+ (x1999 340282366920938463463374607431768211455 x4431) (* 340282366920938463463374607431768211456 x3889))) (<= 0 x3889)))
(define-fun x4644 ((x4431 Real) (x1821 Real)) Bool (and (x2210 x4431) (x1306 x4431) (x4822 x4431 x1821) (x759 x4431) (x801 x4431)))
(define-fun x2550 ((x4431 Real) (x1821 Real)) Bool (and (x4568 x4431 340282366920938463463374607431768211455) (x4644 x4431 x1821)))
(define-fun x2043 ((x4431 Real)) Bool (= (x1999 20282409603651670423947251286015 (x1999 20282409603651670423947251286015 x4431)) (x1999 20282409603651670423947251286015 x4431)))
(define-fun x2232 ((x4431 Real)) Bool (=> (and (< x4431 20282409603651670423947251286016) (<= 0 x4431)) (= (x1999 20282409603651670423947251286015 x4431) x4431)))
(define-fun x4106 ((x4431 Real)) Bool (=> (= (x1999 20282409603651670423947251286015 x4431) x4431) (and (> 20282409603651670423947251286016 x4431) (<= 0 x4431))))
(define-fun x1330 ((x4431 Real)) Bool (=> (and (< x4431 40564819207303340847894502572032) (>= x4431 20282409603651670423947251286016)) (= (- x4431 20282409603651670423947251286016) (x1999 20282409603651670423947251286015 x4431))))
(define-fun x997 ((x4431 Real) (x3889 Real)) Bool (and (>= x3889 0) (= x4431 (+ (x1999 20282409603651670423947251286015 x4431) (* 20282409603651670423947251286016 x3889)))))
(define-fun x5114 ((x4431 Real) (x1821 Real)) Bool (and (x2232 x4431) (x997 x4431 x1821) (x1330 x4431) (x2043 x4431) (x4106 x4431)))
(define-fun x2786 ((x4431 Real) (x1821 Real)) Bool (and (x5114 x4431 x1821) (x4568 x4431 20282409603651670423947251286015)))
(define-fun x2487 ((x4431 Real)) Bool (= (ite (> 10141204801825835211973625643008 (x1999 x4431 20282409603651670423947251286015)) (x1999 x4431 20282409603651670423947251286015) (+ 115792089237316195423570985008687907853269984645358154435805913583965878353920 (x1999 x4431 20282409603651670423947251286015))) (x216 x4431)))
(define-fun x2766 ((x4431 Real)) Bool (= (x1999 18446744073709551615 x4431) (x1999 18446744073709551615 (x1999 18446744073709551615 x4431))))
(define-fun x490 ((x4431 Real)) Bool (=> (and (> 18446744073709551616 x4431) (<= 0 x4431)) (= (x1999 18446744073709551615 x4431) x4431)))
(define-fun x2855 ((x4431 Real)) Bool (=> (= x4431 (x1999 18446744073709551615 x4431)) (and (> 18446744073709551616 x4431) (>= x4431 0))))
(define-fun x1480 ((x4431 Real)) Bool (=> (and (> 36893488147419103232 x4431) (>= x4431 18446744073709551616)) (= (- x4431 18446744073709551616) (x1999 18446744073709551615 x4431))))
(define-fun x3437 ((x4431 Real) (x3889 Real)) Bool (and (<= 0 x3889) (= x4431 (+ (x1999 18446744073709551615 x4431) (* 18446744073709551616 x3889)))))
(define-fun x1903 ((x4431 Real) (x1821 Real)) Bool (and (x2855 x4431) (x2766 x4431) (x1480 x4431) (x490 x4431) (x3437 x4431 x1821)))
(define-fun x4136 ((x4431 Real) (x1821 Real)) Bool (and (x1903 x4431 x1821) (x4568 x4431 18446744073709551615)))
(define-fun x4497 ((x4431 Real)) Bool (= (x1999 65535 x4431) (x1999 65535 (x1999 65535 x4431))))
(define-fun x1983 ((x4431 Real)) Bool (=> (and (>= x4431 0) (> 65536 x4431)) (= x4431 (x1999 65535 x4431))))
(define-fun x5127 ((x4431 Real)) Bool (=> (= (x1999 65535 x4431) x4431) (and (<= 0 x4431) (< x4431 65536))))
(define-fun x3677 ((x4431 Real)) Bool (=> (and (< x4431 131072) (<= 65536 x4431)) (= (- x4431 65536) (x1999 65535 x4431))))
(define-fun x2566 ((x4431 Real) (x3889 Real)) Bool (and (<= 0 x3889) (= (+ (x1999 65535 x4431) (* 65536 x3889)) x4431)))
(define-fun x600 ((x4431 Real) (x1821 Real)) Bool (and (x5127 x4431) (x3677 x4431) (x2566 x4431 x1821) (x4497 x4431) (x1983 x4431)))
(define-fun x5234 ((x4431 Real) (x1821 Real)) Bool (and (x4568 x4431 65535) (x600 x4431 x1821)))
(define-fun x970 ((x4431 Real)) Bool (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4431) (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4431))))
(define-fun x1578 ((x4431 Real)) Bool (=> (and (> 32 x4431) (>= x4431 0)) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4431) 0)))
(define-fun x2335 ((x4431 Real) (x3889 Real) (x2404 Real) (x3312 Real)) Bool (and (>= x3312 0) (< x3312 1) (= (+ x3889 (* 32 x2404) (* x3312 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4431) (>= x3889 0) (<= 0 x2404) (< x2404 3618502788666131106986593281521497120414687020801267626233049500247285301248) (> 32 x3889) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4431) (* x2404 32))))
(define-fun x2449 ((x4431 Real) (x130 Real) (x1534 Real) (x3346 Real)) Bool (and (x1578 x4431) (x970 x4431) (x2335 x4431 x130 x1534 x3346)))
(define-fun x1936 ((x4431 Real) (x130 Real) (x1534 Real) (x3346 Real)) Bool (and (x4568 x4431 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2449 x4431 x130 x1534 x3346)))
(define-fun x3018 ((x4431 Real)) Bool (= (ite (> 170141183460469231731687303715884105728 (x1999 x4431 340282366920938463463374607431768211455)) (x1999 x4431 340282366920938463463374607431768211455) (+ (x1999 x4431 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480)) (x14 x4431)))
(define-fun x3866 ((x4431 Real)) Bool (= (x1999 1208925819614629174706175 x4431) (x1999 1208925819614629174706175 (x1999 1208925819614629174706175 x4431))))
(define-fun x5046 ((x4431 Real)) Bool (=> (and (> 1208925819614629174706176 x4431) (>= x4431 0)) (= x4431 (x1999 1208925819614629174706175 x4431))))
(define-fun x4337 ((x4431 Real)) Bool (=> (= (x1999 1208925819614629174706175 x4431) x4431) (and (>= x4431 0) (> 1208925819614629174706176 x4431))))
(define-fun x4541 ((x4431 Real)) Bool (=> (and (< x4431 2417851639229258349412352) (<= 1208925819614629174706176 x4431)) (= (- x4431 1208925819614629174706176) (x1999 1208925819614629174706175 x4431))))
(define-fun x744 ((x4431 Real) (x3889 Real)) Bool (and (<= 0 x3889) (= x4431 (+ (x1999 1208925819614629174706175 x4431) (* 1208925819614629174706176 x3889)))))
(define-fun x1258 ((x4431 Real) (x1821 Real)) Bool (and (x5046 x4431) (x744 x4431 x1821) (x3866 x4431) (x4337 x4431) (x4541 x4431)))
(define-fun x3549 ((x4431 Real) (x1821 Real)) Bool (and (x1258 x4431 x1821) (x4568 x4431 1208925819614629174706175)))
(define-fun x4980 ((x1744 Real)) Real (ite (= x1744 288) x946 (x2096 x1744)))
(define-fun x3445 ((x1744 Real)) Real (ite (= 320 x1744) x4755 (x4980 x1744)))
(define-fun x4913 ((x1744 Real)) Real (ite (= x1744 352) x1705 (x3445 x1744)))
(define-fun x41 ((x1744 Real)) Real (ite (= 384 x1744) x1049 (x4913 x1744)))
(define-fun x304 ((x1744 Real)) Real (ite (= x1744 416) x3152 (x41 x1744)))
(define-fun x5173 ((x1744 Real)) Real (ite (= 288 x1744) x589 (x2096 x1744)))
(define-fun x3235 ((x1744 Real)) Real (ite (= x1744 320) x1850 (x5173 x1744)))
(define-fun x3320 ((x1744 Real)) Real (ite (= x1744 352) x2073 (x3235 x1744)))
(define-fun x1644 ((x1744 Real)) Real (ite (= 384 x1744) x2769 (x3320 x1744)))
(define-fun x361 ((x1744 Real)) Real (ite (= x1744 416) x2155 (x1644 x1744)))
(define-fun x3938 ((x1744 Real)) Real (ite (= x1029 x1744) x492 (x3953 x1744)))
(define-fun x1223 ((x1744 Real)) Real (ite (= x3355 x1744) x1933 (x3938 x1744)))
(define-fun x3903 ((x1744 Real)) Real (ite (= x1744 x4722) x2160 (x1223 x1744)))
(define-fun x2177 ((x1744 Real)) Real (ite (= x4564 x1744) x1087 (x3903 x1744)))
(define-fun x1167 ((x1744 Real)) Real (ite (= x1744 x3010) x9 (x2177 x1744)))
(define-fun x1147 ((x1744 Real)) Real (ite (= x1744 x1029) x917 (x3953 x1744)))
(define-fun x4898 ((x1744 Real)) Real (ite (= x3075 x1744) x5084 (x1147 x1744)))
(define-fun x4262 ((x1744 Real)) Real (ite (= x1744 x4909) x1725 (x4898 x1744)))
(define-fun x2509 ((x1744 Real)) Real (ite (= x1744 x132) x2680 (x4262 x1744)))
(define-fun x1491 ((x1744 Real)) Real (ite (= x3887 x1744) x3623 (x2509 x1744)))
(define-fun x4340 ((x1744 Real)) Real (ite (and x1639 x2182) (x1167 x1744) (x1491 x1744)))
(define-fun x2986 ((x1744 Real)) Real (ite (and (not x5049) x1778) (x874 x1744) (x2958 x1744)))
(define-fun x4858 ((x1744 Real)) Real (ite (= x1744 x1870) x1575 (x793 x1744)))
(define-fun x3843 ((x1744 Real)) Real (ite x2076 (x4858 x1744) (x793 x1744)))
(define-fun x2886 ((x1744 Real)) Real (ite (= x1744 x2477) x3838 (x3843 x1744)))
(define-fun x475 ((x1744 Real)) Real (ite (= x1744 x3529) x4994 (x5129 x1744)))
(define-fun x1634 ((x1744 Real)) Real (ite x2076 (x475 x1744) (x5129 x1744)))
(define-fun x2457 ((x1744 Real)) Real (ite (= x364 x1744) x5093 (x1634 x1744)))
(define-fun x1463 ((x1744 Real)) Real (ite (= x620 x1744) x1938 (x4182 x1744)))
(define-fun x707 ((x1744 Real)) Real (ite x2076 (x1463 x1744) (x4182 x1744)))
(define-fun x1790 ((x1744 Real)) Real (ite (= x1744 x3164) x3508 (x707 x1744)))
(define-fun x2978 ((x1744 Real)) Real (ite (= x1744 x3284) x1897 (x3849 x1744)))
(define-fun x1827 ((x1744 Real)) Real (ite x2076 (x2978 x1744) (x3849 x1744)))
(define-fun x3020 ((x1744 Real)) Real (ite (= x1744 x263) x4166 (x1827 x1744)))
(define-fun x4206 ((x1744 Real)) Real (ite (= x1744 x4745) x3816 (x1064 x1744)))
(define-fun x2678 ((x1744 Real)) Real (ite x2076 (x4206 x1744) (x1064 x1744)))
(define-fun x1689 ((x1744 Real)) Real (ite (= x1744 x2976) x1695 (x2678 x1744)))
(define-fun x1371 ((x1744 Real)) Real (ite (= x1744 x1861) x4177 (x190 x1744)))
(define-fun x1364 ((x1744 Real)) Real (ite x2076 (x1371 x1744) (x190 x1744)))
(define-fun x4238 ((x1744 Real)) Real (ite (= x1744 x2431) x4533 (x1364 x1744)))
(define-fun x2213 ((x1744 Real)) Real (ite (= x4580 x1744) x3959 (x1854 x1744)))
(define-fun x4830 ((x1744 Real)) Real (ite x2076 (x2213 x1744) (x1854 x1744)))
(define-fun x3315 ((x1744 Real)) Real (ite (= x1744 x925) x3302 (x4830 x1744)))
(define-fun x3784 ((x1744 Real)) Real (ite (= x1744 x5155) x2224 (x4316 x1744)))
(define-fun x952 ((x1744 Real)) Real (ite x2076 (x3784 x1744) (x4316 x1744)))
(define-fun x19 ((x1744 Real)) Real (ite (= x187 x1744) x549 (x952 x1744)))
(define-fun x3123 ((x1744 Real)) Real (ite (= 128 x1744) x4350 (x2870 x1744)))
(define-fun x3165 ((x1744 Real)) Real (ite (= 160 x1744) x4112 (x3123 x1744)))
(define-fun x3209 ((x1744 Real)) Real (ite (= x1744 192) x2353 (x3165 x1744)))
(define-fun x2277 ((x1744 Real)) Real (ite (= 224 x1744) x1834 (x3209 x1744)))
(define-fun x958 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x2277 x1744)))
(define-fun x3604 ((x1744 Real)) Real (ite (= x356 x1744) x2693 (x4791 x1744)))
(define-fun x4135 ((x1744 Real)) Real (ite (= x1744 x3413) x1880 (x3604 x1744)))
(define-fun x4690 ((x1744 Real)) Real (ite (= x1744 x3676) x1706 (x4135 x1744)))
(define-fun x1483 ((x1744 Real)) Real (ite (= x4009 x1744) x2448 (x4690 x1744)))
(define-fun x1407 ((x1744 Real)) Real (ite (= x2149 x1744) x3227 (x1483 x1744)))
(define-fun x3513 ((x1744 Real)) Real (ite (= 0 x1744) x4721 (x259 x1744)))
(define-fun x1802 ((x1744 Real)) Real (ite (= 32 x1744) x3361 (x3513 x1744)))
(define-fun x1596 ((x1744 Real)) Real (ite (= x1744 64) x2365 (x1802 x1744)))
(define-fun x884 ((x1744 Real)) Real (ite (= x1744 96) x4281 (x1596 x1744)))
(define-fun x5227 ((x1744 Real)) Real (ite (= x1744 128) x2320 (x884 x1744)))
(define-fun x2221 ((x1744 Real)) Real (ite (= x3820 x1744) x5191 (x3266 x1744)))
(define-fun x733 ((x1744 Real)) Real (ite x3777 (x2221 x1744) (x3266 x1744)))
(define-fun x1082 ((x1744 Real)) Real (ite (= x1744 x4240) x1691 (x733 x1744)))
(define-fun x5059 ((x1744 Real)) Real (ite (= x16 x1744) x1587 (x4586 x1744)))
(define-fun x1260 ((x1744 Real)) Real (ite x3777 (x5059 x1744) (x4586 x1744)))
(define-fun x2734 ((x1744 Real)) Real (ite (= x2208 x1744) x2243 (x1260 x1744)))
(define-fun x1006 ((x1744 Real)) Real (ite (= x1744 x5214) x1229 (x3781 x1744)))
(define-fun x117 ((x1744 Real)) Real (ite x3777 (x1006 x1744) (x3781 x1744)))
(define-fun x1031 ((x1744 Real)) Real (ite (= x1744 x2098) x2389 (x117 x1744)))
(define-fun x8 ((x1744 Real)) Real (ite (= x1744 x158) x883 (x4627 x1744)))
(define-fun x3695 ((x1744 Real)) Real (ite x3777 (x8 x1744) (x4627 x1744)))
(define-fun x1878 ((x1744 Real)) Real (ite (= x1744 x1892) x4955 (x3695 x1744)))
(define-fun x3491 ((x1744 Real)) Real (ite (= x4104 x1744) x1759 (x247 x1744)))
(define-fun x1207 ((x1744 Real)) Real (ite x3777 (x3491 x1744) (x247 x1744)))
(define-fun x871 ((x1744 Real)) Real (ite (= x1744 x2321) x2375 (x1207 x1744)))
(define-fun x1159 ((x1744 Real)) Real (ite (= x231 x1744) x3087 (x2969 x1744)))
(define-fun x4885 ((x1744 Real)) Real (ite x3777 (x1159 x1744) (x2969 x1744)))
(define-fun x887 ((x1744 Real)) Real (ite (= x1744 x1431) x2257 (x4885 x1744)))
(define-fun x2374 ((x1744 Real)) Real (ite (= x1744 x3102) x2993 (x1074 x1744)))
(define-fun x5029 ((x1744 Real)) Real (ite x3777 (x2374 x1744) (x1074 x1744)))
(define-fun x2549 ((x1744 Real)) Real (ite (= x1744 x5119) x3629 (x5029 x1744)))
(define-fun x1296 ((x1744 Real)) Real (ite (= x1744 x1454) x3891 (x5211 x1744)))
(define-fun x2856 ((x1744 Real)) Real (ite x3777 (x1296 x1744) (x5211 x1744)))
(define-fun x4503 ((x1744 Real)) Real (ite (= x1744 x807) x2425 (x2856 x1744)))
(define-fun x3013 ((x1744 x2506)) Real (ite (= x2278 x1744) x1885 (x4399 x1744)))
(define-fun x2496 ((x1744 Real)) Real (ite (= 128 x1744) x572 (x2281 x1744)))
(define-fun x1 ((x1744 Real)) Real (ite (= 160 x1744) x771 (x2496 x1744)))
(define-fun x2523 ((x1744 Real)) Real (ite (= x1744 192) x5167 (x1 x1744)))
(define-fun x1212 ((x1744 Real)) Real (ite (= 224 x1744) x4611 (x2523 x1744)))
(define-fun x2186 ((x1744 Real)) Real (ite (= x1744 256) x533 (x1212 x1744)))
(define-fun x4902 ((x1744 Real)) Real (ite (= 128 x1744) x5040 (x2281 x1744)))
(define-fun x1710 ((x1744 Real)) Real (ite (= 160 x1744) x2369 (x4902 x1744)))
(define-fun x4213 ((x1744 Real)) Real (ite (= x1744 192) x28 (x1710 x1744)))
(define-fun x4871 ((x1744 Real)) Real (ite (= 224 x1744) x2044 (x4213 x1744)))
(define-fun x575 ((x1744 Real)) Real (ite (= x1744 256) x3350 (x4871 x1744)))
(define-fun x2902 ((x1744 Real)) Real (ite (= x1744 x1708) x3177 (x3301 x1744)))
(define-fun x4285 ((x1744 Real)) Real (ite (= x1183 x1744) x553 (x2902 x1744)))
(define-fun x3720 ((x1744 Real)) Real (ite (= x3393 x1744) x2975 (x4285 x1744)))
(define-fun x1163 ((x1744 Real)) Real (ite (= x4661 x1744) x4313 (x3720 x1744)))
(define-fun x1035 ((x1744 Real)) Real (ite (= x1744 x3951) x1605 (x1163 x1744)))
(define-fun x1920 ((x1744 Real)) Real (ite (= x1708 x1744) x3251 (x3301 x1744)))
(define-fun x2854 ((x1744 Real)) Real (ite (= x3160 x1744) x151 (x1920 x1744)))
(define-fun x3782 ((x1744 Real)) Real (ite (= x1744 x4995) x2174 (x2854 x1744)))
(define-fun x2694 ((x1744 Real)) Real (ite (= x3407 x1744) x2836 (x3782 x1744)))
(define-fun x3566 ((x1744 Real)) Real (ite (= x1744 x2801) x2910 (x2694 x1744)))
(define-fun x3313 ((x1744 Real)) Real (ite (and x1046 x795) (x1035 x1744) (x3566 x1744)))
(define-fun x2498 ((x1744 Real)) Real (ite (= 128 x1744) x4350 (x326 x1744)))
(define-fun x489 ((x1744 Real)) Real (ite (= 160 x1744) x974 (x2498 x1744)))
(define-fun x1016 ((x1744 Real)) Real (ite (= x1744 192) x2353 (x489 x1744)))
(define-fun x2045 ((x1744 Real)) Real (ite (= x1744 224) x1834 (x1016 x1744)))
(define-fun x1776 ((x1744 Real)) Real (ite (= x1744 256) x888 (x2045 x1744)))
(define-fun x3333 ((x1744 Real)) Real (ite (= x5107 x1744) x1319 (x990 x1744)))
(define-fun x2692 ((x1744 Real)) Real (ite (= x2244 x1744) x4605 (x3333 x1744)))
(define-fun x31 ((x1744 Real)) Real (ite (= x1744 x2735) x3221 (x2692 x1744)))
(define-fun x2555 ((x1744 Real)) Real (ite (= x1744 x3095) x488 (x31 x1744)))
(define-fun x4776 ((x1744 Real)) Real (ite (= x4071 x1744) x3504 (x2555 x1744)))
(define-fun x2357 ((x1744 Real)) Real (ite (= x1744 0) x821 (x240 x1744)))
(define-fun x2105 ((x1744 Real)) Real (ite (= 32 x1744) x1841 (x2357 x1744)))
(define-fun x1305 ((x1744 Real)) Real (ite (= 64 x1744) x836 (x2105 x1744)))
(define-fun x2832 ((x1744 Real)) Real (ite (= x1744 96) x1252 (x1305 x1744)))
(define-fun x1900 ((x1744 Real)) Real (ite (= 128 x1744) x395 (x2832 x1744)))
(define-fun x4485 ((x1744 Real)) Real (ite (= x1744 x356) x2731 (x4791 x1744)))
(define-fun x4555 ((x1744 Real)) Real (ite (= x1744 x3263) x5076 (x4485 x1744)))
(define-fun x3322 ((x1744 Real)) Real (ite (= x1744 x2159) x4464 (x4555 x1744)))
(define-fun x4452 ((x1744 Real)) Real (ite (= x1744 x3917) x4010 (x3322 x1744)))
(define-fun x2827 ((x1744 Real)) Real (ite (= x1744 x3761) x3033 (x4452 x1744)))
(define-fun x2077 ((x1744 Real)) Real (ite (and x3807 x1350) (x1407 x1744) (x2827 x1744)))
(define-fun x4256 ((x1744 Real)) Real (ite x1823 (x2077 x1744) (x874 x1744)))
(define-fun x2284 ((x1744 Real)) Real (ite (= x5107 x1744) x1728 (x990 x1744)))
(define-fun x4169 ((x1744 Real)) Real (ite (= x5024 x1744) x2656 (x2284 x1744)))
(define-fun x1538 ((x1744 Real)) Real (ite (= x1744 x4190) x3418 (x4169 x1744)))
(define-fun x1715 ((x1744 Real)) Real (ite (= x2216 x1744) x4975 (x1538 x1744)))
(define-fun x3632 ((x1744 Real)) Real (ite (= x4648 x1744) x5126 (x1715 x1744)))
(define-fun x2486 ((x1744 Real)) Real (ite (and x2622 x1376) (x4776 x1744) (x3632 x1744)))
(define-fun x734 ((x1744 Real)) Real (ite x127 (x2486 x1744) (x845 x1744)))
(define-fun x2332 ((x1744 Real)) Real (ite (and (not x545) x2590) (x874 x1744) (ite (and x3984 (not x1607)) (x2958 x1744) (x4256 x1744))))
(define-fun x353 ((x1744 Real)) Real (ite x4614 (ite (and (not x3732) x2188) (x845 x1744) (ite (and (not x3535) x1406) (x5247 x1744) (x734 x1744))) (ite (and x629 (not x2529)) (x845 x1744) (x5247 x1744))))
(define-fun x3219 ((x1744 Real)) Real (ite (= x3774 x1744) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x353 x1744)))
(define-fun x1979 ((x1744 Real)) Real (ite (= x1744 x3027) x4857 (x3219 x1744)))
(define-fun x4140 ((x1744 x2506)) Real (ite (= x3117 x1744) x4145 (x3181 x1744)))
(define-fun x1362 ((x1744 Real)) Real (ite (= 0 x1744) 1 (x977 x1744)))
(define-fun x940 ((x1744 Real)) Real (ite (= x3774 x1744) 1 (x763 x1744)))
(define-fun x2504 ((x1744 x2506)) Real (ite (= x3408 x1744) x4993 (x4204 x1744)))
(define-fun x1000 ((x1744 Real)) Real (ite (= x1744 128) x3958 (x2042 x1744)))
(define-fun x1130 ((x1744 Real)) Real (ite (= x1744 224) x4820 (x2217 x1744)))
(define-fun x3631 ((x1744 Real)) Real (ite (= 256 x1744) x1918 (x1299 x1744)))
(define-fun x1027 ((x1744 Real)) Real (ite (= x1744 128) x2413 (x1000 x1744)))
(define-fun x10 ((x1744 Real)) Real (ite (= 192 x1744) x3652 (x4477 x1744)))
(define-fun x2255 ((x1744 Real)) Real (ite (= 192 x1744) x4860 (x4477 x1744)))
(define-fun x234 ((x1744 Real)) Real (ite (and x1176 x4109 x2676) (x2255 x1744) (x10 x1744)))
(define-fun x2161 ((x1744 Real)) Real (ite (= x1744 160) x1724 (x1427 x1744)))
(define-fun x1982 ((x1744 Real)) Real (ite (= 160 x1744) x2026 (x1427 x1744)))
(define-fun x1472 ((x1744 Real)) Real (ite (= x1744 128) x4350 (x599 x1744)))
(define-fun x4873 ((x1744 Real)) Real (ite (= 160 x1744) x1940 (x1472 x1744)))
(define-fun x1313 ((x1744 Real)) Real (ite (= 192 x1744) x2353 (x4873 x1744)))
(define-fun x3460 ((x1744 Real)) Real (ite (= 224 x1744) x1834 (x1313 x1744)))
(define-fun x4070 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x3460 x1744)))
(define-fun x3390 ((x1744 Real)) Real (ite (= 0 x1744) x2342 (x4559 x1744)))
(define-fun x4414 ((x1744 Real)) Real (ite (= x1744 32) x3738 (x3390 x1744)))
(define-fun x5143 ((x1744 Real)) Real (ite (= 64 x1744) x912 (x4414 x1744)))
(define-fun x3168 ((x1744 Real)) Real (ite (= x1744 96) x3826 (x5143 x1744)))
(define-fun x4751 ((x1744 Real)) Real (ite (= x1744 128) x1847 (x3168 x1744)))
(define-fun x1879 ((x1744 Real)) Real (ite (= 128 x1744) x4350 (x2445 x1744)))
(define-fun x2833 ((x1744 Real)) Real (ite (= 160 x1744) x3637 (x1879 x1744)))
(define-fun x3515 ((x1744 Real)) Real (ite (= 192 x1744) x2353 (x2833 x1744)))
(define-fun x11 ((x1744 Real)) Real (ite (= x1744 224) x1834 (x3515 x1744)))
(define-fun x1441 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x11 x1744)))
(define-fun x3916 ((x1744 Real)) Real (ite (= 0 x1744) x4054 (x4896 x1744)))
(define-fun x2080 ((x1744 Real)) Real (ite (= 32 x1744) x2806 (x3916 x1744)))
(define-fun x3770 ((x1744 Real)) Real (ite (= x1744 64) x3587 (x2080 x1744)))
(define-fun x5101 ((x1744 Real)) Real (ite (= 96 x1744) x3046 (x3770 x1744)))
(define-fun x2144 ((x1744 Real)) Real (ite (= 128 x1744) x167 (x5101 x1744)))
(define-fun x4237 ((x1744 Real)) Real (ite (= x1744 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2295 x1744)))
(define-fun x4853 ((x1744 Real)) Real (ite (= x1744 132) 274184521717934524641157099916833587210 (x4237 x1744)))
(define-fun x3126 ((x1744 Real)) Real (ite (= x1744 0) x1676 (x1734 x1744)))
(define-fun x3452 ((x1744 Real)) Real (ite (= x1744 128) x1676 (x4853 x1744)))
(define-fun x4543 ((x1744 Real)) Real (ite (= x1744 160) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3452 x1744)))
(define-fun x3509 ((x1744 Real)) Real (ite (= x1744 164) x4857 (x4543 x1744)))
(define-fun x4248 ((x1744 Real)) Real (ite (= x1744 196) 274184521717934524641157099916833587210 (x3509 x1744)))
(define-fun x2536 ((x1744 Real)) Real (ite (= x1744 228) x4326 (x4248 x1744)))
(define-fun x879 ((x1744 x2506)) Real (ite (= x1744 x4441) x5060 (x3181 x1744)))
(define-fun x4632 ((x1744 Real)) Real (ite (= x1744 0) 1 (x312 x1744)))
(define-fun x2 ((x1744 Real)) Real (ite (= 160 x1744) 1 (x2536 x1744)))
(define-fun x1067 ((x1744 Real)) Real (ite (and x5044 (not x4201)) (x1395 x1744) (ite x2150 (x2332 x1744) (x2986 x1744))))
(define-fun x2713 ((x1744 Real)) Real (ite (= x1744 x1869) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1067 x1744)))
(define-fun x4833 ((x1744 Real)) Real (ite (= x1744 x2699) x4857 (x2713 x1744)))
(define-fun x3201 ((x1744 Real)) Real (ite (= x1744 x3714) x3706 (x4833 x1744)))
(define-fun x152 ((x1744 x2506)) Real (ite (= x683 x1744) x376 (x3181 x1744)))
(define-fun x2013 ((x1744 Real)) Real (ite (= x1744 0) 1 (x2016 x1744)))
(define-fun x5109 ((x1744 Real)) Real (ite (= x1869 x1744) 1 (x3201 x1744)))
(define-fun x3364 ((x1744 Real)) Real (ite (and x4500 x2676 x4109) (x1982 x1744) (x2161 x1744)))
(define-fun x2770 ((x1744 x2506)) Real (ite (= x4409 x1744) x1384 (x3703 x1744)))
(define-fun x2813 ((x1744 x2506)) Real (ite (= x4409 x1744) x4841 (x4204 x1744)))
(define-fun x4419 ((x1744 Real)) Real (ite (= x1744 128) x4350 (x4331 x1744)))
(define-fun x3978 ((x1744 Real)) Real (ite (= 160 x1744) x182 (x4419 x1744)))
(define-fun x4802 ((x1744 Real)) Real (ite (= 192 x1744) x2353 (x3978 x1744)))
(define-fun x803 ((x1744 Real)) Real (ite (= x1744 224) x1834 (x4802 x1744)))
(define-fun x473 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x803 x1744)))
(define-fun x4365 ((x1744 Real)) Real (ite (= 0 x1744) x2925 (x682 x1744)))
(define-fun x3895 ((x1744 Real)) Real (ite (= x1744 32) x159 (x4365 x1744)))
(define-fun x738 ((x1744 Real)) Real (ite (= 64 x1744) x3512 (x3895 x1744)))
(define-fun x1231 ((x1744 Real)) Real (ite (= 96 x1744) x1517 (x738 x1744)))
(define-fun x4255 ((x1744 Real)) Real (ite (= 128 x1744) x4462 (x1231 x1744)))
(define-fun x332 ((x1744 Real)) Real (ite (= 128 x1744) x4350 (x4581 x1744)))
(define-fun x4384 ((x1744 Real)) Real (ite (= x1744 160) x1646 (x332 x1744)))
(define-fun x2204 ((x1744 Real)) Real (ite (= x1744 192) x2353 (x4384 x1744)))
(define-fun x1142 ((x1744 Real)) Real (ite (= x1744 224) x1834 (x2204 x1744)))
(define-fun x1576 ((x1744 Real)) Real (ite (= x1744 256) x888 (x1142 x1744)))
(define-fun x4373 ((x1744 Real)) Real (ite (= 0 x1744) x864 (x5142 x1744)))
(define-fun x4361 ((x1744 Real)) Real (ite (= x1744 32) x2454 (x4373 x1744)))
(define-fun x1942 ((x1744 Real)) Real (ite (= 64 x1744) x3759 (x4361 x1744)))
(define-fun x177 ((x1744 Real)) Real (ite (= x1744 96) x4385 (x1942 x1744)))
(define-fun x1220 ((x1744 Real)) Real (ite (= 128 x1744) x1580 (x177 x1744)))
(define-fun x3304 ((x1744 Real)) Real (ite (= x3264 x1744) x3832 (x1949 x1744)))
(define-fun x1248 ((x1744 Real)) Real (ite x1809 (x3304 x1744) (x1949 x1744)))
(define-fun x823 ((x1744 Real)) Real (ite (= x4979 x1744) x4534 (x1248 x1744)))
(define-fun x3297 ((x1744 Real)) Real (ite (= x2962 x1744) x3590 (x2171 x1744)))
(define-fun x5212 ((x1744 Real)) Real (ite x1809 (x3297 x1744) (x2171 x1744)))
(define-fun x1601 ((x1744 Real)) Real (ite (= x903 x1744) x439 (x5212 x1744)))
(define-fun x4589 ((x1744 Real)) Real (ite (= x1744 x950) x657 (x3806 x1744)))
(define-fun x3444 ((x1744 Real)) Real (ite x1809 (x4589 x1744) (x3806 x1744)))
(define-fun x4093 ((x1744 Real)) Real (ite (= x1744 x781) x1768 (x3444 x1744)))
(define-fun x644 ((x1744 Real)) Real (ite (= x1744 x3848) x4693 (x85 x1744)))
(define-fun x1703 ((x1744 Real)) Real (ite x1809 (x644 x1744) (x85 x1744)))
(define-fun x3470 ((x1744 Real)) Real (ite (= x1744 x1280) x2218 (x1703 x1744)))
(define-fun x2166 ((x1744 Real)) Real (ite (= x1744 x2908) x4288 (x453 x1744)))
(define-fun x402 ((x1744 Real)) Real (ite x1809 (x2166 x1744) (x453 x1744)))
(define-fun x2462 ((x1744 Real)) Real (ite (= x1744 x3030) x4295 (x402 x1744)))
(define-fun x3270 ((x1744 Real)) Real (ite (= x1744 x2211) x625 (x2718 x1744)))
(define-fun x2655 ((x1744 Real)) Real (ite x1809 (x3270 x1744) (x2718 x1744)))
(define-fun x255 ((x1744 Real)) Real (ite (= x358 x1744) x2333 (x2655 x1744)))
(define-fun x2254 ((x1744 Real)) Real (ite (= x1744 x3656) x3907 (x4667 x1744)))
(define-fun x1664 ((x1744 Real)) Real (ite x1809 (x2254 x1744) (x4667 x1744)))
(define-fun x2228 ((x1744 Real)) Real (ite (= x1843 x1744) x2463 (x1664 x1744)))
(define-fun x985 ((x1744 Real)) Real (ite (= x1744 x3169) x286 (x4179 x1744)))
(define-fun x5092 ((x1744 Real)) Real (ite x1809 (x985 x1744) (x4179 x1744)))
(define-fun x3105 ((x1744 Real)) Real (ite (= x1479 x1744) x5077 (x5092 x1744)))
(define-fun x2104 ((x1744 x2506)) Real (ite (= x2097 x1744) x295 (x4399 x1744)))
(define-fun x366 ((x1744 Real)) Real (ite (= x1744 960) x2963 (x1361 x1744)))
(define-fun x196 ((x1744 Real)) Real (ite (= 992 x1744) x2798 (x366 x1744)))
(define-fun x2341 ((x1744 Real)) Real (ite (= x1744 1024) x3107 (x196 x1744)))
(define-fun x2428 ((x1744 Real)) Real (ite (= x1744 1056) x1304 (x2341 x1744)))
(define-fun x1214 ((x1744 Real)) Real (ite (= 1088 x1744) x5170 (x2428 x1744)))
(define-fun x4869 ((x1744 Real)) Real (ite (= 960 x1744) x4259 (x1361 x1744)))
(define-fun x4338 ((x1744 Real)) Real (ite (= x1744 992) x479 (x4869 x1744)))
(define-fun x3158 ((x1744 Real)) Real (ite (= 1024 x1744) x1423 (x4338 x1744)))
(define-fun x2398 ((x1744 Real)) Real (ite (= 1056 x1744) x2573 (x3158 x1744)))
(define-fun x2476 ((x1744 Real)) Real (ite (= x1744 1088) x4734 (x2398 x1744)))
(define-fun x2930 ((x1744 Real)) Real (ite (and x4472 x2948) (x1214 x1744) (x2476 x1744)))
(define-fun x2617 ((x1744 Real)) Real (ite (= x1744 x2576) x2128 (x1913 x1744)))
(define-fun x812 ((x1744 Real)) Real (ite (= x3345 x1744) x1927 (x2617 x1744)))
(define-fun x233 ((x1744 Real)) Real (ite (= x1744 x621) x4674 (x812 x1744)))
(define-fun x2897 ((x1744 Real)) Real (ite (= x872 x1744) x1737 (x233 x1744)))
(define-fun x2995 ((x1744 Real)) Real (ite (= x4920 x1744) x518 (x2897 x1744)))
(define-fun x392 ((x1744 Real)) Real (ite (= x2576 x1744) x4358 (x1913 x1744)))
(define-fun x2985 ((x1744 Real)) Real (ite (= x1744 x4610) x2239 (x392 x1744)))
(define-fun x4932 ((x1744 Real)) Real (ite (= x83 x1744) x4354 (x2985 x1744)))
(define-fun x5013 ((x1744 Real)) Real (ite (= x551 x1744) x3203 (x4932 x1744)))
(define-fun x2245 ((x1744 Real)) Real (ite (= x609 x1744) x1971 (x5013 x1744)))
(define-fun x251 ((x1744 Real)) Real (ite (and x2741 x3058) (x2995 x1744) (x2245 x1744)))
(define-fun x544 ((x1744 Real)) Real (ite (= x1835 x1744) x1693 (x5028 x1744)))
(define-fun x4539 ((x1744 Real)) Real (ite (= x1744 x4421) x4856 (x544 x1744)))
(define-fun x3884 ((x1744 Real)) Real (ite (= x166 x1744) x4482 (x4539 x1744)))
(define-fun x1080 ((x1744 Real)) Real (ite (= x4379 x1744) x4276 (x3884 x1744)))
(define-fun x2994 ((x1744 Real)) Real (ite (= x4490 x1744) x5125 (x1080 x1744)))
(define-fun x1091 ((x1744 Real)) Real (ite (= x1835 x1744) x4740 (x5028 x1744)))
(define-fun x4594 ((x1744 Real)) Real (ite (= x1744 x3290) x87 (x1091 x1744)))
(define-fun x4536 ((x1744 Real)) Real (ite (= x1744 x3635) x1625 (x4594 x1744)))
(define-fun x3495 ((x1744 Real)) Real (ite (= x1443 x1744) x824 (x4536 x1744)))
(define-fun x224 ((x1744 Real)) Real (ite (= x1744 x2817) x3308 (x3495 x1744)))
(define-fun x4200 ((x1744 Real)) Real (ite (= x1744 x1178) x2494 (x2679 x1744)))
(define-fun x2815 ((x1744 Real)) Real (ite (= x1744 x4699) x4793 (x4200 x1744)))
(define-fun x1783 ((x1744 Real)) Real (ite (= x1744 x2157) x5174 (x2815 x1744)))
(define-fun x2673 ((x1744 Real)) Real (ite (= x3647 x1744) x3363 (x1783 x1744)))
(define-fun x5259 ((x1744 Real)) Real (ite (= x2114 x1744) x2785 (x2673 x1744)))
(define-fun x5225 ((x1744 Real)) Real (ite (= x1178 x1744) x4415 (x2679 x1744)))
(define-fun x4195 ((x1744 Real)) Real (ite (= x3997 x1744) x3899 (x5225 x1744)))
(define-fun x630 ((x1744 Real)) Real (ite (= x566 x1744) x673 (x4195 x1744)))
(define-fun x420 ((x1744 Real)) Real (ite (= x1744 x3436) x3737 (x630 x1744)))
(define-fun x2030 ((x1744 Real)) Real (ite (= x1744 x1276) x2219 (x420 x1744)))
(define-fun x5208 ((x1744 Real)) Real (ite (and x3534 x791) (x5259 x1744) (x2030 x1744)))
(define-fun x1439 ((x1744 Real)) Real (ite (= x1744 128) x4350 (x1209 x1744)))
(define-fun x753 ((x1744 Real)) Real (ite (= x1744 160) x5146 (x1439 x1744)))
(define-fun x4767 ((x1744 Real)) Real (ite (= x1744 192) x2353 (x753 x1744)))
(define-fun x4845 ((x1744 Real)) Real (ite (= x1744 224) x1834 (x4767 x1744)))
(define-fun x1128 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x4845 x1744)))
(define-fun x4161 ((x1744 Real)) Real (ite (= x1744 x1160) x5164 (x3929 x1744)))
(define-fun x1723 ((x1744 Real)) Real (ite (= x1744 x219) x4148 (x4161 x1744)))
(define-fun x1102 ((x1744 Real)) Real (ite (= x4507 x1744) x2202 (x1723 x1744)))
(define-fun x218 ((x1744 Real)) Real (ite (= x1744 x4609) x4098 (x1102 x1744)))
(define-fun x1420 ((x1744 Real)) Real (ite (= x3748 x1744) x3968 (x218 x1744)))
(define-fun x1932 ((x1744 Real)) Real (ite (= x1744 0) x2397 (x5158 x1744)))
(define-fun x3809 ((x1744 Real)) Real (ite (= x1744 32) x2331 (x1932 x1744)))
(define-fun x3167 ((x1744 Real)) Real (ite (= 64 x1744) x649 (x3809 x1744)))
(define-fun x1257 ((x1744 Real)) Real (ite (= x1744 96) x3735 (x3167 x1744)))
(define-fun x512 ((x1744 Real)) Real (ite (= 128 x1744) x3817 (x1257 x1744)))
(define-fun x2574 ((x1744 Real)) Real (ite (= x1744 x1160) x3226 (x3929 x1744)))
(define-fun x2436 ((x1744 Real)) Real (ite (= x4370 x1744) x4479 (x2574 x1744)))
(define-fun x651 ((x1744 Real)) Real (ite (= x2376 x1744) x3204 (x2436 x1744)))
(define-fun x70 ((x1744 Real)) Real (ite (= x1744 x5012) x3230 (x651 x1744)))
(define-fun x4388 ((x1744 Real)) Real (ite (= x207 x1744) x1458 (x70 x1744)))
(define-fun x2845 ((x1744 Real)) Real (ite (and x853 x180) (x1420 x1744) (x4388 x1744)))
(define-fun x1494 ((x1744 Real)) Real (ite x3447 (x2845 x1744) (x2276 x1744)))
(define-fun x427 ((x1744 Real)) Real (ite x511 (ite (and x372 (not x4981)) (x2276 x1744) (ite (and x3054 (not x790)) (x4944 x1744) (x1494 x1744))) (ite (and x374 (not x3908)) (x2276 x1744) (x4944 x1744))))
(define-fun x2001 ((x1744 Real)) Real (ite (= x5081 x1744) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x427 x1744)))
(define-fun x1893 ((x1744 Real)) Real (ite (= x1744 x1669) x3088 (x2001 x1744)))
(define-fun x959 ((x1744 x2506)) Real (ite (= x3481 x1744) x3571 (x2774 x1744)))
(define-fun x3063 ((x1744 x2506)) Real (ite (= x1744 x4950) x4884 (x959 x1744)))
(define-fun x3086 ((x1744 Real)) Real (ite (= 0 x1744) 1 (x3768 x1744)))
(define-fun x5154 ((x1744 Real)) Real (ite (= x1744 x5081) 1 (x2518 x1744)))
(define-fun x4056 ((x1744 Real)) Real (ite (= 128 x1744) x4350 (x3833 x1744)))
(define-fun x3365 ((x1744 Real)) Real (ite (= x1744 160) x846 (x4056 x1744)))
(define-fun x3856 ((x1744 Real)) Real (ite (= x1744 192) x2353 (x3365 x1744)))
(define-fun x4073 ((x1744 Real)) Real (ite (= x1744 224) x1834 (x3856 x1744)))
(define-fun x3592 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x4073 x1744)))
(define-fun x337 ((x1744 Real)) Real (ite (= x1744 0) x3795 (x1481 x1744)))
(define-fun x2691 ((x1744 Real)) Real (ite (= 32 x1744) x4044 (x337 x1744)))
(define-fun x4381 ((x1744 Real)) Real (ite (= 64 x1744) x1385 (x2691 x1744)))
(define-fun x189 ((x1744 Real)) Real (ite (= 96 x1744) x1154 (x4381 x1744)))
(define-fun x1833 ((x1744 Real)) Real (ite (= x1744 128) x3326 (x189 x1744)))
(define-fun x2997 ((x1744 Real)) Real (ite (= x1744 704) x2230 (x3343 x1744)))
(define-fun x1513 ((x1744 Real)) Real (ite (= x1744 736) x1105 (x3137 x1744)))
(define-fun x2980 ((x1744 Real)) Real (ite (= 768 x1744) x4458 (x1782 x1744)))
(define-fun x1208 ((x1744 Real)) Real (ite (= x1744 800) x2175 (x4866 x1744)))
(define-fun x3798 ((x1744 Real)) Real (ite (= 832 x1744) x4343 (x2613 x1744)))
(define-fun x3074 ((x1744 Real)) Real (ite (= x1744 864) x3787 (x2852 x1744)))
(define-fun x4174 ((x1744 Real)) Real (ite (= x1744 896) x50 (x4659 x1744)))
(define-fun x2767 ((x1744 Real)) Real (ite (= 928 x1744) x2782 (x2020 x1744)))
(define-fun x1354 ((x1744 Real)) Real (ite (= x1744 128) x4350 (x1456 x1744)))
(define-fun x815 ((x1744 Real)) Real (ite (= x1744 160) x4396 (x1354 x1744)))
(define-fun x4854 ((x1744 Real)) Real (ite (= 192 x1744) x2353 (x815 x1744)))
(define-fun x677 ((x1744 Real)) Real (ite (= 224 x1744) x1834 (x4854 x1744)))
(define-fun x749 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x677 x1744)))
(define-fun x2192 ((x1744 Real)) Real (ite (= x1744 0) x5218 (x1508 x1744)))
(define-fun x768 ((x1744 Real)) Real (ite (= x1744 32) x3810 (x2192 x1744)))
(define-fun x191 ((x1744 Real)) Real (ite (= 64 x1744) x5110 (x768 x1744)))
(define-fun x3599 ((x1744 Real)) Real (ite (= 96 x1744) x1585 (x191 x1744)))
(define-fun x816 ((x1744 Real)) Real (ite (= 128 x1744) x522 (x3599 x1744)))
(define-fun x2433 ((x1744 Real)) Real (ite (= x1744 128) x4350 (x1379 x1744)))
(define-fun x3671 ((x1744 Real)) Real (ite (= x1744 160) x4403 (x2433 x1744)))
(define-fun x1591 ((x1744 Real)) Real (ite (= x1744 192) x2353 (x3671 x1744)))
(define-fun x2903 ((x1744 Real)) Real (ite (= 224 x1744) x1834 (x1591 x1744)))
(define-fun x4264 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x2903 x1744)))
(define-fun x3919 ((x1744 Real)) Real (ite (= 0 x1744) x1309 (x531 x1744)))
(define-fun x4128 ((x1744 Real)) Real (ite (= 32 x1744) x1895 (x3919 x1744)))
(define-fun x4558 ((x1744 Real)) Real (ite (= x1744 64) x192 (x4128 x1744)))
(define-fun x1227 ((x1744 Real)) Real (ite (= x1744 96) x444 (x4558 x1744)))
(define-fun x509 ((x1744 Real)) Real (ite (= x1744 128) x421 (x1227 x1744)))
(define-fun x4545 ((x1744 Real)) Real (ite (= 288 x1744) x5008 (x1448 x1744)))
(define-fun x279 ((x1744 Real)) Real (ite (= 320 x1744) x2688 (x4545 x1744)))
(define-fun x2640 ((x1744 Real)) Real (ite (= x1744 352) x718 (x279 x1744)))
(define-fun x1090 ((x1744 Real)) Real (ite (= x1744 384) x4727 (x2640 x1744)))
(define-fun x2900 ((x1744 Real)) Real (ite (= 416 x1744) x3649 (x1090 x1744)))
(define-fun x5202 ((x1744 Real)) Real (ite (= x1744 288) x3234 (x1448 x1744)))
(define-fun x2570 ((x1744 Real)) Real (ite (= x1744 320) x365 (x5202 x1744)))
(define-fun x2279 ((x1744 Real)) Real (ite (= x1744 352) x147 (x2570 x1744)))
(define-fun x1359 ((x1744 Real)) Real (ite (= 384 x1744) x2972 (x2279 x1744)))
(define-fun x4342 ((x1744 Real)) Real (ite (= 416 x1744) x1828 (x1359 x1744)))
(define-fun x2440 ((x1744 Real)) Real (ite (= x5089 x1744) x4297 (x2828 x1744)))
(define-fun x3597 ((x1744 Real)) Real (ite (= x4570 x1744) x4114 (x2440 x1744)))
(define-fun x3454 ((x1744 Real)) Real (ite (= x1744 x1545) x5017 (x3597 x1744)))
(define-fun x2039 ((x1744 Real)) Real (ite (= x1744 x4153) x325 (x3454 x1744)))
(define-fun x3753 ((x1744 Real)) Real (ite (= x1246 x1744) x973 (x2039 x1744)))
(define-fun x2066 ((x1744 Real)) Real (ite (= x1744 x5089) x145 (x2828 x1744)))
(define-fun x1339 ((x1744 Real)) Real (ite (= x1744 x2698) x905 (x2066 x1744)))
(define-fun x1765 ((x1744 Real)) Real (ite (= x515 x1744) x1184 (x1339 x1744)))
(define-fun x3964 ((x1744 Real)) Real (ite (= x1744 x437) x384 (x1765 x1744)))
(define-fun x4705 ((x1744 Real)) Real (ite (= x2888 x1744) x4406 (x3964 x1744)))
(define-fun x2306 ((x1744 Real)) Real (ite (and x4001 x4657) (x3753 x1744) (x4705 x1744)))
(define-fun x5113 ((x1744 Real)) Real (ite (and (not x5223) x1268) (x204 x1744) (x1249 x1744)))
(define-fun x4717 ((x1744 Real)) Real (ite (= x1744 x3773) x1320 (x1512 x1744)))
(define-fun x4989 ((x1744 Real)) Real (ite (and x1914 x2329) (x4717 x1744) (x1512 x1744)))
(define-fun x832 ((x1744 Real)) Real (ite (= x1744 x1075) x1860 (x4989 x1744)))
(define-fun x5219 ((x1744 Real)) Real (ite (= x849 x1744) x4807 (x38 x1744)))
(define-fun x2387 ((x1744 Real)) Real (ite (and x2329 x1914) (x5219 x1744) (x38 x1744)))
(define-fun x3213 ((x1744 Real)) Real (ite (= x33 x1744) x465 (x2387 x1744)))
(define-fun x105 ((x1744 Real)) Real (ite (= x1744 x1222) x457 (x3556 x1744)))
(define-fun x1242 ((x1744 Real)) Real (ite (and x1914 x2329) (x105 x1744) (x3556 x1744)))
(define-fun x449 ((x1744 Real)) Real (ite (= x1118 x1744) x2533 (x1242 x1744)))
(define-fun x1283 ((x1744 Real)) Real (ite (= x1744 x4552) x643 (x3550 x1744)))
(define-fun x3067 ((x1744 Real)) Real (ite (and x2329 x1914) (x1283 x1744) (x3550 x1744)))
(define-fun x4664 ((x1744 Real)) Real (ite (= x1166 x1744) x5252 (x3067 x1744)))
(define-fun x4079 ((x1744 Real)) Real (ite (= x910 x1744) x3783 (x4436 x1744)))
(define-fun x4603 ((x1744 Real)) Real (ite (and x1914 x2329) (x4079 x1744) (x4436 x1744)))
(define-fun x4511 ((x1744 Real)) Real (ite (= x1744 x2409) x2023 (x4603 x1744)))
(define-fun x3948 ((x1744 Real)) Real (ite (= x1744 x3271) x4901 (x1830 x1744)))
(define-fun x4941 ((x1744 Real)) Real (ite (and x1914 x2329) (x3948 x1744) (x1830 x1744)))
(define-fun x2082 ((x1744 Real)) Real (ite (= x1744 x307) x4595 (x4941 x1744)))
(define-fun x1461 ((x1744 Real)) Real (ite (= x188 x1744) x1186 (x416 x1744)))
(define-fun x1638 ((x1744 Real)) Real (ite (and x2329 x1914) (x1461 x1744) (x416 x1744)))
(define-fun x1822 ((x1744 Real)) Real (ite (= x955 x1744) x2301 (x1638 x1744)))
(define-fun x1731 ((x1744 Real)) Real (ite (= x3527 x1744) x1470 (x3003 x1744)))
(define-fun x964 ((x1744 Real)) Real (ite (and x1914 x2329) (x1731 x1744) (x3003 x1744)))
(define-fun x2280 ((x1744 Real)) Real (ite (= x1744 x3867) x2340 (x964 x1744)))
(define-fun x1572 ((x1744 Real)) Real (ite (= x5118 x1744) x223 (x3104 x1744)))
(define-fun x3476 ((x1744 Real)) Real (ite (and x214 x3245) (x1572 x1744) (x3104 x1744)))
(define-fun x4606 ((x1744 Real)) Real (ite (= x1744 x382) x20 (x3476 x1744)))
(define-fun x1595 ((x1744 Real)) Real (ite (= x1744 x945) x786 (x2631 x1744)))
(define-fun x2417 ((x1744 Real)) Real (ite (and x214 x3245) (x1595 x1744) (x2631 x1744)))
(define-fun x2841 ((x1744 Real)) Real (ite (= x1744 x2906) x1098 (x2417 x1744)))
(define-fun x503 ((x1744 Real)) Real (ite (= x1744 x2345) x1754 (x58 x1744)))
(define-fun x1909 ((x1744 Real)) Real (ite (and x3245 x214) (x503 x1744) (x58 x1744)))
(define-fun x4496 ((x1744 Real)) Real (ite (= x2275 x1744) x696 (x1909 x1744)))
(define-fun x4501 ((x1744 Real)) Real (ite (= x1881 x1744) x2895 (x4322 x1744)))
(define-fun x3378 ((x1744 Real)) Real (ite (and x3245 x214) (x4501 x1744) (x4322 x1744)))
(define-fun x4959 ((x1744 Real)) Real (ite (= x1692 x1744) x4187 (x3378 x1744)))
(define-fun x333 ((x1744 Real)) Real (ite (= x1744 x3766) x284 (x999 x1744)))
(define-fun x406 ((x1744 Real)) Real (ite (and x214 x3245) (x333 x1744) (x999 x1744)))
(define-fun x4612 ((x1744 Real)) Real (ite (= x1744 x4090) x4014 (x406 x1744)))
(define-fun x4917 ((x1744 Real)) Real (ite (= x1744 x3918) x889 (x1917 x1744)))
(define-fun x1169 ((x1744 Real)) Real (ite (and x214 x3245) (x4917 x1744) (x1917 x1744)))
(define-fun x628 ((x1744 Real)) Real (ite (= x2819 x1744) x3954 (x1169 x1744)))
(define-fun x3035 ((x1744 Real)) Real (ite (= x1744 x4915) x3038 (x2283 x1744)))
(define-fun x4258 ((x1744 Real)) Real (ite (and x3245 x214) (x3035 x1744) (x2283 x1744)))
(define-fun x2022 ((x1744 Real)) Real (ite (= x5189 x1744) x4973 (x4258 x1744)))
(define-fun x2750 ((x1744 Real)) Real (ite (= x1744 x3619) x4775 (x1533 x1744)))
(define-fun x1701 ((x1744 Real)) Real (ite (and x3245 x214) (x2750 x1744) (x1533 x1744)))
(define-fun x4051 ((x1744 Real)) Real (ite (= x1744 x3352) x5082 (x1701 x1744)))
(define-fun x2923 ((x1744 Real)) Real (ite (= x2420 x1744) x3721 (x4540 x1744)))
(define-fun x2515 ((x1744 Real)) Real (ite (= x1744 x1477) x2423 (x2923 x1744)))
(define-fun x4027 ((x1744 Real)) Real (ite (= x1744 x3200) x1978 (x2515 x1744)))
(define-fun x172 ((x1744 Real)) Real (ite (= x3406 x1744) x3357 (x4027 x1744)))
(define-fun x2638 ((x1744 Real)) Real (ite (= x1744 x1259) x1452 (x172 x1744)))
(define-fun x3463 ((x1744 Real)) Real (ite (= x2420 x1744) x1052 (x4540 x1744)))
(define-fun x4144 ((x1744 Real)) Real (ite (= x1108 x1744) x1440 (x3463 x1744)))
(define-fun x4809 ((x1744 Real)) Real (ite (= x1744 x863) x1657 (x4144 x1744)))
(define-fun x4599 ((x1744 Real)) Real (ite (= x1744 x2427) x3952 (x4809 x1744)))
(define-fun x5255 ((x1744 Real)) Real (ite (= x1744 x2360) x2547 (x4599 x1744)))
(define-fun x1826 ((x1744 Real)) Real (ite (and x2094 x61) (x2638 x1744) (x5255 x1744)))
(define-fun x1994 ((x1744 Real)) Real (ite (and x4466 x1532) (x204 x1744) (x1826 x1744)))
(define-fun x3269 ((x1744 Real)) Real (ite (= x1744 128) x123 (x4420 x1744)))
(define-fun x694 ((x1744 Real)) Real (ite (= 160 x1744) x1808 (x3269 x1744)))
(define-fun x1308 ((x1744 Real)) Real (ite (= x1744 192) x2775 (x694 x1744)))
(define-fun x163 ((x1744 Real)) Real (ite (= x1744 224) x2697 (x1308 x1744)))
(define-fun x3442 ((x1744 Real)) Real (ite (= 256 x1744) x1762 (x163 x1744)))
(define-fun x3740 ((x1744 Real)) Real (ite (= x1744 128) x582 (x4420 x1744)))
(define-fun x3397 ((x1744 Real)) Real (ite (= 160 x1744) x590 (x3740 x1744)))
(define-fun x2470 ((x1744 Real)) Real (ite (= 192 x1744) x3012 (x3397 x1744)))
(define-fun x1955 ((x1744 Real)) Real (ite (= x1744 224) x4597 (x2470 x1744)))
(define-fun x4676 ((x1744 Real)) Real (ite (= 256 x1744) x4925 (x1955 x1744)))
(define-fun x4320 ((x1744 Real)) Real (ite (= x1421 x1744) x2938 (x2876 x1744)))
(define-fun x4266 ((x1744 Real)) Real (ite (= x1744 x835) x645 (x4320 x1744)))
(define-fun x2421 ((x1744 Real)) Real (ite (= x1744 x1769) x4502 (x4266 x1744)))
(define-fun x2313 ((x1744 Real)) Real (ite (= x1744 x2859) x106 (x2421 x1744)))
(define-fun x464 ((x1744 Real)) Real (ite (= x1744 x1474) x4242 (x2313 x1744)))
(define-fun x1193 ((x1744 Real)) Real (ite (= x1744 x1421) x2067 (x2876 x1744)))
(define-fun x4990 ((x1744 Real)) Real (ite (= x2351 x1744) x1241 (x1193 x1744)))
(define-fun x594 ((x1744 Real)) Real (ite (= x1744 x3053) x639 (x4990 x1744)))
(define-fun x1787 ((x1744 Real)) Real (ite (= x1744 x3650) x7 (x594 x1744)))
(define-fun x2803 ((x1744 Real)) Real (ite (= x953 x1744) x4219 (x1787 x1744)))
(define-fun x4207 ((x1744 Real)) Real (ite (and x3582 x1622) (x464 x1744) (x2803 x1744)))
(define-fun x939 ((x1744 Real)) Real (ite (= x4087 x1744) x3664 (x5231 x1744)))
(define-fun x2707 ((x1744 Real)) Real (ite (= x1744 x4573) x4028 (x939 x1744)))
(define-fun x1720 ((x1744 Real)) Real (ite (= x909 x1744) x3141 (x2707 x1744)))
(define-fun x1546 ((x1744 Real)) Real (ite (= x4924 x1744) x2129 (x1720 x1744)))
(define-fun x3327 ((x1744 Real)) Real (ite (= x1744 x2378) x3032 (x1546 x1744)))
(define-fun x4764 ((x1744 Real)) Real (ite (= x1744 x4087) x3702 (x5231 x1744)))
(define-fun x334 ((x1744 Real)) Real (ite (= x3863 x1744) x4134 (x4764 x1744)))
(define-fun x2355 ((x1744 Real)) Real (ite (= x1744 x579) x4768 (x334 x1744)))
(define-fun x885 ((x1744 Real)) Real (ite (= x5072 x1744) x1398 (x2355 x1744)))
(define-fun x2667 ((x1744 Real)) Real (ite (= x2838 x1744) x4514 (x885 x1744)))
(define-fun x2805 ((x1744 Real)) Real (ite (and x4710 x1112) (x3327 x1744) (x2667 x1744)))
(define-fun x895 ((x1744 Real)) Real (ite (and x2541 x2069) (x1197 x1744) (x2805 x1744)))
(define-fun x3902 ((x1744 Real)) Real (ite (and x54 (not x1915)) (x204 x1744) (ite (and x3642 (not x4222)) (x1249 x1744) (x1994 x1744))))
(define-fun x3699 ((x1744 Real)) Real (ite x3071 (ite (and (not x2064) x4329) (x1197 x1744) (ite (and x4100 (not x4880)) (x3143 x1744) (x895 x1744))) (ite (and x2593 (not x574)) (x1197 x1744) (x3143 x1744))))
(define-fun x5171 ((x1744 Real)) Real (ite (= x1744 128) x4350 (x1072 x1744)))
(define-fun x3644 ((x1744 Real)) Real (ite (= 160 x1744) x2352 (x5171 x1744)))
(define-fun x3249 ((x1744 Real)) Real (ite (= 192 x1744) x2353 (x3644 x1744)))
(define-fun x3335 ((x1744 Real)) Real (ite (= 224 x1744) x1834 (x3249 x1744)))
(define-fun x4489 ((x1744 Real)) Real (ite (= x1744 256) x888 (x3335 x1744)))
(define-fun x1698 ((x1744 Real)) Real (ite (= 0 x1744) x438 (x179 x1744)))
(define-fun x4827 ((x1744 Real)) Real (ite (= 32 x1744) x1380 (x1698 x1744)))
(define-fun x3131 ((x1744 Real)) Real (ite (= x1744 64) x1433 (x4827 x1744)))
(define-fun x4997 ((x1744 Real)) Real (ite (= x1744 96) x1928 (x3131 x1744)))
(define-fun x2458 ((x1744 Real)) Real (ite (= 128 x1744) x2562 (x4997 x1744)))
(define-fun x1124 ((x1744 x2506)) Real (ite (= x820 x1744) x2935 (x2104 x1744)))
(define-fun x971 ((x1744 Real)) Real (ite (= 128 x1744) x4350 (x3579 x1744)))
(define-fun x3561 ((x1744 Real)) Real (ite (= x1744 160) x3589 (x971 x1744)))
(define-fun x1894 ((x1744 Real)) Real (ite (= 192 x1744) x2353 (x3561 x1744)))
(define-fun x3482 ((x1744 Real)) Real (ite (= 224 x1744) x1834 (x1894 x1744)))
(define-fun x3348 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x3482 x1744)))
(define-fun x1496 ((x1744 Real)) Real (ite (= 0 x1744) x1865 (x565 x1744)))
(define-fun x319 ((x1744 Real)) Real (ite (= 32 x1744) x3191 (x1496 x1744)))
(define-fun x4283 ((x1744 Real)) Real (ite (= x1744 64) x1668 (x319 x1744)))
(define-fun x2931 ((x1744 Real)) Real (ite (= x1744 96) x5185 (x4283 x1744)))
(define-fun x555 ((x1744 Real)) Real (ite (= 128 x1744) x5075 (x2931 x1744)))
(define-fun x3940 ((x1744 Real)) Real (ite (= 128 x1744) x4350 (x4081 x1744)))
(define-fun x4505 ((x1744 Real)) Real (ite (= 160 x1744) x3066 (x3940 x1744)))
(define-fun x916 ((x1744 Real)) Real (ite (= 192 x1744) x2353 (x4505 x1744)))
(define-fun x2508 ((x1744 Real)) Real (ite (= x1744 224) x1834 (x916 x1744)))
(define-fun x1177 ((x1744 Real)) Real (ite (= x1744 256) x888 (x2508 x1744)))
(define-fun x2599 ((x1744 Real)) Real (ite (= x1744 0) x288 (x3580 x1744)))
(define-fun x926 ((x1744 Real)) Real (ite (= x1744 32) x5074 (x2599 x1744)))
(define-fun x3389 ((x1744 Real)) Real (ite (= x1744 64) x26 (x926 x1744)))
(define-fun x2359 ((x1744 Real)) Real (ite (= x1744 96) x3078 (x3389 x1744)))
(define-fun x3151 ((x1744 Real)) Real (ite (= x1744 128) x4113 (x2359 x1744)))
(define-fun x2706 ((x1744 Real)) Real (ite (= 128 x1744) x4350 (x4443 x1744)))
(define-fun x306 ((x1744 Real)) Real (ite (= 160 x1744) x4191 (x2706 x1744)))
(define-fun x4562 ((x1744 Real)) Real (ite (= x1744 192) x2353 (x306 x1744)))
(define-fun x2309 ((x1744 Real)) Real (ite (= 224 x1744) x1834 (x4562 x1744)))
(define-fun x1522 ((x1744 Real)) Real (ite (= x1744 256) x888 (x2309 x1744)))
(define-fun x678 ((x1744 Real)) Real (ite (= 0 x1744) x1962 (x2385 x1744)))
(define-fun x2407 ((x1744 Real)) Real (ite (= x1744 32) x2242 (x678 x1744)))
(define-fun x1145 ((x1744 Real)) Real (ite (= x1744 64) x5157 (x2407 x1744)))
(define-fun x150 ((x1744 Real)) Real (ite (= x1744 96) x1015 (x1145 x1744)))
(define-fun x4218 ((x1744 Real)) Real (ite (= 128 x1744) x1659 (x150 x1744)))
(define-fun x1360 ((x1744 Real)) Real (ite (= 128 x1744) x2628 (x3189 x1744)))
(define-fun x4819 ((x1744 Real)) Real (ite (= 128 x1744) x3778 (x1360 x1744)))
(define-fun x80 ((x1744 Real)) Real (ite (= x1179 x1744) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x3699 x1744)))
(define-fun x4588 ((x1744 Real)) Real (ite (= x4868 x1744) x4857 (x80 x1744)))
(define-fun x2488 ((x1744 x2506)) Real (ite (= x3606 x1744) x1345 (x3255 x1744)))
(define-fun x1225 ((x1744 x2506)) Real (ite (= x1744 x4348) x1059 (x3255 x1744)))
(define-fun x2514 ((x1744 x2506)) Real (ite (= x4348 x1744) x5078 (x3703 x1744)))
(define-fun x1690 ((x1744 Real)) Real (ite (and (not x5018) x1346) (x4949 x1744) (ite x3069 (x3902 x1744) (x5113 x1744))))
(define-fun x4210 ((x1744 Real)) Real (ite (= x2912 x1744) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1690 x1744)))
(define-fun x3897 ((x1744 Real)) Real (ite (= x1641 x1744) x4857 (x4210 x1744)))
(define-fun x2112 ((x1744 Real)) Real (ite (= x1744 192) x810 (x2790 x1744)))
(define-fun x769 ((x1744 Real)) Real (ite (= 192 x1744) x967 (x2790 x1744)))
(define-fun x5147 ((x1744 Real)) Real (ite (and x3751 (not x4305)) (x2112 x1744) (x769 x1744)))
(define-fun x1204 ((x1744 Real)) Real (ite (= 160 x1744) x1724 (x2571 x1744)))
(define-fun x543 ((x1744 Real)) Real (ite (= x1744 160) x2026 (x2571 x1744)))
(define-fun x1018 ((x1744 Real)) Real (ite (and x1460 x5130) (x543 x1744) (x1204 x1744)))
(define-fun x2740 ((x1744 Real)) Real (ite (= x1744 224) x1121 (x4703 x1744)))
(define-fun x3503 ((x1744 Real)) Real (ite (= 256 x1744) x339 (x944 x1744)))
(define-fun x2881 ((x1744 x2506)) Real (ite (= x1744 x2942) x1468 (x308 x1744)))
(define-fun x813 ((x1744 Real)) Real (ite (= x1744 x2912) 1 (x3286 x1744)))
(define-fun x627 ((x1744 Real)) Real (ite x3853 (x3286 x1744) (ite (and (not x5014) (not x2582) x520) (x813 x1744) (x3286 x1744))))
(define-fun x2262 ((x1744 Real)) Real (ite (= x1744 x1179) 1 (x1066 x1744)))
(define-fun x2858 ((x1744 Real)) Real (ite (= x1744 x1179) 1 (x1066 x1744)))
(define-fun x808 ((x1744 Real)) Real (ite (= x1744 x1179) 1 (x1066 x1744)))
(define-fun x3426 ((x1744 Real)) Real (ite x4488 (ite x2937 (x1066 x1744) (x2262 x1744)) (ite x4197 (ite x43 (x1066 x1744) (x2858 x1744)) (ite x4542 (x1066 x1744) (x808 x1744)))))
(define-fun x3847 ((x1744 x2506)) Real (ite (= x4315 x1744) x1730 (x886 x1744)))
(define-fun x3171 ((x1744 Real)) Real (ite (= 0 x1744) 1 (x4939 x1744)))
(define-fun x4865 ((x1744 Real)) Real (ite (= x1744 128) x4350 (x245 x1744)))
(define-fun x5172 ((x1744 Real)) Real (ite (= 160 x1744) x1606 (x4865 x1744)))
(define-fun x4424 ((x1744 Real)) Real (ite (= 192 x1744) x2353 (x5172 x1744)))
(define-fun x510 ((x1744 Real)) Real (ite (= 224 x1744) x1834 (x4424 x1744)))
(define-fun x5087 ((x1744 Real)) Real (ite (= 256 x1744) x888 (x510 x1744)))
(define-fun x1566 ((x1744 Real)) Real (ite (= x1744 0) x271 (x3873 x1744)))
(define-fun x422 ((x1744 Real)) Real (ite (= 32 x1744) x692 (x1566 x1744)))
(define-fun x5256 ((x1744 Real)) Real (ite (= 64 x1744) x3041 (x422 x1744)))
(define-fun x5058 ((x1744 Real)) Real (ite (= 96 x1744) x2635 (x5256 x1744)))
(define-fun x1073 ((x1744 Real)) Real (ite (= 128 x1744) x115 (x5058 x1744)))
(define-fun x2605 ((x1744 Real)) Real (ite (= x1744 128) x4350 (x754 x1744)))
(define-fun x811 ((x1744 Real)) Real (ite (= x1744 160) x3888 (x2605 x1744)))
(define-fun x2979 ((x1744 Real)) Real (ite (= 192 x1744) x2353 (x811 x1744)))
(define-fun x354 ((x1744 Real)) Real (ite (= x1744 224) x1834 (x2979 x1744)))
(define-fun x3059 ((x1744 Real)) Real (ite (= x1744 256) x888 (x354 x1744)))
(define-fun x4929 ((x1744 Real)) Real (ite (= x1744 0) x2904 (x659 x1744)))
(define-fun x954 ((x1744 Real)) Real (ite (= 32 x1744) x3195 (x4929 x1744)))
(define-fun x2952 ((x1744 Real)) Real (ite (= x1744 64) x495 (x954 x1744)))
(define-fun x2818 ((x1744 Real)) Real (ite (= 96 x1744) x3805 (x2952 x1744)))
(define-fun x612 ((x1744 Real)) Real (ite (= 128 x1744) x1038 (x2818 x1744)))
(define-fun x3288 ((x1744 Real)) Real (ite (= x1744 128) x5009 (x4660 x1744)))
(define-fun x4556 ((x1744 Real)) Real (ite (= 160 x1744) x2148 (x3288 x1744)))
(define-fun x412 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x4556 x1744)))
(define-fun x2034 ((x1744 Real)) Real (ite (= x1744 224) x2402 (x412 x1744)))
(define-fun x3129 ((x1744 Real)) Real (ite (= 256 x1744) x443 (x2034 x1744)))
(define-fun x82 ((x1744 Real)) Real (ite (= x1744 0) x1616 (x259 x1744)))
(define-fun x2438 ((x1744 Real)) Real (ite (= 32 x1744) x4459 (x82 x1744)))
(define-fun x2405 ((x1744 Real)) Real (ite (= 64 x1744) x1766 (x2438 x1744)))
(define-fun x4461 ((x1744 Real)) Real (ite (= x1744 96) x5187 (x2405 x1744)))
(define-fun x642 ((x1744 Real)) Real (ite (= 128 x1744) x3845 (x4461 x1744)))
(define-fun x1136 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x1473 x1744)))
(define-fun x1583 ((x1744 Real)) Real (ite (= x1744 160) x1224 (x1136 x1744)))
(define-fun x4628 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x1583 x1744)))
(define-fun x1017 ((x1744 Real)) Real (ite (= x1744 224) x2402 (x4628 x1744)))
(define-fun x2988 ((x1744 Real)) Real (ite (= 256 x1744) x443 (x1017 x1744)))
(define-fun x866 ((x1744 Real)) Real (ite (= 0 x1744) x2554 (x240 x1744)))
(define-fun x5104 ((x1744 Real)) Real (ite (= 32 x1744) x666 (x866 x1744)))
(define-fun x154 ((x1744 Real)) Real (ite (= 64 x1744) x370 (x5104 x1744)))
(define-fun x745 ((x1744 Real)) Real (ite (= 96 x1744) x4303 (x154 x1744)))
(define-fun x4015 ((x1744 Real)) Real (ite (= x1744 128) x3024 (x745 x1744)))
(define-fun x1794 ((x1744 Real)) Real (ite (= x1744 128) x5009 (x3687 x1744)))
(define-fun x3265 ((x1744 Real)) Real (ite (= 160 x1744) x635 (x1794 x1744)))
(define-fun x2220 ((x1744 Real)) Real (ite (= x1744 192) x1863 (x3265 x1744)))
(define-fun x2580 ((x1744 Real)) Real (ite (= 224 x1744) x2402 (x2220 x1744)))
(define-fun x1713 ((x1744 Real)) Real (ite (= 256 x1744) x443 (x2580 x1744)))
(define-fun x268 ((x1744 Real)) Real (ite (= x1744 0) x5121 (x4559 x1744)))
(define-fun x3620 ((x1744 Real)) Real (ite (= x1744 32) x280 (x268 x1744)))
(define-fun x5085 ((x1744 Real)) Real (ite (= x1744 64) x882 (x3620 x1744)))
(define-fun x4418 ((x1744 Real)) Real (ite (= x1744 96) x1446 (x5085 x1744)))
(define-fun x4294 ((x1744 Real)) Real (ite (= 128 x1744) x2739 (x4418 x1744)))
(define-fun x161 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x4753 x1744)))
(define-fun x2235 ((x1744 Real)) Real (ite (= x1744 160) x2054 (x161 x1744)))
(define-fun x1161 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x2235 x1744)))
(define-fun x2187 ((x1744 Real)) Real (ite (= 224 x1744) x2402 (x1161 x1744)))
(define-fun x4099 ((x1744 Real)) Real (ite (= x1744 256) x443 (x2187 x1744)))
(define-fun x4508 ((x1744 Real)) Real (ite (= x1744 0) x784 (x4896 x1744)))
(define-fun x1386 ((x1744 Real)) Real (ite (= 32 x1744) x4780 (x4508 x1744)))
(define-fun x1293 ((x1744 Real)) Real (ite (= x1744 64) x2027 (x1386 x1744)))
(define-fun x3182 ((x1744 Real)) Real (ite (= 96 x1744) x2860 (x1293 x1744)))
(define-fun x5062 ((x1744 Real)) Real (ite (= x1744 128) x1780 (x3182 x1744)))
(define-fun x4882 ((x1744 x2506)) Real (ite (= x1303 x1744) x3065 (x4495 x1744)))
(define-fun x4095 ((x1744 Real)) Real (ite (= 0 x1744) 1 (x977 x1744)))
(define-fun x198 ((x1744 Real)) Real (ite (= x3774 x1744) 1 (x763 x1744)))
(define-fun x2795 ((x1744 x2506)) Real (ite (= x4522 x1744) x4167 (x507 x1744)))
(define-fun x4243 ((x1744 Real)) Real (ite (= x1744 0) 1 (x977 x1744)))
(define-fun x2282 ((x1744 Real)) Real (ite (= x3774 x1744) 1 (x763 x1744)))
(define-fun x3811 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x1187 x1744)))
(define-fun x2005 ((x1744 Real)) Real (ite (= 160 x1744) x2083 (x3811 x1744)))
(define-fun x3822 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x2005 x1744)))
(define-fun x71 ((x1744 Real)) Real (ite (= 224 x1744) x2402 (x3822 x1744)))
(define-fun x516 ((x1744 Real)) Real (ite (= x1744 256) x443 (x71 x1744)))
(define-fun x4105 ((x1744 Real)) Real (ite (= 0 x1744) x3256 (x682 x1744)))
(define-fun x487 ((x1744 Real)) Real (ite (= 32 x1744) x3841 (x4105 x1744)))
(define-fun x906 ((x1744 Real)) Real (ite (= x1744 64) x4948 (x487 x1744)))
(define-fun x2534 ((x1744 Real)) Real (ite (= x1744 96) x3936 (x906 x1744)))
(define-fun x3909 ((x1744 Real)) Real (ite (= 128 x1744) x3329 (x2534 x1744)))
(define-fun x693 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x3166 x1744)))
(define-fun x4978 ((x1744 Real)) Real (ite (= x1744 160) x418 (x693 x1744)))
(define-fun x2736 ((x1744 Real)) Real (ite (= x1744 192) x1863 (x4978 x1744)))
(define-fun x1297 ((x1744 Real)) Real (ite (= x1744 224) x2402 (x2736 x1744)))
(define-fun x5071 ((x1744 Real)) Real (ite (= x1744 256) x443 (x1297 x1744)))
(define-fun x2037 ((x1744 Real)) Real (ite (= 0 x1744) x4585 (x5142 x1744)))
(define-fun x3443 ((x1744 Real)) Real (ite (= x1744 32) x3338 (x2037 x1744)))
(define-fun x470 ((x1744 Real)) Real (ite (= 64 x1744) x5068 (x3443 x1744)))
(define-fun x2443 ((x1744 Real)) Real (ite (= x1744 96) x1623 (x470 x1744)))
(define-fun x1148 ((x1744 Real)) Real (ite (= 128 x1744) x51 (x2443 x1744)))
(define-fun x466 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x1173 x1744)))
(define-fun x2158 ((x1744 Real)) Real (ite (= x1744 160) x2303 (x466 x1744)))
(define-fun x3405 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x2158 x1744)))
(define-fun x3947 ((x1744 Real)) Real (ite (= x1744 224) x2402 (x3405 x1744)))
(define-fun x5053 ((x1744 Real)) Real (ite (= x1744 256) x443 (x3947 x1744)))
(define-fun x2302 ((x1744 Real)) Real (ite (= x1744 0) x757 (x397 x1744)))
(define-fun x494 ((x1744 Real)) Real (ite (= 32 x1744) x4121 (x2302 x1744)))
(define-fun x699 ((x1744 Real)) Real (ite (= x1744 64) x2442 (x494 x1744)))
(define-fun x1110 ((x1744 Real)) Real (ite (= 96 x1744) x2263 (x699 x1744)))
(define-fun x135 ((x1744 Real)) Real (ite (= 128 x1744) x3983 (x1110 x1744)))
(define-fun x4685 ((x1744 Real)) Real (ite (= x1744 128) x5009 (x5025 x1744)))
(define-fun x2929 ((x1744 Real)) Real (ite (= x1744 160) x2434 (x4685 x1744)))
(define-fun x960 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x2929 x1744)))
(define-fun x2011 ((x1744 Real)) Real (ite (= x1744 224) x2402 (x960 x1744)))
(define-fun x1717 ((x1744 Real)) Real (ite (= x1744 256) x443 (x2011 x1744)))
(define-fun x767 ((x1744 Real)) Real (ite (= 0 x1744) x2393 (x5158 x1744)))
(define-fun x993 ((x1744 Real)) Real (ite (= x1744 32) x3254 (x767 x1744)))
(define-fun x4041 ((x1744 Real)) Real (ite (= x1744 64) x1774 (x993 x1744)))
(define-fun x1081 ((x1744 Real)) Real (ite (= 96 x1744) x1772 (x4041 x1744)))
(define-fun x3668 ((x1744 Real)) Real (ite (= x1744 128) x2565 (x1081 x1744)))
(define-fun x1328 ((x1744 Real)) Real (ite (= x1744 128) x5009 (x3281 x1744)))
(define-fun x4278 ((x1744 Real)) Real (ite (= 160 x1744) x3382 (x1328 x1744)))
(define-fun x3097 ((x1744 Real)) Real (ite (= x1744 192) x1863 (x4278 x1744)))
(define-fun x4762 ((x1744 Real)) Real (ite (= 224 x1744) x2402 (x3097 x1744)))
(define-fun x1408 ((x1744 Real)) Real (ite (= x1744 256) x443 (x4762 x1744)))
(define-fun x1995 ((x1744 Real)) Real (ite (= x1744 0) x1043 (x1508 x1744)))
(define-fun x3575 ((x1744 Real)) Real (ite (= x1744 32) x5196 (x1995 x1744)))
(define-fun x2461 ((x1744 Real)) Real (ite (= 64 x1744) x1817 (x3575 x1744)))
(define-fun x327 ((x1744 Real)) Real (ite (= x1744 96) x2696 (x2461 x1744)))
(define-fun x2484 ((x1744 Real)) Real (ite (= 128 x1744) x4567 (x327 x1744)))
(define-fun x1526 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x2660 x1744)))
(define-fun x4653 ((x1744 Real)) Real (ite (= 160 x1744) x3247 (x1526 x1744)))
(define-fun x3005 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x4653 x1744)))
(define-fun x2489 ((x1744 Real)) Real (ite (= x1744 224) x2402 (x3005 x1744)))
(define-fun x2825 ((x1744 Real)) Real (ite (= x1744 256) x443 (x2489 x1744)))
(define-fun x679 ((x1744 Real)) Real (ite (= 0 x1744) x3502 (x1481 x1744)))
(define-fun x3119 ((x1744 Real)) Real (ite (= x1744 32) x1321 (x679 x1744)))
(define-fun x4785 ((x1744 Real)) Real (ite (= 64 x1744) x205 (x3119 x1744)))
(define-fun x3391 ((x1744 Real)) Real (ite (= 96 x1744) x4682 (x4785 x1744)))
(define-fun x1428 ((x1744 Real)) Real (ite (= x1744 128) x352 (x3391 x1744)))
(define-fun x4265 ((x1744 x2506)) Real (ite (= x228 x1744) x2875 (x4495 x1744)))
(define-fun x987 ((x1744 x2506)) Real (ite (= x1744 x3786) x1632 (x4265 x1744)))
(define-fun x201 ((x1744 Real)) Real (ite (= 0 x1744) 1 (x3768 x1744)))
(define-fun x2453 ((x1744 Real)) Real (ite (= x5081 x1744) 1 (x2518 x1744)))
(define-fun x4038 ((x1744 x2506)) Real (ite (= x431 x1744) x3578 (x507 x1744)))
(define-fun x660 ((x1744 x2506)) Real (ite (= x1744 x2887) x802 (x4038 x1744)))
(define-fun x3113 ((x1744 Real)) Real (ite (= 0 x1744) 1 (x3768 x1744)))
(define-fun x4604 ((x1744 Real)) Real (ite (= x5081 x1744) 1 (x2518 x1744)))
(define-fun x1375 ((x1744 Real)) Real (ite (= x1744 128) x5009 (x1735 x1744)))
(define-fun x4945 ((x1744 Real)) Real (ite (= x1744 160) x426 (x1375 x1744)))
(define-fun x918 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x4945 x1744)))
(define-fun x2017 ((x1744 Real)) Real (ite (= x1744 224) x2402 (x918 x1744)))
(define-fun x521 ((x1744 Real)) Real (ite (= 256 x1744) x443 (x2017 x1744)))
(define-fun x4728 ((x1744 Real)) Real (ite (= x1744 0) x1945 (x531 x1744)))
(define-fun x4289 ((x1744 Real)) Real (ite (= 32 x1744) x1972 (x4728 x1744)))
(define-fun x5246 ((x1744 Real)) Real (ite (= x1744 64) x4801 (x4289 x1744)))
(define-fun x772 ((x1744 Real)) Real (ite (= x1744 96) x4346 (x5246 x1744)))
(define-fun x2274 ((x1744 Real)) Real (ite (= 128 x1744) x3076 (x772 x1744)))
(define-fun x1122 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x1377 x1744)))
(define-fun x4437 ((x1744 Real)) Real (ite (= 160 x1744) x3173 (x1122 x1744)))
(define-fun x1449 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x4437 x1744)))
(define-fun x1560 ((x1744 Real)) Real (ite (= 224 x1744) x2402 (x1449 x1744)))
(define-fun x3680 ((x1744 Real)) Real (ite (= 256 x1744) x443 (x1560 x1744)))
(define-fun x57 ((x1744 Real)) Real (ite (= 0 x1744) x293 (x179 x1744)))
(define-fun x1464 ((x1744 Real)) Real (ite (= x1744 32) x602 (x57 x1744)))
(define-fun x298 ((x1744 Real)) Real (ite (= x1744 64) x3187 (x1464 x1744)))
(define-fun x217 ((x1744 Real)) Real (ite (= x1744 96) x1901 (x298 x1744)))
(define-fun x5041 ((x1744 Real)) Real (ite (= 128 x1744) x1937 (x217 x1744)))
(define-fun x1562 ((x1744 Real)) Real (ite (= x1744 128) x5009 (x2298 x1744)))
(define-fun x4812 ((x1744 Real)) Real (ite (= x1744 160) x3876 (x1562 x1744)))
(define-fun x2406 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x4812 x1744)))
(define-fun x128 ((x1744 Real)) Real (ite (= x1744 224) x2402 (x2406 x1744)))
(define-fun x1943 ((x1744 Real)) Real (ite (= 256 x1744) x443 (x128 x1744)))
(define-fun x2327 ((x1744 Real)) Real (ite (= x1744 0) x3973 (x565 x1744)))
(define-fun x3615 ((x1744 Real)) Real (ite (= 32 x1744) x3420 (x2327 x1744)))
(define-fun x2134 ((x1744 Real)) Real (ite (= 64 x1744) x856 (x3615 x1744)))
(define-fun x2197 ((x1744 Real)) Real (ite (= 96 x1744) x3567 (x2134 x1744)))
(define-fun x1925 ((x1744 Real)) Real (ite (= 128 x1744) x1687 (x2197 x1744)))
(define-fun x597 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x1485 x1744)))
(define-fun x5216 ((x1744 Real)) Real (ite (= 160 x1744) x3618 (x597 x1744)))
(define-fun x4823 ((x1744 Real)) Real (ite (= 192 x1744) x1863 (x5216 x1744)))
(define-fun x2432 ((x1744 Real)) Real (ite (= x1744 224) x2402 (x4823 x1744)))
(define-fun x4876 ((x1744 Real)) Real (ite (= x1744 256) x443 (x2432 x1744)))
(define-fun x1001 ((x1744 Real)) Real (ite (= x1744 0) x3914 (x3580 x1744)))
(define-fun x3643 ((x1744 Real)) Real (ite (= x1744 32) x750 (x1001 x1744)))
(define-fun x3194 ((x1744 Real)) Real (ite (= 64 x1744) x4321 (x3643 x1744)))
(define-fun x3493 ((x1744 Real)) Real (ite (= x1744 96) x2677 (x3194 x1744)))
(define-fun x4229 ((x1744 Real)) Real (ite (= 128 x1744) x4107 (x3493 x1744)))
(define-fun x4891 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x4130 x1744)))
(define-fun x95 ((x1744 Real)) Real (ite (= 160 x1744) x2031 (x4891 x1744)))
(define-fun x3451 ((x1744 Real)) Real (ite (= x1744 192) x1863 (x95 x1744)))
(define-fun x4126 ((x1744 Real)) Real (ite (= 224 x1744) x2402 (x3451 x1744)))
(define-fun x3935 ((x1744 Real)) Real (ite (= 256 x1744) x443 (x4126 x1744)))
(define-fun x3278 ((x1744 Real)) Real (ite (= 0 x1744) x3433 (x2385 x1744)))
(define-fun x4510 ((x1744 Real)) Real (ite (= 32 x1744) x4771 (x3278 x1744)))
(define-fun x3330 ((x1744 Real)) Real (ite (= 64 x1744) x4842 (x4510 x1744)))
(define-fun x2646 ((x1744 Real)) Real (ite (= x1744 96) x4746 (x3330 x1744)))
(define-fun x4455 ((x1744 Real)) Real (ite (= 128 x1744) x5134 (x2646 x1744)))
(define-fun x5193 ((x1744 Real)) Real (ite (= x1744 128) x5009 (x4655 x1744)))
(define-fun x1373 ((x1744 Real)) Real (ite (= x1744 160) x3905 (x5193 x1744)))
(define-fun x3337 ((x1744 Real)) Real (ite (= x1744 192) x1863 (x1373 x1744)))
(define-fun x2372 ((x1744 Real)) Real (ite (= 224 x1744) x2402 (x3337 x1744)))
(define-fun x1757 ((x1744 Real)) Real (ite (= 256 x1744) x443 (x2372 x1744)))
(define-fun x5215 ((x1744 Real)) Real (ite (= x1744 0) x3083 (x3873 x1744)))
(define-fun x3560 ((x1744 Real)) Real (ite (= x1744 32) x1170 (x5215 x1744)))
(define-fun x4788 ((x1744 Real)) Real (ite (= x1744 64) x2367 (x3560 x1744)))
(define-fun x3621 ((x1744 Real)) Real (ite (= 96 x1744) x1929 (x4788 x1744)))
(define-fun x4451 ((x1744 Real)) Real (ite (= x1744 128) x1675 (x3621 x1744)))
(define-fun x2844 ((x1744 Real)) Real (ite (= 128 x1744) x5009 (x4019 x1744)))
(define-fun x69 ((x1744 Real)) Real (ite (= 160 x1744) x4647 (x2844 x1744)))
(define-fun x3448 ((x1744 Real)) Real (ite (= x1744 192) x1863 (x69 x1744)))
(define-fun x3754 ((x1744 Real)) Real (ite (= 224 x1744) x2402 (x3448 x1744)))
(define-fun x4287 ((x1744 Real)) Real (ite (= 256 x1744) x443 (x3754 x1744)))
(define-fun x236 ((x1744 Real)) Real (ite (= x1744 0) x847 (x659 x1744)))
(define-fun x4069 ((x1744 Real)) Real (ite (= 32 x1744) x3934 (x236 x1744)))
(define-fun x2293 ((x1744 Real)) Real (ite (= x1744 64) x3824 (x4069 x1744)))
(define-fun x5180 ((x1744 Real)) Real (ite (= 96 x1744) x4998 (x2293 x1744)))
(define-fun x4942 ((x1744 Real)) Real (ite (= x1744 128) x4345 (x5180 x1744)))
(define-fun x3545 ((x1744 x2506)) Real (ite (and x2184 x3850) (x4495 x1744) (ite (and x221 x39) (x4495 x1744) (x987 x1744))))
(define-fun x2748 ((x1744 x2506)) Real (ite (= x1744 x3543) x169 (x3545 x1744)))
(define-fun x2670 ((x1744 Real)) Real (ite (= x1744 0) 1 (x3686 x1744)))
(define-fun x4763 ((x1744 x2506)) Real (ite (and x3850 x2184) (x507 x1744) (ite (and x39 x221) (x660 x1744) (x507 x1744))))
(define-fun x1113 ((x1744 x2506)) Real (ite (= x1487 x1744) x4186 (x4763 x1744)))
(define-fun x2229 ((x1744 Real)) Real (ite (= x1744 0) 1 (x3686 x1744)))
(define-fun x3325 ((x1744 x2506)) Real (ite (= x1744 x893) x2253 (x886 x1744)))
(define-fun x1149 ((x1744 Real)) Real (ite (= 0 x1744) 1 (x3686 x1744)))
(define-fun x2473 ((x1744 Real)) Real (ite (and x1272 x5031) (x940 x1744) (ite (and x1804 x1679) (x2282 x1744) (x198 x1744))))
(define-fun x962 ((x1744 Real)) Real (ite (= x1744 128) x4350 (x1254 x1744)))
(define-fun x2319 ((x1744 Real)) Real (ite (= 160 x1744) x244 (x962 x1744)))
(define-fun x1884 ((x1744 Real)) Real (ite (= x1744 192) x2353 (x2319 x1744)))
(define-fun x1856 ((x1744 Real)) Real (ite (= x1744 224) x1834 (x1884 x1744)))
(define-fun x215 ((x1744 Real)) Real (ite (= x1744 256) x888 (x1856 x1744)))
(define-fun x983 ((x1744 Real)) Real (ite (= x1744 0) x369 (x397 x1744)))
(define-fun x3673 ((x1744 Real)) Real (ite (= 32 x1744) x1234 (x983 x1744)))
(define-fun x4246 ((x1744 Real)) Real (ite (= x1744 64) x1685 (x3673 x1744)))
(define-fun x1486 ((x1744 Real)) Real (ite (= 96 x1744) x3111 (x4246 x1744)))
(define-fun x1387 ((x1744 Real)) Real (ite (= x1744 128) x4016 (x1486 x1744)))
(define-fun x4432 ((x1744 Real)) Real (ite (and x3850 x2184) (x5154 x1744) (ite (and x221 x39) (x4604 x1744) (x2453 x1744))))
(define-fun x493 ((x4431 Real)) Bool (=> (and (not (= x4431 4072298103)) (not (= x4431 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (= 4033150093 x4431)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4431)) (not (= 2362581449 x4431)) (not (= 157198259 x4431)) (not (= x4431 4062139261)) (not (= x4431 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 170141183460469231731687303715884105727 x4431)) (not (= 20282409603651670423947251286015 x4431)) (not (= 3283311230 x4431)) (not (= 18446744073709551615 x4431)) (not (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x4431)) (not (= 1099511627775 x4431)) (not (= x4431 10141204801825835211973625643007)) (not (= 274184521717934524641157099916833587244 x4431)) (not (= 274184521717934524641157099916833587223 x4431)) (not (= 274184521717934524641157099916833587227 x4431)) (not (= 3454435393 x4431)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x4431)) (not (= 1208925819614629174706175 x4431)) (not (= 2514000705 x4431)) (not (= 340282366920938463463374607431768211456 x4431)) (not (= 117300739 x4431)) (not (= x4431 340282366920938463463374607431768211455)) (not (= x4431 18446744073709551616)) (not (= 404098525 x4431)) (not (= 3840337785 x4431)) (not (= 3257672857 x4431)) (not (= x4431 3798450084)) (not (= x4431 599290589)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4431)) (not (= x4431 3368549995)) (not (= x4431 65536)) (not (= x4431 274184521717934524641157099916833587210)) (not (= x4431 3833100637)) (not (= 3950285521 x4431)) (not (= x4431 4072275384)) (not (= 20282409603651670423947251286016 x4431)) (not (= x4431 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= x4431 4093572003)) (not (= 1461501637330902918203684832716283019655932542976 x4431)) (not (= x4431 2059964113)) (< 10000 x4431) (not (= 65535 x4431)) (not (= x4431 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 274184521717934524641157099916833587235 x4431)) (not (= 1889567281 x4431)) (not (= 3695885053 x4431)) (not (= 1461501637330902918203684832716283019655932542975 x4431)) (not (= x4431 826074471)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4431)) (not (= x4431 274184521717934524641157099916833587233)) (not (= 2835717307 x4431)) (not (= 4272920204 x4431)) (not (= x4431 1208925819614629174706176)) (not (= x4431 274184521717934524641157099916833587231)) (not (= x4431 3795249780))) (not ((_ is x1228) (x3424 x4431)))))
(assert (axiom_frac_bound (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x1211) x3431 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x2399) x3857 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x14 x3081) x2495 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1023 x1615 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1076 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x1127 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x162 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x3830 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1040 x4816 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1194 x2604 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1503 x4905 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1721 x1324 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1758 x1040 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1781 x1196 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2178 x4357 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2180 x5067 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2695 x5067 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2712 x452 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2799 x604 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3055 x1040 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3192 x5067 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3434 x1005 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3612 x596 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3830 x1040 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3880 x5112 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4006 x4560 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4080 (x14 x3450) (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4150 x5067 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417 x2185 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4261 x4714 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4450 x1525 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4484 x5067 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4553 x1674 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4560 x4006 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4646 x260 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4850 x537 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4907 x3135 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4970 x4591 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5006 x1426 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5036 x261 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5051 x4643 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5056 x5067 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x1647 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x2695 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5067 x4484 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5080 x1040 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5153 x858 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x537 x4850 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x3871 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76 (x14 x881) (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x858 x5153 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x5067 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x938 x450 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x978 x2153 (uninterp_frac (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 (x14 x1211) x3431 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 (x14 x2399) x3857 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 (x14 x3081) x2495 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1023 x1615 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1040 x1076 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1040 x1127 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1040 x162 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1040 x3830 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1040 x4816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1194 x2604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1503 x4905 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1721 x1324 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1758 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x1781 x1196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x2178 x4357 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x2180 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x2695 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x2712 x452 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x2799 x604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x3055 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x3192 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x3434 x1005 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x3612 x596 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x3830 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x3880 x5112 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4006 x4560 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4080 (x14 x3450) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4150 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x417 x2185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4261 x4714 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4450 x1525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4484 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4553 x1674 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4560 x4006 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4646 x260 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4850 x537 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4907 x3135 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x4970 x4591 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x5006 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x5036 x261 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x5051 x4643 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x5056 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x5067 x1647 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x5067 x2695 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x5067 x4484 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x5080 x1040 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x5153 x858 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x537 x4850 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x615 x3871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x76 (x14 x881) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x858 x5153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x935 x5067 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x938 x450 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615 x978 x2153 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615)))
(assert (axiom_frac_bound x1764 x1040))
(assert (axiom_frac_zero x1764 x1040 (x14 x1211) x3431 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 (x14 x2399) x3857 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 (x14 x3081) x2495 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1023 x1615 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1040 x1076 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1040 x1127 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1040 x162 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1040 x3830 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1040 x4816 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1194 x2604 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1503 x4905 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1721 x1324 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1758 x1040 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x1781 x1196 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x2178 x4357 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x2180 x5067 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x2695 x5067 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x2712 x452 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x2799 x604 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x3055 x1040 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x3192 x5067 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x3434 x1005 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x3612 x596 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x3830 x1040 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x3880 x5112 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4006 x4560 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4080 (x14 x3450) (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4150 x5067 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x417 x2185 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4261 x4714 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4450 x1525 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4484 x5067 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4553 x1674 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4560 x4006 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4646 x260 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4850 x537 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4907 x3135 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x4970 x4591 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x5006 x1426 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x5036 x261 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x5051 x4643 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x5056 x5067 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x5067 x1647 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x5067 x2695 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x5067 x4484 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x5080 x1040 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x5153 x858 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x537 x4850 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x615 x3871 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x76 (x14 x881) (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x858 x5153 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x935 x5067 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x938 x450 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_zero x1764 x1040 x978 x2153 (uninterp_frac x1764 x1040)))
(assert (axiom_frac_bound x1984 x5067))
(assert (axiom_frac_zero x1984 x5067 (x14 x1211) x3431 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 (x14 x2399) x3857 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 (x14 x3081) x2495 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1023 x1615 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1040 x1076 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1040 x1127 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1040 x162 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1040 x3830 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1040 x4816 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1194 x2604 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1503 x4905 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1721 x1324 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1758 x1040 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x1781 x1196 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x2178 x4357 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x2180 x5067 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x2695 x5067 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x2712 x452 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x2799 x604 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x3055 x1040 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x3192 x5067 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x3434 x1005 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x3612 x596 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x3830 x1040 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x3880 x5112 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4006 x4560 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4080 (x14 x3450) (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4150 x5067 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x417 x2185 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4261 x4714 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4450 x1525 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4484 x5067 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4553 x1674 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4560 x4006 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4646 x260 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4850 x537 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4907 x3135 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x4970 x4591 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x5006 x1426 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x5036 x261 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x5051 x4643 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x5056 x5067 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x5067 x1647 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x5067 x2695 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x5067 x4484 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x5080 x1040 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x5153 x858 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x537 x4850 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x615 x3871 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x76 (x14 x881) (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x858 x5153 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x935 x5067 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x938 x450 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_zero x1984 x5067 x978 x2153 (uninterp_frac x1984 x5067)))
(assert (axiom_frac_bound x2038 x5067))
(assert (axiom_frac_zero x2038 x5067 (x14 x1211) x3431 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 (x14 x2399) x3857 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 (x14 x3081) x2495 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1023 x1615 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1040 x1076 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1040 x1127 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1040 x162 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1040 x3830 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1040 x4816 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1194 x2604 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1503 x4905 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1721 x1324 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1758 x1040 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x1781 x1196 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x2178 x4357 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x2180 x5067 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x2695 x5067 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x2712 x452 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x2799 x604 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x3055 x1040 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x3192 x5067 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x3434 x1005 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x3612 x596 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x3830 x1040 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x3880 x5112 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4006 x4560 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4080 (x14 x3450) (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4150 x5067 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x417 x2185 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4261 x4714 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4450 x1525 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4484 x5067 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4553 x1674 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4560 x4006 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4646 x260 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4850 x537 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4907 x3135 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x4970 x4591 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x5006 x1426 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x5036 x261 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x5051 x4643 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x5056 x5067 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x5067 x1647 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x5067 x2695 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x5067 x4484 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x5080 x1040 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x5153 x858 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x537 x4850 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x615 x3871 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x76 (x14 x881) (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x858 x5153 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x935 x5067 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x938 x450 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_zero x2038 x5067 x978 x2153 (uninterp_frac x2038 x5067)))
(assert (axiom_frac_bound x2099 x5067))
(assert (axiom_frac_zero x2099 x5067 (x14 x1211) x3431 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 (x14 x2399) x3857 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 (x14 x3081) x2495 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1023 x1615 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1040 x1076 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1040 x1127 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1040 x162 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1040 x3830 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1040 x4816 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1194 x2604 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1503 x4905 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1721 x1324 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1758 x1040 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x1781 x1196 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x2178 x4357 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x2180 x5067 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x2695 x5067 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x2712 x452 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x2799 x604 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x3055 x1040 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x3192 x5067 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x3434 x1005 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x3612 x596 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x3830 x1040 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x3880 x5112 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4006 x4560 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4080 (x14 x3450) (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4150 x5067 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x417 x2185 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4261 x4714 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4450 x1525 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4484 x5067 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4553 x1674 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4560 x4006 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4646 x260 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4850 x537 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4907 x3135 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x4970 x4591 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x5006 x1426 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x5036 x261 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x5051 x4643 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x5056 x5067 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x5067 x1647 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x5067 x2695 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x5067 x4484 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x5080 x1040 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x5153 x858 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x537 x4850 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x615 x3871 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x76 (x14 x881) (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x858 x5153 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x935 x5067 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x938 x450 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_zero x2099 x5067 x978 x2153 (uninterp_frac x2099 x5067)))
(assert (axiom_frac_bound x2227 x1040))
(assert (axiom_frac_zero x2227 x1040 (x14 x1211) x3431 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 (x14 x2399) x3857 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 (x14 x3081) x2495 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1023 x1615 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1040 x1076 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1040 x1127 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1040 x162 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1040 x3830 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1040 x4816 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1194 x2604 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1503 x4905 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1721 x1324 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1758 x1040 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x1781 x1196 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x2178 x4357 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x2180 x5067 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x2695 x5067 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x2712 x452 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x2799 x604 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x3055 x1040 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x3192 x5067 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x3434 x1005 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x3612 x596 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x3830 x1040 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x3880 x5112 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4006 x4560 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4080 (x14 x3450) (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4150 x5067 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x417 x2185 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4261 x4714 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4450 x1525 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4484 x5067 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4553 x1674 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4560 x4006 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4646 x260 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4850 x537 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4907 x3135 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x4970 x4591 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x5006 x1426 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x5036 x261 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x5051 x4643 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x5056 x5067 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x5067 x1647 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x5067 x2695 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x5067 x4484 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x5080 x1040 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x5153 x858 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x537 x4850 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x615 x3871 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x76 (x14 x881) (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x858 x5153 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x935 x5067 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x938 x450 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_zero x2227 x1040 x978 x2153 (uninterp_frac x2227 x1040)))
(assert (axiom_frac_bound x419 x5067))
(assert (axiom_frac_zero x419 x5067 (x14 x1211) x3431 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 (x14 x2399) x3857 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 (x14 x3081) x2495 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1023 x1615 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1040 x1076 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1040 x1127 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1040 x162 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1040 x3830 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1040 x4816 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1194 x2604 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1503 x4905 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1721 x1324 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1758 x1040 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x1781 x1196 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x2178 x4357 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x2180 x5067 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x2695 x5067 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x2712 x452 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x2799 x604 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x3055 x1040 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x3192 x5067 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x3434 x1005 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x3612 x596 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x3830 x1040 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x3880 x5112 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4006 x4560 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4080 (x14 x3450) (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4150 x5067 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x417 x2185 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4261 x4714 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4450 x1525 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4484 x5067 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4553 x1674 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4560 x4006 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4646 x260 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4850 x537 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4907 x3135 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x4970 x4591 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x5006 x1426 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x5036 x261 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x5051 x4643 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x5056 x5067 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x5067 x1647 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x5067 x2695 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x5067 x4484 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x5080 x1040 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x5153 x858 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x537 x4850 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x615 x3871 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x76 (x14 x881) (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x858 x5153 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x935 x5067 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x938 x450 (uninterp_frac x419 x5067)))
(assert (axiom_frac_zero x419 x5067 x978 x2153 (uninterp_frac x419 x5067)))
(assert (axiom_frac_bound x430 x434))
(assert (axiom_frac_zero x430 x434 (x14 x1211) x3431 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 (x14 x2399) x3857 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 (x14 x3081) x2495 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1023 x1615 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1040 x1076 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1040 x1127 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1040 x162 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1040 x3830 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1040 x4816 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1194 x2604 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1503 x4905 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1721 x1324 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1758 x1040 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x1781 x1196 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x2178 x4357 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x2180 x5067 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x2695 x5067 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x2712 x452 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x2799 x604 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x3055 x1040 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x3192 x5067 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x3434 x1005 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x3612 x596 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x3830 x1040 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x3880 x5112 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4006 x4560 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4080 (x14 x3450) (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4150 x5067 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x417 x2185 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4261 x4714 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4450 x1525 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4484 x5067 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4553 x1674 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4560 x4006 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4646 x260 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4850 x537 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4907 x3135 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x4970 x4591 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x5006 x1426 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x5036 x261 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x5051 x4643 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x5056 x5067 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x5067 x1647 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x5067 x2695 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x5067 x4484 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x5080 x1040 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x5153 x858 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x537 x4850 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x615 x3871 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x76 (x14 x881) (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x858 x5153 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x935 x5067 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x938 x450 (uninterp_frac x430 x434)))
(assert (axiom_frac_zero x430 x434 x978 x2153 (uninterp_frac x430 x434)))
(assert (axiom_frac_bound x4922 x1040))
(assert (axiom_frac_zero x4922 x1040 (x14 x1211) x3431 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 (x14 x2399) x3857 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 (x14 x3081) x2495 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1023 x1615 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1040 x1076 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1040 x1127 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1040 x162 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1040 x3830 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1040 x4816 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1194 x2604 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1503 x4905 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1721 x1324 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1758 x1040 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x1781 x1196 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x2178 x4357 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x2180 x5067 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x2695 x5067 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x2712 x452 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x2799 x604 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x3055 x1040 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x3192 x5067 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x3434 x1005 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x3612 x596 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x3830 x1040 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x3880 x5112 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4006 x4560 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4080 (x14 x3450) (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4150 x5067 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x417 x2185 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4261 x4714 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4450 x1525 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4484 x5067 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4553 x1674 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4560 x4006 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4646 x260 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4850 x537 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4907 x3135 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x4970 x4591 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x5006 x1426 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x5036 x261 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x5051 x4643 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x5056 x5067 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x5067 x1647 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x5067 x2695 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x5067 x4484 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x5080 x1040 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x5153 x858 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x537 x4850 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x615 x3871 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x76 (x14 x881) (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x858 x5153 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x935 x5067 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x938 x450 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_zero x4922 x1040 x978 x2153 (uninterp_frac x4922 x1040)))
(assert (axiom_frac_bound x5052 x1040))
(assert (axiom_frac_zero x5052 x1040 (x14 x1211) x3431 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 (x14 x2399) x3857 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 (x14 x3081) x2495 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1023 x1615 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1040 x1076 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1040 x1127 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1040 x162 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1040 x3830 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1040 x4816 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1194 x2604 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1503 x4905 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1721 x1324 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1758 x1040 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x1781 x1196 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x2178 x4357 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x2180 x5067 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x2695 x5067 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x2712 x452 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x2799 x604 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x3055 x1040 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x3192 x5067 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x3434 x1005 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x3612 x596 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x3830 x1040 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x3880 x5112 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4006 x4560 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4080 (x14 x3450) (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4150 x5067 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x417 x2185 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4261 x4714 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4450 x1525 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4484 x5067 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4553 x1674 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4560 x4006 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4646 x260 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4850 x537 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4907 x3135 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x4970 x4591 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x5006 x1426 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x5036 x261 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x5051 x4643 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x5056 x5067 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x5067 x1647 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x5067 x2695 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x5067 x4484 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x5080 x1040 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x5153 x858 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x537 x4850 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x615 x3871 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x76 (x14 x881) (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x858 x5153 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x935 x5067 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x938 x450 (uninterp_frac x5052 x1040)))
(assert (axiom_frac_zero x5052 x1040 x978 x2153 (uninterp_frac x5052 x1040)))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1007))
(assert (axiom_int_approximation x1008))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1014))
(assert (axiom_int_approximation x1015))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1023))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1044))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x1051))
(assert (axiom_int_approximation x1052))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1056))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x1059))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x107))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1085))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1097))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1116))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1121))
(assert (axiom_int_approximation x1125))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1133))
(assert (axiom_int_approximation x1135))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1154))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x1160))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1166))
(assert (axiom_int_approximation x1168))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x1175))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x1190))
(assert (axiom_int_approximation x1194))
(assert (axiom_int_approximation x1195))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1205))
(assert (axiom_int_approximation x1206))
(assert (axiom_int_approximation x1211))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1216))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1218))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1222))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1226))
(assert (axiom_int_approximation x1229))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1234))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1253))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1264))
(assert (axiom_int_approximation x1265))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1269))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1280))
(assert (axiom_int_approximation x1281))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1314))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1320))
(assert (axiom_int_approximation x1321))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1333))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1335))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1342))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x1352))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1357))
(assert (axiom_int_approximation x1358))
(assert (axiom_int_approximation x1363))
(assert (axiom_int_approximation x1366))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x1378))
(assert (axiom_int_approximation x138))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1393))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x1403))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1405))
(assert (axiom_int_approximation x1409))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x1413))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1416))
(assert (axiom_int_approximation x1417))
(assert (axiom_int_approximation x1419))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1425))
(assert (axiom_int_approximation x1426))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1433))
(assert (axiom_int_approximation x1434))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1454))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1468))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1476))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1479))
(assert (axiom_int_approximation x1488))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x1492))
(assert (axiom_int_approximation x1495))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x1500))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1505))
(assert (axiom_int_approximation x1506))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x151))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1515))
(assert (axiom_int_approximation x1516))
(assert (axiom_int_approximation x1517))
(assert (axiom_int_approximation x1520))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1531))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1541))
(assert (axiom_int_approximation x1543))
(assert (axiom_int_approximation x1544))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1555))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1561))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1571))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1575))
(assert (axiom_int_approximation x1577))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1581))
(assert (axiom_int_approximation x1584))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1586))
(assert (axiom_int_approximation x1587))
(assert (axiom_int_approximation x1589))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x1599))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1603))
(assert (axiom_int_approximation x1605))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1608))
(assert (axiom_int_approximation x1609))
(assert (axiom_int_approximation x1610))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1614))
(assert (axiom_int_approximation x1615))
(assert (axiom_int_approximation x1616))
(assert (axiom_int_approximation x1617))
(assert (axiom_int_approximation x1618))
(assert (axiom_int_approximation x1619))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x1620))
(assert (axiom_int_approximation x1621))
(assert (axiom_int_approximation x1623))
(assert (axiom_int_approximation x1624))
(assert (axiom_int_approximation x1625))
(assert (axiom_int_approximation x1626))
(assert (axiom_int_approximation x1628))
(assert (axiom_int_approximation x1629))
(assert (axiom_int_approximation x1632))
(assert (axiom_int_approximation x1633))
(assert (axiom_int_approximation x1635))
(assert (axiom_int_approximation x1640))
(assert (axiom_int_approximation x1641))
(assert (axiom_int_approximation x1643))
(assert (axiom_int_approximation x1646))
(assert (axiom_int_approximation x1647))
(assert (axiom_int_approximation x1649))
(assert (axiom_int_approximation x1650))
(assert (axiom_int_approximation x1651))
(assert (axiom_int_approximation x1653))
(assert (axiom_int_approximation x1654))
(assert (axiom_int_approximation x1655))
(assert (axiom_int_approximation x1657))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x1659))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x1662))
(assert (axiom_int_approximation x1663))
(assert (axiom_int_approximation x1665))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x1667))
(assert (axiom_int_approximation x1668))
(assert (axiom_int_approximation x1669))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x1670))
(assert (axiom_int_approximation x1671))
(assert (axiom_int_approximation x1672))
(assert (axiom_int_approximation x1674))
(assert (axiom_int_approximation x1675))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1677))
(assert (axiom_int_approximation x1683))
(assert (axiom_int_approximation x1685))
(assert (axiom_int_approximation x1686))
(assert (axiom_int_approximation x1687))
(assert (axiom_int_approximation x1688))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x1691))
(assert (axiom_int_approximation x1692))
(assert (axiom_int_approximation x1693))
(assert (axiom_int_approximation x1694))
(assert (axiom_int_approximation x1695))
(assert (axiom_int_approximation x1697))
(assert (axiom_int_approximation x1699))
(assert (axiom_int_approximation x1702))
(assert (axiom_int_approximation x1705))
(assert (axiom_int_approximation x1706))
(assert (axiom_int_approximation x1708))
(assert (axiom_int_approximation x1709))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1714))
(assert (axiom_int_approximation x1718))
(assert (axiom_int_approximation x1721))
(assert (axiom_int_approximation x1722))
(assert (axiom_int_approximation x1724))
(assert (axiom_int_approximation x1725))
(assert (axiom_int_approximation x1727))
(assert (axiom_int_approximation x1728))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x1730))
(assert (axiom_int_approximation x1732))
(assert (axiom_int_approximation x1733))
(assert (axiom_int_approximation x1736))
(assert (axiom_int_approximation x1737))
(assert (axiom_int_approximation x1740))
(assert (axiom_int_approximation x1741))
(assert (axiom_int_approximation x1743))
(assert (axiom_int_approximation x1747))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x1750))
(assert (axiom_int_approximation x1751))
(assert (axiom_int_approximation x1752))
(assert (axiom_int_approximation x1754))
(assert (axiom_int_approximation x1758))
(assert (axiom_int_approximation x1759))
(assert (axiom_int_approximation x1760))
(assert (axiom_int_approximation x1761))
(assert (axiom_int_approximation x1762))
(assert (axiom_int_approximation x1764))
(assert (axiom_int_approximation x1766))
(assert (axiom_int_approximation x1767))
(assert (axiom_int_approximation x1768))
(assert (axiom_int_approximation x1769))
(assert (axiom_int_approximation x1770))
(assert (axiom_int_approximation x1772))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x1774))
(assert (axiom_int_approximation x1775))
(assert (axiom_int_approximation x1779))
(assert (axiom_int_approximation x1780))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1785))
(assert (axiom_int_approximation x1786))
(assert (axiom_int_approximation x1788))
(assert (axiom_int_approximation x1791))
(assert (axiom_int_approximation x1792))
(assert (axiom_int_approximation x1793))
(assert (axiom_int_approximation x1795))
(assert (axiom_int_approximation x1796))
(assert (axiom_int_approximation x1797))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x1800))
(assert (axiom_int_approximation x1801))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1806))
(assert (axiom_int_approximation x1807))
(assert (axiom_int_approximation x1808))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1816))
(assert (axiom_int_approximation x1817))
(assert (axiom_int_approximation x1818))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x1820))
(assert (axiom_int_approximation x1825))
(assert (axiom_int_approximation x1828))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x1831))
(assert (axiom_int_approximation x1832))
(assert (axiom_int_approximation x1834))
(assert (axiom_int_approximation x1835))
(assert (axiom_int_approximation x1836))
(assert (axiom_int_approximation x1837))
(assert (axiom_int_approximation x1838))
(assert (axiom_int_approximation x1841))
(assert (axiom_int_approximation x1842))
(assert (axiom_int_approximation x1843))
(assert (axiom_int_approximation x1847))
(assert (axiom_int_approximation x1848))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x1850))
(assert (axiom_int_approximation x1851))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1857))
(assert (axiom_int_approximation x1858))
(assert (axiom_int_approximation x1860))
(assert (axiom_int_approximation x1861))
(assert (axiom_int_approximation x1863))
(assert (axiom_int_approximation x1864))
(assert (axiom_int_approximation x1865))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x1869))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x1870))
(assert (axiom_int_approximation x1873))
(assert (axiom_int_approximation x1875))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x1880))
(assert (axiom_int_approximation x1881))
(assert (axiom_int_approximation x1885))
(assert (axiom_int_approximation x1887))
(assert (axiom_int_approximation x1888))
(assert (axiom_int_approximation x1889))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1891))
(assert (axiom_int_approximation x1892))
(assert (axiom_int_approximation x1895))
(assert (axiom_int_approximation x1897))
(assert (axiom_int_approximation x1898))
(assert (axiom_int_approximation x1899))
(assert (axiom_int_approximation x1901))
(assert (axiom_int_approximation x1902))
(assert (axiom_int_approximation x1904))
(assert (axiom_int_approximation x1905))
(assert (axiom_int_approximation x1908))
(assert (axiom_int_approximation x1910))
(assert (axiom_int_approximation x1916))
(assert (axiom_int_approximation x1918))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x1923))
(assert (axiom_int_approximation x1924))
(assert (axiom_int_approximation x1926))
(assert (axiom_int_approximation x1927))
(assert (axiom_int_approximation x1928))
(assert (axiom_int_approximation x1929))
(assert (axiom_int_approximation x1930))
(assert (axiom_int_approximation x1931))
(assert (axiom_int_approximation x1933))
(assert (axiom_int_approximation x1934))
(assert (axiom_int_approximation x1935))
(assert (axiom_int_approximation x1937))
(assert (axiom_int_approximation x1938))
(assert (axiom_int_approximation x1939))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x1940))
(assert (axiom_int_approximation x1941))
(assert (axiom_int_approximation x1944))
(assert (axiom_int_approximation x1945))
(assert (axiom_int_approximation x1946))
(assert (axiom_int_approximation x1948))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x1950))
(assert (axiom_int_approximation x1952))
(assert (axiom_int_approximation x1953))
(assert (axiom_int_approximation x1954))
(assert (axiom_int_approximation x1957))
(assert (axiom_int_approximation x1958))
(assert (axiom_int_approximation x1959))
(assert (axiom_int_approximation x1960))
(assert (axiom_int_approximation x1962))
(assert (axiom_int_approximation x1963))
(assert (axiom_int_approximation x1964))
(assert (axiom_int_approximation x1968))
(assert (axiom_int_approximation x1969))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x1971))
(assert (axiom_int_approximation x1972))
(assert (axiom_int_approximation x1973))
(assert (axiom_int_approximation x1974))
(assert (axiom_int_approximation x1977))
(assert (axiom_int_approximation x1978))
(assert (axiom_int_approximation x1981))
(assert (axiom_int_approximation x1984))
(assert (axiom_int_approximation x1985))
(assert (axiom_int_approximation x1986))
(assert (axiom_int_approximation x1987))
(assert (axiom_int_approximation x1989))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x1996))
(assert (axiom_int_approximation x1997))
(assert (axiom_int_approximation x1998))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x2000))
(assert (axiom_int_approximation x2002))
(assert (axiom_int_approximation x2004))
(assert (axiom_int_approximation x2006))
(assert (axiom_int_approximation x2007))
(assert (axiom_int_approximation x2008))
(assert (axiom_int_approximation x2010))
(assert (axiom_int_approximation x2015))
(assert (axiom_int_approximation x2018))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x2023))
(assert (axiom_int_approximation x2025))
(assert (axiom_int_approximation x2026))
(assert (axiom_int_approximation x2027))
(assert (axiom_int_approximation x2028))
(assert (axiom_int_approximation x2029))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x2031))
(assert (axiom_int_approximation x2032))
(assert (axiom_int_approximation x2036))
(assert (axiom_int_approximation x2038))
(assert (axiom_int_approximation x2041))
(assert (axiom_int_approximation x2044))
(assert (axiom_int_approximation x2046))
(assert (axiom_int_approximation x2047))
(assert (axiom_int_approximation x2048))
(assert (axiom_int_approximation x2049))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x2050))
(assert (axiom_int_approximation x2054))
(assert (axiom_int_approximation x2056))
(assert (axiom_int_approximation x2057))
(assert (axiom_int_approximation x2058))
(assert (axiom_int_approximation x2059))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x2067))
(assert (axiom_int_approximation x2068))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x2071))
(assert (axiom_int_approximation x2072))
(assert (axiom_int_approximation x2073))
(assert (axiom_int_approximation x2074))
(assert (axiom_int_approximation x2075))
(assert (axiom_int_approximation x2078))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x2083))
(assert (axiom_int_approximation x2085))
(assert (axiom_int_approximation x2086))
(assert (axiom_int_approximation x2087))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x2090))
(assert (axiom_int_approximation x2091))
(assert (axiom_int_approximation x2098))
(assert (axiom_int_approximation x2099))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x2101))
(assert (axiom_int_approximation x2106))
(assert (axiom_int_approximation x2107))
(assert (axiom_int_approximation x2108))
(assert (axiom_int_approximation x2109))
(assert (axiom_int_approximation x2111))
(assert (axiom_int_approximation x2114))
(assert (axiom_int_approximation x2115))
(assert (axiom_int_approximation x2117))
(assert (axiom_int_approximation x2118))
(assert (axiom_int_approximation x2119))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x2120))
(assert (axiom_int_approximation x2124))
(assert (axiom_int_approximation x2125))
(assert (axiom_int_approximation x2127))
(assert (axiom_int_approximation x2128))
(assert (axiom_int_approximation x2129))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x2131))
(assert (axiom_int_approximation x2132))
(assert (axiom_int_approximation x2133))
(assert (axiom_int_approximation x2135))
(assert (axiom_int_approximation x2137))
(assert (axiom_int_approximation x2138))
(assert (axiom_int_approximation x2139))
(assert (axiom_int_approximation x2140))
(assert (axiom_int_approximation x2143))
(assert (axiom_int_approximation x2145))
(assert (axiom_int_approximation x2146))
(assert (axiom_int_approximation x2148))
(assert (axiom_int_approximation x2149))
(assert (axiom_int_approximation x2151))
(assert (axiom_int_approximation x2153))
(assert (axiom_int_approximation x2155))
(assert (axiom_int_approximation x2156))
(assert (axiom_int_approximation x2157))
(assert (axiom_int_approximation x2159))
(assert (axiom_int_approximation x2160))
(assert (axiom_int_approximation x2162))
(assert (axiom_int_approximation x2165))
(assert (axiom_int_approximation x2169))
(assert (axiom_int_approximation x2172))
(assert (axiom_int_approximation x2174))
(assert (axiom_int_approximation x2175))
(assert (axiom_int_approximation x2176))
(assert (axiom_int_approximation x2178))
(assert (axiom_int_approximation x2179))
(assert (axiom_int_approximation x2180))
(assert (axiom_int_approximation x2185))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x2191))
(assert (axiom_int_approximation x2193))
(assert (axiom_int_approximation x2195))
(assert (axiom_int_approximation x2196))
(assert (axiom_int_approximation x2201))
(assert (axiom_int_approximation x2202))
(assert (axiom_int_approximation x2203))
(assert (axiom_int_approximation x2205))
(assert (axiom_int_approximation x2206))
(assert (axiom_int_approximation x2207))
(assert (axiom_int_approximation x2208))
(assert (axiom_int_approximation x2209))
(assert (axiom_int_approximation x2211))
(assert (axiom_int_approximation x2214))
(assert (axiom_int_approximation x2216))
(assert (axiom_int_approximation x2218))
(assert (axiom_int_approximation x2219))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x2222))
(assert (axiom_int_approximation x2223))
(assert (axiom_int_approximation x2224))
(assert (axiom_int_approximation x2227))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x2230))
(assert (axiom_int_approximation x2231))
(assert (axiom_int_approximation x2233))
(assert (axiom_int_approximation x2234))
(assert (axiom_int_approximation x2236))
(assert (axiom_int_approximation x2239))
(assert (axiom_int_approximation x2240))
(assert (axiom_int_approximation x2241))
(assert (axiom_int_approximation x2242))
(assert (axiom_int_approximation x2243))
(assert (axiom_int_approximation x2244))
(assert (axiom_int_approximation x2247))
(assert (axiom_int_approximation x2248))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x2250))
(assert (axiom_int_approximation x2252))
(assert (axiom_int_approximation x2253))
(assert (axiom_int_approximation x2257))
(assert (axiom_int_approximation x2258))
(assert (axiom_int_approximation x2259))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x2260))
(assert (axiom_int_approximation x2263))
(assert (axiom_int_approximation x2264))
(assert (axiom_int_approximation x2269))
(assert (axiom_int_approximation x2271))
(assert (axiom_int_approximation x2272))
(assert (axiom_int_approximation x2273))
(assert (axiom_int_approximation x2275))
(assert (axiom_int_approximation x2287))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x2290))
(assert (axiom_int_approximation x2291))
(assert (axiom_int_approximation x2292))
(assert (axiom_int_approximation x2294))
(assert (axiom_int_approximation x2296))
(assert (axiom_int_approximation x2297))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x2301))
(assert (axiom_int_approximation x2303))
(assert (axiom_int_approximation x2304))
(assert (axiom_int_approximation x2305))
(assert (axiom_int_approximation x2308))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x2314))
(assert (axiom_int_approximation x2315))
(assert (axiom_int_approximation x2316))
(assert (axiom_int_approximation x2317))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x2320))
(assert (axiom_int_approximation x2321))
(assert (axiom_int_approximation x2326))
(assert (axiom_int_approximation x2330))
(assert (axiom_int_approximation x2331))
(assert (axiom_int_approximation x2333))
(assert (axiom_int_approximation x2334))
(assert (axiom_int_approximation x2338))
(assert (axiom_int_approximation x2339))
(assert (axiom_int_approximation x2340))
(assert (axiom_int_approximation x2342))
(assert (axiom_int_approximation x2345))
(assert (axiom_int_approximation x2346))
(assert (axiom_int_approximation x2351))
(assert (axiom_int_approximation x2352))
(assert (axiom_int_approximation x2353))
(assert (axiom_int_approximation x2354))
(assert (axiom_int_approximation x2358))
(assert (axiom_int_approximation x2360))
(assert (axiom_int_approximation x2361))
(assert (axiom_int_approximation x2363))
(assert (axiom_int_approximation x2364))
(assert (axiom_int_approximation x2365))
(assert (axiom_int_approximation x2366))
(assert (axiom_int_approximation x2367))
(assert (axiom_int_approximation x2369))
(assert (axiom_int_approximation x2370))
(assert (axiom_int_approximation x2371))
(assert (axiom_int_approximation x2375))
(assert (axiom_int_approximation x2376))
(assert (axiom_int_approximation x2378))
(assert (axiom_int_approximation x2379))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x2384))
(assert (axiom_int_approximation x2389))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x2391))
(assert (axiom_int_approximation x2393))
(assert (axiom_int_approximation x2394))
(assert (axiom_int_approximation x2395))
(assert (axiom_int_approximation x2397))
(assert (axiom_int_approximation x2399))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x2400))
(assert (axiom_int_approximation x2402))
(assert (axiom_int_approximation x2403))
(assert (axiom_int_approximation x2409))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x2410))
(assert (axiom_int_approximation x2411))
(assert (axiom_int_approximation x2412))
(assert (axiom_int_approximation x2413))
(assert (axiom_int_approximation x2414))
(assert (axiom_int_approximation x2415))
(assert (axiom_int_approximation x2419))
(assert (axiom_int_approximation x2420))
(assert (axiom_int_approximation x2423))
(assert (axiom_int_approximation x2424))
(assert (axiom_int_approximation x2425))
(assert (axiom_int_approximation x2427))
(assert (axiom_int_approximation x2429))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x2430))
(assert (axiom_int_approximation x2431))
(assert (axiom_int_approximation x2434))
(assert (axiom_int_approximation x2437))
(assert (axiom_int_approximation x2439))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x2441))
(assert (axiom_int_approximation x2442))
(assert (axiom_int_approximation x2446))
(assert (axiom_int_approximation x2447))
(assert (axiom_int_approximation x2448))
(assert (axiom_int_approximation x2450))
(assert (axiom_int_approximation x2451))
(assert (axiom_int_approximation x2454))
(assert (axiom_int_approximation x2456))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x2463))
(assert (axiom_int_approximation x2466))
(assert (axiom_int_approximation x2468))
(assert (axiom_int_approximation x2469))
(assert (axiom_int_approximation x2471))
(assert (axiom_int_approximation x2472))
(assert (axiom_int_approximation x2474))
(assert (axiom_int_approximation x2475))
(assert (axiom_int_approximation x2477))
(assert (axiom_int_approximation x2478))
(assert (axiom_int_approximation x2479))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x2480))
(assert (axiom_int_approximation x2482))
(assert (axiom_int_approximation x2491))
(assert (axiom_int_approximation x2494))
(assert (axiom_int_approximation x2495))
(assert (axiom_int_approximation x2497))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x2500))
(assert (axiom_int_approximation x2501))
(assert (axiom_int_approximation x2502))
(assert (axiom_int_approximation x2503))
(assert (axiom_int_approximation x2505))
(assert (axiom_int_approximation x2511))
(assert (axiom_int_approximation x2512))
(assert (axiom_int_approximation x2513))
(assert (axiom_int_approximation x2519))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x2521))
(assert (axiom_int_approximation x2525))
(assert (axiom_int_approximation x2530))
(assert (axiom_int_approximation x2531))
(assert (axiom_int_approximation x2532))
(assert (axiom_int_approximation x2533))
(assert (axiom_int_approximation x2535))
(assert (axiom_int_approximation x2537))
(assert (axiom_int_approximation x2539))
(assert (axiom_int_approximation x2540))
(assert (axiom_int_approximation x2542))
(assert (axiom_int_approximation x2543))
(assert (axiom_int_approximation x2544))
(assert (axiom_int_approximation x2546))
(assert (axiom_int_approximation x2547))
(assert (axiom_int_approximation x2548))
(assert (axiom_int_approximation x2551))
(assert (axiom_int_approximation x2554))
(assert (axiom_int_approximation x2556))
(assert (axiom_int_approximation x2557))
(assert (axiom_int_approximation x2558))
(assert (axiom_int_approximation x2559))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x2560))
(assert (axiom_int_approximation x2562))
(assert (axiom_int_approximation x2563))
(assert (axiom_int_approximation x2565))
(assert (axiom_int_approximation x2567))
(assert (axiom_int_approximation x2568))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x2573))
(assert (axiom_int_approximation x2576))
(assert (axiom_int_approximation x2577))
(assert (axiom_int_approximation x2578))
(assert (axiom_int_approximation x2579))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x2581))
(assert (axiom_int_approximation x2583))
(assert (axiom_int_approximation x2586))
(assert (axiom_int_approximation x2587))
(assert (axiom_int_approximation x2588))
(assert (axiom_int_approximation x2592))
(assert (axiom_int_approximation x2595))
(assert (axiom_int_approximation x2597))
(assert (axiom_int_approximation x2598))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x2602))
(assert (axiom_int_approximation x2603))
(assert (axiom_int_approximation x2604))
(assert (axiom_int_approximation x2606))
(assert (axiom_int_approximation x2607))
(assert (axiom_int_approximation x2608))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x2610))
(assert (axiom_int_approximation x2611))
(assert (axiom_int_approximation x2612))
(assert (axiom_int_approximation x2614))
(assert (axiom_int_approximation x2616))
(assert (axiom_int_approximation x2621))
(assert (axiom_int_approximation x2624))
(assert (axiom_int_approximation x2628))
(assert (axiom_int_approximation x2629))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x2632))
(assert (axiom_int_approximation x2633))
(assert (axiom_int_approximation x2635))
(assert (axiom_int_approximation x2641))
(assert (axiom_int_approximation x2642))
(assert (axiom_int_approximation x2644))
(assert (axiom_int_approximation x2647))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x2650))
(assert (axiom_int_approximation x2651))
(assert (axiom_int_approximation x2653))
(assert (axiom_int_approximation x2656))
(assert (axiom_int_approximation x2657))
(assert (axiom_int_approximation x2659))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x2662))
(assert (axiom_int_approximation x2663))
(assert (axiom_int_approximation x2664))
(assert (axiom_int_approximation x2668))
(assert (axiom_int_approximation x2669))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x2671))
(assert (axiom_int_approximation x2672))
(assert (axiom_int_approximation x2674))
(assert (axiom_int_approximation x2675))
(assert (axiom_int_approximation x2677))
(assert (axiom_int_approximation x2680))
(assert (axiom_int_approximation x2681))
(assert (axiom_int_approximation x2684))
(assert (axiom_int_approximation x2685))
(assert (axiom_int_approximation x2688))
(assert (axiom_int_approximation x2693))
(assert (axiom_int_approximation x2695))
(assert (axiom_int_approximation x2696))
(assert (axiom_int_approximation x2697))
(assert (axiom_int_approximation x2698))
(assert (axiom_int_approximation x2699))
(assert (axiom_int_approximation x27))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x2700))
(assert (axiom_int_approximation x2703))
(assert (axiom_int_approximation x2704))
(assert (axiom_int_approximation x2705))
(assert (axiom_int_approximation x2708))
(assert (axiom_int_approximation x2709))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x2710))
(assert (axiom_int_approximation x2711))
(assert (axiom_int_approximation x2712))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x2721))
(assert (axiom_int_approximation x2725))
(assert (axiom_int_approximation x2727))
(assert (axiom_int_approximation x2729))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x2730))
(assert (axiom_int_approximation x2731))
(assert (axiom_int_approximation x2732))
(assert (axiom_int_approximation x2733))
(assert (axiom_int_approximation x2735))
(assert (axiom_int_approximation x2737))
(assert (axiom_int_approximation x2738))
(assert (axiom_int_approximation x2739))
(assert (axiom_int_approximation x2742))
(assert (axiom_int_approximation x2743))
(assert (axiom_int_approximation x2744))
(assert (axiom_int_approximation x2745))
(assert (axiom_int_approximation x2746))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x2752))
(assert (axiom_int_approximation x2753))
(assert (axiom_int_approximation x2755))
(assert (axiom_int_approximation x2758))
(assert (axiom_int_approximation x2760))
(assert (axiom_int_approximation x2761))
(assert (axiom_int_approximation x2762))
(assert (axiom_int_approximation x2763))
(assert (axiom_int_approximation x2765))
(assert (axiom_int_approximation x2769))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x2771))
(assert (axiom_int_approximation x2772))
(assert (axiom_int_approximation x2773))
(assert (axiom_int_approximation x2775))
(assert (axiom_int_approximation x2776))
(assert (axiom_int_approximation x2777))
(assert (axiom_int_approximation x2779))
(assert (axiom_int_approximation x2781))
(assert (axiom_int_approximation x2782))
(assert (axiom_int_approximation x2783))
(assert (axiom_int_approximation x2784))
(assert (axiom_int_approximation x2785))
(assert (axiom_int_approximation x2787))
(assert (axiom_int_approximation x2788))
(assert (axiom_int_approximation x2789))
(assert (axiom_int_approximation x2793))
(assert (axiom_int_approximation x2794))
(assert (axiom_int_approximation x2798))
(assert (axiom_int_approximation x2799))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x2800))
(assert (axiom_int_approximation x2801))
(assert (axiom_int_approximation x2802))
(assert (axiom_int_approximation x2804))
(assert (axiom_int_approximation x2806))
(assert (axiom_int_approximation x2808))
(assert (axiom_int_approximation x2809))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x2810))
(assert (axiom_int_approximation x2817))
(assert (axiom_int_approximation x2819))
(assert (axiom_int_approximation x2820))
(assert (axiom_int_approximation x2821))
(assert (axiom_int_approximation x2822))
(assert (axiom_int_approximation x2823))
(assert (axiom_int_approximation x2824))
(assert (axiom_int_approximation x2829))
(assert (axiom_int_approximation x2830))
(assert (axiom_int_approximation x2834))
(assert (axiom_int_approximation x2835))
(assert (axiom_int_approximation x2836))
(assert (axiom_int_approximation x2838))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x2842))
(assert (axiom_int_approximation x2846))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x2853))
(assert (axiom_int_approximation x2859))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x2860))
(assert (axiom_int_approximation x2862))
(assert (axiom_int_approximation x2863))
(assert (axiom_int_approximation x2866))
(assert (axiom_int_approximation x2868))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x2872))
(assert (axiom_int_approximation x2873))
(assert (axiom_int_approximation x2874))
(assert (axiom_int_approximation x2875))
(assert (axiom_int_approximation x2878))
(assert (axiom_int_approximation x2879))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x2882))
(assert (axiom_int_approximation x2883))
(assert (axiom_int_approximation x2885))
(assert (axiom_int_approximation x2888))
(assert (axiom_int_approximation x2889))
(assert (axiom_int_approximation x2891))
(assert (axiom_int_approximation x2892))
(assert (axiom_int_approximation x2893))
(assert (axiom_int_approximation x2894))
(assert (axiom_int_approximation x2895))
(assert (axiom_int_approximation x2896))
(assert (axiom_int_approximation x2899))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x2901))
(assert (axiom_int_approximation x2904))
(assert (axiom_int_approximation x2905))
(assert (axiom_int_approximation x2906))
(assert (axiom_int_approximation x2907))
(assert (axiom_int_approximation x2908))
(assert (axiom_int_approximation x2909))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x2910))
(assert (axiom_int_approximation x2911))
(assert (axiom_int_approximation x2912))
(assert (axiom_int_approximation x2913))
(assert (axiom_int_approximation x2914))
(assert (axiom_int_approximation x2915))
(assert (axiom_int_approximation x2917))
(assert (axiom_int_approximation x2919))
(assert (axiom_int_approximation x2920))
(assert (axiom_int_approximation x2921))
(assert (axiom_int_approximation x2922))
(assert (axiom_int_approximation x2925))
(assert (axiom_int_approximation x2926))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x2932))
(assert (axiom_int_approximation x2933))
(assert (axiom_int_approximation x2934))
(assert (axiom_int_approximation x2935))
(assert (axiom_int_approximation x2936))
(assert (axiom_int_approximation x2938))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x2940))
(assert (axiom_int_approximation x2943))
(assert (axiom_int_approximation x2944))
(assert (axiom_int_approximation x2946))
(assert (axiom_int_approximation x2947))
(assert (axiom_int_approximation x2949))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x2950))
(assert (axiom_int_approximation x2951))
(assert (axiom_int_approximation x2953))
(assert (axiom_int_approximation x2954))
(assert (axiom_int_approximation x2956))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x2960))
(assert (axiom_int_approximation x2961))
(assert (axiom_int_approximation x2962))
(assert (axiom_int_approximation x2963))
(assert (axiom_int_approximation x2964))
(assert (axiom_int_approximation x2965))
(assert (axiom_int_approximation x2966))
(assert (axiom_int_approximation x2971))
(assert (axiom_int_approximation x2972))
(assert (axiom_int_approximation x2975))
(assert (axiom_int_approximation x2976))
(assert (axiom_int_approximation x2977))
(assert (axiom_int_approximation x2981))
(assert (axiom_int_approximation x2983))
(assert (axiom_int_approximation x2987))
(assert (axiom_int_approximation x2989))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x2990))
(assert (axiom_int_approximation x2991))
(assert (axiom_int_approximation x2993))
(assert (axiom_int_approximation x2998))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x3000))
(assert (axiom_int_approximation x3001))
(assert (axiom_int_approximation x3004))
(assert (axiom_int_approximation x3006))
(assert (axiom_int_approximation x3007))
(assert (axiom_int_approximation x3009))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x3010))
(assert (axiom_int_approximation x3012))
(assert (axiom_int_approximation x3014))
(assert (axiom_int_approximation x3015))
(assert (axiom_int_approximation x3019))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x3022))
(assert (axiom_int_approximation x3024))
(assert (axiom_int_approximation x3025))
(assert (axiom_int_approximation x3026))
(assert (axiom_int_approximation x3027))
(assert (axiom_int_approximation x3028))
(assert (axiom_int_approximation x3029))
(assert (axiom_int_approximation x3030))
(assert (axiom_int_approximation x3032))
(assert (axiom_int_approximation x3033))
(assert (axiom_int_approximation x3036))
(assert (axiom_int_approximation x3037))
(assert (axiom_int_approximation x3038))
(assert (axiom_int_approximation x3040))
(assert (axiom_int_approximation x3041))
(assert (axiom_int_approximation x3043))
(assert (axiom_int_approximation x3044))
(assert (axiom_int_approximation x3046))
(assert (axiom_int_approximation x3048))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x3051))
(assert (axiom_int_approximation x3053))
(assert (axiom_int_approximation x3055))
(assert (axiom_int_approximation x3056))
(assert (axiom_int_approximation x3062))
(assert (axiom_int_approximation x3065))
(assert (axiom_int_approximation x3066))
(assert (axiom_int_approximation x3068))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x3070))
(assert (axiom_int_approximation x3072))
(assert (axiom_int_approximation x3073))
(assert (axiom_int_approximation x3075))
(assert (axiom_int_approximation x3076))
(assert (axiom_int_approximation x3078))
(assert (axiom_int_approximation x3079))
(assert (axiom_int_approximation x3080))
(assert (axiom_int_approximation x3081))
(assert (axiom_int_approximation x3082))
(assert (axiom_int_approximation x3083))
(assert (axiom_int_approximation x3084))
(assert (axiom_int_approximation x3085))
(assert (axiom_int_approximation x3087))
(assert (axiom_int_approximation x3088))
(assert (axiom_int_approximation x3089))
(assert (axiom_int_approximation x3090))
(assert (axiom_int_approximation x3091))
(assert (axiom_int_approximation x3092))
(assert (axiom_int_approximation x3095))
(assert (axiom_int_approximation x3096))
(assert (axiom_int_approximation x3098))
(assert (axiom_int_approximation x3099))
(assert (axiom_int_approximation x3100))
(assert (axiom_int_approximation x3102))
(assert (axiom_int_approximation x3103))
(assert (axiom_int_approximation x3106))
(assert (axiom_int_approximation x3107))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x3111))
(assert (axiom_int_approximation x3114))
(assert (axiom_int_approximation x3115))
(assert (axiom_int_approximation x3120))
(assert (axiom_int_approximation x3121))
(assert (axiom_int_approximation x3122))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x3132))
(assert (axiom_int_approximation x3134))
(assert (axiom_int_approximation x3135))
(assert (axiom_int_approximation x3136))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x3140))
(assert (axiom_int_approximation x3141))
(assert (axiom_int_approximation x3145))
(assert (axiom_int_approximation x3146))
(assert (axiom_int_approximation x3147))
(assert (axiom_int_approximation x3148))
(assert (axiom_int_approximation x3149))
(assert (axiom_int_approximation x3150))
(assert (axiom_int_approximation x3152))
(assert (axiom_int_approximation x3153))
(assert (axiom_int_approximation x3155))
(assert (axiom_int_approximation x3157))
(assert (axiom_int_approximation x3159))
(assert (axiom_int_approximation x3160))
(assert (axiom_int_approximation x3164))
(assert (axiom_int_approximation x3169))
(assert (axiom_int_approximation x3172))
(assert (axiom_int_approximation x3173))
(assert (axiom_int_approximation x3174))
(assert (axiom_int_approximation x3176))
(assert (axiom_int_approximation x3177))
(assert (axiom_int_approximation x3178))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x3183))
(assert (axiom_int_approximation x3184))
(assert (axiom_int_approximation x3185))
(assert (axiom_int_approximation x3186))
(assert (axiom_int_approximation x3187))
(assert (axiom_int_approximation x3188))
(assert (axiom_int_approximation x3191))
(assert (axiom_int_approximation x3192))
(assert (axiom_int_approximation x3193))
(assert (axiom_int_approximation x3195))
(assert (axiom_int_approximation x3197))
(assert (axiom_int_approximation x3198))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x3200))
(assert (axiom_int_approximation x3202))
(assert (axiom_int_approximation x3203))
(assert (axiom_int_approximation x3204))
(assert (axiom_int_approximation x3207))
(assert (axiom_int_approximation x3210))
(assert (axiom_int_approximation x3212))
(assert (axiom_int_approximation x3214))
(assert (axiom_int_approximation x3216))
(assert (axiom_int_approximation x3220))
(assert (axiom_int_approximation x3221))
(assert (axiom_int_approximation x3222))
(assert (axiom_int_approximation x3223))
(assert (axiom_int_approximation x3225))
(assert (axiom_int_approximation x3226))
(assert (axiom_int_approximation x3227))
(assert (axiom_int_approximation x3228))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x3230))
(assert (axiom_int_approximation x3231))
(assert (axiom_int_approximation x3232))
(assert (axiom_int_approximation x3233))
(assert (axiom_int_approximation x3234))
(assert (axiom_int_approximation x3236))
(assert (axiom_int_approximation x3238))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x3240))
(assert (axiom_int_approximation x3241))
(assert (axiom_int_approximation x3242))
(assert (axiom_int_approximation x3243))
(assert (axiom_int_approximation x3244))
(assert (axiom_int_approximation x3246))
(assert (axiom_int_approximation x3247))
(assert (axiom_int_approximation x3248))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x3250))
(assert (axiom_int_approximation x3251))
(assert (axiom_int_approximation x3252))
(assert (axiom_int_approximation x3253))
(assert (axiom_int_approximation x3254))
(assert (axiom_int_approximation x3256))
(assert (axiom_int_approximation x3257))
(assert (axiom_int_approximation x3260))
(assert (axiom_int_approximation x3261))
(assert (axiom_int_approximation x3262))
(assert (axiom_int_approximation x3263))
(assert (axiom_int_approximation x3264))
(assert (axiom_int_approximation x3268))
(assert (axiom_int_approximation x3271))
(assert (axiom_int_approximation x3274))
(assert (axiom_int_approximation x3276))
(assert (axiom_int_approximation x3279))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x3282))
(assert (axiom_int_approximation x3283))
(assert (axiom_int_approximation x3284))
(assert (axiom_int_approximation x3287))
(assert (axiom_int_approximation x3289))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x3290))
(assert (axiom_int_approximation x3292))
(assert (axiom_int_approximation x3299))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x3300))
(assert (axiom_int_approximation x3302))
(assert (axiom_int_approximation x3305))
(assert (axiom_int_approximation x3307))
(assert (axiom_int_approximation x3308))
(assert (axiom_int_approximation x3309))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x3310))
(assert (axiom_int_approximation x3314))
(assert (axiom_int_approximation x3321))
(assert (axiom_int_approximation x3326))
(assert (axiom_int_approximation x3328))
(assert (axiom_int_approximation x3329))
(assert (axiom_int_approximation x3331))
(assert (axiom_int_approximation x3332))
(assert (axiom_int_approximation x3334))
(assert (axiom_int_approximation x3336))
(assert (axiom_int_approximation x3338))
(assert (axiom_int_approximation x3341))
(assert (axiom_int_approximation x3344))
(assert (axiom_int_approximation x3345))
(assert (axiom_int_approximation x3349))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x3350))
(assert (axiom_int_approximation x3352))
(assert (axiom_int_approximation x3353))
(assert (axiom_int_approximation x3354))
(assert (axiom_int_approximation x3355))
(assert (axiom_int_approximation x3356))
(assert (axiom_int_approximation x3357))
(assert (axiom_int_approximation x3358))
(assert (axiom_int_approximation x3360))
(assert (axiom_int_approximation x3361))
(assert (axiom_int_approximation x3363))
(assert (axiom_int_approximation x3368))
(assert (axiom_int_approximation x3370))
(assert (axiom_int_approximation x3373))
(assert (axiom_int_approximation x3375))
(assert (axiom_int_approximation x3376))
(assert (axiom_int_approximation x3377))
(assert (axiom_int_approximation x3379))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x3380))
(assert (axiom_int_approximation x3381))
(assert (axiom_int_approximation x3382))
(assert (axiom_int_approximation x3384))
(assert (axiom_int_approximation x3388))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x3392))
(assert (axiom_int_approximation x3393))
(assert (axiom_int_approximation x3394))
(assert (axiom_int_approximation x3395))
(assert (axiom_int_approximation x3396))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x3400))
(assert (axiom_int_approximation x3401))
(assert (axiom_int_approximation x3402))
(assert (axiom_int_approximation x3403))
(assert (axiom_int_approximation x3404))
(assert (axiom_int_approximation x3406))
(assert (axiom_int_approximation x3407))
(assert (axiom_int_approximation x3409))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x3410))
(assert (axiom_int_approximation x3412))
(assert (axiom_int_approximation x3413))
(assert (axiom_int_approximation x3414))
(assert (axiom_int_approximation x3417))
(assert (axiom_int_approximation x3418))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x3420))
(assert (axiom_int_approximation x3423))
(assert (axiom_int_approximation x3430))
(assert (axiom_int_approximation x3431))
(assert (axiom_int_approximation x3432))
(assert (axiom_int_approximation x3433))
(assert (axiom_int_approximation x3434))
(assert (axiom_int_approximation x3435))
(assert (axiom_int_approximation x3436))
(assert (axiom_int_approximation x3439))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x3440))
(assert (axiom_int_approximation x3441))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x3450))
(assert (axiom_int_approximation x3455))
(assert (axiom_int_approximation x3456))
(assert (axiom_int_approximation x3457))
(assert (axiom_int_approximation x3459))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x3464))
(assert (axiom_int_approximation x3465))
(assert (axiom_int_approximation x3468))
(assert (axiom_int_approximation x3472))
(assert (axiom_int_approximation x3473))
(assert (axiom_int_approximation x3474))
(assert (axiom_int_approximation x3475))
(assert (axiom_int_approximation x3477))
(assert (axiom_int_approximation x348))
(assert (axiom_int_approximation x3480))
(assert (axiom_int_approximation x3487))
(assert (axiom_int_approximation x3489))
(assert (axiom_int_approximation x3496))
(assert (axiom_int_approximation x3497))
(assert (axiom_int_approximation x3498))
(assert (axiom_int_approximation x3499))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x3500))
(assert (axiom_int_approximation x3501))
(assert (axiom_int_approximation x3502))
(assert (axiom_int_approximation x3504))
(assert (axiom_int_approximation x3508))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x3512))
(assert (axiom_int_approximation x3516))
(assert (axiom_int_approximation x3517))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x3520))
(assert (axiom_int_approximation x3521))
(assert (axiom_int_approximation x3526))
(assert (axiom_int_approximation x3527))
(assert (axiom_int_approximation x3529))
(assert (axiom_int_approximation x3530))
(assert (axiom_int_approximation x3531))
(assert (axiom_int_approximation x3532))
(assert (axiom_int_approximation x3537))
(assert (axiom_int_approximation x3538))
(assert (axiom_int_approximation x3544))
(assert (axiom_int_approximation x3546))
(assert (axiom_int_approximation x3548))
(assert (axiom_int_approximation x3551))
(assert (axiom_int_approximation x3555))
(assert (axiom_int_approximation x3558))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x3562))
(assert (axiom_int_approximation x3563))
(assert (axiom_int_approximation x3567))
(assert (axiom_int_approximation x3569))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x3571))
(assert (axiom_int_approximation x3572))
(assert (axiom_int_approximation x3573))
(assert (axiom_int_approximation x3574))
(assert (axiom_int_approximation x3576))
(assert (axiom_int_approximation x3578))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x3583))
(assert (axiom_int_approximation x3587))
(assert (axiom_int_approximation x3589))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x3590))
(assert (axiom_int_approximation x3591))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x3600))
(assert (axiom_int_approximation x3601))
(assert (axiom_int_approximation x3602))
(assert (axiom_int_approximation x3607))
(assert (axiom_int_approximation x3609))
(assert (axiom_int_approximation x3610))
(assert (axiom_int_approximation x3612))
(assert (axiom_int_approximation x3618))
(assert (axiom_int_approximation x3619))
(assert (axiom_int_approximation x3623))
(assert (axiom_int_approximation x3624))
(assert (axiom_int_approximation x3625))
(assert (axiom_int_approximation x3629))
(assert (axiom_int_approximation x3635))
(assert (axiom_int_approximation x3636))
(assert (axiom_int_approximation x3637))
(assert (axiom_int_approximation x3638))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x3641))
(assert (axiom_int_approximation x3645))
(assert (axiom_int_approximation x3647))
(assert (axiom_int_approximation x3648))
(assert (axiom_int_approximation x3649))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x3650))
(assert (axiom_int_approximation x3651))
(assert (axiom_int_approximation x3652))
(assert (axiom_int_approximation x3653))
(assert (axiom_int_approximation x3654))
(assert (axiom_int_approximation x3656))
(assert (axiom_int_approximation x3657))
(assert (axiom_int_approximation x3660))
(assert (axiom_int_approximation x3662))
(assert (axiom_int_approximation x3663))
(assert (axiom_int_approximation x3664))
(assert (axiom_int_approximation x3665))
(assert (axiom_int_approximation x3666))
(assert (axiom_int_approximation x3669))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x3672))
(assert (axiom_int_approximation x3675))
(assert (axiom_int_approximation x3676))
(assert (axiom_int_approximation x3678))
(assert (axiom_int_approximation x3679))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x3682))
(assert (axiom_int_approximation x3683))
(assert (axiom_int_approximation x3684))
(assert (axiom_int_approximation x3685))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x3690))
(assert (axiom_int_approximation x3691))
(assert (axiom_int_approximation x3694))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x3700))
(assert (axiom_int_approximation x3702))
(assert (axiom_int_approximation x3704))
(assert (axiom_int_approximation x3705))
(assert (axiom_int_approximation x3706))
(assert (axiom_int_approximation x3707))
(assert (axiom_int_approximation x3708))
(assert (axiom_int_approximation x3709))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x3712))
(assert (axiom_int_approximation x3713))
(assert (axiom_int_approximation x3714))
(assert (axiom_int_approximation x3715))
(assert (axiom_int_approximation x3716))
(assert (axiom_int_approximation x3719))
(assert (axiom_int_approximation x3721))
(assert (axiom_int_approximation x3724))
(assert (axiom_int_approximation x3725))
(assert (axiom_int_approximation x3727))
(assert (axiom_int_approximation x3728))
(assert (axiom_int_approximation x3730))
(assert (axiom_int_approximation x3731))
(assert (axiom_int_approximation x3733))
(assert (axiom_int_approximation x3735))
(assert (axiom_int_approximation x3736))
(assert (axiom_int_approximation x3737))
(assert (axiom_int_approximation x3738))
(assert (axiom_int_approximation x3742))
(assert (axiom_int_approximation x3743))
(assert (axiom_int_approximation x3745))
(assert (axiom_int_approximation x3746))
(assert (axiom_int_approximation x3748))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x3750))
(assert (axiom_int_approximation x3755))
(assert (axiom_int_approximation x3759))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x3761))
(assert (axiom_int_approximation x3762))
(assert (axiom_int_approximation x3763))
(assert (axiom_int_approximation x3764))
(assert (axiom_int_approximation x3766))
(assert (axiom_int_approximation x3767))
(assert (axiom_int_approximation x3769))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x3771))
(assert (axiom_int_approximation x3772))
(assert (axiom_int_approximation x3773))
(assert (axiom_int_approximation x3774))
(assert (axiom_int_approximation x3776))
(assert (axiom_int_approximation x3778))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x3783))
(assert (axiom_int_approximation x3785))
(assert (axiom_int_approximation x3787))
(assert (axiom_int_approximation x3788))
(assert (axiom_int_approximation x3789))
(assert (axiom_int_approximation x3790))
(assert (axiom_int_approximation x3792))
(assert (axiom_int_approximation x3795))
(assert (axiom_int_approximation x3796))
(assert (axiom_int_approximation x3797))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x3803))
(assert (axiom_int_approximation x3804))
(assert (axiom_int_approximation x3805))
(assert (axiom_int_approximation x3808))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x3810))
(assert (axiom_int_approximation x3814))
(assert (axiom_int_approximation x3815))
(assert (axiom_int_approximation x3816))
(assert (axiom_int_approximation x3817))
(assert (axiom_int_approximation x3818))
(assert (axiom_int_approximation x3819))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x3820))
(assert (axiom_int_approximation x3823))
(assert (axiom_int_approximation x3824))
(assert (axiom_int_approximation x3826))
(assert (axiom_int_approximation x3827))
(assert (axiom_int_approximation x3830))
(assert (axiom_int_approximation x3831))
(assert (axiom_int_approximation x3832))
(assert (axiom_int_approximation x3836))
(assert (axiom_int_approximation x3838))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x3840))
(assert (axiom_int_approximation x3841))
(assert (axiom_int_approximation x3845))
(assert (axiom_int_approximation x3846))
(assert (axiom_int_approximation x3848))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x3852))
(assert (axiom_int_approximation x3855))
(assert (axiom_int_approximation x3857))
(assert (axiom_int_approximation x3858))
(assert (axiom_int_approximation x3859))
(assert (axiom_int_approximation x3861))
(assert (axiom_int_approximation x3862))
(assert (axiom_int_approximation x3863))
(assert (axiom_int_approximation x3864))
(assert (axiom_int_approximation x3867))
(assert (axiom_int_approximation x3869))
(assert (axiom_int_approximation x3870))
(assert (axiom_int_approximation x3871))
(assert (axiom_int_approximation x3872))
(assert (axiom_int_approximation x3874))
(assert (axiom_int_approximation x3876))
(assert (axiom_int_approximation x3877))
(assert (axiom_int_approximation x3879))
(assert (axiom_int_approximation x3880))
(assert (axiom_int_approximation x3882))
(assert (axiom_int_approximation x3883))
(assert (axiom_int_approximation x3885))
(assert (axiom_int_approximation x3886))
(assert (axiom_int_approximation x3887))
(assert (axiom_int_approximation x3888))
(assert (axiom_int_approximation x3891))
(assert (axiom_int_approximation x3892))
(assert (axiom_int_approximation x3893))
(assert (axiom_int_approximation x3894))
(assert (axiom_int_approximation x3896))
(assert (axiom_int_approximation x3899))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x3900))
(assert (axiom_int_approximation x3901))
(assert (axiom_int_approximation x3904))
(assert (axiom_int_approximation x3905))
(assert (axiom_int_approximation x3907))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x3911))
(assert (axiom_int_approximation x3912))
(assert (axiom_int_approximation x3913))
(assert (axiom_int_approximation x3914))
(assert (axiom_int_approximation x3915))
(assert (axiom_int_approximation x3917))
(assert (axiom_int_approximation x3918))
(assert (axiom_int_approximation x3920))
(assert (axiom_int_approximation x3922))
(assert (axiom_int_approximation x3924))
(assert (axiom_int_approximation x3925))
(assert (axiom_int_approximation x3926))
(assert (axiom_int_approximation x3927))
(assert (axiom_int_approximation x3928))
(assert (axiom_int_approximation x3930))
(assert (axiom_int_approximation x3931))
(assert (axiom_int_approximation x3932))
(assert (axiom_int_approximation x3934))
(assert (axiom_int_approximation x3936))
(assert (axiom_int_approximation x3937))
(assert (axiom_int_approximation x3939))
(assert (axiom_int_approximation x3941))
(assert (axiom_int_approximation x3942))
(assert (axiom_int_approximation x3944))
(assert (axiom_int_approximation x3946))
(assert (axiom_int_approximation x3949))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x3950))
(assert (axiom_int_approximation x3951))
(assert (axiom_int_approximation x3952))
(assert (axiom_int_approximation x3954))
(assert (axiom_int_approximation x3957))
(assert (axiom_int_approximation x3958))
(assert (axiom_int_approximation x3959))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x3961))
(assert (axiom_int_approximation x3965))
(assert (axiom_int_approximation x3967))
(assert (axiom_int_approximation x3968))
(assert (axiom_int_approximation x3970))
(assert (axiom_int_approximation x3971))
(assert (axiom_int_approximation x3973))
(assert (axiom_int_approximation x3975))
(assert (axiom_int_approximation x3976))
(assert (axiom_int_approximation x3979))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x3981))
(assert (axiom_int_approximation x3982))
(assert (axiom_int_approximation x3983))
(assert (axiom_int_approximation x3985))
(assert (axiom_int_approximation x3988))
(assert (axiom_int_approximation x3989))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x3991))
(assert (axiom_int_approximation x3992))
(assert (axiom_int_approximation x3993))
(assert (axiom_int_approximation x3996))
(assert (axiom_int_approximation x3997))
(assert (axiom_int_approximation x40))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x4002))
(assert (axiom_int_approximation x4005))
(assert (axiom_int_approximation x4006))
(assert (axiom_int_approximation x4008))
(assert (axiom_int_approximation x4009))
(assert (axiom_int_approximation x4010))
(assert (axiom_int_approximation x4013))
(assert (axiom_int_approximation x4014))
(assert (axiom_int_approximation x4016))
(assert (axiom_int_approximation x4017))
(assert (axiom_int_approximation x4020))
(assert (axiom_int_approximation x4021))
(assert (axiom_int_approximation x4022))
(assert (axiom_int_approximation x4024))
(assert (axiom_int_approximation x4028))
(assert (axiom_int_approximation x4031))
(assert (axiom_int_approximation x4037))
(assert (axiom_int_approximation x4040))
(assert (axiom_int_approximation x4042))
(assert (axiom_int_approximation x4044))
(assert (axiom_int_approximation x4048))
(assert (axiom_int_approximation x4049))
(assert (axiom_int_approximation x4052))
(assert (axiom_int_approximation x4053))
(assert (axiom_int_approximation x4054))
(assert (axiom_int_approximation x4058))
(assert (axiom_int_approximation x4059))
(assert (axiom_int_approximation x4061))
(assert (axiom_int_approximation x4063))
(assert (axiom_int_approximation x4064))
(assert (axiom_int_approximation x4065))
(assert (axiom_int_approximation x4066))
(assert (axiom_int_approximation x4067))
(assert (axiom_int_approximation x4068))
(assert (axiom_int_approximation x4071))
(assert (axiom_int_approximation x4072))
(assert (axiom_int_approximation x4075))
(assert (axiom_int_approximation x4076))
(assert (axiom_int_approximation x4077))
(assert (axiom_int_approximation x4078))
(assert (axiom_int_approximation x4080))
(assert (axiom_int_approximation x4083))
(assert (axiom_int_approximation x4084))
(assert (axiom_int_approximation x4086))
(assert (axiom_int_approximation x4087))
(assert (axiom_int_approximation x4088))
(assert (axiom_int_approximation x4090))
(assert (axiom_int_approximation x4091))
(assert (axiom_int_approximation x4094))
(assert (axiom_int_approximation x4098))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x4101))
(assert (axiom_int_approximation x4102))
(assert (axiom_int_approximation x4103))
(assert (axiom_int_approximation x4104))
(assert (axiom_int_approximation x4107))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x4112))
(assert (axiom_int_approximation x4113))
(assert (axiom_int_approximation x4114))
(assert (axiom_int_approximation x4115))
(assert (axiom_int_approximation x4116))
(assert (axiom_int_approximation x4117))
(assert (axiom_int_approximation x4118))
(assert (axiom_int_approximation x4119))
(assert (axiom_int_approximation x4120))
(assert (axiom_int_approximation x4121))
(assert (axiom_int_approximation x4123))
(assert (axiom_int_approximation x4127))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x4131))
(assert (axiom_int_approximation x4133))
(assert (axiom_int_approximation x4134))
(assert (axiom_int_approximation x4137))
(assert (axiom_int_approximation x4139))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x4142))
(assert (axiom_int_approximation x4143))
(assert (axiom_int_approximation x4145))
(assert (axiom_int_approximation x4146))
(assert (axiom_int_approximation x4148))
(assert (axiom_int_approximation x4150))
(assert (axiom_int_approximation x4151))
(assert (axiom_int_approximation x4153))
(assert (axiom_int_approximation x4155))
(assert (axiom_int_approximation x4156))
(assert (axiom_int_approximation x4160))
(assert (axiom_int_approximation x4162))
(assert (axiom_int_approximation x4163))
(assert (axiom_int_approximation x4164))
(assert (axiom_int_approximation x4166))
(assert (axiom_int_approximation x4167))
(assert (axiom_int_approximation x4168))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x4171))
(assert (axiom_int_approximation x4175))
(assert (axiom_int_approximation x4176))
(assert (axiom_int_approximation x4177))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x4180))
(assert (axiom_int_approximation x4181))
(assert (axiom_int_approximation x4186))
(assert (axiom_int_approximation x4187))
(assert (axiom_int_approximation x4188))
(assert (axiom_int_approximation x4189))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x4190))
(assert (axiom_int_approximation x4191))
(assert (axiom_int_approximation x4193))
(assert (axiom_int_approximation x4194))
(assert (axiom_int_approximation x4202))
(assert (axiom_int_approximation x4203))
(assert (axiom_int_approximation x4208))
(assert (axiom_int_approximation x4209))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x4211))
(assert (axiom_int_approximation x4212))
(assert (axiom_int_approximation x4214))
(assert (axiom_int_approximation x4217))
(assert (axiom_int_approximation x4219))
(assert (axiom_int_approximation x4221))
(assert (axiom_int_approximation x4225))
(assert (axiom_int_approximation x4226))
(assert (axiom_int_approximation x4227))
(assert (axiom_int_approximation x4228))
(assert (axiom_int_approximation x4230))
(assert (axiom_int_approximation x4231))
(assert (axiom_int_approximation x4232))
(assert (axiom_int_approximation x4239))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x4240))
(assert (axiom_int_approximation x4241))
(assert (axiom_int_approximation x4242))
(assert (axiom_int_approximation x4244))
(assert (axiom_int_approximation x4245))
(assert (axiom_int_approximation x4249))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x4250))
(assert (axiom_int_approximation x4251))
(assert (axiom_int_approximation x4252))
(assert (axiom_int_approximation x4257))
(assert (axiom_int_approximation x4259))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x4261))
(assert (axiom_int_approximation x4263))
(assert (axiom_int_approximation x4267))
(assert (axiom_int_approximation x4269))
(assert (axiom_int_approximation x4272))
(assert (axiom_int_approximation x4274))
(assert (axiom_int_approximation x4275))
(assert (axiom_int_approximation x4276))
(assert (axiom_int_approximation x4279))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x4281))
(assert (axiom_int_approximation x4282))
(assert (axiom_int_approximation x4284))
(assert (axiom_int_approximation x4286))
(assert (axiom_int_approximation x4288))
(assert (axiom_int_approximation x4290))
(assert (axiom_int_approximation x4292))
(assert (axiom_int_approximation x4295))
(assert (axiom_int_approximation x4296))
(assert (axiom_int_approximation x4297))
(assert (axiom_int_approximation x4298))
(assert (axiom_int_approximation x4299))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x4300))
(assert (axiom_int_approximation x4301))
(assert (axiom_int_approximation x4303))
(assert (axiom_int_approximation x4306))
(assert (axiom_int_approximation x4308))
(assert (axiom_int_approximation x4312))
(assert (axiom_int_approximation x4313))
(assert (axiom_int_approximation x4317))
(assert (axiom_int_approximation x4319))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x4321))
(assert (axiom_int_approximation x4324))
(assert (axiom_int_approximation x4326))
(assert (axiom_int_approximation x4327))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x4339))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x4341))
(assert (axiom_int_approximation x4343))
(assert (axiom_int_approximation x4345))
(assert (axiom_int_approximation x4346))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x4350))
(assert (axiom_int_approximation x4351))
(assert (axiom_int_approximation x4353))
(assert (axiom_int_approximation x4354))
(assert (axiom_int_approximation x4355))
(assert (axiom_int_approximation x4356))
(assert (axiom_int_approximation x4357))
(assert (axiom_int_approximation x4358))
(assert (axiom_int_approximation x4363))
(assert (axiom_int_approximation x4364))
(assert (axiom_int_approximation x4366))
(assert (axiom_int_approximation x4367))
(assert (axiom_int_approximation x4369))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x4370))
(assert (axiom_int_approximation x4371))
(assert (axiom_int_approximation x4372))
(assert (axiom_int_approximation x4374))
(assert (axiom_int_approximation x4378))
(assert (axiom_int_approximation x4379))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x4380))
(assert (axiom_int_approximation x4382))
(assert (axiom_int_approximation x4385))
(assert (axiom_int_approximation x4386))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x4390))
(assert (axiom_int_approximation x4391))
(assert (axiom_int_approximation x4393))
(assert (axiom_int_approximation x4396))
(assert (axiom_int_approximation x4398))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x4401))
(assert (axiom_int_approximation x4403))
(assert (axiom_int_approximation x4404))
(assert (axiom_int_approximation x4406))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x4415))
(assert (axiom_int_approximation x4416))
(assert (axiom_int_approximation x4417))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x4421))
(assert (axiom_int_approximation x4427))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x4433))
(assert (axiom_int_approximation x4435))
(assert (axiom_int_approximation x4438))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x4444))
(assert (axiom_int_approximation x4446))
(assert (axiom_int_approximation x4448))
(assert (axiom_int_approximation x4449))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x4450))
(assert (axiom_int_approximation x4453))
(assert (axiom_int_approximation x4456))
(assert (axiom_int_approximation x4457))
(assert (axiom_int_approximation x4458))
(assert (axiom_int_approximation x4459))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x4460))
(assert (axiom_int_approximation x4462))
(assert (axiom_int_approximation x4463))
(assert (axiom_int_approximation x4464))
(assert (axiom_int_approximation x4467))
(assert (axiom_int_approximation x4468))
(assert (axiom_int_approximation x4469))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x4470))
(assert (axiom_int_approximation x4474))
(assert (axiom_int_approximation x4475))
(assert (axiom_int_approximation x4476))
(assert (axiom_int_approximation x4478))
(assert (axiom_int_approximation x4479))
(assert (axiom_int_approximation x4481))
(assert (axiom_int_approximation x4482))
(assert (axiom_int_approximation x4484))
(assert (axiom_int_approximation x4486))
(assert (axiom_int_approximation x4487))
(assert (axiom_int_approximation x4490))
(assert (axiom_int_approximation x4493))
(assert (axiom_int_approximation x4494))
(assert (axiom_int_approximation x4498))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x4502))
(assert (axiom_int_approximation x4507))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x4512))
(assert (axiom_int_approximation x4513))
(assert (axiom_int_approximation x4514))
(assert (axiom_int_approximation x4515))
(assert (axiom_int_approximation x4517))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x4520))
(assert (axiom_int_approximation x4523))
(assert (axiom_int_approximation x4530))
(assert (axiom_int_approximation x4533))
(assert (axiom_int_approximation x4534))
(assert (axiom_int_approximation x4535))
(assert (axiom_int_approximation x4538))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x4544))
(assert (axiom_int_approximation x4546))
(assert (axiom_int_approximation x4548))
(assert (axiom_int_approximation x4549))
(assert (axiom_int_approximation x4550))
(assert (axiom_int_approximation x4552))
(assert (axiom_int_approximation x4553))
(assert (axiom_int_approximation x4554))
(assert (axiom_int_approximation x4560))
(assert (axiom_int_approximation x4564))
(assert (axiom_int_approximation x4566))
(assert (axiom_int_approximation x4567))
(assert (axiom_int_approximation x4569))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x4570))
(assert (axiom_int_approximation x4573))
(assert (axiom_int_approximation x4575))
(assert (axiom_int_approximation x4577))
(assert (axiom_int_approximation x4579))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x4580))
(assert (axiom_int_approximation x4582))
(assert (axiom_int_approximation x4583))
(assert (axiom_int_approximation x4585))
(assert (axiom_int_approximation x4587))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x4590))
(assert (axiom_int_approximation x4591))
(assert (axiom_int_approximation x4593))
(assert (axiom_int_approximation x4595))
(assert (axiom_int_approximation x4596))
(assert (axiom_int_approximation x4597))
(assert (axiom_int_approximation x4598))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x4600))
(assert (axiom_int_approximation x4602))
(assert (axiom_int_approximation x4605))
(assert (axiom_int_approximation x4607))
(assert (axiom_int_approximation x4609))
(assert (axiom_int_approximation x4610))
(assert (axiom_int_approximation x4611))
(assert (axiom_int_approximation x4616))
(assert (axiom_int_approximation x4618))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x4620))
(assert (axiom_int_approximation x4621))
(assert (axiom_int_approximation x4625))
(assert (axiom_int_approximation x4626))
(assert (axiom_int_approximation x4629))
(assert (axiom_int_approximation x4631))
(assert (axiom_int_approximation x4633))
(assert (axiom_int_approximation x4634))
(assert (axiom_int_approximation x4635))
(assert (axiom_int_approximation x4638))
(assert (axiom_int_approximation x4639))
(assert (axiom_int_approximation x4640))
(assert (axiom_int_approximation x4643))
(assert (axiom_int_approximation x4646))
(assert (axiom_int_approximation x4647))
(assert (axiom_int_approximation x4648))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x4650))
(assert (axiom_int_approximation x4654))
(assert (axiom_int_approximation x4656))
(assert (axiom_int_approximation x4658))
(assert (axiom_int_approximation x4661))
(assert (axiom_int_approximation x4668))
(assert (axiom_int_approximation x4669))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x4670))
(assert (axiom_int_approximation x4672))
(assert (axiom_int_approximation x4673))
(assert (axiom_int_approximation x4674))
(assert (axiom_int_approximation x4675))
(assert (axiom_int_approximation x4678))
(assert (axiom_int_approximation x4679))
(assert (axiom_int_approximation x468))
(assert (axiom_int_approximation x4681))
(assert (axiom_int_approximation x4682))
(assert (axiom_int_approximation x4684))
(assert (axiom_int_approximation x4686))
(assert (axiom_int_approximation x4688))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x4691))
(assert (axiom_int_approximation x4693))
(assert (axiom_int_approximation x4694))
(assert (axiom_int_approximation x4695))
(assert (axiom_int_approximation x4696))
(assert (axiom_int_approximation x4697))
(assert (axiom_int_approximation x4698))
(assert (axiom_int_approximation x4699))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x4700))
(assert (axiom_int_approximation x4701))
(assert (axiom_int_approximation x4704))
(assert (axiom_int_approximation x4706))
(assert (axiom_int_approximation x4707))
(assert (axiom_int_approximation x4712))
(assert (axiom_int_approximation x4714))
(assert (axiom_int_approximation x4715))
(assert (axiom_int_approximation x4716))
(assert (axiom_int_approximation x4720))
(assert (axiom_int_approximation x4721))
(assert (axiom_int_approximation x4722))
(assert (axiom_int_approximation x4724))
(assert (axiom_int_approximation x4725))
(assert (axiom_int_approximation x4727))
(assert (axiom_int_approximation x4730))
(assert (axiom_int_approximation x4734))
(assert (axiom_int_approximation x4736))
(assert (axiom_int_approximation x4738))
(assert (axiom_int_approximation x4740))
(assert (axiom_int_approximation x4744))
(assert (axiom_int_approximation x4745))
(assert (axiom_int_approximation x4746))
(assert (axiom_int_approximation x4749))
(assert (axiom_int_approximation x4750))
(assert (axiom_int_approximation x4752))
(assert (axiom_int_approximation x4754))
(assert (axiom_int_approximation x4755))
(assert (axiom_int_approximation x4756))
(assert (axiom_int_approximation x4757))
(assert (axiom_int_approximation x4761))
(assert (axiom_int_approximation x4765))
(assert (axiom_int_approximation x4766))
(assert (axiom_int_approximation x4768))
(assert (axiom_int_approximation x4769))
(assert (axiom_int_approximation x477))
(assert (axiom_int_approximation x4771))
(assert (axiom_int_approximation x4773))
(assert (axiom_int_approximation x4775))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x4780))
(assert (axiom_int_approximation x4782))
(assert (axiom_int_approximation x4783))
(assert (axiom_int_approximation x4784))
(assert (axiom_int_approximation x4787))
(assert (axiom_int_approximation x4789))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x4790))
(assert (axiom_int_approximation x4793))
(assert (axiom_int_approximation x4794))
(assert (axiom_int_approximation x4796))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x4801))
(assert (axiom_int_approximation x4804))
(assert (axiom_int_approximation x4805))
(assert (axiom_int_approximation x4807))
(assert (axiom_int_approximation x4808))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x4811))
(assert (axiom_int_approximation x4813))
(assert (axiom_int_approximation x4814))
(assert (axiom_int_approximation x4815))
(assert (axiom_int_approximation x4816))
(assert (axiom_int_approximation x4820))
(assert (axiom_int_approximation x4821))
(assert (axiom_int_approximation x4824))
(assert (axiom_int_approximation x4825))
(assert (axiom_int_approximation x4828))
(assert (axiom_int_approximation x4831))
(assert (axiom_int_approximation x4832))
(assert (axiom_int_approximation x4835))
(assert (axiom_int_approximation x4836))
(assert (axiom_int_approximation x4837))
(assert (axiom_int_approximation x4838))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x4840))
(assert (axiom_int_approximation x4841))
(assert (axiom_int_approximation x4842))
(assert (axiom_int_approximation x4848))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x4850))
(assert (axiom_int_approximation x4851))
(assert (axiom_int_approximation x4855))
(assert (axiom_int_approximation x4856))
(assert (axiom_int_approximation x4857))
(assert (axiom_int_approximation x4859))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x4860))
(assert (axiom_int_approximation x4861))
(assert (axiom_int_approximation x4868))
(assert (axiom_int_approximation x4872))
(assert (axiom_int_approximation x4877))
(assert (axiom_int_approximation x4878))
(assert (axiom_int_approximation x4879))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x4881))
(assert (axiom_int_approximation x4884))
(assert (axiom_int_approximation x4886))
(assert (axiom_int_approximation x4887))
(assert (axiom_int_approximation x4888))
(assert (axiom_int_approximation x4889))
(assert (axiom_int_approximation x4890))
(assert (axiom_int_approximation x4893))
(assert (axiom_int_approximation x4894))
(assert (axiom_int_approximation x4895))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x4900))
(assert (axiom_int_approximation x4901))
(assert (axiom_int_approximation x4903))
(assert (axiom_int_approximation x4904))
(assert (axiom_int_approximation x4905))
(assert (axiom_int_approximation x4907))
(assert (axiom_int_approximation x4908))
(assert (axiom_int_approximation x4909))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x4910))
(assert (axiom_int_approximation x4911))
(assert (axiom_int_approximation x4914))
(assert (axiom_int_approximation x4915))
(assert (axiom_int_approximation x4919))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x4920))
(assert (axiom_int_approximation x4922))
(assert (axiom_int_approximation x4924))
(assert (axiom_int_approximation x4925))
(assert (axiom_int_approximation x4926))
(assert (axiom_int_approximation x4927))
(assert (axiom_int_approximation x4928))
(assert (axiom_int_approximation x4930))
(assert (axiom_int_approximation x4931))
(assert (axiom_int_approximation x4933))
(assert (axiom_int_approximation x4934))
(assert (axiom_int_approximation x4935))
(assert (axiom_int_approximation x4936))
(assert (axiom_int_approximation x4937))
(assert (axiom_int_approximation x4946))
(assert (axiom_int_approximation x4947))
(assert (axiom_int_approximation x4948))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x4952))
(assert (axiom_int_approximation x4955))
(assert (axiom_int_approximation x4956))
(assert (axiom_int_approximation x4958))
(assert (axiom_int_approximation x4962))
(assert (axiom_int_approximation x4964))
(assert (axiom_int_approximation x4967))
(assert (axiom_int_approximation x4968))
(assert (axiom_int_approximation x4969))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x4970))
(assert (axiom_int_approximation x4973))
(assert (axiom_int_approximation x4974))
(assert (axiom_int_approximation x4975))
(assert (axiom_int_approximation x4976))
(assert (axiom_int_approximation x4979))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x4982))
(assert (axiom_int_approximation x4984))
(assert (axiom_int_approximation x4985))
(assert (axiom_int_approximation x4986))
(assert (axiom_int_approximation x499))
(assert (axiom_int_approximation x4993))
(assert (axiom_int_approximation x4994))
(assert (axiom_int_approximation x4995))
(assert (axiom_int_approximation x4996))
(assert (axiom_int_approximation x4998))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x5000))
(assert (axiom_int_approximation x5001))
(assert (axiom_int_approximation x5004))
(assert (axiom_int_approximation x5005))
(assert (axiom_int_approximation x5006))
(assert (axiom_int_approximation x5007))
(assert (axiom_int_approximation x5008))
(assert (axiom_int_approximation x5009))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x5012))
(assert (axiom_int_approximation x5017))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x5020))
(assert (axiom_int_approximation x5021))
(assert (axiom_int_approximation x5022))
(assert (axiom_int_approximation x5023))
(assert (axiom_int_approximation x5024))
(assert (axiom_int_approximation x5027))
(assert (axiom_int_approximation x5030))
(assert (axiom_int_approximation x5032))
(assert (axiom_int_approximation x5033))
(assert (axiom_int_approximation x5036))
(assert (axiom_int_approximation x5039))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x5040))
(assert (axiom_int_approximation x5042))
(assert (axiom_int_approximation x5045))
(assert (axiom_int_approximation x5048))
(assert (axiom_int_approximation x5050))
(assert (axiom_int_approximation x5051))
(assert (axiom_int_approximation x5052))
(assert (axiom_int_approximation x5054))
(assert (axiom_int_approximation x5056))
(assert (axiom_int_approximation x5057))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x5060))
(assert (axiom_int_approximation x5064))
(assert (axiom_int_approximation x5065))
(assert (axiom_int_approximation x5067))
(assert (axiom_int_approximation x5068))
(assert (axiom_int_approximation x5070))
(assert (axiom_int_approximation x5072))
(assert (axiom_int_approximation x5074))
(assert (axiom_int_approximation x5075))
(assert (axiom_int_approximation x5076))
(assert (axiom_int_approximation x5077))
(assert (axiom_int_approximation x5078))
(assert (axiom_int_approximation x5080))
(assert (axiom_int_approximation x5081))
(assert (axiom_int_approximation x5082))
(assert (axiom_int_approximation x5083))
(assert (axiom_int_approximation x5084))
(assert (axiom_int_approximation x5088))
(assert (axiom_int_approximation x5089))
(assert (axiom_int_approximation x5093))
(assert (axiom_int_approximation x5094))
(assert (axiom_int_approximation x5096))
(assert (axiom_int_approximation x5097))
(assert (axiom_int_approximation x5098))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x5100))
(assert (axiom_int_approximation x5102))
(assert (axiom_int_approximation x5105))
(assert (axiom_int_approximation x5106))
(assert (axiom_int_approximation x5107))
(assert (axiom_int_approximation x5108))
(assert (axiom_int_approximation x5110))
(assert (axiom_int_approximation x5111))
(assert (axiom_int_approximation x5112))
(assert (axiom_int_approximation x5115))
(assert (axiom_int_approximation x5116))
(assert (axiom_int_approximation x5117))
(assert (axiom_int_approximation x5118))
(assert (axiom_int_approximation x5119))
(assert (axiom_int_approximation x5121))
(assert (axiom_int_approximation x5122))
(assert (axiom_int_approximation x5123))
(assert (axiom_int_approximation x5124))
(assert (axiom_int_approximation x5125))
(assert (axiom_int_approximation x5126))
(assert (axiom_int_approximation x5128))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x5131))
(assert (axiom_int_approximation x5132))
(assert (axiom_int_approximation x5134))
(assert (axiom_int_approximation x5139))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x5140))
(assert (axiom_int_approximation x5141))
(assert (axiom_int_approximation x5145))
(assert (axiom_int_approximation x5146))
(assert (axiom_int_approximation x5148))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x5150))
(assert (axiom_int_approximation x5151))
(assert (axiom_int_approximation x5153))
(assert (axiom_int_approximation x5155))
(assert (axiom_int_approximation x5157))
(assert (axiom_int_approximation x5159))
(assert (axiom_int_approximation x5161))
(assert (axiom_int_approximation x5162))
(assert (axiom_int_approximation x5164))
(assert (axiom_int_approximation x5165))
(assert (axiom_int_approximation x5167))
(assert (axiom_int_approximation x5169))
(assert (axiom_int_approximation x5170))
(assert (axiom_int_approximation x5174))
(assert (axiom_int_approximation x5175))
(assert (axiom_int_approximation x5177))
(assert (axiom_int_approximation x5178))
(assert (axiom_int_approximation x5179))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x5182))
(assert (axiom_int_approximation x5184))
(assert (axiom_int_approximation x5185))
(assert (axiom_int_approximation x5186))
(assert (axiom_int_approximation x5187))
(assert (axiom_int_approximation x5188))
(assert (axiom_int_approximation x5189))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x5190))
(assert (axiom_int_approximation x5191))
(assert (axiom_int_approximation x5192))
(assert (axiom_int_approximation x5194))
(assert (axiom_int_approximation x5195))
(assert (axiom_int_approximation x5196))
(assert (axiom_int_approximation x5197))
(assert (axiom_int_approximation x5198))
(assert (axiom_int_approximation x5201))
(assert (axiom_int_approximation x5203))
(assert (axiom_int_approximation x5204))
(assert (axiom_int_approximation x5205))
(assert (axiom_int_approximation x5209))
(assert (axiom_int_approximation x5210))
(assert (axiom_int_approximation x5214))
(assert (axiom_int_approximation x5217))
(assert (axiom_int_approximation x5218))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x5220))
(assert (axiom_int_approximation x5221))
(assert (axiom_int_approximation x5222))
(assert (axiom_int_approximation x5224))
(assert (axiom_int_approximation x5226))
(assert (axiom_int_approximation x523))
(assert (axiom_int_approximation x5235))
(assert (axiom_int_approximation x5236))
(assert (axiom_int_approximation x5237))
(assert (axiom_int_approximation x5239))
(assert (axiom_int_approximation x5242))
(assert (axiom_int_approximation x5243))
(assert (axiom_int_approximation x5245))
(assert (axiom_int_approximation x5248))
(assert (axiom_int_approximation x5249))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x5250))
(assert (axiom_int_approximation x5251))
(assert (axiom_int_approximation x5252))
(assert (axiom_int_approximation x5253))
(assert (axiom_int_approximation x5258))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x530))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x539))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x559))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x605))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x65))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x73))
(assert (axiom_int_approximation x731))
(assert (axiom_int_approximation x736))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x802))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x810))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x817))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x822))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x872))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x877))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x909))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x913))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x922))
(assert (axiom_int_approximation x923))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x925))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x935))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x950))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x973))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x975))
(assert (axiom_int_approximation x976))
(assert (axiom_int_approximation x978))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x989))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x991))
(assert (axiom_int_approximation x995))
(assert (x22 x229 x2577))
(assert (x3142 x272))
(assert (x3142 x2836))
(assert (x3142 x2771))
(assert (x3142 x2010))
(assert (x3142 x1858))
(assert (= x3734 (or (and (not x3399) x4748) (and (not x3577) x4375))))
(assert (= x2630 (=> (and (not (= 4072275384 x1511)) (= x4249 x440) (= (x1999 1461501637330902918203684832716283019655932542975 x4481) x93) (not (= 4072298103 x1511)) (= x1274 (= x4481 x93)) (not (= x1511 4033150093)) (not (> 3695885053 x1511)) (not (= 3950285521 x1511)) (not (> 3283311230 x1511)) (not (> 3950285521 x1511)) (not (< x1511 2059964113)) (= 4093572003 x1511)) (and (=> x1274 x4383) (=> (and (not x1274) (= x1749 true)) x1245)))))
(assert (x3142 x4986))
(assert (= x4034 (and x790 x3054)))
(assert (x3142 x625))
(assert (x3142 x4674))
(assert (x3142 x5052))
(assert (x3142 x657))
(assert (x2786 x1748 x1610))
(assert (= (ite (= x4908 x356) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x874 x4908)) (x4791 x4908)))
(assert (x1438 x506))
(assert (x3142 x339))
(assert (x3142 x936))
(assert (x3142 x974))
(assert (= (and x665 (not x1036)) x1153))
(assert (= (x1913 x5235) (ite (= x2576 x5235) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2930 x5235))))
(assert (x3142 x1446))
(assert (x3142 x2378))
(assert (= (x88 (x3424 x2920)) x2920))
(assert (x3142 x199))
(assert (x3142 x2602))
(assert (x3142 x746))
(assert (x1438 x3223))
(assert (= (ite (= x4908 288) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1395 x4908)) (x2096 x4908)))
(assert (x3142 x618))
(assert (x3142 x3817))
(assert (x3142 x2608))
(assert (=> (< (- x4131 1) 10000) (= (x1228 x4131) (x3424 x4131))))
(assert (= x1445 (=> (and (< x1946 1461501637330902918203684832716283019655932542976) (= x3726 (x4651 (x3424 x1946) x3471 0)) (>= 255 x2056) (< x2056 256) (= (= x2056 0) x3633) (= (x4651 (x1228 1) (x1228 9) 0) x4912) (= x2056 (x3603 x3726)) (= (x1123 x4912) x1946) (= x3471 (x4651 (x3424 x3001) (x1228 11) 0)) (>= x2056 0) (<= 0 x1946) (= 1 x534) (<= x1946 1461501637330902918203684832716283019655932542975)) (and (=> (not x3633) x3614) (=> (and (= x3772 x915) x3633 (= x2783 x2502)) x3458)))))
(assert (= (or (and x3245 x214) (and x5073 x3865)) x4329))
(assert (x3142 x3145))
(assert (= (x999 x5150) 0))
(assert (x3142 x1201))
(assert (x3142 x2819))
(assert (= (x4944 x4813) (ite (and x1198 x310) (x2994 x4813) (x224 x4813))))
(assert (x3142 x2497))
(assert (x3142 x1694))
(assert (x3142 x3771))
(assert (x3142 x1908))
(assert (x3142 x3742))
(assert (x3142 x399))
(assert (x3142 x775))
(assert (x3142 x2384))
(assert (x3142 x3186))
(assert (= x456 (=> (and (= x1586 (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3750) (<= x1987 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3750) (<= x1987 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1987 x3750))) 1 0)) (= (x1999 x248 x1586) x3149) (= x1987 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1594))) (= x3485 (= x3149 0)) (= (ite (or (> x1594 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1594) true) (< x1594 0))) 1 0) x248)) (and (=> (not x3485) x1877) (=> (and (= x4369 (x2483 (+ x1594 x3750))) (= x4369 x367) (= x4815 x4386) x3485) x758)))))
(assert (x3142 x368))
(assert (= (x1448 x1310) (ite (= 288 x1310) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4949 x1310))))
(assert (x3142 x1944))
(assert (x1438 x1985))
(assert (x1438 x301))
(assert (x493 x3212))
(assert (= (=> (and (= x4360 (not x4521)) (= x4325 (= x2025 (ite x4360 1 0))) (= x4521 (= 0 x2025)) (= (x627 x2912) x2025)) (and (=> (and (= true x1749) (not x4325)) x1245) (=> x4325 x4185))) x1642))
(assert (x3142 x3276))
(assert (x3142 x2810))
(assert (x3142 x1468))
(assert (x1438 x2371))
(assert (x4568 x3790 x2330))
(assert (x3142 x540))
(assert (x3142 x4765))
(assert (x3142 x157))
(assert (= (=> (and (= x359 (x1999 x4668 x934)) (= x237 (= x359 0)) (= x934 (ite (or (and (> x5083 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2361 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2361 x5083) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2361) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5083)))) 1 0)) (= x5083 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4300))) (= x4668 (ite (not x524) 1 0)) (= (or (and (= (<= x4300 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x4300)) (> x4300 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x524)) (and (=> (not x237) x2749) (=> x237 x1967))) x1906))
(assert (x3142 x3115))
(assert (x3142 x1984))
(assert (x493 x2961))
(assert (x1438 x4390))
(assert (x3142 x1076))
(assert (x3142 x4276))
(assert (x3142 x301))
(assert (x3142 x2127))
(assert (= x2136 (=> (and (= (x2483 (+ x4638 256)) x1075) (<= 0 x465) (= x4595 (x254 x1745)) (= x2023 (x5260 x1745)) (= (x2483 (+ x33 64)) x1166) (<= x465 1461501637330902918203684832716283019655932542975) (<= x4595 18446744073709551615) (= x383 (x4651 (x1228 1) (x1228 10) 0)) (= x465 (x193 x383)) (< x465 1461501637330902918203684832716283019655932542976) (= (x200 x942) x5252) (= x232 (x1999 255 x432)) (>= x4595 0) (>= 255 x1860) (= (x2483 (+ x1118 64)) x2409) (= x1118 (x2483 (+ x1075 64))) (= (x4007 x1745) x2301) (= (x3514 x1088) x2340) (= (x4551 x383) x1860) (<= 0 x5252) (= x1088 (x656 x942 2)) (= x3867 (x2483 (+ 64 x307))) (< x2301 18446744073709551616) (= (x656 x383 2) x1745) (<= x2023 18446744073709551615) (> 1461501637330902918203684832716283019655932542976 x2533) (= x307 (x2483 (+ x1166 64))) (<= x2533 1461501637330902918203684832716283019655932542975) (= (x2483 (+ x2409 64)) x955) (= (x832 x1075) x432) (>= x2340 0) (< x5252 18446744073709551616) (= x2420 (x2483 (+ 512 x4638))) (< x2023 18446744073709551616) (= x33 (x2483 (+ 288 x4638))) (= 1 x3764) (>= 340282366920938463463374607431768211455 x2340) (> 340282366920938463463374607431768211456 x2340) (<= 0 x2533) (>= x2023 0) (>= x2301 0) (= x942 (x656 x383 1)) (<= x2301 18446744073709551615) (< x4595 18446744073709551616) (= x1048 (= x232 1)) (= (x2147 x942) x2533) (> 256 x1860) (>= 18446744073709551615 x5252) (<= 0 x1860)) (and (=> (not x1048) x3613) (=> x1048 x4199)))))
(assert (= x577 (and (not x3540) x4786)))
(assert (x3142 x2546))
(assert (x3142 x5080))
(assert (= x1117 (=> (and (= (or (and (= (<= x5198 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x5198 0)) (> x5198 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4224) (= (not x4224) x3799) (= x12 (ite x3799 1 0)) (= x2542 x3762)) x4096)))
(assert (= (and (not x517) x921) x2481))
(assert (x3142 x3803))
(assert (x3142 x3936))
(assert (x3142 x2250))
(assert (x3142 x4523))
(assert (=> (> (+ 10000 1) x2920) (= (x1228 x2920) (x3424 x2920))))
(assert (x1936 x424 x1599 x4889 x2893))
(assert (x1438 x3004))
(assert (x3142 x1108))
(assert (x2786 x2672 x3836))
(assert (x3142 x4002))
(assert (x3142 x2412))
(assert (= (or (and (not x2064) x4329) (and (not x4880) x4100) x1244) x3071))
(assert (x3142 x904))
(assert (x3142 x2914))
(assert (x3142 x1870))
(assert (= (x1228 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x3424 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x3142 x3331))
(assert (= x2665 (=> (and (> x840 0) (not (< x341 4)) (not (< x2981 826074471)) (not (= 1889567281 x2981)) (= x1624 x199) (= x103 x266) (= x1515 x341) (= x2981 2835717307) (not (= x2981 2514000705)) (= x341 68) (not (= x2981 826074471)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4274) (and (> 64 x4274) (= true (<= x4274 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x873) (= x840 (x1050 (x3424 274184521717934524641157099916833587231))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x775) (= (x4965 (- x341 4)) x4274)) (and (=> x873 x4641) (=> (not x873) x1810)))))
(assert (= x806 (and (not x3275) x4108)))
(assert (x3142 x1334))
(assert (x1438 x2672))
(assert (x3142 x2960))
(assert (x3142 x2540))
(assert (x3142 x1146))
(assert (x3142 x2983))
(assert (= (x88 (x1228 3368549995)) 3368549995))
(assert (= (x88 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x3142 x888))
(assert (x3142 x2588))
(assert (x3142 x1743))
(assert (x3142 x1902))
(assert (= (=> (and (= x2170 (= x1624 x698)) (= (x1999 1461501637330902918203684832716283019655932542975 x1624) x698)) (and (=> (not x2170) x5034) (=> x2170 x2941))) x3552))
(assert (x3142 x1302))
(assert (x3142 x691))
(assert (= (x88 (x3424 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x3142 x3038))
(assert (x1936 x3099 x633 x4119 x2664))
(assert (= (x5247 x3861) (ite (and x3659 x2168) (x2186 x3861) (x575 x3861))))
(assert (x3142 x3305))
(assert (x3142 x147))
(assert (x1438 x3081))
(assert (x3142 x804))
(assert (x1438 x3140))
(assert (= (ite (= x1848 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4949 x1848)) (x4420 x1848)))
(assert (= (ite (= x828 x2576) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2930 x828)) (x1913 x828)))
(assert (x3142 x2480))
(assert (= (=> (= x1065 (and (> (x216 x194) 0) (= (<= (x216 x194) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (and (=> (and (not x1065) (= x2776 0)) x4557) (=> x1065 x3446))) x4572))
(assert (x3142 x104))
(assert (x2487 x1908))
(assert (x3142 x1052))
(assert (x22 x3967 x3015))
(assert (x1438 x1702))
(assert (x3142 x5141))
(assert (x1438 255))
(assert (= x3945 (=> (and (= x5091 (or (and (< x3665 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3665) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3665))) (= (x2483 (+ x212 x2420)) x4815) (= (x2483 (+ 31 x3665)) x345) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x345) x212)) (and (=> (not x5091) x4797) (=> x5091 x68)))))
(assert (x493 x1946))
(assert (x3142 x1165))
(assert (= (and x2396 x1238) x3868))
(assert (x22 x4481 x1195))
(assert (x3142 x151))
(assert (x3142 x551))
(assert (= x1460 x1346))
(assert (x1438 x3099))
(assert (= (=> (and (= x2909 (x2225 x1716)) (= (x254 x2460) x3787) (= x632 x2909) (<= 0 x2230) (<= x2581 1461501637330902918203684832716283019655932542975) (> 256 x2909) (= (x1999 1461501637330902918203684832716283019655932542975 x3803) x4131) (= x2782 (x3514 x2831)) (< x4458 1461501637330902918203684832716283019655932542976) (> 1461501637330902918203684832716283019655932542976 x2581) (= x4670 (x1513 736)) (<= x2230 255) (= x50 (x4007 x2460)) (<= 0 x2782) (= x2230 (x4551 x3478)) (= x2337 (not x3626)) (> 1461501637330902918203684832716283019655932542976 x1105) (= x1985 (x2997 704)) (= 704 x4937) (= (x1999 1461501637330902918203684832716283019655932542975 x2106) x4520) (> 18446744073709551616 x4343) (<= x3787 18446744073709551615) (= x2241 960) (= x3654 (x1999 1461501637330902918203684832716283019655932542975 x4670)) (= x474 (x656 x3478 1)) (= x4343 (x5260 x2460)) (>= x1105 0) (= x632 (x1999 255 x1985)) (> 18446744073709551616 x2175) (<= 0 x50) (<= 0 x4343) (< x50 18446744073709551616) (= (x4651 (x3424 x2909) (x1228 9) 0) x4741) (> 340282366920938463463374607431768211456 x2782) (>= x2581 0) (= x2175 (x200 x474)) (<= x50 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x1105) (= (x656 x3478 2) x2460) (= x2106 (x2980 768)) (= (ite x2337 1 0) x2704) (<= x2909 255) (= (= 274184521717934524641157099916833587235 x4520) x4472) (= x2704 x2450) (< 0 x2450) (= x2831 (x656 x474 2)) (= (x4651 (x3424 x4131) (x1228 8) 0) x1716) (>= x2175 0) (= (= x2450 0) x3626) (> 256 x2230) (= (x2 160) x2450) (<= x4458 1461501637330902918203684832716283019655932542975) (>= x2909 0) (= x265 704) (= x3478 (x4651 (x3424 x2909) (x1228 10) 0)) (>= x4458 0) (= x2581 x3654) (>= x3787 0) (>= 18446744073709551615 x2175) (>= 18446744073709551615 x4343) (= (x193 x3478) x1105) (= (x2147 x474) x4458) (> 18446744073709551616 x3787) (<= x2782 340282366920938463463374607431768211455) (= x2581 (x1123 x4741))) (and (=> (not x4472) x1203) (=> (and (>= x888 0) x4472 (<= x1834 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1208925819614629174706175 x4350) (< x4350 1208925819614629174706176) (not (= 3257672857 x2675)) (= x522 (x749 256)) (< 0 x3746) (not (< x2675 2362581449)) (= x2963 (x749 128)) (not (= x2675 4062139261)) (>= x1834 0) (= x3746 (x1050 (x3424 274184521717934524641157099916833587235))) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x4546 4)) (= (x749 224) x1585) (= x4546 4) (<= 0 x4350) (not (= 2362581449 x2675)) (>= x2353 0) (= x3601 160) (= x5218 (x749 128)) (= x1304 (x749 224)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1165) (>= 1208925819614629174706175 x888) (= x3107 (x749 192)) (> 1208925819614629174706176 x888) (>= x4396 0) (= 4272920204 x2675) (= (x749 256) x5170) (= (x749 160) x3810) (= x2798 (x749 160)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4396) (= x5110 (x749 192)) (= x4396 (x2246 x2014)) (= (x4651 (x3424 x4217) (x1228 1) 0) x2014) (= 1 x1168) (= x4546 4)) x1956))) x2826))
(assert (x3142 x5242))
(assert (= x2188 (or x3777 (and x4352 x3094))))
(assert (x3142 x4738))
(assert (= (=> (= x1749 true) x1245) x3613))
(assert (x3142 x364))
(assert (x3142 x2533))
(assert (=> (< (- x1888 1) 10000) (= (x3424 x1888) (x1228 x1888))))
(assert (x3142 x3040))
(assert (= 0 (x4182 x2269)))
(assert (x3142 x1885))
(assert (x3142 x3864))
(assert (x3142 x4091))
(assert (x3142 x3650))
(assert (=> (< (- x4848 1) 10000) (= (x3424 x4848) (x1228 x4848))))
(assert (= (x453 x1667) 0))
(assert (x1438 x986))
(assert (= x4423 (=> (and (not (ite x3722 x3722 (and (> x687 170141183460469231731687303715884105727) (= (<= x687 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x3099 (x2483 (+ x3499 31))) (= (x2483 (+ x1875 64)) x331) (= x4077 (x1999 x2231 x2885)) (= x3772 x2354) (= x3722 (not x880)) (= (ite (or (and (<= x529 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4700)) (and (= (<= x4700 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x529)) (< x4700 x529))) 1 0) x497) (= x704 (x5208 x1178)) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x523) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x523)) (> 0 x523))) 1 0) x2765) (= (x644 x331) x4208) (= x4077 0) (= x5153 (uninterp_mod (* x2799 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x323 (x5208 x740)) (= (x2483 (+ x3264 288)) x3976) (= x305 x2783) (= (x1999 18446744073709551615 x4094) x858) (= x2354 (x2483 (+ x2447 x1178))) (= x529 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x523))) (not (= 0 x686)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x523) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x523) true) (> 0 x523))) x972) (= x1337 0) (= (x1999 x2765 x497) x1337) (= (x2166 x4861) x4094) (= x956 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x523))) (= x2799 (x1999 340282366920938463463374607431768211455 x687)) (= (x2483 (+ 64 x2206)) x4861) (= (x2483 (+ 64 x3893)) x740) (<= x704 1208925819614629174706175) (= (ite (not x972) 1 0) x2231) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3099) x2447) (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x687) true) (> x687 0)) x880) (= x435 (* x858 x5153)) (= x687 (x5208 x3976)) (< (* x5153 x858) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3893 (x2483 (+ x1178 64))) (= x4700 x435) (= (x2483 (+ x4700 x523)) x305) (= x2885 (ite (or (and (< x956 x4700) (= (<= x956 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x4700 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x956 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4700))) 1 0)) (>= 1208925819614629174706175 x323) (not (> x4700 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3499) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3499) true) (> 160 x3499))))) x3507)))
(assert (= (and x3034 x1401) x5206))
(assert (x1438 x3388))
(assert (x3142 x313))
(assert (x3142 x1318))
(assert (x3142 x2454))
(assert (= 0 (x2295 x5235)))
(assert (x3142 x1385))
(assert (x3142 x1116))
(assert (x493 274184521717934524641157099916833587223))
(assert (x3142 x608))
(assert (x3142 x1419))
(assert (x3142 x5021))
(assert (x3142 x3228))
(assert (= (x1228 274184521717934524641157099916833587244) (x3424 274184521717934524641157099916833587244)))
(assert (x3142 x3915))
(assert (x3142 x925))
(assert (x22 x2106 x5236))
(assert (x3142 x2921))
(assert (x3142 x4600))
(assert (= x3064 (and x2116 (not x1323))))
(assert (x3142 x2365))
(assert (x4136 x4796 x4654))
(assert (x3142 x3737))
(assert (x3142 x4378))
(assert (x3142 x428))
(assert (x3142 x1462))
(assert (x3142 x4114))
(assert (x3142 x3652))
(assert (x3142 x4016))
(assert (x3142 x4850))
(assert (= x4519 true))
(assert (x3142 x1705))
(assert (x3142 x1916))
(assert (x3142 x2611))
(assert (x1438 x344))
(assert (x3142 x4549))
(assert (x1438 x3892))
(assert (x3142 x2370))
(assert (x3142 x2423))
(assert (x3142 x515))
(assert (= x1660 (=> (= x859 (= 274184521717934524641157099916833587233 x243)) (and (=> (not x859) x5010) (=> (and (= x877 1) (= x4345 (x4287 256)) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 2362581449 x3862)) (= (x4287 160) x3934) (not (< x2883 4)) (= 4 x2883) (<= 0 x2402) (= x4968 x2883) (= (x4287 128) x847) (< x443 1208925819614629174706176) (= x3262 (x1050 (x3424 274184521717934524641157099916833587233))) (= (x4287 192) x3824) (= (x4287 224) x4998) (< 0 x3262) (= x2067 (x4287 128)) (<= x2402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5009 0) (= (x2483 (+ x5118 320)) x3053) (< x5009 1208925819614629174706176) (= x953 (x2483 (+ x5118 384))) (= x4230 115197700812830431890159100217698998050002284567939525164234024451216521560064) (not (= x3862 4062139261)) (= (x4287 224) x7) (= x3103 160) (= (x2483 (+ 352 x5118)) x3650) (<= x5009 1208925819614629174706175) (>= 1208925819614629174706175 x443) (= x4647 (x721 x15)) (= x15 (x4651 (x3424 x4217) (x1228 1) 0)) (<= 0 x4647) (= x1241 (x4287 160)) x859 (>= x1863 0) (>= x443 0) (not (= 2362581449 x3862)) (= x3862 4272920204) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4647) (= x639 (x4287 192)) (= (x4287 256) x4219) (= x2351 (x2483 (+ x5118 288))) (not (= 3257672857 x3862))) x3218)))))
(assert (= (+ (x88 x4036) 1) (x88 (x656 x4036 1))))
(assert (x3142 x794))
(assert (= (x1427 160) x3792))
(assert (x3142 x2823))
(assert (x3142 x3789))
(assert (x3142 x856))
(assert (= (=> (and (= (ite x1372 1 0) x3146) (= x4003 (or (and (> 0 x477) (= true (<= x477 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x477))) (= x1372 (not x4003)) (= x5081 x1206)) x661) x1273))
(assert (x3142 x3417))
(assert (x3142 x4076))
(assert (x1438 x1709))
(assert (= (and (not x853) x180) x3109))
(assert (x3142 x79))
(assert (x3142 x1972))
(assert (=> (< (- x2961 1) 10000) (= (x3424 x2961) (x1228 x2961))))
(assert (x3142 x3682))
(assert (= (x204 x2346) (ite (and x2329 x1914) (x2306 x2346) (x1249 x2346))))
(assert (= (and (not x708) x4645) x2867))
(assert (x493 x4811))
(assert (x1438 x1741))
(assert (x1438 x2391))
(assert (x1936 x1349 x4037 x3901 x3044))
(assert (x3142 x4339))
(assert (x3142 x1319))
(assert (x493 x4752))
(assert (= x1778 (and x1570 (not x1185))))
(assert (x3142 x2853))
(assert (x3142 x5065))
(assert (x22 x2124 x2291))
(assert (x3142 x3787))
(assert (x3142 x3707))
(assert (x3142 x4460))
(assert (x1438 x5148))
(assert (x3142 x4353))
(assert (x3142 x3649))
(assert (x3142 x3107))
(assert (x3142 x2513))
(assert (x3142 x3223))
(assert (= (=> (and (= x2543 x1179) (= x2059 1)) x587) x3585))
(assert (= (=> (and (= x3985 (x1999 1461501637330902918203684832716283019655932542975 x1624)) (= x3837 (= x1624 x3985))) (and (=> x3837 x3367) (=> (not x3837) x137))) x897))
(assert (= (=> (and (= x545 (> x4681 1)) (= 1 x3287) (= (x1999 255 x4120) x4681)) (and (=> x545 x2807) (=> (and (= x4602 x1131) (not x545) (= x4946 x3927)) x4532))) x2877))
(assert (= x2909 (x88 (x3424 x2909))))
(assert (= x2312 (=> (and (= (x1999 1208925819614629174706175 x4086) x4467) (= x4086 (x2306 x1391)) (= x1629 (x2483 (+ x5089 64))) (= (= x4467 x4086) x1418) (= (x2306 x2544) x4577) (= (x2483 (+ 288 x3773)) x2544) (= x1391 (x2483 (+ 64 x1629)))) (and (=> (not x1418) x852) (=> x1418 x712)))))
(assert (x3142 x3846))
(assert (x3142 x602))
(assert (x3142 x4761))
(assert (x3142 x4166))
(assert (x3142 x2878))
(assert (= (and (not x3780) x3960) x1277))
(assert (x2786 x4736 x4832))
(assert (x1438 x3967))
(assert (x22 x2863 x4017))
(assert (= (x88 (x3424 x1251)) x1251))
(assert (= (x1228 117300739) (x3424 117300739)))
(assert (x3142 x506))
(assert (x3142 x731))
(assert (x1438 x4244))
(assert (x3142 x2543))
(assert (x3142 x583))
(assert (x3142 x3332))
(assert (x3142 x1952))
(assert (x3142 x2275))
(assert (x3142 x3934))
(assert (x493 x3051))
(assert (= (or (and x4867 x343) (and x739 x4125)) x1567))
(assert (= (and x3540 x4786) x4410))
(assert (x3142 x4446))
(assert (x3142 x4936))
(assert (= (x88 (x3424 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x3142 x3431))
(assert (= (or x4488 x423 x4197) x1510))
(assert (= (=> (and (= 1 x4686) (= x1541 x948)) x4330) x2452))
(assert (x3142 x4366))
(assert (x3142 x478))
(assert (x3549 x4535 x4146))
(assert (x2487 x4582))
(assert (x3142 x4010))
(assert (x2487 x3310))
(assert (x3142 x1954))
(assert (x3142 x3489))
(assert (x3142 x2363))
(assert (= x4613 x941))
(assert (x3142 x1677))
(assert (x3142 x3263))
(assert (x3142 x4094))
(assert (= (x88 (x3424 x860)) x860))
(assert (x3142 x2321))
(assert (x3142 x1587))
(assert (x1438 x2889))
(assert (= (ite (= x4002 x1421) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x3143 x4002)) (x2876 x4002)))
(assert (x3142 x2567))
(assert (x3142 x4507))
(assert (x3142 x485))
(assert (x3142 x4914))
(assert (x4136 x4881 x4064))
(assert (x3142 x2964))
(assert (x3142 x5070))
(assert (x3142 x1950))
(assert (= x804 (x88 (x3424 x804))))
(assert (= (x1228 1461501637330902918203684832716283019655932542975) (x3424 1461501637330902918203684832716283019655932542975)))
(assert (x3142 x4087))
(assert (= (x3424 18446744073709551615) (x1228 18446744073709551615)))
(assert (x3142 x2218))
(assert (= (x1228 4033150093) (x3424 4033150093)))
(assert (x1438 x1624))
(assert (x3142 x323))
(assert (x3142 x380))
(assert (= (+ 2 (x88 x4036)) (x88 (x656 x4036 2))))
(assert (x3142 x4189))
(assert (x3142 x3024))
(assert (x3142 x1580))
(assert (= x1155 (and x4867 (not x343))))
(assert (x3142 x2709))
(assert (x3142 x5082))
(assert (= (+ (x88 x463) 2) (x88 (x656 x463 2))))
(assert (x2786 x491 x155))
(assert (x3142 x1517))
(assert (= true x2089))
(assert (x2487 x1022))
(assert (x3142 x4066))
(assert (x1438 x2424))
(assert (x3142 x4694))
(assert (= 1461501637330902918203684832716283019655932542975 (x88 (x1228 1461501637330902918203684832716283019655932542975))))
(assert (= 3454435393 (x88 (x1228 3454435393))))
(assert (x3142 x4259))
(assert (x3142 x4546))
(assert (x493 x1345))
(assert (x2786 x2657 x2057))
(assert (x3142 x605))
(assert (x3142 x4286))
(assert (x22 x2395 x4640))
(assert (= x3900 (x88 (x3424 x3900))))
(assert (x22 x324 x2587))
(assert (x3142 x1525))
(assert (x3142 x672))
(assert (x3142 x1618))
(assert (x3142 x2866))
(assert (x3142 x4700))
(assert (x3142 x566))
(assert (x3142 x1875))
(assert (x2786 x3040 x595))
(assert (= x2959 (=> (and (= x1036 (> x4814 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (uninterp_mod (* x3612 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4814)) (and (=> (not x1036) x2173) (=> x1036 x2526)))))
(assert (x1047 x272 x3257))
(assert (x3142 x5126))
(assert (x3142 x927))
(assert (x3142 x4209))
(assert (x3142 x4835))
(assert (x4136 x723 x1520))
(assert (= x4416 (x88 (x3424 x4416))))
(assert (x1438 x4339))
(assert (x3142 x928))
(assert (x3142 x4602))
(assert (x3142 x968))
(assert (x3142 x9))
(assert (x3142 x711))
(assert (= x4641 (=> (and (= x4059 x4013) (= 0 x4697)) x4039)))
(assert (x3142 x4712))
(assert (x3142 x4970))
(assert (x3142 x4920))
(assert (x3142 x2788))
(assert (= (and x1912 x2170) x1738))
(assert (x3142 x451))
(assert (x1438 x4840))
(assert (x3142 x3379))
(assert (x1438 x1499))
(assert (x1438 x3537))
(assert (= 1208925819614629174706175 (x88 (x1228 1208925819614629174706175))))
(assert (x3142 x1511))
(assert (x3142 x504))
(assert (x3142 x1092))
(assert (x3142 x3090))
(assert (= x1471 (=> (and (= (= x3198 115792089237316195423570985008687907853269984655499359237631748795939503996928) x2307) (= (x216 x2829) x3198) (= x2921 (x4965 (- x2026 x3176))) (= (x1999 18446744073709551615 x2921) x1194)) (and (=> x2307 x796) (=> (not x2307) x3425)))))
(assert (= (or (and x2182 x1639) (and x4025 x336)) x2076))
(assert (= x4235 (=> (and (> 18446744073709551616 x5067) (>= x5067 0) (= (> x5067 0) x355) (>= 18446744073709551615 x5067) (= x1984 (x1999 20282409603651670423947251286015 x2725)) (= (x4965 (- x2006 x3222)) x2800)) (and (=> (not x355) x963) (=> x355 x2464)))))
(assert (x3142 x1605))
(assert (x3142 x3941))
(assert (x3142 x700))
(assert (= (or (and (not x1048) x2634) (and (not x2356) x3101)) x2288))
(assert (x1438 x2546))
(assert (x3142 x4647))
(assert (= x3756 (=> (and (= (x1999 20282409603651670423947251286015 x878) x3982) (= (> x3982 10141204801825835211973625643007) x3898) (= (- (/ x2227 x1040) (uninterp_frac x2227 x1040)) x878)) (and (=> (not x3898) x702) (=> x3898 x941)))))
(assert (x3142 x2632))
(assert (x3142 x2083))
(assert (x493 x4217))
(assert (= (=> (= x3581 (or (and (> 0 x4962) (= (<= x4962 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x4962 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (=> (and (= x2543 x1662) (not x3581)) x3585) (=> x3581 x3998))) x2747))
(assert (x3142 x3103))
(assert (= x4311 (or (and x3630 (not x3627)) (and x2310 (not x355)) (and x641 (not x3570)) (and x3966 (not x4043)))))
(assert (x3142 x1655))
(assert (x3142 x701))
(assert (x3142 x1832))
(assert (= x1030 (and x2188 x3732)))
(assert (x3142 x4514))
(assert (= x2575 (or (and x2741 x3058) (and x1568 x1829))))
(assert (x3142 x2430))
(assert (x1438 x1608))
(assert (x3142 x2133))
(assert (= x830 (and x1065 x1367)))
(assert (x493 x3924))
(assert (x3142 x5094))
(assert (x3142 x5175))
(assert (x1438 x5161))
(assert (x3142 x1748))
(assert (= (=> (= x3834 (= x2326 274184521717934524641157099916833587233)) (and (=> (and (= (x1717 160) x3254) (not (= 4062139261 x4101)) (not (= 3257672857 x4101)) (= 4 x1905) (= (x1717 224) x1772) (= x3230 (x1717 224)) (= x1548 160) (= x2565 (x1717 256)) (= x2393 (x1717 128)) (not (< x1905 4)) (<= x443 1208925819614629174706175) (= (x1717 160) x4479) (= x1774 (x1717 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2434) (= (x721 x388) x2434) (= (x1050 (x3424 274184521717934524641157099916833587233)) x442) (not (< x4101 2362581449)) (= (x2483 (+ x4979 352)) x5012) (not (= 2362581449 x4101)) (> 1208925819614629174706176 x5009) (= (x1717 128) x3226) (>= x2434 0) (= (x2483 (+ x4979 384)) x207) (>= x2402 0) (>= x1863 0) (> 1208925819614629174706176 x443) (= x257 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x1717 192) x3204) (= x1905 x513) (> x442 0) (= x4370 (x2483 (+ 288 x4979))) (= 4272920204 x4101) (= 1 x2592) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (= (x4651 (x3424 x4217) (x1228 1) 0) x388) x3834 (>= x5009 0) (= x2376 (x2483 (+ x4979 320))) (>= x443 0) (= x1458 (x1717 256)) (<= x5009 1208925819614629174706175) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2722) (=> (not x3834) x2089))) x2945))
(assert (x493 x3771))
(assert (x3142 x4498))
(assert (=> (< (- x4284 1) 10000) (= (x3424 x4284) (x1228 x4284))))
(assert (x3142 x1314))
(assert (x3142 x376))
(assert (x1438 x3029))
(assert (= (=> (= x825 (= x562 274184521717934524641157099916833587233)) (and (=> (not x825) x818) (=> (and x825 (not (> 2362581449 x519)) (= (x721 x1392) x418) (>= x1863 0) (= (x5071 160) x3338) (not (< x4808 4)) (= (x4651 (x3424 x4217) (x1228 1) 0) x1392) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (= (x5071 224) x1623) (= x2910 (x5071 256)) (= 4 x4808) (= (x1050 (x3424 274184521717934524641157099916833587233)) x1694) (>= x2402 0) (= x3251 (x5071 128)) (not (= 4062139261 x519)) (<= x418 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5071 192) x5068) (not (= x519 2362581449)) (>= x443 0) (= (x5071 128) x4585) (not (= 3257672857 x519)) (= (x2483 (+ 352 x3820)) x3407) (= x519 4272920204) (>= x5009 0) (= x2836 (x5071 224)) (>= 1208925819614629174706175 x5009) (= x1635 x4808) (= 160 x3184) (< x5009 1208925819614629174706176) (= x51 (x5071 256)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x539) (= x4995 (x2483 (+ 320 x3820))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1863) (> 1208925819614629174706176 x443) (= x3160 (x2483 (+ x3820 288))) (<= 0 x418) (= (x5071 192) x2174) (= x2801 (x2483 (+ 384 x3820))) (= 1 x1053) (= (x5071 160) x151) (<= x443 1208925819614629174706175) (< 0 x1694)) x403))) x210))
(assert (x3142 x833))
(assert (x3142 x4014))
(assert (= (x3424 4272920204) (x1228 4272920204)))
(assert (x3142 x3555))
(assert (x3142 x1868))
(assert (x3142 x5072))
(assert (= x227 (and x3630 x3627)))
(assert (x3142 x34))
(assert (x3142 x2056))
(assert (= 4062139261 (x88 (x1228 4062139261))))
(assert (x493 x923))
(assert (x3142 x1345))
(assert (= (=> (and (= (x2483 (+ 288 x3178)) x2085) (= x1086 (or (and (> 160 x4228) (= (<= x4228 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4228))) (= x3178 (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2882)) (= (x2483 (+ 31 x4228)) x2882)) (and (=> (and x1086 (= true x1749)) x1245) (=> (not x1086) x289))) x4960))
(assert (x3142 x2906))
(assert (x3142 x3976))
(assert (= (x2774 x148) (ite (= x3273 x148) x681 (x879 x148))))
(assert (= 0 (x4949 x2260)))
(assert (x3142 x1898))
(assert (x3142 x3808))
(assert (x3142 x2207))
(assert (x3142 x4482))
(assert (x3142 x1603))
(assert (x3142 x5088))
(assert (x3142 x1816))
(assert (x3142 x2576))
(assert (x3142 x33))
(assert (x3142 x696))
(assert (= x4375 (and x3661 x1582)))
(assert (x3142 x2402))
(assert (x3142 x2696))
(assert (x3142 x1959))
(assert (x1438 x2862))
(assert (= x336 (and (not x2182) x1639)))
(assert (x2487 x2983))
(assert (x3142 x3464))
(assert (x3142 x3818))
(assert (x4136 x4761 x120))
(assert (= (x1361 x3742) (ite (= 960 x3742) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2 x3742))))
(assert (x3142 x1904))
(assert (= (ite (= x5004 x4087) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1197 x5004)) (x5231 x5004)))
(assert (x3142 x371))
(assert (x3142 x4281))
(assert (x3142 x2926))
(assert (x1438 x4549))
(assert (x3142 x2145))
(assert (= (or (and x3109 x3834) (and x180 x853)) x3447))
(assert (x1438 x3500))
(assert (= (x88 (x3424 x4512)) x4512))
(assert (x3142 x3914))
(assert (x3142 x2885))
(assert (x493 x1609))
(assert (x3142 x1718))
(assert (x1438 x5245))
(assert (= x4862 (and x4410 (not x943))))
(assert (x22 x1314 x4118))
(assert (= x4277 (=> (and (= x1998 (x1999 255 x4120)) (= 1 x2892) (= x1915 (> x1998 1))) (and (=> x1915 x4795) (=> (and (not x1915) (= x5198 x1594) (= x4638 x3762)) x1117)))))
(assert (x3142 x330))
(assert (x3549 x2862 x469))
(assert (= (and x2251 x4592) x4411))
(assert (x1438 340282366920938463463374607431768211455))
(assert (x4136 x4773 x3724))
(assert (=> (> (+ 10000 1) x3924) (= (x1228 x3924) (x3424 x3924))))
(assert (= (x88 (x3424 x1334)) x1334))
(assert (x3142 x955))
(assert (x3142 x4842))
(assert (x4568 x2231 x2885))
(assert (x3142 x3925))
(assert (x3142 x4905))
(assert (= x1070 (or (and x3696 x4425) (and x3850 x2184) (and x39 x221))))
(assert (x3142 x3028))
(assert (x1438 x2400))
(assert (x1438 x1004))
(assert (x3142 x2491))
(assert (= x3507 (=> (and (= x1581 (x1999 255 x4120)) (= (> x1581 1) x4981) (= 1 x4139)) (and (=> x4981 x1445) (=> (and (= x2783 x477) (not x4981) (= x1206 x3772)) x1273)))))
(assert (= (x886 x3154) (ite (and x2184 x3850) (x3063 x3154) (x2774 x3154))))
(assert (x1438 x1736))
(assert (x3142 x2379))
(assert (x3142 x344))
(assert (x3142 x1616))
(assert (x3142 x819))
(assert (x3142 x2503))
(assert (x2487 x2371))
(assert (x3142 x1184))
(assert (= (+ 1 (x88 x463)) (x88 (x656 x463 1))))
(assert (x3142 x4935))
(assert (x2550 x881 x5220))
(assert (= (=> (and (<= x2612 1461501637330902918203684832716283019655932542975) (= x2548 1) (>= x3818 0) (= (x1123 x1975) x2612) (= (x4651 (x1228 1) (x1228 9) 0) x1975) (< x3818 256) (= x3139 (x4651 (x3424 x2612) x3522 0)) (<= x3818 255) (= (x4651 (x3424 x2046) (x1228 11) 0) x3522) (< x2612 1461501637330902918203684832716283019655932542976) (<= 0 x2612) (= (= 0 x3818) x1185) (= x3818 (x3603 x3139))) (and (=> (and (= x3745 x1131) x1185 (= x5030 x3927)) x4702) (=> (not x1185) x2348))) x2807))
(assert (= (x3424 2514000705) (x1228 2514000705)))
(assert (= (x88 (x1228 4272920204)) 4272920204))
(assert (= x2791 (or (and x81 x23) (and x3259 x3323))))
(assert (= (=> (= x3118 (= x13 274184521717934524641157099916833587223)) (and (=> (not x3118) x4483) (=> x3118 x5002))) x994))
(assert (x3142 x3195))
(assert (= (=> (and (= (ite (not x1402) 1 0) x3563) (= x3565 (= 0 x719)) (= x4894 (ite (or (and (= (<= x2760 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4814)) (> x4814 x2760)) (and (> x2760 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x4814 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x2760 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3877))) (= (or (> x3877 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3877 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3877 0))) x1402) (= x719 (x1999 x3563 x4894))) (and (=> (not x3565) x505) (=> x3565 x690))) x2173))
(assert (x4136 x3004 x2474))
(assert (x2786 x4691 x101))
(assert (x1047 x841 x3377))
(assert (x22 x709 x4163))
(assert (x1438 x3497))
(assert (= (ite (and x3659 x2168) (x2186 128) (x575 128)) (x5247 128)))
(assert (x3142 x209))
(assert (= x127 (or (and x2622 x1376) (and x1871 x1316))))
(assert (x1438 x4596))
(assert (= true x2237))
(assert (= x2339 (x88 (x3424 x2339))))
(assert (x3142 x1987))
(assert (x3142 x986))
(assert (= true x2797))
(assert (x3142 x5084))
(assert (x3142 x1329))
(assert (= (x1228 1099511627775) (x3424 1099511627775)))
(assert (x3142 x5107))
(assert (x3142 x950))
(assert (x3142 x5119))
(assert (x3142 x48))
(assert (= x3956 (=> (= (= x2414 274184521717934524641157099916833587233) x3524) (and (=> (and (= x3012 (x3935 192)) (not (= 4062139261 x2478)) (= 160 x778) (= x3971 4) (= x2971 1) (>= x1863 0) (= x2654 (x4651 (x3424 x4217) (x1228 1) 0)) (= x4301 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x3935 160) x4771) (= (x3935 128) x582) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (> x2010 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1863) (>= x2402 0) (<= x2031 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3935 192) x4842) (<= x443 1208925819614629174706175) (= x5134 (x3935 256)) x3524 (not (= 3257672857 x2478)) (= (x721 x2654) x2031) (not (= x2478 2362581449)) (> 1208925819614629174706176 x5009) (= (x3935 160) x590) (>= 1208925819614629174706175 x5009) (= 4272920204 x2478) (= (x3935 256) x4925) (<= 0 x2031) (= (x3935 224) x4746) (> 1208925819614629174706176 x443) (= (x3935 224) x4597) (= (x1050 (x3424 274184521717934524641157099916833587233)) x2010) (not (> 2362581449 x2478)) (<= 0 x443) (>= x5009 0) (not (> 4 x3971)) (= (x3935 128) x3433) (= 4 x3971)) x448) (=> (not x3524) x1872)))))
(assert (= (or (and x859 x2081) (and x3582 x1622)) x4125))
(assert (x3142 x3078))
(assert (x3142 x3355))
(assert (x1438 x1378))
(assert (x3142 x2798))
(assert (x3142 x4695))
(assert (x3018 x3081))
(assert (= (=> (= (or (> x3521 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x3521) (= true (<= x3521 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x2529) (and (=> (and (= x4366 x3788) (not x2529)) x3553) (=> x2529 x4335))) x2347))
(assert (x2487 x878))
(assert (x3142 x4131))
(assert (x3142 x2500))
(assert (x3142 x2554))
(assert (x3142 x2059))
(assert (= (x3556 x3423) 0))
(assert (x3142 x737))
(assert (x3142 x4901))
(assert (x3142 x589))
(assert (x3142 x2236))
(assert (= (ite (= x1310 x5089) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1249 x1310)) (x2828 x1310)))
(assert (x3142 x1241))
(assert (= x3542 (=> (= x4310 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x892)) (< x892 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x892))) (and (=> (and (not x4310) (= x4127 x1541)) x2452) (=> x4310 x3427)))))
(assert (= x4154 x2811))
(assert (x3142 x2781))
(assert (x3142 x4801))
(assert (x3142 x238))
(assert (x3142 x1733))
(assert (x3142 x434))
(assert (x3142 x930))
(assert (x3142 x1431))
(assert (x3142 x3551))
(assert (x3142 x3169))
(assert (x3142 x1202))
(assert (x1438 x4094))
(assert (x1438 x4851))
(assert (x1438 x3248))
(assert (x3142 x2410))
(assert (x3142 x1945))
(assert (x3142 x318))
(assert (x3142 x4952))
(assert (= 404098525 (x88 (x1228 404098525))))
(assert (= (ite (= x5107 x2048) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x845 x2048)) (x990 x2048)))
(assert (= (=> (and (= (not x982) x2336) (= x1749 x982)) x2336) x743))
(assert (x3142 x4922))
(assert (x1936 x2240 x2727 x4790 x2525))
(assert (x3142 x817))
(assert (= x1286 x941))
(assert (x3142 x3748))
(assert (x1438 x272))
(assert (= (and x3461 x862) x4471))
(assert (= x4826 (=> (and (= x462 (ite x3196 1 0)) (= x3215 (= 0 x4078)) (= x3196 (not x3215))) (=> (and (= x3236 4093572003) (not (= 3950285521 x3236)) (<= x1164 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3532) (or (and x5120 (= x5251 (ite x5120 1 0))) (and (= (x1436 x4097) x700) (= (x4651 (x3424 x4857) x1844 0) x4097) (>= x700 0) (>= 255 x700) (= x5251 x700) (not x5120) (< x700 256) (= (x4651 (x3424 x4857) (x1228 3) 0) x1844))) (= x1617 0) (= (x1050 (x3424 274184521717934524641157099916833587210)) x2705) (not (= 4072275384 x3236)) (= x4982 x1415) (<= 0 x4787) (= x2120 x1963) (= x3525 (not (= x462 0))) (= x1164 x1415) (= x3679 x4857) (not (= 4033150093 x3236)) (= x1974 x4217) (not x4407) (not (> 2059964113 x3236)) (= x3532 x4022) (= x1617 x4837) x2553 (not (> 3695885053 x3236)) (> x2705 0) (>= 1461501637330902918203684832716283019655932542975 x3679) (not (= 4072298103 x3236)) (= x3525 x1696) (<= x4787 1461501637330902918203684832716283019655932542975) (= x5120 true) (not (< x3236 3283311230)) (>= x3679 0) (not (> 3950285521 x3236)) (= x2553 (and x3539 x1696)) (<= 0 x1164)) x4943))))
(assert (x3142 x1541))
(assert (x3142 x2998))
(assert (x3142 x2369))
(assert (x3142 x1266))
(assert (= (x88 (x3424 x3728)) x3728))
(assert (x3142 x83))
(assert (x3142 x831))
(assert (x3142 x2219))
(assert (x1438 x2248))
(assert (x3142 x440))
(assert (= (ite (= x3296 x1444) x3924 (x4204 x1444)) (x3255 x1444)))
(assert (x3142 x3917))
(assert (= (and x140 x4615) x2955))
(assert (x3142 x3769))
(assert (= (ite (and x3659 x2168) (x2186 256) (x575 256)) (x5247 256)))
(assert (= (x5247 x2233) (ite (and x2168 x3659) (x2186 x2233) (x575 x2233))))
(assert (= 0 (x1395 x3996)))
(assert (= x843 x2181))
(assert (x1438 x619))
(assert (x3142 x3907))
(assert (x3142 x1958))
(assert (= (x1913 x1219) (ite (= x2576 x1219) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2930 x1219))))
(assert (x3142 x1143))
(assert (x1438 x4964))
(assert (x3142 x5))
(assert (x3142 x4611))
(assert (x3142 x2895))
(assert (= (and (not x4689) x806) x1083))
(assert (x3142 x4403))
(assert (x3142 x2339))
(assert (x3142 x4734))
(assert (x1438 x3526))
(assert (x3142 x1151))
(assert (x1438 x4024))
(assert (x1438 x4063))
(assert (x3142 x2345))
(assert (x3142 x1964))
(assert (= (x1249 416) (ite (and x3598 x532) (x2900 416) (x4342 416))))
(assert (x3142 x5134))
(assert (= x423 (or x4542 (and (not x1896) x724))))
(assert (= x68 (=> (= true x1749) x1245)))
(assert (x22 x3240 x3694))
(assert (x3142 x4404))
(assert (x3142 x3975))
(assert (x3142 x894))
(assert (x3142 x99))
(assert (= (or (and x1778 (not x5049)) (and (not x4310) x1501)) x5066))
(assert (x3142 x1589))
(assert (= x2101 (x88 (x3424 x2101))))
(assert (x3142 x1264))
(assert (= (x88 (x3424 x1611)) x1611))
(assert (x4568 x4590 x4239))
(assert (x3142 x2745))
(assert (x3142 x5189))
(assert (= x921 (and x4642 (not x4060))))
(assert (x3142 x2287))
(assert (x1438 x1626))
(assert (x3142 x3184))
(assert (x1438 x1890))
(assert (x3142 x1226))
(assert (x3142 x3858))
(assert (= x3001 (x88 (x3424 x3001))))
(assert (x3142 x4535))
(assert (x3142 x26))
(assert (x3142 x1626))
(assert (x2786 x3475 x350))
(assert (x3142 x4836))
(assert (x3142 x1310))
(assert (x3142 x4746))
(assert (x3142 x2353))
(assert (= (and (not x1138) x297) x2084))
(assert (x3142 x443))
(assert (x3142 x4736))
(assert (x3142 x305))
(assert (x3142 x2320))
(assert (x2786 x5097 x3872))
(assert (= (and x1814 (not x1569)) x4834))
(assert (x3142 x3624))
(assert (x3142 x2243))
(assert (x3142 x4699))
(assert (x2550 x1311 x4194))
(assert (x3142 x3558))
(assert (= (x1064 x3096) 0))
(assert (x3142 x2956))
(assert (x3142 x5039))
(assert (= (+ (x88 x4516) 1) (x88 (x656 x4516 1))))
(assert (= x1501 (and x4253 (not x1331))))
(assert (= (and (not x795) x1046) x1028))
(assert (x3142 x4219))
(assert (x3018 x3450))
(assert (= (and (not x4844) x4492) x3258))
(assert (x3142 x2556))
(assert (x3142 x593))
(assert (= x4335 (=> (and (= x1846 (x656 x5149 1)) (= x1691 (x4551 x5149)) (= 1 x4221) (= x929 (x4651 (x3424 x860) x2154 0)) (<= 0 x2389) (>= 255 x1691) (< x2243 1461501637330902918203684832716283019655932542976) (= x1009 (x656 x5149 2)) (= x2853 (x1999 1461501637330902918203684832716283019655932542975 x1132)) (>= x2243 0) (= x5111 1) (= x3028 (x2483 (+ x3788 288))) (<= x2375 18446744073709551615) (<= 0 x1948) (= x1431 (x2483 (+ x1892 64))) (= x3629 (x4007 x1009)) (= (x3013 x929) x1503) (= (x656 x1846 2) x3605) (< x2257 18446744073709551616) (>= 1461501637330902918203684832716283019655932542975 x2243) (>= 1461501637330902918203684832716283019655932542975 x2389) (= (x2483 (+ 256 x3788)) x4240) (= x410 (x1082 x4240)) (= (x2734 x3028) x324) (= (x200 x1846) x4955) (>= 18446744073709551615 x3629) (<= 0 x3629) (= (= x2853 274184521717934524641157099916833587235) x2622) (<= x4955 18446744073709551615) (= (x1123 x1292) x1948) (= (x5260 x1009) x2375) (= x2321 (x2483 (+ x2098 64))) (< x1691 256) (> 18446744073709551616 x2375) (= (x4651 (x3424 x4857) (x1228 6) 0) x2154) (= x1960 x1948) (>= x2257 0) (= x4631 (x2483 (+ x4240 64))) (< x1948 1461501637330902918203684832716283019655932542976) (> 18446744073709551616 x3629) (<= x1948 1461501637330902918203684832716283019655932542975) (= (x2483 (+ x4240 64)) x2098) (= x2389 (x2147 x1846)) (= (x1999 1461501637330902918203684832716283019655932542975 x324) x860) (= (x2483 (+ 288 x3788)) x2208) (< x4955 18446744073709551616) (>= x1503 0) (= (x193 x5149) x2243) (<= x1503 340282366920938463463374607431768211455) (= (x1031 x4631) x1132) (= (x2734 x2208) x4575) (= (x2483 (+ 64 x2321)) x5119) (= x4040 4) (= x2257 (x254 x1009)) (>= x1691 0) (= (x1999 255 x410) x607) (= x5149 (x4651 (x1228 1) (x1228 10) 0)) (<= x2257 18446744073709551615) (= (x2483 (+ x1431 64)) x807) (> 340282366920938463463374607431768211456 x2425) (<= 0 x2375) (>= 340282366920938463463374607431768211455 x2425) (= (x2483 (+ 64 x2208)) x1892) (> 1461501637330902918203684832716283019655932542976 x2389) (= (x1999 1461501637330902918203684832716283019655932542975 x4575) x1960) (> 340282366920938463463374607431768211456 x1503) (>= x2425 0) (= x607 1) (= x1292 (x4651 (x1228 1) (x1228 9) 0)) (= (x3514 x3605) x2425) (>= x4955 0) (= (x2483 (+ 512 x3788)) x5107)) (and (=> (not x2622) x1063) (=> (and (= (x2483 (+ 288 x4240)) x2244) (= 4272920204 x2156) (not (= x2156 3257672857)) (= x4605 (x1776 160)) (= (x4651 (x3424 x4217) (x1228 1) 0) x3045) (= (x1050 (x3424 274184521717934524641157099916833587235)) x4766) (= x1319 (x1776 128)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2353) (= x488 (x1776 224)) (>= x4350 0) (>= 1208925819614629174706175 x888) (= 4 x714) (<= 0 x2353) (= x714 x4040) (>= x888 0) (< x4350 1208925819614629174706176) (= (x1776 256) x3504) (= x821 (x1776 128)) (= 160 x3719) (= (x2483 (+ 384 x4240)) x4071) (= x836 (x1776 192)) (= x3221 (x1776 192)) (= x1841 (x1776 160)) (< x888 1208925819614629174706176) (<= 0 x1834) (not (= x2156 2362581449)) (not (< x714 4)) (< 0 x4766) (not (= 4062139261 x2156)) x2622 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x974) (= x173 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x2483 (+ x4240 352)) x3095) (= x65 1) (= x2735 (x2483 (+ x4240 320))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (= (x2246 x3045) x974) (= (x1776 256) x395) (>= 1208925819614629174706175 x4350) (<= 0 x974) (= x1252 (x1776 224)) (not (< x2156 2362581449))) x508)))))
(assert (= (and x2589 x2584) x2759))
(assert (= x1406 (or (and x3640 x3057) (and x2168 x3659))))
(assert (x3142 x4658))
(assert (x3142 x29))
(assert (= (x4949 x2346) 0))
(assert (= x4729 (and x1155 (not x2871))))
(assert (x3142 x3662))
(assert (= x4273 (=> (and (= x6 (x1999 1208925819614629174706175 x1266)) (= (x1826 x1310) x1266) (= (x2483 (+ x3715 64)) x1310) (= (= x1266 x6) x1965) (= x2346 (x2483 (+ 288 x1075))) (= (x1826 x2346) x3869) (= x3715 (x2483 (+ 64 x2420)))) (and (=> (not x1965) x852) (=> x1965 x837)))))
(assert (x3142 x4881))
(assert (x3142 x1617))
(assert (x3142 x93))
(assert (= x5044 (and x4109 x2676)))
(assert (x3142 x1349))
(assert (x1438 x3450))
(assert (x1438 x3957))
(assert (x3142 x87))
(assert (x22 x4716 x3602))
(assert (x3142 x3572))
(assert (x3142 x66))
(assert (x3142 x2663))
(assert (x3142 x909))
(assert (x1438 x1135))
(assert (x1438 x4670))
(assert (x3142 x4355))
(assert (= x2619 (and x4578 (not x992))))
(assert (= (x4944 x1219) (ite (and x1198 x310) (x2994 x1219) (x224 x1219))))
(assert (= (and x4336 (not x4138)) x5181))
(assert (x3142 x4453))
(assert (x3142 x1892))
(assert (= (=> (and (= (= 0 x2271) x900) (= x2271 (x1999 x3025 x1144)) (= (x216 x194) x2006) (= (or (and (< x3222 0) (= true (<= x3222 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3222 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x164) (= x3222 (x216 x3310)) (= x3025 (ite (not x164) 1 0)) (= x1144 (ite (or (and (< x2006 x3992) (= (<= x3992 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2006 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x3992 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2006))) 1 0)) (= x3992 (x2483 (+ x3222 115792089237316195423570985008687907853269984655499359237631748795939503996928)))) (and (=> (not x900) x796) (=> x900 x4630))) x3990))
(assert (x3142 x938))
(assert (x3142 x3874))
(assert (= (or (and (not x3732) x2188) (and (not x3535) x1406) x1528) x4614))
(assert (x3142 x654))
(assert (x3142 x1276))
(assert (= (=> (and (or (and x5130 (>= x2026 0) (< x2026 18446744073709551616) (>= 18446744073709551615 x2026)) (and (>= 18446744073709551615 x1724) (<= 0 x1724) (> 18446744073709551616 x1724) (not x5130))) (= x5130 (or (and (< (x216 x1011) 0) (= true (<= (x216 x1011) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x1011))))) x4953) x564))
(assert (x3142 x3393))
(assert (x3142 x863))
(assert (= (x88 (x1228 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (x3142 x2739))
(assert (x3142 x3465))
(assert (x3142 x1087))
(assert (x3142 x2109))
(assert (= x4523 (x4477 192)))
(assert (x3142 x2860))
(assert (x3142 x4080))
(assert (x1438 x4696))
(assert (= x4254 (=> (and (= (ite (not x4810) (not x4810) (and (= true (<= x301 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x301 170141183460469231731687303715884105727))) x143) (= (and (< 0 x301) (= true (<= x301 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x4810)) (and (=> (not x143) x269) (=> x143 x941)))))
(assert (x3142 x3727))
(assert (x3142 x3030))
(assert (x22 x4575 x601))
(assert (x3142 x4005))
(assert (x3142 x750))
(assert (x2786 x3062 x1021))
(assert (x3142 x3716))
(assert (x3549 x1266 x548))
(assert (= x617 (and (not x3534) x791)))
(assert (x3142 x2925))
(assert (x1438 x1061))
(assert (x3142 x2244))
(assert (= (=> (and (= x961 (= x2926 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x2926 (x216 x878))) (and (=> x961 x796) (=> (and (not x961) (= x29 x1011) (= x29 (x4965 (- 0 x2926)))) x1719))) x702))
(assert (= (x88 (x1228 3695885053)) 3695885053))
(assert (= (x88 (x3424 x2559)) x2559))
(assert (x3142 x1396))
(assert (x4568 x338 x2915))
(assert (x3142 x149))
(assert (x4136 x4339 x2272))
(assert (= (=> (and (< x2932 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2932) (= (= x2932 x21) x4026) (= (x3213 x33) x1213) (= x21 (x1999 1461501637330902918203684832716283019655932542975 x1213)) (= x47 1) (>= x2932 0) (= (x1123 x4045) x2932) (= x4045 (x4651 (x1228 1) (x1228 9) 0))) (and (=> x4026 x4377) (=> (not x4026) x349))) x4199))
(assert (x3142 x3290))
(assert (x3142 x1320))
(assert (x1438 x2868))
(assert (x3142 x3375))
(assert (x3142 x2366))
(assert (=> (> (+ 10000 1) x1334) (= (x3424 x1334) (x1228 x1334))))
(assert (x3142 x2128))
(assert (= (x3424 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1228 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x1438 x1655))
(assert (x3142 x2888))
(assert (x2786 x2800 x2036))
(assert (= (ite (= x2714 x3296) x3924 (x4204 x2714)) (x3255 x2714)))
(assert (x3142 x2859))
(assert (x3142 x2635))
(assert (x3142 x3721))
(assert (x2550 x3894 x3279))
(assert (x1438 x1775))
(assert (x2786 x4257 x4607))
(assert (x3142 x946))
(assert (x3142 x1278))
(assert (= (=> (and (>= x5067 0) (> 18446744073709551616 x5067) (<= x5067 18446744073709551615) (= x4689 (or (and (= true (<= x3763 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3763 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3763)))) (and (=> (not x4689) x2507) (=> x4689 x941))) x3421))
(assert (= (=> (and (= x3147 x2446) (= x514 x4750)) x3052) x2122))
(assert (x3142 x1424))
(assert (= x4983 (and x3734 (not x4147))))
(assert (=> (> (+ 10000 1) x2264) (= (x3424 x2264) (x1228 x2264))))
(assert (x3142 x3563))
(assert (x2487 x2672))
(assert (x3142 x5187))
(assert (x3142 x2933))
(assert (x4136 x4969 x2451))
(assert (x3142 x4042))
(assert (x3142 x2537))
(assert (= (=> (and (= x2884 (= x1647 0)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647)) x4209) (= x1120 (= x4656 0)) (= (x1999 x4590 x4239) x4656) (= (ite (not x2884) 1 0) x4590) (= (ite (< x4209 x5067) 1 0) x4239) (= x1647 (x1999 20282409603651670423947251286015 x1851))) (and (=> (not x1120) x796) (=> x1120 x3372))) x4124))
(assert (x3142 x632))
(assert (= (and x1501 x4310) x1639))
(assert (x3142 x4230))
(assert (= x2381 (=> (and (= x1990 (or (and (< x4691 0) (= true (<= x4691 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4691 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4691 (x4965 (- 0 x3763)))) (and (=> x1990 x941) (=> (not x1990) x2561)))))
(assert (x3142 x3025))
(assert (x1047 x1626 x5117))
(assert (x3142 x1869))
(assert (x3142 x4995))
(assert (= x2046 (x88 (x3424 x2046))))
(assert (x3142 x4840))
(assert (x3142 x1058))
(assert (x3142 x2018))
(assert (= (x4949 x1310) 0))
(assert (x3142 x1675))
(assert (x3142 x3430))
(assert (x3142 x4024))
(assert (x3142 x2025))
(assert (x3142 x3441))
(assert (x3142 x1190))
(assert (x3142 x430))
(assert (= true x843))
(assert (x3142 x2972))
(assert (= (x3424 20282409603651670423947251286015) (x1228 20282409603651670423947251286015)))
(assert (x1438 x3808))
(assert (x3142 x59))
(assert (x4568 x380 x652))
(assert (x493 x2920))
(assert (x3142 x671))
(assert (not x4509))
(assert (x3142 x4357))
(assert (x3142 x596))
(assert (x3549 x335 x2316))
(assert (x3142 x3358))
(assert (x22 x605 x2991))
(assert (x3142 x2409))
(assert (x3142 x858))
(assert (x3142 x4457))
(assert (x3142 x4752))
(assert (x3142 x2680))
(assert (x3142 x2976))
(assert (x3142 x3546))
(assert (x3142 x3234))
(assert (x1047 x410 x913))
(assert (x3142 x5132))
(assert (= x363 (and x4843 x3581)))
(assert (= x1804 (and x5031 (not x1272))))
(assert (= (x3424 4072275384) (x1228 4072275384)))
(assert (x3142 x957))
(assert (x3142 x5179))
(assert (x1438 x2106))
(assert (= (x1249 x1391) (ite (and x532 x3598) (x2900 x1391) (x4342 x1391))))
(assert (x3142 x3619))
(assert (x1438 x1213))
(assert (x3142 x452))
(assert (x3142 x3750))
(assert (= (and (not x143) x3559) x4100))
(assert (= x1824 (or (and x249 x1552) (and x5163 x538))))
(assert (=> (> (+ 10000 1) x4217) (= (x1228 x4217) (x3424 x4217))))
(assert (x3142 x2742))
(assert (x493 x3001))
(assert (x3142 x4350))
(assert (= (=> (= (= 274184521717934524641157099916833587233 x5203) x992) (and (=> (and (= (x2483 (+ 64 x1835)) x3635) (= (x2825 128) x4740) (= (x2825 224) x4682) (not (= 4062139261 x981)) (= x3502 (x2825 128)) (< x5009 1208925819614629174706176) (>= 1208925819614629174706175 x5009) (not (= x981 2362581449)) (= x1321 (x2825 160)) (>= 1208925819614629174706175 x443) (<= 0 x5009) (>= x3247 0) (not (< x3558 4)) (not (= x981 3257672857)) (= x725 x3558) (= (x2825 160) x87) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x352 (x2825 256)) (= x1625 (x2825 192)) (= x3308 (x2825 256)) (< x443 1208925819614629174706176) (= x3290 (x2483 (+ 32 x1835))) (= x1326 (x4651 (x3424 x4217) (x1228 1) 0)) (= x351 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= 160 x1413) (= 4 x3558) (<= 0 x1863) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3247) (not (< x981 2362581449)) (= (x2483 (+ 128 x1835)) x2817) (< 0 x3197) (= (x1050 (x3424 274184521717934524641157099916833587233)) x3197) (<= 0 x443) x992 (= x981 4272920204) (= x296 1) (= x205 (x2825 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (= x1443 (x2483 (+ x1835 96))) (= x824 (x2825 224)) (= (x721 x1326) x3247) (>= x2402 0)) x774) (=> (not x992) x3093))) x2092))
(assert (x3142 x4968))
(assert (x3142 x1926))
(assert (x3142 x3709))
(assert (= (=> (and (= x2172 x4750) (= x3147 0)) x2122) x137))
(assert (x3142 x4714))
(assert (x1438 x4535))
(assert (= (x2958 416) (ite (and x1188 x1976) (x304 416) (x361 416))))
(assert (x3142 x4115))
(assert (x3142 x3236))
(assert (x3142 x250))
(assert (x3142 x3745))
(assert (x3142 x1769))
(assert (x3142 x3088))
(assert (x3142 x2026))
(assert (x3142 x4319))
(assert (x3142 x3520))
(assert (x3142 x2975))
(assert (= (x3953 x478) (ite (= x478 x1029) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2958 x478))))
(assert (x3142 x4973))
(assert (x3142 x2403))
(assert (x2550 x4042 x842))
(assert (x3142 x3891))
(assert (x3142 x3022))
(assert (x3142 x3899))
(assert (x3142 x3051))
(assert (x3142 x2535))
(assert (x3142 x4513))
(assert (= (ite (= x3742 x1835) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x251 x3742)) (x5028 x3742)))
(assert (x3142 x3684))
(assert (x3142 x686))
(assert (x3142 x1434))
(assert (x3142 x480))
(assert (x3549 x1409 x1571))
(assert (x3142 x2777))
(assert (= (+ (x88 x474) 2) (x88 (x656 x474 2))))
(assert (x3142 x4476))
(assert (= x4748 (and (not x4772) x3868)))
(assert (x3142 x295))
(assert (x3142 x3114))
(assert (x3142 x1389))
(assert (x3142 x1773))
(assert (= x2726 (=> (and (= x2723 (> x2608 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x2608 (uninterp_mod (* x5036 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x2723 x2522) (=> (not x2723) x603)))))
(assert (x1438 x878))
(assert (x3142 x846))
(assert (= x3639 (=> (and (= x684 (x1999 x986 x1419)) (= x1618 (x2483 (+ x459 x356))) (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3927)) x1793) (= x1096 (x2483 (+ 31 x1954))) (= (and (< 0 x542) (= (<= x542 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x3692) (= x5209 x1650) (>= 1208925819614629174706175 x4084) (= (x2483 (+ 64 x2269)) x3886) (= x1674 (x1999 340282366920938463463374607431768211455 x542)) (= x2917 (x2483 (+ x5209 x3927))) (= x1650 (* x4970 x4591)) (= x4250 (x3020 x920)) (not (ite x4307 x4307 (and (> x542 170141183460469231731687303715884105727) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x542) true)))) (= (uninterp_mod (* x4553 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4970) (= x4859 (ite (not x4184) 1 0)) (not (= x3858 0)) (= x4307 (not x3692)) (= (ite (or (and (< x5209 x1628) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1628) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5209))) (and (> x5209 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1628))) 1 0) x1419) (= x684 0) (= x459 (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1096)) (= x986 (ite (or (> x3927 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3927)) (> 0 x3927))) 1 0)) (= (x1999 18446744073709551615 x4881) x4591) (= x4908 (x2483 (+ x2477 288))) (not (> x5209 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x4184 (or (and (= (<= x3927 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3927 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3927))) (= x1618 x3745) (= (x1999 x4859 x3309) x1934) (= x542 (x2077 x4908)) (= x1366 (x2077 x3122)) (= x5030 x2917) (= (x2077 x356) x4084) (< (* x4970 x4591) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1628 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3927))) (= (x2483 (+ x4765 64)) x920) (= (x2483 (+ 64 x356)) x2742) (not (or (> x1954 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1954 160) (= (<= x1954 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (<= x1366 1208925819614629174706175) (= (ite (or (and (< x1793 x5209) (= (<= x5209 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1793 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x1793 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5209))) 1 0) x3309) (= x4881 (x1689 x3886)) (= (x2483 (+ x2742 64)) x3122) (= x1934 0)) x4702)))
(assert (x3142 x1849))
(assert (x3142 x4596))
(assert (x3142 x1152))
(assert (x3142 x1775))
(assert (x22 x1061 x5139))
(assert (x4136 x2810 x976))
(assert (x1047 x2889 x2049))
(assert (x1438 x1851))
(assert (= (x3424 3368549995) (x1228 3368549995)))
(assert (= x2890 (=> (and (= x1453 (< x1831 x3150)) (= x1831 (x1999 20282409603651670423947251286015 x4257)) (= (x4965 (- 0 x3600)) x4257)) (and (=> (not x1453) x2019) (=> x1453 x941)))))
(assert (x3142 x1224))
(assert (x3142 x4924))
(assert (= (x1197 x2260) (ite (and x3245 x214) (x4207 x2260) (x3143 x2260))))
(assert (=> (> (+ 10000 1) x3395) (= (x1228 x3395) (x3424 x3395))))
(assert (= (=> (and (>= x5067 0) (< x5067 18446744073709551616) (= x1158 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3140) (and (= true (<= x3140 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x3140)))) (>= 18446744073709551615 x5067)) (and (=> (not x1158) x4649) (=> x1158 x941))) x3163))
(assert (x3142 x1170))
(assert (x3142 x883))
(assert (x1438 x1409))
(assert (x2487 x3040))
(assert (= x1612 (and x4729 x3488)))
(assert (x3142 x2248))
(assert (x3142 x582))
(assert (x3142 x1219))
(assert (x3142 x2901))
(assert (x3142 x1426))
(assert (x3142 x2075))
(assert (x3142 x4804))
(assert (x3142 x2710))
(assert (x3142 x1708))
(assert (= (or x2189 (and (not x1915) x54) (and (not x4222) x3642)) x3069))
(assert (x3142 x160))
(assert (x3142 x3203))
(assert (= x2426 (=> (and (= (x1999 20282409603651670423947251286015 x2800) x2038) (= (> x5067 0) x3627)) (and (=> x3627 x5230) (=> (not x3627) x963)))))
(assert (= (=> (and (= (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x4363) x943) (>= 18446744073709551615 x1040) (> 18446744073709551616 x1040) (= x4363 (x216 x2800)) (>= x1040 0)) (and (=> (not x943) x4525) (=> x943 x796))) x2847))
(assert (x3142 x3840))
(assert (= (x88 (x3424 x923)) x923))
(assert (x3142 x770))
(assert (x3142 x2211))
(assert (x1936 x3246 x2068 x706 x1981))
(assert (x3142 x134))
(assert (x3142 x3433))
(assert (= (and x3655 x1911) x1112))
(assert (x3142 x1160))
(assert (= (ite (= x1835 x3976) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x251 x3976)) (x5028 x3976)))
(assert (x3142 x1828))
(assert (x3142 x3920))
(assert (x3142 x4406))
(assert (x22 x3305 x705))
(assert (x3142 x2684))
(assert (x3142 x3010))
(assert (x3142 x2621))
(assert (x3142 x1180))
(assert (x2487 x5097))
(assert (x3142 x2028))
(assert (x3142 x5009))
(assert (x1438 x4716))
(assert (x3142 x4217))
(assert (x3142 x4520))
(assert (= (x88 (x3424 x1602)) x1602))
(assert (= (x4627 x4275) 0))
(assert (= (x3424 4062139261) (x1228 4062139261)))
(assert (= (=> (and (= x3646 (and (= true (<= x4042 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x4042))) (= x249 (ite (not x3646) (not x3646) (and (< 170141183460469231731687303715884105727 x4042) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4042)))))) (and (=> (not x249) x3294) (=> x249 x282))) x4178))
(assert (= 3840337785 (x88 (x1228 3840337785))))
(assert (x3142 x454))
(assert (x3142 x3573))
(assert (x3142 x3830))
(assert (x3142 x2656))
(assert (x1438 x248))
(assert (x3142 x2292))
(assert (x3142 x784))
(assert (x1438 x1819))
(assert (= (and (not x1341) x3980) x4645))
(assert (x3142 x1848))
(assert (x3142 x522))
(assert (x3142 x4755))
(assert (x3142 x40))
(assert (x3142 x3678))
(assert (= (+ 2 (x88 x528)) (x88 (x656 x528 2))))
(assert (x3142 x4868))
(assert (x22 x2119 x302))
(assert (=> (< (- x809 1) 10000) (= (x1228 x809) (x3424 x809))))
(assert (x3142 x4580))
(assert (= (=> (and (= (ite (not x2957) 1 0) x4390) (= x2563 (x1283 x2878)) (= (x1999 x4390 x5054) x1747) (= (x2483 (+ x4456 64)) x4730) (= x3612 (uninterp_mod (* x2712 x452) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (< x2214 x596) 1 0) x5054) (= x2878 (x2483 (+ x499 64))) (= (x1999 340282366920938463463374607431768211455 x4577) x452) (= (x1999 18446744073709551615 x1702) x596) (= x1702 (x4079 x4730)) (= x2527 (= 0 x1747)) (= x2214 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3612))) (= (= x3612 0) x2957)) (and (=> (not x2527) x4829) (=> x2527 x2959))) x2088))
(assert (x3142 x4919))
(assert (x3142 x4306))
(assert (x3142 x4808))
(assert (= 274184521717934524641157099916833587244 (x88 (x3424 274184521717934524641157099916833587244))))
(assert (x3142 x131))
(assert (x3142 x3395))
(assert (= x1528 (or (and x1030 x2079) x127)))
(assert (x3142 x3885))
(assert (x1438 x2725))
(assert (x3142 x1010))
(assert (x3142 x3388))
(assert (= (x5028 x1219) (ite (= x1835 x1219) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x251 x1219))))
(assert (x2786 x2946 x2115))
(assert (x3142 x1662))
(assert (x1438 x4068))
(assert (x3142 x3308))
(assert (= 826074471 (x88 (x1228 826074471))))
(assert (x3142 x1732))
(assert (x3142 x123))
(assert (x3142 x539))
(assert (= x1013 (x88 (x3424 x1013))))
(assert (x3142 x335))
(assert (x2786 x4180 x4327))
(assert (= (=> (and (= x3479 (and (= (<= x1939 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 0 x1939))) (= x1966 (ite (not x3479) (not x3479) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1939)) (> x1939 170141183460469231731687303715884105727))))) (and (=> (not x1966) x4662) (=> x1966 x941))) x1250))
(assert (= (x88 (x1228 274184521717934524641157099916833587210)) 274184521717934524641157099916833587210))
(assert (x1438 x989))
(assert (x3142 x1239))
(assert (x3142 x1324))
(assert (x3142 x4937))
(assert (x3142 x891))
(assert (x3142 x640))
(assert (x1438 x5054))
(assert (= (x3424 10141204801825835211973625643007) (x1228 10141204801825835211973625643007)))
(assert (= (x3424 1208925819614629174706176) (x1228 1208925819614629174706176)))
(assert (x4568 x209 x1741))
(assert (x3142 x1897))
(assert (x3142 x4907))
(assert (x4136 x3036 x3440))
(assert (x3142 x2904))
(assert (x3142 x3284))
(assert (x3142 x1229))
(assert (= (=> (and (= (x3603 x3318) x3379) (<= x701 1461501637330902918203684832716283019655932542975) (= x742 (= 0 x3379)) (= x3318 (x4651 (x3424 x701) x1547 0)) (= x3700 0) (<= x3379 255) (<= 0 x701) (= (x4651 (x1228 0) (x1228 9) 0) x2545) (< x3379 256) (= (x1123 x2545) x701) (> 1461501637330902918203684832716283019655932542976 x701) (= x1547 (x4651 (x3424 x3375) (x1228 11) 0)) (>= x3379 0)) (and (=> (and (= x2085 x4638) x742 (= x3877 x1594)) x4277) (=> (not x742) x4362))) x2368))
(assert (x3142 x1762))
(assert (x2786 x458 x1442))
(assert (x3142 x381))
(assert (x3142 x3188))
(assert (x3142 x4068))
(assert (x493 274184521717934524641157099916833587244))
(assert (x2786 x3763 x2616))
(assert (x3142 x5164))
(assert (x2487 x4910))
(assert (= x4847 (and (not x931) x109)))
(assert (x3142 x606))
(assert (x3142 x1581))
(assert (= x1498 (=> (and (= x2267 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (not x262) (= x400 (x5109 x1869)) (= (not x3596) x1882) (not (= x3459 826074471)) (not (= 2514000705 x3459)) (= x3155 x3989) (not (< x3459 826074471)) (= x4391 x3706) (= x3989 (x152 x4122)) (= (x1050 (x3424 274184521717934524641157099916833587231)) x104) (= 2835717307 x3459) (not (= x3459 1889567281)) (= x4634 x1236) (= x376 (x4965 (- x2588 x4391))) (= x683 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (= x262 (> x4391 x2588)) (= (x2483 (+ 36 x1869)) x3714) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3079) (>= 1461501637330902918203684832716283019655932542975 x506) (= x1752 (x1999 1461501637330902918203684832716283019655932542975 x506)) (= x4391 x5) (= (= 0 x400) x3596) (= (ite x1882 1 0) x1732) (= x2733 274184521717934524641157099916833587231) (= (or (and (< x411 64) (= true (<= x411 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x411)) x1003) (= (x1999 20282409603651670423947251286015 x2120) x3706) (= 68 x4634) (>= x3989 0) (= x411 (x4965 (- x4634 4))) (not (> 4 x4634)) (= x3648 274184521717934524641157099916833587231) (= (+ x3381 x3155) x1069) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2588) (> x400 0) (= (x3181 x2267) x2588) (= 274184521717934524641157099916833587210 x3370) (= x4122 (x4651 (x3424 x1251) (x1228 1) 0)) (not x1003) (= x3679 x506) (= x5 x3381) (= x2579 274184521717934524641157099916833587210) (= x1732 x400) (< (+ x5 x3989) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3989) (= x1236 (x4965 (- x536 x1869))) (< 0 x104) (<= 0 x2588) (= (x2483 (+ x1869 4)) x2699) (= x536 (x2483 (+ x1869 68))) (= x1251 (x1999 1461501637330902918203684832716283019655932542975 x506))) x5063)))
(assert (x3142 x1103))
(assert (= 65536 (x88 (x1228 65536))))
(assert (= (x4420 x2260) (ite (= x2260 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4949 x2260))))
(assert (x3142 x2551))
(assert (x3142 x4020))
(assert (x493 x2822))
(assert (x1438 x1022))
(assert (x3142 x5001))
(assert (x3142 x4296))
(assert (x1438 x3563))
(assert (= (ite (= x2346 x5089) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1249 x2346)) (x2828 x2346)))
(assert (x3142 x145))
(assert (x1438 x1405))
(assert (x3142 x2868))
(assert (x3142 x2475))
(assert (x3142 x2185))
(assert (x493 x3356))
(assert (x3142 x1174))
(assert (x3142 x2762))
(assert (x1438 x4582))
(assert (x1438 x108))
(assert (x1438 x3457))
(assert (x2786 x1011 x1157))
(assert (x1438 x1959))
(assert (= x4330 (=> (and (= x1869 x948) (> x4686 0)) x1498)))
(assert (x3142 x1363))
(assert (= 170141183460469231731687303715884105727 (x88 (x1228 170141183460469231731687303715884105727))))
(assert (x3142 x797))
(assert (= (x1228 18446744073709551616) (x3424 18446744073709551616)))
(assert (= (and x3829 x4062) x1911))
(assert (= (x3143 x4002) (ite (and x3734 x4147) (x3442 x4002) (x4676 x4002))))
(assert (x3142 x229))
(assert (= (x1228 3695885053) (x3424 3695885053)))
(assert (= (and x1284 (not x1400)) x5232))
(assert (= x1853 (=> (and (= 0 x1116) (= (x1999 x3663 x1405) x3260) (= x3380 x1131) (= x3380 (x2483 (+ x957 x1029))) (= (x2483 (+ x1029 64)) x3477) (= x3894 (x4340 x478)) (= x814 (* x537 x4850)) (= x2556 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x892))) (= (x4206 x3096) x4554) (= x3663 (ite (not x3298) 1 0)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x892) (and (< x892 0) (= (<= x892 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x3298) (<= x569 1208925819614629174706175) (= x3538 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x892))) (= x3927 x3106) (= (x1999 x2821 x3531) x1116) (= (x4340 x1029) x4618) (= (ite (or (and (<= x2556 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x4211 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2556 x4211) (= (<= x4211 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2556)))) 1 0) x3531) (= x2103 (and (= true (<= x3894 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x3894))) (= (x1999 340282366920938463463374607431768211455 x3894) x4643) (not (= x2532 0)) (= x4850 (x1999 18446744073709551615 x4554)) (= x478 (x2483 (+ 288 x1870))) (= x3801 (not x2103)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x4850 x537)) (= x3106 (x2483 (+ x892 x4211))) (not (or (> x736 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x736) true) (> 160 x736)))) (= x4211 x814) (= (x4340 x3996) x569) (= (x2978 x1997) x267) (= x1997 (x2483 (+ 64 x72))) (= (uninterp_mod (* x5051 x4643) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x537) (= x1405 (ite (or (and (<= x4211 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x3538 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x4211 x3538) (= (<= x3538 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x4211 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= (ite (or (> x892 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x892)) (> 0 x892))) 1 0) x2821) (= 0 x3260) (= (x2483 (+ x3477 64)) x3996) (not (ite x3801 x3801 (and (= (<= x3894 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x3894 170141183460469231731687303715884105727)))) (>= 1208925819614629174706175 x4618) (= (x2483 (+ x1733 64)) x3096) (= (x2483 (+ 31 x736)) x424) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4211)) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x424) x957)) x2877)))
(assert (x3142 x2331))
(assert (x1047 x432 x2922))
(assert (x4568 x4668 x934))
(assert (x3142 x3778))
(assert (x3142 x246))
(assert (= x2060 (and (not x859) x2081)))
(assert (x3142 x4239))
(assert (x3142 x3009))
(assert (x3142 x1020))
(assert (= (ite (= 960 x34) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2 x34)) (x1361 x34)))
(assert (= (and (not x4270) x45) x667))
(assert (x3142 x4104))
(assert (x3142 x4282))
(assert (x3142 x2054))
(assert (x1438 x497))
(assert (= (x88 (x3424 x3043)) x3043))
(assert (x3142 x4098))
(assert (= (x88 (x3424 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (= (and x303 x2328) x1026))
(assert (x4136 x1989 x1795))
(assert (x493 x4284))
(assert (x1438 x1620))
(assert (x3142 x3136))
(assert (x3142 x1579))
(assert (= (x1228 3833100637) (x3424 3833100637)))
(assert (= x2150 (or x624 (and x2590 (not x545)) (and x3984 (not x1607)))))
(assert (x1438 x4969))
(assert (x3142 x1792))
(assert (x3142 x3412))
(assert (x3142 x4570))
(assert (x3142 x418))
(assert (= x998 (=> (and (= (= 0 x2145) x1291) (= x4450 (x1999 340282366920938463463374607431768211455 x2400)) (= x3790 (ite (not x3723) 1 0)) (= x1864 (x4959 x2411)) (= (x2483 (+ 64 x646)) x468) (= (uninterp_mod (* x4450 x1525) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x615) (= (x2483 (+ x4669 64)) x2411) (= (ite (< x2823 x3871) 1 0) x2330) (= (= 0 x615) x3723) (= x3871 (x1999 18446744073709551615 x3036)) (= x2823 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615))) (= x3036 (x4612 x468)) (= x2145 (x1999 x3790 x2330))) (and (=> x1291 x2850) (=> (not x1291) x3362)))))
(assert (x3142 x395))
(assert (x3142 x3951))
(assert (x1438 x1931))
(assert (x3142 x1537))
(assert (= (+ (x88 x2596) 2) (x88 (x656 x2596 2))))
(assert (x493 x4935))
(assert (x3142 x1037))
(assert (x3142 x1355))
(assert (x3142 x1015))
(assert (= (x2774 x4709) (ite (= x4709 x3273) x681 (x879 x4709))))
(assert (x1438 x1349))
(assert (x3142 x2787))
(assert (x4568 x248 x1586))
(assert (x3142 x213))
(assert (= (or x43 (and (not x1636) x588)) x4197))
(assert (= (or (and x1188 x1976) (and x4293 x765)) x3984))
(assert (x3142 x4618))
(assert (x3142 x1609))
(assert (x1438 x2568))
(assert (x3142 x4371))
(assert (x1438 x3981))
(assert (x3142 x4725))
(assert (x3142 x1692))
(assert (x3142 x4120))
(assert (x3142 x1459))
(assert (x3142 x3287))
(assert (x1438 x1801))
(assert (x3142 x1135))
(assert (x3142 x3992))
(assert (x3142 x4893))
(assert (x3142 x748))
(assert (x3142 x2205))
(assert (x3142 x3970))
(assert (x2487 x4704))
(assert (x3142 x2157))
(assert (x3142 x4401))
(assert (x3142 x1288))
(assert (x3142 x3944))
(assert (x3142 x3578))
(assert (x22 x4828 x3159))
(assert (x3142 x3149))
(assert (= x520 (and x75 x4402)))
(assert (= (=> (and (= x317 (and (< 0 x3869) (= (<= x3869 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= (ite (not x317) (not x317) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3869)) (< 170141183460469231731687303715884105727 x3869))) x3259)) (and (=> (not x3259) x1673) (=> x3259 x4613))) x837))
(assert (= (and x1976 (not x1188)) x765))
(assert (x3142 x378))
(assert (x3142 x2038))
(assert (x3142 x5196))
(assert (x3142 x3638))
(assert (x493 x550))
(assert (x1047 x3268 x4684))
(assert (x3018 x1211))
(assert (x3142 x2761))
(assert (x3142 x3679))
(assert (x3142 x4121))
(assert (= (and x1532 (not x4466)) x1268))
(assert (x3142 x5165))
(assert (x1438 x908))
(assert (= (x1913 x34) (ite (= x34 x2576) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2930 x34))))
(assert (= (and x4981 x372) x3842))
(assert (x1438 x345))
(assert (x3142 x621))
(assert (x3142 x3767))
(assert (x2550 x4577 x460))
(assert (= x3061 (=> (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x514) (and (> 32 x514) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x514)))) x1400) (and (=> (not x1400) x4047) (=> (and (= x1749 true) x1400) x1245)))))
(assert (x3142 x4175))
(assert (x3142 x3376))
(assert (x4136 x24 x2469))
(assert (x3142 x2148))
(assert (x3142 x2085))
(assert (x3142 x3954))
(assert (x3142 x5083))
(assert (x3142 x4143))
(assert (x3142 x5115))
(assert (x3142 x4569))
(assert (x1438 x1211))
(assert (x3142 x2633))
(assert (x3142 x1281))
(assert (x493 x2264))
(assert (= x4719 (=> (= true x1749) x1245)))
(assert (x3142 x5057))
(assert (= (x2790 192) x2896))
(assert (x3142 x3957))
(assert (x3142 x3861))
(assert (x3142 x3185))
(assert (= (or (and (not x2529) x629) (and x1777 (not x3955))) x2123))
(assert (x3142 x2954))
(assert (x3142 x3135))
(assert (x3142 x4326))
(assert (x3142 x4490))
(assert (x3142 x4456))
(assert (x3142 x3230))
(assert (x1438 x2209))
(assert (x3142 x1577))
(assert (x3142 x4227))
(assert (= (or (and x2350 (not x237)) (and (not x933) x751)) x2100))
(assert (x3142 x2647))
(assert (= x4718 (=> (and (= x3659 (= x202 274184521717934524641157099916833587235)) (= x1211 (x216 x1315)) (= x2294 128) (= x202 (x1999 1461501637330902918203684832716283019655932542975 x2124))) (and (=> (not x3659) x2636) (=> (and (>= x3637 0) x3659 (<= x4350 1208925819614629174706175) (= x572 (x1441 128)) (= x167 (x1441 256)) (= x5167 (x1441 192)) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1208925819614629174706176 x888) (= (x1441 224) x4611) (= 160 x1722) (>= x4350 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (<= 0 x1834) (= x4442 (x4651 (x3424 x4217) (x1228 1) 0)) (not (< x222 2362581449)) (< x4350 1208925819614629174706176) (= (x1441 160) x2806) (= x399 115197700812830431890159100217698998050002284567939525164234024451216521560064) (not (< x896 4)) (not (= x222 3257672857)) (= x3637 (x2246 x4442)) (= 4 x896) (not (= 2362581449 x222)) (= (x1441 160) x771) (= x896 4) (= (x1441 128) x4054) (= x1579 (x1050 (x3424 274184521717934524641157099916833587235))) (<= x888 1208925819614629174706175) (= x533 (x1441 256)) (not (= 4062139261 x222)) (<= 0 x888) (= x3046 (x1441 224)) (< 0 x1579) (= (x1441 192) x3587) (= 4272920204 x222) (<= 0 x2353) (<= x3637 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2879 1)) x4018)))))
(assert (= x3523 (=> (and (= (x2483 (+ 31 x2471)) x2240) (= (x2483 (+ x556 x4087)) x2820) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2471) (and (< x2471 160) (= (<= x2471 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2871) (= x556 (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2240))) (and (=> x2871 x4318) (=> (not x2871) x2637)))))
(assert (= x394 (or (and x2199 x2126) (and x665 x1036))))
(assert (= x2689 (=> (and (= (x1123 x3689) x1573) (= (= x1958 x1573) x3422) (<= 0 x1573) (= (x5219 x849) x1357) (= (x4651 (x1228 0) (x1228 9) 0) x3689) (< x1573 1461501637330902918203684832716283019655932542976) (<= x1573 1461501637330902918203684832716283019655932542975) (= x3401 0) (= x1958 (x1999 1461501637330902918203684832716283019655932542975 x1357))) (and (=> (not x3422) x349) (=> x3422 x4779)))))
(assert (x3142 x2415))
(assert (x3142 x3702))
(assert (x3142 x902))
(assert (= x3998 (=> (and (>= x223 0) (>= x1754 0) (= (x5260 x3995) x284) (> 18446744073709551616 x889) (= (x3514 x3285) x4775) (<= 0 x3038) (= x3038 (x4007 x3995)) (<= x3038 18446744073709551615) (= (x2483 (+ 64 x945)) x1881) (>= 18446744073709551615 x889) (>= 18446744073709551615 x284) (> 18446744073709551616 x2895) (= (x2483 (+ x2345 64)) x3766) (= x96 (x1572 x5118)) (= (x2483 (+ x1662 288)) x945) (= x2552 (= 0 x3354)) (= x1421 (x2483 (+ x1662 512))) (= x4915 (x2483 (+ 64 x3766))) (= x3285 (x656 x735 2)) (<= 0 x889) (= (x2483 (+ x3918 64)) x3619) (>= x4775 0) (= x889 (x254 x3995)) (< x223 256) (= x786 (x193 x528)) (> 18446744073709551616 x284) (>= x284 0) (< x1754 1461501637330902918203684832716283019655932542976) (= (x2483 (+ 64 x1881)) x3918) (> 18446744073709551616 x3038) (<= x2895 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x786) (= x3354 (x1999 255 x96)) (<= x223 255) (>= 1461501637330902918203684832716283019655932542975 x1754) (= x1754 (x2147 x735)) (>= x786 0) (= (x4651 (x1228 0) (x1228 10) 0) x528) (<= 0 x2895) (= x735 (x656 x528 1)) (>= 340282366920938463463374607431768211455 x4775) (= x2895 (x200 x735)) (= x223 (x4551 x528)) (= x2345 (x2483 (+ x5118 64))) (= x5118 (x2483 (+ 384 x3157))) (= x2987 0) (< x786 1461501637330902918203684832716283019655932542976) (= (x656 x528 2) x3995) (< x4775 340282366920938463463374607431768211456)) (and (=> x2552 x626) (=> (not x2552) x648)))))
(assert (x3142 x4008))
(assert (x2786 x4232 x1779))
(assert (x493 x4356))
(assert (x3142 x2303))
(assert (x3142 x3774))
(assert (x3142 x4634))
(assert (= 10141204801825835211973625643007 (x88 (x1228 10141204801825835211973625643007))))
(assert (=> (> (+ 10000 1) x3356) (= (x3424 x3356) (x1228 x3356))))
(assert (x2786 x4582 x4756))
(assert (x3142 x655))
(assert (x3142 x1398))
(assert (x3142 x646))
(assert (x3142 x65))
(assert (x3142 x1929))
(assert (x3142 x1781))
(assert (x3142 x1101))
(assert (x3142 x1766))
(assert (x3142 x2659))
(assert (x3142 x2598))
(assert (x3142 x2662))
(assert (x3142 x202))
(assert (= (=> (and (= 274184521717934524641157099916833587210 x4031) (= (x1999 20282409603651670423947251286015 x4582) x746) (= x2761 (x1999 x5116 x1760)) (<= 0 x5190) (= x4326 x4646) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1129) (and (< x1129 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1129) true))) x4547) (= (x216 x2672) x1129) (>= x5067 0) (not (= 3795249780 x2419)) (= x5116 (ite (or (and (< x3574 0) (= (<= x3574 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x3574 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0)) (= x2109 (ite (or (and (> x3241 x980) (= (<= x3241 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x980))) (and (<= x3241 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x980 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (>= 1461501637330902918203684832716283019655932542975 x49) (= x3928 274184521717934524641157099916833587231) (= (x1050 (x3424 274184521717934524641157099916833587210)) x571) (= x3496 274184521717934524641157099916833587210) (= x4091 x4217) (not (< x1540 4)) (<= x4484 20282409603651670423947251286015) (not (= 404098525 x5248)) (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3574)) x3930) (= (x4965 (- x1540 4)) x5042) (= x3273 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (<= 0 x3439) (= x4548 x4326) (> 3950285521 x2419) (= x2982 (x4651 (x3424 x3900) (x1228 2) 0)) (= x3803 x2195) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4930) (and (= true (<= x4930 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4930 0))) x1237) (= x4537 x4999) (= x5248 599290589) (>= x3464 0) (= x206 x3439) (= (x1999 1461501637330902918203684832716283019655932542975 x3305) x3900) (= (x1999 1461501637330902918203684832716283019655932542975 x3305) x1602) (<= 0 x49) (= x1014 x3331) (= x1969 (x4965 (- x3241 x980))) (= 0 x1849) (= x2869 x4999) (not (< x2419 3283311230)) (< (+ x5190 x3331) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x1040 18446744073709551616) (= (ite (not x4547) 1 0) x2730) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x980)) (not (= 826074471 x3472)) (< (* x4907 x3135) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 100 x1540) (< 0 x2700) (not (< x2419 2059964113)) (= 274184521717934524641157099916833587210 x3638) (= x5190 (x879 x560)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x3434 x1005)) (<= x5190 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 128 x2773) (= (x1999 1461501637330902918203684832716283019655932542975 x3305) x550) (<= 0 x1676) (>= 1461501637330902918203684832716283019655932542975 x3305) (= (x1999 x2730 x2109) x502) (<= x5067 18446744073709551615) (= 1889567281 x3472) (= x3305 x49) (= (x1999 1461501637330902918203684832716283019655932542975 x3305) x4364) (= x4757 (ite (or (and (> 0 x1129) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1129) true)) (> x1129 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0)) (= (x3181 x2380) x1676) (not (< x5098 4)) (not (< 10141204801825835211973625643007 x746)) (>= x4484 0) (= x4982 x206) (= x2794 274184521717934524641157099916833587210) (= (x1999 20282409603651670423947251286015 x2672) x3214) (not (= 3695885053 x2419)) (= x230 (x4965 (- x3464 x894))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1676) (not (> x3214 10141204801825835211973625643007)) (= x1278 x968) (= x2641 (x1999 x380 x652)) (= x4234 (> x3331 x3464)) (= x2651 (* x4484 x5067)) (not (= 3798450084 x2419)) (> 18446744073709551616 x5067) (= (+ x1014 x3879) x681) (= x4928 x4582) (<= x3803 1461501637330902918203684832716283019655932542975) (not (< x3472 826074471)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x5141) (= x5190 x3879) (>= 1461501637330902918203684832716283019655932542975 x3439) (not x4916) (= (x4651 (x3424 x550) (x1228 1) 0) x4441) (> x571 0) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4895) (<= x3830 20282409603651670423947251286015) (= x3211 (> x894 x2960)) (= x4916 (or (and (= (<= x5042 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x5042 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5042))) (= x2626 (or (and (= true (<= x2531 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2531)) (> x2531 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1540 100) (<= 0 x1040) (= x2672 x2651) (= 3840337785 x2419) (= x5060 (x4965 (- x2960 x894))) (not (> 3695885053 x2419)) (= x49 x4857) (= x1785 274184521717934524641157099916833587210) (= x1278 x605) (not x4234) (= x1760 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1969) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4600)) (and (= (<= x4600 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1969)) (> x1969 x4600))) 1 0)) (= 0 x2641) (= x1648 (not x1237)) (= 274184521717934524641157099916833587210 x3233) (>= x2960 0) (not (= x5248 157198259)) (= x5098 36) (= x894 x3331) (= x2531 (x4965 (- x5098 4))) (<= 0 x3830) (= x4600 (x216 x4582)) (not (= x5248 117300739)) (< x4484 20282409603651670423947251286016) (= (x4651 (x3424 274184521717934524641157099916833587210) x2982 0) x996) (<= x3464 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4651 (x3424 x1602) (x1228 1) 0) x4938) (= x4076 x1317) (< 0 x3336) (not x4999) (<= x605 1461501637330902918203684832716283019655932542975) (<= x2960 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2700 (x1050 (x3424 274184521717934524641157099916833587231))) (= x4460 274184521717934524641157099916833587210) (>= 18446744073709551615 x1040) (< x5248 826074471) (= x3925 x4837) (= x652 (ite (or (and (> x4600 x3930) (= (<= x4600 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3930 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4600) (> x3930 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= (x4965 (- x980 x1129)) x3574) (= (x2483 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1129)) x3241) (not (ite x1648 (not (> x252 x4930)) x1648)) (= (x3452 128) x980) (= x380 (ite (not x3547) 1 0)) (= x2018 160) (< x3830 20282409603651670423947251286016) (= (ite (or (and (<= x980 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3691)) (and (= (<= x980 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3691 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x980 x3691))) 1 0) x4851) (>= 1461501637330902918203684832716283019655932542975 x2964) (= x4646 x894) (= 274184521717934524641157099916833587231 x5094) (not (= 3833100637 x2419)) (not x2626) (= x2621 274184521717934524641157099916833587231) (= x3920 x605) (not x3211) (= (x2483 (+ x3574 x4600)) x4930) (= (or (> x3574 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3574)) (> 0 x3574))) x3547) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x2380) (= 36 x5098) (= (x1050 (x3424 274184521717934524641157099916833587231)) x3336) (= x560 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (= x502 0) (= x3925 0) (<= 0 x2964) (= (* x1040 x3830) x4928) (= x1849 (x1999 x4757 x4851)) (= x3464 (x4050 x996)) (= x2960 (x3181 x4938)) (= x2913 x4548) (= (x2483 (+ x1129 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3691) (= x2761 0)) x2826) x5063))
(assert (= x1046 (and x3955 x1777)))
(assert (x3142 x3893))
(assert (x3142 x4245))
(assert (x3142 x4730))
(assert (x3142 x787))
(assert (x493 x1020))
(assert (= (and x1370 (not x2723)) x751))
(assert (x2786 x3388 x4155))
(assert (x3142 x4203))
(assert (x3142 x915))
(assert (x3142 x3527))
(assert (x1438 x35))
(assert (x3142 x1923))
(assert (x3142 x1008))
(assert (x3142 x2495))
(assert (= x3924 (x88 (x3424 x3924))))
(assert (= (and (not x379) x2516) x5079))
(assert (= (=> (= x1568 (= x1761 274184521717934524641157099916833587233)) (and (=> (not x1568) x1574) (=> (and (= x4121 (x5053 160)) (= x77 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x1598 (x1050 (x3424 274184521717934524641157099916833587233))) (= x616 160) (not (< x2758 4)) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x609 (x2483 (+ x2659 1088))) (<= 0 x2303) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (= x551 (x2483 (+ 1056 x2659))) (= x2239 (x5053 160)) (not (= 3257672857 x1950)) (= x3983 (x5053 256)) (< x443 1208925819614629174706176) (= (x5053 192) x2442) (= x4358 (x5053 128)) (>= x1863 0) (= (x5053 128) x757) (not (= 2362581449 x1950)) (= 4 x2758) (= 4272920204 x1950) (= (x2483 (+ 1024 x2659)) x83) (<= 0 x5009) (>= 1208925819614629174706175 x443) (<= x2303 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x1598) (< x5009 1208925819614629174706176) (= (x4651 (x3424 x4217) (x1228 1) 0) x2021) (>= x443 0) (= x3203 (x5053 224)) (= (x5053 224) x2263) (= (x5053 192) x4354) (<= x5009 1208925819614629174706175) (= (x721 x2021) x2303) (not (< x1950 2362581449)) (not (= x1950 4062139261)) (= x1971 (x5053 256)) (= x4610 (x2483 (+ x2659 992))) (= x114 x2758) (>= x2402 0) (= 1 x4053) x1568) x2768))) x2751))
(assert (x4136 x3981 x1658))
(assert (= (x886 x4709) (ite (and x3850 x2184) (x3063 x4709) (x2774 x4709))))
(assert (x3142 x2191))
(assert (x3142 x241))
(assert (x3142 x5250))
(assert (x3142 x367))
(assert (x4568 x986 x1419))
(assert (= (x1448 x1391) (ite (= 288 x1391) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4949 x1391))))
(assert (x1438 x2614))
(assert (x3142 x3683))
(assert (x3142 x207))
(assert (x2786 x3341 x1078))
(assert (x3142 x5050))
(assert (x3142 x1697))
(assert (x3142 x1608))
(assert (=> (> (+ 10000 1) x2822) (= (x1228 x2822) (x3424 x2822))))
(assert (x493 x701))
(assert (x3142 x3502))
(assert (x3142 x3352))
(assert (x3142 x5036))
(assert (= (or (and x3711 x1504) (and x300 x5091)) x4157))
(assert (x3142 x1356))
(assert (x3142 x4107))
(assert (= (x88 (x656 x1846 2)) (+ 2 (x88 x1846))))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x88 (x1228 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (= (or (and x667 (not x4328)) (and (not x3488) x4729)) x4023))
(assert (x3142 x4564))
(assert (= x3851 (=> (and (= (x1006 x2072) x4716) (= x1759 (x5260 x1141)) (= (x4007 x1141) x2993) (> 18446744073709551616 x883) (= (x1999 1461501637330902918203684832716283019655932542975 x4716) x562) (= (x2483 (+ 64 x3820)) x5214) (= x989 (x5059 x16)) (<= x1324 340282366920938463463374607431768211455) (> 340282366920938463463374607431768211456 x1324) (= x3102 (x2483 (+ 64 x4104))) (= (x2483 (+ 512 x3465)) x1708) (= x2949 0) (<= x1904 1461501637330902918203684832716283019655932542975) (= x2072 (x2483 (+ x3820 64))) (<= x883 18446744073709551615) (= (x2483 (+ x3465 288)) x3625) (< x3087 18446744073709551616) (< x2993 18446744073709551616) (= (x2483 (+ 64 x5214)) x4104) (= (x4651 (x1228 0) (x1228 9) 0) x4057) (<= 0 x5191) (<= 0 x1229) (= x1454 (x2483 (+ x231 64))) (= (x2483 (+ x3716 384)) x3820) (= (x1999 1461501637330902918203684832716283019655932542975 x989) x2894) (<= 0 x1904) (= x1904 x2894) (= x1324 (x3013 x1789)) (= x3087 (x254 x1141)) (>= x3891 0) (= x1587 (x193 x3239)) (<= 0 x2993) (<= 0 x1759) (> 256 x5191) (> 340282366920938463463374607431768211456 x3891) (= (x200 x3794) x883) (= (x656 x3239 2) x1141) (= 0 x1417) (= (x5059 x3625) x1608) (> 1461501637330902918203684832716283019655932542976 x1229) (>= 1461501637330902918203684832716283019655932542975 x1587) (>= 18446744073709551615 x1759) (= (x656 x3794 2) x3760) (= x158 (x2483 (+ 64 x16))) (= x1789 (x4651 (x3424 x3395) x2003 0)) (= x231 (x2483 (+ x158 64))) (= x2003 (x4651 (x3424 x4857) (x1228 6) 0)) (<= 0 x883) (>= 1461501637330902918203684832716283019655932542975 x1229) (<= 0 x1324) (<= x3891 340282366920938463463374607431768211455) (= x1635 4) (= (x4551 x3239) x5191) (>= 18446744073709551615 x3087) (= (x3514 x3760) x3891) (<= 0 x3087) (<= x5191 255) (> 1461501637330902918203684832716283019655932542976 x1904) (> 18446744073709551616 x1759) (= (= x562 274184521717934524641157099916833587235) x795) (> 1461501637330902918203684832716283019655932542976 x1587) (= x841 (x2221 x3820)) (= (x1123 x4057) x1904) (= x3395 (x1999 1461501637330902918203684832716283019655932542975 x1608)) (= (x2147 x3794) x1229) (= x1417 (x1999 255 x841)) (= x16 (x2483 (+ 288 x3465))) (>= x1587 0) (= 0 x1475) (>= 18446744073709551615 x2993) (= (x656 x3239 1) x3794) (= x3239 (x4651 (x1228 0) (x1228 10) 0))) (and (=> (not x795) x210) (=> (and x795 (= x2975 (x1576 192)) (= 160 x3184) (= x2165 4272920204) (= (x2483 (+ 288 x3820)) x1183) (<= 0 x4350) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2353) (not (= 2362581449 x2165)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x2258) (= x4385 (x1576 224)) (= (x2483 (+ x3820 352)) x4661) (>= x2353 0) (= (x1576 256) x1580) (= 1 x1053) (> 1208925819614629174706176 x888) (= x3177 (x1576 128)) (= x1646 (x2246 x4987)) (not (= x2165 3257672857)) (= (x1576 192) x3759) (= x553 (x1576 160)) (= (x1576 256) x1605) (= (x1576 128) x864) (= (x1576 160) x2454) (not (> 4 x831)) (<= 0 x1646) (<= x4350 1208925819614629174706175) (<= x1834 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4651 (x3424 x4217) (x1228 1) 0) x4987) (>= 1208925819614629174706175 x888) (= x4313 (x1576 224)) (= 4 x831) (>= x1834 0) (not (= x2165 4062139261)) (= x3951 (x2483 (+ x3820 384))) (< x4350 1208925819614629174706176) (= x831 x1635) (= x3393 (x2483 (+ x3820 320))) (not (> 2362581449 x2165)) (<= x1646 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x888) (< 0 x1085) (= (x1050 (x3424 274184521717934524641157099916833587235)) x1085)) x403)))))
(assert (x3142 x3501))
(assert (x3142 x3474))
(assert (x3142 x4933))
(assert (= (x88 (x3424 x3815)) x3815))
(assert (x3142 x1409))
(assert (x3142 x4673))
(assert (x3142 x1475))
(assert (x3142 x5122))
(assert (x3142 x2358))
(assert (x3142 x488))
(assert (= (ite (= x3296 x3999) x3924 (x4204 x3999)) (x3255 x3999)))
(assert (x22 x1655 x2784))
(assert (x3142 x4458))
(assert (x22 x3532 x1495))
(assert (x3142 x3700))
(assert (x3142 x3805))
(assert (x3142 x225))
(assert (x3142 x1506))
(assert (x3142 x263))
(assert (x1438 x1643))
(assert (= (x5129 x72) 0))
(assert (= x4972 (=> (and (= x761 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1758))) (= (= 0 x1758) x2648) (= x907 (= 0 x1216)) (= (ite (not x2648) 1 0) x5245) (= (x1999 x5245 x3029) x1216) (= x1758 (x1999 20282409603651670423947251286015 x4160)) (= x3029 (ite (< x761 x1040) 1 0))) (and (=> x907 x4818) (=> (not x907) x796)))))
(assert (x1438 20282409603651670423947251286015))
(assert (x3142 x3329))
(assert (x3142 x2007))
(assert (x1936 x4838 x1507 x1353 x2965))
(assert (x1438 x2891))
(assert (x3142 x1695))
(assert (= (x4944 x3976) (ite (and x310 x1198) (x2994 x3976) (x224 x3976))))
(assert (x1438 x841))
(assert (x3142 x5098))
(assert (x3142 x638))
(assert (x3142 x142))
(assert (= (and (not x1679) x1804) x800))
(assert (x1438 x4704))
(assert (x3142 x4202))
(assert (= (x1228 65536) (x3424 65536)))
(assert (x3142 x1433))
(assert (x3142 x1737))
(assert (= x588 (and x1738 (not x2383))))
(assert (= (ite (= x3861 x1708) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x5247 x3861)) (x3301 x3861)))
(assert (x3142 x3150))
(assert (x2487 x194))
(assert (= (and (not x4004) x577) x3630))
(assert (x3142 x1053))
(assert (x1438 x3869))
(assert (=> (< (- x4512 1) 10000) (= (x3424 x4512) (x1228 x4512))))
(assert (= x1777 (and (not x4352) x3094)))
(assert (x3142 x442))
(assert (x5234 x225 x3852))
(assert (x3142 x3029))
(assert (x3142 x3480))
(assert (x4568 x1358 x4633))
(assert (x3142 x1327))
(assert (x3142 x1785))
(assert (x3142 x2140))
(assert (x3142 x2479))
(assert (x3142 x5004))
(assert (x3142 x4231))
(assert (= x5086 (and x2867 x907)))
(assert (x3142 x4148))
(assert (= x4284 (x88 (x3424 x4284))))
(assert (= x3882 (x88 (x3424 x3882))))
(assert (= (or (and x830 (not x1742)) (and x1367 (not x1065))) x1784))
(assert (x3142 x905))
(assert (= (ite (= 128 x2048) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1395 x2048)) (x2281 x2048)))
(assert (x3142 x4013))
(assert (x3142 x4585))
(assert (= x2189 (or (and x4411 x3485) (and x4466 x1532))))
(assert (x3142 x726))
(assert (x1936 x4840 x716 x4879 x1133))
(assert (= x4735 (=> (and (= x1188 (= x1855 274184521717934524641157099916833587235)) (= x881 (x216 x2983)) (= x1855 (x1999 1461501637330902918203684832716283019655932542975 x2124)) (= 288 x1287)) (and (=> (and x1188 (>= x1834 0) (= 1 x4620) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1940) (= x3826 (x4070 224)) (<= 0 x1940) (= x1705 (x4070 192)) (= x4725 4) (not (= 4062139261 x5045)) (= (x4070 256) x3152) (= x4755 (x4070 160)) (<= 0 x2353) (<= x888 1208925819614629174706175) (= (x2246 x3306) x1940) (= x1190 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x4070 192) x912) (not (< x5045 2362581449)) (< x888 1208925819614629174706176) (= (x1050 (x3424 274184521717934524641157099916833587235)) x3662) (>= 1208925819614629174706175 x4350) (< 0 x3662) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (>= x4350 0) (= (x4070 128) x2342) (not (= 3257672857 x5045)) (= (x4070 224) x1049) (= 4 x4725) (= 4272920204 x5045) (= x3738 (x4070 160)) (= (x4651 (x3424 x4217) (x1228 1) 0) x3306) (not (< x4725 4)) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x946 (x4070 128)) (<= 0 x888) (= x3456 160) (not (= x5045 2362581449)) (= (x4070 256) x1847) (< x4350 1208925819614629174706176)) x3813) (=> (not x1188) x1592)))))
(assert (x3142 x2829))
(assert (x3142 x1670))
(assert (x3142 x1986))
(assert (x3142 x2434))
(assert (x2786 x5194 x1301))
(assert (x1438 x4232))
(assert (x3549 x2721 x1800))
(assert (x2786 x1665 x4904))
(assert (x3142 x1843))
(assert (x3142 x2944))
(assert (x3142 x1129))
(assert (= x4811 (x88 (x3424 x4811))))
(assert (x1438 x2866))
(assert (x493 x1013))
(assert (x3142 x341))
(assert (= (=> (and (>= 255 x1633) (> 1461501637330902918203684832716283019655932542976 x1609) (= (x4651 (x3424 x1609) x1530 0) x74) (= x1633 (x3603 x74)) (>= 1461501637330902918203684832716283019655932542975 x1609) (= (x4651 (x1228 0) (x1228 9) 0) x1430) (> 256 x1633) (<= 0 x1633) (= (x4651 (x3424 x2046) (x1228 11) 0) x1530) (>= x1609 0) (= (x1123 x1430) x1609) (= x4156 0) (= x1331 (= x1633 0))) (and (=> (not x1331) x3542) (=> (and x1331 (= x4127 x1131) (= x3927 x892)) x2877))) x1866))
(assert (x3142 x1647))
(assert (x3142 x5078))
(assert (x22 x1132 x1957))
(assert (= x1284 (and x1510 (not x181))))
(assert (x3142 x4103))
(assert (= (x58 x646) 0))
(assert (x3142 x156))
(assert (x22 x1873 x5224))
(assert (x3142 x458))
(assert (x3142 x1835))
(assert (= (=> (and (= (ite x184 1 0) x3417) (= x184 (not x3416)) (= x3774 x3569) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x311) true) (< x311 0)) (> x311 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3416)) x2200) x2070))
(assert (= (=> (= (= 0 x1275) x343) (and (=> x343 x2300) (=> (not x343) x3523))) x3483))
(assert (= (and (not x3428) x3303) x496))
(assert (x3142 x2106))
(assert (= x1902 (x88 (x3424 x1902))))
(assert (= (x88 (x1228 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (x3142 x1156))
(assert (x2487 x1748))
(assert (x22 x1213 x2466))
(assert (x3142 x4715))
(assert (x3142 x206))
(assert (x3142 x4435))
(assert (x3142 x277))
(assert (= x4795 (=> (and (= x1057 (x4651 (x1228 1) (x1228 9) 0)) (= (x4651 (x3424 x3375) (x1228 11) 0) x5233) (< x208 256) (> 1461501637330902918203684832716283019655932542976 x804) (<= 0 x208) (>= 1461501637330902918203684832716283019655932542975 x804) (>= 255 x208) (<= 0 x804) (= x804 (x1123 x1057)) (= (= x208 0) x4466) (= x208 (x3603 x3340)) (= x3340 (x4651 (x3424 x804) x5233 0)) (= 1 x4695)) (and (=> (not x4466) x3693) (=> (and (= x4386 x4638) (= x367 x1594) x4466) x758)))))
(assert (x3142 x3931))
(assert (x3142 x4374))
(assert (x3142 x4616))
(assert (x1438 x1058))
(assert (x1438 x898))
(assert (= x1678 (or (and (not x3565) x1153) (and x2251 (not x4592)))))
(assert (x3142 x4861))
(assert (x3142 x1888))
(assert (x3142 x4744))
(assert (= (=> (= x755 (or (and (< x523 0) (= true (<= x523 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x523 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (=> x755 x2095) (=> (and (= x4133 x1714) (not x755)) x3812))) x4565))
(assert (= (=> (= x1749 true) x1245) x963))
(assert (x3142 x1629))
(assert (x3142 x4579))
(assert (x3142 x2779))
(assert (x3142 x2050))
(assert (x2550 x3869 x4052))
(assert (x3142 x3743))
(assert (x1438 x687))
(assert (x3142 x1311))
(assert (x22 x1624 x1770))
(assert (x1438 x3243))
(assert (x3142 x3857))
(assert (x3142 x4794))
(assert (x4136 x5065 x3070))
(assert (= (=> (and (>= x1476 0) (= (x2483 (+ x2431 64)) x187) (= x1677 (x1999 1461501637330902918203684832716283019655932542975 x4794)) (= (x1123 x949) x1476) (< x1695 18446744073709551616) (<= x4533 18446744073709551615) (= x5001 x1476) (< x3302 18446744073709551616) (= x263 (x2483 (+ x364 64))) (>= x4533 0) (>= 255 x3838) (= (x1790 x2269) x4794) (= x3164 (x2483 (+ 64 x2477))) (= x1695 (x5260 x662)) (= (x4399 x1559) x4553) (= (x1999 1461501637330902918203684832716283019655932542975 x1061) x3085) (<= x4166 18446744073709551615) (>= x3838 0) (= x1061 (x2457 x4765)) (< x3838 256) (= (x3514 x3828) x549) (<= 0 x3508) (= 4 x2429) (>= 18446744073709551615 x1695) (= x3162 (x4651 (x3424 x4857) (x1228 6) 0)) (= (x2457 x364) x385) (>= 1461501637330902918203684832716283019655932542975 x3508) (< x4553 340282366920938463463374607431768211456) (= x4533 (x254 x662)) (> 18446744073709551616 x4166) (>= x549 0) (= x4516 (x4651 (x1228 1) (x1228 10) 0)) (> 1461501637330902918203684832716283019655932542976 x3508) (= x949 (x4651 (x1228 1) (x1228 9) 0)) (<= 0 x1695) (<= 0 x3302) (= x4166 (x200 x2601)) (= x925 (x2483 (+ x2976 64))) (= (x4551 x4516) x3838) (< x549 340282366920938463463374607431768211456) (= x142 1) (= x1977 1) (= x2431 (x2483 (+ 64 x263))) (= x2976 (x2483 (+ x3164 64))) (= x3508 (x2147 x2601)) (= (x4007 x662) x3302) (= (x2483 (+ x1131 288)) x4765) (= x1559 (x4651 (x3424 x3085) x3162 0)) (= (x2483 (+ x2477 64)) x2269) (= (x1999 255 x1626) x142) (> 1461501637330902918203684832716283019655932542976 x1476) (>= x4553 0) (= x1626 (x2886 x2477)) (> 18446744073709551616 x4533) (<= 0 x5093) (= (x656 x4516 1) x2601) (<= 0 x4166) (= (x656 x2601 2) x3828) (= (x193 x4516) x5093) (<= x1476 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x5093) (<= x3302 18446744073709551615) (<= x5093 1461501637330902918203684832716283019655932542975) (= x662 (x656 x4516 2)) (= x356 (x2483 (+ x1131 512))) (= (= 274184521717934524641157099916833587235 x1677) x1350) (>= 340282366920938463463374607431768211455 x4553) (= 1 x833) (= (x1999 1461501637330902918203684832716283019655932542975 x385) x5001) (= x364 (x2483 (+ 288 x1131))) (= x2477 (x2483 (+ x1131 256))) (<= x549 340282366920938463463374607431768211455)) (and (=> (not x1350) x2996) (=> (and (= 1 x3858) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4112) (>= x4112 0) (= x817 115197700812830431890159100217698998050002284567939525164234024451216521560064) (not (= 2362581449 x1152)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2353) (= x2149 (x2483 (+ x2477 384))) (< x4350 1208925819614629174706176) (<= 0 x4350) (= (x958 224) x4281) (= x2320 (x958 256)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (= x4009 (x2483 (+ x2477 352))) (< x888 1208925819614629174706176) (<= x888 1208925819614629174706175) (= (x958 160) x1880) (<= 0 x888) (= (x958 128) x2693) (not (= 4062139261 x1152)) (not (= x1152 3257672857)) (= (x958 192) x1706) (= x3413 (x2483 (+ x2477 288))) (= (x958 256) x3227) (= x4112 (x2246 x5207)) (= x1152 4272920204) (= (x958 160) x3361) (= x1338 (x1050 (x3424 274184521717934524641157099916833587235))) (= x5096 4) (> x1338 0) (= x5096 x2429) (= 160 x1954) x1350 (= (x958 192) x2365) (= (x2483 (+ x2477 320)) x3676) (= x2448 (x958 224)) (not (> 2362581449 x1152)) (not (< x5096 4)) (>= x1834 0) (= (x958 128) x4721) (>= x2353 0) (>= 1208925819614629174706175 x4350) (= (x4651 (x3424 x4217) (x1228 1) 0) x5207)) x3639))) x1478))
(assert (x493 274184521717934524641157099916833587227))
(assert (= x387 (=> (and (= x4678 x2007) (<= 0 x3830) (= (ite (> x1040 x2674) 1 0) x344) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)) x2674) (<= x3830 20282409603651670423947251286015) (= x4988 (= 0 x3830)) (< x3830 20282409603651670423947251286016) (= (* x4484 x5067) x4678) (<= 0 x1040) (= (= x4116 0) x64) (<= x1040 18446744073709551615) (= x3731 (ite (not x4988) 1 0)) (= (x1999 x3731 x344) x4116) (< x1040 18446744073709551616)) (and (=> (not x64) x796) (=> x64 x2113)))))
(assert (x1936 x3500 x1025 x3148 x4629))
(assert (= (and x5223 x1268) x2634))
(assert (x1936 x345 x3244 x4900 x5100))
(assert (x2786 x2482 x107))
(assert (x1438 x4486))
(assert (x3142 x2595))
(assert (x2487 x2120))
(assert (= (x88 (x1228 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x3142 x2478))
(assert (x2786 x2644 x1619))
(assert (= (+ 2 (x88 x735)) (x88 (x656 x735 2))))
(assert (x3142 x3053))
(assert (x3142 x1594))
(assert (x3142 x1205))
(assert (x3142 x2913))
(assert (x3142 x1294))
(assert (= (x88 (x3424 x3356)) x3356))
(assert (x3142 x740))
(assert (x3142 x3574))
(assert (x3142 x2125))
(assert (x3142 x197))
(assert (x22 x2475 x2041))
(assert (x3142 x2389))
(assert (x1438 x1939))
(assert (x3142 x2111))
(assert (= x4422 (or x5066 x2150)))
(assert (= (+ 1 (x88 x773)) (x88 (x656 x773 1))))
(assert (x3142 x1633))
(assert (= (ite (and x3734 x4147) (x3442 x5004) (x4676 x5004)) (x3143 x5004)))
(assert (x1936 x1226 x3733 x1688 x2668))
(assert (x3142 x3210))
(assert (x3142 x3664))
(assert (= (x88 (x3424 x809)) x809))
(assert (x3142 x2208))
(assert (= true x3175))
(assert (= (and (not x3633) x3842) x374))
(assert (x3142 x4250))
(assert (= (and x3258 x900) x165))
(assert (= x2113 (=> (and (>= 20282409603651670423947251286015 x458) (= (x890 x4111) x339) (= (* x1040 x3830) x4398) (<= x339 255) (= x2628 (x216 x458)) (= x4111 (x4651 (x3424 x4857) (x1228 5) 0)) (> 20282409603651670423947251286016 x458) (= x5123 (x2849 x4111)) (<= x2896 18446744073709551615) (<= 0 x5123) (= x2896 (x4314 x4111)) (<= 0 x2896) (> 65536 x1121) (= (or (and (= (<= (x216 x1851) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< (x216 x1851) 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x1851))) x3415) (= x1851 (x1360 128)) (< x339 256) (>= 65535 x1121) (>= x1121 0) (<= 0 x339) (>= x458 0) (= (x3255 x4111) x1121) (= x4398 x1890) (= (x3703 x4111) x458) (< x2896 18446744073709551616) (>= 18446744073709551615 x5123) (< x5123 18446744073709551616) (= x5221 128)) (and (=> x3415 x2918) (=> (not x3415) x322)))))
(assert (x3142 x4058))
(assert (= x3853 (or (and x4839 x873) (and x5014 x520) (and (not x4402) x75))))
(assert (x3142 x3019))
(assert (x3142 x285))
(assert (x3142 x103))
(assert (x1438 x3376))
(assert (= x2756 (and (not x554) x1784)))
(assert (= x1956 (=> (and (= x4821 (x2930 1088)) (= x3501 (x2930 960)) (= x1836 (x2930 992)) (= (x2483 (+ 960 x2659)) x2576) (not (ite x2720 x2720 (and (> x1836 170141183460469231731687303715884105727) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1836) true)))) (= x114 4) (= x3058 (= 274184521717934524641157099916833587235 x1761)) (= (not x2455) x2720) (not (= 0 x1168)) (<= x3501 1208925819614629174706175) (= (x2483 (+ x3601 31)) x4457) (>= 1208925819614629174706175 x4821) (= (and (= true (<= x1836 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1836 0)) x2455) (not (or (and (> 160 x3601) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3601) true)) (> x3601 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2659 (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4457)) (= (x1999 1461501637330902918203684832716283019655932542975 x2124) x1761)) (and (=> (not x3058) x2751) (=> (and (= (x215 224) x1737) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x770) (= x1234 (x215 160)) (not (> 4 x102)) (not (< x241 2362581449)) (= 4272920204 x241) x3058 (= x3345 (x2483 (+ 992 x2659))) (>= 1208925819614629174706175 x888) (= 160 x616) (= x3111 (x215 224)) (> 1208925819614629174706176 x888) (= x4053 1) (>= x2353 0) (= x4271 (x4651 (x3424 x4217) (x1228 1) 0)) (= (x2483 (+ 1056 x2659)) x872) (= x518 (x215 256)) (= x2128 (x215 128)) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x621 (x2483 (+ x2659 1024))) (not (= x241 4062139261)) (= x244 (x2246 x4271)) (>= 1208925819614629174706175 x4350) (= x4920 (x2483 (+ 1088 x2659))) (= x102 x114) (>= x244 0) (= (x215 192) x1685) (= x102 4) (= (x215 128) x369) (<= 0 x888) (<= x1834 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x1910) (= x4016 (x215 256)) (= (x215 160) x1927) (= x4674 (x215 192)) (>= x4350 0) (not (= x241 3257672857)) (< x4350 1208925819614629174706176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x244) (= (x1050 (x3424 274184521717934524641157099916833587235)) x1910) (not (= 2362581449 x241)) (<= 0 x1834)) x2768)))))
(assert (x3142 x2573))
(assert (x3142 x2165))
(assert (x3142 x3459))
(assert (x2487 x318))
(assert (x3142 x5051))
(assert (x3142 x771))
(assert (= (ite (= x4813 960) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2 x4813)) (x1361 x4813)))
(assert (x22 x1898 x2193))
(assert (x3142 x590))
(assert (x3142 x4470))
(assert (x3142 x3026))
(assert (x3142 x5218))
(assert (x22 x108 x3328))
(assert (= (x88 (x3424 x1946)) x1946))
(assert (= (x88 (x1228 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (x2487 x3062))
(assert (= x4778 (or (and x1268 (not x5223)) (and x4759 (not x2864)))))
(assert (x3142 x2195))
(assert (x3142 x49))
(assert (x3142 x2910))
(assert (=> (> (+ 10000 1) x2339) (= (x3424 x2339) (x1228 x2339))))
(assert (x3142 x4167))
(assert (x3142 x2794))
(assert (x3142 x3876))
(assert (x3142 x2448))
(assert (x3142 x3475))
(assert (x3142 x1317))
(assert (x3142 x2008))
(assert (x3142 x1586))
(assert (x2786 x3310 x969))
(assert (= x1244 (or (and x4954 x2285) (and x2069 x2541))))
(assert (x2786 x1135 x3048))
(assert (x3142 x4275))
(assert (x3142 x4303))
(assert (x3142 x1960))
(assert true)
(assert (x3142 x568))
(assert (x3142 x4022))
(assert (x1438 x3532))
(assert (x3142 x1910))
(assert (x3142 x1953))
(assert (x3142 x2993))
(assert (x1438 x3641))
(assert (x1438 x157))
(assert (= x665 (and x2527 x3510)))
(assert (x1438 x2109))
(assert (x3142 x3087))
(assert (x3142 x232))
(assert (x1438 x3790))
(assert (x3142 x4133))
(assert (x3142 x1499))
(assert (x3142 x2653))
(assert (= x1203 (=> (= (= 274184521717934524641157099916833587233 x4520) x1992) (and (=> (not x1992) x3156) (=> (and (<= 0 x2402) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x330) (<= x5009 1208925819614629174706175) (= (x1408 192) x1817) (= (x1408 256) x4734) (= x2696 (x1408 224)) (= (x1408 256) x4567) (= (x1408 224) x2573) (>= x443 0) (= x691 (x1050 (x3424 274184521717934524641157099916833587233))) x1992 (not (> 2362581449 x710)) (not (= 3257672857 x710)) (>= x3382 0) (= x829 (x4651 (x3424 x4217) (x1228 1) 0)) (not (< x3473 4)) (not (= x710 4062139261)) (<= x443 1208925819614629174706175) (<= 0 x5009) (< x5009 1208925819614629174706176) (>= x1863 0) (<= x2402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1208925819614629174706176 x443) (= (x1408 128) x1043) (= 160 x3601) (= x1168 1) (= x710 4272920204) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3382) (= (x721 x829) x3382) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 4 x3473) (= x4259 (x1408 128)) (= x479 (x1408 160)) (= x5196 (x1408 160)) (= x1423 (x1408 192)) (= x3473 4) (> x691 0) (not (= x710 2362581449))) x1956)))))
(assert (x3142 x4701))
(assert (= x3835 (=> (and (>= 18446744073709551615 x1040) (= x576 (= x3763 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (> 18446744073709551616 x1040) (>= x1040 0)) (and (=> (not x576) x2381) (=> x576 x796)))))
(assert (x1438 x652))
(assert (x1936 x2882 x4176 x5204 x3548))
(assert (x3142 x2196))
(assert (x1438 x153))
(assert (= (x1228 599290589) (x3424 599290589)))
(assert (x3142 x2414))
(assert (x3142 x1391))
(assert (x493 x4857))
(assert (x3142 x3081))
(assert (x3142 x2046))
(assert (x3142 x4416))
(assert (= x1137 (and (not x2467) x5086)))
(assert (x3142 x2765))
(assert (x3142 x3334))
(assert (x3142 x981))
(assert (x3142 x3708))
(assert (= (=> (and (= x2743 (x2483 (+ x3222 10141204801825835211973625643007))) (= x5168 (= 0 x4117)) (= (x1999 x2777 x2162) x4117) (= x2162 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2743) (<= x2006 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2743 x2006)) (and (> x2743 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2006 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= (ite (or (and (= true (<= x3222 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x3222)) (> x3222 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0) x2777)) (and (=> x5168 x4235) (=> (not x5168) x796))) x4630))
(assert (=> (< (- x701 1) 10000) (= (x3424 x701) (x1228 x701))))
(assert (= x282 x941))
(assert (= (x2571 160) x5123))
(assert (x1438 x398))
(assert (= 274184521717934524641157099916833587235 (x88 (x1228 274184521717934524641157099916833587235))))
(assert (x1047 x4120 x3814))
(assert (x3142 x1691))
(assert (x3549 x1718 x5108))
(assert (= (and x3060 x3415) x3980))
(assert (x3142 x1405))
(assert (x3142 x2644))
(assert (x3142 x3641))
(assert (x3142 x4226))
(assert (x3142 x20))
(assert (x3142 x4415))
(assert (x3142 x1222))
(assert (x3142 x411))
(assert (= (=> (and (= (x4965 (- 18446744073709551615 x1171)) x2441) (= x4305 (< x2441 x4319)) (= (uninterp_mod (* x1194 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1270) (= (x2790 192) x1058) (= (x1999 18446744073709551615 x1058) x4319) (= x1171 (x1999 18446744073709551615 x1270))) (and (=> (and (not x4305) (= (x1999 18446744073709551615 x2810) x810) (= (x2483 (+ x1171 x4319)) x2810)) x564) (=> x4305 x796))) x315))
(assert (x1438 x5065))
(assert (x3142 x2156))
(assert (= x3775 (=> (and (= x1409 (x2306 x5089)) (= x4576 (= x4393 x1409)) (= (x1999 1208925819614629174706175 x1409) x4393)) (and (=> x4576 x2312) (=> (not x4576) x4719)))))
(assert (x1438 x1096))
(assert (x3142 x37))
(assert (= x5073 (and x4100 x4880)))
(assert (x3142 x3172))
(assert (x3142 x4567))
(assert (= (x3286 x2912) (ite (= x2912 x1653) x266 (x3897 x2912))))
(assert (x3142 x1836))
(assert (x3142 x414))
(assert (x1438 x1144))
(assert (x3142 x1338))
(assert (x3142 x1867))
(assert (x3142 x5056))
(assert (= x532 (or (and x1799 (not x2690)) (and (not x2444) x3277))))
(assert (x1438 x2657))
(assert (x3142 x2908))
(assert (= (x88 (x1228 3833100637)) 3833100637))
(assert (= (and x3807 (not x1350)) x2116))
(assert (x3142 x1127))
(assert (x3142 x5167))
(assert (x3142 x3122))
(assert (x3142 x3357))
(assert (x3142 x2290))
(assert (x3142 x3326))
(assert (= x1859 (or x3071 x3752)))
(assert (x3142 x2721))
(assert (x1438 x1586))
(assert (= x4779 (=> (and (<= 0 x2712) (= (x4651 (x3424 x4857) (x1228 6) 0) x2701) (= x2366 (x1999 1461501637330902918203684832716283019655932542975 x2395)) (< x2712 340282366920938463463374607431768211456) (= (x105 x4456) x2395) (= (x4651 (x3424 x1902) x2701 0) x1374) (= x499 (x2483 (+ x2085 288))) (>= 340282366920938463463374607431768211455 x2712) (= (x2483 (+ 64 x3773)) x4456) (= (x1999 1461501637330902918203684832716283019655932542975 x1378) x1902) (= x2712 (x2104 x1374)) (= x1378 (x5219 x499)) (= x4001 (= x2366 274184521717934524641157099916833587235)) (= x1404 4)) (and (=> (not x4001) x3986) (=> (and (>= x1606 0) (not (= x4433 3257672857)) (>= x2353 0) (not (= 2362581449 x4433)) (= x4114 (x5087 160)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (>= x1834 0) (= x1606 (x2246 x2927)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1606) x4001 (= 160 x5115) (= (x2483 (+ x3773 352)) x4153) (>= 1208925819614629174706175 x4350) (= x271 (x5087 128)) (= x2635 (x5087 224)) (= x922 4) (= (x5087 192) x3041) (>= x4350 0) (= x973 (x5087 256)) (= 4272920204 x4433) (>= 1208925819614629174706175 x888) (= x115 (x5087 256)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2353) (= (x2483 (+ x3773 320)) x1545) (= (x5087 192) x5017) (= x2140 115197700812830431890159100217698998050002284567939525164234024451216521560064) (>= x888 0) (> x1539 0) (= (x5087 224) x325) (= x2927 (x4651 (x3424 x4217) (x1228 1) 0)) (< x4350 1208925819614629174706176) (= x4487 1) (= x1539 (x1050 (x3424 274184521717934524641157099916833587235))) (not (= 4062139261 x4433)) (not (> 4 x922)) (= x692 (x5087 160)) (= (x2483 (+ x3773 384)) x1246) (not (< x4433 2362581449)) (< x888 1208925819614629174706176) (= (x2483 (+ x3773 288)) x4570) (= (x5087 128) x4297) (= x922 x1404)) x867)))))
(assert (x3142 x1004))
(assert (x3142 x3927))
(assert (x3142 x3396))
(assert (x2786 x91 x3100))
(assert (= (ite x2076 (x4340 x4908) (x2958 x4908)) (x874 x4908)))
(assert (x3142 x5157))
(assert (x4136 x2921 x2004))
(assert (= 0 (x453 x4861)))
(assert (x1438 x209))
(assert (= (+ 1 (x88 x3478)) (x88 (x656 x3478 1))))
(assert (= (or (and (not x4201) x5044) x4422) x3224))
(assert (x3142 x687))
(assert (= x4943 (=> (and (= (= x2500 274184521717934524641157099916833587231) x4109) (= (x1999 1461501637330902918203684832716283019655932542975 x3532) x2500) (< 0 x5251)) (and (=> (and (= (x3703 x5137) x898) (or (and (= x5057 1) x5037) (and (= x62 (not x760)) (= x5057 0) (= x1126 (ite x62 (= 0 (x1999 340282366920938463463374607431768211455 x5148)) x62)) (= (= 0 x2234) x760) (not x5037))) (= (x4399 x2278) x4072) (= x5047 (x4651 (x3424 x4857) (x1228 6) 0)) (= (x3603 x3536) x1838) (= (x4651 (x3424 x1889) x4046 0) x5035) (= (x216 x898) x3555) (= x2196 (x308 x2865)) (= (x4651 (x3424 x4857) (x1228 5) 0) x5137) (= (x4651 (x3424 x4857) (x1228 5) 0) x4074) (<= 0 x898) (= x3408 (x4651 (x3424 x4857) (x1228 5) 0)) (= x3276 (x1999 340282366920938463463374607431768211455 x2120)) (= (x4651 (x3424 x1334) x5047 0) x4) (= x1885 (x1999 340282366920938463463374607431768211455 x5148)) (= (ite (not x558) 1 0) x1889) (= x3688 x4663) (not x4109) (= (x4204 x2033) x3043) (<= x4072 340282366920938463463374607431768211455) (>= 65535 x923) (>= 340282366920938463463374607431768211455 x2196) (= x3536 (x4651 (x3424 x3725) x2416 0)) (= (x1999 1461501637330902918203684832716283019655932542975 x3532) x3725) (not (> x4103 x2196)) (= (x4965 (- x2196 x4103)) x5237) (= (not x899) x3342) (>= x4993 0) (<= x2234 340282366920938463463374607431768211455) (= (x1079 x5035) x4993) (= x3688 (not x3125)) (= x4663 (not x857)) (= (x4651 (x3424 x3043) (x1228 12) 0) x4429) (<= 0 x2196) (= x3128 (or (> x3555 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x3555 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3555 0)))) (= x923 (x2504 x4074)) (>= x923 0) (>= x4072 0) (<= x3043 65535) (> 20282409603651670423947251286016 x898) (= x2663 (x1999 340282366920938463463374607431768211455 x5237)) (>= x1838 0) (= (x4651 (x3424 x3815) (x1228 2) 0) x2865) (= x5037 (ite (= 0 x2234) (not (= (x1999 340282366920938463463374607431768211455 x5148) 0)) (= x2234 0))) (>= 65535 x4993) (= (x4651 (x3424 x4857) (x1228 5) 0) x2033) (= x4284 (x1999 1461501637330902918203684832716283019655932542975 x3532)) (< x2196 340282366920938463463374607431768211456) (= x1334 (x1999 1461501637330902918203684832716283019655932542975 x3532)) (= (= x5057 0) x857) (not (> x3276 x2234)) (= (not x3342) x558) (= (x4651 (x3424 x4857) (x1228 6) 0) x2645) (>= x2234 0) (< x3043 65536) (= x2416 (x4651 (x3424 x4993) (x1228 11) 0)) (> 340282366920938463463374607431768211456 x2234) (= x3125 (= 0 x1838)) (<= 0 x3043) (>= 255 x1838) (or (and x3128 (not (> x4478 10141204801825835211973625643007)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3457) (and (= true (<= x3457 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x3457)))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1040 x1076)) (<= x1040 18446744073709551615) (= x3457 (x4965 (- 0 x3555))) (= x4704 x1071) (= x4616 (x4965 (- 0 x2075))) (not (= x3555 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x2075)) (< x1040 18446744073709551616) (= x1071 (* x1040 x1076)) (<= 0 x1040) (= (x216 x4704) x2075) (= x4616 x1315) (= (x1999 20282409603651670423947251286015 x4704) x4478) (= x1076 (x1999 20282409603651670423947251286015 x3457))) (and (not x3128) (not (< 10141204801825835211973625643007 x1868)) (<= x5067 18446744073709551615) (= x1315 x5194) (>= x5067 0) (< x5067 18446744073709551616) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x5067 x2695)) (= x1868 (x1999 20282409603651670423947251286015 x5194)) (= (* x2695 x5067) x3755) (not (or (and (> 0 x3555) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3555) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3555))) (= x5194 x3755) (= x2695 (x1999 20282409603651670423947251286015 x3555)))) (= x4103 (x1999 340282366920938463463374607431768211455 x2120)) (= (x1999 1461501637330902918203684832716283019655932542975 x3532) x4805) (>= 20282409603651670423947251286015 x898) (< x1838 256) (= (x1999 1461501637330902918203684832716283019655932542975 x3532) x3815) (= (x4399 x4) x2234) (= x2278 (x4651 (x3424 x4284) x2645 0)) (= (x4651 (x3424 x4805) x4429 0) x4046) (= x5148 (x4965 (- x2234 x3276))) (= (= 0 x5057) x899) (> 65536 x4993) (< x923 65536)) x4718) (=> (and (> 18446744073709551616 x1040) (or (and x3881 (= x3388 x688) (= x688 (ite (> x2090 x480) x3062 x2120)) (= (x1999 20282409603651670423947251286015 x3062) x480) (= (x216 x3062) x1621) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1621) (and (< x1621 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1621))))) (= x2090 (x1999 20282409603651670423947251286015 x2120))) (and (= x3388 0) (not x3881))) (= x4299 (x1999 20282409603651670423947251286015 x3388)) (= x3183 (x1999 20282409603651670423947251286015 x2008)) (= x2732 128) (< x5067 18446744073709551616) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5027) true) (> 0 x5027)) (> x5027 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3854) (>= x4820 0) (<= 0 x5067) (= (ite (or (and (> x927 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x346 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x346 x927) (= (<= x927 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x346)))) 1 0) x3007) (= x4523 (x4314 x4376)) (>= 18446744073709551615 x5067) (< x5067 18446744073709551616) (= (x216 x619) x2413) (<= 0 x3115) (>= 65535 x4820) (= x346 (x2483 (+ x5027 115792089237316195423570985008687907853269984655499359237631748795939503996928))) (= x4922 (+ x5020 x3384)) (= (x3703 x4376) x3115) (< x2842 256) (= x2137 (ite (not x3854) 1 0)) (= x1947 (or (> (x216 x1959) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 (x216 x1959)) (= true (<= (x216 x1959) 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x4965 (- x927 x5027)) x491) (= x1271 (x1999 x2137 x3007)) (or (and (= x239 x2644) (= (x216 x1959) x2439) (not x1947) (not (< 10141204801825835211973625643007 x1792)) (<= 0 x5067) (not (or (> x2439 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2439 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2439))))) (= (x1999 20282409603651670423947251286015 x1959) x935) (= x239 (* x935 x5067)) (= (x1999 20282409603651670423947251286015 x2644) x1792) (< (* x935 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x5067 18446744073709551615) (> 18446744073709551616 x5067) (= x2644 x3062)) (and (= x3988 (x4965 (- 0 x4675))) (= (x1999 20282409603651670423947251286015 x4180) x4784) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x113)) (not (= x4675 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (> 18446744073709551616 x1040) (= (* x1040 x4816) x3174) (not (< 10141204801825835211973625643007 x4784)) (= x4180 x3174) (= x4816 (x1999 20282409603651670423947251286015 x1135)) (= x3988 x3062) (= x1135 (x4965 (- 0 x113))) (= (x216 x1959) x113) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1040 x4816)) (<= 0 x1040) (= (x216 x4180) x4675) (>= 18446744073709551615 x1040) x1947 (not (or (> x1135 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1135 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1135 0)))))) (>= 18446744073709551615 x4523) (<= x4922 20282409603651670423947251286015) (= (not x5090) x653) (< 0 x5067) (= x1743 (x1999 20282409603651670423947251286015 x2120)) (<= x1040 18446744073709551615) (>= x4523 0) (or (and (= (x1999 20282409603651670423947251286015 x3475) x675) x1189 (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x2804)) (= (x1999 20282409603651670423947251286015 x1146) x1764) (= x4312 (x216 x491)) (not (= x4312 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x1146 (x4965 (- 0 x4312))) (< x1040 18446744073709551616) (<= x1040 18446744073709551615) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1146) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1146)) (> 0 x1146)))) (= x3475 (- (/ x1764 x1040) (uninterp_frac x1764 x1040))) (<= 0 x1040) (= x584 x619) (= x584 (x4965 (- 0 x2804))) (not (> x675 10141204801825835211973625643007)) (> x1040 0) (= x2804 (x216 x3475))) (and (= x3675 (x216 x491)) (= (x1999 20282409603651670423947251286015 x491) x2099) (not (< 10141204801825835211973625643007 x3769)) (not (or (> x3675 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x3675) (= true (<= x3675 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not x1189) (>= 18446744073709551615 x5067) (= x5088 x619) (= (x1999 20282409603651670423947251286015 x5088) x3769) (= x5088 (- (/ x2099 x5067) (uninterp_frac x2099 x5067))) (> 18446744073709551616 x5067) (< 0 x5067) (<= 0 x5067))) (<= x1040 18446744073709551615) (or (and (= (x1999 18446744073709551615 x24) x1818) (= (+ x1924 x4688) x3652) (>= 18446744073709551615 x3652) (not x1176) (= x2809 (* x417 x2185)) (= x2185 (x1999 20282409603651670423947251286015 x3334)) (= x4688 x1201) (= x1201 (x1999 18446744073709551615 x4761)) (= (x4965 (- x1724 x1818)) x2292) (= x417 (x1999 18446744073709551615 x2292)) (<= 0 x1724) (not (< x1724 x1818)) (<= x1724 18446744073709551615) (= (x4477 192) x3981) (> 18446744073709551616 x1724) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x417 x2185)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1201 x2940)) (= x2940 (x1999 18446744073709551615 x3981)) (= x2809 x4761) (= x24 (x1427 160)) (= x1924 x2940)) (and (< (+ x2472 x59) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1151 (x1427 160)) (not (= x498 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (>= 18446744073709551615 x4860) (= (x4477 192) x2456) (= x59 x3942) (= (x1999 18446744073709551615 x3497) x4560) (= x498 (x216 x3334)) (= (+ x4468 x3942) x4860) (= x1416 x634) (= x4006 (x1999 20282409603651670423947251286015 x4286)) (= (x1999 18446744073709551615 x634) x59) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x4560 x4006)) (not (> x3216 x2026)) (> 18446744073709551616 x2026) (= (* x4006 x4560) x1416) (= x3497 (x4965 (- x2026 x3216))) (= (x1999 18446744073709551615 x1151) x3216) (= (x4965 (- 0 x498)) x4286) (= x2472 x4468) (>= 18446744073709551615 x2026) x1176 (<= 0 x2026) (= x2472 (x1999 18446744073709551615 x2456)))) (< 0 x1040) (= (x4651 (x3424 x4857) (x1228 5) 0) x4376) (<= x5067 18446744073709551615) (= (x4965 (- x5165 x4299)) x3332) (= x3274 x1796) (= x3792 (x2849 x4376)) (< x3115 20282409603651670423947251286016) (>= x3830 0) x4109 (= (or (> (x216 x3334) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x3334)) true) (> 0 (x216 x3334)))) x1176) (or (and (>= 18446744073709551615 x1724) (<= 0 x1724) (< x1724 18446744073709551616) (not x4500)) (and (>= 18446744073709551615 x2026) (> 18446744073709551616 x2026) x4500 (>= x2026 0))) (= x2866 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2247) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x927)) (> x927 x2247)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x927) (> x2247 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x5020 x4202) (<= x1918 255) (= x4202 (x1999 20282409603651670423947251286015 x1796)) (>= 20282409603651670423947251286015 x3115) (= (x4965 (- x1743 x2535)) x3537) (> 256 x1918) (= x2808 (- (/ x4922 x1040) (uninterp_frac x4922 x1040))) (= x5165 (x1999 20282409603651670423947251286015 x94)) (< x1040 18446744073709551616) (= x1189 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x491)) (and (> 0 (x216 x491)) (= true (<= (x216 x491) 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x3859 (x1999 20282409603651670423947251286015 x3537)) (= x4500 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x619)) (and (= true (<= (x216 x619) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (x216 x619) 0)))) (= x2008 (- (/ x419 x5067) (uninterp_frac x419 x5067))) (= (x1000 128) x1959) (= 0 x1271) (>= 18446744073709551615 x3792) (<= x4484 20282409603651670423947251286015) (= x3975 0) (< x4484 20282409603651670423947251286016) (= x3975 (x1999 x5188 x2866)) (<= 0 x1918) (= x3384 x3859) (= x5188 (ite (or (and (= (<= x5027 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x5027)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5027)) 1 0)) (= x927 (x216 x3062)) (> 20282409603651670423947251286016 x3830) (<= 0 x2842) (= (x1999 20282409603651670423947251286015 x2808) x2107) (>= x1040 0) (>= x5067 0) (= x419 (x1999 20282409603651670423947251286015 x3332)) (= x2535 (x1999 20282409603651670423947251286015 x3388)) (= x5090 (= x2842 0)) (= (* x3830 x1040) x3274) (< x3792 18446744073709551616) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x5067 x4484)) (= x4820 (x4204 x4376)) (= x94 x4449) (= x3958 (x216 x3115)) (> 65536 x4820) (= x454 (x1999 20282409603651670423947251286015 x2120)) (= x4449 (* x4484 x5067)) (>= 20282409603651670423947251286015 x3830) (= x3334 (x1000 128)) (= (ite (not x653) 1 0) x3430) (not (> x454 10141204801825835211973625643007)) (= x3881 (and (> (x216 x3062) 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x3062)) true))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1040 x3830)) (not (< x1743 x2535)) (not (< x5165 x4299)) (> 18446744073709551616 x4523) (<= 0 x3792) (<= x2842 255) (<= 0 x1040) (= x1918 (x890 x4376)) (>= x4484 0) (= x5027 (x216 x2120)) (= x2247 (x2483 (+ 10141204801825835211973625643007 x5027))) (< (+ x3859 x4202) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1290)))))
(assert (x3142 x3882))
(assert (= 599290589 (x88 (x1228 599290589))))
(assert (= (+ (x88 x3744) 2) (x88 (x656 x3744 2))))
(assert (x1438 x5097))
(assert (x3142 x1098))
(assert (x1438 x3474))
(assert (=> (< (- x923 1) 10000) (= (x1228 x923) (x3424 x923))))
(assert (x3142 x2072))
(assert (x3142 x865))
(assert (= (x88 (x1228 3795249780)) 3795249780))
(assert (= x505 x796))
(assert (x3142 x2308))
(assert (x3142 x2242))
(assert (= (=> (and (= x467 (x1999 18446744073709551615 x3004)) (= (x1018 160) x723) (<= 0 x4933) (<= x4933 20282409603651670423947251286015) (= (x216 x4910) x1665) (= x1740 (x1999 255 x3268)) (= (x1999 65535 x225) x1059) (= (x3503 256) x3268) (= x4910 (x4819 128)) (= (x3703 x4348) x4933) (= x4348 (x4651 (x3424 x4857) (x1228 5) 0)) (= (x1999 20282409603651670423947251286015 x1665) x5078) (= x5018 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x2800)) true) (< (x216 x2800) 0)) (> (x216 x2800) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x225 (x2740 224)) (= (x5147 192) x3004) (= x1103 (x1999 18446744073709551615 x723))) (and (=> (and (not x5018) (= 288 x2912)) x2984) (=> x5018 x4992))) x4953))
(assert (x4136 x4554 x3220))
(assert (x3142 x329))
(assert (x1438 x711))
(assert (= (=> (and (= x2047 (x2483 (+ x1421 x1352))) (= (or (and (> 160 x3103) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3103) true)) (> x3103 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4270) (= x1352 (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3946)) (= (x2483 (+ 31 x3103)) x3946)) (and (=> (not x4270) x4623) (=> x4270 x4318))) x3533))
(assert (x3142 x3251))
(assert (x1438 x4707))
(assert (x1438 x3007))
(assert (= x1230 (=> (and (= x3750 (uninterp_mod (* x4261 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2199 (> x3750 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (=> x2199 x2526) (=> (not x2199) x5011)))))
(assert (x3142 x2044))
(assert (x3142 x3761))
(assert (x3142 x3456))
(assert (x3142 x3504))
(assert (x3142 x2688))
(assert (x1438 x2169))
(assert (x3142 x3056))
(assert (= x4649 (=> (and (= x1582 (= 0 x2746)) (= (ite (not x2837) 1 0) x209) (= x3192 (x1999 20282409603651670423947251286015 x3140)) (= (ite (< x4175 x5067) 1 0) x1741) (= (= x3192 0) x2837) (= (x1999 x209 x1741) x2746) (= x4175 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3192)))) (and (=> (not x1582) x796) (=> x1582 x3017)))))
(assert (= x476 (=> (and (= x5032 (x2483 (+ x4087 64))) (= x3840 (x1999 1208925819614629174706175 x2862)) (= (x2483 (+ 288 x382)) x2260) (= x5004 (x2483 (+ 64 x5032))) (= x2862 (x2805 x5004)) (= x2400 (x2805 x2260)) (= (= x3840 x2862) x393)) (and (=> x393 x5038) (=> (not x393) x658)))))
(assert (x3142 x5155))
(assert (x3142 x419))
(assert (x3142 x948))
(assert (x1438 x834))
(assert (x3142 x3832))
(assert (x22 x2424 x1584))
(assert (x3142 x47))
(assert (x1438 x94))
(assert (= (x1249 320) (ite (and x532 x3598) (x2900 320) (x4342 320))))
(assert (x2550 x5148 x3435))
(assert (x3142 x2203))
(assert (= 4033150093 (x88 (x1228 4033150093))))
(assert (x2786 x3892 x2512))
(assert (x1438 x1516))
(assert (x4568 x5116 x1760))
(assert (x1438 x3341))
(assert (= x3280 (and x4222 x3642)))
(assert (= x2749 x796))
(assert (x3142 x828))
(assert (x3142 x3930))
(assert (x3142 x720))
(assert (x3142 x4648))
(assert (x3142 x1934))
(assert (x3142 x3450))
(assert (x3142 x2700))
(assert (= 0 (x2295 x828)))
(assert (x3142 x4967))
(assert (=> (> (+ 10000 1) x3085) (= (x3424 x3085) (x1228 x3085))))
(assert (x3142 x2352))
(assert (x3142 x878))
(assert (x3142 x1767))
(assert (x4568 x3248 x4964))
(assert (x3142 x4575))
(assert (x3142 x2697))
(assert (x1438 x4633))
(assert (x3142 x3232))
(assert (= x1414 (=> (and (= (x1999 x2607 x4068) x32) (= (x1999 20282409603651670423947251286015 x2829) x5112) (= (x4965 (- x1724 x141)) x4796) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5112)) x3776) (= x4068 (ite (> x3880 x3776) 1 0)) (= x2607 (ite (not x3568) 1 0)) (= (= x5112 0) x3568) (= x3880 (x1999 18446744073709551615 x4796)) (= (= x32 0) x140)) (and (=> x140 x1652) (=> (not x140) x796)))))
(assert (x1438 x1315))
(assert (x3142 x2892))
(assert (x3142 x16))
(assert (x3142 x4908))
(assert (x1438 x4193))
(assert (x3142 x649))
(assert (= (=> (and (= x141 (x1999 18446744073709551615 x1499)) (>= x1724 0) (= x1499 (x2571 160)) (<= x1724 18446744073709551615) (< x1724 18446744073709551616) (= (> x141 x1724) x4332)) (and (=> x4332 x796) (=> (not x4332) x1414))) x2261))
(assert (= x4397 (=> (and (>= x720 0) (= x3310 x481) (= x4481 x4249) (= x3993 x4217) (= x390 (x1050 (x3424 274184521717934524641157099916833587210))) (= x4857 x1624) (> x390 0) (>= 1461501637330902918203684832716283019655932542975 x720) (<= x3185 1461501637330902918203684832716283019655932542975) (<= 0 x3185) (= x2190 (= x4837 0)) (= x3283 x4982) (>= x1624 0) (>= 1461501637330902918203684832716283019655932542975 x1624) (= x3185 x3283)) (and (=> (and (not x2190) (= x1749 true)) x1245) (=> x2190 x2630)))))
(assert (x1438 1461501637330902918203684832716283019655932542975))
(assert (x3142 x2987))
(assert (x493 x3728))
(assert (x1438 x3040))
(assert (x3142 x697))
(assert (= x1497 (and x4333 (not x4413))))
(assert (= (=> (= (= 0 x4487) x4529) (and (=> x4529 x1286) (=> (not x4529) x4531))) x867))
(assert (= (or x511 x3466) x3850))
(assert (x1438 x2120))
(assert (x3142 x3382))
(assert (x3142 x1933))
(assert (= x4642 (and x1859 x2102)))
(assert (x3142 x1927))
(assert (x3142 x126))
(assert (= (x1228 274184521717934524641157099916833587210) (x3424 274184521717934524641157099916833587210)))
(assert (x4568 x4241 x844))
(assert (x2786 x2371 x3730))
(assert (x3142 x5243))
(assert (= (or (and x4584 (not x914)) x2937) x4488))
(assert (x2487 x2209))
(assert (= x4919 (x88 (x3424 x4919))))
(assert (x2487 x1959))
(assert (= (x88 (x3424 x4356)) x4356))
(assert (x3142 x2801))
(assert (x3142 x3841))
(assert (x3142 x614))
(assert (x3142 x3353))
(assert (x22 x4794 x1332))
(assert (= (and x1120 x4847) x2465))
(assert (x1047 x226 x1106))
(assert (x3142 x1657))
(assert (x3142 x4379))
(assert (x3142 x2760))
(assert (x3142 x4343))
(assert (x493 x2086))
(assert (= (x88 (x656 x383 2)) (+ 2 (x88 x383))))
(assert (x1438 x2983))
(assert (x3142 x5159))
(assert (x3142 x4841))
(assert (= (=> (and (= (x1999 20282409603651670423947251286015 x4696) x4292) (= x2661 (> x4292 10141204801825835211973625643007)) (= (uninterp_mod (* x5067 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4696)) (and (=> x2661 x941) (=> (and (not x2661) (= x194 x4696)) x4572))) x3372))
(assert (x3142 x1940))
(assert (x3142 x3214))
(assert (x1438 x2800))
(assert (= x3369 (and x3570 x641)))
(assert (x3142 x2891))
(assert (x3142 x1085))
(assert (x3142 x3132))
(assert (x493 x1888))
(assert (x3549 x3307 x525))
(assert (x493 x2339))
(assert (x3142 x2547))
(assert (x3142 x1928))
(assert (x3142 x978))
(assert (x4136 x908 x3785))
(assert (x3142 x1997))
(assert (x3142 x2804))
(assert (x3142 x410))
(assert (= x701 (x88 (x3424 x701))))
(assert (x3142 x2223))
(assert (x3142 x3918))
(assert (= (and x755 x4601) x791))
(assert (x3142 x1384))
(assert (= x2168 (and (not x4109) x2676)))
(assert (x3142 x3870))
(assert (= (=> (and (= (x1999 1208925819614629174706175 x1156) x3441) (= x3488 (= x3441 x1156)) (= x1156 (x2805 x4087))) (and (=> x3488 x476) (=> (not x3488) x965))) x2637))
(assert (x3142 x1807))
(assert (x3142 x4681))
(assert (x3142 x4487))
(assert (x3142 x290))
(assert (x2786 x4707 x2558))
(assert (x3142 x2263))
(assert (x3142 x875))
(assert (x3142 x4610))
(assert (x2786 x4102 x4583))
(assert (x3142 x3254))
(assert (x3142 x1440))
(assert (x3142 x5023))
(assert (x3142 x3146))
(assert (x3142 x2746))
(assert (x3142 x439))
(assert (x1438 x2008))
(assert (x3142 x4083))
(assert (x3142 x821))
(assert (= x4318 (=> (= x1749 true) x1245)))
(assert (x2786 x1908 x5048))
(assert (x3142 x1168))
(assert (= (=> (= (= 274184521717934524641157099916833587227 x2521) x1679) (and (=> (and (= (x1999 1461501637330902918203684832716283019655932542975 x3474) x809) (= x1699 x1333) (= (x507 x695) x2000) (not (< x1333 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x4958) (not (= x4378 826074471)) (= x5022 x4188) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x695) (<= x2000 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2514000705 x4378)) (= (x2795 x1542) x3172) (>= x3172 0) x1679 (= 1 x3874) (= x4522 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (= (x4965 (- x1333 4)) x378) (= x3474 x3679) (>= x2000 0) (= x3468 274184521717934524641157099916833587210) (not x3564) (not (= 1889567281 x4378)) (= x2539 x3624) (= x4167 (x4965 (- x2000 x4188))) (>= 1461501637330902918203684832716283019655932542975 x3474) (= x4378 2835717307) (= x1333 68) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3172) (= 32 x3145) (< 0 x4065) (= x4188 x3624) (= x3172 x4438) (= (+ x2539 x4438) x2950) (= (> x4188 x2000) x3564) (< (+ x3172 x3624) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x4651 (x3424 x809) (x1228 1) 0) x1542) (not (< x4378 826074471)) (= (x1050 (x3424 274184521717934524641157099916833587227)) x4065) (= (x1999 1461501637330902918203684832716283019655932542975 x3474) x4639) (= 274184521717934524641157099916833587210 x1019) (not x2916) (= (or (and (< x378 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x378) true)) (> x378 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2916)) x3793) (=> (not x1679) x1432))) x122))
(assert (x3142 x1653))
(assert (x3142 x477))
(assert (x3142 x2482))
(assert (= x3190 (=> (and (<= 0 x5067) (= x4004 (or (and (< (x216 x2800) 0) (= true (<= (x216 x2800) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x2800)))) (<= x5067 18446744073709551615) (> 18446744073709551616 x5067)) (and (=> (not x4004) x2426) (=> x4004 x941)))))
(assert (= x4405 (=> (and (= x197 274184521717934524641157099916833587210) (= (< x1265 x3804) x1896) (= x3674 (x4651 (x3424 x1611) (x1228 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3804) (= x1611 (x1999 1461501637330902918203684832716283019655932542975 x4927)) (>= x3804 0) (= x1265 (x4965 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4290))) (= (x2748 x3674) x3804) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x3543) (= (x4965 (- x4226 x4290)) x169)) (and (=> (and (= 1 x3147) (= x4750 32) (= (x2483 (+ x4290 x3804)) x25) (= (x1999 1461501637330902918203684832716283019655932542975 x4927) x4317) (not x1896)) x2122) (=> x1896 x137)))))
(assert (x3142 x4560))
(assert (x3142 x3521))
(assert (= (x3424 4093572003) (x1228 4093572003)))
(assert (= x75 (and x4839 (not x873))))
(assert (x3142 x4590))
(assert (x3142 x1668))
(assert (x3142 x1234))
(assert (x3142 x94))
(assert (x22 x4927 x741))
(assert (x3142 x4716))
(assert (x4568 x1174 x4486))
(assert (x3142 x4009))
(assert (x3142 x3763))
(assert (x3142 x1452))
(assert (x3142 x299))
(assert (= x3212 (x88 (x3424 x3212))))
(assert (x3142 x2799))
(assert (x2550 x2503 x2139))
(assert (x3142 x231))
(assert (x3142 x2935))
(assert (= (ite x1809 (x5208 x1219) (x4944 x1219)) (x2276 x1219)))
(assert (x4136 x2292 x623))
(assert (x3142 x3939))
(assert (= x3962 (=> (= x3077 (= 274184521717934524641157099916833587233 x568)) (and (=> (not x3077) x4205) (=> (and (= x3997 (x2483 (+ 288 x3264))) (not (= x2410 4062139261)) (= (x521 192) x4801) (>= x2402 0) (= x3076 (x521 256)) (not (= 2362581449 x2410)) (not (= 3257672857 x2410)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1863) (< x5009 1208925819614629174706176) (= x2219 (x521 256)) (= 4 x552) x3077 (<= 0 x426) (= x673 (x521 192)) (= (x521 224) x3737) (= (x2483 (+ x3264 320)) x566) (>= 1208925819614629174706175 x443) (= (x1050 (x3424 274184521717934524641157099916833587233)) x1390) (= x552 x672) (= x686 1) (= x3436 (x2483 (+ 352 x3264))) (<= 0 x5009) (not (> 2362581449 x2410)) (= x1281 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x521 160) x3899) (not (< x552 4)) (= x4346 (x521 224)) (= x3622 (x4651 (x3424 x4217) (x1228 1) 0)) (= x4415 (x521 128)) (= (x721 x3622) x426) (= 4272920204 x2410) (= (x2483 (+ 384 x3264)) x1276) (= (x521 128) x1945) (<= 0 x1863) (<= x426 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x5009 1208925819614629174706175) (<= x2402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1208925819614629174706176 x443) (> x1390 0) (<= 0 x443) (= x3499 160) (= x1972 (x521 160))) x4423)))))
(assert (= x3362 x796))
(assert (x3142 x4696))
(assert (= x941 (=> (= true x1749) x1245)))
(assert (x3142 x882))
(assert (x3142 x6))
(assert (x3142 x2233))
(assert (x3142 x4345))
(assert (x3142 x727))
(assert (x3142 x1857))
(assert (= (x88 (x3424 x3375)) x3375))
(assert (x3142 x5153))
(assert (x3142 x385))
(assert (x3142 x2086))
(assert (x1438 x4886))
(assert (x3142 x5125))
(assert (x3142 x951))
(assert (x3142 x2446))
(assert (x3142 x5110))
(assert (x3142 x1488))
(assert (x493 x2909))
(assert (=> (< (- x2086 1) 10000) (= (x3424 x2086) (x1228 x2086))))
(assert (x3142 x3790))
(assert (x3142 x2657))
(assert (x22 x1751 x425))
(assert (= x1535 (and x2356 x3101)))
(assert (x3142 x5106))
(assert (x3142 x2773))
(assert (x3142 x208))
(assert (x3142 x4668))
(assert (x3142 x3653))
(assert (x3142 x3243))
(assert (x2550 x687 x4048))
(assert (x1438 x194))
(assert (x3142 x3949))
(assert (= x724 (and x2764 (not x1886))))
(assert (x3142 x1930))
(assert (= (x88 (x1228 117300739)) 117300739))
(assert (x493 x804))
(assert (= (and x1622 (not x3582)) x2081))
(assert (x493 x1602))
(assert (x1438 x2755))
(assert (x3142 x1013))
(assert (x3142 x3321))
(assert (= (x4540 x1310) (ite (= x2420 x1310) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x204 x1310))))
(assert (x3142 x5203))
(assert (x3142 x945))
(assert (x3142 x4749))
(assert (x3142 x3401))
(assert (x3142 x2317))
(assert (x3142 x5006))
(assert (x3142 x5151))
(assert (x2786 x1315 x2146))
(assert (x1438 x1156))
(assert (= (x2958 x3122) (ite (and x1188 x1976) (x304 x3122) (x361 x3122))))
(assert (x3142 x1218))
(assert (x493 x3725))
(assert (x3142 x4113))
(assert (= x4509 (=> (and (not (< x4893 3283311230)) (<= 0 x1640) (not (> 2059964113 x4893)) (= x2392 (= x2475 x3240)) (>= x4825 0) (= (and x4527 x1590) x4733) (<= 0 x156) (= x1363 x2195) (>= x968 0) (= x2195 x1294) (<= x787 1461501637330902918203684832716283019655932542975) (>= x5067 0) (= x3092 274184521717934524641157099916833587210) (= x1590 (not (= x4598 x2287))) (= x4857 x2437) (>= x2901 0) (<= 0 x4484) (>= 1099511627775 x902) (= 274184521717934524641157099916833587210 x5033) (>= 20282409603651670423947251286015 x2028) (= x2475 x4022) (<= x3240 1461501637330902918203684832716283019655932542975) (= x968 x2560) (<= x2026 18446744073709551615) (<= x2223 1461501637330902918203684832716283019655932542975) (<= 0 x1307) (>= 18446744073709551615 x1724) (>= x787 0) (<= x2015 1461501637330902918203684832716283019655932542975) (<= x968 1461501637330902918203684832716283019655932542975) (= (and x1645 x3208) x3031) (>= x2015 0) (>= x2842 0) (<= x888 1208925819614629174706175) (<= x911 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x156) (= x451 0) (= x788 (not (= x1294 x3736))) x546 (not (= x4893 3368549995)) (= x3539 (not x1060)) (= x156 x3736) (= (x4961 (x3424 274184521717934524641157099916833587223)) x2662) (= x2195 x4598) (<= 0 x4351) (<= 0 x911) (<= 0 x2026) (= x4022 x4517) x5229 (<= 0 x4804) (< x4893 3695885053) (= x3994 (not (= x285 274184521717934524641157099916833587210))) (<= 0 x5249) (= x4407 x2349) x3994 (>= 20282409603651670423947251286015 x3830) (>= x1812 0) (= (< 0 (x1050 (x3424 274184521717934524641157099916833587233))) x5229) (= (not (= x4517 x2513)) x4260) (<= x1040 18446744073709551615) x3031 (= x1329 (x1050 (x3424 274184521717934524641157099916833587210))) (<= 0 x2195) x4951 (>= x888 0) (<= x4350 1208925819614629174706175) (<= x2842 255) (= (x4961 (x3424 274184521717934524641157099916833587227)) x1307) (= x4951 (< 0 (x1050 (x3424 274184521717934524641157099916833587235)))) (= x4982 x2290) (<= x4825 18446744073709551615) (= x968 x2287) (>= 18446744073709551615 x5067) x404 (>= x3846 0) (= x1645 (not (= 274184521717934524641157099916833587210 x4115))) (<= x5159 1461501637330902918203684832716283019655932542975) (<= x5249 18446744073709551615) x98 x5238 (= x4351 (x4961 (x3424 274184521717934524641157099916833587231))) (= x3846 (x4961 (x3424 274184521717934524641157099916833587210))) (<= x5009 1208925819614629174706175) (= x4022 x850) (= (> (x1050 (x3424 274184521717934524641157099916833587244)) 0) x546) (<= 0 x443) (= x3208 (not (= x2560 274184521717934524641157099916833587210))) (<= x1812 255) (>= x2087 0) x3972 (>= 20282409603651670423947251286015 x4484) (= x5238 (> (x1050 (x3424 274184521717934524641157099916833587210)) 0)) (<= x443 1208925819614629174706175) (<= x2437 1461501637330902918203684832716283019655932542975) (= x968 x2513) (>= 1461501637330902918203684832716283019655932542975 x2475) (<= 0 x5159) (<= 0 x2028) (<= 0 x5009) (>= 1461501637330902918203684832716283019655932542975 x4022) (>= x1040 0) (<= 0 x2437) (not (< x4893 3368549995)) (<= x2317 1099511627775) x3237 (= x2901 (x4961 (x3424 274184521717934524641157099916833587233))) (>= 1461501637330902918203684832716283019655932542975 x2195) (>= x928 0) (= x2290 x2223) (= x2195 x4115) (= x3972 (< 0 (x1050 (x3424 274184521717934524641157099916833587223)))) (= x1060 x2349) (= x404 (and x788 x4733)) (= x3237 (> (x1050 (x3424 274184521717934524641157099916833587231)) 0)) (= (x4961 (x3424 274184521717934524641157099916833587244)) x4887) (>= 255 x2087) (<= 0 x839) (<= 0 x4887) (<= 0 x4350) (= x98 (< 0 (x1050 (x3424 274184521717934524641157099916833587227)))) (>= x3830 0) (<= 0 x2662) (= x4527 (and x4260 x3628)) (= 3454435393 x4893) (<= 0 x1724) (= x285 x4857) (= x451 x4837) (>= 20282409603651670423947251286015 x839) (< 0 x1329) (= x78 274184521717934524641157099916833587210) (>= x2317 0) (>= x530 0) (= x3240 x156) (>= x902 0) (<= x4804 255) (= (not (= x850 x1363)) x3628) (= x4857 x5159) (= (x4961 (x3424 274184521717934524641157099916833587235)) x928) (<= x530 18446744073709551615) (or (and (= x1388 (x4651 (x3424 x4811) x2816 0)) (= (x1999 1461501637330902918203684832716283019655932542975 x3240) x4811) (>= x2998 0) (= x2816 (x4651 (x3424 x3961) (x1228 3) 0)) (= x4078 x2998) (< x2998 256) (= x2998 (x1436 x1388)) (<= x2998 255) (not x2392) (= x3961 (x1999 1461501637330902918203684832716283019655932542975 x2475))) (and x2392 (= (ite x2392 1 0) x4078))) (<= 0 x4022) (>= 255 x1640) (= x1786 x2015) (<= 0 x2223)) x4826)))
(assert (= (and x2756 (not x1839)) x4781))
(assert (= x4623 (=> (and (= (= x1054 x2721) x4328) (= x1054 (x1999 1208925819614629174706175 x2721)) (= (x4207 x1421) x2721)) (and (=> (not x4328) x965) (=> x4328 x5213)))))
(assert (= x4400 (=> (and (= x2657 (- (/ x5052 x1040) (uninterp_frac x5052 x1040))) (= x3396 (x1999 20282409603651670423947251286015 x2657)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x2800)) (and (> 0 (x216 x2800)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x2800))))) x3540)) (and (=> x3540 x2847) (=> (not x3540) x3190)))))
(assert (x2786 x2808 x129))
(assert (=> (< (- x4857 1) 10000) (= (x3424 x4857) (x1228 x4857))))
(assert (= (ite (and x3598 x532) (x2900 x2544) (x4342 x2544)) (x1249 x2544)))
(assert (x3142 x5222))
(assert (x1438 x1311))
(assert (x3142 x5174))
(assert (x3142 x2371))
(assert (x493 x1889))
(assert (= (=> (and (= (x3213 x5258) x4828) (= (x1999 1461501637330902918203684832716283019655932542975 x4828) x3728) (= x4357 (x2104 x170)) (= (= x2364 274184521717934524641157099916833587235) x2094) (= x1403 4) (= x5258 (x2483 (+ x4638 288))) (>= 340282366920938463463374607431768211455 x4357) (<= 0 x4357) (= x3423 (x2483 (+ 64 x1075))) (= x2364 (x1999 1461501637330902918203684832716283019655932542975 x1751)) (= (x449 x3423) x1751) (= x42 (x4651 (x3424 x4857) (x1228 6) 0)) (> 340282366920938463463374607431768211456 x4357) (= x170 (x4651 (x3424 x3728) x42 0))) (and (=> (not x2094) x4666) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (< x4350 1208925819614629174706176) (<= 0 x2353) (= x1477 (x2483 (+ 288 x1075))) (= x3721 (x4489 128)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2352) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2353) (not (= x203 3257672857)) (= x1403 x3252) (= (x4489 160) x1380) (= (x1050 (x3424 274184521717934524641157099916833587235)) x1032) (= x1259 (x2483 (+ x1075 384))) (<= x4350 1208925819614629174706175) (= x3200 (x2483 (+ 320 x1075))) (= (x4489 192) x1978) (not (> 4 x3252)) (= x203 4272920204) (= x3299 1) (= x2352 (x2246 x1139)) (= x3252 4) (>= x4350 0) (= (x4489 160) x2423) (= (x4489 256) x2562) (= (x4489 192) x1433) (not (= x203 2362581449)) (= (x4651 (x3424 x4217) (x1228 1) 0) x1139) (<= 0 x888) x2094 (<= x888 1208925819614629174706175) (< x888 1208925819614629174706176) (= (x4489 224) x1928) (= 160 x3665) (= (x4489 256) x1452) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x4903) (>= x1834 0) (not (< x203 2362581449)) (not (= x203 4062139261)) (= (x4489 224) x3357) (= x438 (x4489 128)) (= (x2483 (+ x1075 352)) x3406) (< 0 x1032) (>= x2352 0)) x663))) x4377))
(assert (x3142 x2239))
(assert (x1438 x4257))
(assert (x1438 x1356))
(assert (x3142 x892))
(assert (= x1912 (and (not x1519) x386)))
(assert (x3142 x584))
(assert (= (x1913 x740) (ite (= x2576 x740) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2930 x740))))
(assert (x3142 x3676))
(assert (x3142 x345))
(assert (x3142 x549))
(assert (= (ite (= x3996 x1029) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2958 x3996)) (x3953 x3996)))
(assert (= (and (not x5163) x538) x67))
(assert (=> (> (+ 10000 1) x4985) (= (x1228 x4985) (x3424 x4985))))
(assert (x3142 x836))
(assert (= (and (not x1990) x4291) x3034))
(assert (x3142 x192))
(assert (x3142 x2346))
(assert (x493 x3815))
(assert (x493 x4985))
(assert (x3142 x1039))
(assert (x3142 x139))
(assert (x1438 x1842))
(assert (= (x3424 274184521717934524641157099916833587231) (x1228 274184521717934524641157099916833587231)))
(assert (x3142 x3952))
(assert (x1438 x709))
(assert (x3142 x1029))
(assert (= x2300 x941))
(assert (x3142 x5214))
(assert (= (and x67 x1291) x2968))
(assert (x3142 x2919))
(assert (x3142 x3797))
(assert (x3142 x3472))
(assert (x3142 x3691))
(assert (= (x1913 x4813) (ite (= x4813 x2576) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2930 x4813))))
(assert (x3142 x266))
(assert (x3142 x1393))
(assert (x3142 x1905))
(assert (x3142 x441))
(assert (x1438 x3309))
(assert (x3142 x3735))
(assert (= (x88 (x1228 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (= (x3424 3257672857) (x1228 3257672857)))
(assert (= (and x5073 (not x3865)) x4843))
(assert (= (and (not x3802) x2564) x4584))
(assert (x1438 x491))
(assert (= (and x2552 x363) x1921))
(assert (= (x88 (x3424 x2086)) x2086))
(assert (= x774 (=> (and (= x828 (x2483 (+ x1835 32))) (not (ite x1681 x1681 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4063)) (> x4063 170141183460469231731687303715884105727)))) (= x275 (x4944 x1835)) (= (x1999 340282366920938463463374607431768211455 x4063) x2495) (= x1714 (x2483 (+ x1835 x2108))) (= (x1999 255 x4120) x1459) (= (uninterp_mod (* (x14 x3081) x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x523) (not (or (and (> 160 x1413) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1413) true)) (> x1413 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (and (< 0 x4063) (= (<= x4063 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x5244) (= x1681 (not x5244)) (not (= x296 0)) (= x790 (> x1459 0)) (= (x2483 (+ 64 x1835)) x1930) (= (x2483 (+ x1413 31)) x3246) (= (x4944 x3742) x1543) (= x4063 (x4944 x828)) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3246) x2108) (<= x1543 1208925819614629174706175) (>= 1208925819614629174706175 x275) (= 0 x2029) (= (x2483 (+ 64 x1930)) x3742)) (and (=> x790 x2778) (=> (and (not x790) (= x1206 x1714) (= x477 x523)) x1273)))))
(assert (x3142 x4274))
(assert (x3142 x187))
(assert (x3142 x1793))
(assert (= x4291 (and (not x576) x1518)))
(assert (x3142 x2695))
(assert (=> (< (- x2936 1) 10000) (= (x3424 x2936) (x1228 x2936))))
(assert (x1438 x2330))
(assert (x3142 x4486))
(assert (x1438 x3803))
(assert (x2550 x2944 x4538))
(assert (x3142 x5067))
(assert (= x4066 (x88 (x3424 x4066))))
(assert (x1438 18446744073709551615))
(assert (x3142 x4190))
(assert (x3142 x3344))
(assert (x1438 x844))
(assert (x3142 x5121))
(assert (x3142 x3111))
(assert (x3142 x3089))
(assert (x3142 x5237))
(assert (= 0 (x4949 x5004)))
(assert (= 0 (x85 x331)))
(assert (x3142 x3147))
(assert (x3142 x3082))
(assert (x3142 x4769))
(assert (x3142 x3982))
(assert (= (x88 (x1228 4093572003)) 4093572003))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x4994) (= x583 0) (= (x4651 (x3424 x4857) (x1228 6) 0) x826) (>= 340282366920938463463374607431768211455 x2224) (= (x1999 1461501637330902918203684832716283019655932542975 x3931) x1215) (>= x4994 0) (= (x2483 (+ 288 x4127)) x72) (= (x254 x3011) x4177) (< x3959 18446744073709551616) (= (x2483 (+ 512 x4127)) x1029) (= x3529 (x2483 (+ x4127 288))) (>= x1938 0) (<= 0 x5051) (= (x4858 x1870) x2889) (= (x4651 (x1228 0) (x1228 9) 0) x1661) (= x4994 (x193 x3050)) (= (x475 x3529) x3931) (< x4994 1461501637330902918203684832716283019655932542976) (= x1938 (x2147 x988)) (<= x5051 340282366920938463463374607431768211455) (= (x4651 (x1228 0) (x1228 10) 0) x3050) (= x5051 (x4399 x4875)) (= (x475 x72) x1655) (< x1897 18446744073709551616) (> 18446744073709551616 x3816) (>= x3816 0) (>= x1897 0) (>= 1461501637330902918203684832716283019655932542975 x1938) (= x3284 (x2483 (+ 64 x3529))) (= 0 x1561) (<= x4177 18446744073709551615) (= (x656 x988 2) x2625) (>= x2951 0) (= 4 x37) (= (x1999 1461501637330902918203684832716283019655932542975 x1655) x1649) (= 0 x638) (= (= 274184521717934524641157099916833587235 x1425) x2182) (<= 0 x3959) (> 340282366920938463463374607431768211456 x2224) (= (x2483 (+ x731 544)) x1870) (= x1861 (x2483 (+ 64 x3284))) (= x2951 x1215) (> 256 x1575) (= x1425 (x1999 1461501637330902918203684832716283019655932542975 x1004)) (= (x4007 x3011) x3959) (= x1561 (x1999 255 x2889)) (>= 1461501637330902918203684832716283019655932542975 x2951) (= x3816 (x5260 x3011)) (< x4177 18446744073709551616) (= x1004 (x1463 x1733)) (>= 18446744073709551615 x3816) (= (x2483 (+ 64 x1870)) x620) (= (x656 x3050 2) x3011) (= x988 (x656 x3050 1)) (>= 255 x1575) (= x4745 (x2483 (+ 64 x620))) (= x4875 (x4651 (x3424 x1649) x826 0)) (= (x200 x988) x1897) (= (x2483 (+ x1861 64)) x5155) (>= x2224 0) (> 340282366920938463463374607431768211456 x5051) (= (x2483 (+ 64 x1870)) x1733) (<= 0 x1575) (= x1575 (x4551 x3050)) (<= x3959 18446744073709551615) (<= 0 x4177) (<= x1897 18446744073709551615) (= x4580 (x2483 (+ x4745 64))) (> 1461501637330902918203684832716283019655932542976 x2951) (< x1938 1461501637330902918203684832716283019655932542976) (= x2224 (x3514 x2625)) (= x2951 (x1123 x1661))) (and (=> (not x2182) x2999) (=> (and (= 4272920204 x2919) (= x4462 (x473 256)) (= (x1050 (x3424 274184521717934524641157099916833587235)) x4694) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2353) (= (x473 160) x159) (<= x4350 1208925819614629174706175) (not (= x2919 4062139261)) (= (x473 128) x492) (= x2532 1) (<= x1834 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2483 (+ 352 x1870)) x4564) (= x4722 (x2483 (+ 320 x1870))) (= (x473 224) x1087) (= x2160 (x473 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182) (>= x2353 0) (= 4 x2653) (<= 0 x4350) (not (> 4 x2653)) (not (> 2362581449 x2919)) (= x9 (x473 256)) (= x2925 (x473 128)) (> x4694 0) (= x3010 (x2483 (+ 384 x1870))) (< x4350 1208925819614629174706176) (>= x182 0) (not (= 3257672857 x2919)) (>= x1834 0) (= x37 x2653) (>= 1208925819614629174706175 x888) (= x1488 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x2483 (+ x1870 288)) x3355) x2182 (= x736 160) (= (x473 160) x1933) (not (= x2919 2362581449)) (= x756 (x4651 (x3424 x4217) (x1228 1) 0)) (= x182 (x2246 x756)) (<= 0 x888) (= x3512 (x473 192)) (= x1517 (x473 224)) (< x888 1208925819614629174706176)) x1853))) x3427))
(assert (x3142 x3414))
(assert (x3142 x25))
(assert (x3142 x4145))
(assert (x3142 x1019))
(assert (= (and x1262 x567) x2126))
(assert (x3142 x995))
(assert (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x88 (x1228 115197700812830431890159100217698998050002284567939525164234024451216521560064))))
(assert (= true x1381))
(assert (x3142 x2772))
(assert (= x4525 (=> (and (= x1842 (x4965 (- 0 x4363))) (= x2194 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1842) (and (= true (<= x1842 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1842 0))))) (and (=> x2194 x941) (=> (not x2194) x2490)))))
(assert (= (x1395 x3861) 0))
(assert (x1438 x1760))
(assert (x1438 x5070))
(assert (x1438 x4042))
(assert (= (x3424 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1228 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= (and x36 x461) x4336))
(assert (= (=> (and (= x4549 (x4965 (- 0 x3140))) (= x3205 (or (and (> 0 x4549) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4549) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4549)))) (and (=> (not x3205) x92) (=> x3205 x941))) x4085))
(assert (x1047 x1985 x5102))
(assert (x4568 x1264 x3685))
(assert (x3142 x3066))
(assert (x3142 x4481))
(assert (x1438 x2292))
(assert (x2786 x2007 x4162))
(assert (x4136 x1270 x937))
(assert (= (and x64 x4471) x3060))
(assert (x493 274184521717934524641157099916833587235))
(assert (x1438 x1226))
(assert (x3142 x3106))
(assert (= x3138 true))
(assert (x3142 x3027))
(assert (x3142 x2915))
(assert (x3142 x5210))
(assert (= (ite (and x4147 x3734) (x3442 128) (x4676 128)) (x3143 128)))
(assert (x3142 x2502))
(assert (x3142 x3862))
(assert (= 1099511627775 (x88 (x1228 1099511627775))))
(assert (x1438 1208925819614629174706175))
(assert (x3142 x3227))
(assert (= (x2679 x3976) (ite (= x3976 x1178) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4944 x3976))))
(assert (= (x88 (x1228 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (x3142 x4573))
(assert (= 0 (x4322 x2411)))
(assert (x4568 x2730 x2109))
(assert (x3018 x2399))
(assert (x3142 x3496))
(assert (x2786 x3376 x3400))
(assert (x3549 x4086 x111))
(assert (x3142 x3759))
(assert (x3142 x3092))
(assert (x3142 x688))
(assert (= (x3424 274184521717934524641157099916833587233) (x1228 274184521717934524641157099916833587233)))
(assert (x3142 x5258))
(assert (x3142 x1333))
(assert (= (x2958 288) (ite (and x1976 x1188) (x304 288) (x361 288))))
(assert (= (ite (and x2168 x3659) (x2186 160) (x575 160)) (x5247 160)))
(assert (x3142 x3197))
(assert (x2786 x4549 x4720))
(assert (x3142 x3341))
(assert (x3142 x467))
(assert (= (x4627 x2032) 0))
(assert (x3142 x2806))
(assert (x3142 x498))
(assert (x3142 x1946))
(assert (= x1552 (and x53 x4524)))
(assert (= (ite (= x740 x1835) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x251 x740)) (x5028 x740)))
(assert (= (x1395 x4908) 0))
(assert (x3142 x3815))
(assert (= (=> (and (= x3912 (ite (not x4344) 1 0)) (<= 0 x2842) (= x2568 (ite (< x2252 x5067) 1 0)) (= (= 0 x2842) x3519) (<= 0 x4484) (>= 255 x2842) (> 20282409603651670423947251286016 x4484) (= (= 0 x2207) x3461) (= (x1999 x3480 x2568) x2207) (>= x5067 0) (>= 20282409603651670423947251286015 x4484) (= x2252 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4484))) (= x3480 (ite (not x2683) 1 0)) (> 256 x2842) (= x2683 (= x4484 0)) (> 18446744073709551616 x5067) (<= x5067 18446744073709551615) (= x4344 (not x3519))) (and (=> (not x3461) x796) (=> x3461 x387))) x3351))
(assert (x3142 x222))
(assert (x22 x385 x73))
(assert (x3142 x3247))
(assert (x3142 x72))
(assert (x1438 x3305))
(assert (x3549 x4024 x2259))
(assert (x3142 x2693))
(assert (= (x1228 65535) (x3424 65535)))
(assert (x1438 x1750))
(assert (x1438 x5175))
(assert (= x663 (=> (= (= x3299 0) x838) (and (=> x838 x1286) (=> (not x838) x3945)))))
(assert (x3142 x910))
(assert (x1438 x2765))
(assert (x3142 x869))
(assert (x3142 x2735))
(assert (x3142 x4872))
(assert (x3142 x1421))
(assert (x493 x3085))
(assert (x3142 x5184))
(assert (x3142 x1676))
(assert (x3142 x1131))
(assert (x3142 x2824))
(assert (x3142 x2669))
(assert (= (x2958 320) (ite (and x1976 x1188) (x304 320) (x361 320))))
(assert (x3142 x3198))
(assert (= x4711 (and (not x1504) x3711)))
(assert (= (=> (and (= (x2483 (+ x1179 68)) x4296) (= x4868 (x2483 (+ 4 x1179))) (= (x4965 (- x4296 x1179)) x2415) (= (= 274184521717934524641157099916833587231 x13) x4060) (= (x2483 (+ x1179 36)) x4005) (= x13 (x1999 1461501637330902918203684832716283019655932542975 x4249)) (= (x1999 340282366920938463463374607431768211455 x3310) x3360)) (and (=> x4060 x2065) (=> (not x4060) x4440))) x235))
(assert (x3142 x3736))
(assert (=> (< (- x4805 1) 10000) (= (x1228 x4805) (x3424 x4805))))
(assert (x3142 x561))
(assert (x3142 x2947))
(assert (= (and x1871 (not x1316)) x5026))
(assert (x3142 x3589))
(assert (x493 x2612))
(assert (= (=> (and (= x3465 (x2483 (+ x3716 128))) (= (x5247 160) x1089) (= (< 0 x3520) x3535) (= (x5247 256) x446) (>= 1208925819614629174706175 x4974) (= (uninterp_mod (* (x14 x1211) x3431) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3091) (= x3002 (not x870)) (= x371 (x2483 (+ x1722 31))) (= (x5247 128) x4974) (not (ite x3002 x3002 (and (> x1089 170141183460469231731687303715884105727) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1089))))) (= x870 (and (> x1089 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1089) true))) (not (= 0 x2879)) (= x66 0) (= x3431 (x1999 340282366920938463463374607431768211455 x1089)) (<= x446 1208925819614629174706175) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1722) (and (= (<= x1722 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 x1722)))) (= x3520 (x1999 255 x4120)) (= x3716 (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x371))) (and (=> (and (= x3091 x311) (= x3569 x3465) (not x3535)) x2070) (=> x3535 x146))) x4018))
(assert (x3142 x96))
(assert (= (ite (and x214 x3245) (x4207 x5004) (x3143 x5004)) (x1197 x5004)))
(assert (=> (> (+ 10000 1) x3001) (= (x3424 x3001) (x1228 x3001))))
(assert (= (and (not x23) x81) x3510))
(assert (= (x88 (x656 x5241 2)) (+ 2 (x88 x5241))))
(assert (x3142 x4269))
(assert (x3142 x1850))
(assert (x3142 x4530))
(assert (x3142 x5022))
(assert (= (x88 (x3424 x4935)) x4935))
(assert (x3142 x2783))
(assert (x3142 x1772))
(assert (= x3701 (and x1466 (not x409))))
(assert (x3142 x2114))
(assert (x3142 x4298))
(assert (x3142 x1458))
(assert (x3142 x4450))
(assert (= (=> (= (= 274184521717934524641157099916833587233 x1425) x4025) (and (=> (and (= x2680 (x516 224)) (> 1208925819614629174706176 x443) (= (x516 160) x3841) (= (x1050 (x3424 274184521717934524641157099916833587233)) x1663) (>= x1863 0) (>= 1208925819614629174706175 x443) (= 4272920204 x3657) (not (= x3657 3257672857)) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2083) (= x3075 (x2483 (+ 288 x1870))) (= (x516 256) x3623) (= (x4651 (x3424 x4217) (x1228 1) 0) x3875) (<= 0 x2402) (>= 1208925819614629174706175 x5009) (= (x2483 (+ 384 x1870)) x3887) (>= x5009 0) (< x5009 1208925819614629174706176) x4025 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (= 1 x2532) (= x2083 (x721 x3875)) (= (x2483 (+ x1870 320)) x4909) (= 160 x736) (>= x2083 0) (= x5084 (x516 160)) (= x37 x2598) (= x1725 (x516 192)) (> x1663 0) (not (> 4 x2598)) (= (x516 256) x3329) (not (= 2362581449 x3657)) (= x4967 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x132 (x2483 (+ 352 x1870))) (= 4 x2598) (not (< x3657 2362581449)) (not (= 4062139261 x3657)) (<= 0 x443) (= (x516 224) x3936) (= (x516 192) x4948) (= (x516 128) x917) (= (x516 128) x3256)) x1853) (=> (not x4025) x3943))) x2999))
(assert (x3142 x4693))
(assert (x3142 x2932))
(assert (x3142 x1834))
(assert (x493 x4848))
(assert (x3142 x4946))
(assert (x3142 x4890))
(assert (x3142 x3625))
(assert (x3142 x3216))
(assert (x1438 x432))
(assert (x3142 x352))
(assert (= x4473 (=> (and (= x1670 0) (< x2961 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2961) (= (= x1125 0) x3865) (= x2961 (x1123 x979)) (= x3977 (x4651 (x3424 x2961) x4395 0)) (= x1125 (x3603 x3977)) (< x1125 256) (<= 0 x2961) (<= 0 x1125) (= (x4651 (x3424 x2822) (x1228 11) 0) x4395) (= x979 (x4651 (x1228 0) (x1228 9) 0)) (<= x1125 255)) (and (=> (and (= x486 x1662) x3865 (= x4300 x4962)) x2324) (=> (not x3865) x2747)))))
(assert (x3142 x3845))
(assert (x3142 x1474))
(assert (x1438 x4668))
(assert (= x2984 (=> (and (= x3089 (x2483 (+ 68 x2912))) (= 274184521717934524641157099916833587231 x2788) (= (x2483 (+ x2912 4)) x1641) (= (x4965 (- x3089 x2912)) x1515) (= 274184521717934524641157099916833587231 x5184) (= x1653 (x2483 (+ 36 x2912))) (= (x1999 20282409603651670423947251286015 x3310) x266)) x2665)))
(assert (= x3961 (x88 (x3424 x3961))))
(assert (x2786 x834 x1253))
(assert (x3142 x400))
(assert (x3142 x4295))
(assert (x3142 x3601))
(assert (= x648 (=> (= x1749 true) x1245)))
(assert (x3142 x2209))
(assert (x3142 x1132))
(assert (x4568 x3025 x1144))
(assert (x2786 x3457 x2738))
(assert (= x4839 x4739))
(assert (x3142 x51))
(assert (x3142 x1275))
(assert (= (x88 (x1228 157198259)) 157198259))
(assert (x3142 x3512))
(assert (= 1461501637330902918203684832716283019655932542976 (x88 (x1228 1461501637330902918203684832716283019655932542976))))
(assert (x3142 x2838))
(assert (x3142 x4813))
(assert (x3142 x2472))
(assert (= (=> (and (= 0 x4267) (> 1461501637330902918203684832716283019655932542976 x3882) (= x1554 (= 0 x3944)) (= x3882 (x1123 x2110)) (>= 255 x3944) (= (x4651 (x1228 0) (x1228 9) 0) x2110) (= (x4651 (x3424 x3001) (x1228 11) 0) x4158) (= x4665 (x4651 (x3424 x3882) x4158 0)) (>= 1461501637330902918203684832716283019655932542975 x3882) (>= x3882 0) (< x3944 256) (>= x3944 0) (= (x3603 x4665) x3944)) (and (=> (not x1554) x4565) (=> (and (= x3772 x1714) x1554 (= x2783 x523)) x3507))) x2778))
(assert (= (=> (= x3310 x277) (and (=> x4302 x941) (=> (and (not x4302) (or (and (= x2772 (ite x1394 1 0)) x1394) (and (>= 255 x1506) (= x2772 x1506) (< x1506 256) (= (x4651 (x3424 x4857) x362 0) x4687) (= (x1436 x4687) x1506) (>= x1506 0) (= x362 (x4651 (x3424 x4857) (x1228 3) 0)) (not x1394))) (= true x1394)) x789))) x4383))
(assert (x3142 x4745))
(assert (=> (> (+ 10000 1) x1345) (= (x3424 x1345) (x1228 x1345))))
(assert (= x4504 (and (not x3898) x3369)))
(assert (= x1570 (and x2590 x545)))
(assert (x3142 x1730))
(assert (= (and (not x2199) x2126) x2251))
(assert (x3142 x4675))
(assert (x3142 x3083))
(assert (= (or (and x4578 x992) (and x1198 x310)) x3054))
(assert (= x2996 (=> (= (= x1677 274184521717934524641157099916833587233) x1323) (and (=> (not x1323) x1381) (=> (and (= (x2483 (+ x2477 352)) x3917) (= x561 x2429) (= x3845 (x3129 256)) (not (= x4231 3257672857)) (= (x3129 160) x4459) (<= x5009 1208925819614629174706175) (= (x4651 (x3424 x4217) (x1228 1) 0) x1347) (= (x2483 (+ 384 x2477)) x3761) (= x561 4) (= x1766 (x3129 192)) (= (x3129 224) x5187) (>= x2402 0) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x794) (not (= x4231 2362581449)) (= (x1050 (x3424 274184521717934524641157099916833587233)) x1097) (= (x3129 160) x5076) (not (< x4231 2362581449)) (>= x5009 0) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x443 1208925819614629174706176) (= (x3129 256) x3033) (< x5009 1208925819614629174706176) (>= x443 0) (> x1097 0) (not (= x4231 4062139261)) x1323 (= x4010 (x3129 224)) (= (x2483 (+ 320 x2477)) x2159) (= x4231 4272920204) (<= x2402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1863 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2148) (not (< x561 4)) (= x1616 (x3129 128)) (= x2148 (x721 x1347)) (= x4464 (x3129 192)) (= x2731 (x3129 128)) (= 1 x3858) (= x3263 (x2483 (+ x2477 288))) (>= x2148 0) (= x1954 160) (<= x443 1208925819614629174706175)) x3639)))))
(assert (x3142 x4577))
(assert (= (x88 (x1228 3950285521)) 3950285521))
(assert (x3142 x2494))
(assert (x3142 x3877))
(assert (= x3458 (=> (and (= (x1999 255 x4120) x134) (not x1536) (= x1536 (> x134 2)) (= x1206 x915) (= x2502 x477)) x1273)))
(assert (x3142 x1625))
(assert (x3142 x4112))
(assert (x3142 x3973))
(assert (x3142 x3773))
(assert (x1438 x2808))
(assert (x3142 x2606))
(assert (x3142 x666))
(assert (= (ite (= 960 x3976) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2 x3976)) (x1361 x3976)))
(assert (x3142 x3032))
(assert (= (x1395 x5169) 0))
(assert (x3142 x468))
(assert (x3142 x2340))
(assert (x3142 x1032))
(assert (x3142 x481))
(assert (x3142 x501))
(assert (x3142 x537))
(assert (x3142 x1669))
(assert (x3142 x2367))
(assert (= (ite (= x1160 x1219) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2276 x1219)) (x3929 x1219)))
(assert (= x4542 (or (and x724 x1896) (and x2764 x1886) (and (not x3837) x2717) (and x4394 x585))))
(assert (= x2764 (and x3837 x2717)))
(assert (x3142 x5191))
(assert (x3142 x1969))
(assert (x3142 x1663))
(assert (x1438 x4212))
(assert (x3142 x1096))
(assert (x3142 x1597))
(assert (= (+ 1 (x88 x3050)) (x88 (x656 x3050 1))))
(assert (x4136 x4596 x3072))
(assert (x3142 x1667))
(assert (= (ite (and x1976 x1188) (x304 x4908) (x361 x4908)) (x2958 x4908)))
(assert (x3142 x5030))
(assert (x2487 x4886))
(assert (x3142 x4059))
(assert (x3142 x365))
(assert (x3142 x2175))
(assert (= x3112 (=> (and (= x2585 (= x4374 274184521717934524641157099916833587231)) (= (x1999 1461501637330902918203684832716283019655932542975 x4249) x4374)) (and (=> x2585 x3351) (=> (not x2585) x5138)))))
(assert (x3142 x3354))
(assert (= (x88 (x656 x528 1)) (+ 1 (x88 x528))))
(assert (x3142 x3191))
(assert (= (x3953 x4908) (ite (= x4908 x1029) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2958 x4908))))
(assert (x3142 x2216))
(assert (x3142 x2961))
(assert (x3142 x2822))
(assert (x1438 x634))
(assert (x3142 x3880))
(assert (= x4857 (x88 (x3424 x4857))))
(assert (= (x4944 x740) (ite (and x310 x1198) (x2994 x740) (x224 x740))))
(assert (x3142 x2437))
(assert (x3142 x5097))
(assert (= (=> (and (= (x2483 (+ 288 x5118)) x1848) (= (x1999 1208925819614629174706175 x5070) x1686) (= (x2483 (+ x2779 64)) x4002) (= (x4207 x1848) x4042) (= x4524 (= x5070 x1686)) (= x5070 (x4207 x4002)) (= (x2483 (+ x1421 64)) x2779)) (and (=> x4524 x4178) (=> (not x4524) x658))) x5213))
(assert (= x1412 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x924) (= x893 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (= (x1999 1461501637330902918203684832716283019655932542975 x1898) x4066) (<= 0 x924) (= (x4965 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2530)) x3358) (= x1182 274184521717934524641157099916833587210) (= x924 (x3325 x3154)) (= x3154 (x4651 (x3424 x4066) (x1228 1) 0)) (= x914 (> x924 x3358)) (= x2253 (x4965 (- x1492 x2530)))) (and (=> (and (not x914) (= 32 x2384) (= (x1999 1461501637330902918203684832716283019655932542975 x1898) x669) (= (x2483 (+ x924 x2530)) x2744) (= x4435 1)) x4608) (=> x914 x2724)))))
(assert (x3142 x3776))
(assert (x3142 x2439))
(assert (x3142 x2258))
(assert (x1438 x229))
(assert (x1438 x4474))
(assert (x3142 x1271))
(assert (x1438 x3268))
(assert (x3142 x571))
(assert (x3142 x2395))
(assert (x1438 x225))
(assert (= x3725 (x88 (x3424 x3725))))
(assert (x3142 x1206))
(assert (x3142 x4299))
(assert (x3142 x3225))
(assert (x3142 x4263))
(assert (= 2059964113 (x88 (x1228 2059964113))))
(assert (x3142 x1280))
(assert (= (ite (= x5107 x3861) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x845 x3861)) (x990 x3861)))
(assert (x3142 x5124))
(assert (x3142 x3499))
(assert (=> (> (+ 10000 1) x4752) (= (x1228 x4752) (x3424 x4752))))
(assert (= (x88 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= 274184521717934524641157099916833587210 (x88 (x3424 274184521717934524641157099916833587210))))
(assert (= x3052 (=> (= x181 (= x2446 0)) (and (=> (not x181) x3061) (=> x181 x941)))))
(assert (x3142 x153))
(assert (x3142 x3037))
(assert (x3142 x4102))
(assert (x3142 x3091))
(assert (x3142 x2712))
(assert (x3142 x4740))
(assert (x493 x1902))
(assert (x3142 x1938))
(assert (x3142 x2612))
(assert (x3142 x1686))
(assert (= (x88 (x3424 x3771)) x3771))
(assert (x3142 x4782))
(assert (x2487 x3475))
(assert (x3142 x287))
(assert (x3142 x3373))
(assert (x3142 x1714))
(assert (x3142 x3685))
(assert (= x4805 (x88 (x3424 x4805))))
(assert (x1438 x1151))
(assert (x1438 x2685))
(assert (x1438 x4239))
(assert (= x3395 (x88 (x3424 x3395))))
(assert (= x407 (and (not x3118) x2481)))
(assert (x3142 x844))
(assert (x3142 x3036))
(assert (x1438 x1718))
(assert (x2487 x834))
(assert (x3142 x1860))
(assert (x3142 x331))
(assert (x3142 x2397))
(assert (x3142 x1837))
(assert (= (+ 2 (x88 x773)) (x88 (x656 x773 2))))
(assert (x2786 x1146 x3544))
(assert (= (x88 (x656 x3050 2)) (+ (x88 x3050) 2)))
(assert (x3142 x3569))
(assert (x3142 x860))
(assert (x3142 x271))
(assert (x3142 x260))
(assert (= x712 (=> (and (= (ite (not x848) (not x848) (and (< 170141183460469231731687303715884105727 x4577) (= true (<= x4577 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x23) (= (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4577)) (< 0 x4577)) x848)) (and (=> x23 x4613) (=> (not x23) x2088)))))
(assert (x1438 x2863))
(assert (x2487 x491))
(assert (x3142 x4244))
(assert (= (and (not x3524) x4983) x2373))
(assert (x3142 x2938))
(assert (x3142 x5248))
(assert (x3142 x4934))
(assert (x3142 x2568))
(assert (x3142 x182))
(assert (x1438 x4910))
(assert (= x5160 (or (and x1042 x4529) (and x838 x2061))))
(assert (x3142 x2294))
(assert (x3142 x552))
(assert (x3142 x4284))
(assert (x3142 x1544))
(assert (x3142 x1256))
(assert (= (x3424 170141183460469231731687303715884105727) (x1228 170141183460469231731687303715884105727)))
(assert (x3142 x619))
(assert (= 0 (x1395 x2233)))
(assert (x3142 x3098))
(assert (x3142 x4459))
(assert (x3142 x1215))
(assert (x3142 x219))
(assert (x3142 x3233))
(assert (= 2835717307 (x88 (x1228 2835717307))))
(assert (x3142 x1750))
(assert (x3142 x3675))
(assert (x3142 x1111))
(assert (x1438 x2007))
(assert (x1438 x4249))
(assert (x3142 x2905))
(assert (x3142 x736))
(assert (=> (< (- x4811 1) 10000) (= (x1228 x4811) (x3424 x4811))))
(assert (= x2918 (=> (and (= x1531 (x216 x1851)) (>= x1040 0) (>= 18446744073709551615 x1040) (= x1341 (= x1531 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (> 18446744073709551616 x1040)) (and (=> x1341 x796) (=> (not x1341) x2658)))))
(assert (x3142 x2027))
(assert (x3142 x3783))
(assert (x3142 x3006))
(assert (x3142 x973))
(assert (x3142 x1470))
(assert (x1438 x3307))
(assert (x3142 x2610))
(assert (= (=> (= (or (> x3091 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x3091) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3091) true))) x3955) (and (=> (and (= x4366 x3465) (not x3955)) x3553) (=> x3955 x3851))) x46))
(assert (x3142 x3924))
(assert (=> (> (+ 10000 1) x1611) (= (x1228 x1611) (x3424 x1611))))
(assert (x3142 x1002))
(assert (x3142 x3477))
(assert (= (=> (and (= (x4651 (x3424 x2822) (x1228 11) 0) x3411) (= x2541 (= 0 x3136)) (> 256 x3136) (= x4985 (x1123 x2141)) (< x4985 1461501637330902918203684832716283019655932542976) (= x2141 (x4651 (x1228 1) (x1228 9) 0)) (>= 1461501637330902918203684832716283019655932542975 x4985) (<= 0 x4985) (= 1 x5210) (<= 0 x3136) (= (x4651 (x3424 x4985) x3411 0) x3710) (= x3136 (x3603 x3710)) (<= x3136 255)) (and (=> (and (= x1941 x486) x2541 (= x1389 x4300)) x868) (=> (not x2541) x3718))) x3484))
(assert (x3142 x757))
(assert (x493 x4650))
(assert (x3142 x438))
(assert (x3142 x1831))
(assert (x3142 x3892))
(assert (x3142 x2247))
(assert (= (=> (and (= x1857 0) (= x2172 x3932)) x1763) x5034))
(assert (x3142 x5235))
(assert (= (x3781 x4631) 0))
(assert (x1438 x723))
(assert (x3142 x421))
(assert (x3142 x2334))
(assert (x3142 x459))
(assert (= (=> (and (<= 0 x1196) (< x2333 18446744073709551616) (>= 255 x4534) (= (x1123 x4447) x4269) (< x2218 18446744073709551616) (= (x823 x4979) x272) (= x1280 (x2483 (+ x903 64))) (>= 1461501637330902918203684832716283019655932542975 x4269) (= x3030 (x2483 (+ 64 x781))) (= (x2483 (+ 64 x358)) x1479) (= (x4093 x4789) x35) (< x5077 340282366920938463463374607431768211456) (< x1196 340282366920938463463374607431768211456) (= x4789 (x2483 (+ 64 x4979))) (> 18446744073709551616 x4295) (= x1873 (x1601 x4934)) (= (x5260 x932) x4295) (>= 18446744073709551615 x2333) (= (x1999 1461501637330902918203684832716283019655932542975 x1873) x1888) (= (x2483 (+ x3772 512)) x1160) (= (= 274184521717934524641157099916833587235 x2326) x853) (= x2326 (x1999 1461501637330902918203684832716283019655932542975 x35)) (= (x4007 x932) x2463) (= 1 x2191) (<= x5077 340282366920938463463374607431768211455) (<= 0 x439) (<= x2463 18446744073709551615) (= x4800 (x4651 (x3424 x1888) x3698 0)) (<= 0 x2333) (= x4447 (x4651 (x1228 1) (x1228 9) 0)) (= (x3514 x5055) x5077) (<= x439 1461501637330902918203684832716283019655932542975) (= (x2483 (+ 64 x3030)) x1843) (>= x4534 0) (= (x2483 (+ 288 x3772)) x4934) (= (x193 x4036) x439) (>= 340282366920938463463374607431768211455 x1196) (> 1461501637330902918203684832716283019655932542976 x1768) (= x3698 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 6) 0)) (>= 1461501637330902918203684832716283019655932542975 x1768) (= x4036 (x4651 (x1228 1) (x1228 10) 0)) (= 1 x3767) (= x2333 (x254 x932)) (< x2463 18446744073709551616) (= (x1601 x903) x709) (= x5055 (x656 x2596 2)) (= 1 x1217) (= x3767 (x1999 255 x272)) (= (x2147 x2596) x1768) (> 1461501637330902918203684832716283019655932542976 x4269) (= x4269 x3410) (>= 18446744073709551615 x4295) (= x358 (x2483 (+ 64 x1280))) (<= 0 x4295) (= x932 (x656 x4036 2)) (= x4534 (x4551 x4036)) (= 274184521717934524641157099916833587210 x3392) (<= x2218 18446744073709551615) (= (x656 x4036 1) x2596) (<= 0 x5077) (> 256 x4534) (>= x2218 0) (<= 0 x2463) (= (x200 x2596) x2218) (> 1461501637330902918203684832716283019655932542976 x439) (= (x1999 1461501637330902918203684832716283019655932542975 x709) x3410) (= x513 4) (= x1196 (x2104 x4800)) (= x781 (x2483 (+ x4979 64))) (= (x2483 (+ x3772 256)) x4979) (<= 0 x4269) (>= x1768 0) (= x903 (x2483 (+ x3772 288)))) (and (=> (not x853) x2945) (=> (and (not (> 4 x2914)) (= (x1128 128) x2397) (= x5164 (x1128 128)) (<= x4350 1208925819614629174706175) (= x3817 (x1128 256)) (= x4098 (x1128 224)) (not (= x2710 3257672857)) (>= 1208925819614629174706175 x888) (= (x1050 (x3424 274184521717934524641157099916833587235)) x608) (= (x2483 (+ 352 x4979)) x4609) (not (> 2362581449 x2710)) (= x5146 (x2246 x3016)) (= x3748 (x2483 (+ x4979 384))) (= 4272920204 x2710) (>= x888 0) (= x1654 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x1128 192) x2202) (= x3968 (x1128 256)) (= (x1128 224) x3735) (= (x1128 160) x2331) x853 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (= (x2483 (+ 288 x4979)) x219) (<= x5146 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5146 0) (= x649 (x1128 192)) (= x4148 (x1128 160)) (= (x4651 (x3424 x4217) (x1228 1) 0) x3016) (not (= 2362581449 x2710)) (= x2914 x513) (<= 0 x2353) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x4350 1208925819614629174706176) (<= 0 x1834) (= (x2483 (+ 320 x4979)) x4507) (= x2592 1) (= 4 x2914) (= x1548 160) (> x608 0) (>= x4350 0) (> 1208925819614629174706176 x888) (not (= 4062139261 x2710))) x2722))) x3042))
(assert (x3142 x4621))
(assert (x3142 x2153))
(assert (x3142 x3004))
(assert (x3142 x3993))
(assert (= x690 (=> (and (= (x1999 x256 x2614) x1302) (= x2329 (= 0 x1302)) (= x1916 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3877))) (= x256 (ite (or (> x3877 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3877) true) (< x3877 0))) 1 0)) (= (ite (or (and (> x1916 x4814) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1916) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4814))) (and (> x4814 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1916 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x2614)) (and (=> (and (= x1594 x4515) (= x4638 x1820) x2329 (= x4515 (x2483 (+ x3877 x4814)))) x4277) (=> (not x2329) x1877)))))
(assert (x3142 x5194))
(assert (= x2590 (or (and x1331 x4253) x2076)))
(assert (x3142 x4512))
(assert (x3142 x3731))
(assert (x3142 x1709))
(assert (x3142 x4820))
(assert (x3142 x1342))
(assert (x3142 x5251))
(assert (x3142 x2176))
(assert (x3142 x4895))
(assert (= (x845 x2048) (ite x3777 (x3313 x2048) (x5247 x2048))))
(assert (x3142 x223))
(assert (= x4657 (and x1535 x3422)))
(assert (= (x1249 288) (ite (and x3598 x532) (x2900 288) (x4342 288))))
(assert (x3142 x839))
(assert (x3142 x2138))
(assert (x3142 x2557))
(assert (x3142 x591))
(assert (x3142 x2674))
(assert (x3142 x2889))
(assert (x2786 x3334 x4448))
(assert (x3142 x3302))
(assert (x3142 x898))
(assert (x3142 x3985))
(assert (= (x874 x3122) (ite x2076 (x4340 x3122) (x2958 x3122))))
(assert (x3142 x780))
(assert (x3142 x3971))
(assert (x3142 x989))
(assert (x3142 x3084))
(assert (= x269 (=> (and (= (x1999 255 x4120) x4976) (= 0 x3610) (= (< 0 x4976) x4880) (= (x1999 340282366920938463463374607431768211455 x301) x4080) (= x4962 (uninterp_mod (* x4080 (x14 x3450)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x4880 x4473) (=> (and (not x4880) (= x1662 x1697) (= x4962 x1002)) x1815)))))
(assert (x3142 x4793))
(assert (x3142 x4180))
(assert (x3142 x5197))
(assert (x3142 x3204))
(assert (= (=> (and (= (x1999 20282409603651670423947251286015 x1842) x2227) (= x3570 (< 0 x1040))) (and (=> (not x3570) x963) (=> x3570 x3756))) x2490))
(assert (= (and x4138 x4336) x2516))
(assert (x3142 x4193))
(assert (x3142 x4825))
(assert (x3142 x280))
(assert (x2786 x194 x3690))
(assert (x3142 x572))
(assert (= (x4949 x2544) 0))
(assert (x3142 x4814))
(assert (x3142 x2743))
(assert (= (x88 (x656 x988 2)) (+ 2 (x88 x988))))
(assert (= (=> (= x3127 (< 0 x586)) (and (=> (not x3127) x941) (=> x3127 x2623))) x563))
(assert (x3142 x2342))
(assert (x3142 x1312))
(assert (x3142 x5074))
(assert (= (x4420 x4002) (ite (= x4002 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4949 x4002))))
(assert (x3142 x4363))
(assert (x3142 x4160))
(assert (x1936 x5175 x4824 x89 x782))
(assert (x3142 x3404))
(assert (x3142 x1061))
(assert (x3142 x4211))
(assert (=> (> (+ 10000 1) x804) (= (x1228 x804) (x3424 x804))))
(assert (x3142 x3420))
(assert (x3142 x426))
(assert (=> (< (- x4650 1) 10000) (= (x1228 x4650) (x3424 x4650))))
(assert (x3142 x2162))
(assert (x3142 x1179))
(assert (= (=> (and (= x318 (uninterp_mod (* x5080 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1999 20282409603651670423947251286015 x318) x2846) (= x4772 (> x2846 10141204801825835211973625643007))) (and (=> x4772 x941) (=> (not x4772) x4198))) x2238))
(assert (= (x1249 x2346) (ite (and x532 x3598) (x2900 x2346) (x4342 x2346))))
(assert (x3142 x2180))
(assert (= x5010 true))
(assert (x3142 x2785))
(assert (x3142 x4915))
(assert (x3142 x2604))
(assert (x4568 x1801 x398))
(assert (x3142 x4787))
(assert (x3142 x2477))
(assert (= (ite (= x1219 x1178) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4944 x1219)) (x2679 x1219)))
(assert (x3142 x3926))
(assert (x3142 x2981))
(assert (= (=> (and (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4962) (and (> 0 x4962) (= (<= x4962 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) 1 0) x2002) (= x2708 (ite (or (and (> x2608 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1926 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1926 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2608)) (< x2608 x1926))) 1 0)) (= (= 0 x2250) x214) (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4962)) x1926) (= (x1999 x2002 x2708) x2250)) (and (=> (not x214) x4991) (=> (and (= x486 x2047) (= x995 x4300) x214 (= (x2483 (+ x2608 x4962)) x995)) x2324))) x4518))
(assert (x3142 x3827))
(assert (x3142 x2835))
(assert (= x1210 (or (and x4270 x45) (and x2871 x1155))))
(assert (x1438 x458))
(assert (= (=> (and (= x12 1) (= x4872 x2542)) x4096) x2249))
(assert (x3142 x4221))
(assert (x1438 x3025))
(assert (=> (< (- x4744 1) 10000) (= (x1228 x4744) (x3424 x4744))))
(assert (= (=> (and (= (x1999 1461501637330902918203684832716283019655932542975 x3967) x3098) (= (x4651 (x3424 x4857) (x1228 6) 0) x573) (= x4430 (x4651 (x3424 x3098) x573 0)) (> 340282366920938463463374607431768211456 x1525) (= (x4496 x646) x229) (= x646 (x2483 (+ x382 64))) (= (x2483 (+ x486 288)) x4669) (= x4710 (= x865 274184521717934524641157099916833587235)) (<= 0 x1525) (>= 340282366920938463463374607431768211455 x1525) (= x1525 (x1124 x4430)) (= 4 x2629) (= x3967 (x2841 x4669)) (= x865 (x1999 1461501637330902918203684832716283019655932542975 x229))) (and (=> (and (< 0 x4137) (= (x2483 (+ x382 288)) x4573) (= x4137 (x1050 (x3424 274184521717934524641157099916833587235))) x4710 (< x4350 1208925819614629174706176) (= x3589 (x2246 x611)) (>= 1208925819614629174706175 x4350) (= 4 x273) (>= 1208925819614629174706175 x888) (>= x4350 0) (= x2378 (x2483 (+ 384 x382))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (= (x2483 (+ x382 352)) x4924) (= (x3348 192) x1668) (<= 0 x1834) (>= x2353 0) (not (< x3913 2362581449)) (not (< x273 4)) (= x3032 (x3348 256)) (not (= x3913 4062139261)) (= x2629 x273) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x3014) (= x3913 4272920204) (= (x4651 (x3424 x4217) (x1228 1) 0) x611) (= x909 (x2483 (+ x382 320))) (= x3191 (x3348 160)) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3348 192) x3141) (not (= 2362581449 x3913)) (= (x3348 256) x5075) (= x1275 1) (> 1208925819614629174706176 x888) (<= 0 x888) (= (x3348 224) x2129) (= x5185 (x3348 224)) (= (x3348 128) x1865) (<= 0 x3589) (= x4028 (x3348 160)) (<= x3589 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 160 x2471) (= (x3348 128) x3664) (not (= 3257672857 x3913))) x3483) (=> (not x4710) x3486))) x3821))
(assert (x3142 x3887))
(assert (=> (> (+ 10000 1) x3051) (= (x1228 x3051) (x3424 x3051))))
(assert (x3142 x4831))
(assert (= (x1228 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x3424 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x3142 x652))
(assert (x3142 x3370))
(assert (x3142 x864))
(assert (x3142 x1479))
(assert (x3142 x2338))
(assert (x3142 x4727))
(assert (= (=> (and (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1349) x3232) (= (x2483 (+ x5089 x3232)) x1820) (= (x2483 (+ 31 x5115)) x1349) (= x1504 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5115) true) (> 160 x5115)) (> x5115 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (not x1504) x3775) (=> x1504 x68))) x4531))
(assert (x2786 x1851 x1683))
(assert (x3142 x4554))
(assert (= x3658 (=> (and (= (x2841 x2906) x1516) (= x3965 (x1999 1461501637330902918203684832716283019655932542975 x1516)) (<= x2497 1461501637330902918203684832716283019655932542975) (= x1111 1) (< x2497 1461501637330902918203684832716283019655932542976) (= x3655 (= x3965 x2497)) (= (x1123 x429) x2497) (= (x4651 (x1228 1) (x1228 9) 0) x429) (<= 0 x2497)) (and (=> x3655 x3821) (=> (not x3655) x4571)))))
(assert (x22 x4670 x2519))
(assert (= (x88 (x3424 x3085)) x3085))
(assert (x3142 x1751))
(assert (= (x4944 x828) (ite (and x310 x1198) (x2994 x828) (x224 x828))))
(assert (x3142 x4463))
(assert (x1438 x1174))
(assert (x3142 x4040))
(assert (x22 x5161 x484))
(assert (x3142 x2048))
(assert (= x2623 (=> (= x1749 false) x1245)))
(assert (= (=> (and (= x554 (> x2933 x2709)) (= (x1999 20282409603651670423947251286015 x2776) x2933) (= x2709 (x1999 20282409603651670423947251286015 x3310))) (and (=> (not x554) x3608) (=> x554 x796))) x4557))
(assert (x3142 x4750))
(assert (= x1063 (=> (= x1316 (= x2853 274184521717934524641157099916833587233)) (and (=> (and (< 0 x1597) (= (x1050 (x3424 274184521717934524641157099916833587233)) x1597) x1316 (>= x1863 0) (<= x443 1208925819614629174706175) (= x4040 x4453) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1863) (not (= x2151 4062139261)) (not (= x2151 2362581449)) (= 160 x3719) (<= x2402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x443 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1224) (= x2656 (x2988 160)) (= x666 (x2988 160)) (= (x2483 (+ 288 x4240)) x5024) (> 1208925819614629174706176 x5009) (= (x2988 128) x1728) (= x5126 (x2988 256)) (not (< x4453 4)) (= 4 x4453) (= 4272920204 x2151) (= (x2988 128) x2554) (= (x2988 192) x370) (<= 0 x5009) (= (x2988 192) x3418) (= (x2483 (+ x4240 320)) x4190) (not (= x2151 3257672857)) (= x1224 (x721 x5240)) (not (> 2362581449 x2151)) (>= x2402 0) (>= 1208925819614629174706175 x5009) (= x65 1) (= x3024 (x2988 256)) (= (x2483 (+ 384 x4240)) x4648) (= x4427 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x4975 (x2988 224)) (< x443 1208925819614629174706176) (<= 0 x1224) (= (x2988 224) x4303) (= (x2483 (+ x4240 352)) x2216) (= (x4651 (x3424 x4217) (x1228 1) 0) x5240)) x508) (=> (not x1316) x2939)))))
(assert (x3142 x634))
(assert (= x1345 (x88 (x3424 x1345))))
(assert (x3142 x1548))
(assert (x3142 x519))
(assert (= x4359 (and x2190 x827)))
(assert (x3142 x1643))
(assert (x3142 x4150))
(assert (x3142 x4006))
(assert (=> (> (+ 10000 1) x2559) (= (x1228 x2559) (x3424 x2559))))
(assert (x3142 x2400))
(assert (x3142 x2202))
(assert (x3142 x2273))
(assert (x3142 x4123))
(assert (x3142 x4475))
(assert (x4136 x1931 x3796))
(assert (= (and (not x2194) x4862) x641))
(assert (x3142 x2607))
(assert (x3142 x609))
(assert (= (x88 (x3424 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (x3142 x4816))
(assert (x2487 x3334))
(assert (x1438 x1836))
(assert (x3142 x5032))
(assert (= (x88 (x3424 x4985)) x4985))
(assert (x2786 x1796 x3394))
(assert (x3142 x5162))
(assert (= 0 (x38 x499)))
(assert (x3142 x3102))
(assert (x1438 x4794))
(assert (x3142 x5045))
(assert (x3142 x4134))
(assert (= x4149 (and x3109 (not x3834))))
(assert (= 20282409603651670423947251286016 (x88 (x1228 20282409603651670423947251286016))))
(assert (= (x5028 x4813) (ite (= x1835 x4813) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x251 x4813))))
(assert (x3142 x4724))
(assert (= (=> (= true x1749) x1245) x349))
(assert (= (=> (= x2898 (> x12 0)) (and (=> (not x2898) x941) (=> (and (= x2912 x2542) x2898) x2984))) x4096))
(assert (x3142 x2424))
(assert (= x3051 (x88 (x3424 x3051))))
(assert (x3142 x4084))
(assert (x3142 x3981))
(assert (x3142 x5253))
(assert (x2786 x2120 x1269))
(assert (x3142 x2240))
(assert (x3142 x3222))
(assert (x493 x809))
(assert (x4568 x2777 x2162))
(assert (x3142 x4930))
(assert (= x2328 (and (not x1086) x4309)))
(assert (= (and x800 (not x861)) x4280))
(assert (x1438 x2829))
(assert (x5234 x3526 x5177))
(assert (= x1871 (and x1376 (not x2622))))
(assert (x3142 x3418))
(assert (= (=> (and (= (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x2729) x2444) (= x2729 (x216 x1022))) (and (=> (and (not x2444) (= x2201 x2209) (= (x4965 (- 0 x2729)) x2201)) x5003) (=> x2444 x796))) x2924))
(assert (= (=> (= x1138 (= x2364 274184521717934524641157099916833587233)) (and (=> (not x1138) x5254) (=> (and (<= 0 x443) (= x3712 x1403) (= x3562 4272920204) (= (x3680 224) x1901) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x360) (not (> 2362581449 x3562)) (not (= x3562 4062139261)) (< x443 1208925819614629174706176) (= x1052 (x3680 128)) (= x2547 (x3680 256)) (not (> 4 x3712)) (>= x3173 0) (= (x3680 224) x3952) (= (x2483 (+ x1075 352)) x2427) (= (x3680 160) x1440) (= 160 x3665) (> 1208925819614629174706176 x5009) (= (x2483 (+ 384 x1075)) x2360) (= x3709 (x1050 (x3424 274184521717934524641157099916833587233))) x1138 (= (x3680 256) x1937) (= x3299 1) (not (= x3562 2362581449)) (<= x3173 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1208925819614629174706175 x5009) (>= x1863 0) (= (x2483 (+ x1075 288)) x1108) (= 4 x3712) (= (x3680 192) x3187) (= x863 (x2483 (+ x1075 320))) (<= 0 x5009) (= (x3680 192) x1657) (>= x2402 0) (>= 1208925819614629174706175 x443) (= (x3680 160) x602) (= x293 (x3680 128)) (= x2142 (x4651 (x3424 x4217) (x1228 1) 0)) (> x3709 0) (= x3173 (x721 x2142)) (not (= 3257672857 x3562))) x663))) x4666))
(assert (= (=> (= (= x865 274184521717934524641157099916833587233) x3429) (and (=> (not x3429) x3175) (=> (and (not (< x5243 2362581449)) (= x2471 160) (>= 1208925819614629174706175 x443) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1398 (x1943 224)) (> 1208925819614629174706176 x5009) (= (x1943 160) x3420) (= 1 x1275) (= (x1943 224) x3567) (= (x2483 (+ 352 x382)) x5072) (= x4514 (x1943 256)) (= x2629 x3789) (>= x2402 0) (= x4768 (x1943 192)) (= (x721 x2164) x3876) (>= x443 0) (>= x1863 0) (= (x1943 128) x3702) (<= 0 x5009) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3876) (not (= 2362581449 x5243)) (< 0 x3153) (> 1208925819614629174706176 x443) (= 4272920204 x5243) (not (< x3789 4)) (= x3863 (x2483 (+ 288 x382))) (= (x1050 (x3424 274184521717934524641157099916833587233)) x3153) (= x2164 (x4651 (x3424 x4217) (x1228 1) 0)) x3429 (not (= x5243 3257672857)) (= (x2483 (+ x382 384)) x2838) (>= 1208925819614629174706175 x5009) (<= 0 x3876) (not (= x5243 4062139261)) (= x2205 115197700812830431890159100217698998050002284567939525164234024451216521560064) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (= (x1943 192) x856) (= (x1943 256) x1687) (= (x2483 (+ x382 320)) x579) (= (x1943 128) x3973) (= x4134 (x1943 160)) (= 4 x3789)) x3483))) x3486))
(assert (x3142 x550))
(assert (= x4233 (=> (and (= x2715 (< x1424 x614)) (<= x1424 340282366920938463463374607431768211455) (= x614 (x1999 340282366920938463463374607431768211455 x3310)) (= (x1999 1461501637330902918203684832716283019655932542975 x4249) x3771) (= x3957 (x4965 (- x4282 x1285))) (= x52 (x4651 (x3424 x3771) (x1228 2) 0)) (> 340282366920938463463374607431768211456 x1424) (>= x1424 0) (= x1424 (x2881 x52))) (and (=> (and (= (x4651 (x3424 x4919) x3387 0) x820) (= x1020 (x3255 x779)) (= x4919 (x1999 1461501637330902918203684832716283019655932542975 x4249)) (= x1750 (x4965 (- x1424 x614))) (= x4083 (x1999 340282366920938463463374607431768211455 x1750)) (= x2935 (x1999 340282366920938463463374607431768211455 x3957)) (or (and (= (= 0 x4282) x292) (= x3864 0) (= (ite x4852 (= 0 (x1999 340282366920938463463374607431768211455 x3957)) x4852) x4849) (not x2401) (= x4852 (not x292))) (and x2401 (= x3864 1))) (= x2401 (ite (= 0 x4282) (not (= 0 (x1999 340282366920938463463374607431768211455 x3957))) (= x4282 0))) (<= x329 340282366920938463463374607431768211455) (>= x1020 0) (= (x4651 (x3424 x4857) (x1228 5) 0) x779) (= (x2104 x820) x329) (>= 65535 x1020) (not x2715) (= x3387 (x4651 (x3424 x4857) (x1228 6) 0)) (<= 0 x329) (> 65536 x1020)) x4971) (=> x2715 x796)))))
(assert (x3142 x21))
(assert (x3142 x4993))
(assert (= (x88 (x3424 x4848)) x4848))
(assert (x3142 x3099))
(assert (x3142 x1764))
(assert (x3142 x3307))
(assert (x3142 x1728))
(assert (= x3661 (and (not x1158) x5181)))
(assert (x3142 x1819))
(assert (= 18446744073709551615 (x88 (x1228 18446744073709551615))))
(assert (x3142 x1666))
(assert (x2786 x1842 x4493))
(assert (x1438 x4160))
(assert (x3142 x4948))
(assert (= x92 (=> (and (= x4633 (ite (< x991 x1040) 1 0)) (= (= x2633 0) x1238) (= x5080 (x1999 20282409603651670423947251286015 x4549)) (= x472 (= 0 x5080)) (= x2633 (x1999 x1358 x4633)) (= x1358 (ite (not x472) 1 0)) (= x991 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5080)))) (and (=> x1238 x2238) (=> (not x1238) x796)))))
(assert (x3142 x2031))
(assert (x3142 x1182))
(assert (x3142 x4597))
(assert (x3142 x1216))
(assert (x1936 x1356 x2711 x674 x1240))
(assert (x3142 x1298))
(assert (x3142 x1890))
(assert (x3142 x2989))
(assert (x3142 x2731))
(assert (x3142 x2672))
(assert (x3142 x2231))
(assert (x3142 x2882))
(assert (x3142 x2946))
(assert (x4568 x5050 x2671))
(assert (x1438 x2399))
(assert (= (x88 (x656 x5149 2)) (+ 2 (x88 x5149))))
(assert (x3142 x4994))
(assert (= (x88 (x1228 1889567281)) 1889567281))
(assert (x1438 x4286))
(assert (x3142 x4252))
(assert (=> (> (+ 10000 1) x1649) (= (x3424 x1649) (x1228 x1649))))
(assert (x3142 x1635))
(assert (x3142 x2002))
(assert (x3142 x1611))
(assert (x3142 x2427))
(assert (x3142 x2376))
(assert (x3142 x4566))
(assert (x3142 x4267))
(assert (x3142 x3714))
(assert (x3142 x4086))
(assert (= x3130 (and x4304 x1026)))
(assert (= x941 x2526))
(assert (= x2019 (=> (and (= x1444 (x4651 (x3424 x4857) (x1228 5) 0)) (>= x2371 0) (= x3763 (x216 x2371)) (= (x2514 x2618) x2371) (> 20282409603651670423947251286016 x2371) (= x3275 (or (and (> 0 x3763) (= true (<= x3763 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3763 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 20282409603651670423947251286015 x2371) (> 65536 x3375) (<= x3375 65535) (>= x3375 0) (= x3375 (x1225 x1444)) (= x2618 (x4651 (x3424 x4857) (x1228 5) 0))) (and (=> (not x3275) x3421) (=> x3275 x3835)))))
(assert (x3142 x2271))
(assert (x3142 x1171))
(assert (x3142 x1621))
(assert (x3142 x1895))
(assert (x2786 x4704 x2118))
(assert (x3142 x919))
(assert (x2487 x1315))
(assert (x3142 x1598))
(assert (= (or (and x1914 x2329) (and x3280 x742)) x54))
(assert (= (x3424 404098525) (x1228 404098525)))
(assert (x3142 x5060))
(assert (x3142 x4956))
(assert (x2786 x157 x5105))
(assert (x3142 x3636))
(assert (x1438 x4859))
(assert (= (=> (and (= x766 (x1999 255 x4120)) (= x3923 (< 2 x766)) (= x3762 x4386) (= x5198 x367) (not x3923)) x1117) x758))
(assert (x3142 x3238))
(assert (x1438 x2730))
(assert (x3142 x4474))
(assert (=> (< (- x860 1) 10000) (= (x3424 x860) (x1228 x860))))
(assert (x493 x3900))
(assert (x3142 x1722))
(assert (x3142 x1615))
(assert (x3142 x922))
(assert (x3142 x3965))
(assert (= x3462 (=> (and (= x3780 (< x2026 x3176)) (= (x1999 18446744073709551615 x4339) x3176) (<= x2026 18446744073709551615) (<= 0 x2026) (= x4339 (x2571 160)) (> 18446744073709551616 x2026)) (and (=> x3780 x796) (=> (not x3780) x1471)))))
(assert (x2786 x2891 x3282))
(assert (x3142 x2873))
(assert (x1438 x4691))
(assert (x3142 x2419))
(assert (= x1809 (or (and x791 x3534) (and x3077 x617))))
(assert (x3142 x243))
(assert (x1438 x3939))
(assert (= (=> (and (= x4844 (> x3368 10141204801825835211973625643007)) (= (x2483 (+ x5179 x1832)) x2755) (= (x1999 20282409603651670423947251286015 x3310) x3368)) (and (=> (not x4844) x3990) (=> x4844 x941))) x3108))
(assert (= (x1448 x2346) (ite (= x2346 288) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4949 x2346))))
(assert (x3142 x2425))
(assert (= x4033 x2948))
(assert (x3142 x4976))
(assert (=> (< (- x3725 1) 10000) (= (x1228 x3725) (x3424 x3725))))
(assert (= (ite (= x3122 288) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1395 x3122)) (x2096 x3122)))
(assert (x3142 x3292))
(assert (x3142 x911))
(assert (x1438 x4796))
(assert (= (and x2529 x629) x1376))
(assert (x3142 x2729))
(assert (x3142 x5226))
(assert (= 0 (x3849 x920)))
(assert (= 0 (x4436 x3636)))
(assert (= (x4949 x1848) 0))
(assert (x3142 x2936))
(assert (=> (< (- x4919 1) 10000) (= (x1228 x4919) (x3424 x4919))))
(assert (x3142 x3912))
(assert (x3142 x5096))
(assert (= (x88 (x3424 x4752)) x4752))
(assert (x3142 x2808))
(assert (x3142 x4101))
(assert (x3142 x4768))
(assert (x3142 x4998))
(assert (x3142 x3096))
(assert (x3142 x1659))
(assert (x1438 x4890))
(assert (x3142 x3160))
(assert (x3142 x324))
(assert (x3142 x2698))
(assert (x1438 x3894))
(assert (x3142 x1243))
(assert (x3142 x1674))
(assert (x3142 x1808))
(assert (x1438 x380))
(assert (x3142 x2863))
(assert (x3142 x77))
(assert (x3142 x2597))
(assert (x3142 x1246))
(assert (x22 x3474 x3705))
(assert (x3142 x3656))
(assert (=> (> (+ 10000 1) x2909) (= (x3424 x2909) (x1228 x2909))))
(assert (x3142 x1702))
(assert (x3142 x4958))
(assert (= (x88 (x3424 x4744)) x4744))
(assert (= (x1228 2362581449) (x3424 2362581449)))
(assert (x4568 x3663 x1405))
(assert (= x4253 (and x1607 x3984)))
(assert (x4568 x2137 x3007))
(assert (x3142 x2579))
(assert (x3142 x2909))
(assert (x3142 x2090))
(assert (x3142 x4390))
(assert (x3142 x1774))
(assert (= x3093 true))
(assert (x3142 x1863))
(assert (= (x4586 x3625) 0))
(assert (x2786 x153 x3855))
(assert (x3142 x4464))
(assert (x1936 x4457 x1233 x445 x1399))
(assert (= x717 (or (and x708 x4645) (and x1158 x5181) x1824 (and x830 x1742) x394 (and x792 x211) x5160 (and x143 x3559) (and x1859 (not x2102)) (and x806 x4689) (and x3369 x3898) (and x3398 x3588) (and (not x1556) x4183) (and x4291 x1990) (and x4215 x1453) (and x2992 x4892) (and x4375 x3577) (and x1966 x3130) (and x3595 x5206) (and x4883 (not x3127)) (and x2661 x2465) (and x931 x109) (and x4492 x4844) x2791 (and x3868 x4772) (and x3205 x5079) x1567 (and x5086 x2467) x5200 (and (not x2584) x2589) (and x4004 x577) (and x1799 x2690) (and x181 x1510) (and (not x2898) x1150) (and x4862 x2194) (and x227 x1484) (and x4302 x415))))
(assert (x2487 x898))
(assert (x3142 x5178))
(assert (x1438 x1419))
(assert (=> (> (+ 10000 1) x3815) (= (x1228 x3815) (x3424 x3815))))
(assert (x1438 x2537))
(assert (x3142 x3164))
(assert (x2786 x3140 x3831))
(assert (= (and x4683 x1921) x1622))
(assert (= 0 (x3556 x4456)))
(assert (=> (< (- x3043 1) 10000) (= (x1228 x3043) (x3424 x3043))))
(assert (x3142 x3583))
(assert (x3142 x4317))
(assert (= 65535 (x88 (x1228 65535))))
(assert (x4136 x2456 x1383))
(assert (= (=> (and (= x613 (= x1624 x1727)) (= (x1999 1461501637330902918203684832716283019655932542975 x1624) x1727)) (and (=> x613 x4977) (=> (not x613) x2724))) x2973))
(assert (= (x247 x3228) 0))
(assert (x3142 x3221))
(assert (= x2612 (x88 (x3424 x2612))))
(assert (x3142 x2775))
(assert (x2550 x2399 x1300))
(assert (x3142 x1415))
(assert (x3142 x2447))
(assert (x4568 x1825 x1775))
(assert (= x5002 (=> (and (= (x4965 (- x2873 4)) x671) (not (< x4783 826074471)) (> x3026 0) (not (= 1889567281 x4783)) (not (= x4783 826074471)) (= (x1050 (x3424 274184521717934524641157099916833587223)) x3026) (= 68 x2873) (= x3360 x4290) (= (or (and (> 64 x671) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x671))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x671)) x585) (not (= x4783 2514000705)) (= x1624 x4927) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2907) (= x2873 x2415) (= 2835717307 x4783) (not (< x2873 4))) (and (=> x585 x137) (=> (not x585) x897)))))
(assert (= (x2295 x740) 0))
(assert (x3142 x1761))
(assert (x3142 x265))
(assert (x493 x4744))
(assert (x3142 x2441))
(assert (= (and (not x585) x4394) x2717))
(assert (= (and x1612 x393) x538))
(assert (x3142 x2730))
(assert (x3142 x3538))
(assert (= 0 (x38 x5258)))
(assert (= (x88 (x656 x2601 2)) (+ 2 (x88 x2601))))
(assert (= (x88 (x3424 x1020)) x1020))
(assert (= x4108 (and (not x1453) x4215)))
(assert (x3142 x2411))
(assert (x3142 x4321))
(assert (x3142 x2132))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x88 (x1228 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (x3142 x810))
(assert (x493 x3375))
(assert (x3142 x3380))
(assert (= 0 (x999 x468)))
(assert (x3142 x920))
(assert (x2786 x951 x4382))
(assert (x1438 x951))
(assert (x3142 x1390))
(assert (x3142 x3983))
(assert (x3142 x1183))
(assert (x3142 x1422))
(assert (x3142 x2087))
(assert (x3142 x876))
(assert (x1438 x318))
(assert (= (x4436 x4730) 0))
(assert (x3142 x4063))
(assert (x3142 x2949))
(assert (x3142 x4386))
(assert (=> (< (- x3882 1) 10000) (= (x1228 x3882) (x3424 x3882))))
(assert (x3142 x328))
(assert (x3142 x2172))
(assert (= (x2276 x4813) (ite x1809 (x5208 x4813) (x4944 x4813))))
(assert (x3142 x991))
(assert (x3142 x4805))
(assert (x3142 x835))
(assert (x3142 x12))
(assert (x22 x4249 x2934))
(assert (x3142 x4164))
(assert (x3142 x2862))
(assert (x1438 x2503))
(assert (x1438 65535))
(assert (x3142 x2429))
(assert (x3142 x3183))
(assert (x3142 x2160))
(assert (x3142 x2950))
(assert (= (=> (and (= x3399 (= x1239 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x216 x318) x1239)) (and (=> (and (not x3399) (= x4164 x1908) (= x4164 (x4965 (- 0 x1239)))) x3890) (=> x3399 x796))) x4198))
(assert (x3142 x2501))
(assert (x3142 x4053))
(assert (= x347 (=> (and (= (x1999 20282409603651670423947251286015 x3892) x1832) (= (x1999 20282409603651670423947251286015 x1890) x5179) (= x1996 (x4965 (- 20282409603651670423947251286015 x1832))) (= x2725 (x4965 (- x2824 x4476))) (= (> x5179 x1996) x1961)) (and (=> x1961 x796) (=> (not x1961) x3108)))))
(assert (= 0 (x3849 x1997)))
(assert (x3142 x3820))
(assert (= x2593 (and (not x2541) x2069)))
(assert (x1438 x3931))
(assert (x3142 x2581))
(assert (x3142 x3300))
(assert (x3142 x4780))
(assert (x3142 x1105))
(assert (x1438 x3332))
(assert (x3142 x291))
(assert (x1438 x2915))
(assert (x3142 x2174))
(assert (x3142 x18))
(assert (= x2430 (x88 (x3424 x2430))))
(assert (x3142 x2252))
(assert (x1438 x1751))
(assert (x3142 x2642))
(assert (= (=> (= x2584 (< 0 x2772)) (and (=> x2584 x3112) (=> (not x2584) x941))) x789))
(assert (x3142 x709))
(assert (= x5183 (=> (and (= x1963 x481) (< 0 x4189) (= (not x2510) x1429) (not (= 0 x5039)) (= x4481 x4022) (= (x4432 x5081) x4189) (= x2510 (= 0 x4189)) (= x3651 x4189) (= x3651 (ite x1429 1 0)) (not (or (> x5132 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x5132 32) (= (<= x5132 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) x4397)))
(assert (x3142 x5201))
(assert (x4568 x2607 x4068))
(assert (x3142 x1515))
(assert (x3142 x4181))
(assert (= (=> (and (= x5014 (> x266 x3683)) (= 274184521717934524641157099916833587210 x5201) (<= 0 x3683) (= x148 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (= (x886 x148) x3683) (<= x3683 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> x5014 x4641) (=> (and (= x504 274184521717934524641157099916833587210) (= (x4965 (- x3683 x103)) x1730) (>= x3991 0) (= x591 (x4965 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x103))) (= x3991 (x3847 x2493)) (= x2582 (< x591 x3991)) (<= x3991 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x5014) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x4315) (= (x4651 (x3424 x2086) (x1228 1) 0) x2493) (= x2086 (x1999 1461501637330902918203684832716283019655932542975 x199)) (or (and (= x4059 x4013) (= x4697 0) x2582) (and (= x4013 32) (= (x1999 1461501637330902918203684832716283019655932542975 x199) x2874) (not x2582) (= 1 x4697) (= (x2483 (+ x3991 x103)) x131)))) x4039))) x1988))
(assert (x3142 x967))
(assert (x3142 x4962))
(assert (= x661 (=> (and (= x1669 (x2483 (+ 4 x5081))) (= x4635 (x2483 (+ x5081 36))) (= (x2483 (+ x5081 68)) x1312) (= (x4965 (- x1312 x5081)) x2642) (< 0 x3146) (= (= x3576 274184521717934524641157099916833587231) x2184) (= x3088 (x1999 1461501637330902918203684832716283019655932542975 x605)) (= (x1999 340282366920938463463374607431768211455 x2169) x4984) (= (x1999 1461501637330902918203684832716283019655932542975 x3803) x3576)) (and (=> (not x2184) x3494) (=> (and (not x1094) x2184 (= x2936 x2358) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3743 x5124)) (= (x4651 (x3424 x2936) (x1228 1) 0) x4950) (= x377 274184521717934524641157099916833587210) (= (x4651 (x3424 x2936) (x1228 1) 0) x1093) (<= x5124 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2936 x3088) (> x2583 0) (= 274184521717934524641157099916833587210 x3970) (<= 0 x2412) (= x5124 (x959 x1093)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x876) (= x4353 x2642) (= x4088 x5124) (= 2835717307 x79) (= x975 x4984) (= (or (and (> 64 x4530) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4530))) (> x4530 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1094) (= 1 x5039) (= x975 x3743) (>= x5124 0) (not x482) (= x2583 (x1050 (x3424 274184521717934524641157099916833587231))) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x4334) (= x4530 (x4965 (- x4353 4))) (= x4353 68) (not (= x79 826074471)) (= x3743 x3202) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2412) (<= x2936 1461501637330902918203684832716283019655932542975) (= x3571 (x4965 (- x2412 x975))) (= (> x975 x2412) x482) (= x5132 32) (not (< x4353 4)) (= x3481 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (not (< x79 826074471)) (= (x2774 x4334) x2412) (not (= x79 1889567281)) (= (+ x3202 x4088) x4884) (not (= x79 2514000705))) x5183)))))
(assert (= (=> (and (= (> x3885 10141204801825835211973625643007) x1484) (= x91 (- (/ x2038 x5067) (uninterp_frac x2038 x5067))) (= x3885 (x1999 20282409603651670423947251286015 x91))) (and (=> (and (= x1011 x91) (not x1484)) x1719) (=> x1484 x941))) x5230))
(assert (x493 x4512))
(assert (x2786 x5088 x2911))
(assert (x3142 x3728))
(assert (x3142 x2124))
(assert (x1438 x3246))
(assert (x3142 x569))
(assert (x3142 x2257))
(assert (x3142 x4044))
(assert (x1438 x1796))
(assert (x3142 x3804))
(assert (x3142 x5076))
(assert (x1438 x881))
(assert (x3142 x518))
(assert (x3142 x1962))
(assert (x3142 x3121))
(assert (x3142 x3177))
(assert (x3142 x1724))
(assert (x3142 x499))
(assert (x3142 x834))
(assert (= (x1913 x3976) (ite (= x2576 x3976) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2930 x3976))))
(assert (= (and (not x3696) x4425) x1114))
(assert (= (x2679 x740) (ite (= x740 x1178) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4944 x740))))
(assert (=> (< (- x2612 1) 10000) (= (x3424 x2612) (x1228 x2612))))
(assert (= (ite (and x3598 x532) (x2900 x1310) (x4342 x1310)) (x1249 x1310)))
(assert (x3142 x615))
(assert (x3142 x553))
(assert (x1438 x371))
(assert (x493 274184521717934524641157099916833587210))
(assert (x1047 x96 x855))
(assert (= (ite (= x2493 x3273) x681 (x879 x2493)) (x2774 x2493)))
(assert (x3142 x3672))
(assert (x3142 x252))
(assert (= (x1064 x3886) 0))
(assert (x1438 x5237))
(assert (x3142 x1059))
(assert (x3142 x3407))
(assert (x3142 x3928))
(assert (x1438 x2505))
(assert (x3142 x106))
(assert (= (or (and x3598 x532) (and x4897 x2757)) x3398))
(assert (x1438 x2721))
(assert (x3142 x530))
(assert (x3142 x2769))
(assert (x3142 x2940))
(assert (x3142 x3660))
(assert (x2550 x542 x1175))
(assert (x3142 x4187))
(assert (=> (> (+ 10000 1) x3771) (= (x1228 x3771) (x3424 x3771))))
(assert (= (x88 (x1228 57896044618658097711785492504343953926634992332820282019728792003956564819968)) 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x3142 x1038))
(assert (x3142 x1304))
(assert (= (or (and (not x4305) x3751) (and (not x3974) x2955)) x1460))
(assert (x3142 x5112))
(assert (x1438 x24))
(assert (x3142 x281))
(assert (x2550 x1010 x4142))
(assert (= (or (and x520 (not x5014)) x3853) x211))
(assert (= x1888 (x88 (x3424 x1888))))
(assert (x1438 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x3142 x4240))
(assert (x3142 x3046))
(assert (x1438 x4214))
(assert (x4136 x1499 x2789))
(assert (=> (< (- x4935 1) 10000) (= (x3424 x4935) (x1228 x4935))))
(assert (x2487 x3115))
(assert (x3142 x1325))
(assert (x3142 x3439))
(assert (=> (> (+ 10000 1) x3728) (= (x3424 x3728) (x1228 x3728))))
(assert (x3142 x2201))
(assert (x3142 x2542))
(assert (= x796 x4991))
(assert (x3142 x424))
(assert (= (ite (and x3850 x2184) (x3063 x148) (x2774 x148)) (x886 x148)))
(assert (x3142 x807))
(assert (x3142 x4072))
(assert (x3142 x502))
(assert (= x3966 (and x2310 x355)))
(assert (x3142 x4075))
(assert (x3142 x1989))
(assert (x3142 x3283))
(assert (x3142 x2875))
(assert (x1438 x1314))
(assert (= (=> (and (= (> x3120 1) x3732) (= (x1999 255 x4120) x3120) (= 1 x5140)) (and (=> (and (= x3788 x3569) (not x3732) (= x3521 x311)) x2070) (=> x3732 x3878))) x4029))
(assert (x3142 x1125))
(assert (= x45 (and (not x739) x4125)))
(assert (x3142 x1573))
(assert (x3142 x3838))
(assert (x3142 x1606))
(assert (x3142 x4393))
(assert (= x3425 (=> (and (= (ite (not x4196) 1 0) x1801) (= (x1999 x1801 x398) x3607) (= x4196 (= 0 x2604)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604)) x2338) (= (ite (< x2338 x1194) 1 0) x398) (= (x1999 20282409603651670423947251286015 x4736) x2604) (= x4736 (x4965 (- 0 x3198))) (= x1852 (= x3607 0))) (and (=> (not x1852) x796) (=> x1852 x315)))))
(assert (= (ite (= 128 x5004) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4949 x5004)) (x4420 x5004)))
(assert (= x2564 (and x613 x1497)))
(assert (x3142 x3314))
(assert (x3142 x635))
(assert (= x1262 (and (not x3259) x3323)))
(assert (x493 x2101))
(assert (x4568 x2765 x497))
(assert (= (=> (and (= x124 (x4651 (x1228 0) (x1228 9) 0)) (>= x2480 0) (<= x2480 255) (= x4223 (x4651 (x3424 x606) x4803 0)) (= (x3603 x4223) x2480) (= x4352 (= 0 x2480)) (= x500 0) (> 256 x2480) (<= 0 x606) (= (x1123 x124) x606) (> 1461501637330902918203684832716283019655932542976 x606) (<= x606 1461501637330902918203684832716283019655932542975) (= (x4651 (x3424 x923) (x1228 11) 0) x4803)) (and (=> (not x4352) x46) (=> (and x4352 (= x3521 x3091) (= x3465 x3788)) x4029))) x146))
(assert (x3142 x3937))
(assert (= (and x1915 x54) x1532))
(assert (x3142 x1963))
(assert (x3142 x4670))
(assert (x3142 x3706))
(assert (x3142 x3423))
(assert (x1438 x4590))
(assert (x3142 x3178))
(assert (= (=> (and (= x2285 (= 0 x3)) (= x3641 (ite (or (and (> x797 x2361) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2361) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x797))) (and (<= x797 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2361 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x2391 (ite (or (and (= (<= x4300 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x4300)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4300)) 1 0)) (= (x1999 x2391 x3641) x3) (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4300)) x797)) (and (=> (and (= (x2483 (+ x2361 x4300)) x4888) (= x1941 x2820) x2285 (= x1389 x4888)) x868) (=> (not x2285) x4991))) x1967))
(assert (x3142 x2763))
(assert (= x4897 (and (not x3598) x532)))
(assert (x3142 x4071))
(assert (x3142 x4633))
(assert (x3142 x2544))
(assert (x3142 x275))
(assert (x3142 x675))
(assert (x3142 x1978))
(assert (x3142 x1817))
(assert (= (x3424 274184521717934524641157099916833587235) (x1228 274184521717934524641157099916833587235)))
(assert (x3142 x2120))
(assert (x493 x4919))
(assert (= (+ (x88 x5149) 1) (x88 (x656 x5149 1))))
(assert (x3142 x1259))
(assert (= (x1228 4072298103) (x3424 4072298103)))
(assert (x1438 x2644))
(assert (= 0 (x5129 x4765)))
(assert (x1438 x2137))
(assert (x4136 x4094 x342))
(assert (x1438 x1898))
(assert (x3142 x3967))
(assert (x2786 x3332 x3591))
(assert (x3142 x244))
(assert (x2550 x1089 x97))
(assert (x22 x3803 x1887))
(assert (x3142 x5024))
(assert (x3142 x4646))
(assert (x1438 x4881))
(assert (x2786 x2983 x1797))
(assert (= x3553 (=> (and (= 1 x3417) (= x3774 x4366)) x2200)))
(assert (x3142 x877))
(assert (= true x90))
(assert (= (x88 (x1228 4072275384)) 4072275384))
(assert (= (x1228 340282366920938463463374607431768211455) (x3424 340282366920938463463374607431768211455)))
(assert (x3142 x3600))
(assert (x3142 x4534))
(assert (x3142 x13))
(assert (x3142 x293))
(assert (x3142 x2505))
(assert (x3142 x286))
(assert (x3142 x492))
(assert (= (or x4778 x3069) x1150))
(assert (x3142 x4364))
(assert (= (+ (x88 x3478) 2) (x88 (x656 x3478 2))))
(assert (x3142 x4851))
(assert (x1438 x1089))
(assert (x3142 x1998))
(assert (x3142 x5012))
(assert (x3142 x1075))
(assert (= (ite (= x1708 x2048) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x5247 x2048)) (x3301 x2048)))
(assert (= (x247 x3572) 0))
(assert (x2786 x2546 x112))
(assert (x1438 x2240))
(assert (x3142 x2333))
(assert (x3142 x3913))
(assert (x3142 x1121))
(assert (x3142 x4301))
(assert (x2487 x1011))
(assert (x3142 x2393))
(assert (x1936 x371 x764 x2143 x1369))
(assert (x3549 x1156 x592))
(assert (x3142 x1865))
(assert (x3142 x32))
(assert (x3142 x3120))
(assert (x3142 x2354))
(assert (x3142 x1649))
(assert (x3142 x1899))
(assert (x3142 x370))
(assert (x3142 x4656))
(assert (= x3098 (x88 (x3424 x3098))))
(assert (x3142 x2375))
(assert (x3142 x325))
(assert (x1438 x2810))
(assert (x3142 x1164))
(assert (x2550 x2537 x4947))
(assert (x3142 x1555))
(assert (x3142 x1561))
(assert (x22 x4244 x4550))
(assert (= x3156 true))
(assert (x2487 x1851))
(assert (x3142 x4996))
(assert (x3142 x4886))
(assert (x3142 x1049))
(assert (x4568 x2002 x2708))
(assert (x3142 x4775))
(assert (= (ite (= 960 x5235) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2 x5235)) (x1361 x5235)))
(assert (= (and x4642 x4060) x4333))
(assert (x3142 x1500))
(assert (x3142 x3647))
(assert (= x862 (and x2585 x2759)))
(assert (x3142 x1403))
(assert (x3142 x1918))
(assert (x3142 x723))
(assert (x3142 x5054))
(assert (x3142 x912))
(assert (x3142 x2442))
(assert (=> (< (- x2101 1) 10000) (= (x1228 x2101) (x3424 x2101))))
(assert (= (ite (and x310 x1198) (x2994 x1835) (x224 x1835)) (x4944 x1835)))
(assert (= x2941 (=> (and (<= 0 x3253) (<= x3253 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3373 274184521717934524641157099916833587210) (= x309 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (= (x4763 x309) x3253) (= (> x3360 x3253) x2383)) (and (=> (not x2383) x3765) (=> x2383 x5034)))))
(assert (= (x1228 3795249780) (x3424 3795249780)))
(assert (x3142 x2119))
(assert (= (x1395 x2048) 0))
(assert (x3142 x359))
(assert (x3142 x1352))
(assert (x3142 x3764))
(assert (x1438 x2231))
(assert (x3142 x348))
(assert (x3142 x579))
(assert (=> (< (- x4416 1) 10000) (= (x1228 x4416) (x3424 x4416))))
(assert (x3142 x917))
(assert (x3142 x5169))
(assert (x3142 x205))
(assert (x3142 x1315))
(assert (x4568 x3243 x640))
(assert (x3142 x5198))
(assert (= (x2295 x34) 0))
(assert (x22 x2248 x4061))
(assert (= (+ (x88 x383) 1) (x88 (x656 x383 1))))
(assert (x3142 x270))
(assert (x3142 x3268))
(assert (= x3642 (and x3130 (not x1966))))
(assert (x3142 x2029))
(assert (x3142 x778))
(assert (= x5095 (or (and (not x4683) x1921) (and x1911 (not x3655)))))
(assert (= (=> (and (= x4127 (x2483 (+ 288 x731))) (= (x2958 320) x1709) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3456)) (> 160 x3456)) (> x3456 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4840) x731) (= x4840 (x2483 (+ x3456 31))) (= 0 x3708) (not (ite x5176 x5176 (and (> x1709 170141183460469231731687303715884105727) (= true (<= x1709 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x2958 416) x2567) (= x4417 (x1999 255 x4120)) (= x2687 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1709) true) (< 0 x1709))) (= x76 (x1999 340282366920938463463374607431768211455 x1709)) (not (= x4620 0)) (= x5176 (not x2687)) (= x1607 (< 0 x4417)) (>= 1208925819614629174706175 x3678) (<= x2567 1208925819614629174706175) (= (x2958 288) x3678) (= x892 (uninterp_mod (* x76 (x14 x881)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (not x1607) (= x4127 x4602) (= x892 x4946)) x4532) (=> x1607 x1866))) x3813))
(assert (x3142 x1901))
(assert (x3142 x3991))
(assert (x1438 x338))
(assert (x4568 x1767 x4193))
(assert (= (ite (= x2260 x4087) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1197 x2260)) (x5231 x2260)))
(assert (x3142 x4821))
(assert (x3142 x3187))
(assert (x3142 x849))
(assert (x3142 x1454))
(assert (x2550 x301 x4324))
(assert (x3142 x1665))
(assert (= (x1228 2835717307) (x3424 2835717307)))
(assert (x3142 x4241))
(assert (x1438 x385))
(assert (= x2198 (and x2634 x1048)))
(assert (x3142 x2155))
(assert (= x2575 x310))
(assert (= 0 (x4949 x4002)))
(assert (x3142 x479))
(assert (= (x3424 2059964113) (x1228 2059964113)))
(assert (x1438 x3555))
(assert (x3142 x3989))
(assert (= x3446 (=> (= (or (and (= (<= (x216 x194) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 (x216 x194))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x194))) x1742) (and (=> x1742 x941) (=> (and (= x3121 (x1999 20282409603651670423947251286015 x194)) (= x4621 (ite (< x3121 x4225) x194 x3310)) (not x1742) (= x4225 (x1999 20282409603651670423947251286015 x3310)) (= x2776 x4621)) x4557)))))
(assert (= (ite (= x3122 x1029) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2958 x3122)) (x3953 x3122)))
(assert (x3142 x1236))
(assert (x1438 x3240))
(assert (= x722 (=> (and (= x2236 (x216 x1748)) (= x541 (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x2236))) (and (=> x541 x796) (=> (and (not x541) (= x4404 (x4965 (- 0 x2236))) (= x4404 x194)) x4572)))))
(assert (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x3424 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x4993 (x88 (x3424 x4993))))
(assert (x493 x3882))
(assert (= (and x237 x2350) x4954))
(assert (x3142 x607))
(assert (= x1042 (or (and x1466 x409) (and x4657 x4001))))
(assert (x3142 x1881))
(assert (x3142 x3871))
(assert (x3142 x4552))
(assert (x3142 x497))
(assert (x3142 x2704))
(assert (x3142 x91))
(assert (x22 x1516 x2966))
(assert (x3142 x4691))
(assert (x1438 x2475))
(assert (x3142 x2846))
(assert (x3142 x4635))
(assert (= 0 (x2295 x3976)))
(assert (x3142 x2879))
(assert (x3142 x1492))
(assert (x3142 x847))
(assert (x3142 x2107))
(assert (x3142 x3207))
(assert (x4568 x4272 x1643))
(assert (x3142 x4358))
(assert (x3142 x4783))
(assert (= (=> (= x574 (or (and (> 0 x4300) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4300))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4300))) (and (=> (and (not x574) (= x2543 x486)) x3585) (=> x574 x144))) x3718))
(assert (= x2974 (and x3640 (not x3057))))
(assert (= x4702 (=> (and (= x5030 x4946) (= x3110 (< 2 x1577)) (= x1577 (x1999 255 x4120)) (= x3745 x4602) (not x3110)) x4532)))
(assert (x2786 x878 x947))
(assert (x1438 x1767))
(assert (x3142 x3826))
(assert (= (=> (and (= x4021 x4996) (= x1555 0) (= (x3313 x5169) x3727) (>= 1208925819614629174706175 x5162) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1603) (> x4996 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x4996 x1603) (= (<= x1603 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x4996 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x3685) (= (uninterp_mod (* x1721 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2153) (= (x2483 (+ x3091 x4996)) x1107) (= (x2483 (+ x2650 x1708)) x1221) (= (x2483 (+ x3820 288)) x2233) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1489) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4996)) (and (< x1489 x4996) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1489) (<= x4996 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x640) (= 0 x1899) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3091) true) (> 0 x3091)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3091)) x4165) (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3091)) x1603) (< (* x978 x2153) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x3491 x3228) x1931) (= x2032 (x2483 (+ 64 x3625))) (= (x3313 x2233) x2944) (= x4838 (x2483 (+ 31 x3184))) (= (x1999 x3243 x640) x1899) (= (and (> x2944 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2944) true)) x1368) (= (ite (not x4165) 1 0) x3243) (= x1489 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3091))) (= x4347 (not x1368)) (= x4021 (* x978 x2153)) (= x3521 x1107) (= x4706 (x2483 (+ 64 x1708))) (not (= x1053 0)) (not (ite x4347 x4347 (and (= (<= x2944 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x2944 170141183460469231731687303715884105727)))) (not (> x4996 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x3788 x1221) (>= 1208925819614629174706175 x3727) (= (x3313 x1708) x5162) (= x3228 (x2483 (+ x2072 64))) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3184) true) (< x3184 160)) (> x3184 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (ite (or (and (= (<= x3091 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3091 0)) (> x3091 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0) x1264) (= (x2483 (+ 64 x4706)) x5169) (= (x1999 340282366920938463463374607431768211455 x2944) x1721) (= (x1999 x1264 x3685) x1555) (= (x1999 18446744073709551615 x1931) x978) (= (x8 x2032) x5000) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4838) x2650)) x4029) x403))
(assert (= (or (and x3829 (not x4062)) (and (not x2552) x363)) x1980))
(assert (= (ite (= x1421 x5004) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x3143 x5004)) (x2876 x5004)))
(assert (x3142 x4974))
(assert (x3142 x3635))
(assert (x3142 x3085))
(assert (= (=> (and (= x3146 1) (= x4133 x5081)) x661) x3812))
(assert (x22 x3931 x314))
(assert (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 (x88 (x1228 115792089237316195423570985008687907853269984655499359237631748795939503996928))))
(assert (x3142 x194))
(assert (x2487 x2800))
(assert (x3142 x5252))
(assert (x3142 x3719))
(assert (x3142 x1043))
(assert (=> (< (- x3212 1) 10000) (= (x1228 x3212) (x3424 x3212))))
(assert (= x4650 (x88 (x3424 x4650))))
(assert (x3142 x3911))
(assert (x3142 x3795))
(assert (= x4440 (=> (= x517 (= 274184521717934524641157099916833587227 x13)) (and (=> x517 x2167) (=> (not x517) x994)))))
(assert (x3142 x781))
(assert (= (ite (and x1976 x1188) (x304 x3996) (x361 x3996)) (x2958 x3996)))
(assert (x1438 x2395))
(assert (x3142 x4232))
(assert (x3142 x1186))
(assert (x3142 x1335))
(assert (x3142 x1939))
(assert (x3142 x3152))
(assert (x1438 x2607))
(assert (= (=> (and (= x2415 x1807) (not (< x238 826074471)) (= (or (and (= (<= x348 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x348 64)) (> x348 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1519) (= 2835717307 x238) (not (= 2514000705 x238)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2370) (not (> 4 x1807)) (not (= x238 826074471)) (= x213 x3360) (= (x1050 (x3424 274184521717934524641157099916833587227)) x391) (= (x4965 (- x1807 4)) x348) (= x1807 68) (not (= x238 1889567281)) (= x1624 x108) (< 0 x391)) (and (=> (not x1519) x3552) (=> x1519 x5034))) x2167))
(assert (x3142 x841))
(assert (x3142 x86))
(assert (x3142 x256))
(assert (= true x1872))
(assert (x3142 x1309))
(assert (x3142 x1040))
(assert (= (or x1876 x3224) x4033))
(assert (x3142 x1337))
(assert (= true x321))
(assert (= (x1228 1889567281) (x3424 1889567281)))
(assert (x2786 x3555 x5131))
(assert (x3142 x2560))
(assert (= x2507 (=> (and (= (= x2745 0) x4368) (= (ite (not x777) 1 0) x2868) (= x2685 (ite (> x5067 x3937) 1 0)) (= (x1999 x2868 x2685) x2745) (= (x1999 20282409603651670423947251286015 x3763) x2180) (= x777 (= x2180 0)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2180)) x3937)) (and (=> x4368 x1232) (=> (not x4368) x796)))))
(assert (x3142 x1516))
(assert (x3142 x3075))
(assert (= (=> (and (= (x1999 1461501637330902918203684832716283019655932542975 x3532) x2521) (= (x4965 (- x4952 x3774)) x1699) (> x3417 0) (= (x1999 340282366920938463463374607431768211455 x2120) x5022) (= (x2483 (+ x3774 36)) x357) (= (x2483 (+ 4 x3774)) x3027) (= (= 274184521717934524641157099916833587231 x2521) x1272) (= (x2483 (+ 68 x3774)) x4952)) (and (=> (and (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x1455) (= x4446 x3114) (= x3145 32) (not x1813) (< 0 x3207) (= x2334 x2304) (= x3679 x1314) (>= x2953 0) (= x1699 x4252) (= x3114 x3823) (= x2133 274184521717934524641157099916833587210) (not x1115) (= 68 x4252) (= (x4965 (- x4252 4)) x3883) (= 1 x3874) x1272 (not (= x1202 2514000705)) (not (= 1889567281 x1202)) (<= x2334 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2379 (+ x3823 x2304)) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x3117) (= (< x2953 x4446) x1813) (= x1115 (or (> x3883 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3883 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3883))))) (not (= 826074471 x1202)) (<= x1314 1461501637330902918203684832716283019655932542975) (= x3528 (x4651 (x3424 x2920) (x1228 1) 0)) (<= 0 x2334) (= (x1999 1461501637330902918203684832716283019655932542975 x1314) x86) (= (x1050 (x3424 274184521717934524641157099916833587231)) x3207) (= x2920 (x1999 1461501637330902918203684832716283019655932542975 x1314)) (= (x3181 x1455) x2953) (= (x4965 (- x2953 x4446)) x4145) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3073) (= x4749 274184521717934524641157099916833587210) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3114 x2334)) (<= x2953 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x1202 826074471)) (= x1202 2835717307) (= (x4140 x3528) x2334) (not (> 4 x4252)) (= x4446 x5022)) x3793) (=> (not x1272) x122))) x2200))
(assert (=> (< (- x4738 1) 10000) (= (x3424 x4738) (x1228 x4738))))
(assert (x3142 x4249))
(assert (x1438 x4838))
(assert (x3142 x3192))
(assert (x3142 x2091))
(assert (x3142 x698))
(assert (x1438 x934))
(assert (= x2396 (and x5079 (not x3205))))
(assert (x3142 x889))
(assert (= x43 (or (and x1636 x588) (and x386 x1519) (and x1738 x2383) (and (not x2170) x1912))))
(assert (x3142 x4354))
(assert (x3142 x4312))
(assert (= x63 (=> (and (= x3428 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x778) true) (> 160 x778)) (> x778 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1662 (x2483 (+ 128 x3157))) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1226) x3157) (= (x2483 (+ 31 x778)) x1226)) (and (=> (not x3428) x670) (=> (and x3428 (= true x1749)) x1245)))))
(assert (x3142 x1641))
(assert (x3142 x4985))
(assert (= x4759 (and (not x742) x3280)))
(assert (x3142 x2744))
(assert (= (and x4759 x2864) x3101))
(assert (= x603 (=> (and (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4962)) x3321) (= (= 0 x2273) x933) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4962) (and (< x4962 0) (= (<= x4962 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x4172) (= x1643 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2608) (> x3321 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3321) (<= x2608 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2608 x3321))) 1 0)) (= x2273 (x1999 x4272 x1643)) (= x4272 (ite (not x4172) 1 0))) (and (=> (not x933) x2749) (=> x933 x4518)))))
(assert (x2786 x898 x1007))
(assert (= (x4322 x138) 0))
(assert (x3142 x4548))
(assert (x3142 x5145))
(assert (x3142 x1628))
(assert (= (ite (and x3734 x4147) (x3442 x2260) (x4676 x2260)) (x3143 x2260)))
(assert (x3142 x3262))
(assert (x1438 x424))
(assert (x3142 x1752))
(assert (x3142 x2578))
(assert (x3142 x3497))
(assert (= x4394 (and x3118 x2481)))
(assert (x3142 x2296))
(assert (x3142 x391))
(assert (x493 x4416))
(assert (x4568 x711 x1620))
(assert (x3142 x5123))
(assert (= (and x221 (not x39)) x4425))
(assert (x3142 x296))
(assert (=> (< (- x2046 1) 10000) (= (x3424 x2046) (x1228 x2046))))
(assert (= (or (and x1185 x1570) x1823) x624))
(assert (= x2843 (or (and x4954 (not x2285)) (and x3245 (not x214)))))
(assert (x3142 x3571))
(assert (x3142 x4385))
(assert (x3142 x5186))
(assert (= x3469 (and (not x825) x1028)))
(assert (x3142 x761))
(assert (x3142 x1023))
(assert (x3142 x450))
(assert (x3142 x4771))
(assert (x1438 x4554))
(assert (x3142 x307))
(assert (x3142 x3033))
(assert (x3142 x3517))
(assert (= (x88 (x3424 x1889)) x1889))
(assert (x1438 x1266))
(assert (= x2181 x2676))
(assert (x3142 x1741))
(assert (x3142 x167))
(assert (x3142 x115))
(assert (x3142 x159))
(assert (x3142 x4515))
(assert (x3142 x4784))
(assert (= (or x4614 x2123) x5031))
(assert (x3142 x4427))
(assert (= x4492 (and x4781 (not x1961))))
(assert (= true x818))
(assert (x3142 x966))
(assert (x3142 x1791))
(assert (x3142 x2234))
(assert (x2550 x3950 x557))
(assert (x3142 x1931))
(assert (x493 x4066))
(assert (x3142 x1706))
(assert (x3142 x4927))
(assert (x3142 x3153))
(assert (x3142 x2394))
(assert (x1438 x3685))
(assert (x3142 x643))
(assert (= (x88 (x656 x3239 1)) (+ 1 (x88 x3239))))
(assert (x3142 x2562))
(assert (x3142 x2943))
(assert (x3142 x1543))
(assert (x3142 x2782))
(assert (x3142 x2305))
(assert (x3142 x1221))
(assert (x3142 x173))
(assert (x3142 x2360))
(assert (x3142 x4214))
(assert (= x1991 (and x5135 x496)))
(assert (x3142 x872))
(assert (= 0 (x4586 x3028)))
(assert (= x2722 (=> (and (= x299 0) (= (x2462 x1667) x3808) (= x450 (x1999 18446744073709551615 x3808)) (not (ite x2600 x2600 (and (> x2505 170141183460469231731687303715884105727) (= true (<= x2505 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x3248 (ite (not x186) 1 0)) (= (x2845 x1219) x4171) (= x2600 (not x2121)) (= x1667 (x2483 (+ 64 x4789))) (= (x2845 x4813) x2505) (not (= 0 x2592)) (= x4964 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1773) (> x3186 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x3186 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1773)) (< x3186 x1773))) 1 0)) (= (or (> x2783 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x2783) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2783)))) x186) (= x4914 x915) (= 0 x4782) (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2783)) x3186) (= (ite (or (and (= (<= x2783 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2783 0)) (> x2783 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0) x338) (= x4168 (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3500)) (not (> x1773 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x1781 (x1999 340282366920938463463374607431768211455 x2505)) (= x3068 (* x938 x450)) (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2783)) x183) (= (x2483 (+ x2501 64)) x1219) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1773) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x183)) (and (= (<= x183 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1773 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1773 x183))) 1 0) x2915) (= x3068 x1773) (= x299 (x1999 x3248 x4964)) (= x2121 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2505) true) (< 0 x2505))) (= x4914 (x2483 (+ x4168 x1160))) (<= x4171 1208925819614629174706175) (= x3500 (x2483 (+ 31 x1548))) (= x4475 (x2483 (+ 64 x4934))) (= x4782 (x1999 x338 x2915)) (= x2899 x2502) (< (* x938 x450) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4813 (x2483 (+ 288 x4979))) (= (x2483 (+ x1773 x2783)) x2899) (= x2501 (x2483 (+ 64 x1160))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1548) (and (< x1548 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1548) true)))) (= (uninterp_mod (* x1781 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x938) (= x1335 (x2845 x1160)) (>= 1208925819614629174706175 x1335) (= x1256 (x3470 x4475))) x3458)))
(assert (x1438 x2776))
(assert (= x109 (and (not x3415) x3060)))
(assert (x4568 x3480 x2568))
(assert (x493 x3098))
(assert (x3142 x2675))
(assert (= (and x933 x751) x3245))
(assert (= (ite (= x3296 x779) x3924 (x4204 x779)) (x3255 x779)))
(assert (= (=> (and (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1594)) x1964) (= (ite (or (and (< x1964 x3750) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1964) (<= x3750 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x3750 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1964))) 1 0) x4193) (= (x1999 x1767 x4193) x5064) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1594)) (< x1594 0)) (> x1594 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3170) (= x1767 (ite (not x3170) 1 0)) (= x4592 (= x5064 0))) (and (=> (not x4592) x505) (=> x4592 x456))) x5011))
(assert (x1438 x2821))
(assert (x493 x3395))
(assert (= (=> (and (<= x1040 18446744073709551615) (>= x1040 0) (= (= x3140 115792089237316195423570985008687907853269984655499359237631748795939503996928) x379) (< x1040 18446744073709551616)) (and (=> (not x379) x4085) (=> x379 x796))) x2212))
(assert (x3142 x3256))
(assert (x3142 x1558))
(assert (x3142 x2330))
(assert (x3142 x4796))
(assert (x3142 x3140))
(assert (x3142 x924))
(assert (x3142 x3487))
(assert (= x2880 (=> (and (= x3081 (x216 x4886)) (= x5203 (x1999 1461501637330902918203684832716283019655932542975 x2124)) (= x1198 (= 274184521717934524641157099916833587235 x5203)) (= 4 x725)) (and (=> (and (= x2127 4) (= (x2483 (+ 96 x1835)) x4379) (not (> 4 x2127)) (= (x3592 192) x4482) (not (= x901 3257672857)) (< x4350 1208925819614629174706176) (= x3056 (x1050 (x3424 274184521717934524641157099916833587235))) x1198 (<= 0 x4350) (= (x3592 160) x4044) (not (= 4062139261 x901)) (= x901 4272920204) (>= 1208925819614629174706175 x888) (= x4421 (x2483 (+ x1835 32))) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x655) (<= 0 x888) (not (= x901 2362581449)) (= x5125 (x3592 256)) (< x888 1208925819614629174706176) (= (x3592 128) x3795) (< 0 x3056) (= (x3592 224) x4276) (= x1693 (x3592 128)) (<= 0 x846) (= (x4651 (x3424 x4217) (x1228 1) 0) x3039) (= (x3592 256) x3326) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1834 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3592 160) x4856) (= (x2483 (+ x1835 128)) x4490) (>= x1834 0) (<= 0 x2353) (= x846 (x2246 x3039)) (= x725 x2127) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x846) (>= 1208925819614629174706175 x4350) (= x1385 (x3592 192)) (= (x3592 224) x1154) (= x166 (x2483 (+ x1835 64))) (= x1413 160) (= x296 1) (not (< x901 2362581449))) x774) (=> (not x1198) x2092)))))
(assert (= (or (and x1350 x3807) (and x1323 x2116)) x1823))
(assert (x3142 x3309))
(assert (=> (> (+ 10000 1) x606) (= (x3424 x606) (x1228 x606))))
(assert (x1438 x2882))
(assert (x3142 x547))
(assert (x3142 x1671))
(assert (= x5038 (=> (and (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2400) true) (> x2400 0)) x3453) (= (ite (not x3453) (not x3453) (and (> x2400 170141183460469231731687303715884105727) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2400)))) x5163)) (and (=> x5163 x282) (=> (not x5163) x998)))))
(assert (x3142 x3157))
(assert (x3142 x850))
(assert (x3142 x2431))
(assert (x3142 x212))
(assert (x3142 x1255))
(assert (= x2636 (=> (= x3057 (= 274184521717934524641157099916833587233 x202)) (and (=> (and (= x1143 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x4099 256) x1780) (= 160 x1722) (= x4780 (x4099 160)) (>= 1208925819614629174706175 x443) (= 1 x2879) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (= x1523 (x4651 (x3424 x4217) (x1228 1) 0)) (<= 0 x443) (>= 1208925819614629174706175 x5009) (= x4075 4272920204) (>= x1863 0) (> 1208925819614629174706176 x5009) (= x3350 (x4099 256)) (= (x4099 128) x5040) (not (= 2362581449 x4075)) (not (= 4062139261 x4075)) (= x1422 (x1050 (x3424 274184521717934524641157099916833587233))) (< x443 1208925819614629174706176) (<= 0 x2402) (= 4 x2597) (= x28 (x4099 192)) x3057 (= (x721 x1523) x2054) (= x2027 (x4099 192)) (= x784 (x4099 128)) (not (= 3257672857 x4075)) (= x2369 (x4099 160)) (>= x2054 0) (= x2597 4) (>= x5009 0) (= (x4099 224) x2044) (> x1422 0) (not (< x2597 4)) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2054) (= (x4099 224) x2860) (not (< x4075 2362581449))) x4018) (=> (not x3057) x2797)))))
(assert (x3142 x2821))
(assert (x3142 x4261))
(assert (= (x2631 x2203) 0))
(assert (x3142 x377))
(assert (x3142 x2006))
(assert (= x1673 (=> (and (= (= 0 x4714) x2377) (= (x4664 x891) x2802) (= x1825 (ite (not x2377) 1 0)) (= x3636 (x2483 (+ 64 x3423))) (= (x1999 18446744073709551615 x4214) x4261) (= (uninterp_mod (* x2178 x4357) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4714) (= (x4511 x3636) x4214) (= x1775 (ite (> x4261 x2834) 1 0)) (= x2834 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4714))) (= (x1999 340282366920938463463374607431768211455 x3869) x2178) (= (x2483 (+ x5258 64)) x891) (= (= x3926 0) x567) (= x3926 (x1999 x1825 x1775))) (and (=> (not x567) x4829) (=> x567 x1230)))))
(assert (x3142 x2413))
(assert (= x2226 (or (and x1556 x4183) (and x4883 x3127))))
(assert (= x4615 (and x4834 (not x4332))))
(assert (=> (> (+ 10000 1) x1602) (= (x1228 x1602) (x3424 x1602))))
(assert (x3142 x3531))
(assert (= x1245 x743))
(assert (x3142 x3824))
(assert (x3142 x5128))
(assert (x22 x35 x2297))
(assert (x3142 x2179))
(assert (= x4309 (and (not x3588) x3398)))
(assert (x3142 x3900))
(assert (= (or (and x1370 x2723) (and x2968 x3199)) x5200))
(assert (= (and x2948 (not x4472)) x121))
(assert (x3142 x2099))
(assert (x3142 x840))
(assert (x3142 x704))
(assert (x1438 x5050))
(assert (x3142 x523))
(assert (x3142 x1055))
(assert (x3142 x1450))
(assert (= (=> (and (= x2824 (x1999 20282409603651670423947251286015 x2007)) (= (x4965 (- x2709 x2933)) x3892) (= x4476 (x1999 20282409603651670423947251286015 x2776)) (= x1839 (> x4476 x2824))) (and (=> x1839 x796) (=> (not x1839) x347))) x3608))
(assert (x3142 x4661))
(assert (=> (> (+ 10000 1) x1251) (= (x1228 x1251) (x3424 x1251))))
(assert (x3142 x113))
(assert (= x4205 true))
(assert (x3142 x3012))
(assert (x3142 x1736))
(assert (x3142 x1727))
(assert (= (x2774 x4334) (ite (= x3273 x4334) x681 (x879 x4334))))
(assert (x1438 x4241))
(assert (= x1466 (and x4657 (not x4001))))
(assert (x3142 x3816))
(assert (x3142 x3665))
(assert (x3142 x2206))
(assert (x1438 x2671))
(assert (= (x1228 157198259) (x3424 157198259)))
(assert (x3142 x2641))
(assert (x3142 x2920))
(assert (x3142 x1194))
(assert (x3142 x3886))
(assert (= (=> (and (= 4 x672) (<= 0 x657) (= (x656 x773 1) x5241) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 6) 0) x1993) (= (x3297 x1875) x4244) (<= x4693 18446744073709551615) (= x773 (x4651 (x1228 0) (x1228 10) 0)) (>= 1461501637330902918203684832716283019655932542975 x657) (> 340282366920938463463374607431768211456 x286) (>= 18446744073709551615 x4288) (<= 0 x2540) (= x5205 (x1999 255 x226)) (= x286 (x3514 x1707)) (<= x3832 255) (> 1461501637330902918203684832716283019655932542976 x3590) (= x4792 (x4651 (x3424 x2430) x1993 0)) (= x3489 x2540) (= (x656 x773 2) x2265) (> 18446744073709551616 x625) (>= x4288 0) (<= 0 x625) (<= x286 340282366920938463463374607431768211455) (= (x193 x773) x3590) (> 256 x3832) (= x3169 (x2483 (+ 64 x2211))) (= x2962 (x2483 (+ x1714 288))) (= x3489 (x1999 1461501637330902918203684832716283019655932542975 x5161)) (= x2206 (x2483 (+ x3264 64))) (= (x2483 (+ 64 x2962)) x3848) (>= x604 0) (>= 340282366920938463463374607431768211455 x604) (= (x2483 (+ x950 64)) x2908) (= 0 x413) (= (x5260 x2265) x4288) (>= x4693 0) (= (x1999 1461501637330902918203684832716283019655932542975 x2863) x568) (>= x3590 0) (= x5205 0) (= x1875 (x2483 (+ x1714 288))) (= x226 (x3304 x3264)) (<= 0 x3907) (= (x2147 x5241) x657) (= x3907 (x4007 x2265)) (= (x2104 x4792) x604) (= x1707 (x656 x5241 2)) (> 340282366920938463463374607431768211456 x604) (>= 1461501637330902918203684832716283019655932542975 x3590) (= (x2483 (+ x1714 256)) x3264) (= x3455 0) (> 18446744073709551616 x4288) (= (x2483 (+ 512 x1714)) x1178) (< x3907 18446744073709551616) (= (x1999 1461501637330902918203684832716283019655932542975 x4244) x2430) (>= x3832 0) (<= x625 18446744073709551615) (<= 0 x286) (= x2863 (x4589 x2206)) (< x4693 18446744073709551616) (= (x1123 x1322) x2540) (= (x4551 x773) x3832) (= x4693 (x200 x5241)) (= x625 (x254 x2265)) (> 1461501637330902918203684832716283019655932542976 x2540) (= (= x568 274184521717934524641157099916833587235) x3534) (= x5161 (x3297 x2962)) (>= 18446744073709551615 x3907) (= x3022 274184521717934524641157099916833587210) (= (x2483 (+ x3264 64)) x950) (= (x4651 (x1228 0) (x1228 9) 0) x1322) (> 1461501637330902918203684832716283019655932542976 x657) (= (x2483 (+ 64 x3848)) x2211) (>= 1461501637330902918203684832716283019655932542975 x2540) (= (x2483 (+ 64 x2908)) x3656)) (and (=> (not x3534) x3962) (=> (and (= (x4264 192) x192) (= (x4264 128) x2494) (= x4513 4) (not (= 3257672857 x1218)) (= x3363 (x4264 224)) (>= x888 0) (= (x4651 (x3424 x4217) (x1228 1) 0) x3008) (= (x2483 (+ 384 x3264)) x2114) (= x5174 (x4264 192)) (> 1208925819614629174706176 x4350) (>= x4350 0) (>= 1208925819614629174706175 x4350) (not (= 4062139261 x1218)) (= x4793 (x4264 160)) (<= 0 x4403) (= (x4264 256) x2785) (<= 0 x2353) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2353) (= 4272920204 x1218) (> x5253 0) x3534 (= x444 (x4264 224)) (= 160 x3499) (= (x2483 (+ 352 x3264)) x3647) (= (x4264 160) x1895) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (= x1935 115197700812830431890159100217698998050002284567939525164234024451216521560064) (not (= x1218 2362581449)) (= (x2483 (+ x3264 320)) x2157) (<= x888 1208925819614629174706175) (= (x2483 (+ 288 x3264)) x4699) (= x5253 (x1050 (x3424 274184521717934524641157099916833587235))) (<= x4403 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x686 1) (>= x1834 0) (not (< x1218 2362581449)) (= x4513 x672) (< x888 1208925819614629174706176) (= (x2246 x3008) x4403) (not (> 4 x4513)) (= x421 (x4264 256)) (= (x4264 128) x1309)) x4423))) x2095))
(assert (x22 x1378 x2752))
(assert (= (and x1627 x1965) x3323))
(assert (x3142 x4707))
(assert (= x941 x2522))
(assert (x3142 x3654))
(assert (= (x1228 3950285521) (x3424 3950285521)))
(assert (= (x88 (x1228 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (= (ite (= 288 x3996) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1395 x3996)) (x2096 x3996)))
(assert (x1438 x3480))
(assert (x3142 x4766))
(assert (x1438 x5188))
(assert (x3142 x3979))
(assert (= (+ 2 (x88 x3794)) (x88 (x656 x3794 2))))
(assert (x3142 x3336))
(assert (x3018 x881))
(assert (x3142 x2894))
(assert (x3142 x4444))
(assert (x3142 x1796))
(assert (x1438 x2162))
(assert (x1438 x2946))
(assert (x3142 x529))
(assert (x3142 x5027))
(assert (x1438 x4757))
(assert (x3142 x1575))
(assert (x3142 x4894))
(assert (= x4818 (=> (and (= (x1999 20282409603651670423947251286015 x1748) x727) (= x1748 (uninterp_mod (* x1758 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x727 10141204801825835211973625643007) x2467)) (and (=> (not x2467) x722) (=> x2467 x941)))))
(assert (x3142 x4686))
(assert (= (ite (= 960 x740) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2 x740)) (x1361 x740)))
(assert (x3142 x1196))
(assert (x3142 x3867))
(assert (x3142 x1005))
(assert (x3142 x2471))
(assert (x3142 x5007))
(assert (x493 x606))
(assert (= (ite (and x1914 x2329) (x2306 x1310) (x1249 x1310)) (x204 x1310)))
(assert (= (=> (and (= (x1878 x4275) x3487) (= (x1999 340282366920938463463374607431768211455 x1010) x4905) (= (x1999 18446744073709551615 x1989) x1023) (= 0 x1891) (= x3572 (x2483 (+ x4631 64))) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1450)) (= x4486 (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4143) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1450)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4143) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1450)) (< x4143 x1450))) 1 0)) (= x4298 (x2483 (+ x5107 64))) (>= 1208925819614629174706175 x2610) (= (not x4141) x1295) (= (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3521)) x3827) (= x4911 (* x1023 x1615)) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1356) x3314) (= x3704 0) (= x4275 (x2483 (+ 64 x3028))) (not (ite x1295 x1295 (and (= true (<= x1010 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1010 170141183460469231731687303715884105727)))) (= x1010 (x2486 x2048)) (= (x2486 x5107) x1205) (= x4241 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3521) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3521) true) (> 0 x3521))) 1 0)) (= (x871 x3572) x1989) (= x1615 (uninterp_mod (* x1503 x4905) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2610 (x2486 x3861)) (= (ite (or (and (> x1450 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3827)) (and (< x1450 x3827) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3827) (<= x1450 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x844) (= x3225 x2394) (= (x2483 (+ x3719 31)) x1356) (= x4143 (x4965 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3521))) (= (or (and (= true (<= x3521 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3521 0)) (> x3521 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x401) (= (x2483 (+ x4240 288)) x2048) (= x3084 (x2483 (+ x1450 x3521))) (= x3704 (x1999 x4241 x844)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1023 x1615)) (not (= x65 0)) (= x313 x3084) (= x4141 (and (< 0 x1010) (= true (<= x1010 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (>= 1208925819614629174706175 x1205) (not (or (> x3719 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 x3719) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3719))))) (= (x1999 x1174 x4486) x1891) (= x1450 x4911) (= (x2483 (+ x3314 x5107)) x3225) (= (x2483 (+ 64 x4298)) x3861) (= x1174 (ite (not x401) 1 0))) x2152) x508))
(assert (x1438 x3334))
(assert (x3142 x3176))
(assert (x3142 x5111))
(assert (x3142 x4351))
(assert (x3142 x5185))
(assert (x3142 x3612))
(assert (x3142 x536))
(assert (= (and x1083 x4368) x1799))
(assert (x1047 x4890 x1502))
(assert (x3142 x3368))
(assert (x1438 x1146))
(assert (x1438 x3115))
(assert (x3142 x384))
(assert (x3142 x3623))
(assert (= x1719 (=> (and (= x2829 (x1360 128)) (= x1569 (or (and (> 0 (x216 x2829)) (= (<= (x216 x2829) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x2829)))) (= (x216 x1011) x3778)) (and (=> (not x1569) x2261) (=> x1569 x3462)))))
(assert (x22 x989 x3498))
(assert (x3142 x1357))
(assert (x3142 x5161))
(assert (x3142 x901))
(assert (x3142 x4228))
(assert (x3142 x357))
(assert (x1438 x3763))
(assert (x3142 x2755))
(assert (= (=> (and (= (x1999 1208925819614629174706175 x4535) x3238) (= x4535 (x1249 288)) (= (= x3238 x4535) x303)) (and (=> (and (= true x1749) (not x303)) x1245) (=> x303 x118))) x289))
(assert (x3142 x491))
(assert (=> (> (+ 10000 1) x3375) (= (x1228 x3375) (x3424 x3375))))
(assert (x1438 x199))
(assert (x3142 x3766))
(assert (= 4072298103 (x88 (x1228 4072298103))))
(assert (x3142 x2101))
(assert (x3142 x2364))
(assert (x3142 x50))
(assert (x3142 x1941))
(assert (x4568 x4390 x5054))
(assert (x3142 x3095))
(assert (= x4215 (and (not x4737) x2861)))
(assert (x3142 x3065))
(assert (x3142 x351))
(assert (x3142 x3590))
(assert (x3142 x3271))
(assert (x3142 x4313))
(assert (x3142 x3959))
(assert (x3142 x4168))
(assert (= x2682 (or (and x1267 (not x1700)) (and (not x1291) x67))))
(assert (x3142 x2725))
(assert (x2786 x2008 x4469))
(assert (x3142 x4984))
(assert (= (and (not x3595) x5206) x3277))
(assert (= (=> (and (= x586 (x3426 x1179)) (= (not x1365) x570) (= x1365 (= 0 x586)) (= (= (ite x570 1 0) x586) x4445)) (and (=> x4445 x563) (=> (and (not x4445) (= x1749 true)) x1245))) x4047))
(assert (= (=> (and (= x1127 (x1999 20282409603651670423947251286015 x4691)) (= (ite (not x3023) 1 0) x5050) (= (= x1127 0) x3023) (= x1401 (= 0 x2176)) (= (ite (> x1040 x1558) 1 0) x2671) (= (x1999 x5050 x2671) x2176) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127)) x1558)) (and (=> x1401 x3317) (=> (not x1401) x796))) x2561))
(assert (= x4039 (=> (= (= x4697 0) x792) (and (=> (not x792) x4760) (=> x792 x941)))))
(assert (x3142 x824))
(assert (x3142 x382))
(assert (x3142 x4478))
(assert (x3142 x2532))
(assert (x3142 x1654))
(assert (= (ite (= 288 x2544) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4949 x2544)) (x1448 x2544)))
(assert (=> (> (+ 10000 1) x550) (= (x1228 x550) (x3424 x550))))
(assert (x3142 x3792))
(assert (x3142 x4722))
(assert (=> (> (+ 10000 1) x2430) (= (x3424 x2430) (x1228 x2430))))
(assert (x2786 x3537 x785))
(assert (= (and x5232 x4445) x4883))
(assert (x3142 x4544))
(assert (x3142 x3738))
(assert (x3142 x533))
(assert (= x1437 (=> (= (= x3576 274184521717934524641157099916833587223) x3696) (and (=> (not x3696) x2237) (=> (and (= x250 x4984) (= x1044 x250) x3696 (= x3412 2835717307) (= (x4265 x730) x287) (= 68 x966) (= x2624 x287) (= x2875 (x4965 (- x1867 x250))) (< (+ x1044 x287) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x176) (= 274184521717934524641157099916833587210 x2763) (= x3161 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (= (x4495 x3161) x1867) (<= 0 x1867) (= (x4651 (x3424 x4738) (x1228 1) 0) x730) (= x2642 x966) (= x1632 (+ x4878 x2624)) (not (= 1889567281 x3412)) (not (< x966 4)) (= (x4651 (x3424 x4738) (x1228 1) 0) x3786) (>= x287 0) (= 1 x5039) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2595) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1867) (> x139 0) (= x3517 274184521717934524641157099916833587210) (not (< x3412 826074471)) (= x1651 x4738) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x228) (= x4528 (> x250 x1867)) (= x4738 x3088) (not (= 826074471 x3412)) (>= 1461501637330902918203684832716283019655932542975 x4738) (<= x287 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2514000705 x3412)) (= x139 (x1050 (x3424 274184521717934524641157099916833587223))) (= (x4965 (- x966 4)) x1298) (= x176 (or (and (> 64 x1298) (= (<= x1298 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1298))) (not x4528) (= x4878 x1044) (= x5132 32)) x5183)))))
(assert (x3142 x3529))
(assert (x3142 x3248))
(assert (x3142 x1747))
(assert (x3142 x3772))
(assert (= (and x921 x517) x386))
(assert (x3142 x4077))
(assert (x3142 x4609))
(assert (x3142 x3001))
(assert (= (ite (= x1708 x2233) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x5247 x2233)) (x3301 x2233)))
(assert (x3142 x616))
(assert (= (ite (= x5089 x1391) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1249 x1391)) (x2828 x1391)))
(assert (x2550 x2400 x581))
(assert (x1438 x640))
(assert (x3142 x534))
(assert (= x1267 (and x1552 (not x249))))
(assert (= x4662 (=> (and (= 0 x5106) (= (uninterp_mod (* (x14 x2399) x3857) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3877) (= (x1999 340282366920938463463374607431768211455 x1939) x3857) (= (> x1462 0) x4222) (= x1462 (x1999 255 x4120))) (and (=> x4222 x2368) (=> (and (not x4222) (= x3762 x2085) (= x3877 x5198)) x1117)))))
(assert (x3142 x3762))
(assert (= (and x211 (not x792)) x1200))
(assert (x3142 x3607))
(assert (x1438 x226))
(assert (= (=> (and (= x3376 (uninterp_mod (* x3192 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3577 (< 10141204801825835211973625643007 x4544)) (= x4544 (x1999 20282409603651670423947251286015 x3376))) (and (=> (and (= x3376 x1908) (not x3577)) x3890) (=> x3577 x941))) x3017))
(assert (x3142 x500))
(assert (= (x88 (x656 x1104 2)) (+ (x88 x1104) 2)))
(assert (x3142 x3264))
(assert (x3142 x5008))
(assert (= true x2939))
(assert (= (and x617 (not x3077)) x4499))
(assert (x2786 x2829 x1614))
(assert (= x2861 (and x5018 x1346)))
(assert (x1438 x2708))
(assert (= (=> (= (= x2521 274184521717934524641157099916833587223) x861) (and (=> (and (= 2835717307 x2363) (= (+ x3000 x1056) x2606) (= x3404 x1699) (= 32 x3145) (= x2771 (x4882 x4132)) (>= 1461501637330902918203684832716283019655932542975 x3939) (<= x2771 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x2771 x40) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2611 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2222 x40) (not (< x2363 826074471)) (= x2222 x5022) (= x1055 (x4495 x1588)) (= x3682 (x1050 (x3424 274184521717934524641157099916833587223))) (<= x1055 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3939 x3679) (not x2928) (= (< x1055 x2222) x2928) x861 (not (= x2363 1889567281)) (= x3874 1) (< 0 x3682) (>= x1055 0) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5226) true) (< x5226 64)) (> x5226 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1704) (= x5195 (x1999 1461501637330902918203684832716283019655932542975 x3939)) (= x3065 (x4965 (- x1055 x2222))) (= 274184521717934524641157099916833587210 x819) (= 68 x3404) (not (= 2514000705 x2363)) (= x2771 x1056) (= x3000 x40) (= x5226 (x4965 (- x3404 4))) (not (= 826074471 x2363)) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x1588) (= x1303 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (= (x4651 (x3424 x4512) (x1228 1) 0) x4132) (not (> 4 x3404)) (not x1704) (= 274184521717934524641157099916833587210 x4712) (= x4512 (x1999 1461501637330902918203684832716283019655932542975 x3939)) (<= 0 x2771)) x3793) (=> (not x861) x4519))) x1432))
(assert (x3142 x2614))
(assert (x3142 x1985))
(assert (x3142 x3406))
(assert (x1438 x2002))
(assert (x3142 x35))
(assert (x3142 x2800))
(assert (x3142 x1097))
(assert (x3142 x4242))
(assert (x3142 x586))
(assert (x493 x3043))
(assert (= 0 (x3781 x2072)))
(assert (= (or (and (not x140) x4615) (and (not x907) x2867) (and x1341 x3980) (and (not x1852) x1951) (and (not x1238) x2396) x2843 (and x3034 (not x1401)) (and x2715 x3267) (and x4748 x3399) (and x2756 x1839) (and x1137 x541) (and x2516 x379) x2100 (and x4847 (not x1120)) (and x1277 x2307) x2344 (and x862 (not x3461)) (and x3960 x3780) (and x1083 (not x4368)) (and x4410 x943) x1514 (and x1784 x554) x1678 (and x4305 x3751) (and x3277 x2444) (and x4323 x1656) (and x3258 (not x900)) (and (not x1582) x3661) (and (not x5168) x165) (and x4504 x961) (and x1518 x576) (and x4781 x1961) (and x4834 x4332) x2682 (and x2955 x3974) (and x4737 x2861) (and (not x64) x4471)) x3697))
(assert (x2786 x2776 x1973))
(assert (x3142 x1321))
(assert (= x2388 (and x4897 (not x2757))))
(assert (x3142 x486))
(assert (x3142 x809))
(assert (x3142 x4139))
(assert (x1438 x1825))
(assert (x3142 x4479))
(assert (x3142 x1760))
(assert (x3142 x1285))
(assert (= (x886 x2493) (ite (and x2184 x3850) (x3063 x2493) (x2774 x2493))))
(assert (x2487 x2946))
(assert (= x4739 (or (and x1346 (not x5018)) (and x2898 x1150))))
(assert (x1438 x335))
(assert (= 3257672857 (x88 (x1228 3257672857))))
(assert (x22 x1608 x2131))
(assert (x3142 x4292))
(assert (x3142 x360))
(assert (x3142 x447))
(assert (x3142 x3212))
(assert (x3142 x2699))
(assert (= x2264 (x88 (x3424 x2264))))
(assert (= 0 (x58 x4836)))
(assert (x3142 x2776))
(assert (x2786 x1022 x2703))
(assert (= x448 (=> (= (= x2971 0) x2992) (and (=> (not x2992) x63) (=> x2992 x941)))))
(assert (x3142 x3537))
(assert (= x4389 (and x4576 x4711)))
(assert (= x180 (and x3908 x374)))
(assert (x3142 x2511))
(assert (x3142 x4553))
(assert (= (=> (and (= x4372 128) (= x4147 (= 274184521717934524641157099916833587235 x2414)) (= x3450 (x216 x1908)) (= x2414 (x1999 1461501637330902918203684832716283019655932542975 x2124))) (and (=> (and (= 4 x4579) (= x2242 (x1522 160)) x4147 (= (x1522 224) x2697) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4191) (= x1962 (x1522 128)) (= x1952 (x1050 (x3424 274184521717934524641157099916833587235))) (< x888 1208925819614629174706176) (= x2775 (x1522 192)) (> x1952 0) (= x1015 (x1522 224)) (= x3009 4272920204) (not (> 4 x4579)) (not (= 4062139261 x3009)) (= x4191 (x2246 x3385)) (<= x888 1208925819614629174706175) (>= x4191 0) (= x3385 (x4651 (x3424 x4217) (x1228 1) 0)) (= x123 (x1522 128)) (<= x4350 1208925819614629174706175) (>= x2353 0) (not (> 2362581449 x3009)) (= x1659 (x1522 256)) (= x5157 (x1522 192)) (<= 0 x888) (not (= x3009 2362581449)) (= x1808 (x1522 160)) (= x1762 (x1522 256)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x2793) (<= 0 x4350) (= x2971 1) (not (= x3009 3257672857)) (>= x1834 0) (< x4350 1208925819614629174706176) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4579 4) (= x778 160)) x448) (=> (not x4147) x3956))) x3890))
(assert (= x3969 (or (and (not x4561) x2627) (and x4711 (not x4576)))))
(assert (x2550 x2505 x4251))
(assert (x1438 x324))
(assert (x3142 x4484))
(assert (= (x3424 340282366920938463463374607431768211456) (x1228 340282366920938463463374607431768211456)))
(assert (= x4483 true))
(assert (x3142 x1721))
(assert (x3142 x1623))
(assert (x3142 x3134))
(assert (x22 x506 x2990))
(assert (x2487 x458))
(assert (x3142 x1251))
(assert (x3142 x1503))
(assert (x3142 x3007))
(assert (= x4892 (or (and x3524 x4983) (and x4147 x3734))))
(assert (= (or (and x4843 (not x3581)) (and (not x574) x2593)) x3752))
(assert (x3142 x5148))
(assert (x3142 x1646))
(assert (= x1951 (and (not x2307) x1277)))
(assert (x3142 x1841))
(assert (= (x2281 x2233) (ite (= x2233 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1395 x2233))))
(assert (x2786 x619 x171))
(assert (x3142 x4078))
(assert (= (x3424 3454435393) (x1228 3454435393)))
(assert (x1438 x3310))
(assert (= x796 x1877))
(assert (= x658 (=> (= x1749 true) x1245)))
(assert (= (and x1852 x1951) x3751))
(assert (x4136 x634 x4931))
(assert (x3142 x4421))
(assert (= (=> (= (= x4371 274184521717934524641157099916833587233) x2757) (and (=> (not x2757) x321) (=> (and (= x4701 4) (not (= 2362581449 x697)) (not (< x4701 4)) (<= 0 x443) (not (= 3257672857 x697)) (<= 0 x2402) (= (x4876 192) x4321) (= x2677 (x4876 224)) (>= 1208925819614629174706175 x443) (not (< x697 2362581449)) x2757 (= x365 (x4876 160)) (= (x4876 224) x2972) (= x697 4272920204) (= 4 x4701) (<= 0 x1863) (= (x4876 192) x147) (<= x3618 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 4062139261 x697)) (= x1828 (x4876 256)) (= x750 (x4876 160)) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x3082) (= x3234 (x4876 128)) (<= 0 x3618) (> 1208925819614629174706176 x5009) (= x4107 (x4876 256)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x748) (<= x2402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4228 160) (< 0 x2551) (= x2551 (x1050 (x3424 274184521717934524641157099916833587233))) (= x3618 (x721 x3116)) (>= x5009 0) (= (x4651 (x3424 x4217) (x1228 1) 0) x3116) (= x3914 (x4876 128)) (< x443 1208925819614629174706176) (>= 1208925819614629174706175 x5009)) x4268))) x1549))
(assert (x1438 x5194))
(assert (x3142 x446))
(assert (x3142 x1996))
(assert (= (and x1991 x1095) x3559))
(assert (x3142 x4582))
(assert (= (and x2198 x4026) x61))
(assert (x3142 x1154))
(assert (x3142 x2802))
(assert (x3142 x1252))
(assert (x2550 x2120 x3896))
(assert (x3142 x261))
(assert (x1438 x410))
(assert (x4568 x2391 x3641))
(assert (x3142 x1725))
(assert (x3142 x3997))
(assert (x1438 x1010))
(assert (= (or (and x4389 (not x1418)) (and x1627 (not x1965))) x3749))
(assert (x4136 x1819 x1051))
(assert (=> (< (- x4356 1) 10000) (= (x3424 x4356) (x1228 x4356))))
(assert (x4568 x256 x2614))
(assert (x2550 x3450 x3645))
(assert (x3142 x4593))
(assert (x2550 x3310 x2135))
(assert (= 0 (x3550 x2878)))
(assert (x3142 x1540))
(assert (x3142 x2214))
(assert (x3142 x2705))
(assert (x1438 x5088))
(assert (x1438 x1357))
(assert (x3142 x2820))
(assert (x1438 x1358))
(assert (= x4608 (=> (and (= x4435 x2446) (= x514 x2384)) x3052)))
(assert (=> (> (+ 10000 1) x3098) (= (x1228 x3098) (x3424 x3098))))
(assert (x3142 x3712))
(assert (= (x2171 x1875) 0))
(assert (x3142 x2463))
(assert (= (ite (= x1219 960) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2 x1219)) (x1361 x1219)))
(assert (x3142 x513))
(assert (x2786 x1736 x3530))
(assert (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x3424 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x3142 x108))
(assert (= x372 (or x1809 (and x4034 x1554))))
(assert (= (ite (and x1976 x1188) (x304 x478) (x361 x478)) (x2958 x478)))
(assert (= x2961 (x88 (x3424 x2961))))
(assert (x3142 x3961))
(assert (x1438 x1011))
(assert (= (=> (and (= x2446 x1857) (= x514 x3932)) x3052) x1763))
(assert (x3142 x2399))
(assert (x1438 x1873))
(assert (x3142 x4533))
(assert (x3142 x2073))
(assert (= x4154 (or x5095 (and x4708 x1200) (and x4359 (not x1274)) (and (not x4325) x1134) (and x1400 x1284) x3697 (and x4309 x1086) x2288 x4023 x1980 x4624 x4311 (and x36 (not x461)) x3749 (and (not x5135) x496) (and x5232 (not x4445)) (and (not x2190) x827) (and x2328 (not x303)) x1210 x2226 (and x1026 (not x4304)) x4157 x2716 x717 x3969 (and x1991 (not x1095)) (and x3303 x3428))))
(assert (x3142 x1740))
(assert (x2786 x3223 x822))
(assert (x3142 x3863))
(assert (x1438 x4577))
(assert (x3142 x2896))
(assert (x3142 x5077))
(assert (x3142 x1089))
(assert (x3142 x2548))
(assert (x22 x1357 x433))
(assert (x3142 x2456))
(assert (= x2152 (=> (and (= (< 2 x4020) x3593) (= x4020 (x1999 255 x4120)) (not x3593) (= x313 x311) (= x2394 x3569)) x2070)))
(assert (= x2850 (=> (and (= (uninterp_mod (* x615 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2361) (= x3199 (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2361))) (and (=> (not x3199) x1906) (=> x3199 x2522)))))
(assert (x3142 x3261))
(assert (x3142 x230))
(assert (=> (< (- x1013 1) 10000) (= (x1228 x1013) (x3424 x1013))))
(assert (x3142 x3905))
(assert (x3142 x2058))
(assert (= (or (and x297 x1138) (and x61 x2094)) x2061))
(assert (x3142 x4625))
(assert (x3142 x4186))
(assert (x3142 x1425))
(assert (x3142 x4598))
(assert (x3142 x2681))
(assert (x3142 x3669))
(assert (x3142 x444))
(assert (x2550 x5237 x2468))
(assert (x3142 x1358))
(assert (x4568 x2821 x3531))
(assert (x3142 x2951))
(assert (x3142 x4369))
(assert (x1438 x4102))
(assert (x2487 x3341))
(assert (= (x2631 x4669) 0))
(assert (x3142 x4591))
(assert (x1438 x3531))
(assert (x3142 x556))
(assert (= (ite (= x828 960) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2 x828)) (x1361 x828)))
(assert (x3142 x2391))
(assert (x1438 x2124))
(assert (x3142 x1820))
(assert (x493 x1334))
(assert (x3142 x1937))
(assert (x3142 x4855))
(assert (x3142 x3788))
(assert (x3142 x1211))
(assert (x3142 x956))
(assert (= (=> (and (= (x3514 x3906) x5082) (>= 18446744073709551615 x3954) (= (x2147 x4677) x696) (<= x1098 1461501637330902918203684832716283019655932542975) (= x4014 (x5260 x4742)) (>= x4187 0) (>= x4973 0) (>= 18446744073709551615 x4187) (= x3744 (x4651 (x1228 1) (x1228 10) 0)) (<= x696 1461501637330902918203684832716283019655932542975) (= x4090 (x2483 (+ x2275 64))) (<= 0 x5082) (<= x5082 340282366920938463463374607431768211455) (= (x656 x4677 2) x3906) (>= 18446744073709551615 x4973) (<= x4014 18446744073709551615) (<= 0 x696) (= x4187 (x200 x4677)) (< x3954 18446744073709551616) (= x1692 (x2483 (+ x2906 64))) (= x4890 (x4606 x382)) (= (x4007 x4742) x4973) (= x382 (x2483 (+ 256 x486))) (> 18446744073709551616 x4014) (= (x1999 255 x4890) x1327) (= (x656 x3744 2) x4742) (= (x2483 (+ x2819 64)) x3352) (= (x254 x4742) x3954) (= x4062 (= 1 x1327)) (>= x3954 0) (= (x193 x3744) x1098) (= (x2483 (+ x382 64)) x2275) (= 1 x4715) (< x20 256) (> 340282366920938463463374607431768211456 x5082) (= (x4551 x3744) x20) (>= x4014 0) (= (x656 x3744 1) x4677) (= (x2483 (+ x1692 64)) x2819) (= (x2483 (+ x486 512)) x4087) (= (x2483 (+ 64 x4090)) x5189) (> 18446744073709551616 x4187) (>= x20 0) (> 18446744073709551616 x4973) (= (x2483 (+ 288 x486)) x2906) (<= 0 x1098) (>= 255 x20) (> 1461501637330902918203684832716283019655932542976 x1098) (< x696 1461501637330902918203684832716283019655932542976)) (and (=> x4062 x3658) (=> (not x4062) x648))) x144))
(assert (x3142 x102))
(assert (x2786 x94 x375))
(assert (= x322 (=> (and (< x5067 18446744073709551616) (>= 18446744073709551615 x5067) (<= 0 x5067) (= (or (> (x216 x1851) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 (x216 x1851)) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x216 x1851)) true))) x931)) (and (=> (not x931) x4124) (=> x931 x941)))))
(assert (x3142 x1935))
(assert (x3142 x3532))
(assert (x3142 x3637))
(assert (= x3693 (=> (= x5223 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1594) (and (> 0 x1594) (= true (<= x1594 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (and (not x5223) (= x4638 x4872)) x2249) (=> x5223 x2136)))))
(assert (x3142 x4975))
(assert (x3142 x3869))
(assert (x3142 x645))
(assert (x3142 x4028))
(assert (x3142 x2912))
(assert (x1438 x4086))
(assert (x2550 x1709 x1505))
(assert (x1438 x96))
(assert (= (=> (= x1749 true) x1245) x852))
(assert (= (x1066 x1179) (ite (= x1179 x4005) x3360 (x4588 x1179))))
(assert (x3142 x1624))
(assert (x3142 x1404))
(assert (= (x4182 x1733) 0))
(assert (= x5254 true))
(assert (x1438 x605))
(assert (x3142 x3413))
(assert (x3142 x2530))
(assert (x3142 x4828))
(assert (x3142 x4031))
(assert (x1438 x2921))
(assert (= x4977 (=> (and (= (> x3360 x1492) x3802) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1492) (= (x886 x4709) x1492) (= x4709 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (<= 0 x1492) (= x2905 274184521717934524641157099916833587210)) (and (=> (not x3802) x1412) (=> x3802 x2724)))))
(assert (x3142 x1825))
(assert (x3142 x3173))
(assert (= (x3424 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x1228 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x3142 x4979))
(assert (x3142 x4367))
(assert (x3142 x2677))
(assert (x3142 x1307))
(assert (x493 x1649))
(assert (x3142 x3073))
(assert (x3142 x3014))
(assert (x2550 x3957 x1803))
(assert (= (=> (= (= 0 x877) x739) (and (=> x739 x2300) (=> (not x739) x3533))) x3218))
(assert (x3142 x514))
(assert (x3142 x718))
(assert (x3142 x2450))
(assert (x3142 x5089))
(assert (x22 x199 x4067))
(assert (x3142 x1786))
(assert (= (x88 (x3424 x550)) x550))
(assert (x1438 x4736))
(assert (x3142 x5116))
(assert (= (x88 (x3424 x4738)) x4738))
(assert (x3142 x1413))
(assert (x1438 x4894))
(assert (x493 274184521717934524641157099916833587233))
(assert (x3142 x5221))
(assert (= 0 (x2295 x1219)))
(assert (x3142 x2032))
(assert (x3142 x1489))
(assert (x1438 x4761))
(assert (= x3267 (and (not x1656) x4323)))
(assert (x3142 x4300))
(assert (= (ite (= 128 x5169) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1395 x5169)) (x2281 x5169)))
(assert (x3142 x1873))
(assert (= (ite (= x5169 x1708) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x5247 x5169)) (x3301 x5169)))
(assert (x4568 x5245 x3029))
(assert (x3142 x4620))
(assert (x3142 x2420))
(assert (x3142 x432))
(assert (= x606 (x88 (x3424 x606))))
(assert (= x4392 (=> (and (= (or (and (< x3140 0) (= true (<= x3140 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3140)) x4138) (= (x3703 x168) x2891) (<= 0 x2891) (<= x2891 20282409603651670423947251286015) (= (x4651 (x3424 x4857) (x1228 5) 0) x168) (> 20282409603651670423947251286016 x2891) (>= x2822 0) (> 65536 x2822) (= x3140 (x216 x2891)) (= x2822 (x2488 x3999)) (= x3999 (x4651 (x3424 x4857) (x1228 5) 0)) (>= 65535 x2822)) (and (=> x4138 x2212) (=> (not x4138) x3163)))))
(assert (x3142 x4288))
(assert (x4136 x3497 x4151))
(assert (= (and (not x4293) x765) x4963))
(assert (x3142 x1780))
(assert (x3142 x673))
(assert (x3142 x4925))
(assert (x3142 x2753))
(assert (= (x3143 160) (ite (and x3734 x4147) (x3442 160) (x4676 160))))
(assert (= (=> (and (= (= x2632 x4024) x4561) (= x4024 (x1826 x2420)) (= (x1999 1208925819614629174706175 x4024) x2632)) (and (=> x4561 x4273) (=> (not x4561) x4719))) x4797))
(assert (x3142 x7))
(assert (= (=> (and (= (x656 x463 2) x1340) (<= 0 x1186) (= x3773 (x2483 (+ 544 x3178))) (= (x2483 (+ x4552 64)) x3271) (= x1104 (x656 x463 1)) (= (x4651 (x1228 0) (x1228 10) 0) x463) (= x1222 (x2483 (+ 64 x3773))) (= x4552 (x2483 (+ 64 x849))) (= x5089 (x2483 (+ 512 x2085))) (= (x4551 x463) x1320) (= x910 (x2483 (+ 64 x1222))) (<= x457 1461501637330902918203684832716283019655932542975) (<= 0 x4901) (<= 0 x1320) (= x849 (x2483 (+ x2085 288))) (<= x1186 18446744073709551615) (= (x200 x1104) x643) (<= 0 x1470) (> 1461501637330902918203684832716283019655932542976 x4807) (= x4901 (x254 x1340)) (> 340282366920938463463374607431768211456 x1470) (>= x4807 0) (<= x4807 1461501637330902918203684832716283019655932542975) (> 256 x1320) (< x457 1461501637330902918203684832716283019655932542976) (= x4474 (x4717 x3773)) (<= 0 x457) (= (x2483 (+ 64 x910)) x188) (> 18446744073709551616 x3783) (< x643 18446744073709551616) (<= x643 18446744073709551615) (>= 18446744073709551615 x4901) (= 0 x290) (>= 255 x1320) (>= 340282366920938463463374607431768211455 x1470) (< x4901 18446744073709551616) (= (x193 x463) x4807) (= (x1999 255 x4474) x3231) (< x1186 18446744073709551616) (>= 18446744073709551615 x3783) (= (x5260 x1340) x3783) (= x1186 (x4007 x1340)) (= (x3514 x2851) x1470) (<= 0 x643) (= x2851 (x656 x1104 2)) (= x457 (x2147 x1104)) (= (= x3231 0) x2356) (= (x2483 (+ 64 x3271)) x3527) (<= 0 x3783)) (and (=> x2356 x2689) (=> (not x2356) x3613))) x2812))
(assert (x3142 x3241))
(assert (= x2589 (and (not x4302) x415)))
(assert (x3142 x2592))
(assert (= (x1228 3283311230) (x3424 3283311230)))
(assert (x493 x860))
(assert (x3142 x2650))
(assert (= x2344 (or (and x3510 (not x2527)) (and (not x567) x1262))))
(assert (x3142 x1801))
(assert (x3142 x3231))
(assert (x3142 x346))
(assert (x3142 x3848))
(assert (x3142 x3587))
(assert (x3142 x4837))
(assert (x3142 x1287))
(assert (x3142 x4188))
(assert (x3142 x3360))
(assert (x3142 x4117))
(assert (x3142 x2817))
(assert (x4568 x3731 x344))
(assert (x2786 x4286 x3609))
(assert (= (x2295 x4813) 0))
(assert (= (x845 x3861) (ite x3777 (x3313 x3861) (x5247 x3861))))
(assert (x2786 x4886 x4754))
(assert (x3142 x24))
(assert (= x1290 (=> (and (= (x216 x3040) x2546) (= x4841 (x1999 65535 x3526)) (= (x4651 (x3424 x4857) (x1228 5) 0) x4409) (= x869 (x1999 18446744073709551615 x4969)) (= x4969 (x3364 160)) (= (x234 192) x4773) (= (x1999 255 x4212) x1037) (>= 20282409603651670423947251286015 x3292) (= x4212 (x3631 256)) (= x4201 (or (and (= (<= (x216 x491) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< (x216 x491) 0)) (> (x216 x491) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= 0 x3292) (= (x3703 x4409) x3292) (= (x1999 20282409603651670423947251286015 x2546) x1384) (= (x1130 224) x3526) (= x2308 (x1999 18446744073709551615 x4773)) (= x3040 (x1027 128))) (and (=> (and (not (> x3150 x3090)) (= (x4965 (- 0 x3019)) x4707) (= x2046 (x2813 x3921)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x3019)) x4201 (< x834 20282409603651670423947251286016) (<= 0 x834) (= (x4651 (x3424 x4857) (x1228 5) 0) x3921) (<= x834 20282409603651670423947251286015) (> 65536 x2046) (= (x1999 20282409603651670423947251286015 x4707) x3090) (= x3019 (x216 x491)) (>= 65535 x2046) (= x2780 (or (> x951 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x951) (= (<= x951 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x2770 x3758) x834) (>= x2046 0) (or (and (not (> x4673 10141204801825835211973625643007)) (<= 0 x1040) (not (= x951 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x1999 20282409603651670423947251286015 x4102) x162) (< x1040 18446744073709551616) (= x2983 x2511) (= x2946 x3193) (= (x4965 (- 0 x951)) x4102) (= (* x1040 x162) x3193) (not (or (and (= (<= x4102 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x4102)) (> x4102 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1040 x162)) (= x2511 (x4965 (- 0 x4245))) (>= 18446744073709551615 x1040) (not (= x4245 115792089237316195423570985008687907853269984655499359237631748795939503996928)) x2780 (= x4245 (x216 x2946)) (= (x1999 20282409603651670423947251286015 x2946) x4673)) (and (not (> x281 10141204801825835211973625643007)) (= x3242 (* x4150 x5067)) (= (x1999 20282409603651670423947251286015 x951) x4150) (= x2983 x1736) (= x3242 x1736) (not x2780) (>= x5067 0) (= x281 (x1999 20282409603651670423947251286015 x1736)) (> 18446744073709551616 x5067) (not (or (> x951 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x951) true) (< x951 0)))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x4150 x5067)) (>= 18446744073709551615 x5067))) (= (x216 x834) x951) (= (x4651 (x3424 x4857) (x1228 5) 0) x3758)) x4735) (=> (and (= 288 x1869) (not x4201)) x1498)))))
(assert (= (=> (= (or (> x3927 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3927) true) (< x3927 0))) x5049) (and (=> (and (not x5049) (= x1541 x1131)) x2452) (=> x5049 x1478))) x2348))
(assert (= (x88 (x1228 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (= (=> (and (= x1500 1) (= (x1999 255 x4120) x1008) (= (< 1 x1008) x2064)) (and (=> (and (= x1002 x4300) (= x1697 x486) (not x2064)) x1815) (=> x2064 x3484))) x2324))
(assert (x3142 x2917))
(assert (x3142 x2962))
(assert (= (=> (= x3908 (or (> x2783 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2783)) (> 0 x2783)))) (and (=> x3908 x3042) (=> (and (= x4133 x3772) (not x3908)) x3812))) x3614))
(assert (x3142 x4969))
(assert (= (and (not x2094) x61) x297))
(assert (x3142 x1851))
(assert (x1438 x2119))
(assert (x2550 x4063 x3432))
(assert (= (x1228 1461501637330902918203684832716283019655932542976) (x3424 1461501637330902918203684832716283019655932542976)))
(assert (x3142 x1855))
(assert (x3142 x4595))
(assert (x3142 x2563))
(assert (x3142 x4704))
(assert (x3142 x1270))
(assert (= x1070 x827))
(assert (x3142 x3076))
(assert (x3142 x934))
(assert (x3142 x4137))
(assert (x4568 x5188 x2866))
(assert (x3142 x3410))
(assert (= (=> (and (= x3595 (> x3289 10141204801825835211973625643007)) (= (x1999 20282409603651670423947251286015 x1022) x3289) (= (uninterp_mod (* x1040 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1022)) (and (=> (not x3595) x2924) (=> x3595 x941))) x3317))
(assert (x3142 x5245))
(assert (x3142 x4212))
(assert (x3142 x1172))
(assert (x3142 x3894))
(assert (=> (> (+ 10000 1) x1889) (= (x3424 x1889) (x1228 x1889))))
(assert (x3142 x2842))
(assert (x3142 x158))
(assert (x493 x4738))
(assert (x3142 x684))
(assert (x3142 x5205))
(assert (x3142 x1806))
(assert (= (x2876 x1848) (ite (= x1421 x1848) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x3143 x1848))))
(assert (x3142 x786))
(assert (= (x3424 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x1228 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x3142 x4191))
(assert (x3142 x3356))
(assert (x3142 x267))
(assert (x2487 x2891))
(assert (x1438 x256))
(assert (= (x2295 x3742) 0))
(assert (x3142 x542))
(assert (= (=> (and (= (or (and (< x4160 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4160))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4160)) x708) (= (x4965 (- 0 x1531)) x4160)) (and (=> x708 x941) (=> (not x708) x4972))) x2658))
(assert (x3142 x4346))
(assert (= (and x2759 (not x2585)) x4323))
(assert (= x4760 (=> (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4013) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4013) true) (< x4013 32))) x4708) (and (=> (not x4708) x1642) (=> (and (= true x1749) x4708) x1245)))))
(assert (= (+ (x88 x4677) 2) (x88 (x656 x4677 2))))
(assert (x3142 x132))
(assert (= (and (not x2992) x4892) x3303))
(assert (x3142 x5150))
(assert (= (and x4201 x5044) x1976))
(assert (= (=> (and (= x1279 (x4651 (x3424 x923) (x1228 11) 0)) (= (x4651 (x3424 x2264) x1279 0) x1411) (= (= 0 x270) x2079) (<= 0 x2264) (>= 1461501637330902918203684832716283019655932542975 x2264) (<= x270 255) (= x4863 (x4651 (x1228 1) (x1228 9) 0)) (= x1953 1) (< x2264 1461501637330902918203684832716283019655932542976) (< x270 256) (>= x270 0) (= (x1123 x4863) x2264) (= x270 (x3603 x1411))) (and (=> (and x2079 (= x313 x3521) (= x3788 x2394)) x2152) (=> (not x2079) x2347))) x3878))
(assert (= (x3143 x1848) (ite (and x4147 x3734) (x3442 x1848) (x4676 x1848))))
(assert (= x3777 (or (and x1046 x795) (and x1028 x825))))
(assert (= x2936 (x88 (x3424 x2936))))
(assert (=> (> (+ 10000 1) x1609) (= (x3424 x1609) (x1228 x1609))))
(assert (x3142 x4290))
(assert (= x36 (and (not x2715) x3267)))
(assert (x3142 x5017))
(assert (=> (> (+ 10000 1) x1946) (= (x3424 x1946) (x1228 x1946))))
(assert (=> (> (+ 10000 1) x3900) (= (x1228 x3900) (x3424 x3900))))
(assert (x3142 x1759))
(assert (x2550 x1211 x1348))
(assert (= x3829 (and x574 x2593)))
(assert (x3142 x4888))
(assert (x4136 x4214 x4698))
(assert (x3142 x28))
(assert (= (x3143 256) (ite (and x4147 x3734) (x3442 256) (x4676 256))))
(assert (x3142 x1687))
(assert (= (and (not x4025) x336) x5015))
(assert (x3142 x1864))
(assert (= (=> (= x4293 (= x1855 274184521717934524641157099916833587233)) (and (=> (not x4293) x3138) (=> (and (= (x4651 (x3424 x4217) (x1228 1) 0) x1771) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (= x5128 (x1050 (x3424 274184521717934524641157099916833587233))) (>= x1863 0) (> 1208925819614629174706176 x443) (= x2073 (x1713 192)) (= x882 (x1713 192)) (= (x1713 224) x1446) (<= x443 1208925819614629174706175) (= 160 x3456) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1537) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1863) (= x2739 (x1713 256)) (not (= x4936 2362581449)) (= (x1713 160) x1850) (= x2155 (x1713 256)) (= x328 4) (= (x1713 128) x589) (<= x635 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x4936 2362581449)) (= 1 x4620) (<= 0 x443) (not (> 4 x328)) (>= x5009 0) (= (x1713 160) x280) (not (= x4936 4062139261)) (= x328 4) (<= 0 x2402) (= 4272920204 x4936) (> 1208925819614629174706176 x5009) (>= 1208925819614629174706175 x5009) (not (= x4936 3257672857)) (< 0 x5128) (<= 0 x635) (= (x721 x1771) x635) (= (x1713 224) x2769) x4293 (= (x1713 128) x5121)) x3813))) x1592))
(assert (= (ite (= x478 288) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1395 x478)) (x2096 x478)))
(assert (x3142 x681))
(assert (x3549 x5070 x5239))
(assert (x3142 x1693))
(assert (= x1829 (and x2741 (not x3058))))
(assert (x3142 x3079))
(assert (= (and x1569 x1814) x3960))
(assert (x1438 x1748))
(assert (x3142 x4517))
(assert (x1936 x3946 x5182 x2074 x559))
(assert (= (x1228 20282409603651670423947251286016) (x3424 20282409603651670423947251286016)))
(assert (= x4532 (=> (and (= x2183 (or (and (= (<= x4946 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4946 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4946))) (= x4602 x948) (= x851 (not x2183)) (= x4686 (ite x851 1 0))) x4330)))
(assert (x3142 x3932))
(assert (x3142 x1948))
(assert (x3142 x3988))
(assert (x3142 x903))
(assert (x3142 x3618))
(assert (= (=> (and (<= 0 x4226) (= x1886 (> x3360 x4226)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4226) (= 274184521717934524641157099916833587210 x4831) (= (x3545 x3490) x4226) (= x3490 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0))) (and (=> (not x1886) x4405) (=> x1886 x137))) x3367))
(assert (= x1134 (and (not x4708) x1200)))
(assert (x3142 x5068))
(assert (x3142 x3663))
(assert (= (x5028 x828) (ite (= x1835 x828) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x251 x828))))
(assert (x3142 x2565))
(assert (= x670 (=> (and (= x1718 (x3143 128)) (= x1858 (x1999 1208925819614629174706175 x1718)) (= (= x1718 x1858) x5135)) (and (=> (and (not x5135) (= x1749 true)) x1245) (=> x5135 x100)))))
(assert (x3142 x3629))
(assert (x3142 x3062))
(assert (x3142 x896))
(assert (x3142 x2241))
(assert (x3142 x719))
(assert (x3142 x1265))
(assert (x1438 x2777))
(assert (x3142 x1213))
(assert (x1438 x91))
(assert (= (=> (= true x1749) x1245) x796))
(assert (= (x88 (x656 x3239 2)) (+ (x88 x3239) 2)))
(assert (x1438 x4457))
(assert (x3142 x1758))
(assert (= x511 (or x3144 (and x372 (not x4981)) (and (not x790) x3054))))
(assert (x3142 x4706))
(assert (x493 x2430))
(assert (=> (> (+ 10000 1) x1020) (= (x3424 x1020) (x1228 x1020))))
(assert (x3142 x2883))
(assert (x3142 x1054))
(assert (= x4624 (or (and x1612 (not x393)) (and x53 (not x4524)))))
(assert (x1438 x1908))
(assert (x3142 x4054))
(assert (= (and x1030 (not x2079)) x629))
(assert (x2487 x619))
(assert (x1438 x3036))
(assert (= (=> (and (= (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x3600) x4737) (= (x216 x2800) x3600)) (and (=> (not x4737) x2890) (=> x4737 x796))) x4992))
(assert (= (=> (and (= x5122 (x1999 1461501637330902918203684832716283019655932542975 x1624)) (= (= x5122 x1624) x4402)) (and (=> (not x4402) x4641) (=> x4402 x1988))) x1810))
(assert (x3142 x3473))
(assert (x3142 x980))
(assert (x3142 x4417))
(assert (= (=> (= x3588 (= x3082 0)) (and (=> (not x3588) x4960) (=> x3588 x941))) x4268))
(assert (= (x88 (x1228 18446744073709551616)) 18446744073709551616))
(assert (x493 x3961))
(assert (= x53 (and x4328 x667)))
(assert (= (x3255 x4111) (ite (= x4111 x3296) x3924 (x4204 x4111))))
(assert (x3142 x1069))
(assert (x3142 x4372))
(assert (x3142 x2137))
(assert (x3142 x4859))
(assert (= x2937 (or (and x4413 x4333) (and x4584 x914) (and x1497 (not x613)) (and x3802 x2564))))
(assert (x3142 x1477))
(assert (x3142 x5033))
(assert (= x3094 (and x1406 x3535)))
(assert (x3142 x1044))
(assert (x493 x2046))
(assert (x3142 x413))
(assert (x3142 x802))
(assert (= (+ 1 (x88 x3744)) (x88 (x656 x3744 1))))
(assert (= (x3424 1208925819614629174706175) (x1228 1208925819614629174706175)))
(assert (= x1232 (=> (and (= (x1999 20282409603651670423947251286015 x157) x936) (= (uninterp_mod (* x2180 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x157) (= x2690 (> x936 10141204801825835211973625643007))) (and (=> (and (= x157 x2209) (not x2690)) x5003) (=> x2690 x941)))))
(assert (= x4217 (x88 (x3424 x4217))))
(assert (x3142 x1166))
(assert (=> (< (- x4993 1) 10000) (= (x1228 x4993) (x3424 x4993))))
(assert (x3142 x4926))
(assert (= (ite (= x3861 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1395 x3861)) (x2281 x3861)))
(assert (x493 274184521717934524641157099916833587231))
(assert (x3142 x3299))
(assert (x3142 x396))
(assert (x3142 x76))
(assert (= (x88 (x3424 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x3142 x4396))
(assert (= x1367 (or (and (not x2661) x2465) (and x1137 (not x541)))))
(assert (x1438 x2482))
(assert (x3142 x4639))
(assert (x3142 x3968))
(assert (x4136 x1151 x1968))
(assert (x3142 x4356))
(assert (x3142 x1366))
(assert (= (x1228 274184521717934524641157099916833587227) (x3424 274184521717934524641157099916833587227)))
(assert (x3142 x1699))
(assert (x2786 x318 x3250))
(assert (x1438 x3663))
(assert (= x4971 (=> (and (= (x4651 (x3424 x4848) x4035 0) x3295) (> 256 x1806) (= (not x4092) x3419) (= (= 0 x3864) x4726) (= (x1999 1461501637330902918203684832716283019655932542975 x4249) x4848) (= x1680 (= 0 x3864)) (= x3212 (ite (not x3419) 1 0)) (>= 255 x1806) (= (not x4726) x4092) (= (x4651 (x3424 x1345) (x1228 11) 0) x1084) (= (x4651 (x3424 x1020) (x1228 12) 0) x4035) (>= x1345 0) (= (x4651 (x3424 x4857) (x1228 5) 0) x3606) (= x4713 (= 0 x1806)) (>= 65535 x1345) (< x1345 65536) (= (x4651 (x3424 x2101) x1084 0) x373) (= x461 (= (not x1680) (not x4713))) (= x1345 (x1079 x1922)) (= x1806 (x3603 x373)) (= (x1999 1461501637330902918203684832716283019655932542975 x4249) x2101) (>= x1806 0) (= x1922 (x4651 (x3424 x3212) x3295 0))) (and (=> (and (not x461) (= x1749 true)) x1245) (=> x461 x4392)))))
(assert (= x1574 true))
(assert (= (+ 2 (x88 x942)) (x88 (x656 x942 2))))
(assert (= x1814 (or (and x227 (not x1484)) (and x4504 (not x961)))))
(assert (x3142 x2227))
(assert (x3142 x4982))
(assert (x3142 x1011))
(assert (x3142 x5075))
(assert (x3142 x3576))
(assert (x3142 x437))
(assert (= 1208925819614629174706176 (x88 (x1228 1208925819614629174706176))))
(assert (x3142 x166))
(assert (x3142 x2953))
(assert (x3142 x3526))
(assert (x3142 x169))
(assert (x3142 x369))
(assert (x3142 x4964))
(assert (x1438 x4575))
(assert (= x100 (=> (and (= x335 (x3143 256)) (= x301 (x3143 160)) (= (= x3653 x335) x1095) (= x3653 (x1999 1208925819614629174706175 x335))) (and (=> x1095 x4254) (=> (and (not x1095) (= true x1749)) x1245)))))
(assert (x3142 x935))
(assert (x3142 x2834))
(assert (x3142 x3409))
(assert (x1438 x3475))
(assert (x3142 x3253))
(assert (x1438 x2885))
(assert (x3142 x2015))
(assert (= (ite (= x2576 x3742) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2930 x3742)) (x1913 x3742)))
(assert (= (ite (and x2168 x3659) (x2186 x5169) (x575 x5169)) (x5247 x5169)))
(assert (x1438 x3731))
(assert (= (=> (= x1749 true) x1245) x4571))
(assert (x3142 x2671))
(assert (= (=> (and (= x2059 (ite x5019 1 0)) (= (or (and (< x1002 0) (= true (<= x1002 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1002)) x4247) (= x5019 (not x4247)) (= x1697 x1179)) x587) x1815))
(assert (= (x88 (x3424 x1609)) x1609))
(assert (x3142 x2222))
(assert (x3142 x390))
(assert (x3142 x3310))
(assert (x1438 x4481))
(assert (x1438 x1270))
(assert (x3142 x4860))
(assert (x1438 x2456))
(assert (= x1627 (and x2627 x4561)))
(assert (= (or (and (not x2329) x1914) (and (not x3485) x4411)) x1514))
(assert (x3142 x398))
(assert (x3142 x2178))
(assert (x3142 x953))
(assert (x3142 x3657))
(assert (= (ite (and x3659 x2168) (x2186 x2048) (x575 x2048)) (x5247 x2048)))
(assert (= 2362581449 (x88 (x1228 2362581449))))
(assert (x3142 x27))
(assert (x3142 x2301))
(assert (= 0 (x2171 x4934)))
(assert (= (x4944 x3742) (ite (and x310 x1198) (x2994 x3742) (x224 x3742))))
(assert (x3142 x3252))
(assert (= 0 (x3806 x2206)))
(assert (x3142 x5042))
(assert (x3142 x1971))
(assert (x3142 x2732))
(assert (x3142 x2224))
(assert (x3142 x183))
(assert (= x1649 (x88 (x3424 x1649))))
(assert (x2550 x1750 x2872))
(assert (= (=> (and (= (< 2 x4203) x747) (= x1941 x1697) (= x4203 (x1999 255 x4120)) (= x1389 x1002) (not x747)) x1815) x868))
(assert (x3142 x3246))
(assert (x3142 x2047))
(assert (x3142 x2159))
(assert (x3142 x5188))
(assert (= (x3424 3798450084) (x1228 3798450084)))
(assert (x3142 x2264))
(assert (x3142 x4308))
(assert (x3142 x4789))
(assert (x3142 x257))
(assert (= (x1228 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x3424 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= (=> (and (= x4435 0) (= x2172 x2384)) x4608) x2724))
(assert (x3142 x3567))
(assert (x3142 x2151))
(assert (x3142 x4626))
(assert (x3142 x5118))
(assert (= (ite (= x2544 x5089) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1249 x2544)) (x2828 x2544)))
(assert (x3142 x3226))
(assert (x2487 x2829))
(assert (x2786 x4910 x4877))
(assert (x3142 x5064))
(assert (x1438 x4272))
(assert (= (=> (and (<= 0 x3979) (<= x3979 1461501637330902918203684832716283019655932542975) (= (x4651 (x1228 0) (x1228 9) 0) x185) (= (x1595 x945) x2119) (= (= x3979 x1255) x4683) (= x1255 (x1999 1461501637330902918203684832716283019655932542975 x2119)) (= (x1123 x185) x3979) (> 1461501637330902918203684832716283019655932542976 x3979) (= 0 x2781)) (and (=> (not x4683) x4571) (=> x4683 x2792))) x626))
(assert (= (=> (and (= (x216 x2209) x2399) (= 288 x48) (= (= 274184521717934524641157099916833587235 x4371) x3598) (= x4371 (x1999 1461501637330902918203684832716283019655932542975 x2124))) (and (=> (and (= x1944 115197700812830431890159100217698998050002284567939525164234024451216521560064) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834) (= x875 4272920204) (> 1208925819614629174706176 x888) (= x5074 (x1177 160)) (= (x1177 192) x718) (not (> 4 x3261)) (>= 1208925819614629174706175 x888) (= x3324 (x4651 (x3424 x4217) (x1228 1) 0)) (= (x1177 256) x3649) (not (= x875 4062139261)) (<= x4350 1208925819614629174706175) (<= x3066 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3598 (= x3066 (x2246 x3324)) (= x4113 (x1177 256)) (> x5023 0) (>= x4350 0) (<= 0 x2353) (= (x1177 224) x3078) (= (x1177 224) x4727) (not (< x875 2362581449)) (= 4 x3261) (>= x888 0) (= (x1050 (x3424 274184521717934524641157099916833587235)) x5023) (= (x1177 128) x5008) (= (x1177 192) x26) (= (x1177 128) x288) (< x4350 1208925819614629174706176) (>= x3066 0) (= x3082 1) (not (= x875 3257672857)) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2688 (x1177 160)) (not (= x875 2362581449)) (= x4228 160) (= x3261 4) (<= 0 x1834)) x4268) (=> (not x3598) x1549))) x5003))
(assert (= (x3550 x891) 0))
(assert (x3142 x3260))
(assert (= x5061 (and x1829 (not x1568))))
(assert (x3142 x1768))
(assert (x3142 x3888))
(assert (x22 x1004 x3080))
(assert (x3142 x2874))
(assert (x3142 x975))
(assert (x3142 x138))
(assert (x3142 x3648))
(assert (x3142 x5040))
(assert (x3142 x1640))
(assert (x3142 x5195))
(assert (x2550 x2169 x294))
(assert (x2487 x4180))
(assert (= x2627 (and (not x5091) x300)))
(assert (x3142 x3434))
(assert (= x2768 (=> (and (not (or (> x616 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x616)) (> 160 x616)))) (>= 1208925819614629174706175 x5151) (= x4082 (x4651 (x3424 x3051) x2666 0)) (not (> x4076 x2169)) (= x1712 (not x2270)) (= (x4651 (x3424 x4416) x178 0) x2796) (= x1788 274184521717934524641157099916833587210) (= (x4965 (- x4569 x5222)) x2503) (= x2097 (x4651 (x3424 x4752) x1551 0)) (= (x1999 1461501637330902918203684832716283019655932542975 x3803) x4356) (= (x1999 1461501637330902918203684832716283019655932542975 x3803) x4744) (> 256 x149) (= x3206 (not x1109)) (= (x1999 1461501637330902918203684832716283019655932542975 x3803) x3356) (= x1604 (x4651 (x3424 x3356) x220 0)) (= x4341 x2169) (= x4227 (x4399 x4082)) (<= x3911 340282366920938463463374607431768211455) (= (x2483 (+ 64 x126)) x34) (= (x3255 x2714) x3001) (= (not x984) x580) (<= x1013 65535) (< x4569 340282366920938463463374607431768211456) (< x1013 65536) (<= 0 x3924) (= x1282 (= x2125 0)) (= x4367 (x1999 340282366920938463463374607431768211455 x2169)) (> 20282409603651670423947251286016 x5097) (= x2942 (x4651 (x3424 x4744) (x1228 2) 0)) (= x260 (x1999 340282366920938463463374607431768211455 x1311)) (= x5097 (x3703 x3366)) (= (x4965 (- x4227 x4367)) x3950) (<= 0 x5097) (= (x1999 340282366920938463463374607431768211455 x2503) x1468) (>= x4227 0) (not (< x4569 x5222)) (= x984 (and (> x2537 0) (= (<= x2537 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (<= x5097 20282409603651670423947251286015) (= x2714 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 5) 0)) (>= 340282366920938463463374607431768211455 x4569) (= (x1999 340282366920938463463374607431768211455 x2537) x430) (= (x1999 1461501637330902918203684832716283019655932542975 x3803) x4752) (= (or (> x2482 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2482 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2482) true))) x4032) (= (x2483 (+ 31 x616)) x5175) (= x149 (x3603 x1604)) (= (x4399 x2097) x3911) (= (x4204 x3844) x1013) (not (> x4367 x4227)) (= (x1999 340282366920938463463374607431768211455 x1836) x434) (= x3518 (ite (= 0 x4227) (not (= 0 (x1999 340282366920938463463374607431768211455 x3950))) (= 0 x4227))) (= 274184521717934524641157099916833587210 x195) (= 274184521717934524641157099916833587210 x368) (= 274184521717934524641157099916833587210 x1099) (= x5151 (x251 x2576)) (= (ite (not x3206) 1 0) x4416) (= x3366 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 5) 0)) (> 65536 x3001) (= x1835 (x2483 (+ x2602 x2576))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x4646 x260)) (= x5222 (x1999 340282366920938463463374607431768211455 x2169)) (= (= x2125 0) x2270) (not (= 0 x4053)) (= (x216 x5097) x2482) (or (and (= (= x4227 0) x1336) (= 0 x2125) (not x3518) (= (ite x175 (= 0 (x1999 340282366920938463463374607431768211455 x3950)) x175) x1845) (= x175 (not x1336))) (and x3518 (= x2125 1))) (= x3296 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 5) 0)) (>= 65535 x3001) (< x3924 65536) (= x4181 274184521717934524641157099916833587210) (= x3739 (x4651 (x3424 x1013) (x1228 12) 0)) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 5) 0) x3844) (= x5021 274184521717934524641157099916833587210) (<= 0 x3911) (= (not x1282) x1109) (= x4569 (x308 x2942)) (= (x1999 1461501637330902918203684832716283019655932542975 x3803) x3051) (or (and (= (x1999 20282409603651670423947251286015 x4232) x3188) (not (or (and (> 0 x2482) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2482) true)) (> x2482 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< (* x5056 x5067) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4232 x4886) (<= 0 x5067) (= x5056 (x1999 20282409603651670423947251286015 x2482)) (= x2603 (* x5056 x5067)) (> 18446744073709551616 x5067) (<= x5067 18446744073709551615) (not (< 10141204801825835211973625643007 x3188)) (= x2603 x4232) (not x4032)) (and (= x2403 (x1999 20282409603651670423947251286015 x3341)) (= (x216 x3341) x1355) (= (x4965 (- 0 x1355)) x2647) (= (* x3055 x1040) x258) (= x3055 (x1999 20282409603651670423947251286015 x3223)) (= x4886 x2647) x4032 (> 18446744073709551616 x1040) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x2482)) (= (x4965 (- 0 x2482)) x3223) (>= 18446744073709551615 x1040) (= x258 x3341) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x3055 x1040)) (not (< 10141204801825835211973625643007 x2403)) (>= x1040 0) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1355)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3223) true) (> 0 x3223)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3223))))) (>= x3001 0) (= x4341 (* x4646 x260)) (= x295 (x1999 340282366920938463463374607431768211455 x3950)) (= x126 (x2483 (+ 64 x2576))) (= x1712 x2524) (<= x441 1208925819614629174706175) (>= x4569 0) (= (x1999 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5175) x2602) (= 274184521717934524641157099916833587210 x5192) (<= x4227 340282366920938463463374607431768211455) (= x178 (x4651 (x3424 x4356) x3739 0)) (= x3924 (x1079 x2796)) (<= 0 x1013) (= (not x3386) x2524) (>= 255 x149) (= (- (/ x430 x434) (uninterp_frac x430 x434)) x1311) (> 340282366920938463463374607431768211456 x4227) (= (x4651 (x3424 x3924) (x1228 11) 0) x220) (>= x149 0) (not (ite x580 x580 (and (< 170141183460469231731687303715884105727 x2537) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2537))))) (> x434 0) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 6) 0) x2666) (= (x251 x34) x441) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 6) 0) x1551) (= x5235 (x2483 (+ 992 x2659))) (= (= 0 x149) x3386) (>= 65535 x3924) (= x2537 (x251 x5235))) x2880)))
(assert (x3142 x203))
(assert (x3142 x3500))
(assert (x3142 x2758))
(assert (= (x88 (x1228 2514000705)) 2514000705))
(assert (x3142 x692))
(assert (x3142 x4156))
(assert (x2786 x2755 x3904))
(assert (x3142 x2963))
(assert (= (ite (= x356 x3122) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x874 x3122)) (x4791 x3122)))
(assert (x3142 x4587))
(assert (x3142 x226))
(assert (x493 x4131))
(assert (x3142 x1380))
(assert (x1438 x542))
(assert (x3142 x2253))
(assert (x3142 x78))
(assert (x3142 x3289))
(assert (x3142 x2230))
(assert (x3142 x495))
(assert (x493 x1611))
(assert (x3142 x1974))
(assert (x3142 x3508))
(assert (= x4786 (and x3966 x4043)))
(assert (= (=> (= x1556 (> x2025 0)) (and (=> x1556 x2623) (=> (not x1556) x941))) x4185))
(assert (x3142 x3350))
(assert (x3142 x5146))
(assert (= x3765 (=> (and (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x1487) (= (x4651 (x3424 x4650) (x1228 1) 0) x5257) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x919) (= x1318 274184521717934524641157099916833587210) (>= x919 0) (= (< x3300 x919) x1636) (= x3300 (x4965 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x213))) (= x4186 (x4965 (- x3253 x213))) (= (x1113 x5257) x919) (= (x1999 1461501637330902918203684832716283019655932542975 x108) x4650)) (and (=> (and (not x1636) (= (x2483 (+ x213 x919)) x2943) (= x3932 32) (= x1857 1) (= (x1999 1461501637330902918203684832716283019655932542975 x108) x1837)) x1763) (=> x1636 x5034)))))
(assert (x4568 x3563 x4894))
(assert (x3142 x1812))
(assert (x3142 x4903))
(assert (x3142 x2708))
(assert (x3142 x1144))
(assert (x3142 x2326))
(assert (x3142 x4049))
(assert (x3142 x669))
(assert (x3142 x2361))
(assert (x3142 x457))
(assert (x1438 x4180))
(assert (= x3494 (=> (= x39 (= x3576 274184521717934524641157099916833587227)) (and (=> (not x39) x1437) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2954) (= x2559 x2296) (not (< x4308 826074471)) x39 (not (= 2514000705 x4308)) (= x2559 x3088) (= x4008 68) (= x2314 x99) (> x4835 0) (= (+ x2314 x5005) x802) (= x431 (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0)) (= (x4651 (x3424 274184521717934524641157099916833587210) (x1228 1) 0) x1100) (= 1 x5039) (= x2050 x4984) (= 274184521717934524641157099916833587210 x4566) (= x5005 x2954) (= x4470 (x507 x1100)) (< (+ x2954 x99) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< x4008 4)) (= (x4651 (x3424 x2559) (x1228 1) 0) x1119) (= (x4965 (- x4470 x2050)) x3578) (>= x2954 0) (= x1862 (or (and (= (<= x160 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x160 64)) (> x160 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4308 2835717307) (= x5132 32) (= (x4965 (- x4008 4)) x160) (<= 0 x4470) (= x2887 (x4651 (x3424 x2559) (x1228 1) 0)) (= x2050 x99) (not x1862) (not x783) (>= 1461501637330902918203684832716283019655932542975 x2559) (not (= x4308 1889567281)) (not (= x4308 826074471)) (= x2642 x4008) (= (x4038 x1119) x2954) (= x783 (> x2050 x4470)) (= x1791 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1050 (x3424 274184521717934524641157099916833587227)) x4835) (= 274184521717934524641157099916833587210 x2947) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4470)) x5183)))))
(assert (x3142 x3200))
(assert (= (and x4325 x1134) x4183))
(assert (x3142 x1457))
(assert (= x300 (and x2061 (not x838))))
(assert (x3142 x3715))
(assert (x3142 x4910))
(assert (x2550 x1836 x3403))
(assert (x1438 x5116))
(assert (= x4131 (x88 (x3424 x4131))))
(assert (= (x88 (x3424 x2822)) x2822))
(assert (x1047 x4474 x2078))
(assert (x3142 x288))
(assert (= (and x1274 x4359) x415))
(assert (x3142 x311))
(assert (x3142 x465))
(assert (x3142 x4807))
(assert (= 0 (x1395 x478)))
(assert (= x3466 (or (and (not x3908) x374) (and x4601 (not x755)))))
(assert (x3142 x1545))
(assert (x3142 x4955))
(assert (x3142 x2067))
(assert (x1438 x2944))
(assert (x3142 x639))
(assert (x3142 x4605))
(assert (x3142 x1889))
(assert (x3142 x3704))
(assert (x2550 x1939 x3922))
(assert (x3142 x2899))
(assert (x2786 x2209 x2117))
(assert (x3142 x4116))
(assert (x3142 x1977))
(assert (x3142 x4171))
(assert (x3142 x4380))
(assert (x3142 x4631))
(assert (x3142 x3363))
(assert (= x1914 (and x1153 x3565)))
(assert (x493 x2559))
(assert (x3142 x358))
(assert (x3142 x2269))
(assert (x1438 x1264))
(assert (x3142 x1585))
(assert (x3142 x1620))
(assert (x3142 x3345))
(assert (= true x3943))
(assert (x3142 x1417))
(assert (x1438 x4120))
(assert (x3142 x338))
(assert (x3142 x1788))
(assert (x3142 x5190))
(assert (x3142 x5192))
(assert (= (and x1267 x1700) x1370))
(assert (x3142 x3746))
(assert (= (and (not x2184) x3850) x221))
(assert (= x3793 (=> (and (= x3870 (x2473 x3774)) (= x2091 x3870) (= (not x1970) x762) (not (or (and (= (<= x3145 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3145 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3145))) (> x3870 0) (= (= x3870 0) x1970) (not (= 0 x3874)) (= (ite x762 1 0) x2091)) x5063)))
(assert (x1438 x3950))
(assert (= (x2774 x3154) (ite (= x3154 x3273) x681 (x879 x3154))))
(assert (x3142 x3361))
(assert (x2786 x1959 x4279))
(assert (x3142 x1531))
(assert (x3142 x2108))
(assert (x3142 x4643))
(assert (x3142 x3946))
(assert (= (ite (= x4813 x1178) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x4944 x4813)) (x2679 x4813)))
(assert (= (ite (= x1160 x4813) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x2276 x4813)) (x3929 x4813)))
(assert (x3142 x1476))
(assert (x3142 x1423))
(assert (= 20282409603651670423947251286015 (x88 (x1228 20282409603651670423947251286015))))
(assert (x1438 x3946))
(assert (x1438 x1665))
(assert (x3142 x5140))
(assert (x3142 x4467))
(assert (x3142 x3055))
(assert (x3142 x2793))
(assert (x3142 x2260))
(assert (x3142 x4065))
(assert (x3142 x2023))
(assert (x2786 x4696 x2977))
(assert (x3142 x3810))
(assert (x4568 x4859 x3309))
(assert (x3142 x4884))
(assert (x4568 x2868 x2685))
(assert (x3142 x5170))
(assert (=> (< (- x3961 1) 10000) (= (x1228 x3961) (x3424 x3961))))
(assert (x3142 x417))
(assert (x3142 x1651))
(assert (x3142 x4682))
(assert (x22 x3939 x2737))
(assert (x1438 x4773))
(assert (x3142 x3958))
(assert (= (x4540 x2346) (ite (= x2346 x2420) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x204 x2346))))
(assert (x4136 x1058 x2071))
(assert (= (x3424 274184521717934524641157099916833587223) (x1228 274184521717934524641157099916833587223)))
(assert (x3142 x562))
(assert (x3142 x1818))
(assert (x3142 x5000))
(assert (x3142 x3043))
(assert (x3142 x1099))
(assert (x493 x4993))
(assert (= (and (not x1198) x310) x4578))
(assert (x3142 x4857))
(assert (= (and (not x3429) x4874) x4220))
(assert (= x1518 (and x3275 x4108)))
(assert (= (and x5168 x165) x2310))
(assert (x3142 x2521))
(assert (x493 x1251))
(assert (x3142 x4669))
(assert (= (and x2168 (not x3659)) x3640))
(assert (x3142 x1217))
(assert (x3142 x4502))
(assert (x3142 x5093))
(assert (x3142 x4208))
(assert (x1047 x4212 x3516))
(assert (x3142 x881))
(assert (=> (> (+ 10000 1) x1902) (= (x1228 x1902) (x3424 x1902))))
(assert (x4136 x1702 x1672))
(assert (x3142 x2000))
(assert (x3142 x462))
(assert (x3142 x4090))
(assert (= (x1228 3840337785) (x3424 3840337785)))
(assert (x2786 x3115 x3713))
(assert (x3142 x188))
(assert (x3142 x3996))
(assert (= x3986 (=> (= (= 274184521717934524641157099916833587233 x2366) x409) (and (=> (not x409) x90) (=> (and (not (< x2491 2362581449)) (= x437 (x2483 (+ x3773 352))) (= x4487 1) (= x2698 (x2483 (+ 288 x3773))) (= (x2483 (+ 384 x3773)) x2888) (>= x2402 0) (> 1208925819614629174706176 x443) (not (= 4062139261 x2491)) (= (x1757 128) x3083) (= 4 x4401) (= x384 (x1757 224)) (= (x4651 (x3424 x4217) (x1228 1) 0) x4426) (= x5115 160) (< 0 x18) (not (> 4 x4401)) (= (x1757 256) x4406) (= (x1757 160) x905) (<= x5009 1208925819614629174706175) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (= (x2483 (+ x3773 320)) x515) (= x2491 4272920204) (not (= 2362581449 x2491)) (<= 0 x5009) (= x18 (x1050 (x3424 274184521717934524641157099916833587233))) (> 1208925819614629174706176 x5009) x409 (<= x3905 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3905 0) (= x593 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x4401 x1404) (not (= x2491 3257672857)) (= x3905 (x721 x4426)) (<= x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x443) (= (x1757 192) x1184) (= (x1757 256) x1675) (<= 0 x1863) (= x1170 (x1757 160)) (= x2367 (x1757 192)) (= x145 (x1757 128)) (= (x1757 224) x1929) (>= 1208925819614629174706175 x443)) x867)))))
(assert (x3142 x114))
(assert (= (x2774 x1093) (ite (= x3273 x1093) x681 (x879 x1093))))
(assert (x3142 x620))
(assert (= x3144 (or x3447 (and x3842 x3633))))
(assert (x3142 x2583))
(assert (x3142 x3725))
(assert (x3142 x248))
(assert (x3142 x1685))
(assert (x3142 x141))
(assert (x3142 x1178))
(assert (x3142 x5081))
(assert (x3142 x1443))
(assert (= (and (not x4529) x1042) x3711))
(assert (x3142 x4650))
(assert (x3142 x3950))
(assert (= (and x1778 x5049) x3807))
(assert (x493 x2936))
(assert (x3142 x4153))
(assert (x3142 x5249))
(assert (= (=> (and (= 2835717307 x4593) (= x3360 x2530) (= x3583 x2415) (= (or (and (< x501 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x501))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x501)) x4413) (not (= 826074471 x4593)) (= (x4965 (- x3583 4)) x501) (> x3353 0) (= x1624 x1898) (= x3583 68) (not (= x4593 1889567281)) (not (> 826074471 x4593)) (= x3353 (x1050 (x3424 274184521717934524641157099916833587231))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3546) (not (< x3583 4)) (not (= 2514000705 x4593))) (and (=> x4413 x2724) (=> (not x4413) x2973))) x2065))
(assert (x3142 x2685))
(assert (x3142 x725))
(assert (x3142 x1378))
(assert (x3142 x273))
(assert (x3142 x2149))
(assert (x3142 x4838))
(assert (x3142 x4856))
(assert (x3142 x4297))
(assert (= x1652 (=> (and (= (x2790 192) x908) (= (> x3707 x4769) x3974) (= x5065 (uninterp_mod (* x3880 x5112) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x4769 (x4965 (- 18446744073709551615 x799))) (= (x1999 18446744073709551615 x908) x3707) (= (x1999 18446744073709551615 x5065) x799)) (and (=> x3974 x796) (=> (and (= (x1999 18446744073709551615 x1819) x967) (not x3974) (= (x2483 (+ x3707 x799)) x1819)) x564)))))
(assert (= 274184521717934524641157099916833587233 (x88 (x1228 274184521717934524641157099916833587233))))
(assert (= (=> (and (= x261 (x1999 18446744073709551615 x4596)) (= x5150 (x2483 (+ 64 x4836))) (= x2266 (= 0 x5036)) (= x2586 (x4501 x138)) (= (= 0 x1816) x1700) (= (uninterp_mod (* x5006 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5036) (= x1816 (x1999 x711 x1620)) (= x711 (ite (not x2266) 1 0)) (= x1620 (ite (< x1039 x261) 1 0)) (= x1039 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5036))) (= (x2483 (+ x2203 64)) x138) (= (x1999 340282366920938463463374607431768211455 x4042) x1426) (= (x333 x5150) x4596)) (and (=> (not x1700) x3362) (=> x1700 x2726))) x3294))
(assert (= x4829 x796))
(assert (x3142 x766))
(assert (x3142 x3562))
(assert (x3142 x2559))
(assert (x4136 x3808 x1521))
(assert (x3142 x3859))
(assert (x3142 x3240))
(assert (= x587 (=> (= x2102 (< 0 x2059)) (and (=> (not x2102) x941) (=> x2102 x235)))))
(assert (x3142 x3883))
(assert (x3142 x3338))
(assert (= (ite (= x1421 x2260) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x3143 x2260)) (x2876 x2260)))
(assert (x3142 x284))
(assert (x2786 x4160 x4672))
(assert (= (x4949 x1391) 0))
(assert (x1438 x4828))
(assert (= (=> (= true x1749) x1245) x965))
(assert (x3142 x923))
(assert (x3142 x3457))
(assert (x2550 x3081 x5217))
(assert (x3142 x1539))
(assert (x3142 x3666))
(assert (x3142 x2907))
(assert (x3142 x1861))
(assert (x3142 x4127))
(assert (x3142 x4887))
(assert (x3142 x3141))
(assert (x3142 x604))
(assert (= x2716 (or (and (not x4026) x2198) (and x1535 (not x3422)))))
(assert (x3142 x2733))
(assert (x1438 x1132))
(assert (x3142 x4815))
(assert (= x676 (and x121 (not x1992))))
(assert (x3142 x3468))
(assert (= 0 (x3806 x4789)))
(assert (x3142 x356))
(assert (x3142 x4909))
(assert (x3142 x3436))
(assert (= (or (and x121 x1992) (and x2948 x4472)) x2741))
(assert (x3142 x3))
(assert (= x4362 (=> (= (or (> x3877 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3877)) (> 0 x3877))) x2864) (and (=> (and (not x2864) (= x4872 x2085)) x2249) (=> x2864 x2812)))))
(assert (x3142 x4757))
(assert (x3142 x1754))
(assert (= (=> (and (= (x4651 (x3424 x4935) x2408 0) x610) (<= x4282 340282366920938463463374607431768211455) (= x1656 (< x4282 x1285)) (= x2408 (x4651 (x3424 x4857) (x1228 6) 0)) (= (x1999 1461501637330902918203684832716283019655932542975 x4249) x4935) (= (x2104 x610) x4282) (= (x1999 340282366920938463463374607431768211455 x3310) x1285) (> 340282366920938463463374607431768211456 x4282) (<= 0 x4282)) (and (=> x1656 x796) (=> (not x1656) x4233))) x5138))
(assert (= x118 (=> (and (= (x1999 1208925819614629174706175 x3307) x291) (= x4304 (= x3307 x291)) (= (x1249 416) x3307) (= (x1249 320) x1939)) (and (=> x4304 x1250) (=> (and (not x4304) (= x1749 true)) x1245)))))
(assert (x3142 x4462))
(assert (x3142 x1880))
(assert (= x4601 (and (not x1554) x4034)))
(assert (x3142 x799))
(assert (x3142 x1847))
(assert (= x81 (and x4389 x1418)))
(assert (= (or (and x3429 x4874) (and x4710 x1112)) x4867))
(assert (= (=> (and (= x4043 (> x1040 0)) (= x153 (- (/ x1984 x5067) (uninterp_frac x1984 x5067))) (= x5052 (x1999 20282409603651670423947251286015 x2755)) (>= x1040 0) (= x3132 (x1999 20282409603651670423947251286015 x153)) (>= 18446744073709551615 x1040) (< x1040 18446744073709551616)) (and (=> (not x4043) x963) (=> x4043 x4400))) x2464))
(assert (= (x3424 826074471) (x1228 826074471)))
(assert (x3142 x5209))
(assert (x3142 x3610))
(assert (x3142 x4272))
(assert (= 3283311230 (x88 (x1228 3283311230))))
(assert (= (and x2064 x4329) x2069))
(assert (x3142 x2169))
(assert (x3142 x2586))
(assert (x3142 x4697))
(assert (x3142 x2098))
(assert (= (x88 (x656 x4516 2)) (+ 2 (x88 x4516))))
(assert (x3142 x4721))
(assert (= (=> (and (<= 0 x5006) (= x2424 (x503 x4836)) (= (= 274184521717934524641157099916833587235 x243) x3582) (= (x1999 1461501637330902918203684832716283019655932542975 x2248) x2339) (= x5006 (x1124 x3492)) (< x5006 340282366920938463463374607431768211456) (= x2203 (x2483 (+ 288 x1662))) (= (x1999 1461501637330902918203684832716283019655932542975 x2424) x243) (>= 340282366920938463463374607431768211455 x5006) (= (x4651 (x3424 x4857) (x1228 6) 0) x4480) (= (x1595 x2203) x2248) (= (x2483 (+ x5118 64)) x4836) (= 4 x4968) (= (x4651 (x3424 x2339) x4480 0) x3492)) (and (=> (not x3582) x1660) (=> (and (= x877 1) (= x2904 (x3059 128)) (= (x3059 160) x3195) (= x645 (x3059 160)) (= (x2246 x60) x3888) (>= x4350 0) (= x2835 4) (= x4502 (x3059 192)) (not (= 2362581449 x726)) (>= x2353 0) (= (x3059 256) x1038) (= 4272920204 x726) (= x2859 (x2483 (+ x5118 352))) (<= x1834 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1834 0) (= (x4651 (x3424 x4217) (x1228 1) 0) x60) (>= 1208925819614629174706175 x888) (= x1769 (x2483 (+ x5118 320))) (<= 0 x888) x3582 (= x4463 (x1050 (x3424 274184521717934524641157099916833587235))) (>= x3888 0) (= x4242 (x3059 256)) (not (= x726 4062139261)) (= x2989 115197700812830431890159100217698998050002284567939525164234024451216521560064) (not (> 2362581449 x726)) (not (= 3257672857 x726)) (= x106 (x3059 224)) (> 1208925819614629174706176 x888) (= x3805 (x3059 224)) (< x4350 1208925819614629174706176) (<= x3888 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x4463) (<= x4350 1208925819614629174706175) (= (x3059 192) x495) (<= x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3103 160) (= x2938 (x3059 128)) (= x2835 x4968) (= (x2483 (+ x5118 384)) x1474) (not (> 4 x2835)) (= (x2483 (+ 288 x5118)) x835)) x3218))) x2792))
(assert (x3142 x2628))
(assert (x3142 x4811))
(assert (x3142 x4257))
(assert (x3142 x2531))
(assert (x3142 x1838))
(assert (x3142 x4433))
(assert (x3142 x3392))
(assert (= (and (not x3199) x2968) x2350))
(assert (= (or (and x1272 x5031) (and x1804 x1679) (and x800 x861)) x1876))
(assert (= 0 (x1395 x3122)))
(assert (x3142 x3651))
(assert (x3142 x2351))
(assert (x3142 x4391))
(assert (x3142 x1891))
(assert (x493 x4805))
(assert (x3142 x4773))
(assert (x3142 x1602))
(assert (x3142 x4370))
(assert (x3142 x1022))
(assert (= x4874 (and (not x4710) x1112)))
(assert (x3142 x1107))
(assert (x3142 x1632))
(assert (x3142 x1842))
(assert (x3142 x195))
(assert (x1438 x4927))
(assert (x3142 x2629))
(assert (x3142 x4177))
(assert (x3142 x3041))
(assert (x3142 x2971))
(assert (x2786 x1890 x4679))
(assert (x1936 x1096 x4494 x3819 x2315))
(assert (x3142 x4225))
(assert (x3142 x908))
(assert (x3142 x710))
(assert (x3142 x162))
(assert (x1438 x1989))
(assert (x1438 x3062))
(assert (x3142 x3349))
(assert (x3142 x3455))
(assert (x3142 x4848))
(assert (= 0 (x85 x4475)))
(assert (=> (> (+ 10000 1) x4066) (= (x1228 x4066) (x3424 x4066))))
(assert (x4568 x4757 x4851))
(assert (x3142 x714))
(assert (x3142 x4638))
(assert (x2786 x2725 x2830))
(assert (x3142 x2129))
(assert (x3142 x1118))
(assert (= 3798450084 (x88 (x1228 3798450084))))
(assert (x3142 x3402))
(check-sat)
