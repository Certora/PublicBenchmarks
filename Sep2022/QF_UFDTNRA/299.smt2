(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x986 0)) (((x264 (x228 x986) (x1458 Real)) (x1478 (x515 Real)) (x570 (x214 x986) (x362 x986) (x1482 Real)))))
(declare-fun x916 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x864 () Bool)
(declare-fun x15 () x986)
(declare-fun x1425 (Real Real) Real)
(declare-fun x728 () Bool)
(declare-fun x1174 () x986)
(declare-fun x1340 () Bool)
(declare-fun x790 () Real)
(declare-fun x901 (x986) Real)
(declare-fun x433 (Real) Real)
(declare-fun x444 () Bool)
(declare-fun x154 () Real)
(declare-fun x714 () Real)
(declare-fun x473 () Bool)
(declare-fun x221 () Real)
(declare-fun x370 () Real)
(declare-fun x870 () Real)
(declare-fun x1323 () Real)
(declare-fun x911 () Real)
(declare-fun x1417 () Bool)
(declare-fun x116 () Bool)
(declare-fun x792 () x986)
(declare-fun x1064 () Bool)
(declare-fun x857 () Real)
(declare-fun x401 () Real)
(declare-fun x296 () Bool)
(declare-fun x1097 () Real)
(declare-fun x386 () Bool)
(declare-fun x87 () Bool)
(declare-fun x805 () Bool)
(declare-fun x600 () Bool)
(declare-fun x1226 () x986)
(declare-fun x308 (Real) Real)
(declare-fun x811 () Bool)
(declare-fun x829 () Real)
(declare-fun x469 () Bool)
(declare-fun x797 () Bool)
(declare-fun x357 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x812 () Bool)
(declare-fun x565 () Real)
(declare-fun x325 () Bool)
(declare-fun x922 () x986)
(declare-fun x569 () Bool)
(declare-fun x1259 () Real)
(declare-fun x120 () Real)
(declare-fun x1050 () Bool)
(declare-fun x1457 () Real)
(declare-fun x1371 () Real)
(declare-fun x44 () Bool)
(declare-fun x125 () Real)
(declare-fun x348 () Bool)
(declare-fun x1225 () Real)
(declare-fun x503 () Bool)
(declare-fun x408 () Real)
(declare-fun x830 () Real)
(declare-fun x809 () Bool)
(declare-fun x562 () x986)
(declare-fun x556 () Real)
(declare-fun x1329 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x945 () Real)
(declare-fun x557 () Real)
(declare-fun x1062 (x986) Real)
(declare-fun x798 () Real)
(declare-fun x179 () Bool)
(declare-fun x229 (Real) Real)
(declare-fun x54 () Real)
(declare-fun x973 () Bool)
(declare-fun x491 () x986)
(declare-fun x521 () Bool)
(declare-fun x1410 () x986)
(declare-fun x875 (Real) Real)
(declare-fun x1451 () Bool)
(declare-fun x1422 () Real)
(declare-fun x1412 () x986)
(declare-fun x1035 () Real)
(declare-fun x85 () Bool)
(declare-fun x1247 () Real)
(declare-fun x332 () Bool)
(declare-fun x1389 () Real)
(declare-fun x642 () Bool)
(declare-fun x344 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x313 () Bool)
(declare-fun x1032 () Real)
(declare-fun x22 (Real) Real)
(declare-fun x445 () x986)
(declare-fun x243 () Real)
(declare-fun x422 () Bool)
(declare-fun x132 () Real)
(declare-fun x816 () Real)
(declare-fun x114 () Bool)
(declare-fun x1039 () Real)
(declare-fun x824 () Real)
(declare-fun x476 () Real)
(declare-fun x141 () Bool)
(declare-fun x51 () Bool)
(declare-fun x1378 () Real)
(declare-fun x518 () Bool)
(declare-fun x507 () Real)
(declare-fun x746 () Real)
(declare-fun x500 () Real)
(declare-fun x242 () x986)
(declare-fun x49 () x986)
(declare-fun x409 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1335 () Real)
(declare-fun x881 () Real)
(declare-fun x183 () Bool)
(declare-fun x353 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x266 () Real)
(declare-fun x930 () Bool)
(declare-fun x1171 () Real)
(declare-fun x789 () Real)
(declare-fun x1443 () Real)
(declare-fun x189 (Real) Real)
(declare-fun x128 () Bool)
(declare-fun x181 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1315 () Real)
(declare-fun x5 () Real)
(declare-fun x155 () Bool)
(declare-fun x269 () Bool)
(declare-fun x531 (Real) Real)
(declare-fun x923 () Real)
(declare-fun x168 () Bool)
(declare-fun x936 (Real) Real)
(declare-fun x227 () Bool)
(declare-fun x25 () Real)
(declare-fun x947 () Bool)
(declare-fun x1288 () Real)
(declare-fun x1041 () Bool)
(declare-fun x438 () Real)
(declare-fun x446 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x504 () Real)
(declare-fun x342 () Real)
(declare-fun x1184 () Bool)
(declare-fun x1477 () Real)
(declare-fun x1454 () Real)
(declare-fun x1261 () Real)
(declare-fun x595 () Real)
(declare-fun x943 () Real)
(declare-fun x86 () Real)
(declare-fun x674 () Real)
(declare-fun x75 () Bool)
(declare-fun x903 () Real)
(declare-fun x1197 (Real) Real)
(declare-fun x1051 () Bool)
(declare-fun x980 () Bool)
(declare-fun x328 () Real)
(declare-fun x459 () Real)
(declare-fun x581 () Bool)
(declare-fun x731 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x567 () Real)
(declare-fun x1437 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x777 () Real)
(declare-fun x138 () Bool)
(declare-fun x1290 () Real)
(declare-fun x1345 () Bool)
(declare-fun x23 (Real) Real)
(declare-fun x543 () Bool)
(declare-fun x413 () Bool)
(declare-fun x756 (x986) Real)
(declare-fun x1296 () Real)
(declare-fun x1012 () Bool)
(declare-fun x1424 () Real)
(declare-fun x1223 () Bool)
(declare-fun x684 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x747 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x415 () Bool)
(declare-fun x659 () Real)
(declare-fun x1020 () Bool)
(declare-fun x532 () Bool)
(declare-fun x14 (Real) Real)
(declare-fun x896 () Bool)
(declare-fun x998 () Real)
(declare-fun x1379 () Real)
(declare-fun x961 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x733 () Bool)
(declare-fun x454 () Real)
(declare-fun x299 () Real)
(declare-fun x1490 () Bool)
(declare-fun x528 () Bool)
(declare-fun x1018 () Real)
(declare-fun x21 () Bool)
(declare-fun x1439 () Real)
(declare-fun x1392 () Real)
(declare-fun x487 () Bool)
(declare-fun x685 () Bool)
(declare-fun x100 () x986)
(declare-fun x394 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x373 () Real)
(declare-fun x750 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x520 () Real)
(declare-fun x59 () Bool)
(declare-fun x749 () Real)
(declare-fun x484 () Bool)
(declare-fun x334 () Bool)
(declare-fun x346 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x1164 () Real)
(declare-fun x672 (x986) Real)
(declare-fun x1143 (Real) Real)
(declare-fun x276 () Real)
(declare-fun x509 (x986) Real)
(declare-fun x1337 () Bool)
(declare-fun x985 () Bool)
(declare-fun x384 () x986)
(declare-fun x1411 () Real)
(declare-fun x1107 () Bool)
(declare-fun x818 () Real)
(declare-fun x192 () Bool)
(declare-fun x1377 () Real)
(declare-fun x20 () Real)
(declare-fun x800 () Bool)
(declare-fun x865 () Bool)
(declare-fun x94 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x593 () Real)
(declare-fun x67 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x889 () Real)
(declare-fun x605 (x986) Real)
(declare-fun x1248 () Bool)
(declare-fun x139 () Bool)
(declare-fun x1361 () Real)
(declare-fun x891 () Real)
(declare-fun x926 () Real)
(declare-fun x1448 () Bool)
(declare-fun x437 () Real)
(declare-fun x1023 () Bool)
(declare-fun x1127 () Real)
(declare-fun x878 () Bool)
(declare-fun x1146 () Real)
(declare-fun x924 (Real) Real)
(declare-fun x1079 () Bool)
(declare-fun x271 () Bool)
(declare-fun x123 () Bool)
(declare-fun x1282 () Real)
(declare-fun x1121 () Real)
(declare-fun x846 () Real)
(declare-fun x763 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x837 () Real)
(declare-fun x1489 () x986)
(declare-fun x1093 () x986)
(declare-fun x827 () Real)
(declare-fun x331 () Real)
(declare-fun x39 () Bool)
(declare-fun x1310 () Real)
(declare-fun x782 () x986)
(declare-fun x1352 () Real)
(declare-fun x1399 () Real)
(declare-fun x1153 () Real)
(declare-fun x410 () Bool)
(declare-fun x1059 (Real) Real)
(declare-fun x11 (Real) Real)
(declare-fun x1400 () Real)
(declare-fun x689 () Real)
(declare-fun x1338 () Bool)
(declare-fun x772 () Bool)
(declare-fun x975 (x986) Real)
(declare-fun x660 () Real)
(declare-fun x1137 () x986)
(declare-fun x1332 () Real)
(declare-fun x813 () Real)
(declare-fun x411 () Bool)
(declare-fun x897 () Real)
(declare-fun x972 () Real)
(declare-fun x312 () Real)
(declare-fun x1071 () Real)
(declare-fun x900 () Real)
(declare-fun x513 () Real)
(declare-fun x539 () Bool)
(declare-fun x237 () Bool)
(declare-fun x666 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x988 () Real)
(declare-fun x687 () Real)
(declare-fun x767 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x1072 () Real)
(declare-fun x1040 () Real)
(declare-fun x752 () Real)
(declare-fun x127 () Real)
(declare-fun x832 () Real)
(declare-fun x418 () Real)
(declare-fun x1055 () Real)
(declare-fun x648 () Real)
(declare-fun x696 () Real)
(declare-fun x1243 () Real)
(declare-fun x112 () Real)
(declare-fun x898 () Bool)
(declare-fun x400 () Bool)
(declare-fun x1283 () Real)
(declare-fun x597 () Real)
(declare-fun x899 () Real)
(declare-fun x89 () Real)
(declare-fun x1025 () Bool)
(declare-fun x1074 () Real)
(declare-fun x260 () Real)
(declare-fun x113 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x1334 () Real)
(declare-fun x256 () Bool)
(declare-fun x166 () Bool)
(declare-fun x1098 () x986)
(declare-fun x1481 () Bool)
(declare-fun x82 () x986)
(declare-fun x535 () Bool)
(declare-fun x725 () Real)
(declare-fun x186 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x665 () Real)
(declare-fun x1009 () Bool)
(declare-fun x990 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x1446 () Real)
(declare-fun x17 () Real)
(declare-fun x319 () x986)
(declare-fun x1203 () Bool)
(declare-fun x694 () Bool)
(declare-fun x511 () Real)
(declare-fun x686 () Real)
(declare-fun x987 (Real) Real)
(declare-fun x843 () Real)
(declare-fun x1273 () Bool)
(declare-fun x974 () Real)
(declare-fun x1154 (Real) Real)
(declare-fun x1391 () Real)
(declare-fun x1124 () Bool)
(declare-fun x365 () Bool)
(declare-fun x1125 () Real)
(declare-fun x219 () Bool)
(declare-fun x1474 () Real)
(declare-fun x693 () Bool)
(declare-fun x146 () Bool)
(declare-fun x371 () Real)
(declare-fun x723 () Bool)
(declare-fun x363 () x986)
(declare-fun x1240 () Real)
(declare-fun x1307 () Real)
(declare-fun x720 () Bool)
(declare-fun x1267 () Real)
(declare-fun x842 () Bool)
(declare-fun x456 () Real)
(declare-fun x170 () Real)
(declare-fun x173 () Real)
(declare-fun x464 () Real)
(declare-fun x1102 () Real)
(declare-fun x333 () Real)
(declare-fun x449 () Real)
(declare-fun x349 () Real)
(declare-fun x526 () Bool)
(declare-fun x174 () Bool)
(declare-fun x876 () Real)
(declare-fun x699 () Real)
(declare-fun x966 () Real)
(declare-fun x999 () Bool)
(declare-fun x1075 () Real)
(declare-fun x1308 () Bool)
(declare-fun x1229 () Real)
(declare-fun x814 () Real)
(declare-fun x1172 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x853 () Bool)
(declare-fun x652 () Bool)
(declare-fun x376 () x986)
(declare-fun x223 () Bool)
(declare-fun x311 () Bool)
(declare-fun x1017 () x986)
(declare-fun x110 () Real)
(declare-fun x283 () Real)
(declare-fun x854 () Bool)
(declare-fun x458 () Bool)
(declare-fun x19 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x1484 () x986)
(declare-fun x708 () Real)
(declare-fun x855 () Real)
(declare-fun x506 () Bool)
(declare-fun x461 () Real)
(declare-fun x656 () Bool)
(declare-fun x68 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x706 (Real) Real)
(declare-fun x1466 () Bool)
(declare-fun x1157 () Real)
(declare-fun x385 () Real)
(declare-fun x97 () Real)
(declare-fun x743 () x986)
(declare-fun x501 () Bool)
(declare-fun x825 () Bool)
(declare-fun x134 () Real)
(declare-fun x275 () Real)
(declare-fun x561 () Bool)
(declare-fun x1176 () Real)
(declare-fun x1387 () Bool)
(declare-fun x1139 () Real)
(declare-fun x212 () x986)
(declare-fun x119 () Bool)
(declare-fun x452 () Real)
(declare-fun x634 () Bool)
(declare-fun x702 () Bool)
(declare-fun x148 () Real)
(declare-fun x218 (Real) Real)
(declare-fun x631 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x893 () Real)
(declare-fun x1275 () Bool)
(declare-fun x343 () Bool)
(declare-fun x545 (Real) Real)
(declare-fun x863 () Real)
(declare-fun x137 () Bool)
(declare-fun x143 () Real)
(declare-fun x1187 () Bool)
(declare-fun x635 () Bool)
(declare-fun x350 () Bool)
(declare-fun x1086 () Real)
(declare-fun x784 () x986)
(declare-fun x254 () Bool)
(declare-fun x108 () Bool)
(declare-fun x815 () Bool)
(declare-fun x804 () Real)
(declare-fun x834 () Bool)
(declare-fun x958 () Bool)
(declare-fun x915 () Bool)
(declare-fun x149 (x986) Real)
(declare-fun x239 () Bool)
(declare-fun x337 () Bool)
(declare-fun x1048 () Real)
(declare-fun x536 () Real)
(declare-fun x235 () Bool)
(declare-fun x591 (Real) Real)
(declare-fun x701 () Real)
(declare-fun x1321 () Bool)
(declare-fun x663 () Real)
(declare-fun x794 () Bool)
(declare-fun x849 () Bool)
(declare-fun x780 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x2 (Real) Real)
(declare-fun x1003 () Real)
(declare-fun x729 () Bool)
(declare-fun x6 () Real)
(declare-fun x522 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x34 () Bool)
(declare-fun x589 () Bool)
(declare-fun x291 () Bool)
(declare-fun x1312 () x986)
(declare-fun x677 () Bool)
(declare-fun x261 () Bool)
(declare-fun x1101 (Real) Real)
(declare-fun x992 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x873 () Real)
(declare-fun x397 () Bool)
(declare-fun x1218 () Real)
(declare-fun x43 () Real)
(declare-fun x1006 () Real)
(declare-fun x1376 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x341 () Bool)
(declare-fun x608 () Bool)
(declare-fun x220 () Bool)
(declare-fun x1066 () Real)
(declare-fun x310 () Real)
(declare-fun x33 (Real) Real)
(declare-fun x613 () Real)
(declare-fun x197 () Bool)
(declare-fun x1339 () Real)
(declare-fun x496 () Bool)
(declare-fun x468 () Bool)
(declare-fun x485 () Bool)
(declare-fun x1276 () Real)
(declare-fun x1199 () Bool)
(declare-fun x421 () Real)
(declare-fun x621 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x959 (Real) Real)
(declare-fun x592 () Real)
(declare-fun x976 () Bool)
(declare-fun x1202 () x986)
(declare-fun x1158 () Real)
(declare-fun x111 () Bool)
(declare-fun x498 () Real)
(declare-fun x989 () Real)
(declare-fun x981 () x986)
(declare-fun x821 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x361 () Real)
(declare-fun x96 () x986)
(declare-fun x262 () Bool)
(declare-fun x265 () Bool)
(declare-fun x216 () Bool)
(declare-fun x598 () Real)
(declare-fun x580 () x986)
(declare-fun x636 () Real)
(declare-fun x1328 () Real)
(declare-fun x588 () Bool)
(declare-fun x222 (Real) Real)
(declare-fun x675 () Bool)
(declare-fun x66 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x887 () Bool)
(declare-fun x633 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x737 () Bool)
(declare-fun x554 () Real)
(declare-fun x285 () Bool)
(declare-fun x951 () Real)
(declare-fun x710 () Real)
(declare-fun x314 () x986)
(declare-fun x579 () x986)
(declare-fun x709 () Bool)
(declare-fun x983 () Bool)
(declare-fun x1382 () Real)
(declare-fun x822 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x1232 () x986)
(declare-fun x1460 () Real)
(declare-fun x941 (x986) Real)
(declare-fun x1008 () Real)
(declare-fun x883 () Bool)
(declare-fun x241 () Real)
(declare-fun x917 () x986)
(declare-fun x225 () Real)
(declare-fun x979 () Real)
(declare-fun x1036 () Real)
(declare-fun x1330 () Real)
(declare-fun x164 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x302 () Real)
(declare-fun x387 () Bool)
(declare-fun x888 () Bool)
(declare-fun x1037 () Real)
(declare-fun x440 () Bool)
(declare-fun x755 () Real)
(declare-fun x886 () Bool)
(declare-fun x213 () Real)
(declare-fun x740 () Real)
(declare-fun x248 () Real)
(declare-fun x1132 () Real)
(declare-fun x623 () Bool)
(declare-fun x918 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x475 () Real)
(declare-fun x920 () Bool)
(declare-fun x1445 () Real)
(declare-fun x615 () Real)
(declare-fun x1129 () Bool)
(declare-fun x178 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x697 () Real)
(declare-fun x649 () x986)
(declare-fun x848 () Real)
(declare-fun x574 () Real)
(declare-fun x730 () Bool)
(declare-fun x885 () Bool)
(declare-fun x431 () Real)
(declare-fun x510 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x12 () Real)
(declare-fun x566 (Real) Real)
(declare-fun x430 (Real) Real)
(declare-fun x688 () Real)
(declare-fun x364 () Bool)
(declare-fun x294 () Real)
(declare-fun x36 () Real)
(declare-fun x1150 () Bool)
(declare-fun x835 () x986)
(declare-fun x1116 () Bool)
(declare-fun x209 () Bool)
(declare-fun x698 () x986)
(declare-fun x991 () Real)
(declare-fun x240 () Real)
(declare-fun x1251 () Real)
(declare-fun x673 () Bool)
(declare-fun x655 () Real)
(declare-fun x577 () Bool)
(declare-fun x72 () Real)
(declare-fun x439 () Real)
(declare-fun x928 () Real)
(declare-fun x1314 () Bool)
(declare-fun x806 () Real)
(declare-fun x284 () Real)
(declare-fun x1228 () Real)
(declare-fun x647 () Real)
(declare-fun x607 () Bool)
(declare-fun x609 () Bool)
(declare-fun x719 () Bool)
(declare-fun x620 () Bool)
(declare-fun x884 () Bool)
(declare-fun x244 () Real)
(declare-fun x741 () Bool)
(declare-fun x330 () Bool)
(declare-fun x200 () Bool)
(declare-fun x643 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x546 () Bool)
(declare-fun x1045 () Real)
(declare-fun x831 () x986)
(declare-fun x734 () Bool)
(declare-fun x603 () x986)
(declare-fun x286 (Real) Real)
(declare-fun x1300 () Bool)
(declare-fun x345 () Real)
(declare-fun x474 () Real)
(declare-fun x329 () Real)
(declare-fun x590 () x986)
(declare-fun x175 () Bool)
(declare-fun x1286 (Real) Real)
(declare-fun x1341 () Bool)
(declare-fun x161 (Real) Real)
(declare-fun x938 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x1152 () Real)
(declare-fun x320 () Real)
(declare-fun x894 () Bool)
(declare-fun x70 () Bool)
(declare-fun x1441 (Real) x986)
(declare-fun x1270 () Bool)
(declare-fun x47 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x732 () Real)
(declare-fun x184 (Real) Real)
(declare-fun x949 () Real)
(declare-fun x158 () Real)
(declare-fun x892 () Real)
(declare-fun x1180 () Real)
(declare-fun x850 () Real)
(declare-fun x129 () Bool)
(declare-fun x434 () Real)
(declare-fun x258 () Bool)
(declare-fun x1342 () Real)
(declare-fun x610 () Bool)
(declare-fun x604 () Bool)
(declare-fun x246 () Bool)
(declare-fun x61 () Bool)
(declare-fun x374 () Real)
(declare-fun x921 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x354 () Real)
(declare-fun x441 () Bool)
(declare-fun x617 () Real)
(declare-fun x84 () Bool)
(declare-fun x196 (Real) Real)
(declare-fun x1428 () Real)
(declare-fun x1353 () Real)
(declare-fun x1193 () x986)
(declare-fun x187 () Real)
(declare-fun x955 () Real)
(declare-fun x1076 () Real)
(declare-fun x292 () Real)
(declare-fun x1453 () Real)
(declare-fun x1183 () Bool)
(declare-fun x952 () Bool)
(declare-fun x700 () Bool)
(declare-fun x558 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x24 () Real)
(declare-fun x121 () Real)
(declare-fun x425 () x986)
(declare-fun x1249 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x771 () Bool)
(declare-fun x540 () Bool)
(declare-fun x466 () Bool)
(declare-fun x877 () Bool)
(declare-fun x489 () Real)
(declare-fun x247 () Bool)
(declare-fun x382 () Real)
(declare-fun x74 () Bool)
(declare-fun x233 () Real)
(declare-fun x1241 () x986)
(declare-fun x1429 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x124 () Real)
(declare-fun x711 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x1138 () Real)
(declare-fun x1052 () Real)
(declare-fun x1348 () Real)
(declare-fun x1217 (Real) Real)
(declare-fun x396 () Real)
(declare-fun x109 () Real)
(declare-fun x447 (Real) Real)
(declare-fun x937 () Real)
(declare-fun x927 () Real)
(declare-fun x1084 () Real)
(declare-fun x1177 () Bool)
(declare-fun x759 () Bool)
(declare-fun x1186 () Real)
(declare-fun x133 () x986)
(declare-fun x1403 () Bool)
(declare-fun x238 () Bool)
(declare-fun x405 () Real)
(declare-fun x514 () Bool)
(declare-fun x293 () Real)
(declare-fun x251 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x391 () Real)
(declare-fun x215 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x793 () Bool)
(declare-fun x1263 () Real)
(declare-fun x1280 () Bool)
(declare-fun x77 () Real)
(declare-fun x859 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1201 () Real)
(declare-fun x1063 (x986) Real)
(declare-fun x717 () Real)
(declare-fun x538 () Bool)
(declare-fun x157 () Real)
(declare-fun x1244 () Bool)
(declare-fun x622 () Real)
(declare-fun x957 (Real) Real)
(declare-fun x611 () Bool)
(declare-fun x783 () Real)
(declare-fun x872 () Bool)
(declare-fun x463 () Bool)
(declare-fun x551 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x423 () Real)
(declare-fun x1049 () Real)
(declare-fun x203 () Bool)
(declare-fun x414 () Bool)
(declare-fun x118 () Bool)
(declare-fun x1111 () Real)
(declare-fun x402 () Real)
(declare-fun x1159 () Real)
(declare-fun x426 () Bool)
(declare-fun x639 () x986)
(declare-fun x442 () Bool)
(declare-fun x436 () Bool)
(declare-fun x375 () Bool)
(declare-fun x69 () Bool)
(declare-fun x965 () Real)
(declare-fun x1046 () Bool)
(declare-fun x564 () Real)
(declare-fun x585 () Bool)
(declare-fun x587 () Real)
(declare-fun x404 () Bool)
(declare-fun x83 (Real Real) Real)
(declare-fun x778 () Bool)
(declare-fun x1447 (Real) Real)
(declare-fun x1355 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1120 () Real)
(declare-fun x563 () Real)
(declare-fun x910 () x986)
(declare-fun x1149 () Bool)
(declare-fun x298 () Bool)
(declare-fun x668 () Real)
(declare-fun x1206 () Bool)
(declare-fun x1291 () Real)
(declare-fun x1230 () Real)
(declare-fun x1351 () Real)
(declare-fun x297 () Bool)
(declare-fun x547 () Real)
(declare-fun x172 (Real) Real)
(declare-fun x914 () Real)
(declare-fun x1019 () Real)
(declare-fun x817 () Bool)
(declare-fun x488 () Bool)
(declare-fun x355 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x195 () Real)
(declare-fun x544 () Bool)
(declare-fun x30 (Real) Real)
(declare-fun x703 () Bool)
(declare-fun x494 () Bool)
(declare-fun x159 () Real)
(declare-fun x630 () Bool)
(declare-fun x393 () Bool)
(declare-fun x575 () Bool)
(declare-fun x26 () x986)
(declare-fun x323 () Bool)
(declare-fun x765 () x986)
(declare-fun x1004 () Bool)
(declare-fun x46 () Bool)
(declare-fun x982 () Bool)
(declare-fun x912 () Real)
(declare-fun x1162 () Bool)
(declare-fun x495 () Bool)
(declare-fun x453 () Bool)
(declare-fun x583 () Bool)
(declare-fun x602 () Bool)
(declare-fun x457 () Bool)
(declare-fun x37 (Real) Real)
(declare-fun x1433 () Bool)
(declare-fun x117 () Bool)
(declare-fun x995 () Bool)
(declare-fun x56 () Bool)
(declare-fun x760 () Bool)
(declare-fun x1402 () Real)
(declare-fun x122 (Real) Real)
(declare-fun x994 () Real)
(declare-fun x289 () Real)
(declare-fun x705 () Bool)
(declare-fun x1346 () x986)
(declare-fun x1082 (Real) Real)
(declare-fun x956 () Real)
(declare-fun x272 () Bool)
(declare-fun x171 () Bool)
(declare-fun x1105 () Real)
(declare-fun x267 () Bool)
(declare-fun x270 () Real)
(declare-fun x616 () Bool)
(declare-fun x764 (x986) Real)
(declare-fun x715 () Bool)
(declare-fun x416 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x470 () Bool)
(declare-fun x967 () Real)
(declare-fun x336 () Real)
(declare-fun x1302 () Real)
(declare-fun x664 () Real)
(declare-fun x392 () Bool)
(declare-fun x913 () x986)
(declare-fun x76 () Bool)
(declare-fun x838 () Bool)
(declare-fun x467 () Real)
(declare-fun x1297 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x106 (Real) Real)
(declare-fun x1362 () Bool)
(declare-fun x625 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x971 () Bool)
(declare-fun x368 () x986)
(declare-fun x1483 () Bool)
(declare-fun x766 () Bool)
(declare-fun x60 () Bool)
(declare-fun x403 () Bool)
(declare-fun x4 () x986)
(declare-fun x1279 () Real)
(declare-fun x79 () Real)
(declare-fun x582 (x986) Real)
(declare-fun x624 () Real)
(declare-fun x198 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x948 () Bool)
(declare-fun x1221 (Real) Real)
(declare-fun x206 (Real) Real)
(declare-fun x735 () Bool)
(declare-fun x443 () Real)
(declare-fun x1024 (Real) Real)
(declare-fun x508 () Bool)
(declare-fun x71 () Real)
(declare-fun x1148 () x986)
(declare-fun x1415 () Real)
(declare-fun x890 () Bool)
(declare-fun x779 () Real)
(declare-fun x527 () Real)
(declare-fun x1365 () Real)
(declare-fun x249 () Real)
(declare-fun x493 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x781 () Real)
(declare-fun x309 () Bool)
(declare-fun x274 () Bool)
(declare-fun x751 () Bool)
(declare-fun x796 (Real) Real)
(declare-fun x255 () Real)
(declare-fun x1404 () Bool)
(declare-fun x479 () Real)
(declare-fun x1196 () Bool)
(declare-fun x906 () Bool)
(declare-fun x316 () Bool)
(declare-fun x88 (Real) Real)
(declare-fun x680 () Bool)
(declare-fun x317 (Real) Real)
(declare-fun x1487 () Bool)
(declare-fun x419 () Bool)
(declare-fun x478 () Real)
(declare-fun x259 () Bool)
(declare-fun x718 () Real)
(declare-fun x1175 () Bool)
(declare-fun x7 () Real)
(declare-fun x571 () Real)
(declare-fun x194 (Real) Real)
(declare-fun x874 () Real)
(declare-fun x1416 () Real)
(declare-fun x645 () Bool)
(declare-fun x576 () Bool)
(declare-fun x1234 () Real)
(declare-fun x1192 () Real)
(declare-fun x95 () Bool)
(declare-fun x303 () Real)
(declare-fun x895 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x964 () Real)
(declare-fun x135 () Real)
(declare-fun x356 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x234 () Bool)
(declare-fun x1080 () Real)
(declare-fun x381 () Bool)
(declare-fun x1104 (Real) Real)
(declare-fun x42 () Real)
(declare-fun x1015 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1431 () Real)
(declare-fun x1134 () Real)
(declare-fun x57 () Real)
(declare-fun x866 () Real)
(declare-fun x627 () Bool)
(declare-fun x933 (Real) Real)
(declare-fun x1034 () Real)
(declare-fun x774 () Bool)
(declare-fun x48 () Real)
(declare-fun x217 () Bool)
(declare-fun x1108 () Real)
(declare-fun x1254 () Bool)
(declare-fun x553 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x1022 () Real)
(declare-fun x99 () Real)
(declare-fun x1031 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x432 () Bool)
(declare-fun x73 (Real) Real)
(declare-fun x188 () Bool)
(declare-fun x263 () Bool)
(declare-fun x451 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x18 () Bool)
(declare-fun x245 () Real)
(declare-fun x517 () Bool)
(declare-fun x963 () Bool)
(declare-fun x147 () Bool)
(declare-fun x1092 () Real)
(declare-fun x1468 () Bool)
(declare-fun x28 () Bool)
(declare-fun x676 () Real)
(declare-fun x52 () Bool)
(declare-fun x1210 () x986)
(declare-fun x860 () Real)
(declare-fun x205 () Real)
(declare-fun x193 () Bool)
(declare-fun x252 () Real)
(declare-fun x1253 () Real)
(declare-fun x1471 () Bool)
(declare-fun x519 () Real)
(declare-fun x1163 () Bool)
(declare-fun x379 () Bool)
(declare-fun x844 () Bool)
(declare-fun x549 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x1113 () Real)
(declare-fun x102 () Bool)
(declare-fun x455 (x986) Real)
(declare-fun x1141 () Real)
(declare-fun x162 () Bool)
(declare-fun x524 () Bool)
(declare-fun x1325 () Real)
(declare-fun x339 () Real)
(declare-fun x836 (Real) Real)
(declare-fun x250 () Bool)
(declare-fun x823 () Real)
(declare-fun x1301 () Real)
(declare-fun x1381 () Bool)
(declare-fun x1299 () Real)
(declare-fun x1287 () Bool)
(declare-fun x1268 () Real)
(declare-fun x667 () Bool)
(declare-fun x199 (Real) Real)
(declare-fun x1043 () Bool)
(declare-fun x907 () Real)
(declare-fun x568 () Real)
(declare-fun x1181 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x1207 () Real)
(declare-fun x366 () Real)
(declare-fun x670 () Real)
(declare-fun x499 () Bool)
(declare-fun x803 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x1236 () Real)
(declare-fun x1264 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x277 (Real) Real)
(declare-fun x1109 () x986)
(declare-fun x1211 () x986)
(declare-fun x902 () Bool)
(declare-fun x3 () Bool)
(declare-fun x550 () Real)
(declare-fun x841 () x986)
(declare-fun x586 () Bool)
(declare-fun x167 () Bool)
(declare-fun x679 () Bool)
(declare-fun x754 (Real) Real)
(declare-fun x140 () Real)
(declare-fun x101 () Real)
(declare-fun x301 () Real)
(declare-fun x612 () Bool)
(declare-fun x978 () Bool)
(declare-fun x1170 () Real)
(declare-fun x977 () Real)
(declare-fun x268 () Bool)
(declare-fun x787 (Real Real) Real)
(declare-fun x55 () x986)
(declare-fun x678 () Real)
(declare-fun x601 () Bool)
(declare-fun x969 () Bool)
(declare-fun x596 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x231 () Real)
(declare-fun x424 () Real)
(declare-fun x1269 () Real)
(declare-fun x950 () Real)
(declare-fun x1374 () Real)
(declare-fun x502 () Bool)
(declare-fun x1042 () Real)
(declare-fun x1292 () Bool)
(declare-fun x482 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x407 () Real)
(declare-fun x280 () x986)
(declare-fun x1222 () Real)
(declare-fun x180 () Real)
(declare-fun x578 () Bool)
(declare-fun x953 () Bool)
(declare-fun x492 () Real)
(declare-fun x1190 () Bool)
(declare-fun x406 () Bool)
(declare-fun x879 () Real)
(declare-fun x757 () Real)
(declare-fun x1423 () Bool)
(declare-fun x548 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x226 () Real)
(declare-fun x142 () Bool)
(declare-fun x871 (Real) Real)
(declare-fun x1178 () Real)
(declare-fun x769 () Bool)
(declare-fun x390 () x986)
(declare-fun x1331 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x807 () Real)
(declare-fun x833 () Real)
(declare-fun x490 () Real)
(declare-fun x130 () Bool)
(declare-fun x151 () Real)
(declare-fun x573 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x712 (Real) Real)
(declare-fun x372 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x944 () Bool)
(declare-fun x324 () Real)
(declare-fun x380 () Real)
(declare-fun x257 () Real)
(declare-fun x925 (Real) Real)
(declare-fun x53 () Bool)
(declare-fun x1435 () Real)
(declare-fun x960 () Real)
(declare-fun x1356 () Bool)
(declare-fun x1155 () Real)
(declare-fun x1354 () Real)
(declare-fun x340 () Bool)
(declare-fun x145 () Real)
(declare-fun x497 () Bool)
(declare-fun x1047 () Real)
(declare-fun x606 () Bool)
(declare-fun x169 () Bool)
(declare-fun x395 () Real)
(declare-fun x1081 () Real)
(declare-fun x1131 () Real)
(declare-fun x653 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x738 () Bool)
(declare-fun x185 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x282 () Real)
(declare-fun x788 () Bool)
(declare-fun x662 () Real)
(declare-fun x939 () Bool)
(declare-fun x919 () Bool)
(declare-fun x399 () Real)
(declare-fun x369 () Real)
(declare-fun x153 () Real)
(declare-fun x773 () Bool)
(declare-fun x713 () Bool)
(declare-fun x934 () Real)
(declare-fun x1189 () x986)
(declare-fun x1068 () Bool)
(declare-fun x40 () Bool)
(declare-fun x727 () Bool)
(declare-fun x360 () Real)
(declare-fun x744 () Bool)
(declare-fun x940 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x641 () Real)
(declare-fun x1136 () Real)
(declare-fun x318 () Real)
(declare-fun x776 () Bool)
(declare-fun x253 () Bool)
(declare-fun x367 () Bool)
(declare-fun x98 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x1266 () Real)
(declare-fun x1289 () Bool)
(declare-fun x1085 () Real)
(declare-fun x704 () Bool)
(declare-fun x398 () Real)
(declare-fun x412 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x1070 () Real)
(declare-fun x1262 () Bool)
(declare-fun x847 () x986)
(declare-fun x136 () Bool)
(declare-fun x462 () Real)
(declare-fun x1444 () Bool)
(declare-fun x64 () Real)
(declare-fun x905 () Real)
(declare-fun x1456 () Real)
(declare-fun x1083 (Real) Real)
(declare-fun x448 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x327 () Bool)
(declare-fun x232 () Real)
(declare-fun x828 () Bool)
(declare-fun x820 () Real)
(declare-fun x1304 () Real)
(declare-fun x1317 () Bool)
(declare-fun x692 () Bool)
(declare-fun x300 () Bool)
(declare-fun x1001 () Real)
(declare-fun x555 () Bool)
(declare-fun x657 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x671 () Real)
(declare-fun x224 (Real) Real)
(declare-fun x640 () Bool)
(declare-fun x163 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x322 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x182 () Bool)
(declare-fun x681 () Real)
(declare-fun x1349 () Real)
(declare-fun x104 () Real)
(declare-fun x594 () Bool)
(declare-fun x658 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x867 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x775 () Real)
(declare-fun x1219 () Bool)
(declare-fun x1278 () Real)
(declare-fun x290 () Bool)
(declare-fun x307 () Bool)
(declare-fun x1394 () Real)
(declare-fun x13 () Bool)
(declare-fun x858 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x932 () Real)
(declare-fun x236 () Real)
(declare-fun x32 () Real)
(declare-fun x1099 () Real)
(declare-fun x862 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x1235 () Real)
(declare-fun x646 () Real)
(declare-fun x1305 () Bool)
(declare-fun x1472 (Real) Real)
(declare-fun x753 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x338 () Real)
(declare-fun x126 () Bool)
(declare-fun x739 () Real)
(declare-fun x481 () x986)
(declare-fun x8 () Real)
(declare-fun x80 () Bool)
(declare-fun x27 () Real)
(define-fun x378 ((x986 x986) (x1450 Real)) x986 (ite ((_ is x264) x986) (x264 (x228 x986) (+ (x1458 x986) x1450)) (ite ((_ is x570) x986) (x570 (x214 x986) (x362 x986) (+ x1450 (x1482 x986))) (x1478 (+ x1450 (x515 x986))))))
(define-fun x856 ((x35 Real)) Real (ite (and (>= x35 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x35)) x35 (- x35 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1147 ((x35 Real)) Real (ite (and (>= x35 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x35 0)) (+ x35 115792089237316195423570985008687907853269984665640564039457584007913129639936) x35))
(define-fun x533 ((x420 Real)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x420) (>= x420 0)))
(define-fun x795 ((x1058 Real)) Real (x122 x1058))
(define-fun x1215 ((x1058 Real)) Real (ite (and (<= 28 x1058) (> (+ 4 28) x1058)) (x122 (+ (- x1058 28) 0)) (x1197 x1058)))
(define-fun x1096 ((x1058 Real)) Real (ite (= x1058 160) x1431 (x1215 x1058)))
(define-fun x1185 ((x1058 Real)) Real (ite (= 800 x1058) 1854955031 (x1217 x1058)))
(define-fun x273 ((x1058 Real)) Real (ite (and (< x1058 (+ 800 32)) (>= x1058 800)) (x184 (+ (- x1058 800) 0)) (x172 x1058)))
(define-fun x1324 ((x1058 Real)) Real (ite (= 800 x1058) x1431 (x11 x1058)))
(define-fun x904 ((x1058 Real)) Real (ite (= 832 x1058) 60465744 (x1324 x1058)))
(define-fun x650 ((x1058 Real)) Real (ite (and (<= 0 x1058) (< x1058 (+ 0 0))) (x447 (+ (- x1058 0) 0)) (x22 x1058)))
(define-fun x626 ((x1058 Real)) Real (ite (= x1058 864) x1431 (x11 x1058)))
(define-fun x190 ((x1058 Real)) Real (ite (= 160 x1058) x597 (x199 x1058)))
(define-fun x429 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x190 x1058)))
(define-fun x1166 ((x1058 Real)) Real (ite (= 928 x1058) x1446 (x429 x1058)))
(define-fun x637 ((x1058 Real)) Real (ite (= x1058 160) x354 (x199 x1058)))
(define-fun x1151 ((x1058 Real)) Real (ite (= x1058 128) 16 (x637 x1058)))
(define-fun x389 ((x1058 Real)) Real (ite (= 224 x1058) 1889567281 (x1151 x1058)))
(define-fun x852 ((x1058 Real)) Real (ite (and (>= x1058 224) (< x1058 (+ 224 32))) (x430 (+ (- x1058 224) 0)) (x308 x1058)))
(define-fun x1160 ((x1058 Real)) Real (ite (and x608 x69 x1043) (x852 x1058) (x308 x1058)))
(define-fun x716 ((x1058 Real)) Real (ite (= 352 x1058) x1074 (x1160 x1058)))
(define-fun x748 ((x1058 Real)) Real (ite (= x1058 320) x252 (x716 x1058)))
(define-fun x1272 ((x1058 Real)) Real (ite (= x1058 160) x1389 (x748 x1058)))
(define-fun x669 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x1272 x1058)))
(define-fun x359 ((x1058 Real)) Real (ite (= x1058 928) x1328 (x194 x1058)))
(define-fun x1142 ((x1058 Real)) Real (ite (= x1058 928) 0 (x194 x1058)))
(define-fun x845 ((x1058 Real)) Real (ite (= x1058 928) x86 (x194 x1058)))
(define-fun x351 ((x1058 Real)) Real (ite (and x1061 x902) (x359 x1058) (ite (and x723 (not x1300)) (x1142 x1058) (ite (and (not x297) x1280) (x845 x1058) (x1166 x1058)))))
(define-fun x428 ((x1058 Real)) Real (ite (= x1058 896) x145 (x351 x1058)))
(define-fun x78 ((x1058 Real)) Real (ite (= x1058 160) x1431 (x428 x1058)))
(define-fun x996 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x78 x1058)))
(define-fun x417 ((x1058 Real)) Real (ite (= x1058 928) x402 (x996 x1058)))
(define-fun x1194 ((x1058 Real)) Real (ite (= 960 x1058) 113225476 (x417 x1058)))
(define-fun x1316 ((x1058 Real)) Real (ite (= x1058 992) x1192 (x1194 x1058)))
(define-fun x1322 ((x1058 Real)) Real (ite (and (>= x1058 1024) (> (+ 1024 96) x1058)) (x122 (+ 4 (- x1058 1024))) (x1316 x1058)))
(define-fun x1318 ((x1058 Real)) Real (ite (= 1120 x1058) x140 (x1322 x1058)))
(define-fun x93 ((x1058 Real)) Real (ite (and (< x1058 (+ 32 960)) (<= 960 x1058)) (x224 (+ 0 (- x1058 960))) (x1154 x1058)))
(define-fun x1480 ((x1058 Real)) Real (ite (and x715 x1467) (x93 x1058) (x1154 x1058)))
(define-fun x1156 ((x1058 x986)) Real (ite (and (not x220) x906) (x1063 x1058) (ite (and x1233 x877) (ite (and x588 x1483 (not x894)) (x764 x1058) (x1063 x1058)) (x1063 x1058))))
(define-fun x707 ((x1058 Real)) Real (ite (and (not x220) x906) (x1480 x1058) (ite (and x877 x1233) (ite (and x1483 (not x894) x588) (x650 x1058) (x22 x1058)) (x1217 x1058))))
(define-fun x1179 ((x1058 Real)) Real (ite (= 800 x1058) 1889567281 (x707 x1058)))
(define-fun x552 ((x1058 Real)) Real (ite (and (< x1058 (+ 32 800)) (<= 800 x1058)) (x531 (+ (- x1058 800) 0)) (x957 x1058)))
(define-fun x305 ((x1058 Real)) Real (ite (= 224 x1058) x1431 (x712 x1058)))
(define-fun x1028 ((x1058 Real)) Real (ite (= x1058 256) x806 (x305 x1058)))
(define-fun x287 ((x1058 Real)) Real (ite (= x1058 160) x1108 (x1028 x1058)))
(define-fun x304 ((x1058 Real)) Real (ite (= x1058 128) 16 (x287 x1058)))
(define-fun x471 ((x1058 Real)) Real (ite (= 160 x1058) x1332 (x88 x1058)))
(define-fun x929 ((x1058 Real)) Real (ite (= x1058 128) 16 (x471 x1058)))
(define-fun x726 ((x1058 Real)) Real (ite (= 160 x1058) x688 (x161 x1058)))
(define-fun x1414 ((x1058 Real)) Real (ite (= x1058 128) 16 (x726 x1058)))
(define-fun x1432 ((x1058 Real)) Real (ite (and x323 x1054) (x161 x1058) (ite (and x94 x1264) (x88 x1058) (x1414 x1058))))
(define-fun x1397 ((x1058 Real)) Real (ite (= 160 x1058) x157 (x1432 x1058)))
(define-fun x1442 ((x1058 Real)) Real (ite (= x1058 128) 16 (x1397 x1058)))
(define-fun x1013 ((x1058 Real)) Real (ite (= x1058 160) x893 (x1442 x1058)))
(define-fun x1250 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x1013 x1058)))
(define-fun x931 ((x1058 Real)) Real (ite (and x235 (not x1041)) (x712 x1058) (x1250 x1058)))
(define-fun x614 ((x1058 x986)) Real (ite (= x1412 x1058) x1186 (x941 x1058)))
(define-fun x279 ((x1058 x986)) Real (ite (= x1058 (x1478 39)) x556 (x614 x1058)))
(define-fun x1090 ((x1058 x986)) Real (ite (and x323 x1054) (x941 x1058) (ite (and x1264 x94) (x941 x1058) (x279 x1058))))
(define-fun x1452 ((x1058 x986)) Real (ite (= x15 x1058) x1251 (x1090 x1058)))
(define-fun x1475 ((x1058 x986)) Real (ite (= x1058 x792) x979 (x1452 x1058)))
(define-fun x460 ((x1058 x986)) Real (ite (= (x1478 40) x1058) x660 (x1475 x1058)))
(define-fun x880 ((x1058 Real)) Real (ite (= 512 x1058) x1431 (x931 x1058)))
(define-fun x31 ((x1058 Real)) Real (ite (= x1058 544) x818 (x880 x1058)))
(define-fun x1089 ((x1058 Real)) Real (ite (= 160 x1058) x1365 (x31 x1058)))
(define-fun x654 ((x1058 Real)) Real (ite (= 832 x1058) 0 (x1143 x1058)))
(define-fun x1209 ((x1058 x986)) Real (ite (= x1058 (x1478 9)) x431 (x756 x1058)))
(define-fun x465 ((x1058 x986)) Real (ite (= x1058 x1484) x928 (x605 x1058)))
(define-fun x839 ((x1058 x986)) Real (ite (= x1058 x280) x1348 (x465 x1058)))
(define-fun x1436 ((x1058 x986)) Real (ite (= x1232 x1058) x349 (x582 x1058)))
(define-fun x1426 ((x1058 x986)) Real (ite (= x1058 x639) x1146 (x1436 x1058)))
(define-fun x638 ((x1058 x986)) Real (ite x239 (ite (and (not x70) x59) (x582 x1058) (ite (and (not x311) x642) (x756 x1058) (x1426 x1058))) (x756 x1058)))
(define-fun x1173 ((x1058 Real)) Real (ite (= x1058 160) x923 (x1143 x1058)))
(define-fun x480 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x1173 x1058)))
(define-fun x486 ((x1058 Real)) Real (ite (= 160 x1058) x1066 (x189 x1058)))
(define-fun x1091 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x486 x1058)))
(define-fun x208 ((x1058 Real)) Real (ite (and (< x1058 (+ 640 32)) (<= 640 x1058)) (x1472 (+ 0 (- x1058 640))) (x106 x1058)))
(define-fun x477 ((x1058 Real)) Real (ite (and x262 x1095 x1254) (x208 x1058) (x106 x1058)))
(define-fun x791 ((x1058 Real)) Real (ite (= x1058 608) x662 (x477 x1058)))
(define-fun x651 ((x1058 Real)) Real (ite (= x1058 160) x462 (x791 x1058)))
(define-fun x1370 ((x1058 Real)) Real (ite (= x1058 128) 16 (x651 x1058)))
(define-fun x1459 ((x1058 Real)) Real (ite (= 640 x1058) x527 (x1370 x1058)))
(define-fun x984 ((x1058 Real)) Real (ite (= 672 x1058) x333 (x1459 x1058)))
(define-fun x1386 ((x1058 Real)) Real (ite (= x1058 704) x814 (x871 x1058)))
(define-fun x1205 ((x1058 Real)) Real (ite (= x1058 352) 274184521717934524641157099916833587200 (x23 x1058)))
(define-fun x326 ((x1058 Real)) Real (ite (= x1058 384) x960 (x1205 x1058)))
(define-fun x103 ((x1058 Real)) Real (ite (= 416 x1058) 0 (x326 x1058)))
(define-fun x1440 ((x1058 Real)) Real (ite (= x1058 224) 1889567281 (x30 x1058)))
(define-fun x1144 ((x1058 Real)) Real (ite (and (>= x1058 224) (> (+ 224 32) x1058)) (x222 (+ 0 (- x1058 224))) (x1082 x1058)))
(define-fun x560 ((x1058 Real)) Real (ite (and (not x916) x47 x773) (x1144 x1058) (x1082 x1058)))
(define-fun x201 ((x1058 Real)) Real (ite (= 288 x1058) x1180 (x560 x1058)))
(define-fun x1469 ((x1058 Real)) Real (ite (= x1058 256) x850 (x73 x1058)))
(define-fun x62 ((x1058 Real)) Real (ite (= 320 x1058) x891 (x1469 x1058)))
(define-fun x202 ((x1058 Real)) Real (ite (= 320 x1058) 0 (x73 x1058)))
(define-fun x629 ((x1058 Real)) Real (ite (and x657 (not x538)) (x62 x1058) (x202 x1058)))
(define-fun x523 ((x1058 Real)) Real (ite (= 480 x1058) x360 (x629 x1058)))
(define-fun x529 ((x1058 Real)) Real (ite (= x1058 416) x1477 (x523 x1058)))
(define-fun x599 ((x1058 Real)) Real (ite (= 416 x1058) x1411 (x30 x1058)))
(define-fun x315 ((x1058 Real)) Real (ite (and (not x394) x585) (x529 x1058) (x599 x1058)))
(define-fun x81 ((x1058 Real)) Real (ite (= 160 x1058) x820 (x315 x1058)))
(define-fun x628 ((x1058 Real)) Real (ite (= x1058 128) 7 (x81 x1058)))
(define-fun x435 ((x1058 Real)) Real (ite (= x1058 480) x345 (x628 x1058)))
(define-fun x165 ((x1058 Real)) Real (ite (= 768 x1058) x1361 (x435 x1058)))
(define-fun x542 ((x1058 Real)) Real (ite (= x1058 768) x870 (x433 x1058)))
(define-fun x352 ((x1058 Real)) Real (ite (= 224 x1058) 274184521717934524641157099916833587200 (x542 x1058)))
(define-fun x210 ((x1058 Real)) Real (ite (= 256 x1058) x371 (x352 x1058)))
(define-fun x1347 ((x1058 Real)) Real (ite (= 288 x1058) x293 (x210 x1058)))
(define-fun x1265 ((x1058 Real)) Real (ite (= 352 x1058) 274184521717934524641157099916833587200 (x1347 x1058)))
(define-fun x1168 ((x1058 Real)) Real (ite (= 384 x1058) 0 (x1265 x1058)))
(define-fun x483 ((x1058 Real)) Real (ite (= x1058 320) 0 (x1168 x1058)))
(define-fun x724 ((x1058 Real)) Real (ite (and x1204 x238) (x1101 x1058) (x754 x1058)))
(define-fun x358 ((x1058 Real)) Real (ite (= 320 x1058) 1 (x724 x1058)))
(define-fun x1384 ((x1058 Real)) Real (ite (and x203 x185) (x754 x1058) (x358 x1058)))
(define-fun x1087 ((x1058 Real)) Real (ite (= x1058 160) x900 (x1384 x1058)))
(define-fun x388 ((x1058 Real)) Real (ite (= 128 x1058) 7 (x1087 x1058)))
(define-fun x45 ((x1058 Real)) Real (ite (= x1058 160) x6 (x388 x1058)))
(define-fun x1298 ((x1058 Real)) Real (ite (= x1058 128) 7 (x45 x1058)))
(define-fun x65 ((x1058 Real)) Real (ite (= 320 x1058) x824 (x1298 x1058)))
(define-fun x584 ((x1058 Real)) Real (ite (and x1004 (not x1421)) (x433 x1058) (x65 x1058)))
(define-fun x16 ((x1058 Real)) Real (ite (= 160 x1058) 274184521717934524641157099916833587200 (x584 x1058)))
(define-fun x115 ((x1058 Real)) Real (ite (= x1058 224) 274184521717934524641157099916833587200 (x1221 x1058)))
(define-fun x1118 ((x1058 Real)) Real (ite (= x1058 256) x899 (x115 x1058)))
(define-fun x840 ((x1058 Real)) Real (ite (= 160 x1058) 274184521717934524641157099916833587200 (x1118 x1058)))
(define-fun x861 ((x1058 Real)) Real (ite (= 128 x1058) 7 (x840 x1058)))
(define-fun x968 ((x1058 Real)) Real (ite (= x1058 288) x329 (x861 x1058)))
(define-fun x321 ((x1058 Real)) Real (ite (= x1058 352) 274184521717934524641157099916833587200 (x968 x1058)))
(define-fun x997 ((x1058 Real)) Real (ite (= 384 x1058) 0 (x321 x1058)))
(define-fun x1 ((x1058 Real)) Real (ite (= x1058 320) 0 (x997 x1058)))
(define-fun x690 ((x1058 Real)) Real (ite (and x1163 x1387) (x1083 x1058) (x206 x1058)))
(define-fun x868 ((x1058 Real)) Real (ite (= 320 x1058) 1 (x690 x1058)))
(define-fun x1277 ((x1058 Real)) Real (ite (and x658 x1360) (x206 x1058) (x868 x1058)))
(define-fun x335 ((x1058 Real)) Real (ite (= x1058 160) x20 (x1277 x1058)))
(define-fun x962 ((x1058 Real)) Real (ite (= x1058 128) 7 (x335 x1058)))
(define-fun x661 ((x1058 Real)) Real (ite (= x1058 160) x1422 (x962 x1058)))
(define-fun x882 ((x1058 Real)) Real (ite (= x1058 128) 7 (x661 x1058)))
(define-fun x1195 ((x1058 Real)) Real (ite (= x1058 320) x226 (x882 x1058)))
(define-fun x107 ((x1058 Real)) Real (ite (and x59 (not x70)) (x1221 x1058) (ite (and x642 (not x311)) (x23 x1058) (x1195 x1058))))
(define-fun x970 ((x1058 Real)) Real (ite (= x1058 832) x408 (x107 x1058)))
(define-fun x559 ((x1058 Real)) Real (ite (= x1058 832) 0 (x189 x1058)))
(define-fun x156 ((x1058 Real)) Real (ite x239 (x970 x1058) (ite (and x1095 (not x1254)) (x559 x1058) (x654 x1058))))
(define-fun x1343 ((x1058 Real)) Real (ite (= 800 x1058) x613 (x156 x1058)))
(define-fun x770 ((x1058 Real)) Real (ite (= x1058 160) x1431 (x1343 x1058)))
(define-fun x152 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x770 x1058)))
(define-fun x160 ((x1058 Real)) Real (ite (= 864 x1058) 0 (x1024 x1058)))
(define-fun x909 ((x1058 Real)) Real (ite (= x1058 224) 1889567281 (x1024 x1058)))
(define-fun x954 ((x1058 Real)) Real (ite (and (>= x1058 224) (> (+ 224 32) x1058)) (x2 (+ (- x1058 224) 0)) (x706 x1058)))
(define-fun x1016 ((x1058 Real)) Real (ite (and x309 x495 x307) (x954 x1058) (x706 x1058)))
(define-fun x1073 ((x1058 Real)) Real (ite (= x1058 352) x725 (x1016 x1058)))
(define-fun x851 ((x1058 Real)) Real (ite (= x1058 320) x1164 (x1073 x1058)))
(define-fun x91 ((x1058 Real)) Real (ite (= x1058 352) x567 (x851 x1058)))
(define-fun x946 ((x1058 Real)) Real (ite (= 384 x1058) x1353 (x91 x1058)))
(define-fun x572 ((x1058 Real)) Real (ite (= 160 x1058) x1235 (x946 x1058)))
(define-fun x383 ((x1058 Real)) Real (ite (= x1058 128) 16 (x572 x1058)))
(define-fun x722 ((x1058 Real)) Real (ite (= 416 x1058) x1157 (x383 x1058)))
(define-fun x288 ((x1058 Real)) Real (ite (= 160 x1058) x837 (x722 x1058)))
(define-fun x695 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x288 x1058)))
(define-fun x691 ((x1058 Real)) Real (ite (= x1058 448) x855 (x695 x1058)))
(define-fun x1161 ((x1058 Real)) Real (ite (= x1058 160) x301 (x691 x1058)))
(define-fun x1094 ((x1058 Real)) Real (ite (= x1058 128) 16 (x1161 x1058)))
(define-fun x295 ((x1058 Real)) Real (ite (= x1058 480) x245 (x1094 x1058)))
(define-fun x1106 ((x1058 Real)) Real (ite (= x1058 160) x170 (x295 x1058)))
(define-fun x810 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x1106 x1058)))
(define-fun x1461 ((x1058 Real)) Real (ite (= 544 x1058) x153 (x286 x1058)))
(define-fun x1257 ((x1058 Real)) Real (ite (= x1058 544) x755 (x1461 x1058)))
(define-fun x191 ((x1058 Real)) Real (ite (= x1058 576) 1889567281 (x1257 x1058)))
(define-fun x177 ((x1058 Real)) Real (ite (and (< x1058 (+ 576 32)) (>= x1058 576)) (x33 (+ (- x1058 576) 0)) (x925 x1058)))
(define-fun x801 ((x1058 Real)) Real (ite (and x862 (not x1429) x958) (x177 x1058) (x925 x1058)))
(define-fun x802 ((x1058 Real)) Real (ite (= x1058 864) 0 (x591 x1058)))
(define-fun x742 ((x1058 Real)) Real (ite (= x1058 864) x1155 (x591 x1058)))
(define-fun x278 ((x1058 Real)) Real (ite (= 864 x1058) 0 (x286 x1058)))
(define-fun x682 ((x1058 Real)) Real (ite (and x872 x1010 x546) (x802 x1058) (ite (and (not x872) x1010 x546) (x742 x1058) (ite (and (not x786) x751) (x278 x1058) (x160 x1058)))))
(define-fun x29 ((x1058 Real)) Real (ite (= 832 x1058) x832 (x682 x1058)))
(define-fun x1231 ((x1058 Real)) Real (ite (= x1058 160) x1042 (x14 x1058)))
(define-fun x1465 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x1231 x1058)))
(define-fun x1406 ((x1058 Real)) Real (ite (= 224 x1058) 1889567281 (x1465 x1058)))
(define-fun x211 ((x1058 Real)) Real (ite (and (> (+ 32 224) x1058) (<= 224 x1058)) (x545 (+ 0 (- x1058 224))) (x196 x1058)))
(define-fun x1413 ((x1058 Real)) Real (ite (and x859 x867 x1423) (x211 x1058) (x196 x1058)))
(define-fun x819 ((x1058 Real)) Real (ite (= 352 x1058) x994 (x1413 x1058)))
(define-fun x90 ((x1058 Real)) Real (ite (= 320 x1058) x714 (x819 x1058)))
(define-fun x230 ((x1058 Real)) Real (ite (= 160 x1058) x1394 (x90 x1058)))
(define-fun x1026 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x230 x1058)))
(define-fun x105 ((x1058 Real)) Real (ite (= x1058 896) x310 (x836 x1058)))
(define-fun x347 ((x1058 Real)) Real (ite (= 896 x1058) 0 (x836 x1058)))
(define-fun x534 ((x1058 Real)) Real (ite (= x1058 896) x1268 (x836 x1058)))
(define-fun x1130 ((x1058 Real)) Real (ite (= 160 x1058) x1158 (x14 x1058)))
(define-fun x144 ((x1058 Real)) Real (ite (= x1058 128) 16 (x1130 x1058)))
(define-fun x632 ((x1058 Real)) Real (ite (= 896 x1058) x1171 (x144 x1058)))
(define-fun x1245 ((x1058 Real)) Real (ite (and x98 x607) (x105 x1058) (ite (and (not x400) x1388) (x347 x1058) (ite (and x776 (not x805)) (x534 x1058) (x632 x1058)))))
(define-fun x869 ((x1058 Real)) Real (ite (= 864 x1058) x374 (x1245 x1058)))
(define-fun x1393 ((x1058 Real)) Real (ite (= x1058 160) x1431 (x959 x1058)))
(define-fun x150 ((x1058 Real)) Real (ite (= x1058 128) 16 (x1393 x1058)))
(define-fun x525 ((x1058 x986)) Real (ite (= x1489 x1058) x686 (x149 x1058)))
(define-fun x50 ((x1058 x986)) Real (ite (= (x1478 40) x1058) x8 (x525 x1058)))
(define-fun x721 ((x1058 Real)) Real (ite (= 864 x1058) x260 (x150 x1058)))
(define-fun x799 ((x1058 Real)) Real (ite (= x1058 160) x1431 (x875 x1058)))
(define-fun x9 ((x1058 Real)) Real (ite (= x1058 128) 16 (x799 x1058)))
(define-fun x63 ((x1058 x986)) Real (ite (= x1058 x1148) x7 (x509 x1058)))
(define-fun x1114 ((x1058 x986)) Real (ite (= (x1478 40) x1058) x519 (x63 x1058)))
(define-fun x38 ((x1058 Real)) Real (ite (and (not x788) x558) (x875 x1058) (x9 x1058)))
(define-fun x92 ((x1058 Real)) Real (ite (= 224 x1058) x1034 (x1286 x1058)))
(define-fun x618 ((x1058 Real)) Real (ite (= 256 x1058) x1431 (x92 x1058)))
(define-fun x1385 ((x1058 Real)) Real (ite (= x1058 288) 274184521717934524641157099916833587200 (x618 x1058)))
(define-fun x1344 ((x1058 Real)) Real (ite (= x1058 320) x574 (x1385 x1058)))
(define-fun x516 ((x1058 Real)) Real (ite (= 416 x1058) 4 (x1344 x1058)))
(define-fun x1327 ((x1058 Real)) Real (ite (and (>= x1058 512) (< x1058 (+ 4 512))) (x1447 (+ (- x1058 512) 0)) (x1059 x1058)))
(define-fun x942 ((x1058 Real)) Real (ite (and x1117 x1227 (not x1419)) (x1327 x1058) (x1059 x1058)))
(define-fun x472 ((x1058 Real)) Real (ite (= x1153 x1058) x148 (x942 x1058)))
(define-fun x1135 ((x1058 Real)) Real (ite (= x1058 x399) x1352 (x472 x1058)))
(define-fun x1303 ((x1058 Real)) Real (ite (= x1058 x951) x587 (x1135 x1058)))
(define-fun x131 ((x1058 Real)) Real (ite (and (>= x1058 672) (< x1058 (+ 672 32))) (x229 (+ (- x1058 672) 0)) (x987 x1058)))
(define-fun x1029 ((x1058 Real)) Real (ite (= 224 x1058) x816 (x1286 x1058)))
(define-fun x512 ((x1058 Real)) Real (ite (= 256 x1058) x1431 (x1029 x1058)))
(define-fun x541 ((x1058 Real)) Real (ite (= x1058 288) x1253 (x512 x1058)))
(define-fun x1182 ((x1058 Real)) Real (ite (= 384 x1058) 4 (x541 x1058)))
(define-fun x1145 ((x1058 Real)) Real (ite (and (>= x1058 480) (> (+ 480 4) x1058)) (x37 (+ (- x1058 480) 0)) (x317 x1058)))
(define-fun x1167 ((x1058 Real)) Real (ite (and (not x66) x1451 x332) (x1145 x1058) (x317 x1058)))
(define-fun x204 ((x1058 Real)) Real (ite (= x1058 x1125) x1240 (x1167 x1058)))
(define-fun x768 ((x1058 Real)) Real (ite (= x732 x1058) x873 (x204 x1058)))
(define-fun x450 ((x1058 Real)) Real (ite (and (> (+ 32 608) x1058) (>= x1058 608)) (x277 (+ 0 (- x1058 608))) (x924 x1058)))
(define-fun x736 ((x1058 Real)) Real (ite (and (not x1419) x1227 x34) (x131 x1058) (x987 x1058)))
(define-fun x785 ((x1058 Real)) Real (ite (and (< x1058 (+ x1310 352)) (>= x1058 352)) (x566 (+ (- x1058 352) 0)) (x796 x1058)))
(define-fun x41 ((x1058 Real)) Real (ite (and x521 x741 x1403) (x785 x1058) (x796 x1058)))
(define-fun x1485 ((x1058 Real)) Real (ite (and x1181 x332 (not x66)) (x450 x1058) (x924 x1058)))
(define-fun x683 ((x1058 Real)) Real (ite (and (>= x1058 320) (> (+ 320 x1097) x1058)) (x933 (+ 0 (- x1058 320))) (x1104 x1058)))
(define-fun x1112 ((x1058 Real)) Real (ite (and x980 x147 x834) (x683 x1058) (x1104 x1058)))
(define-fun x745 ((x1058 Real)) Real (ite (and x87 (not x1398)) (x1286 x1058) (ite x1466 (x41 x1058) (x1112 x1058))))
(define-fun x1408 ((x1058 Real)) Real (ite (= x1058 256) x478 (x936 x1058)))
(define-fun x505 ((x1058 Real)) Real (ite (= x1058 992) x547 (x1408 x1058)))
(define-fun x808 ((x1058 Real)) Real (ite (= 992 x1058) 0 (x936 x1058)))
(define-fun x1246 ((x1058 Real)) Real (ite (and x1056 (not x938)) (x505 x1058) (x808 x1058)))
(define-fun x1169 ((x1058 Real)) Real (ite (= x1058 960) x461 (x1246 x1058)))
(define-fun x537 ((x1058 x986)) Real (ite (= (x1478 43) x1058) 0 (x672 x1058)))
(define-fun x1293 ((x1058 x986)) Real (ite (= x1058 (x1478 43)) x903 (x672 x1058)))
(define-fun x427 ((x1058 x986)) Real (ite (and x171 (not x413)) (x1293 x1058) (x537 x1058)))
(define-fun x281 ((x1058 Real)) Real (ite (= 160 x1058) x1431 (x1169 x1058)))
(define-fun x762 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x281 x1058)))
(define-fun x176 ((x1058 x986)) Real (ite (= x1058 x782) x1301 (x427 x1058)))
(define-fun x207 ((x1058 x986)) Real (ite (= x1058 (x1478 41)) x1301 (x176 x1058)))
(define-fun x1375 ((x1058 Real)) Real (ite (and (<= 992 x1058) (> (+ 64 992) x1058)) (x122 (+ (- x1058 992) 4)) (x762 x1058)))
(define-fun x619 ((x1058 Real)) Real (ite (= x1058 1056) x248 (x1375 x1058)))
(define-fun x1306 ((x1058 Real)) Real (ite (= x1058 160) x1431 (x619 x1058)))
(define-fun x1260 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x1306 x1058)))
(define-fun x530 ((x1058 Real)) Real (ite (= x1058 1088) x1055 (x1260 x1058)))
(define-fun x58 ((x1058 Real)) Real (ite (= 160 x1058) x1431 (x530 x1058)))
(define-fun x1078 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x58 x1058)))
(define-fun x826 ((x1058 Real)) Real (ite (= x1058 1120) x659 (x1078 x1058)))
(define-fun x935 ((x1058 Real)) Real (ite (= 160 x1058) x1431 (x826 x1058)))
(define-fun x761 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x935 x1058)))
(define-fun x1364 ((x1058 Real)) Real (ite (= 1152 x1058) x955 (x761 x1058)))
(define-fun x1366 ((x1058 Real)) Real (ite (= 1184 x1058) x257 (x1364 x1058)))
(define-fun x1030 ((x1058 Real)) Real (ite (= 160 x1058) x1431 (x1366 x1058)))
(define-fun x306 ((x1058 Real)) Real (ite (= 128 x1058) 16 (x1030 x1058)))
(define-fun x1007 ((x1058 Real)) Real (ite (= 1216 x1058) x1291 (x306 x1058)))
(define-fun x1258 ((x1058 Real)) Real (ite (= x1058 160) x1431 (x1007 x1058)))
(define-fun x1133 ((x1058 Real)) Real (ite (= x1058 128) 16 (x1258 x1058)))
(define-fun x1309 ((x420 Real)) Bool (=> (and (not (= x420 3862337480)) (not (= x420 1020253707)) (not (= x420 2572356358)) (not (= 2388873442 x420)) (not (= 773487949 x420)) (not (= 1851080549 x420)) (not (= 2835717307 x420)) (not (= 961581905 x420)) (not (= x420 31556952)) (not (= x420 1196925270)) (not (= 2316151882 x420)) (not (= x420 60465744)) (not (= 4267106866 x420)) (not (= x420 31576340)) (not (= 3544214205 x420)) (not (= x420 1461501637330902918203684832716283019655932542975)) (not (= x420 3065339685)) (not (= 1889567281 x420)) (not (= 3963136098 x420)) (not (= x420 2869116585)) (not (= x420 274184521717934524641157099916833587200)) (not (= 2087341860 x420)) (not (= x420 1888058147)) (not (= x420 1854955031)) (not (= 157198259 x420)) (not (= 2052391781 x420)) (not (= 2988718581 x420)) (not (= 2715400956 x420)) (not (= x420 861432679)) (not (= 3877814014 x420)) (not (= x420 288104347)) (not (= 4294967296 x420)) (not (= x420 4151200938)) (not (= x420 2209625481)) (not (= 2681579215 x420)) (not (= 3491319510 x420)) (not (= 3504541104 x420)) (not (= x420 113225476)) (not (= 1257916802 x420)) (not (= 3208075701 x420)) (not (= x420 3296657447)) (not (= x420 596573372)) (not (= 348537858 x420)) (not (= x420 599290589)) (not (= x420 3184006219)) (not (= x420 464926286)) (not (= x420 1000000000000000000)) (not (= x420 1401663147)) (not (= 3613687827 x420)) (not (= 347398766 x420)) (not (= x420 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= x420 16192718)) (not (= 2484372501 x420)) (not (= 3567397854 x420)) (not (= x420 629314576)) (not (= x420 3339924076)) (< 10000 x420) (not (= x420 3184473787)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x420)) (not (= 297566789 x420)) (not (= x420 3147386184)) (not (= x420 2757214935)) (not (= x420 2699341722)) (not (= x420 1977493762)) (not (= x420 1823829273)) (not (= 3092021830 x420)) (not (= 356263876 x420)) (not (= x420 2780307423))) (not ((_ is x1478) (x1441 x420)))))
(assert (axiom_frac_bound (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x615 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x104 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1138 32 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234 8 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1435 x1159 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1454 x689 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x243 x950 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249 x1132 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270 x1048 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292 x678 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x366 32 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x401 32 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x498 x302 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x511 x124 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624 x121 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636 x881 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x696 x1018 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x72 x1457 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x827 x418 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x874 x701 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945 x289 (uninterp_frac (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1052 x636))
(assert (axiom_frac_zero x1052 x636 32 x615 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 8 x104 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x1138 32 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x1234 8 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x1435 x1159 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x1454 x689 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x243 x950 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x249 x1132 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x270 x1048 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x292 x678 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x366 32 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x401 32 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x498 x302 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x511 x124 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x624 x121 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x636 x881 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x696 x1018 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x72 x1457 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x827 x418 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x874 x701 (uninterp_frac x1052 x636)))
(assert (axiom_frac_zero x1052 x636 x945 x289 (uninterp_frac x1052 x636)))
(assert (axiom_frac_bound x1159 x689))
(assert (axiom_frac_zero x1159 x689 32 x615 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 8 x104 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x1138 32 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x1234 8 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x1435 x1159 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x1454 x689 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x243 x950 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x249 x1132 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x270 x1048 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x292 x678 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x366 32 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x401 32 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x498 x302 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x511 x124 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x624 x121 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x636 x881 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x696 x1018 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x72 x1457 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x827 x418 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x874 x701 (uninterp_frac x1159 x689)))
(assert (axiom_frac_zero x1159 x689 x945 x289 (uninterp_frac x1159 x689)))
(assert (axiom_frac_bound x120 31556952))
(assert (axiom_frac_zero x120 31556952 32 x615 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 8 x104 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x1138 32 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x1234 8 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x1435 x1159 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x1454 x689 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x243 x950 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x249 x1132 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x270 x1048 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x292 x678 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x366 32 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x401 32 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x498 x302 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x511 x124 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x624 x121 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x636 x881 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x696 x1018 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x72 x1457 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x827 x418 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x874 x701 (uninterp_frac x120 31556952)))
(assert (axiom_frac_zero x120 31556952 x945 x289 (uninterp_frac x120 31556952)))
(assert (axiom_frac_bound x1218 10000))
(assert (axiom_frac_zero x1218 10000 32 x615 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 8 x104 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x1138 32 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x1234 8 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x1435 x1159 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x1454 x689 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x243 x950 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x249 x1132 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x270 x1048 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x292 x678 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x366 32 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x401 32 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x498 x302 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x511 x124 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x624 x121 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x636 x881 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x696 x1018 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x72 x1457 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x827 x418 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x874 x701 (uninterp_frac x1218 10000)))
(assert (axiom_frac_zero x1218 10000 x945 x289 (uninterp_frac x1218 10000)))
(assert (axiom_frac_bound x1218 x1159))
(assert (axiom_frac_zero x1218 x1159 32 x615 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 8 x104 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x1138 32 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x1234 8 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x1435 x1159 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x1454 x689 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x243 x950 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x249 x1132 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x270 x1048 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x292 x678 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x366 32 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x401 32 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x498 x302 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x511 x124 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x624 x121 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x636 x881 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x696 x1018 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x72 x1457 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x827 x418 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x874 x701 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_zero x1218 x1159 x945 x289 (uninterp_frac x1218 x1159)))
(assert (axiom_frac_bound x1266 x1048))
(assert (axiom_frac_zero x1266 x1048 32 x615 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 8 x104 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x1138 32 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x1234 8 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x1435 x1159 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x1454 x689 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x243 x950 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x249 x1132 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x270 x1048 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x292 x678 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x366 32 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x401 32 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x498 x302 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x511 x124 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x624 x121 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x636 x881 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x696 x1018 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x72 x1457 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x827 x418 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x874 x701 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_zero x1266 x1048 x945 x289 (uninterp_frac x1266 x1048)))
(assert (axiom_frac_bound x1266 x866))
(assert (axiom_frac_zero x1266 x866 32 x615 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 8 x104 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x1138 32 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x1234 8 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x1435 x1159 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x1454 x689 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x243 x950 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x249 x1132 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x270 x1048 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x292 x678 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x366 32 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x401 32 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x498 x302 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x511 x124 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x624 x121 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x636 x881 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x696 x1018 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x72 x1457 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x827 x418 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x874 x701 (uninterp_frac x1266 x866)))
(assert (axiom_frac_zero x1266 x866 x945 x289 (uninterp_frac x1266 x866)))
(assert (axiom_frac_bound x1299 10000))
(assert (axiom_frac_zero x1299 10000 32 x615 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 8 x104 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x1138 32 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x1234 8 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x1435 x1159 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x1454 x689 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x243 x950 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x249 x1132 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x270 x1048 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x292 x678 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x366 32 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x401 32 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x498 x302 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x511 x124 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x624 x121 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x636 x881 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x696 x1018 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x72 x1457 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x827 x418 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x874 x701 (uninterp_frac x1299 10000)))
(assert (axiom_frac_zero x1299 10000 x945 x289 (uninterp_frac x1299 10000)))
(assert (axiom_frac_bound x1299 x1457))
(assert (axiom_frac_zero x1299 x1457 32 x615 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 8 x104 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x1138 32 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x1234 8 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x1435 x1159 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x1454 x689 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x243 x950 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x249 x1132 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x270 x1048 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x292 x678 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x366 32 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x401 32 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x498 x302 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x511 x124 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x624 x121 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x636 x881 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x696 x1018 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x72 x1457 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x827 x418 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x874 x701 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_zero x1299 x1457 x945 x289 (uninterp_frac x1299 x1457)))
(assert (axiom_frac_bound x1402 10000))
(assert (axiom_frac_zero x1402 10000 32 x615 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 8 x104 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x1138 32 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x1234 8 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x1435 x1159 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x1454 x689 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x243 x950 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x249 x1132 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x270 x1048 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x292 x678 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x366 32 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x401 32 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x498 x302 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x511 x124 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x624 x121 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x636 x881 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x696 x1018 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x72 x1457 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x827 x418 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x874 x701 (uninterp_frac x1402 10000)))
(assert (axiom_frac_zero x1402 10000 x945 x289 (uninterp_frac x1402 10000)))
(assert (axiom_frac_bound x1402 x498))
(assert (axiom_frac_zero x1402 x498 32 x615 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 8 x104 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x1138 32 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x1234 8 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x1435 x1159 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x1454 x689 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x243 x950 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x249 x1132 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x270 x1048 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x292 x678 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x366 32 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x401 32 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x498 x302 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x511 x124 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x624 x121 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x636 x881 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x696 x1018 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x72 x1457 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x827 x418 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x874 x701 (uninterp_frac x1402 x498)))
(assert (axiom_frac_zero x1402 x498 x945 x289 (uninterp_frac x1402 x498)))
(assert (axiom_frac_bound x1415 1000000000000000000))
(assert (axiom_frac_zero x1415 1000000000000000000 32 x615 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 8 x104 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x1138 32 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x1234 8 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x1435 x1159 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x1454 x689 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x243 x950 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x249 x1132 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x270 x1048 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x292 x678 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x366 32 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x401 32 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x498 x302 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x511 x124 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x624 x121 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x636 x881 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x696 x1018 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x72 x1457 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x827 x418 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x874 x701 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_zero x1415 1000000000000000000 x945 x289 (uninterp_frac x1415 1000000000000000000)))
(assert (axiom_frac_bound x1415 x124))
(assert (axiom_frac_zero x1415 x124 32 x615 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 8 x104 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x1138 32 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x1234 8 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x1435 x1159 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x1454 x689 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x243 x950 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x249 x1132 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x270 x1048 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x292 x678 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x366 32 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x401 32 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x498 x302 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x511 x124 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x624 x121 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x636 x881 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x696 x1018 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x72 x1457 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x827 x418 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x874 x701 (uninterp_frac x1415 x124)))
(assert (axiom_frac_zero x1415 x124 x945 x289 (uninterp_frac x1415 x124)))
(assert (axiom_frac_bound x159 x1132))
(assert (axiom_frac_zero x159 x1132 32 x615 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 8 x104 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x1138 32 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x1234 8 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x1435 x1159 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x1454 x689 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x243 x950 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x249 x1132 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x270 x1048 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x292 x678 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x366 32 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x401 32 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x498 x302 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x511 x124 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x624 x121 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x636 x881 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x696 x1018 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x72 x1457 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x827 x418 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x874 x701 (uninterp_frac x159 x1132)))
(assert (axiom_frac_zero x159 x1132 x945 x289 (uninterp_frac x159 x1132)))
(assert (axiom_frac_bound x159 x595))
(assert (axiom_frac_zero x159 x595 32 x615 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 8 x104 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x1138 32 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x1234 8 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x1435 x1159 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x1454 x689 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x243 x950 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x249 x1132 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x270 x1048 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x292 x678 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x366 32 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x401 32 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x498 x302 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x511 x124 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x624 x121 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x636 x881 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x696 x1018 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x72 x1457 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x827 x418 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x874 x701 (uninterp_frac x159 x595)))
(assert (axiom_frac_zero x159 x595 x945 x289 (uninterp_frac x159 x595)))
(assert (axiom_frac_bound x24 10000))
(assert (axiom_frac_zero x24 10000 32 x615 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 8 x104 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x1138 32 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x1234 8 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x1435 x1159 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x1454 x689 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x243 x950 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x249 x1132 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x270 x1048 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x292 x678 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x366 32 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x401 32 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x498 x302 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x511 x124 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x624 x121 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x636 x881 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x696 x1018 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x72 x1457 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x827 x418 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x874 x701 (uninterp_frac x24 10000)))
(assert (axiom_frac_zero x24 10000 x945 x289 (uninterp_frac x24 10000)))
(assert (axiom_frac_bound x24 x624))
(assert (axiom_frac_zero x24 x624 32 x615 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 8 x104 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x1138 32 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x1234 8 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x1435 x1159 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x1454 x689 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x243 x950 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x249 x1132 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x270 x1048 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x292 x678 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x366 32 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x401 32 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x498 x302 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x511 x124 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x624 x121 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x636 x881 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x696 x1018 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x72 x1457 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x827 x418 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x874 x701 (uninterp_frac x24 x624)))
(assert (axiom_frac_zero x24 x624 x945 x289 (uninterp_frac x24 x624)))
(assert (axiom_frac_bound x36 10000))
(assert (axiom_frac_zero x36 10000 32 x615 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 8 x104 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x1138 32 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x1234 8 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x1435 x1159 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x1454 x689 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x243 x950 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x249 x1132 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x270 x1048 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x292 x678 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x366 32 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x401 32 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x498 x302 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x511 x124 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x624 x121 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x636 x881 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x696 x1018 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x72 x1457 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x827 x418 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x874 x701 (uninterp_frac x36 10000)))
(assert (axiom_frac_zero x36 10000 x945 x289 (uninterp_frac x36 10000)))
(assert (axiom_frac_bound x36 x678))
(assert (axiom_frac_zero x36 x678 32 x615 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 8 x104 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x1138 32 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x1234 8 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x1435 x1159 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x1454 x689 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x243 x950 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x249 x1132 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x270 x1048 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x292 x678 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x366 32 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x401 32 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x498 x302 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x511 x124 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x624 x121 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x636 x881 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x696 x1018 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x72 x1457 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x827 x418 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x874 x701 (uninterp_frac x36 x678)))
(assert (axiom_frac_zero x36 x678 x945 x289 (uninterp_frac x36 x678)))
(assert (axiom_frac_bound x361 (x1425 2 x807)))
(assert (axiom_frac_zero x361 (x1425 2 x807) 32 x615 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) 8 x104 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x1138 32 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x1234 8 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x1435 x1159 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x1454 x689 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x243 x950 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x249 x1132 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x270 x1048 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x292 x678 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x366 32 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x401 32 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x498 x302 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x511 x124 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x624 x121 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x636 x881 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x696 x1018 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x72 x1457 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x827 x418 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x874 x701 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_zero x361 (x1425 2 x807) x945 x289 (uninterp_frac x361 (x1425 2 x807))))
(assert (axiom_frac_bound x382 10000))
(assert (axiom_frac_zero x382 10000 32 x615 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 8 x104 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x1138 32 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x1234 8 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x1435 x1159 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x1454 x689 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x243 x950 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x249 x1132 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x270 x1048 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x292 x678 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x366 32 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x401 32 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x498 x302 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x511 x124 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x624 x121 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x636 x881 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x696 x1018 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x72 x1457 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x827 x418 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x874 x701 (uninterp_frac x382 10000)))
(assert (axiom_frac_zero x382 10000 x945 x289 (uninterp_frac x382 10000)))
(assert (axiom_frac_bound x382 x289))
(assert (axiom_frac_zero x382 x289 32 x615 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 8 x104 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x1138 32 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x1234 8 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x1435 x1159 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x1454 x689 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x243 x950 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x249 x1132 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x270 x1048 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x292 x678 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x366 32 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x401 32 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x498 x302 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x511 x124 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x624 x121 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x636 x881 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x696 x1018 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x72 x1457 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x827 x418 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x874 x701 (uninterp_frac x382 x289)))
(assert (axiom_frac_zero x382 x289 x945 x289 (uninterp_frac x382 x289)))
(assert (axiom_frac_bound x449 (x1425 2 x1269)))
(assert (axiom_frac_zero x449 (x1425 2 x1269) 32 x615 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) 8 x104 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x1138 32 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x1234 8 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x1435 x1159 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x1454 x689 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x243 x950 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x249 x1132 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x270 x1048 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x292 x678 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x366 32 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x401 32 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x498 x302 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x511 x124 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x624 x121 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x636 x881 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x696 x1018 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x72 x1457 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x827 x418 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x874 x701 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_zero x449 (x1425 2 x1269) x945 x289 (uninterp_frac x449 (x1425 2 x1269))))
(assert (axiom_frac_bound x697 x1018))
(assert (axiom_frac_zero x697 x1018 32 x615 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 8 x104 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x1138 32 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x1234 8 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x1435 x1159 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x1454 x689 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x243 x950 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x249 x1132 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x270 x1048 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x292 x678 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x366 32 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x401 32 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x498 x302 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x511 x124 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x624 x121 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x636 x881 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x696 x1018 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x72 x1457 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x827 x418 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x874 x701 (uninterp_frac x697 x1018)))
(assert (axiom_frac_zero x697 x1018 x945 x289 (uninterp_frac x697 x1018)))
(assert (axiom_frac_bound x697 x536))
(assert (axiom_frac_zero x697 x536 32 x615 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 8 x104 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x1138 32 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x1234 8 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x1435 x1159 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x1454 x689 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x243 x950 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x249 x1132 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x270 x1048 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x292 x678 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x366 32 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x401 32 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x498 x302 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x511 x124 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x624 x121 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x636 x881 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x696 x1018 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x72 x1457 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x827 x418 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x874 x701 (uninterp_frac x697 x536)))
(assert (axiom_frac_zero x697 x536 x945 x289 (uninterp_frac x697 x536)))
(assert (axiom_frac_bound x718 1000000000000000000))
(assert (axiom_frac_zero x718 1000000000000000000 32 x615 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 8 x104 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x1138 32 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x1234 8 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x1435 x1159 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x1454 x689 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x243 x950 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x249 x1132 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x270 x1048 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x292 x678 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x366 32 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x401 32 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x498 x302 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x511 x124 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x624 x121 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x636 x881 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x696 x1018 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x72 x1457 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x827 x418 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x874 x701 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_zero x718 1000000000000000000 x945 x289 (uninterp_frac x718 1000000000000000000)))
(assert (axiom_frac_bound x718 x418))
(assert (axiom_frac_zero x718 x418 32 x615 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 8 x104 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x1138 32 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x1234 8 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x1435 x1159 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x1454 x689 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x243 x950 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x249 x1132 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x270 x1048 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x292 x678 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x366 32 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x401 32 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x498 x302 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x511 x124 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x624 x121 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x636 x881 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x696 x1018 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x72 x1457 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x827 x418 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x874 x701 (uninterp_frac x718 x418)))
(assert (axiom_frac_zero x718 x418 x945 x289 (uninterp_frac x718 x418)))
(assert (axiom_frac_bound x829 10000))
(assert (axiom_frac_zero x829 10000 32 x615 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 8 x104 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x1138 32 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x1234 8 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x1435 x1159 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x1454 x689 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x243 x950 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x249 x1132 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x270 x1048 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x292 x678 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x366 32 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x401 32 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x498 x302 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x511 x124 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x624 x121 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x636 x881 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x696 x1018 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x72 x1457 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x827 x418 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x874 x701 (uninterp_frac x829 10000)))
(assert (axiom_frac_zero x829 10000 x945 x289 (uninterp_frac x829 10000)))
(assert (axiom_frac_bound x829 x243))
(assert (axiom_frac_zero x829 x243 32 x615 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 8 x104 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x1138 32 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x1234 8 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x1435 x1159 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x1454 x689 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x243 x950 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x249 x1132 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x270 x1048 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x292 x678 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x366 32 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x401 32 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x498 x302 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x511 x124 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x624 x121 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x636 x881 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x696 x1018 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x72 x1457 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x827 x418 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x874 x701 (uninterp_frac x829 x243)))
(assert (axiom_frac_zero x829 x243 x945 x289 (uninterp_frac x829 x243)))
(assert (axiom_frac_bound x926 x874))
(assert (axiom_frac_zero x926 x874 32 x615 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 8 x104 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x1138 32 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x1234 8 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x1435 x1159 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x1454 x689 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x243 x950 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x249 x1132 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x270 x1048 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x292 x678 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x366 32 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x401 32 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x498 x302 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x511 x124 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x624 x121 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x636 x881 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x696 x1018 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x72 x1457 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x827 x418 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x874 x701 (uninterp_frac x926 x874)))
(assert (axiom_frac_zero x926 x874 x945 x289 (uninterp_frac x926 x874)))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1003))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1008))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x1052))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1084))
(assert (axiom_int_approximation x1085))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1097))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1102))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1120))
(assert (axiom_int_approximation x1121))
(assert (axiom_int_approximation x1125))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1134))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1138))
(assert (axiom_int_approximation x1139))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1207))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1218))
(assert (axiom_int_approximation x1222))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x1229))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1234))
(assert (axiom_int_approximation x1235))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1247))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1253))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1267))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1269))
(assert (axiom_int_approximation x127))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1328))
(assert (axiom_int_approximation x1330))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1335))
(assert (axiom_int_approximation x1339))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1342))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1351))
(assert (axiom_int_approximation x1352))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1361))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1371))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1377))
(assert (axiom_int_approximation x1378))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x1382))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1392))
(assert (axiom_int_approximation x1394))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1416))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1454))
(assert (axiom_int_approximation x1456))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x151))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x170))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x236))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x27))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x282))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x475))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x507))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x54))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x554))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x567))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x57))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x641))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x689))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x699))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x755))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x820))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x827))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x843))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x866))
(assert (axiom_int_approximation x870))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x874))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x907))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x923))
(assert (axiom_int_approximation x926))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x943))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x950))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x965))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x972))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x977))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x989))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x991))
(assert (axiom_int_approximation x994))
(assert (axiom_int_approximation x998))
(assert (x533 x1230))
(assert (x533 x434))
(assert (= (=> (and (= x813 (x836 320)) (= (< x452 x813) x805) (= (x836 352) x452)) (and (=> (and (= x1268 (x1147 (- x452 x813))) (not x805)) x844) (=> x805 x52))) x268))
(assert (= (x1441 3544214205) (x1478 3544214205)))
(assert (x1309 (x996 128)))
(assert (= (ite (and x558 (not x788)) (x509 (x1478 10)) (x1114 (x1478 10))) (x672 (x1478 10))))
(assert (x533 x1234))
(assert (x533 x1131))
(assert (x533 x951))
(assert (= (x712 x641) (ite (and x895 x1103 (not x610)) (x552 x641) (x957 x641))))
(assert (x533 x1268))
(assert (= (x605 x1484) (ite (= x491 x1484) x1040 (x1209 x1484))))
(assert (x533 x1251))
(assert (x533 x1394))
(assert (x533 x354))
(assert (= (x754 288) (x1101 288)))
(assert (x1309 (x1250 128)))
(assert (=> (> (+ 10000 1) (x628 128)) (= (x1478 (x628 128)) (x1441 (x628 128)))))
(assert (= (ite (= x425 (x1478 39)) x434 (x638 (x1478 39))) (x149 (x1478 39))))
(assert (= (x975 (x1441 (x1133 128))) (x1133 128)))
(assert (= (ite (= 832 x437) x1431 (x1185 x437)) (x172 x437)))
(assert (= (x189 544) (x480 544)))
(assert (x533 x804))
(assert (x1309 (x669 160)))
(assert (= (x1154 x437) (ite (= 1152 x437) x912 (x1318 x437))))
(assert (= (x1478 157198259) (x1441 157198259)))
(assert (x533 x1157))
(assert (x533 x622))
(assert (=> (> (+ 10000 1) (x628 160)) (= (x1478 (x628 160)) (x1441 (x628 160)))))
(assert (= (x152 800) (x1024 800)))
(assert (= (x987 800) (x1303 800)))
(assert (x533 x1170))
(assert (x533 x662))
(assert (= (x605 (x1478 43)) (ite (= (x1478 43) x491) x1040 (x1209 (x1478 43)))))
(assert (= (x1303 384) (x987 384)))
(assert (x533 x289))
(assert (= x715 x992))
(assert (x533 x587))
(assert (x533 x1291))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x975 (x1478 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= x441 (=> (= x397 (> x1302 31)) (and (=> (not x397) x52) (=> x397 x1356)))))
(assert (= (x582 x242) (ite (and x1004 (not x1421)) (x605 x242) (x839 x242))))
(assert (= (x1441 2484372501) (x1478 2484372501)))
(assert (x1309 (x761 160)))
(assert (= x179 (=> (= (> x554 31) x116) (and (=> (not x116) x52) (=> x116 x999)))))
(assert (x533 x170))
(assert (= (x756 x698) (ite (and (not x1041) x235) (x941 x698) (x460 x698))))
(assert (x533 x1152))
(assert (x1309 (x306 160)))
(assert (= (x30 512) (x103 512)))
(assert (= (x1441 3567397854) (x1478 3567397854)))
(assert (x1309 (x388 160)))
(assert (= (=> (and (= (< 0 x664) x1467) (= x140 (x1322 896)) (= x1193 (x378 x212 6)) (= (x351 928) x145) (= x912 (x1318 928)) (= (x570 (x1441 (x996 128)) (x1441 (x996 160)) 0) x212) (= x402 (x941 x1193)) (or (and (= x1201 x664) (not x1467)) (and x1467 (< x1296 4294967296) (= 1 x1201))) (= x1192 (x1194 864))) x1405) x1011))
(assert (= (x189 x328) (ite (= 576 x328) x1081 (x480 x328))))
(assert (x533 x1086))
(assert (= (ite (= 256 x641) 274184521717934524641157099916833587200 (x1440 x641)) (x1082 x641)))
(assert (x533 x752))
(assert (= (x9 128) (x975 (x1441 (x9 128)))))
(assert (= (x304 320) (x88 320)))
(assert (= x46 (and x1206 x250)))
(assert (x533 x1457))
(assert (= (x1101 288) (x483 288)))
(assert (x1309 (x762 128)))
(assert (x533 x476))
(assert (= (x1154 x57) (ite (= 1152 x57) x912 (x1318 x57))))
(assert (x533 x670))
(assert (= (=> (= x653 (> x1424 31)) (and (=> (not x653) x52) (=> (and (= x990 false) x653) x1021))) x812))
(assert (x533 x567))
(assert (= (x1441 1020253707) (x1478 1020253707)))
(assert (= (x106 384) (x1091 384)))
(assert (= (ite (= 192 x328) 0 (x483 x328)) (x1101 x328)))
(assert (= (x882 128) (x975 (x1441 (x882 128)))))
(assert (= (x975 (x1441 (x1151 128))) (x1151 128)))
(assert (x533 x1371))
(assert (x533 x1263))
(assert (x533 x1034))
(assert (= (x16 384) (x1221 384)))
(assert (x533 x911))
(assert (= x668 (x975 (x1441 x668))))
(assert (x533 x1332))
(assert (x533 x699))
(assert (= (x88 384) (x304 384)))
(assert (= (x1221 128) 7))
(assert (x533 x233))
(assert (=> (> (+ 10000 1) (x1465 128)) (= (x1478 (x1465 128)) (x1441 (x1465 128)))))
(assert (x533 x943))
(assert (x533 x617))
(assert (= (x1478 1257916802) (x1441 1257916802)))
(assert (= (x1082 352) (x1440 352)))
(assert (x533 x1125))
(assert (x533 x248))
(assert (x533 x689))
(assert (= x759 (and x1287 x1275)))
(assert (= (x1 256) (x1083 256)))
(assert (= (ite (and x334 (not x1057) (not x1183)) (x871 352) (x1386 352)) (x23 352)))
(assert (x533 x668))
(assert (x533 x681))
(assert (=> (< (- (x1217 128) 1) 10000) (= (x1441 (x1217 128)) (x1478 (x1217 128)))))
(assert true)
(assert (= (x1414 128) (x975 (x1441 (x1414 128)))))
(assert (x533 x565))
(assert (x533 x1102))
(assert (x533 x467))
(assert (x533 x1066))
(assert (= (x975 (x1478 113225476)) 113225476))
(assert (= (x172 320) (x1185 320)))
(assert (= (=> (and (= (- (/ x697 x536) (uninterp_frac x697 x536)) x870) (= x99 (x1101 256)) (= x641 (x856 (+ 352 x879))) (= x195 (x1101 x641)) (= x1138 (x1101 192)) (= (uninterp_mod (* x1138 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x879) (= x238 (= x99 x195)) (= x371 (x352 512)) (= (x210 768) x293)) (and (=> (not x238) x442) (=> x238 x330))) x1281))
(assert (x533 x71))
(assert (x1309 (x882 160)))
(assert (= (ite (= x425 (x1478 44)) x434 (x638 (x1478 44))) (x149 (x1478 44))))
(assert (x1309 (x1217 128)))
(assert (= (=> (and (= (x672 (x1478 44)) x881) (= (- (/ x1052 x636) (uninterp_frac x1052 x636)) x1288) (= (uninterp_mod (* x636 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1052) (= x621 (or x1123 x499)) (= (= x1288 x881) x1123) (= x499 (= 0 x636)) (= x1437 (= 0 (ite x621 1 0))) (= x636 (x1147 (- x1301 x255)))) (and (=> x1437 x52) (=> (not x1437) x19))) x918))
(assert (= (x987 224) (x1303 224)))
(assert (= (x756 (x1478 37)) (ite (and x235 (not x1041)) (x941 (x1478 37)) (x460 (x1478 37)))))
(assert (= (ite (= x437 192) x779 (x1083 x437)) (x206 x437)))
(assert (= (x1179 352) (x957 352)))
(assert (x533 x1108))
(assert (= x290 true))
(assert (x533 x725))
(assert (x533 x1134))
(assert (x533 x500))
(assert (= x738 (=> (and (= (= 0 x689) x633) (= (uninterp_mod (* x1454 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1159) (= (x1147 (- x967 x1085)) x689) (= x357 (= x1454 x151)) (= x1454 (x477 576)) (= (- (/ x1159 x689) (uninterp_frac x1159 x689)) x151) (= (= (ite x1350 1 0) 0) x692) (= (or x633 x357) x1350)) (and (=> x692 x52) (=> (not x692) x1341)))))
(assert (x533 x1352))
(assert (=> (> (+ 10000 1) (x1250 160)) (= (x1441 (x1250 160)) (x1478 (x1250 160)))))
(assert (= x853 (and (not x610) x895)))
(assert (= (x1083 352) (x206 352)))
(assert (= (ite (and (not x1057) (not x1183) x334) (x871 x328) (x1386 x328)) (x23 x328)))
(assert (x533 x1105))
(assert (x1309 (x1026 128)))
(assert (x533 x1247))
(assert (= (x1101 384) (x483 384)))
(assert (x533 x24))
(assert (= (x509 (x1478 44)) (ite (and (not x377) x1333) (x149 (x1478 44)) (x50 (x1478 44)))))
(assert (= (ite (= (x1478 10) x425) x434 (x638 (x1478 10))) (x149 (x1478 10))))
(assert (= (x975 (x1441 (x1078 160))) (x1078 160)))
(assert (= (x22 384) (x904 384)))
(assert (x533 x613))
(assert (= (x149 x1312) (ite (= x425 x1312) x434 (x638 x1312))))
(assert (= x553 x254))
(assert (= (x975 (x378 x841 6)) (+ (x975 x841) 6)))
(assert (= (x1478 1000000000000000000) (x1441 1000000000000000000)))
(assert (=> (< (- (x1091 160) 1) 10000) (= (x1441 (x1091 160)) (x1478 (x1091 160)))))
(assert (= (and (not x939) x620) x1305))
(assert (= (=> (and (= (x1408 256) x511) (= x1320 (= (ite x178 1 0) 0)) (= (= x124 0) x300) (= (= x511 x1006) x129) (= x478 (x672 (x1478 43))) (= x178 (or x300 x129)) (= (x1408 256) x1176) (= x1006 (- (/ x1415 x124) (uninterp_frac x1415 x124))) (= x1415 (uninterp_mod (* x511 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x124 (x1408 224))) (and (=> x1320 x52) (=> (not x1320) x1427))) x576))
(assert (x1309 (x304 128)))
(assert (= (x1101 x437) (ite (= 192 x437) 0 (x483 x437))))
(assert (= (x38 832) (x1286 832)))
(assert (= x1383 (=> (and (= x956 (x149 (x1478 40))) (= x823 (x856 (+ x956 x283))) (= (> x283 x823) x1373) (= (x1016 224) x283)) (and (=> x1373 x52) (=> (not x1373) x1046)))))
(assert (x533 x1074))
(assert (= (x1101 256) (x483 256)))
(assert (x533 x1192))
(assert (x533 x1120))
(assert (= (x810 480) (x286 480)))
(assert (= (ite (= x328 448) x1276 (x103 x328)) (x30 x328)))
(assert (= x1227 (and x87 x1398)))
(assert (= (=> (and (= x398 (x984 672)) (= (- (/ x1402 10000) (uninterp_frac x1402 10000)) x333) (= x423 (x984 640)) (= x1274 (> x398 x489)) (= (x856 (+ x398 x423)) x489)) (and (=> x1274 x52) (=> (not x1274) x919))) x514))
(assert (= (x1441 4151200938) (x1478 4151200938)))
(assert (x533 x1392))
(assert (= (x672 (x1478 41)) (ite (and x558 (not x788)) (x509 (x1478 41)) (x1114 (x1478 41)))))
(assert (= (or (and x658 x1360) x1487) x274))
(assert (= (x1465 160) (x975 (x1441 (x1465 160)))))
(assert (= 2715400956 (x975 (x1478 2715400956))))
(assert (= (x1182 800) (x317 800)))
(assert (x533 x1235))
(assert (not x74))
(assert (x533 x688))
(assert (= (x975 (x1441 (x144 160))) (x144 160)))
(assert (=> (< (- (x996 160) 1) 10000) (= (x1441 (x996 160)) (x1478 (x996 160)))))
(assert (= 288104347 (x975 (x1478 288104347))))
(assert (x533 x824))
(assert (= x634 (=> (and (= (x856 (+ x1049 1)) x779) (= (x1083 192) x1049) (= (= x779 2) x1360)) (and (=> x1360 x535) (=> (not x1360) x247)))))
(assert (x1309 (x388 128)))
(assert (x533 x1301))
(assert (= (ite (= x491 x280) x1040 (x1209 x280)) (x605 x280)))
(assert (= (x1441 3862337480) (x1478 3862337480)))
(assert (x533 x405))
(assert (= x1065 (and x1196 x13)))
(assert (= (x1083 384) (x206 384)))
(assert (x533 x1049))
(assert (= (x152 352) (x1024 352)))
(assert (= (ite (= (x1478 40) x425) x434 (x638 (x1478 40))) (x149 (x1478 40))))
(assert (= (and x307 x309) x209))
(assert (= (ite (and x235 (not x1041)) (x941 x491) (x460 x491)) (x756 x491)))
(assert (x533 x121))
(assert (= 1823829273 (x975 (x1478 1823829273))))
(assert (= (=> (and (= x645 (> x564 0)) (= x564 (x11 800))) (and (=> x645 x1129) (=> (not x645) x944))) x102))
(assert (= (x836 352) x790))
(assert (= (x308 x641) (ite (= x641 256) 274184521717934524641157099916833587200 (x389 x641))))
(assert (=> (< (- (x996 128) 1) 10000) (= (x1441 (x996 128)) (x1478 (x996 128)))))
(assert (x533 x519))
(assert (= (x38 384) (x1286 384)))
(assert (= (x975 (x378 x603 6)) (+ 6 (x975 x603))))
(assert (= (x669 128) (x975 (x1441 (x669 128)))))
(assert (x533 x739))
(assert (= (=> (and (= x866 (x523 480)) (= x360 (x1147 (- x520 x205))) (= x394 (= 0 x866))) (and (=> (and (= x1477 (- (/ x1266 x866) (uninterp_frac x1266 x866))) (not x394)) x1473) (=> x394 x52))) x84))
(assert (= x253 (and (not x1038) x887)))
(assert (= (=> (and (= (x194 320) x1228) (= x297 (> x1228 x1230)) (= x1230 (x194 352))) (and (=> (and (= x86 (x1147 (- x1230 x1228))) (not x297)) x1011) (=> x297 x52))) x227))
(assert (= (x754 256) (x1101 256)))
(assert (= (x201 512) (x73 512)))
(assert (=> (> (+ 10000 1) (x1250 128)) (= (x1478 (x1250 128)) (x1441 (x1250 128)))))
(assert (x533 x1155))
(assert (= (=> (and (= x1398 (< x303 x740)) (= x740 (x1286 928)) (= (x1286 832) x303)) (and (=> (not x1398) x1479) (=> x1398 x1270))) x381))
(assert (= (ite (= x491 (x1478 44)) x1040 (x1209 (x1478 44))) (x605 (x1478 44))))
(assert (= (x83 x449 x1269) (- (/ x449 (x1425 2 x1269)) (uninterp_frac x449 (x1425 2 x1269)))))
(assert (x533 x20))
(assert (= x1381 (or (and (not x1398) x87) x1466 x183)))
(assert (= (x1441 1851080549) (x1478 1851080549)))
(assert (x533 x464))
(assert (= (x1478 347398766) (x1441 347398766)))
(assert (= (x1 384) (x1083 384)))
(assert (x533 x43))
(assert (= (x605 x1312) (ite (= x491 x1312) x1040 (x1209 x1312))))
(assert (= (x591 800) (x801 800)))
(assert (= (ite (and x558 (not x788)) (x509 x1312) (x1114 x1312)) (x672 x1312)))
(assert (= x1295 (=> (and (= x1378 (x1169 960)) (= x413 (< x1378 x806))) (and (=> (and (= x903 (x1147 (- x1378 x1008))) (not x413)) x473) (=> x413 x52)))))
(assert (= (x1096 352) (x1217 352)))
(assert (= x1449 (=> (and (= (x1062 (x1441 274184521717934524641157099916833587200)) x158) (= x915 (< 0 x1354)) (> x158 0) (not (< x1071 4))) (and (=> x915 x52) (=> (not x915) x155)))))
(assert (= (x149 x4) (ite (= x425 x4) x434 (x638 x4))))
(assert (x1309 (x1298 160)))
(assert (x533 x818))
(assert (x533 x241))
(assert (= (x1197 x641) 0))
(assert (x533 x664))
(assert (= x290 x555))
(assert (= (x871 384) (x984 384)))
(assert (= (x1478 2988718581) (x1441 2988718581)))
(assert (= (x756 x922) (ite (and (not x1041) x235) (x941 x922) (x460 x922))))
(assert (= (x483 224) (x1101 224)))
(assert (x533 x402))
(assert (= (x1221 352) (x16 352)))
(assert (= (x756 x242) (ite (and x235 (not x1041)) (x941 x242) (x460 x242))))
(assert (x1309 (x9 160)))
(assert (= (ite (= x328 128) 16 (x1096 x328)) (x1217 x328)))
(assert (x533 x991))
(assert (x533 x5))
(assert (x533 x1022))
(assert (= (x605 x590) (ite (= x590 x491) x1040 (x1209 x590))))
(assert (= (x1478 3208075701) (x1441 3208075701)))
(assert (= (x206 704) (x1083 704)))
(assert (= (and x1238 (not x884)) x1208))
(assert (= (x1179 384) (x957 384)))
(assert (=> (> (+ 10000 1) (x762 160)) (= (x1441 (x762 160)) (x1478 (x762 160)))))
(assert (= x535 x817))
(assert (x533 x757))
(assert (= (x801 512) (x591 512)))
(assert (= x532 (=> (= (> x438 0) x1362) (and (=> x1362 x1434) (=> (not x1362) x52)))))
(assert (x533 x1377))
(assert (=> (< (- (x1442 128) 1) 10000) (= (x1441 (x1442 128)) (x1478 (x1442 128)))))
(assert (= (=> (and (= x221 (x959 896)) (= (x869 864) x1076) (= x1392 (ite (> x932 x1076) x1076 x932)) (= x377 (> x221 0)) (= x374 (x1245 896))) (and (=> (not x377) x1110) (=> x377 x3))) x844))
(assert (x533 x830))
(assert (x533 x154))
(assert (x533 x324))
(assert (= (x1083 704) (x1 704)))
(assert (x533 x848))
(assert (= (x1441 2715400956) (x1478 2715400956)))
(assert (= x200 (=> (and (= (= x270 x998) x488) (= x1048 (x30 384)) (= x1266 (uninterp_mod (* x270 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (or x1128 x488) x457) (= (- (/ x1266 x1048) (uninterp_frac x1266 x1048)) x998) (= x1128 (= x1048 0)) (= (x30 448) x270) (= (= (ite x457 1 0) 0) x916)) (and (=> (and (not x916) (or (and (= x1236 x373) (not x773)) (and (> 4294967296 x1302) x773 (= x1236 1))) (= x773 (> x373 0))) x705) (=> x916 x52)))))
(assert (x533 x225))
(assert (= (x433 352) (x165 352)))
(assert (x533 x1342))
(assert (x533 x54))
(assert (= 3065339685 (x975 (x1478 3065339685))))
(assert (= (x925 320) (x191 320)))
(assert (= (x672 (x1478 44)) (ite (and (not x788) x558) (x509 (x1478 44)) (x1114 (x1478 44)))))
(assert (x1309 (x304 160)))
(assert (x533 x1045))
(assert (x533 x708))
(assert (= (x929 256) (x161 256)))
(assert (= (ite (and (not x631) x1190 x414) (x273 352) (x172 352)) (x11 352)))
(assert (= (ite (and (not x1421) x1004) (x605 x698) (x839 x698)) (x582 x698)))
(assert (= (x286 512) x563))
(assert (= x1486 (=> (and (= (x315 416) x1283) (= (x315 448) x1259) (= (x856 (+ x1283 x1259)) x710) (= x625 (< x710 x1259))) (and (=> x625 x52) (=> (not x625) x969)))))
(assert (= (ite (and x235 (not x1041)) (x941 (x1478 45)) (x460 (x1478 45))) (x756 (x1478 45))))
(assert (x533 x1446))
(assert (= (ite (= 832 x641) x1431 (x1185 x641)) (x172 x641)))
(assert (x1309 (x306 128)))
(assert (x533 x104))
(assert (= (=> (and (= x135 (x88 256)) (= x1108 (x1028 224)) (= (< x424 x135) x1380) (= (x378 x841 6) x49) (= (x570 (x1441 (x304 128)) (x1441 (x304 160)) 0) x841) (= x775 (x941 x49)) (= (x88 288) x424)) (and (=> x1380 x52) (=> (not x1380) x963))) x463))
(assert (= (ite (= x328 832) x1431 (x1179 x328)) (x957 x328)))
(assert (x533 x276))
(assert (= (x1478 2699341722) (x1441 2699341722)))
(assert (= (=> (and (= x1365 (x31 512)) (= (x756 x981) x848) (= x939 (= x848 x1301)) (= x562 (x570 (x1441 (x1143 128)) (x1441 (x1143 160)) 0)) (= x981 (x378 x562 1))) (and (=> x939 x1331) (=> (not x939) x995))) x1262))
(assert (= (x975 (x1441 (x929 160))) (x929 160)))
(assert (x533 x1399))
(assert (= (x509 x917) (ite (and x1333 (not x377)) (x149 x917) (x50 x917))))
(assert (= 1854955031 (x975 (x1478 1854955031))))
(assert (= (x975 (x1441 (x962 160))) (x962 160)))
(assert (= x138 (and (not x544) x181)))
(assert (x1309 (x1143 128)))
(assert (= x453 (and x1418 x1242)))
(assert (=> (> (+ 10000 1) (x383 128)) (= (x1478 (x383 128)) (x1441 (x383 128)))))
(assert (= (x194 352) x1222))
(assert (=> (< (- (x1091 128) 1) 10000) (= (x1441 (x1091 128)) (x1478 (x1091 128)))))
(assert (= 16 (x1217 128)))
(assert (x533 x1296))
(assert (= (x1406 832) (x196 832)))
(assert (= (x16 704) (x1221 704)))
(assert (= (x975 (x1441 (x388 160))) (x388 160)))
(assert (=> (> (+ 10000 1) (x1260 160)) (= (x1478 (x1260 160)) (x1441 (x1260 160)))))
(assert (x533 x1097))
(assert (x1309 (x861 128)))
(assert (x533 x331))
(assert (= (x1024 288) x1431))
(assert (= (=> (= (> x1296 31) x1336) (and (=> x1336 x1462) (=> (not x1336) x52))) x364))
(assert (=> (< (- (x150 128) 1) 10000) (= (x1441 (x150 128)) (x1478 (x150 128)))))
(assert (=> (< (- (x1298 128) 1) 10000) (= (x1478 (x1298 128)) (x1441 (x1298 128)))))
(assert (x533 x1136))
(assert (x533 x282))
(assert (= (x975 (x1441 (x1217 160))) (x1217 160)))
(assert (= (=> (and (= x1034 (x672 (x1478 10))) (= x1419 (> x1315 x294)) (= (x1385 832) x1315) (= (x1385 928) x294)) (and (=> x1419 x52) (=> (and (= x240 (x856 (+ x798 96))) (= x34 (> x1086 0)) (= x1117 (< 0 x299)) (= x798 (x942 416)) (= (x856 (+ 544 x798)) x399) (= x574 (x1147 (- x294 x1315))) (= (x472 288) x1352) (= x951 (x856 (+ 64 x1153))) (= x148 (x942 256)) (or (not x1117) (and x1117 (< x454 4294967296))) (= x587 (x1135 320)) (= (x856 (+ 512 x798)) x1153) (= x668 (x987 224)) (or (and (= x797 (>= (x901 (x1441 274184521717934524641157099916833587200)) x79)) (> 4294967296 x25) (= x1367 (= (x901 (x1441 x668)) x443)) x34 x797 x1367 (= (x1156 (x1441 x668)) x443) (= x79 (x1156 (x1441 274184521717934524641157099916833587200)))) (not x34)) (not x1419)) x709))) x1270))
(assert (= (and x723 x1300) x1280))
(assert (x1309 (x152 160)))
(assert (x533 x597))
(assert (x533 x89))
(assert (= x87 (and x1292 (not x772))))
(assert (x533 x373))
(assert (= (x975 (x1441 (x861 128))) (x861 128)))
(assert (= (x962 128) (x975 (x1441 (x962 128)))))
(assert (= x702 (=> (and (= (x1384 224) x900) (= (x570 (x1441 (x388 128)) (x1441 (x388 160)) 0) x1484) (= x141 (> x598 x937)) (= x937 (x605 x1484)) (= (x388 288) x598)) (and (=> (not x141) x1219) (=> x141 x52)))))
(assert (x1309 (x1151 128)))
(assert (= (x975 (x378 x784 6)) (+ (x975 x784) 6)))
(assert (= (x712 384) (ite (and (not x610) x895 x1103) (x552 384) (x957 384))))
(assert (x533 x873))
(assert (= 16192718 (x975 (x1478 16192718))))
(assert (= (x1478 3184473787) (x1441 3184473787)))
(assert (x533 x1055))
(assert (x533 x401))
(assert (x533 x112))
(assert (= (x582 x1489) (ite (and (not x1421) x1004) (x605 x1489) (x839 x1489))))
(assert (x533 x889))
(assert (= (x306 128) (x975 (x1441 (x306 128)))))
(assert (= (and (not x482) x313) x1297))
(assert (x533 x231))
(assert (= x69 (and x645 x890)))
(assert (= (x975 (x1441 (x383 128))) (x383 128)))
(assert (= (=> (and (= (x206 256) x42) (= (x206 192) x401) (= (x206 x437) x892) (= x437 (x856 (+ x127 352))) (= (= x42 x892) x667) (= (uninterp_mod (* x401 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x127)) (and x817 x667)) x247))
(assert (= (ite (and x235 (not x1041)) (x941 x1312) (x460 x1312)) (x756 x1312)))
(assert (= (x1082 x437) (ite (= x437 256) 274184521717934524641157099916833587200 (x1440 x437))))
(assert (x533 x547))
(assert (x533 x101))
(assert (=> (> (+ 10000 1) (x861 128)) (= (x1478 (x861 128)) (x1441 (x861 128)))))
(assert (= 2835717307 (x975 (x1478 2835717307))))
(assert (x533 x1428))
(assert (= x1056 (and x46 (not x1320))))
(assert (= (ite (and (not x1041) x235) (x941 x1232) (x460 x1232)) (x756 x1232)))
(assert (= x1311 (or (and (not x653) x1284) (and x887 x1038) (and x958 x1429) (and (not x397) x386) (and x759 x888) (and x451 x627) (and x68 x838) (and x1437 x947) (and x805 x776) (and x118 x643) (and x609 x269) (and x47 x916) (and (not x367) x53) (and x171 x413) (and x332 x66) (and x1274 x138) (and x569 x1200) (and x181 x544) (and x485 x1012) (and x596 x379) (and x128 x1297) (and x209 (not x372)) (and (not x496) x322) (and (not x108) x1014) (and x1027 x602) (and x1238 x884) (and x263 x635) (and x1233 (not x877)) (and x1448 x1005) (and (not x854) x1044) (and x555 x915) (and x394 x585) (and x412 x864) (and (not x675) x468) (and x1308 x1373) (and x510 (not x404)) (and x885 x274) (and x894 x1483) (and x313 x482) (and x469 x522) (and (not x1362) x985) (and x355 x356) (and (not x741) x1403) (and x971 x730) (and x259 x886) (and x774 x167) (and x980 (not x834)) (and x1227 x1419) (and x1305 x733) (and x223 x1368) (and x1009 x253) (and x61 x692) (and x538 x657) (and (not x175) x440) (and x46 x1320) (and (not x586) x1065) (and x130 x1187) (and x771 x758) (and x392 x625) (and (not x116) x1031) (and x594 x493) (and x416 x948) (and x1481 x117) (and x1433 x458) (and x327 x540) (and x906 x220) (and x186 x141) (and x853 (not x953)) (and x169 x113) (and x858 x466) (and x766 x174) (and x1380 x114) (and x246 x40) (and x938 x1056) (and x895 x610) (and x1337 x1224) (and x952 x1248) (and x677 (not x1077)) (and x296 x1470) (and x589 x1252) (and x546 (not x1010)) (and (not x432) x453) (and (not x1336) x921) (and x1287 (not x1275)) (and x111 x1208) (and x992 (not x258)) (and x193 (not x1069)) (and (not x1126) x1000) (and x1280 x297) (and x1057 x334) (and x1395 x1345) (and x217 x1381) (and (not x1150) x1340) (and x1116 x982))))
(assert (= (x1440 224) (x1082 224)))
(assert (= x1287 (and x985 x1362)))
(assert (= (x975 (x1478 297566789)) 297566789))
(assert (= (x987 896) (x1303 896)))
(assert (= (x1154 960) (x1318 960)))
(assert (= (x194 x641) (ite (= 352 x641) x1222 (x669 x641))))
(assert (x1309 (x1091 160)))
(assert (x1309 (x1221 160)))
(assert (= (x191 352) (x925 352)))
(assert (= (x1414 160) (x975 (x1441 (x1414 160)))))
(assert (x533 x554))
(assert (= x620 (or (and x493 (not x594)) (and (not x1041) x235))))
(assert (x1309 x557))
(assert (= (=> (and (= (< x71 x818) x246) (= (x856 (+ x818 x1070)) x71) (= x1070 (x38 896))) (and (=> (not x246) x803) (=> x246 x52))) x793))
(assert (= (x206 224) (x1083 224)))
(assert (x533 x399))
(assert (x533 x437))
(assert (x1309 (x882 128)))
(assert (= (and x108 x1014) x1308))
(assert (=> (< (- (x882 160) 1) 10000) (= (x1478 (x882 160)) (x1441 (x882 160)))))
(assert (= x679 (=> (and (= x701 (x756 (x1478 44))) (= (= x687 x701) x1420) (= x865 (or x976 x1420)) (= (x1147 (- x1301 x911)) x874) (= (uninterp_mod (* x874 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x926) (= (= 0 (ite x865 1 0)) x1248) (= x976 (= 0 x874)) (= (- (/ x926 x874) (uninterp_frac x926 x874)) x687)) (and (=> (not x1248) x168) (=> x1248 x52)))))
(assert (= x1052 (x936 224)))
(assert (= (x975 (x1441 (x1442 128))) (x1442 128)))
(assert (= (ite (and x1333 (not x377)) (x149 x1148) (x50 x1148)) (x509 x1148)))
(assert (= (x1478 2209625481) (x1441 2209625481)))
(assert (= (x433 640) (x165 640)))
(assert (= (x1059 288) (x516 288)))
(assert (x533 x382))
(assert (x533 x1378))
(assert (= x1012 (and x1116 (not x982))))
(assert (x533 x462))
(assert (= (ite (and x235 (not x1041)) (x941 (x1478 10)) (x460 (x1478 10))) (x756 (x1478 10))))
(assert (x533 x396))
(assert (= (x11 320) (ite (and x1190 (not x631) x414) (x273 320) (x172 320))))
(assert (= (and x1000 x1126) x546))
(assert (= (ite (= 1152 x641) x912 (x1318 x641)) (x1154 x641)))
(assert (=> (> (+ 10000 1) (x762 128)) (= (x1441 (x762 128)) (x1478 (x762 128)))))
(assert (= x1020 (=> (and (= x1256 (= x934 x804)) (= x934 (x754 256)) (= (x754 x57) x804) (= x366 (x754 192)) (= x57 (x856 (+ 352 x1092))) (= (uninterp_mod (* x366 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1092)) (and x1256 x330))))
(assert (= x1088 (=> (and (= x311 (< 0 x1460)) (= x1460 (x23 704))) (and (=> x311 x1488) (=> (not x311) x684)))))
(assert (= x1064 (=> (and (= x1247 (x856 (+ x818 x1111))) (= x610 (> x818 x1247))) (and (=> x610 x52) (=> (and (not x610) (or (and (not x1103) (= x1377 x1400)) (and x1103 (= x1400 1) (> 4294967296 x860))) (= x1103 (< 0 x1377)) (= x781 (x856 (+ x1282 x932)))) x344)))))
(assert (x533 x717))
(assert (= (or (and x323 x1054) (and (not x111) x1208) (and x1264 x94)) x602))
(assert (x1309 (x1078 160)))
(assert (= x971 (and x269 (not x609))))
(assert (= (ite (= x425 x100) x434 (x638 x100)) (x149 x100)))
(assert (x533 x972))
(assert (x533 x1146))
(assert (= (or (and x1404 (not x1289)) (and x657 (not x538))) x469))
(assert (= (x975 (x1478 2757214935)) 2757214935))
(assert (=> (> (+ 10000 1) (x1094 160)) (= (x1478 (x1094 160)) (x1441 (x1094 160)))))
(assert (=> (< (- (x388 160) 1) 10000) (= (x1441 (x388 160)) (x1478 (x388 160)))))
(assert (= (and (not x1274) x138) x334))
(assert (= (ite (= x328 1152) x912 (x1318 x328)) (x1154 x328)))
(assert (= (x605 x319) (ite (= x491 x319) x1040 (x1209 x319))))
(assert (= (x672 x1241) (ite (and (not x788) x558) (x509 x1241) (x1114 x1241))))
(assert (x533 x349))
(assert (= (x1286 896) (x38 896)))
(assert (= (ite (and (not x1057) (not x1183) x334) (x871 x57) (x1386 x57)) (x23 x57)))
(assert (x533 x1353))
(assert (= (ite (= x491 x639) x1040 (x1209 x639)) (x605 x639)))
(assert (= (x582 x910) (ite (and x1004 (not x1421)) (x605 x910) (x839 x910))))
(assert (x533 x779))
(assert (x533 x1035))
(assert (= (x1101 704) (x754 704)))
(assert (= (x161 x641) (ite (= 320 x641) x746 (x929 x641))))
(assert (= x442 (=> (and (= x203 (= 2 x97)) (= x943 (x1101 192)) (= x97 (x856 (+ x943 1)))) (and (=> x203 x1223) (=> (not x203) x1020)))))
(assert (= (x975 (x1478 773487949)) 773487949))
(assert (= (x1082 x328) (ite (= x328 256) 274184521717934524641157099916833587200 (x1440 x328))))
(assert (= (ite (= 832 x57) x1431 (x1185 x57)) (x172 x57)))
(assert (x1309 (x962 160)))
(assert (= x473 (=> (and (= (x207 x1202) x955) (or (and (= 1 x380) x1213) (and (= x739 x380) (not x1213) (= (x207 (x1478 37)) x739))) (= x1291 (x207 x1241)) (= x974 (x207 x917)) (= x248 (x1375 896)) (= (x378 x743 5) x782) (= x910 (x378 x1226 8)) (= x1189 (x570 (x1441 (x1260 128)) (x1441 (x1260 160)) 0)) (= (x207 x1312) x1055) (= (x1364 832) x257) (= x1241 (x378 x1109 2)) (= x835 (x570 (x1441 (x761 128)) (x1441 (x761 160)) 0)) (= (x378 x55 2) x917) (= (x570 (x1441 (x1078 128)) (x1441 (x1078 160)) 0) x1226) (= (x570 (x1441 (x762 128)) (x1441 (x762 160)) 0) x743) (= x55 (x570 (x1441 (x1133 128)) (x1441 (x1133 160)) 0)) (= x1213 (= x974 0)) (= x1312 (x378 x1189 7)) (= x1109 (x570 (x1441 (x306 128)) (x1441 (x306 160)) 0)) (= x659 (x207 x910)) (= x1202 (x378 x835 6))) x1314)))
(assert (= (x975 (x1478 2572356358)) 2572356358))
(assert (= x1004 (and x1187 (not x130))))
(assert (=> (> (+ 10000 1) (x761 160)) (= (x1441 (x761 160)) (x1478 (x761 160)))))
(assert (=> (> (+ 10000 1) (x1414 160)) (= (x1441 (x1414 160)) (x1478 (x1414 160)))))
(assert (= (ite (= x328 352) x1222 (x669 x328)) (x194 x328)))
(assert (= (x196 384) (x1406 384)))
(assert (= x1433 (or x800 (and x203 x185))))
(assert (= (x29 800) (x14 800)))
(assert (= x771 (and x589 (not x1252))))
(assert (= (ite (= x328 288) x1431 (x626 x328)) (x199 x328)))
(assert (= (x73 704) (x201 704)))
(assert (x533 x474))
(assert (= (x736 896) (x796 896)))
(assert (= (x861 160) (x975 (x1441 (x861 160)))))
(assert (= (x103 704) (x30 704)))
(assert (= x958 (and (not x174) x766)))
(assert (= (x745 832) (x936 832)))
(assert (= 4267106866 (x975 (x1478 4267106866))))
(assert (x533 x550))
(assert (= (x929 352) (x161 352)))
(assert (x533 x714))
(assert (x533 x312))
(assert (= (x1441 1196925270) (x1478 1196925270)))
(assert (= (x1478 31556952) (x1441 31556952)))
(assert (= (x869 800) (x959 800)))
(assert (= (and x786 x751) x766))
(assert (= x887 (and (not x1448) x1005)))
(assert (= x114 (and x1041 x235)))
(assert (x533 x746))
(assert (= (x756 (x1478 41)) (ite (and x235 (not x1041)) (x941 (x1478 41)) (x460 (x1478 41)))))
(assert (= (x975 (x378 x913 7)) (+ 7 (x975 x913))))
(assert (= x1337 (and x451 (not x627))))
(assert (x533 x1283))
(assert (x533 x333))
(assert (= (x1478 2681579215) (x1441 2681579215)))
(assert (= (ite (= x437 288) x1431 (x626 x437)) (x199 x437)))
(assert (= (x1441 4294967296) (x1478 4294967296)))
(assert (x533 x701))
(assert (= (x201 352) (x73 352)))
(assert (= (x975 (x1478 1889567281)) 1889567281))
(assert (= (or (and x558 (not x788)) (and x771 (not x758))) x40))
(assert (= x685 (=> (and (= x1279 (x1112 320)) (= (> x1279 0) x1196)) (and (=> (not x1196) x1023) (=> x1196 x583)))))
(assert (x533 x339))
(assert (= (- (/ x361 (x1425 2 x807)) (uninterp_frac x361 (x1425 2 x807))) (x83 x361 x807)))
(assert (= (x1478 1889567281) (x1441 1889567281)))
(assert (x533 x158))
(assert (= (x1441 961581905) (x1478 961581905)))
(assert (= (x1143 x57) (ite (= x57 128) 16 (x1089 x57))))
(assert (= (x1441 60465744) (x1478 60465744)))
(assert (=> (> (+ 10000 1) (x1217 160)) (= (x1441 (x1217 160)) (x1478 (x1217 160)))))
(assert (= x1333 (or (and x776 (not x805)) (and x607 x98) (and x1388 (not x400)) (and x1423 (not x859)))))
(assert (x533 x407))
(assert (x533 x1072))
(assert (x533 x1411))
(assert (= (+ (x975 x384) 4) (x975 (x378 x384 4))))
(assert (= (=> (and (= (< x967 x1085) x167) (= x1085 (x477 640))) (and (=> (not x167) x738) (=> x167 x52))) x999))
(assert (= (ite (and x414 x1190 (not x631)) (x273 x641) (x172 x641)) (x11 x641)))
(assert (x533 x492))
(assert (= (and x569 (not x1200)) x327))
(assert (= (=> (= x408 (x107 704)) x1331) x684))
(assert (= (x1441 1461501637330902918203684832716283019655932542975) (x1478 1461501637330902918203684832716283019655932542975)))
(assert (= (=> (and (= x914 (x1246 992)) (= (> x914 x241) x982) (= x241 (x856 (+ x818 x914)))) (and (=> (not x982) x343) (=> x982 x52))) x406))
(assert (= (=> (and (= (x286 416) x1019) (= x174 (< x1019 x479)) (= x479 (x286 448))) (and (=> x174 x52) (=> (not x174) x51))) x1212))
(assert (= (x191 384) (x925 384)))
(assert (= (+ 5 (x975 x743)) (x975 (x378 x743 5))))
(assert (x533 x159))
(assert (x533 x1018))
(assert (= (and (not x1437) x947) x1206))
(assert (= (x957 x57) (ite (= x57 832) x1431 (x1179 x57))))
(assert (x1309 (x152 128)))
(assert (= (x810 128) (x975 (x1441 (x810 128)))))
(assert (= (+ (x975 x1017) 2) (x975 (x378 x1017 2))))
(assert (x533 x132))
(assert (= (x796 640) x717))
(assert (=> (> (+ 10000 1) x668) (= (x1478 x668) (x1441 x668))))
(assert (= (x672 (x1478 37)) (ite (and x558 (not x788)) (x509 (x1478 37)) (x1114 (x1478 37)))))
(assert (x1309 (x1370 128)))
(assert (= (=> (and (= x379 (> x318 x338)) (= (x570 (x1441 (x1298 128)) (x1441 (x1298 160)) 0) x280) (= (x388 256) x6) (= x928 (x1147 (- x937 x598))) (= (x1298 288) x757) (= x338 (x856 (+ x318 x757))) (= (x465 x280) x318)) (and (=> x379 x52) (=> (and (= (x1298 288) x824) (= (x856 (+ x757 x318)) x1348) (not x379)) x1490))) x1219))
(assert (x533 x820))
(assert (= (=> (and (= x1017 (x570 (x1441 (x929 128)) (x1441 (x929 160)) 0)) (= (x378 x1017 2) x649) (= (x88 224) x1332) (= x746 (ite (> x1428 x1349) x1349 x1428)) (= x1349 (x941 x649)) (= (x161 320) x1379) (= (- (/ x159 x595) (uninterp_frac x159 x595)) x1428) (= x323 (= 0 x1379))) (and (=> (not x323) x1438) (=> x323 x506))) x673))
(assert (x1309 (x150 160)))
(assert (x533 x816))
(assert (= (ite (and x1004 (not x1421)) (x605 x390) (x839 x390)) (x582 x390)))
(assert (= x365 (=> (and (= (x941 (x1478 40)) x456) (= x888 (> x783 x101)) (= x783 (x1160 224)) (= (x856 (+ x456 x783)) x101)) (and (=> (not x888) x1060) (=> x888 x52)))))
(assert (x533 x846))
(assert (= (=> (and (= x169 (= x369 0)) (= (x315 416) x369)) (and (=> (not x169) x1486) (=> x169 x52))) x1473))
(assert (x533 x1328))
(assert (= (=> (and (= x309 (= x109 0)) (= x434 (x856 (+ x991 x1282))) (= (x149 (x1478 37)) x109)) (and (=> (and x309 (or (and x495 (< x568 4294967296) (= x663 1)) (and (not x495) (= x324 x663))) (= x495 (< 0 x324))) x693) (=> (not x309) x409))) x1199))
(assert (= x53 (and (not x631) x1190)))
(assert (= (ite (and x1004 (not x1421)) (x605 x765) (x839 x765)) (x582 x765)))
(assert (= (ite (= (x1478 40) x491) x1040 (x1209 (x1478 40))) (x605 (x1478 40))))
(assert (= (x626 320) (x199 320)))
(assert (= x1427 (=> (and (= x938 (< x1176 x1278)) (= (- (/ x1415 1000000000000000000) (uninterp_frac x1415 1000000000000000000)) x1278)) (and (=> x938 x52) (=> (and (= (x1147 (- x1176 x1278)) x547) (not x938)) x406)))))
(assert (x533 x823))
(assert (= (x516 224) (x1059 224)))
(assert (x1309 (x861 160)))
(assert (= (x1182 256) (x317 256)))
(assert (x533 x361))
(assert (= (x1217 320) (x1096 320)))
(assert (= (x433 x437) (ite (= x437 736) x671 (x165 x437))))
(assert (x533 x110))
(assert (=> (> (+ 10000 1) (x304 128)) (= (x1478 (x304 128)) (x1441 (x304 128)))))
(assert (= x348 (=> (and (= x697 (uninterp_mod (* x696 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x616 (= x696 x676)) (= x696 (x433 736)) (= (- (/ x697 x1018) (uninterp_frac x697 x1018)) x676) (= (= 0 x1018) x487) (= x1018 (x433 640)) (= x393 (or x616 x487)) (= x1200 (= (ite x393 1 0) 0))) (and (=> (not x1200) x1271) (=> x1200 x52)))))
(assert (= (or (and (not x394) x585) (and (not x353) x1119)) x113))
(assert (= (x189 x57) (ite (= 576 x57) x1081 (x480 x57))))
(assert (x533 x320))
(assert (x533 x536))
(assert (= (x1083 224) (x1 224)))
(assert (= (ite (= 736 x328) x671 (x165 x328)) (x433 x328)))
(assert (= (x987 352) (x1303 352)))
(assert (= (ite (and (not x1421) x1004) (x605 x639) (x839 x639)) (x582 x639)))
(assert (= (x1441 3065339685) (x1478 3065339685)))
(assert (x533 x732))
(assert (x533 x1334))
(assert (= (x103 640) (x30 640)))
(assert (= (x1094 160) (x975 (x1441 (x1094 160)))))
(assert (x533 x1389))
(assert (x533 x660))
(assert (= (x191 480) (x925 480)))
(assert (x533 x391))
(assert (= (=> (= x786 (= x1453 0)) (and (=> (not x786) x409) (=> x786 x1212))) x898))
(assert (x1309 x385))
(assert (x1309 (x695 128)))
(assert (= (x1179 320) (x957 320)))
(assert (x533 x439))
(assert (= (x30 448) x1276))
(assert (= (ite (= x4 x491) x1040 (x1209 x4)) (x605 x4)))
(assert (= (x1286 320) (x38 320)))
(assert (= (=> (and (= (> x670 0) x1242) (= x670 (x41 352))) (and (=> x1242 x1285) (=> (not x1242) x821))) x188))
(assert (= (ite (= x437 128) 16 (x1089 x437)) (x1143 x437)))
(assert (= (=> (and (= x1035 (x1246 800)) (= (< x966 x1035) x485) (= x966 (x856 (+ x914 x1282)))) (and (=> x485 x52) (=> (not x485) x139))) x343))
(assert (x533 x527))
(assert (= 1196925270 (x975 (x1478 1196925270))))
(assert (= (x626 352) (x199 352)))
(assert (= (ite (and (not x1041) x235) (x941 x1202) (x460 x1202)) (x756 x1202)))
(assert (= (=> (and (= (x1073 352) x1164) (= x518 (= x1178 x292)) (= x725 (x856 (+ x956 x283))) (= x678 (x149 (x1478 39))) (= (or x518 x271) x272) (= (= x678 0) x271) (= x36 (uninterp_mod (* x292 x678) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x482 (= 0 (ite x272 1 0))) (= x292 (x851 320)) (= x1178 (- (/ x36 x678) (uninterp_frac x36 x678)))) (and (=> x482 x52) (=> (not x482) x767))) x1046))
(assert (= (x582 x1148) (ite (and (not x1421) x1004) (x605 x1148) (x839 x1148))))
(assert (x533 x1081))
(assert (= (x1059 256) (x516 256)))
(assert (x533 x571))
(assert (= (ite (= x437 448) x1276 (x103 x437)) (x30 x437)))
(assert (= x1395 (and (not x733) x1305)))
(assert (x533 x593))
(assert (= (x975 (x1441 (x1026 128))) (x1026 128)))
(assert (= 31576340 (x975 (x1478 31576340))))
(assert (= (x1083 x437) (ite (= x437 192) 0 (x1 x437))))
(assert (= (ite (= x437 192) x97 (x1101 x437)) (x754 x437)))
(assert (= (x582 (x1478 45)) (ite (and (not x1421) x1004) (x605 (x1478 45)) (x839 (x1478 45)))))
(assert (= (x836 320) (x1026 320)))
(assert (x533 x489))
(assert (= (ite (= x328 224) x926 (x201 x328)) (x73 x328)))
(assert (= (x875 832) (ite (and (not x377) x1333) (x959 832) (x721 832))))
(assert (= (x975 (x1441 (x761 128))) (x761 128)))
(assert (= (x929 288) (x161 288)))
(assert (x533 x310))
(assert (x533 x213))
(assert (x1309 (x1133 128)))
(assert (x533 x243))
(assert (= (x756 (x1478 43)) (ite (and (not x1041) x235) (x941 (x1478 43)) (x460 (x1478 43)))))
(assert (x533 x934))
(assert (= (x1478 16192718) (x1441 16192718)))
(assert (x533 x866))
(assert (= (x22 x641) (ite (= x641 864) x1080 (x904 x641))))
(assert (=> (< (- (x1078 160) 1) 10000) (= (x1441 (x1078 160)) (x1478 (x1078 160)))))
(assert (= (and x68 (not x838)) x657))
(assert (= 596573372 (x975 (x1478 596573372))))
(assert (= (ite (= x641 224) x926 (x201 x641)) (x73 x641)))
(assert (= (x1441 3877814014) (x1478 3877814014)))
(assert (= (or (and (not x337) x794) (and (not x413) x171)) x254))
(assert (= (x194 384) (x669 384)))
(assert (=> (< (- (x962 128) 1) 10000) (= (x1441 (x962 128)) (x1478 (x962 128)))))
(assert (= x261 (=> (and (= x1345 (= 0 x1263)) (= (x1147 (- x1301 x1032)) x1081) (= (x189 576) x1263)) (and (=> x1345 x52) (=> (not x1345) x75)))))
(assert (x533 x140))
(assert (x533 x663))
(assert (x533 x27))
(assert (= (x1478 1854955031) (x1441 1854955031)))
(assert (x1309 (x1143 160)))
(assert (x533 x989))
(assert (x1309 (x1151 160)))
(assert (x533 x932))
(assert (= 31556952 (x975 (x1478 31556952))))
(assert (= (x73 384) (x201 384)))
(assert (=> (< (- (x9 160) 1) 10000) (= (x1478 (x9 160)) (x1441 (x9 160)))))
(assert (x1309 (x996 160)))
(assert (x533 x153))
(assert (= x1190 (and x1069 x193)))
(assert (= (x975 (x1441 (x996 128))) (x996 128)))
(assert (= (x1089 384) (x1143 384)))
(assert (x1309 (x1298 128)))
(assert (= (x810 800) (x286 800)))
(assert (= (ite (and x1004 (not x1421)) (x605 x363) (x839 x363)) (x582 x363)))
(assert (x533 x1379))
(assert (= (or (and x1190 x631) (and (not x220) x906) (and x1233 x877)) x895))
(assert (x533 x438))
(assert (= (x22 352) (x904 352)))
(assert (= (ite (= x425 x1148) x434 (x638 x1148)) (x149 x1148)))
(assert (x533 x449))
(assert (= (x1101 320) (x754 320)))
(assert (= (x483 352) (x1101 352)))
(assert (= (=> (and (= x1269 (uninterp_mod (* 8 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x41 384) x449) (= (x1147 (- 32 x1304)) x104) (= (x41 352) x1304) (= x432 (> (x83 x449 x1269) 0))) (and (=> (not x432) x52) (=> x432 x821))) x1285))
(assert (= (x924 224) (x768 224)))
(assert (= (x975 (x1478 347398766)) 347398766))
(assert (= (x1 320) (x1083 320)))
(assert (= (=> (and (= x244 (x856 (+ x1282 x1070))) (= (x1286 832) x464) (= (x1286 928) x752) (= (< x752 x464) x772)) (and (=> x772 x163) (=> (not x772) x381))) x803))
(assert (= 3963136098 (x975 (x1478 3963136098))))
(assert (= x693 (=> (= (< 0 x663) x372) (and (=> (not x372) x52) (=> x372 x744)))))
(assert (x533 x338))
(assert (= 3339924076 (x975 (x1478 3339924076))))
(assert (= (x1286 800) (x38 800)))
(assert (x533 x1445))
(assert (= (x1024 384) (x152 384)))
(assert (x533 x301))
(assert (x533 x1351))
(assert (= (+ 6 (x975 x835)) (x975 (x378 x835 6))))
(assert (= (x1104 576) x275))
(assert (= x671 (x433 736)))
(assert (= x1238 (and (not x323) x1054)))
(assert (x533 x697))
(assert (= (x433 x641) (ite (= 736 x641) x671 (x165 x641))))
(assert (x533 x1269))
(assert (= (x304 160) (x975 (x1441 (x304 160)))))
(assert (= (and x1403 x741) x1418))
(assert (=> (> (+ 10000 1) (x1026 128)) (= (x1478 (x1026 128)) (x1441 (x1026 128)))))
(assert (= (x189 576) x1081))
(assert (= (x1478 2780307423) (x1441 2780307423)))
(assert (= (and x186 (not x141)) x596))
(assert (= (x201 640) (x73 640)))
(assert (x1309 (x1370 160)))
(assert (x533 x1075))
(assert (= (x756 x910) (ite (and x235 (not x1041)) (x941 x910) (x460 x910))))
(assert (= (x975 (x1478 1977493762)) 1977493762))
(assert (= (x626 864) (x199 864)))
(assert (x533 x226))
(assert (x533 x1323))
(assert (= (x984 512) (x871 512)))
(assert (= (+ (x975 x1210) 6) (x975 (x378 x1210 6))))
(assert (and (= 1152921504606846976 (x1425 2 60)) (= (x1425 2 143) 11150372599265311570767859136324180752990208) (= (x1425 2 235) 55213970774324510299478046898216203619608871777363092441300193790394368) (= 6739986666787659948666753771754907668409286105635143120275902562304 (x1425 2 222)) (= 27606985387162255149739023449108101809804435888681546220650096895197184 (x1425 2 234)) (= 64 (x1425 2 6)) (= 281474976710656 (x1425 2 48)) (= 766247770432944429179173513575154591809369561091801088 (x1425 2 179)) (= (x1425 2 47) 140737488355328) (= (x1425 2 148) 356811923176489970264571492362373784095686656) (= 4611686018427387904 (x1425 2 62)) (= 1048576 (x1425 2 20)) (= (x1425 2 146) 89202980794122492566142873090593446023921664) (= 1329227995784915872903807060280344576 (x1425 2 120)) (= (x1425 2 40) 1099511627776) (= (x1425 2 159) 730750818665451459101842416358141509827966271488) (= (x1425 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= 2993155353253689176481146537402947624255349848014848 (x1425 2 171)) (= 295147905179352825856 (x1425 2 68)) (= (x1425 2 18) 262144) (= (x1425 2 119) 664613997892457936451903530140172288) (= (x1425 2 117) 166153499473114484112975882535043072) (= (x1425 2 128) 340282366920938463463374607431768211456) (= (x1425 2 15) 32768) (= (x1425 2 37) 137438953472) (= 2923003274661805836407369665432566039311865085952 (x1425 2 161)) (= (x1425 2 251) 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x1425 2 226)) (= (x1425 2 3) 8) (= 170141183460469231731687303715884105728 (x1425 2 127)) (= 9903520314283042199192993792 (x1425 2 93)) (= (x1425 2 113) 10384593717069655257060992658440192) (= 3213876088517980551083924184682325205044405987565585670602752 (x1425 2 201)) (= 41538374868278621028243970633760768 (x1425 2 115)) (= 748288838313422294120286634350736906063837462003712 (x1425 2 169)) (= (x1425 2 17) 131072) (= (x1425 2 51) 2251799813685248) (= (x1425 2 178) 383123885216472214589586756787577295904684780545900544) (= (x1425 2 76) 75557863725914323419136) (= (x1425 2 190) 1569275433846670190958947355801916604025588861116008628224) (= (x1425 2 135) 43556142965880123323311949751266331066368) (= 803469022129495137770981046170581301261101496891396417650688 (x1425 2 199)) (= 34359738368 (x1425 2 35)) (= (x1425 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= 562949953421312 (x1425 2 49)) (= (x1425 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= 52656145834278593348959013841835216159447547700274555627155488768 (x1425 2 215)) (= (x1425 2 50) 1125899906842624) (= 49039857307708443467467104868809893875799651909875269632 (x1425 2 185)) (= (x1425 2 75) 37778931862957161709568) (= (x1425 2 181) 3064991081731777716716694054300618367237478244367204352) (= (x1425 2 164) 23384026197294446691258957323460528314494920687616) (= (x1425 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= 288230376151711744 (x1425 2 58)) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x1425 2 225)) (= (x1425 2 102) 5070602400912917605986812821504) (= 8796093022208 (x1425 2 43)) (= 309485009821345068724781056 (x1425 2 88)) (= (x1425 2 110) 1298074214633706907132624082305024) (= 18446744073709551616 (x1425 2 64)) (= 200867255532373784442745261542645325315275374222849104412672 (x1425 2 197)) (= 17179869184 (x1425 2 34)) (= (x1425 2 137) 174224571863520493293247799005065324265472) (= 39614081257132168796771975168 (x1425 2 95)) (= 100433627766186892221372630771322662657637687111424552206336 (x1425 2 196)) (= (x1425 2 77) 151115727451828646838272) (= (x1425 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= (x1425 2 10) 1024) (= 98079714615416886934934209737619787751599303819750539264 (x1425 2 186)) (= (x1425 2 4) 16) (= 11692013098647223345629478661730264157247460343808 (x1425 2 163)) (= (x1425 2 78) 302231454903657293676544) (= 79228162514264337593543950336 (x1425 2 96)) (= 85070591730234615865843651857942052864 (x1425 2 126)) (= (x1425 2 26) 67108864) (= 3369993333393829974333376885877453834204643052817571560137951281152 (x1425 2 221)) (= 11417981541647679048466287755595961091061972992 (x1425 2 153)) (= 68719476736 (x1425 2 36)) (= (x1425 2 69) 590295810358705651712) (= 1461501637330902918203684832716283019655932542976 (x1425 2 160)) (= 93536104789177786765035829293842113257979682750464 (x1425 2 166)) (= (x1425 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= (x1425 2 5) 32) (= (x1425 2 71) 2361183241434822606848) (= 2722258935367507707706996859454145691648 (x1425 2 131)) (= (x1425 2 53) 9007199254740992) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x1425 2 228)) (= 401734511064747568885490523085290650630550748445698208825344 (x1425 2 198)) (= 147573952589676412928 (x1425 2 67)) (= 332306998946228968225951765070086144 (x1425 2 118)) (= 81129638414606681695789005144064 (x1425 2 106)) (= 348449143727040986586495598010130648530944 (x1425 2 138)) (= 1073741824 (x1425 2 30)) (= 24519928653854221733733552434404946937899825954937634816 (x1425 2 184)) (= 70368744177664 (x1425 2 46)) (= (x1425 2 243) 14134776518227074636666380005943348126619871175004951664972849610340958208) (= (x1425 2 194) 25108406941546723055343157692830665664409421777856138051584) (= (x1425 2 86) 77371252455336267181195264) (= 110427941548649020598956093796432407239217743554726184882600387580788736 (x1425 2 236)) (= (x1425 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= (x1425 2 139) 696898287454081973172991196020261297061888) (= 11972621413014756705924586149611790497021399392059392 (x1425 2 173)) (= (x1425 2 14) 16384) (= (x1425 2 150) 1427247692705959881058285969449495136382746624) (= (x1425 2 217) 210624583337114373395836055367340864637790190801098222508621955072) (= (x1425 2 240) 1766847064778384329583297500742918515827483896875618958121606201292619776) (= (x1425 2 56) 72057594037927936) (= 1 (x1425 2 0)) (= 2097152 (x1425 2 21)) (= (x1425 2 31) 2147483648) (= (x1425 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= (x1425 2 210) 1645504557321206042154969182557350504982735865633579863348609024) (= (x1425 2 25) 33554432) (= 47890485652059026823698344598447161988085597568237568 (x1425 2 175)) (= 22300745198530623141535718272648361505980416 (x1425 2 144)) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x1425 2 252)) (= (x1425 2 183) 12259964326927110866866776217202473468949912977468817408) (= (x1425 2 38) 274877906944) (= (x1425 2 205) 51422017416287688817342786954917203280710495801049370729644032) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x1425 2 244)) (= (x1425 2 174) 23945242826029513411849172299223580994042798784118784) (= 128 (x1425 2 7)) (= 8192 (x1425 2 13)) (= (x1425 2 180) 1532495540865888858358347027150309183618739122183602176) (= (x1425 2 98) 316912650057057350374175801344) (= (x1425 2 124) 21267647932558653966460912964485513216) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x1425 2 231)) (= (x1425 2 242) 7067388259113537318333190002971674063309935587502475832486424805170479104) (= 144115188075855872 (x1425 2 57)) (= (x1425 2 245) 56539106072908298546665520023773392506479484700019806659891398441363832832) (= (x1425 2 195) 50216813883093446110686315385661331328818843555712276103168) (= 576460752303423488 (x1425 2 59)) (= 904625697166532776746648320380374280103671755200316906558262375061821325312 (x1425 2 249)) (= (x1425 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= (x1425 2 80) 1208925819614629174706176) (= 36893488147419103232 (x1425 2 65)) (= 2 (x1425 2 1)) (= (x1425 2 72) 4722366482869645213696) (= (x1425 2 122) 5316911983139663491615228241121378304) (= 10889035741470030830827987437816582766592 (x1425 2 133)) (= (x1425 2 89) 618970019642690137449562112) (= 9223372036854775808 (x1425 2 63)) (= (x1425 2 162) 5846006549323611672814739330865132078623730171904) (= (x1425 2 136) 87112285931760246646623899502532662132736) (= (x1425 2 29) 536870912) (= (x1425 2 246) 113078212145816597093331040047546785012958969400039613319782796882727665664) (= (x1425 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= (x1425 2 91) 2475880078570760549798248448) (= 2048 (x1425 2 11)) (= 19807040628566084398385987584 (x1425 2 94)) (= (x1425 2 167) 187072209578355573530071658587684226515959365500928) (= (x1425 2 123) 10633823966279326983230456482242756608) (= (x1425 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= 46768052394588893382517914646921056628989841375232 (x1425 2 165)) (= (x1425 2 101) 2535301200456458802993406410752) (= 10141204801825835211973625643008 (x1425 2 103)) (= 842498333348457493583344221469363458551160763204392890034487820288 (x1425 2 219)) (= (x1425 2 32) 4294967296) (= (x1425 2 109) 649037107316853453566312041152512) (= 680564733841876926926749214863536422912 (x1425 2 129)) (= (x1425 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x1425 2 154) 22835963083295358096932575511191922182123945984) (= (x1425 2 81) 2417851639229258349412352) (= 2596148429267413814265248164610048 (x1425 2 111)) (= 40564819207303340847894502572032 (x1425 2 105)) (= (x1425 2 188) 392318858461667547739736838950479151006397215279002157056) (= 158456325028528675187087900672 (x1425 2 97)) (= 45671926166590716193865151022383844364247891968 (x1425 2 155)) (= 2199023255552 (x1425 2 41)) (= 154742504910672534362390528 (x1425 2 87)) (= 2787593149816327892691964784081045188247552 (x1425 2 141)) (= (x1425 2 147) 178405961588244985132285746181186892047843328) (= (x1425 2 223) 13479973333575319897333507543509815336818572211270286240551805124608) (= (x1425 2 52) 4503599627370496) (= 6277101735386680763835789423207666416102355444464034512896 (x1425 2 192)) (= 12855504354071922204335696738729300820177623950262342682411008 (x1425 2 203)) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x1425 2 232)) (= 784637716923335095479473677900958302012794430558004314112 (x1425 2 189)) (= (x1425 2 85) 38685626227668133590597632) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x1425 2 247)) (= (x1425 2 156) 91343852333181432387730302044767688728495783936) (= (x1425 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= 65536 (x1425 2 16)) (= (x1425 2 66) 73786976294838206464) (= 26328072917139296674479506920917608079723773850137277813577744384 (x1425 2 214)) (= 1684996666696914987166688442938726917102321526408785780068975640576 (x1425 2 220)) (= 83076749736557242056487941267521536 (x1425 2 116)) (= 1606938044258990275541962092341162602522202993782792835301376 (x1425 2 200)) (= (x1425 2 149) 713623846352979940529142984724747568191373312) (= (x1425 2 99) 633825300114114700748351602688) (= (x1425 2 27) 134217728) (= 8388608 (x1425 2 23)) (= 13164036458569648337239753460458804039861886925068638906788872192 (x1425 2 213)) (= (x1425 2 73) 9444732965739290427392) (= (x1425 2 2) 4) (= (x1425 2 152) 5708990770823839524233143877797980545530986496) (= (x1425 2 151) 2854495385411919762116571938898990272765493248) (= 256 (x1425 2 8)) (= (x1425 2 42) 4398046511104) (= (x1425 2 100) 1267650600228229401496703205376) (= 105312291668557186697918027683670432318895095400549111254310977536 (x1425 2 216)) (= 822752278660603021077484591278675252491367932816789931674304512 (x1425 2 209)) (= (x1425 2 39) 549755813888) (= (x1425 2 233) 13803492693581127574869511724554050904902217944340773110325048447598592) (= 604462909807314587353088 (x1425 2 79)) (= 215679573337205118357336120696157045389097155380324579848828881993728 (x1425 2 227)) (= 21778071482940061661655974875633165533184 (x1425 2 134)) (= 16777216 (x1425 2 24)) (= 2658455991569831745807614120560689152 (x1425 2 121)) (= 44601490397061246283071436545296723011960832 (x1425 2 145)) (= 182687704666362864775460604089535377456991567872 (x1425 2 157)) (= 196159429230833773869868419475239575503198607639501078528 (x1425 2 187)) (= (x1425 2 177) 191561942608236107294793378393788647952342390272950272) (= (x1425 2 140) 1393796574908163946345982392040522594123776) (= 1496577676626844588240573268701473812127674924007424 (x1425 2 170)) (= 19342813113834066795298816 (x1425 2 84)) (= (x1425 2 176) 95780971304118053647396689196894323976171195136475136) (= 5444517870735015415413993718908291383296 (x1425 2 132)) (= 20769187434139310514121985316880384 (x1425 2 114)) (= (x1425 2 193) 12554203470773361527671578846415332832204710888928069025792) (= 411376139330301510538742295639337626245683966408394965837152256 (x1425 2 208)) (= 5986310706507378352962293074805895248510699696029696 (x1425 2 172)) (= 2305843009213693952 (x1425 2 61)) (= 102844034832575377634685573909834406561420991602098741459288064 (x1425 2 206)) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x1425 2 237)) (= 17592186044416 (x1425 2 44)) (= 36028797018963968 (x1425 2 55)) (= 6129982163463555433433388108601236734474956488734408704 (x1425 2 182)) (= (x1425 2 83) 9671406556917033397649408) (= 365375409332725729550921208179070754913983135744 (x1425 2 158)) (= 3138550867693340381917894711603833208051177722232017256448 (x1425 2 191)) (= 1180591620717411303424 (x1425 2 70)) (= (x1425 2 82) 4835703278458516698824704) (= (x1425 2 45) 35184372088832) (= (x1425 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1425 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= (x1425 2 92) 4951760157141521099596496896) (= 1237940039285380274899124224 (x1425 2 90)) (= 18889465931478580854784 (x1425 2 74)) (= 8589934592 (x1425 2 33)) (= 4194304 (x1425 2 22)) (= (x1425 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= 18014398509481984 (x1425 2 54)) (= (x1425 2 28) 268435456) (= (x1425 2 168) 374144419156711147060143317175368453031918731001856) (= 4096 (x1425 2 12)) (= 5192296858534827628530496329220096 (x1425 2 112)) (= (x1425 2 107) 162259276829213363391578010288128) (= (x1425 2 125) 42535295865117307932921825928971026432) (= 5575186299632655785383929568162090376495104 (x1425 2 142)) (= 205688069665150755269371147819668813122841983204197482918576128 (x1425 2 207)) (= (x1425 2 19) 524288) (= (x1425 2 9) 512) (= 20282409603651670423947251286016 (x1425 2 104)) (= 1361129467683753853853498429727072845824 (x1425 2 130)) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1425 2 255)) (= (x1425 2 108) 324518553658426726783156020576256)))
(assert (= x896 (=> (= x367 (< 0 x1022)) (and (=> x367 x601) (=> (not x367) x52)))))
(assert (= (x582 x100) (ite (and x1004 (not x1421)) (x605 x100) (x839 x100))))
(assert (x533 x789))
(assert (= (ite (and x235 (not x1041)) (x941 x319) (x460 x319)) (x756 x319)))
(assert (= (and x1227 (not x1419)) x1403))
(assert (= (x161 224) (x929 224)))
(assert (= 2087341860 (x975 (x1478 2087341860))))
(assert (= (x165 704) (x433 704)))
(assert (= (x29 352) (x14 352)))
(assert (x533 x1354))
(assert (= (and x327 (not x540)) x1204))
(assert (x533 x151))
(assert (x533 x423))
(assert (x533 x955))
(assert (= (x810 448) (x286 448)))
(assert (= (x1441 1888058147) (x1478 1888058147)))
(assert (=> (< (- (x1414 128) 1) 10000) (= (x1441 (x1414 128)) (x1478 (x1414 128)))))
(assert (= (x308 x57) (ite (= 256 x57) 274184521717934524641157099916833587200 (x389 x57))))
(assert (= (x196 288) (x1406 288)))
(assert (= (x975 (x378 x579 6)) (+ (x975 x579) 6)))
(assert (x533 x1302))
(assert (= x1356 (=> (and (= x897 (x560 224)) (= x1325 (x856 (+ x284 x897))) (= x466 (> x897 x1325)) (= (x756 (x1478 40)) x284)) (and (=> x466 x52) (=> (not x466) x1237)))))
(assert (x533 x1374))
(assert (= (x1154 384) (x1318 384)))
(assert (=> (> (+ 10000 1) (x1143 128)) (= (x1478 (x1143 128)) (x1441 (x1143 128)))))
(assert (=> (> (+ 10000 1) (x669 128)) (= (x1441 (x669 128)) (x1478 (x669 128)))))
(assert (= x392 (and (not x169) x113)))
(assert (=> (> (+ 10000 1) (x1260 128)) (= (x1478 (x1260 128)) (x1441 (x1260 128)))))
(assert (=> (< (- x833 1) 10000) (= (x1441 x833) (x1478 x833))))
(assert (x533 x1307))
(assert (=> (> (+ 10000 1) (x144 160)) (= (x1478 (x144 160)) (x1441 (x144 160)))))
(assert (x533 x1032))
(assert (= (x975 (x1441 x833)) x833))
(assert (= (x165 384) (x433 384)))
(assert (= (x975 (x1441 (x1298 160))) (x1298 160)))
(assert (= x168 (=> (and (= x1445 (x73 224)) (= (> 1000000000000000000 x1445) x1289)) (and (=> (not x1289) x1079) (=> x1289 x1249)))))
(assert (x533 x1222))
(assert (= (x582 x1312) (ite (and (not x1421) x1004) (x605 x1312) (x839 x1312))))
(assert (= (=> (= (< 0 x213) x1126) (and (=> (not x1126) x52) (=> x1126 x21))) x575))
(assert (x533 x1225))
(assert (x1309 (x429 160)))
(assert (x533 x1048))
(assert (x533 x833))
(assert (x533 x245))
(assert (= (x996 160) (x975 (x1441 (x996 160)))))
(assert (=> (> (+ 10000 1) (x144 128)) (= (x1478 (x144 128)) (x1441 (x144 128)))))
(assert (= (x1143 352) (x1089 352)))
(assert (= (x29 384) (x14 384)))
(assert (= (ite (= x1241 x491) x1040 (x1209 x1241)) (x605 x1241)))
(assert (x533 x1178))
(assert (x533 x1439))
(assert (= (and x47 (not x916)) x322))
(assert (x533 x891))
(assert (= (x975 (x1478 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (x533 x1391))
(assert (x533 x1443))
(assert (= (ite (and x235 (not x1041)) (x941 x1241) (x460 x1241)) (x756 x1241)))
(assert (= (x1370 128) (x975 (x1441 (x1370 128)))))
(assert (= x535 (=> (and (= x1075 (x1277 320)) (= x885 (> x1075 0))) (and (=> (not x885) x606) (=> x885 x52)))))
(assert (= (x756 x590) (ite (and (not x1041) x235) (x941 x590) (x460 x590))))
(assert (= (x591 544) x89))
(assert (x533 x615))
(assert (= (x669 320) (x194 320)))
(assert (= (x1091 352) (x106 352)))
(assert (x533 x385))
(assert (= x921 (and x992 x258)))
(assert (=> (< (- (x1133 128) 1) 10000) (= (x1478 (x1133 128)) (x1441 (x1133 128)))))
(assert (=> (> (+ 10000 1) (x152 160)) (= (x1478 (x152 160)) (x1441 (x152 160)))))
(assert (= (x582 x319) (ite (and x1004 (not x1421)) (x605 x319) (x839 x319))))
(assert (= (x712 800) (ite (and (not x610) x895 x1103) (x552 800) (x957 800))))
(assert (= 1851080549 (x975 (x1478 1851080549))))
(assert (= (ite (and (not x1421) x1004) (x605 x425) (x839 x425)) (x582 x425)))
(assert (= (ite (and x1004 (not x1421)) (x605 x1241) (x839 x1241)) (x582 x1241)))
(assert (= x775 (x88 288)))
(assert (= (x22 x328) (ite (= 864 x328) x1080 (x904 x328))))
(assert (= x963 (=> (and (= (x941 (x1478 39)) x132) (= x94 (= x132 0))) (and (=> x94 x506) (=> (not x94) x1025)))))
(assert (= (x875 320) (ite (and (not x377) x1333) (x959 320) (x721 320))))
(assert (x533 x829))
(assert (= (x975 (x1441 (x1217 128))) (x1217 128)))
(assert (x533 x345))
(assert (= (ite (and x235 (not x1041)) (x941 x917) (x460 x917)) (x756 x917)))
(assert (x533 x1348))
(assert (= x1163 (and x70 x59)))
(assert (= (=> (and (= (> x1416 0) x1254) (= (x189 544) x1416)) (and (=> (not x1254) x1331) (=> (and (= (x189 512) x1066) (= (x378 x1137 6) x1346) (= x1137 (x570 (x1441 (x1091 128)) (x1441 (x1091 160)) 0)) (= x262 (> x617 0)) x1254 (or (and (not x262) (= x617 x592)) (and (= 1 x592) x262 (< x554 4294967296))) (= (x756 x1346) x967)) x1430))) x75))
(assert (= (x480 384) (x189 384)))
(assert (= 274184521717934524641157099916833587200 (x975 (x1478 274184521717934524641157099916833587200))))
(assert (= (x1182 224) (x317 224)))
(assert (x533 x195))
(assert (= (ite (and (not x1041) x235) (x941 x1484) (x460 x1484)) (x756 x1484)))
(assert (= x751 (and x1297 (not x128))))
(assert (= x356 (and (not x94) x1264)))
(assert (= (x483 704) (x1101 704)))
(assert (x533 x945))
(assert (= x919 (=> (and (= x1057 (> x276 x331)) (= (x984 608) x1127) (= (x856 (+ x276 x1127)) x331) (= (x856 (+ x423 x398)) x276)) (and (=> (and (or (and (= x814 (x871 544)) x1183) (not x1183)) (= (< x1102 x665) x1183) (= (x871 544) x1102) (not x1057) (= x1039 (x856 (+ x276 x1127))) (= (x871 704) x665)) x1088) (=> x1057 x52)))))
(assert (x533 x1071))
(assert (= (x761 160) (x975 (x1441 (x761 160)))))
(assert (x533 x1047))
(assert (= x774 (and x1031 x116)))
(assert (x533 x843))
(assert (x1309 (x628 160)))
(assert (= (x317 832) (x1182 832)))
(assert (= (x975 (x1441 (x1370 160))) (x1370 160)))
(assert (x533 x592))
(assert (= (+ 6 (x975 x314)) (x975 (x378 x314 6))))
(assert (x533 x710))
(assert (x533 x814))
(assert (= (x199 288) x1431))
(assert (= (x836 800) (x1026 800)))
(assert (= 1000000000000000000 (x975 (x1478 1000000000000000000))))
(assert (= (x516 320) (x1059 320)))
(assert (= (x1478 3339924076) (x1441 3339924076)))
(assert (= (x149 x910) (ite (= x910 x425) x434 (x638 x910))))
(assert (= x269 (and x274 (not x885))))
(assert (= (x810 384) (x286 384)))
(assert (= (=> (and (= x325 (= x418 0)) (= (x1469 256) x827) (= x718 (uninterp_mod (* x827 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x850 (x756 (x1478 43))) (= x459 (- (/ x718 x418) (uninterp_frac x718 x418))) (= (= (ite x1401 1 0) 0) x838) (= (= x459 x827) x146) (= (x1469 224) x418) (= (or x325 x146) x1401) (= x110 (x1469 256))) (and (=> x838 x52) (=> (not x838) x298))) x1249))
(assert (= (x1026 160) (x975 (x1441 (x1026 160)))))
(assert (x533 x1229))
(assert (= (=> (and (= (> x407 x1047) x886) (= (x856 (+ x64 x467)) x1251) (= (x1442 288) x1047) (= (x1442 256) x407)) (and (=> (not x886) x548) (=> x886 x52))) x704))
(assert (= (x975 (x1441 (x1250 160))) (x1250 160)))
(assert (= (ite (= x641 128) 16 (x1096 x641)) (x1217 x641)))
(assert (x1309 (x628 128)))
(assert (= (x1104 352) (x1485 352)))
(assert (= x451 (and (not x692) x61)))
(assert (= (x189 x641) (ite (= x641 576) x1081 (x480 x641))))
(assert (= x858 (and x397 x386)))
(assert (= x1000 (and (not x1429) x958)))
(assert (x533 x32))
(assert (= (and x440 x175) x864))
(assert (x533 x914))
(assert (= (x433 512) (x165 512)))
(assert (= x1187 (and x392 (not x625))))
(assert (= (x672 x1202) (ite (and x558 (not x788)) (x509 x1202) (x1114 x1202))))
(assert (= x1438 (=> (and (= (x161 224) x688) (= (x570 (x1441 (x1414 128)) (x1441 (x1414 160)) 0) x96) (= x1412 (x378 x96 2)) (= (< x12 x1339) x884) (= x1339 (x1414 320)) (= x12 (x941 x1412))) (and (=> x884 x52) (=> (not x884) x484)))))
(assert (x533 x1132))
(assert (x533 x408))
(assert (=> (> (+ 10000 1) (x1442 160)) (= (x1478 (x1442 160)) (x1441 (x1442 160)))))
(assert (= (ite (= 128 x437) 7 (x16 x437)) (x1221 x437)))
(assert (= (+ (x975 x1137) 6) (x975 (x378 x1137 6))))
(assert (= (x736 384) (x796 384)))
(assert (x533 x1415))
(assert (= (x1478 629314576) (x1441 629314576)))
(assert (= (ite (= (x1478 39) x491) x1040 (x1209 (x1478 39))) (x605 (x1478 39))))
(assert (= (x695 160) (x975 (x1441 (x695 160)))))
(assert (= (x103 352) (x30 352)))
(assert (= x235 (and (not x412) x864)))
(assert (= (x975 (x1441 x385)) x385))
(assert (x533 x371))
(assert (= 2988718581 (x975 (x1478 2988718581))))
(assert (x533 x257))
(assert (= x1462 (=> (and (= x1439 (x1480 960)) (= x220 (= 0 x1439))) (and (=> x220 x52) (=> (not x220) x1064)))))
(assert (= (x695 128) (x975 (x1441 (x695 128)))))
(assert (= (x975 (x1478 1888058147)) 1888058147))
(assert (= 274184521717934524641157099916833587200 (x975 (x1441 274184521717934524641157099916833587200))))
(assert (= (ite (and (not x1041) x235) (x941 x363) (x460 x363)) (x756 x363)))
(assert (= x330 x1223))
(assert (= (x605 x1148) (ite (= x1148 x491) x1040 (x1209 x1148))))
(assert (x1309 (x429 128)))
(assert (x533 x1477))
(assert (= (x762 128) (x975 (x1441 (x762 128)))))
(assert (= (x975 (x1478 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x533 x1036))
(assert (= (x1478 599290589) (x1441 599290589)))
(assert (=> (> (+ 10000 1) (x1133 160)) (= (x1441 (x1133 160)) (x1478 (x1133 160)))))
(assert (= (and x311 x642) x1119))
(assert (x533 x926))
(assert (x533 x42))
(assert (= (=> (and (= (> x843 x806) x337) (= x461 (x1147 (- x966 x1035))) (= x843 (x1169 960))) (and (=> (not x337) x473) (=> x337 x1295))) x139))
(assert (x533 x490))
(assert (x1309 (x383 128)))
(assert (=> (> (+ 10000 1) (x306 128)) (= (x1478 (x306 128)) (x1441 (x306 128)))))
(assert (= (ite (and x1333 (not x377)) (x959 352) (x721 352)) (x875 352)))
(assert (=> (> (+ 10000 1) (x383 160)) (= (x1478 (x383 160)) (x1441 (x383 160)))))
(assert (x533 x1039))
(assert (= (x975 (x1478 3184006219)) 3184006219))
(assert (x533 x1207))
(assert (= (x106 544) (x1091 544)))
(assert (= (x605 x910) (ite (= x910 x491) x1040 (x1209 x910))))
(assert (= (x201 448) (x73 448)))
(assert (x533 x876))
(assert (= (x308 864) (x389 864)))
(assert (x533 x903))
(assert (x1309 (x1465 160)))
(assert (x533 x1259))
(assert (= (+ 8 (x975 x1226)) (x975 (x378 x1226 8))))
(assert (= (x88 x641) (ite (= x641 288) x775 (x304 x641))))
(assert (= (x975 (x378 x96 2)) (+ 2 (x975 x96))))
(assert (x533 x1361))
(assert (x1309 (x1465 128)))
(assert (= (x1059 896) (x516 896)))
(assert (x1309 (x1442 160)))
(assert (= (x1465 128) (x975 (x1441 (x1465 128)))))
(assert (x533 x173))
(assert (=> (> (+ 10000 1) (x9 128)) (= (x1478 (x9 128)) (x1441 (x9 128)))))
(assert (= x410 (=> (and (= x769 (= x498 0)) (= x76 (or x769 x375)) (= x375 (= x1105 x302)) (= x1105 (- (/ x1402 x498) (uninterp_frac x1402 x498))) (= (x1459 544) x498) (= x302 (x756 (x1478 47))) (= x527 (- (/ x829 10000) (uninterp_frac x829 10000))) (= (uninterp_mod (* x498 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1402) (= (= (ite x76 1 0) 0) x544)) (and (=> (not x544) x514) (=> x544 x52)))))
(assert (x1309 (x144 128)))
(assert (= (x975 (x1441 (x1133 160))) (x1133 160)))
(assert (= (x1221 x328) (ite (= 128 x328) 7 (x16 x328))))
(assert (= (x1182 288) (x317 288)))
(assert (x533 x927))
(assert (= (and (not x1470) x296) x902))
(assert (x1309 (x150 128)))
(assert (= x1487 (or x747 (and x1163 x1387))))
(assert (= (x509 (x1478 40)) (ite (and (not x377) x1333) (x149 (x1478 40)) (x50 (x1478 40)))))
(assert (x533 x563))
(assert (= (x1318 352) (x1154 352)))
(assert (x533 x294))
(assert (=> (> (+ 10000 1) (x810 128)) (= (x1478 (x810 128)) (x1441 (x810 128)))))
(assert (=> (< (- x557 1) 10000) (= (x1441 x557) (x1478 x557))))
(assert (= (x1026 832) (x836 832)))
(assert (= (x304 256) (x88 256)))
(assert (= (x975 (x1478 961581905)) 961581905))
(assert (= x643 (or (and x939 x620) x239 (and (not x1254) x1095))))
(assert (= (x975 (x1478 3504541104)) 3504541104))
(assert (= (ite (and x414 x1190 (not x631)) (x273 384) (x172 384)) (x11 384)))
(assert (x533 x1299))
(assert (x533 x479))
(assert (x533 x236))
(assert (= (x1143 512) (x1089 512)))
(assert (=> (< (- (x1151 128) 1) 10000) (= (x1441 (x1151 128)) (x1478 (x1151 128)))))
(assert (= 0 (x1197 352)))
(assert (x533 x892))
(assert (x533 x923))
(assert (= (x975 (x1441 (x810 160))) (x810 160)))
(assert (= (x975 (x378 x1410 2)) (+ 2 (x975 x1410))))
(assert (= (x1485 896) (x1104 896)))
(assert (=> (> (+ 10000 1) (x669 160)) (= (x1441 (x669 160)) (x1478 (x669 160)))))
(assert (= (+ 5 (x975 x580)) (x975 (x378 x580 5))))
(assert (= (x975 (x1478 2780307423)) 2780307423))
(assert (= (x1406 224) (x196 224)))
(assert (= (=> (and (= (< x1003 x972) x1009) (= x1003 (x150 864)) (= x8 (x1147 (- x550 x27))) (= (x150 896) x972)) (and (=> (and (= (x1147 (- x1003 x972)) x260) (not x1009)) x1110) (=> x1009 x52))) x67))
(assert (= (x1101 x57) (ite (= x57 192) 0 (x483 x57))))
(assert (= (x984 640) (x871 640)))
(assert (x533 x120))
(assert (=> (> (+ 10000 1) (x861 160)) (= (x1478 (x861 160)) (x1441 (x861 160)))))
(assert (x533 x1019))
(assert (= (ite (= x698 x491) x1040 (x1209 x698)) (x605 x698)))
(assert (x533 x1431))
(assert (x533 x557))
(assert (x533 x1164))
(assert (= (ite (and x235 (not x1041)) (x941 x1346) (x460 x1346)) (x756 x1346)))
(assert (= (and x1404 x1289) x68))
(assert (x533 x456))
(assert (= (x389 288) (x308 288)))
(assert (= (x959 352) (x869 352)))
(assert (= x1060 (=> (and (= x1067 (= x1457 0)) (= (x856 (+ x783 x456)) x1074) (= x949 (- (/ x1299 x1457) (uninterp_frac x1299 x1457))) (= (x716 352) x72) (= x1299 (uninterp_mod (* x72 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x949 x72) x1407) (= x1317 (or x1067 x1407)) (= x1470 (= 0 (ite x1317 1 0)))) (and (=> x1470 x52) (=> (not x1470) x1107)))))
(assert (= x52 (=> (= x990 true) x1021)))
(assert (= (ite (and x895 x1103 (not x610)) (x552 x437) (x957 x437)) (x712 x437)))
(assert (= (x975 (x378 x847 2)) (+ 2 (x975 x847))))
(assert (x533 x1279))
(assert (= (x191 576) (x925 576)))
(assert (= (=> (and (= (x856 (+ x467 x64)) x490) (= x445 (x570 (x1441 (x1442 128)) (x1441 (x1442 160)) 0)) (= x467 (x1442 256)) (= (x1432 224) x157) (= (x378 x445 8) x15) (= x64 (x1090 x15)) (= (< x490 x64) x1027)) (and (=> (not x1027) x704) (=> x1027 x52))) x506))
(assert (x1309 (x929 160)))
(assert (x533 x57))
(assert (= (x1089 160) (x1143 160)))
(assert (x533 x135))
(assert (x533 x979))
(assert (= (x736 832) (x796 832)))
(assert (= (x150 160) (x975 (x1441 (x150 160)))))
(assert (= x778 (=> (= (> x860 31) x175) (and (=> (not x175) x52) (=> x175 x1463)))))
(assert (= (=> (and (= x187 (x1475 (x1478 40))) (= (x1442 224) x893) (= x965 (x1250 256)) (= x594 (< x187 x965)) (= (x570 (x1441 (x1250 128)) (x1441 (x1250 160)) 0) x1093) (= (x378 x1093 6) x792) (= x979 (x1147 (- x1047 x407)))) (and (=> x594 x52) (=> (and (not x594) (= (x1147 (- x187 x965)) x660)) x1262))) x548))
(assert (x533 x1084))
(assert (= (=> (and (= x635 (= 0 x595)) (= (x941 (x1478 40)) x595)) (and (=> x635 x52) (=> (not x635) x673))) x1444))
(assert (x533 x1006))
(assert (= x1140 (=> (= (> x173 0) x1150) (and (=> (not x1150) x52) (=> x1150 x198)))))
(assert (= (and x1481 (not x117)) x952))
(assert (=> (< (- (x929 128) 1) 10000) (= (x1478 (x929 128)) (x1441 (x929 128)))))
(assert (x533 x574))
(assert (= x316 (or (and x653 x1284) (and x553 (not x734)) x1311)))
(assert (= (ite (and (not x377) x1333) (x959 800) (x721 800)) (x875 800)))
(assert (= (x383 160) (x975 (x1441 (x383 160)))))
(assert (x533 x283))
(assert (= (x1441 3613687827) (x1478 3613687827)))
(assert (= (x433 x57) (ite (= 736 x57) x671 (x165 x57))))
(assert (= (ite (= (x1478 45) x491) x1040 (x1209 (x1478 45))) (x605 (x1478 45))))
(assert (= (ite (and (not x1041) x235) (x941 x280) (x460 x280)) (x756 x280)))
(assert (x533 x665))
(assert (x533 x659))
(assert (= (=> (and (= (< x964 x1139) x758) (= x1382 (x9 832)) (= (x856 (+ x1139 x1382)) x964) (= (x63 (x1478 40)) x1139) (= (x856 (+ x154 x1072)) x7)) (and (=> x758 x52) (=> (and (not x758) (= x519 (x856 (+ x1139 x1382)))) x793))) x1359))
(assert (= (x1091 512) (x106 512)))
(assert (= (ite (= 704 x437) x1039 (x984 x437)) (x871 x437)))
(assert (= x1237 (=> (and (= (x756 (x1478 41)) x911) (= x1180 (x856 (+ x284 x897))) (= x520 (x201 288)) (= x117 (> x911 x1301))) (and (=> x117 x52) (=> (not x117) x679)))))
(assert (x533 x966))
(assert (x533 x686))
(assert (x533 x180))
(assert (= (and x209 x372) x1014))
(assert (= (x1082 x57) (ite (= x57 256) 274184521717934524641157099916833587200 (x1440 x57))))
(assert (x533 x863))
(assert (= (ite (and (not x1183) (not x1057) x334) (x871 704) (x1386 704)) (x23 704)))
(assert (x533 x870))
(assert (and (= (x1425 10 2) 100) (= (x1425 10 17) 100000000000000000) (= 10000000 (x1425 10 7)) (= (x1425 10 4) 10000) (= (x1425 10 10) 10000000000) (= (x1425 10 29) 100000000000000000000000000000) (= 1000000 (x1425 10 6)) (= 1000000000000000000000000000 (x1425 10 27)) (= 10000000000000000 (x1425 10 16)) (= 1000 (x1425 10 3)) (= 10000000000000000000000000 (x1425 10 25)) (= 1000000000000 (x1425 10 12)) (= 1000000000000000000000 (x1425 10 21)) (= (x1425 10 1) 10) (= 100000000000 (x1425 10 11)) (= (x1425 10 5) 100000) (= 100000000000000000000000 (x1425 10 23)) (= 1000000000000000000 (x1425 10 18)) (= (x1425 10 30) 1000000000000000000000000000000) (= 10000000000000000000000000000 (x1425 10 28)) (= (x1425 10 19) 10000000000000000000) (= 100000000 (x1425 10 8)) (= 1000000000000000 (x1425 10 15)) (= 100000000000000000000 (x1425 10 20)) (= 1000000000000000000000000 (x1425 10 24)) (= 10000000000000 (x1425 10 13)) (= 1000000000 (x1425 10 9)) (= 10000000000000000000000 (x1425 10 22)) (= (x1425 10 14) 100000000000000) (= (x1425 10 0) 1) (= (x1425 10 26) 100000000000000000000000000)))
(assert (= (and x1423 x859) x1340))
(assert (= (or (and x1065 x586) (and (not x1196) x13)) x183))
(assert (x533 x1040))
(assert (x1309 274184521717934524641157099916833587200))
(assert (= (x308 224) (x389 224)))
(assert (= x558 (or (and x253 (not x1009)) (and x1333 (not x377)))))
(assert (x533 x905))
(assert (x1309 (x761 128)))
(assert (x533 x755))
(assert (= (ite (= x363 x491) x1040 (x1209 x363)) (x605 x363)))
(assert (x533 x832))
(assert (= (=> (and (= (x856 (+ x1283 x1259)) x431) (= x1120 (x628 416)) (= x876 (x856 (+ x571 x1120))) (= (x570 (x1441 (x628 128)) (x1441 (x628 160)) 0) x491) (= x820 (x315 352)) (= (x1209 x491) x571) (= x130 (< x876 x571))) (and (=> (not x130) x422) (=> x130 x52))) x969))
(assert (= (x1143 x328) (ite (= x328 128) 16 (x1089 x328))))
(assert (= (x1478 2757214935) (x1441 2757214935)))
(assert (x533 x99))
(assert (= (ite (= 352 x57) x1222 (x669 x57)) (x194 x57)))
(assert (= 356263876 (x975 (x1478 356263876))))
(assert (= (x756 x425) (ite (and (not x1041) x235) (x941 x425) (x460 x425))))
(assert (= (x736 352) (x796 352)))
(assert (= (x975 (x1441 (x144 128))) (x144 128)))
(assert (= (x1441 773487949) (x1478 773487949)))
(assert (= x947 (and x1381 (not x217))))
(assert (x533 x1201))
(assert (= x185 (and x1204 (not x238))))
(assert (= (ite (= (x1478 41) x491) x1040 (x1209 (x1478 41))) (x605 (x1478 41))))
(assert (x533 x475))
(assert (= (x1089 544) (x1143 544)))
(assert (= x747 (and (not x1360) x658)))
(assert (= x1405 (=> (= (< 0 x1201) x258) (and (=> x258 x364) (=> (not x258) x52)))))
(assert (x533 x977))
(assert (= (=> (and (= x923 (x1143 512)) (= (x378 x580 5) x133) (= (> x1032 x1301) x733) (= (x756 x133) x1032) (= (x570 (x1441 (x480 128)) (x1441 (x480 160)) 0) x580)) (and (=> (not x733) x261) (=> x733 x52))) x995))
(assert (= (ite (= 224 x57) x926 (x201 x57)) (x73 x57)))
(assert (= (x11 x328) (ite (and x1190 x414 (not x631)) (x273 x328) (x172 x328))))
(assert (= (x975 (x378 x1098 1)) (+ (x975 x1098) 1)))
(assert (x533 x965))
(assert (= (ite (and (not x1421) x1004) (x605 x4) (x839 x4)) (x582 x4)))
(assert (= (=> (and (= (x629 320) x205) (= x522 (> x205 x520))) (and (=> (not x522) x84) (=> x522 x52))) x1079))
(assert (x533 x240))
(assert (x533 x907))
(assert (=> (> (+ 10000 1) (x150 160)) (= (x1441 (x150 160)) (x1478 (x150 160)))))
(assert (= (x957 x641) (ite (= x641 832) x1431 (x1179 x641))))
(assert (= (ite (= 192 x328) 0 (x1 x328)) (x1083 x328)))
(assert (= (x975 (x1478 348537858)) 348537858))
(assert (= x1388 (and x98 (not x607))))
(assert (x533 x950))
(assert (= (x1221 128) (x975 (x1441 (x1221 128)))))
(assert (= (x172 x328) (ite (= x328 832) x1431 (x1185 x328))))
(assert (= (x149 (x1478 37)) (ite (= (x1478 37) x425) x434 (x638 (x1478 37)))))
(assert (x533 x134))
(assert (= x239 (or (and (not x730) x971) (and (not x311) x642) (and x59 (not x70)))))
(assert (= (x712 x328) (ite (and x895 (not x610) x1103) (x552 x328) (x957 x328))))
(assert (= x715 (or (and (not x608) x69) (and (not x297) x1280) (and x902 x1061) (and (not x1300) x723))))
(assert (= (ite (= x437 256) 274184521717934524641157099916833587200 (x389 x437)) (x308 x437)))
(assert (x533 x86))
(assert (= (ite (= x425 x765) x434 (x638 x765)) (x149 x765)))
(assert (= (x1217 160) (x1096 160)))
(assert (= (x591 320) (x801 320)))
(assert (= (x756 x133) (ite (and (not x1041) x235) (x941 x133) (x460 x133))))
(assert (= x1025 (=> (and (= (or x444 x1051) x753) (= x444 (= 0 x1132)) (= (x941 (x1478 39)) x249) (= (= (ite x753 1 0) 0) x355) (= x1051 (= x249 x1335)) (= (x88 256) x1132) (= x1335 (- (/ x159 x1132) (uninterp_frac x159 x1132))) (= (uninterp_mod (* x249 x1132) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x159)) (and (=> (not x355) x1444) (=> x355 x52)))))
(assert (= (=> (and (= (x1147 (- x1019 x479)) x153) (= x507 (x1461 384)) (= x830 (x1461 544)) (= (< x565 x507) x1429) (= x565 (x1461 352))) (and (=> (and (= (> x421 0) x862) (= (x1257 544) x1456) (not x1429) (= x755 (ite (> x830 x1229) x1229 x830)) (= (x1147 (- x565 x507)) x1229) (or (and (not x862) (= x213 x421)) (and (= x213 1) (< x1136 4294967296) x862))) x575) (=> x1429 x52))) x51))
(assert (=> (> (+ 10000 1) (x1298 160)) (= (x1478 (x1298 160)) (x1441 (x1298 160)))))
(assert (= (x1250 128) (x975 (x1441 (x1250 128)))))
(assert (= (x106 x328) (ite (= 640 x328) 2388873442 (x1091 x328))))
(assert (= (x1082 512) (x1440 512)))
(assert (= (and x1333 x377) x1005))
(assert (x1309 (x962 128)))
(assert (x1309 (x1260 160)))
(assert (x533 x418))
(assert (x533 x893))
(assert (= (=> (and (= x889 (x1384 320)) (= x458 (< 0 x889))) (and (=> x458 x52) (=> (not x458) x702))) x1223))
(assert (= (x754 x328) (ite (= 192 x328) x97 (x1101 x328))))
(assert (= x1490 (=> (and (= x363 (x570 (x1441 (x1221 128)) (x1441 (x1221 160)) 0)) (= (x582 x363) x231) (= (< 0 x231) x70)) (and (=> x70 x1390) (=> (not x70) x684)))))
(assert (x1309 (x1133 160)))
(assert (x533 x775))
(assert (= (+ (x975 x1189) 7) (x975 (x378 x1189 7))))
(assert (= (x1104 800) (x1485 800)))
(assert (= x705 (=> (= x496 (< 0 x1236)) (and (=> (not x496) x52) (=> x496 x441)))))
(assert (= (=> (and (= (x378 x847 2) x590) (= (or x501 x811) x526) (= x43 (- (/ x24 x624) (uninterp_frac x24 x624))) (= x1235 (x946 288)) (= (= 0 (ite x526 1 0)) x128) (= (x149 x590) x624) (= (x149 (x1478 40)) x1353) (= (- (/ x36 10000) (uninterp_frac x36 10000)) x567) (= x811 (= x624 0)) (= (x383 320) x121) (= (x570 (x1441 (x383 128)) (x1441 (x383 160)) 0) x847) (= x24 (uninterp_mod (* x624 x121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x43 x121) x501)) (and (=> (and (= x765 (x378 x1210 6)) (= (x722 288) x837) (= x242 (x378 x384 4)) (= x1210 (x570 (x1441 (x695 128)) (x1441 (x695 160)) 0)) (= x312 (x286 416)) (= (x149 x765) x855) (or (and (not x711) (= 1 x1453)) (and x711 (= (not x219) x978) (= x219 (> x1474 x777)) (= x1453 (ite x978 1 0)) (= x777 (x286 384)) (= x1474 (x286 352)))) (= (- (/ x24 10000) (uninterp_frac x24 10000)) x1157) (= x711 (> x312 x846)) (= x301 (x691 288)) (= x390 (x378 x376 3)) (= x245 (x149 x390)) (not x128) (= (x295 288) x170) (= (x286 448) x846) (= (x570 (x1441 (x1094 128)) (x1441 (x1094 160)) 0) x376) (= (x149 x242) x563) (= (x570 (x1441 (x810 128)) (x1441 (x810 160)) 0) x384)) x898) (=> x128 x52))) x767))
(assert (x533 x127))
(assert (x1309 (x1094 160)))
(assert (=> (< (- (x1026 160) 1) 10000) (= (x1441 (x1026 160)) (x1478 (x1026 160)))))
(assert (= (x904 320) (x22 320)))
(assert (= x821 x1479))
(assert (x533 x1180))
(assert (= (x582 x590) (ite (and (not x1421) x1004) (x605 x590) (x839 x590))))
(assert (= (x909 224) (x706 224)))
(assert (=> (> (+ 10000 1) (x429 160)) (= (x1478 (x429 160)) (x1441 (x429 160)))))
(assert (= (=> (and (= (x672 (x1478 10)) x816) (= x54 (x512 832)) (= (< x54 x225) x66) (= (x512 928) x225)) (and (=> (and (= (x856 (+ x977 480)) x1125) (= x732 (x856 (+ 512 x977))) (= (x1147 (- x54 x225)) x1253) (= x1451 (> x708 0)) (or (and (= (x1156 (x1441 x385)) x1323) (= x339 (x1156 (x1441 274184521717934524641157099916833587200))) x1181 x1326 (= (<= x339 (x455 (x1441 274184521717934524641157099916833587200))) x1338) (< x1099 4294967296) (= x1326 (= x1323 (x455 (x1441 x385)))) x1338) (not x1181)) (= x1240 (x1167 256)) (= (x204 288) x873) (= x977 (x1167 384)) (= x1121 (x856 (+ x977 64))) (= (< 0 x405) x1181) (or (not x1451) (and (> 4294967296 x1113) x1451)) (= (x924 224) x385) (not x66)) x825) (=> x66 x52))) x163))
(assert (= (x1197 x328) 0))
(assert (= (x1441 3092021830) (x1478 3092021830)))
(assert (x533 x1001))
(assert (= (x1441 356263876) (x1478 356263876)))
(assert (x1309 (x1221 128)))
(assert (= (x1197 x57) 0))
(assert (= x583 (=> (and (= (> (x83 x361 x807) 0) x586) (= (x1112 352) x361) (= (uninterp_mod (* x1234 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x807) (= x1234 (x1147 (- 32 x655))) (= x655 (x1112 320))) (and (=> (not x586) x52) (=> x586 x1023)))))
(assert (= (ite (= x425 x1202) x434 (x638 x1202)) (x149 x1202)))
(assert (= (x1478 2388873442) (x1441 2388873442)))
(assert (x1309 (x810 128)))
(assert (= (and x1004 x1421) x569))
(assert (= x98 (and x948 (not x416))))
(assert (x533 x6))
(assert (x533 x221))
(assert (= (ite (and (not x377) x1333) (x149 (x1478 37)) (x50 (x1478 37))) (x509 (x1478 37))))
(assert (x533 x956))
(assert (= (x1441 861432679) (x1478 861432679)))
(assert (= x1314 (=> (= x734 (> x380 0)) (and (=> (and (= (< 0 x370) x1476) (or (and (= x622 x370) (not x1476)) (and (> 4294967296 x1424) (= 1 x622) x1476)) x734) x341) (=> (and (= x990 false) (not x734)) x1021)))))
(assert (= (and (not x66) x332) x980))
(assert (= (x1182 896) (x317 896)))
(assert (= (=> (and (not (= 2988718581 x232)) (not (= 297566789 x232)) (not (= 3208075701 x232)) (not (= x232 1977493762)) (not (= 3491319510 x232)) (not (= 4267106866 x232)) (not (= 1888058147 x232)) (not (= x232 3567397854)) (= x368 (x378 x1098 1)) (not (= 599290589 x232)) (not (= 1020253707 x232)) (not (= 3296657447 x232)) (not (= 2316151882 x232)) (not (= x232 773487949)) (not (= x232 3184006219)) (not (= 596573372 x232)) (not (= 31576340 x232)) (not (= x232 1851080549)) (not (= x232 3544214205)) (not (= x232 1823829273)) (not (= x232 348537858)) (not (= x232 3862337480)) (not (= 4151200938 x232)) (= (x570 (x1441 (x1217 128)) (x1441 (x1217 160)) 0) x1098) (not (= 2699341722 x232)) (not (= x232 2087341860)) (not (= 3147386184 x232)) (not (= 3065339685 x232)) (not (= 356263876 x232)) (not (= x232 3092021830)) (not (= x232 3184473787)) (not (= 3339924076 x232)) (not (= x232 961581905)) (not (= x232 157198259)) (not (= 2052391781 x232)) (= x1069 (< 0 x1443)) (not (= x232 2484372501)) (not (= x232 347398766)) (not (= 2681579215 x232)) (not (= 2209625481 x232)) (not (= 3963136098 x232)) (not (= 1257916802 x232)) (not (= 464926286 x232)) (not (= x232 3877814014)) (not (= x232 2780307423)) (= x232 2715400956) (not (= 288104347 x232)) (not (= 3504541104 x232)) (not (= x232 2757214935)) (= x1443 (x941 x368)) (not (= x232 16192718)) (not (= x232 2835717307)) (not (= 2869116585 x232)) (not (= 1401663147 x232)) (not (= x232 861432679)) (not (= x232 2572356358)) (not (= x232 629314576)) (not (= 3613687827 x232)) (not (= 1196925270 x232))) (and (=> x1069 x1239) (=> (not x1069) x52))) x155))
(assert (x533 x1139))
(assert (x533 x459))
(assert (= x484 (=> (and (= (> x907 x320) x111) (= x907 (x1414 320)) (= (x1147 (- x12 x1339)) x1186) (= x320 (x614 (x1478 39)))) (and (=> x111 x52) (=> (and (not x111) (= (x1147 (- x320 x907)) x556)) x506)))))
(assert (x533 x1218))
(assert (= (x1406 800) (x196 800)))
(assert (= (ite (= x437 640) 2388873442 (x1091 x437)) (x106 x437)))
(assert (x533 x302))
(assert (x533 x511))
(assert (x1309 (x669 128)))
(assert (x533 x395))
(assert (= x316 x1244))
(assert (=> (> (+ 10000 1) (x1151 160)) (= (x1478 (x1151 160)) (x1441 (x1151 160)))))
(assert (x1309 (x144 160)))
(assert (= (x929 384) (x161 384)))
(assert (x533 x783))
(assert (x533 x370))
(assert (= (x712 320) (ite (and x895 x1103 (not x610)) (x552 320) (x957 320))))
(assert (= (=> (= x404 (> x125 31)) (and (=> (not x404) x52) (=> x404 x123))) x198))
(assert (x1309 (x480 160)))
(assert (x1309 (x810 160)))
(assert (= (x1478 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1441 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x533 x564))
(assert (x533 x1228))
(assert (= (x975 (x378 x212 6)) (+ (x975 x212) 6)))
(assert (x533 x1282))
(assert (=> (< (- (x1143 160) 1) 10000) (= (x1441 (x1143 160)) (x1478 (x1143 160)))))
(assert (= x779 (x206 192)))
(assert (= (x869 864) (x959 864)))
(assert (= (=> (and (= (> x1036 0) x353) (= x960 (x1205 704)) (= (x756 (x1478 9)) x1276) (= (x30 448) x1036)) (and (=> x353 x200) (=> (and (= x1411 (x30 384)) (not x353)) x1473))) x1488))
(assert (= (x516 416) (x1059 416)))
(assert (x533 x813))
(assert (= x341 (=> (= x675 (> x622 0)) (and (=> x675 x812) (=> (not x675) x52)))))
(assert (x1309 (x929 128)))
(assert (x533 x1278))
(assert (x533 x1042))
(assert (x533 x912))
(assert (= (x754 192) x97))
(assert (= (and x400 x1388) x776))
(assert (= (ite (= x491 (x1478 10)) x1040 (x1209 (x1478 10))) (x605 (x1478 10))))
(assert (x533 x1349))
(assert (x533 x595))
(assert (= (x149 (x1478 43)) (ite (= (x1478 43) x425) x434 (x638 (x1478 43)))))
(assert (x533 x806))
(assert (= (ite (= 288 x641) x1431 (x626 x641)) (x199 x641)))
(assert (x533 x1454))
(assert (= (and (not x522) x469) x585))
(assert (x533 x249))
(assert (= (x1441 3963136098) (x1478 3963136098)))
(assert (= (x103 384) (x30 384)))
(assert (x533 x897))
(assert (= (x756 x100) (ite (and (not x1041) x235) (x941 x100) (x460 x100))))
(assert (x533 x255))
(assert (x533 x949))
(assert (= (and x890 (not x645)) x1483))
(assert (x533 x1243))
(assert (x533 x109))
(assert (x533 x967))
(assert (x533 x998))
(assert (x533 x1158))
(assert (= (x1 352) (x1083 352)))
(assert (x533 x7))
(assert (x1309 (x1094 128)))
(assert (= (x871 544) (x984 544)))
(assert (= (x605 x917) (ite (= x917 x491) x1040 (x1209 x917))))
(assert (x533 x1186))
(assert (= (x975 (x1441 (x628 128))) (x628 128)))
(assert (= (x975 (x1441 (x1094 128))) (x1094 128)))
(assert (= (x975 (x1441 (x152 128))) (x152 128)))
(assert (x533 x749))
(assert (= (x975 (x1478 157198259)) 157198259))
(assert (= x744 (=> (= x108 (< 31 x568)) (and (=> x108 x1383) (=> (not x108) x52)))))
(assert (x533 x260))
(assert (= (x975 (x1441 (x480 128))) (x480 128)))
(assert (x533 x937))
(assert (x533 x329))
(assert (= (x149 x1241) (ite (= x1241 x425) x434 (x638 x1241))))
(assert (x533 x636))
(assert (= (x1303 832) (x987 832)))
(assert (x1309 (x1091 128)))
(assert (= (x1082 448) (x1440 448)))
(assert (= 2209625481 (x975 (x1478 2209625481))))
(assert (= (x582 x1202) (ite (and x1004 (not x1421)) (x605 x1202) (x839 x1202))))
(assert (= (+ 8 (x975 x445)) (x975 (x378 x445 8))))
(assert (x533 x303))
(assert (= (x1441 113225476) (x1478 113225476)))
(assert (= (x1478 3184006219) (x1441 3184006219)))
(assert (= (x1478 348537858) (x1441 348537858)))
(assert (= (=> (= (> x806 0) x1041) (and (=> x1041 x463) (=> (not x1041) x1262))) x930))
(assert (= (ite (and x235 (not x1041)) (x941 (x1478 9)) (x460 (x1478 9))) (x756 (x1478 9))))
(assert (= (x1083 256) (x206 256)))
(assert (= 2316151882 (x975 (x1478 2316151882))))
(assert (= x419 (=> (and (= x1148 (x378 x603 6)) (= (x570 (x1441 (x9 128)) (x1441 (x9 160)) 0) x603) (= x1371 (x856 (+ x154 x1072))) (= (x9 832) x1072) (= (x509 x1148) x154) (= x1252 (< x1371 x154))) (and (=> x1252 x52) (=> (not x1252) x1359)))))
(assert (= x926 (x73 224)))
(assert (= x1110 (=> (and (= x788 (< 0 x439)) (= (x875 832) x439)) (and (=> (not x788) x793) (=> x788 x419)))))
(assert (x533 x1127))
(assert (= (x768 352) (x924 352)))
(assert (x533 x292))
(assert (= (x509 x910) (ite (and x1333 (not x377)) (x149 x910) (x50 x910))))
(assert (x533 x1382))
(assert (=> (> (+ 10000 1) (x695 128)) (= (x1478 (x695 128)) (x1441 (x695 128)))))
(assert (= x794 (and x1012 (not x485))))
(assert (= (x1104 320) (x1485 320)))
(assert (= 4151200938 (x975 (x1478 4151200938))))
(assert (= (x1440 704) (x1082 704)))
(assert (x1309 (x695 160)))
(assert (x533 x284))
(assert (x533 x696))
(assert (= (and x854 x1044) x890))
(assert (x533 x860))
(assert (= (ite (= (x1478 37) x491) x1040 (x1209 (x1478 37))) (x605 (x1478 37))))
(assert (= (ite (= x917 x425) x434 (x638 x917)) (x149 x917)))
(assert (= (ite (and x414 (not x631) x1190) (x273 800) (x172 800)) (x11 800)))
(assert (= 4294967296 (x975 (x1478 4294967296))))
(assert (= (x924 832) (x768 832)))
(assert (x533 x1236))
(assert (x533 x1121))
(assert (= x1404 (and x952 (not x1248))))
(assert (= (and x759 (not x888)) x296))
(assert (= (and x608 x69) x985))
(assert (= (x152 160) (x975 (x1441 (x152 160)))))
(assert (= (x103 320) (x30 320)))
(assert (= (x975 (x1478 2388873442)) 2388873442))
(assert (= (x1478 297566789) (x1441 297566789)))
(assert (= (x161 320) x746))
(assert (= (x286 416) (x810 416)))
(assert (= (x975 (x378 x481 6)) (+ (x975 x481) 6)))
(assert (= (x1478 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x1441 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x1309 x833))
(assert (=> (> (+ 10000 1) x385) (= (x1478 x385) (x1441 x385))))
(assert (= (ite (= 576 x437) x1081 (x480 x437)) (x189 x437)))
(assert (= x1095 (and x1395 (not x1345))))
(assert (x533 x879))
(assert (= (x1478 3491319510) (x1441 3491319510)))
(assert (x533 x1310))
(assert (= (ite (and x235 (not x1041)) (x941 x4) (x460 x4)) (x756 x4)))
(assert (x533 x1330))
(assert (x533 x1304))
(assert (x533 x244))
(assert (= (and x774 (not x167)) x61))
(assert (= (x975 (x1441 (x1078 128))) (x1078 128)))
(assert (= (x509 x1241) (ite (and (not x377) x1333) (x149 x1241) (x50 x1241))))
(assert (x533 x1339))
(assert (= x961 (=> (and (= x789 (x836 352)) (= (x836 320) x1399) (= (> x789 x1399) x400)) (and (=> x400 x268) (=> (not x400) x844)))))
(assert (x533 x648))
(assert (= (x925 512) (x191 512)))
(assert (x533 x36))
(assert (= (x957 800) (x1179 800)))
(assert (= (x1441 3504541104) (x1478 3504541104)))
(assert (x1309 (x1078 128)))
(assert (= (x1143 128) 16))
(assert (= (x1286 928) x244))
(assert (=> (> (+ 10000 1) (x761 128)) (= (x1478 (x761 128)) (x1441 (x761 128)))))
(assert (= x468 (and x734 x553)))
(assert (= (and x259 (not x886)) x493))
(assert (= (ite (and (not x1421) x1004) (x605 (x1478 40)) (x839 (x1478 40))) (x582 (x1478 40))))
(assert (= x604 (=> (= x877 (< 0 x336)) (and (=> x877 x1064) (=> (not x877) x52)))))
(assert (= x1023 x1479))
(assert (= (and (not x466) x858) x1481))
(assert (= (x909 288) (x706 288)))
(assert (x533 x674))
(assert (= (x199 384) (x626 384)))
(assert (= (x582 x917) (ite (and (not x1421) x1004) (x605 x917) (x839 x917))))
(assert (x533 x850))
(assert (x533 x1138))
(assert (= (and x1368 (not x223)) x948))
(assert (x533 x964))
(assert (= (x756 x981) (ite (and (not x1041) x235) (x941 x981) (x460 x981))))
(assert (x533 x807))
(assert (= (x756 x1489) (ite (and (not x1041) x235) (x941 x1489) (x460 x1489))))
(assert (= (x1478 3147386184) (x1441 3147386184)))
(assert (= (x1441 464926286) (x1478 464926286)))
(assert (= (x88 x57) (ite (= 288 x57) x775 (x304 x57))))
(assert (= (=> (= (> x1136 31) x1010) (and (=> (not x1010) x52) (=> (and x1010 (= x749 (x591 544)) (= (x801 576) x395) (= (> x48 x749) x872) (= x48 (x591 480)) (or (and (not x872) (= x143 (x591 512)) (= (x591 544) x32) (= x1155 (ite (< x143 x32) x143 x32))) x872) (= (ite (> x1456 x395) x395 x1456) x89)) x409))) x21))
(assert (= (=> (and x162 (= x674 x593) (= false x508) (<= x233 1461501637330902918203684832716283019655932542975) (>= x233 0) (<= x513 1461501637330902918203684832716283019655932542975) (>= x513 0) (= x267 false) (<= 0 x266) (= x699 x1431) (< 99 x1071) (>= x699 0) (= (x1063 (x1441 274184521717934524641157099916833587200)) x927) (= true (<= x1071 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x593 x266) (= x1396 false) (= x1282 x818) (= x142 false) (<= x1225 1461501637330902918203684832716283019655932542975) (<= 0 x1225) (= (< 0 (x1062 (x1441 274184521717934524641157099916833587200))) x162) (= x112 3) (>= x927 0) (= x391 2715400956) (= x932 x1111) (= x1225 x342) (= x806 x1008) (<= x266 1461501637330902918203684832716283019655932542975) (<= x699 1461501637330902918203684832716283019655932542975) (= x1431 x233)) x1449) x74))
(assert (x533 x145))
(assert (x533 x143))
(assert (x1309 (x9 128)))
(assert (= x709 (=> (= (< 0 x1086) x741) (and (=> (not x741) x52) (=> (and (= (x796 640) x905) x741 (= (< 0 x1267) x521) (or (and x521 (> 4294967296 x134)) (not x521)) (= x1310 (x856 (+ x905 32))) (= (ite (< x25 32) x25 32) x717)) x188)))))
(assert (= (x591 480) (x801 480)))
(assert (= (x875 896) (ite (and x1333 (not x377)) (x959 896) (x721 896))))
(assert (x533 x1085))
(assert (x533 x1003))
(assert (x533 x328))
(assert (x533 x1288))
(assert (x533 x1092))
(assert (= (x909 800) (x706 800)))
(assert (= 1401663147 (x975 (x1478 1401663147))))
(assert (= (x480 160) (x975 (x1441 (x480 160)))))
(assert (x533 x641))
(assert (= x19 (=> (and (= (> 1000000000000000000 x396) x250) (= x396 (x936 224))) (and (=> (not x250) x406) (=> x250 x576)))))
(assert (= (x1059 800) (x516 800)))
(assert (= (x975 (x1478 2681579215)) 2681579215))
(assert (= (x1441 2052391781) (x1478 2052391781)))
(assert (= (x172 384) (x1185 384)))
(assert (= (x1485 832) (x1104 832)))
(assert (x533 x342))
(assert (x533 x1325))
(assert (x533 x1424))
(assert (= (x936 800) (x745 800)))
(assert (= (=> (and (= x1334 (x712 800)) (= (> x781 x1334) x412)) (and (=> (not x412) x930) (=> x412 x52))) x1463))
(assert (= x409 (=> (and (= x504 (x149 (x1478 39))) (= (> x504 0) x859) (= x832 (x682 864))) (and (=> (and (= (x570 (x1441 (x1465 128)) (x1441 (x1465 160)) 0) x1174) (= x4 (x378 x1174 2)) (= x289 (x149 x4)) (= x867 (< 0 x475)) (or (and (> 4294967296 x125) (= x173 1) x867) (and (= x475 x173) (not x867))) (= x1042 (x14 288)) x859) x1140) (=> (and (= (x378 x314 6) x100) (not x859) (= (x149 x100) x1171) (= (x570 (x1441 (x144 128)) (x1441 (x144 160)) 0) x314) (= x1158 (x14 288))) x844)))))
(assert (= (ite (and x1333 (not x377)) (x149 x1312) (x50 x1312)) (x509 x1312)))
(assert (= (x924 320) (x768 320)))
(assert (= x601 (=> (= (< 31 x17) x854) (and (=> (not x854) x52) (=> x854 x102)))))
(assert (x533 x1456))
(assert (= (ite (and (not x1041) x235) (x941 x639) (x460 x639)) (x756 x639)))
(assert (x533 x1261))
(assert (= (x605 x242) (ite (= x242 x491) x1040 (x1209 x242))))
(assert (= (x149 x242) (ite (= x242 x425) x434 (x638 x242))))
(assert (= (x509 (x1478 41)) (ite (and x1333 (not x377)) (x149 (x1478 41)) (x50 (x1478 41)))))
(assert (x533 x1052))
(assert (= (ite (= 448 x641) x1276 (x103 x641)) (x30 x641)))
(assert (x533 x624))
(assert (= (x161 x437) (ite (= 320 x437) x746 (x929 x437))))
(assert (= x1044 (and x53 x367)))
(assert (= x440 (and x953 x853)))
(assert (= (ite (and (not x1041) x235) (x941 (x1478 39)) (x460 (x1478 39))) (x756 (x1478 39))))
(assert (=> (< (- (x882 128) 1) 10000) (= (x1478 (x882 128)) (x1441 (x882 128)))))
(assert (x533 x1365))
(assert (= (x1441 2835717307) (x1478 2835717307)))
(assert (= (x1059 352) (x516 352)))
(assert (x533 x781))
(assert (= 2699341722 (x975 (x1478 2699341722))))
(assert (= 3613687827 (x975 (x1478 3613687827))))
(assert (=> (< (- (x1221 128) 1) 10000) (= (x1441 (x1221 128)) (x1478 (x1221 128)))))
(assert (= (x191 800) (x925 800)))
(assert (= (x23 512) (ite (and (not x1057) x334 (not x1183)) (x871 512) (x1386 512))))
(assert (= (x975 (x1478 3184473787)) 3184473787))
(assert (= (ite (= x437 128) 16 (x1096 x437)) (x1217 x437)))
(assert (= (and (not x894) x1483) x1233))
(assert (= x1129 (=> (and (= (< 0 x857) x608) (= (x941 (x1478 39)) x857)) (and (=> (and x608 (= x354 (x199 288)) (= x1211 (x378 x1410 2)) (= x1457 (x941 x1211)) (= x1043 (< 0 x1084)) (= (x570 (x1441 (x1151 128)) (x1441 (x1151 160)) 0) x1410) (or (and (= x438 x1084) (not x1043)) (and (< x474 4294967296) (= x438 1) x1043))) x532) (=> (and (= (x199 288) x597) (= (x378 x831 6) x26) (not x608) (= (x941 x26) x1446) (= x831 (x570 (x1441 (x429 128)) (x1441 (x429 160)) 0))) x1011)))))
(assert (= (ite (= x328 256) 274184521717934524641157099916833587200 (x389 x328)) (x308 x328)))
(assert (= (=> (and (= x425 (x378 x913 7)) (= (> x991 x1207) x118) (= (x570 (x1441 (x152 128)) (x1441 (x152 160)) 0) x913) (= (x856 (+ x818 x991)) x1207) (= (x638 x425) x991) (= x613 (x156 832))) (and (=> (not x118) x1199) (=> x118 x52))) x1331))
(assert (=> (> (+ 10000 1) (x480 160)) (= (x1441 (x480 160)) (x1478 (x480 160)))))
(assert (= (ite (and x1333 (not x377)) (x149 (x1478 43)) (x50 (x1478 43))) (x509 (x1478 43))))
(assert (x533 x740))
(assert (= x1116 (or (and (not x250) x1206) (and x1056 (not x938)))))
(assert (= (=> (and (= (x1436 x639) x1045) (= (x1147 (- x236 x1342)) x349) (= x730 (> x1045 x1351)) (= (x882 288) x500) (= x639 (x570 (x1441 (x882 128)) (x1441 (x882 160)) 0)) (= (x962 256) x1422) (= x1351 (x856 (+ x500 x1045)))) (and (=> x730 x52) (=> (and (= (x882 288) x226) (= (x856 (+ x500 x1045)) x1146) (not x730)) x684))) x197))
(assert (= (x1101 384) (x754 384)))
(assert (= (x189 320) (x480 320)))
(assert (= (x871 352) (x984 352)))
(assert (x533 x1253))
(assert (= (and x794 x337) x171))
(assert (= (x11 x437) (ite (and x414 (not x631) x1190) (x273 x437) (x172 x437))))
(assert (= x59 (or (and (not x379) x596) (and (not x1421) x1004))))
(assert (= x1368 (and x404 x510)))
(assert (x533 x678))
(assert (= (and x1336 x921) x906))
(assert (= (x304 224) (x88 224)))
(assert (= (ite (= x1202 x491) x1040 (x1209 x1202)) (x605 x1202)))
(assert (x533 x380))
(assert (= (x582 (x1478 39)) (ite (and x1004 (not x1421)) (x605 (x1478 39)) (x839 (x1478 39)))))
(assert (= x181 (and (not x1224) x1337)))
(assert (= (x1091 160) (x975 (x1441 (x1091 160)))))
(assert (x533 x97))
(assert (= (x1082 640) (x1440 640)))
(assert (x533 x1267))
(assert (x533 x790))
(assert (= (x1182 384) (x317 384)))
(assert (= (x1 288) (x1083 288)))
(assert (x533 x452))
(assert (x1309 (x1026 160)))
(assert (= (and x1150 x1340) x510))
(assert (= (x516 832) (x1059 832)))
(assert (x533 x1474))
(assert (x533 x1276))
(assert (= (x161 x328) (ite (= 320 x328) x746 (x929 x328))))
(assert (= (x38 352) (x1286 352)))
(assert (=> (> (+ 10000 1) (x929 160)) (= (x1478 (x929 160)) (x1441 (x929 160)))))
(assert (= (x582 (x1478 37)) (ite (and x1004 (not x1421)) (x605 (x1478 37)) (x839 (x1478 37)))))
(assert (=> (< (- (x1465 160) 1) 10000) (= (x1478 (x1465 160)) (x1441 (x1465 160)))))
(assert (= (and x353 x1119) x47))
(assert (= (x975 (x1478 60465744)) 60465744))
(assert (= (x1101 192) 0))
(assert (= (x306 160) (x975 (x1441 (x306 160)))))
(assert (= (x199 x57) (ite (= x57 288) x1431 (x626 x57))))
(assert (= x589 (and x788 x558)))
(assert (x533 x1460))
(assert (= (x975 (x1441 (x762 160))) (x762 160)))
(assert (= (+ (x975 x1174) 2) (x975 (x378 x1174 2))))
(assert (= (x605 x390) (ite (= x390 x491) x1040 (x1209 x390))))
(assert (=> (> (+ 10000 1) (x1221 160)) (= (x1478 (x1221 160)) (x1441 (x1221 160)))))
(assert (= (x1182 352) (x317 352)))
(assert (= (ite (and x235 (not x1041)) (x941 x1148) (x460 x1148)) (x756 x1148)))
(assert (= (ite (= x437 224) x926 (x201 x437)) (x73 x437)))
(assert (= (x317 320) (x1182 320)))
(assert (x533 x366))
(assert (= (and x114 (not x1380)) x1264))
(assert (= (x286 320) (x810 320)))
(assert (= (x1441 288104347) (x1478 288104347)))
(assert (= (x1318 320) (x1154 320)))
(assert (= (x206 288) (x1083 288)))
(assert (x533 x369))
(assert (= (x106 x57) (ite (= 640 x57) 2388873442 (x1091 x57))))
(assert (= (ite (= 288 x437) x775 (x304 x437)) (x88 x437)))
(assert (= (x975 (x1478 3092021830)) 3092021830))
(assert (= (ite (= x425 x491) x1040 (x1209 x425)) (x605 x425)))
(assert (= x1239 (=> (and (= x631 (= 0 x476)) (= x476 (x941 (x1478 15)))) (and (=> x631 x1064) (=> (and (or (and (< x17 4294967296) x414 (= 1 x1022)) (and (= x1022 x1374) (not x414))) (not x631) (= x414 (< 0 x1374))) x896)))))
(assert (x1309 (x383 160)))
(assert (= (x165 320) (x433 320)))
(assert (= 2388873442 (x106 640)))
(assert (=> (> (+ 10000 1) (x1078 128)) (= (x1478 (x1078 128)) (x1441 (x1078 128)))))
(assert (= 2869116585 (x975 (x1478 2869116585))))
(assert (= (ite (= x1489 x425) x434 (x638 x1489)) (x149 x1489)))
(assert (x533 x270))
(assert (x533 x671))
(assert (= x642 (and x334 (not x1057))))
(assert (= (x1478 2572356358) (x1441 2572356358)))
(assert (= (x429 128) (x975 (x1441 (x429 128)))))
(assert (= (x483 320) (x1101 320)))
(assert (x533 x1402))
(assert (= (x1478 2087341860) (x1441 2087341860)))
(assert (x533 x275))
(assert (= (x745 896) (x936 896)))
(assert (=> (> (+ 10000 1) (x388 128)) (= (x1441 (x388 128)) (x1478 (x388 128)))))
(assert (= x735 (and x185 (not x203))))
(assert (= (x756 (x1478 44)) (ite (and (not x1041) x235) (x941 (x1478 44)) (x460 (x1478 44)))))
(assert (= (x1442 160) (x975 (x1441 (x1442 160)))))
(assert (= (x1185 800) (x172 800)))
(assert (x533 x79))
(assert (x533 x17))
(assert (= (x975 (x1478 3296657447)) 3296657447))
(assert (= (x871 x57) (ite (= x57 704) x1039 (x984 x57))))
(assert (= x940 (=> (and (= (= 0 x243) x95) (= (x791 544) x243) (= (x791 512) x462) (= (= 0 (ite x1369 1 0)) x1224) (= (- (/ x1218 10000) (uninterp_frac x1218 10000)) x120) (= (or x95 x656) x1369) (= x1170 (- (/ x829 x243) (uninterp_frac x829 x243))) (= x922 (x570 (x1441 (x1370 128)) (x1441 (x1370 160)) 0)) (= x662 (- (/ x120 31556952) (uninterp_frac x120 31556952))) (= (x756 x922) x950) (= (uninterp_mod (* x243 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x829) (= (= x1170 x950) x656)) (and (=> x1224 x52) (=> (not x1224) x410)))))
(assert (= (x984 320) (x871 320)))
(assert (x533 x431))
(assert (= (=> (and (= x1342 (x962 288)) (= x236 (x582 x1232)) (= (x1277 224) x20) (= x1232 (x570 (x1441 (x962 128)) (x1441 (x962 160)) 0)) (= (< x236 x1342) x609)) (and (=> x609 x52) (=> (not x609) x197))) x606))
(assert (= (x509 (x1478 10)) (ite (and (not x377) x1333) (x149 (x1478 10)) (x50 (x1478 10)))))
(assert (= (ite (and x1004 (not x1421)) (x605 (x1478 41)) (x839 (x1478 41))) (x582 (x1478 41))))
(assert (= (x796 800) (x736 800)))
(assert (=> (< (- (x429 128) 1) 10000) (= (x1478 (x429 128)) (x1441 (x429 128)))))
(assert (= (x14 288) x1431))
(assert (= (x149 x390) (ite (= x425 x390) x434 (x638 x390))))
(assert (= (x1441 2316151882) (x1478 2316151882)))
(assert (= (x1478 1401663147) (x1441 1401663147)))
(assert (=> (< (- (x306 160) 1) 10000) (= (x1441 (x306 160)) (x1478 (x306 160)))))
(assert (x533 x1159))
(assert (= (x869 384) (x959 384)))
(assert (= (ite (and x558 (not x788)) (x509 x917) (x1114 x917)) (x672 x917)))
(assert (= (ite (and (not x377) x1333) (x959 384) (x721 384)) (x875 384)))
(assert (= (x959 320) (x869 320)))
(assert (x1309 (x762 160)))
(assert (x533 x777))
(assert (= x422 (=> (and (= (x435 416) x1361) (= x1040 (x856 (+ x1120 x571))) (= x646 (x433 640)) (= (< 0 x646) x1421) (= (x628 416) x345) (= (x165 768) x671)) (and (=> x1421 x348) (=> (not x1421) x1490)))))
(assert (= (x1197 384) 0))
(assert (x533 x513))
(assert (= (x480 352) (x189 352)))
(assert (= (and x555 (not x915)) x193))
(assert (x533 x1008))
(assert (= 1020253707 (x975 (x1478 1020253707))))
(assert (= (x23 x641) (ite (and (not x1057) x334 (not x1183)) (x871 x641) (x1386 x641))))
(assert (= (ite (and (not x1041) x235) (x941 x390) (x460 x390)) (x756 x390)))
(assert (x533 x1099))
(assert (= (=> (= (< 0 x405) x834) (and (=> (and (= (x856 (+ x492 32)) x1097) (= (ite (< x1099 32) x1099 32) x275) x834 (= (> x1330 0) x147) (= x492 (x1104 576)) (or (and (> 4294967296 x1290) x147) (not x147))) x685) (=> (not x834) x52))) x825))
(assert (= x1021 x1409))
(assert (= (=> (and (= (x194 352) x1037) (= x1134 (x194 320)) (= x1300 (> x1037 x1134))) (and (=> (not x1300) x1011) (=> x1300 x227))) x1319))
(assert (= (x801 352) (x591 352)))
(assert (x533 x556))
(assert (= (ite (and x235 (not x1041)) (x941 (x1478 40)) (x460 (x1478 40))) (x756 (x1478 40))))
(assert (x533 x988))
(assert (= (x871 704) x1039))
(assert (= x344 (=> (= (< 0 x1400) x953) (and (=> x953 x778) (=> (not x953) x52)))))
(assert (= (x1083 320) (x206 320)))
(assert (x533 x187))
(assert (= (x628 160) (x975 (x1441 (x628 160)))))
(assert (x533 x928))
(assert (= (x882 160) (x975 (x1441 (x882 160)))))
(assert (x533 x360))
(assert (= (x1478 274184521717934524641157099916833587200) (x1441 274184521717934524641157099916833587200)))
(assert (= (x975 (x1441 (x150 128))) (x150 128)))
(assert (x533 x1153))
(assert (= (x959 832) (x869 832)))
(assert (= (x23 640) (ite (and x334 (not x1057) (not x1183)) (x871 640) (x1386 640))))
(assert (x533 x1422))
(assert (= 3147386184 (x975 (x1478 3147386184))))
(assert (= (x768 896) (x924 896)))
(assert (= (and x834 x980) x13))
(assert (= (ite (= x1489 x491) x1040 (x1209 x1489)) (x605 x1489)))
(assert (= (ite (= x437 864) x1080 (x904 x437)) (x22 x437)))
(assert (=> (< (- (x304 160) 1) 10000) (= (x1478 (x304 160)) (x1441 (x304 160)))))
(assert (= (x754 352) (x1101 352)))
(assert (= (x1478 1823829273) (x1441 1823829273)))
(assert (= (+ 6 (x975 x1093)) (x975 (x378 x1093 6))))
(assert (x533 x676))
(assert (= (x1096 384) (x1217 384)))
(assert (x533 x881))
(assert (x533 x568))
(assert (= x1031 (and x677 x1077)))
(assert (= 629314576 (x975 (x1478 629314576))))
(assert (x533 x421))
(assert (= x990 x1409))
(assert (= (x756 (x1478 46)) (ite (and x235 (not x1041)) (x941 (x1478 46)) (x460 (x1478 46)))))
(assert (= x1271 (=> (and (= x536 (x433 704)) (= (= 0 x536) x540)) (and (=> x540 x52) (=> (not x540) x1281)))))
(assert (x533 x520))
(assert (= (x975 (x1441 (x1221 160))) (x1221 160)))
(assert (= (x1478 4267106866) (x1441 4267106866)))
(assert (= x470 (=> (and (= x550 (x525 (x1478 40))) (= (x150 896) x27) (= x686 (x1147 (- x988 x1141))) (= x1038 (> x27 x550))) (and (=> x1038 x52) (=> (not x1038) x67)))))
(assert (= x186 (and (not x458) x1433)))
(assert (x533 x148))
(assert (= (x1091 128) (x975 (x1441 (x1091 128)))))
(assert (= (x88 352) (x304 352)))
(assert (= (ite (and x1004 (not x1421)) (x605 x1232) (x839 x1232)) (x582 x1232)))
(assert (= 599290589 (x975 (x1478 599290589))))
(assert (= (and x1254 x1095) x677))
(assert (=> (> (+ 10000 1) (x962 160)) (= (x1478 (x962 160)) (x1441 (x962 160)))))
(assert (= (x1091 576) (x106 576)))
(assert (x533 x424))
(assert (= (x756 x765) (ite (and (not x1041) x235) (x941 x765) (x460 x765))))
(assert (= (x308 384) (x389 384)))
(assert (= (x1440 384) (x1082 384)))
(assert (= (x1221 320) (x16 320)))
(assert (= (x975 (x1478 861432679)) 861432679))
(assert (x533 x900))
(assert (= (x22 x57) (ite (= x57 864) x1080 (x904 x57))))
(assert (= (x768 800) (x924 800)))
(assert (= (x975 (x1478 3862337480)) 3862337480))
(assert (= (x388 128) (x975 (x1441 (x388 128)))))
(assert (= (=> (and (= (x90 288) x1394) (= (x378 x784 6) x698) (= x714 (- (/ x382 10000) (uninterp_frac x382 10000))) (= (< 0 x1261) x607) (= (x149 x698) x790) (= x784 (x570 (x1441 (x1026 128)) (x1441 (x1026 160)) 0)) (= (x149 (x1478 37)) x1261)) (and (=> (not x607) x961) (=> (and x607 (= x310 (x836 352))) x844))) x1464))
(assert (x1309 (x1442 128)))
(assert (x533 x64))
(assert (= (x1143 160) (x975 (x1441 (x1143 160)))))
(assert (= (x1217 x57) (ite (= x57 128) 16 (x1096 x57))))
(assert (= (x929 128) (x975 (x1441 (x929 128)))))
(assert (x1309 (x1414 160)))
(assert (x533 x1037))
(assert (= (x975 (x1478 1257916802)) 1257916802))
(assert (= (and (not x1027) x602) x259))
(assert (= (=> (and (= (x1413 224) x1307) (= (x149 (x1478 40)) x863) (= x180 (x856 (+ x1307 x863))) (= x223 (> x1307 x180))) (and (=> (not x223) x630) (=> x223 x52))) x123))
(assert (= (x591 384) (x801 384)))
(assert (= x723 (and x902 (not x1061))))
(assert (= (x1197 x437) 0))
(assert (x533 x336))
(assert (= (x1221 160) (x16 160)))
(assert (x1309 (x1414 128)))
(assert (x533 x1111))
(assert (x533 x1080))
(assert (x533 x1141))
(assert (= (x29 832) (x14 832)))
(assert (= (x975 (x1478 3491319510)) 3491319510))
(assert (= (x1185 352) (x172 352)))
(assert (x533 x454))
(assert (= (ite (= x425 x590) x434 (x638 x590)) (x149 x590)))
(assert (= x386 (and x322 x496)))
(assert (= (x1024 320) (x152 320)))
(assert (=> (< (- (x1370 160) 1) 10000) (= (x1441 (x1370 160)) (x1478 (x1370 160)))))
(assert (x533 x461))
(assert (= (=> (= (> x592 0) x1077) (and (=> (not x1077) x52) (=> x1077 x179))) x1430))
(assert (=> (> (+ 10000 1) (x1370 128)) (= (x1478 (x1370 128)) (x1441 (x1370 128)))))
(assert (= (x672 (x1478 43)) (ite (and x558 (not x788)) (x509 (x1478 43)) (x1114 (x1478 43)))))
(assert (=> (> (+ 10000 1) (x810 160)) (= (x1478 (x810 160)) (x1441 (x810 160)))))
(assert (= (x582 (x1478 44)) (ite (and (not x1421) x1004) (x605 (x1478 44)) (x839 (x1478 44)))))
(assert (= (x957 x437) (ite (= x437 832) x1431 (x1179 x437))))
(assert (x533 x266))
(assert (x1309 (x480 128)))
(assert (= x1284 (and x468 x675)))
(assert (= x1423 (or (and (not x786) x751) (and x546 x1010) (and (not x309) x307))))
(assert (x533 x1171))
(assert (= (and (not x1373) x1308) x313))
(assert (= (x836 384) (x1026 384)))
(assert (x533 x598))
(assert (x533 x125))
(assert (= (x1101 x641) (ite (= x641 192) 0 (x483 x641))))
(assert (x1309 (x1260 128)))
(assert (= (ite (and (not x1421) x1004) (x605 (x1478 10)) (x839 (x1478 10))) (x582 (x1478 10))))
(assert (x533 x12))
(assert (x533 x318))
(assert (x533 x1076))
(assert (= (ite (= x57 448) x1276 (x103 x57)) (x30 x57)))
(assert (= (x1143 128) (x975 (x1441 (x1143 128)))))
(assert (x533 x25))
(assert (= (x23 320) (ite (and x334 (not x1183) (not x1057)) (x871 320) (x1386 320))))
(assert (= (and x643 (not x118)) x307))
(assert (= 3567397854 (x975 (x1478 3567397854))))
(assert (x533 x646))
(assert (x533 x504))
(assert (x533 x48))
(assert (= x1392 (x959 896)))
(assert (= (x975 (x1441 (x1298 128))) (x1298 128)))
(assert (x533 x1070))
(assert (x533 x507))
(assert (x533 x1113))
(assert (= (ite (= x641 704) x1039 (x984 x641)) (x871 x641)))
(assert (= (x11 x57) (ite (and x414 x1190 (not x631)) (x273 x57) (x172 x57))))
(assert (x533 x837))
(assert (= (+ 2 (x975 x55)) (x975 (x378 x55 2))))
(assert (=> (> (+ 10000 1) (x480 128)) (= (x1478 (x480 128)) (x1441 (x480 128)))))
(assert (x533 x655))
(assert (= x298 (=> (and (= x538 (< x110 x1001)) (= x1001 (- (/ x718 1000000000000000000) (uninterp_frac x718 1000000000000000000)))) (and (=> (and (not x538) (= x891 (x1147 (- x110 x1001)))) x1079) (=> x538 x52)))))
(assert (= (x582 (x1478 43)) (ite (and (not x1421) x1004) (x605 (x1478 43)) (x839 (x1478 43)))))
(assert (= (or (and x238 x1204) x735) x800))
(assert (x533 x77))
(assert (= (x669 160) (x975 (x1441 (x669 160)))))
(assert (= x263 (and x356 (not x355))))
(assert (x533 x1400))
(assert (=> (< (- (x695 160) 1) 10000) (= (x1441 (x695 160)) (x1478 (x695 160)))))
(assert (x533 x205))
(assert (= (x1441 1977493762) (x1478 1977493762)))
(assert (= x1466 (or (and x453 x432) (and (not x1242) x1418))))
(assert (= (x810 352) (x286 352)))
(assert (x1309 x668))
(assert (x533 x1416))
(assert (x1309 (x1217 160)))
(assert (= (x1478 3296657447) (x1441 3296657447)))
(assert (= (x975 (x1441 (x429 160))) (x429 160)))
(assert (x1309 (x1250 160)))
(assert (= (ite (= x641 640) 2388873442 (x1091 x641)) (x106 x641)))
(assert (= (ite (= x57 192) x97 (x1101 x57)) (x754 x57)))
(assert (= x1341 (=> (and (= (= (ite x126 1 0) 0) x627) (= (x756 (x1478 46)) x1435) (= x612 (= x1159 0)) (= x126 (or x1191 x612)) (= (- (/ x1218 x1159) (uninterp_frac x1218 x1159)) x1152) (= (uninterp_mod (* x1435 x1159) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1218) (= x1191 (= x1152 x1435))) (and (=> (not x627) x940) (=> x627 x52)))))
(assert (x533 x974))
(assert (= (x975 (x1441 (x304 128))) (x304 128)))
(assert (= (and (not x246) x40) x1292))
(assert (x533 x124))
(assert (= (=> (and (= (x941 (x1478 15)) x833) (= x1080 (x904 800)) (= x894 (= x1243 0)) (= x1243 (x1062 (x1441 x833)))) (and (=> (and (or (and (= (= (x764 (x1441 x557)) x647) x80) (> 4294967296 x77) x561 x588 (= x648 (x1063 (x1441 274184521717934524641157099916833587200))) (= (x1063 (x1441 x557)) x647) x80 (= (>= (x764 (x1441 274184521717934524641157099916833587200)) x648) x561)) (not x588)) (= x588 (< 0 x336)) (not x894) (= (x941 (x1478 15)) x557)) x604) (=> x894 x52))) x944))
(assert (= (ite (and x1103 x895 (not x610)) (x552 352) (x957 352)) (x712 352)))
(assert (= (x712 x57) (ite (and x895 x1103 (not x610)) (x552 x57) (x957 x57))))
(assert (= (x975 (x1478 3544214205)) 3544214205))
(assert (x533 x293))
(assert (= (x1260 128) (x975 (x1441 (x1260 128)))))
(assert (x533 x1435))
(assert (= (x189 512) (x480 512)))
(assert (x533 x498))
(assert (= (x1151 160) (x975 (x1441 (x1151 160)))))
(assert (= (x1089 320) (x1143 320)))
(assert (= (x516 384) (x1059 384)))
(assert (x533 x647))
(assert (x533 x1315))
(assert (= (ite (= x328 704) x1039 (x984 x328)) (x871 x328)))
(assert (x533 x252))
(assert (= (x1441 596573372) (x1478 596573372)))
(assert (= x1390 (=> (and (= x989 (uninterp_mod (* 32 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x899 (x582 (x1478 45))) (= x329 (x582 x319)) (= (x1083 x328) x1131) (= (= x1131 x5) x1387) (= (x856 (+ x989 352)) x328) (= (x570 (x1441 (x861 128)) (x1441 (x861 160)) 0) x319) (= (x1083 256) x5) (= x615 (x1083 192))) (and (=> x1387 x817) (=> (not x1387) x634)))))
(assert (= (x975 (x1441 (x1260 160))) (x1260 160)))
(assert (x533 x687))
(assert (=> (< (- (x1094 128) 1) 10000) (= (x1478 (x1094 128)) (x1441 (x1094 128)))))
(assert (= (ite (= 320 x57) x746 (x929 x57)) (x161 x57)))
(assert (= x1054 (and (not x635) x263)))
(assert (= (ite (and (not x1183) (not x1057) x334) (x871 384) (x1386 384)) (x23 384)))
(assert (= (x1101 224) (x754 224)))
(assert (x533 x1176))
(assert (x533 x1335))
(assert (= (ite (= x641 128) 16 (x1089 x641)) (x1143 x641)))
(assert (x533 x374))
(assert (= (ite (= x425 x698) x434 (x638 x698)) (x149 x698)))
(assert (= 0 (x1197 320)))
(assert (x533 x857))
(assert (= (x975 (x1478 3208075701)) 3208075701))
(assert (x533 x8))
(assert (x533 x1266))
(assert (= x557 (x975 (x1441 x557))))
(assert (= (ite (= x100 x491) x1040 (x1209 x100)) (x605 x100)))
(assert (x533 x1240))
(assert (x533 x157))
(assert (= (x1478 31576340) (x1441 31576340)))
(assert (x533 x960))
(assert (= (=> (and (= (< x1301 x255) x217) (= (x672 (x1478 41)) x255)) (and (=> x217 x52) (=> (not x217) x918))) x1479))
(assert (= (=> (and (= x763 (or x1188 x1355)) (= x945 (x819 352)) (= x994 (x856 (+ x1307 x863))) (= x1188 (= x282 x945)) (= x416 (= (ite x763 1 0) 0)) (= (= 0 x289) x1355) (= x282 (- (/ x382 x289) (uninterp_frac x382 x289))) (= (uninterp_mod (* x945 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x382)) (and (=> (not x416) x1464) (=> x416 x52))) x630))
(assert (= (x509 x1202) (ite (and x1333 (not x377)) (x149 x1202) (x50 x1202))))
(assert (= x3 (=> (and (= (x149 x1489) x988) (= x1141 (x150 896)) (= x579 (x570 (x1441 (x150 128)) (x1441 (x150 160)) 0)) (= x1448 (> x1141 x988)) (= (x378 x579 6) x1489)) (and (=> (not x1448) x470) (=> x1448 x52)))))
(assert (x533 x232))
(assert (x533 x798))
(assert (= (+ (x975 x1109) 2) (x975 (x378 x1109 2))))
(assert (= (x1478 2869116585) (x1441 2869116585)))
(assert (= (and (not x1387) x1163) x658))
(assert (= (x9 160) (x975 (x1441 (x9 160)))))
(assert (= (ite (and x558 (not x788)) (x509 x910) (x1114 x910)) (x672 x910)))
(assert (= (=> (and (= x1389 (x748 288)) (= (x941 x82) x1222) (= (< 0 x681) x1061) (= (x941 (x1478 37)) x681) (= x252 (- (/ x1299 10000) (uninterp_frac x1299 10000))) (= (x570 (x1441 (x669 128)) (x1441 (x669 160)) 0) x481) (= x82 (x378 x481 6))) (and (=> (not x1061) x1319) (=> (and x1061 (= (x194 352) x1328)) x1011))) x1107))
(assert (= (x975 (x378 x376 3)) (+ 3 (x975 x376))))
(assert (= (ite (and (not x1041) x235) (x941 (x1478 47)) (x460 (x1478 47))) (x756 (x1478 47))))
(assert (= (ite (= x491 x765) x1040 (x1209 x765)) (x605 x765)))
(assert (x533 x994))
(assert (x533 x443))
(assert (x533 x72))
(assert (= (+ (x975 x562) 1) (x975 (x378 x562 1))))
(assert (x533 x1290))
(assert (x533 x855))
(assert (= (ite (= x1232 x491) x1040 (x1209 x1232)) (x605 x1232)))
(assert (= (x14 320) (x29 320)))
(assert (= (x975 (x1478 2484372501)) 2484372501))
(assert (= (x1091 320) (x106 320)))
(assert (= (=> (= x1275 (< 31 x474)) (and (=> (not x1275) x52) (=> x1275 x365))) x1434))
(assert (= (x194 x437) (ite (= x437 352) x1222 (x669 x437))))
(assert (= (+ 6 (x975 x831)) (x975 (x378 x831 6))))
(assert (x533 x398))
(assert (x533 x478))
(assert (x533 x827))
(assert (= (x1083 192) 0))
(assert (= (x23 x437) (ite (and (not x1057) (not x1183) x334) (x871 x437) (x1386 x437))))
(assert (= (x975 (x1478 464926286)) 464926286))
(assert (= 2052391781 (x975 (x1478 2052391781))))
(assert (= (x669 864) (x194 864)))
(assert (= x332 (and x1292 x772)))
(assert (=> (> (+ 10000 1) (x152 128)) (= (x1478 (x152 128)) (x1441 (x152 128)))))
(assert (x533 x299))
(assert (x533 x718))
(assert (= (ite (= (x1478 41) x425) x434 (x638 (x1478 41))) (x149 (x1478 41))))
(assert (x533 x899))
(assert (= (x88 x328) (ite (= x328 288) x775 (x304 x328))))
(assert (x533 x1453))
(assert (x533 x874))
(assert (= 3877814014 (x975 (x1478 3877814014))))
(check-sat)
